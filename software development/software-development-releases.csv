,Draft,Prerelease,Created_at,Published_at,Details,Id
0,False,False,2020-03-20T13:13:46Z,2020-03-20T13:15:14Z,"* Fixed a SyntaxError ""'return' with argument inside generator"" for PIO Unified Debugger when Python 2.7 is used
* Fixed an issue when ``lib_archive = no`` was not honored in [""platformio.ini""](https://docs.platformio.org/page/projectconf.html)
* Fixed a TypeError ""super(type, obj): obj must be an instance or subtype of type"" when device monitor is used with a custom dev-platform filter ([issue #3431](https://github.com/platformio/platformio-core/issues/3431))",19606299
1,False,False,2020-03-19T20:38:05Z,2020-03-19T20:45:04Z,"* Initial support for an official [PlatformIO for CLion IDE](https://docs.platformio.org/page/integration/ide/clion.html) plugin:

  - Smart C and C++ editor
  - Code refactoring
  - On-the-fly code analysis
  - ""New PlatformIO Project"" wizard
  - Building, Uploading, Testing
  - Integrated debugger (inline variable view, conditional breakpoints, expressions, watchpoints, peripheral registers, multi-thread support, etc.)

* [Device Monitor 2.0](https://docs.platformio.org/page/core/userguide/device/cmd_monitor.html)

  - Added **PlatformIO Device Monitor Filter API** (dev-platforms can extend base device monitor with a custom functionality, such as exception decoding) ([pull #3383](https://github.com/platformio/platformio-core/pull/3383))
  - Configure project device monitor with [monitor_filters](https://docs.platformio.org/page/projectconf/section_env_monitor.html#monitor-filters) option
  - [Capture device monitor output to a file](https://docs.platformio.org/page/core/userguide/device/cmd_monitor.html#capture-output-to-a-file) with ``log2file`` filter ([issue #670](https://github.com/platformio/platformio-core/issues/670))
  - Show a timestamp for each new line with ``time`` filter ([issue #981](https://github.com/platformio/platformio-core/issues/981))
  - Send a text to device on ENTER with ``send_on_enter`` filter ([issue #926](https://github.com/platformio/platformio-core/issues/926))
  - Show a hexadecimal representation of the data (code point of each character) with ``hexlify`` filter

* New standalone (1-script) [PlatformIO Core Installer](https://github.com/platformio/platformio-core-installer)
* Initial support for [Renode](https://docs.platformio.org/page/plus/debug-tools/renode.html) simulation framework ([issue #3401](https://github.com/platformio/platformio-core/issues/3401))
* Added support for Arm Mbed ""module.json"" ``dependencies`` field ([issue #3400](https://github.com/platformio/platformio-core/issues/3400))
* Improved support for Arduino ""library.properties"" ``depends`` field
* Fixed an issue when quitting from PlatformIO IDE does not shutdown PIO Home server
* Fixed an issue ""the JSON object must be str, not 'bytes'"" when PIO Home is used with Python 3.5 ([issue #3396](https://github.com/platformio/platformio-core/issues/3396))
* Fixed an issue when Python 2 does not keep encoding when converting "".ino"" ([issue #3393](https://github.com/platformio/platformio-core/issues/3393))
* Fixed an issue when ``""libArchive"": false`` in ""library.json"" does not work ([issue #3403](https://github.com/platformio/platformio-core/issues/3403))
* Fixed an issue when not all commands in [compilation database ""compile_commands.json""](https://docs.platformio.org/page/integration/compile_commands.html) use absolute paths ([pull #3415](https://github.com/platformio/platformio-core/pull/3415))
* Fixed an issue when unknown transport is used for [PIO Unit Testing](https://docs.platformio.org/page/plus/unit-testing.html) engine ([issue #3422](https://github.com/platformio/platformio-core/issues/3422))",19606299
2,False,False,2020-02-17T12:25:27Z,2020-02-17T12:27:01Z,"* Improved VSCode template with special ``forceInclude`` field for direct includes via ``-include`` flag ([issue #3379](https://github.com/platformio/platformio-core/issues/3379))
* Improved support of PIO Home on card-sized PC (Raspberry Pi, etc.) ([issue #3313](https://github.com/platformio/platformio-core/issues/3313))
* Froze ""marshmallow"" dependency to 2.X for Python 2 ([issue #3380](https://github.com/platformio/platformio-core/issues/3380))
* Fixed ""TypeError: unsupported operand type(s)"" when system environment variable is used by project configuration parser ([issue #3377](https://github.com/platformio/platformio-core/issues/3377))
* Fixed an issue when Library Dependency Finder (LDF) ignores custom ""libLDFMode"" and ""libCompatMode"" options in [library.json](http://docs.platformio.org/page/librarymanager/config.html)
* Fixed an issue when generating of compilation database ""compile_commands.json"" does not work with Python 2.7 ([issue #3378](https://github.com/platformio/platformio-core/issues/3378))
",19606299
3,False,False,2020-02-12T14:42:13Z,2020-02-12T14:54:11Z,"* [PlatformIO Home 3.1](http://docs.platformio.org/page/home/index.html):

  - Project Manager
  - Project Configuration UI for [""platformio.ini""](https://docs.platformio.org/page/projectconf.html)

* [PIO Check](http://docs.platformio.org/page/plus/pio-check.html) – automated code analysis without hassle:

  - Added support for [PVS-Studio](https://docs.platformio.org/page/plus/check-tools/pvs-studio.html) static code analyzer

* Initial support for [Project Manager](https://docs.platformio.org/page/userguide/project/index.html) CLI:

  - Show computed project configuration with a new [platformio project config](https://docs.platformio.org/page/userguide/project/cmd_config.html) command or dump to JSON with ``platformio project config --json-output`` ([issue #3335](https://github.com/platformio/platformio-core/issues/3335))
  - Moved ``platformio init`` command to [platformio project init](https://docs.platformio.org/page/userguide/project/cmd_init.html)

* Generate [compilation database ""compile_commands.json""](https://docs.platformio.org/page/faq.html#compilation-database-compile-commands-json) ([issue #2990](https://github.com/platformio/platformio-core/issues/2990))
* Control debug flags and optimization level with a new [debug_build_flags](https://docs.platformio.org/page/projectconf/section_env_debug.html#debug-build-flags) option
* Install a dev-platform with ALL declared packages using a new ``--with-all-packages`` option for [pio platform install](https://docs.platformio.org/page/userguide/platforms/cmd_install.html) command  ([issue #3345](https://github.com/platformio/platformio-core/issues/3345))
* Added support for ""pythonPackages"" in [platform.json](https://docs.platformio.org/page/platforms/creating_platform.html#manifest-file-platform-json) manifest (PlatformIO Package Manager will install dependent Python packages from PyPi registry automatically when dev-platform is installed)
* Handle project configuration (monitor, test, and upload options) for PIO Remote commands ([issue #2591](https://github.com/platformio/platformio-core/issues/2591))
* Added support for Arduino's library.properties ``depends`` field ([issue #2781](https://github.com/platformio/platformio-core/issues/2781))
* Autodetect monitor port for boards with specified HWIDs ([issue #3349](https://github.com/platformio/platformio-core/issues/3349))
* Updated SCons tool to 3.1.2
* Updated Unity tool to 2.5.0
* Made package ManifestSchema compatible with marshmallow >= 3 ([issue #3296](https://github.com/platformio/platformio-core/issues/3296))
* Warn about broken library manifest when scanning dependencies ([issue #3268](https://github.com/platformio/platformio-core/issues/3268))
* Do not overwrite custom items in VSCode's ""extensions.json"" ([issue #3374](https://github.com/platformio/platformio-core/issues/3374))
* Fixed an issue when ``env.BoardConfig()`` does not work for custom boards in extra scripts of libraries ([issue #3264](https://github.com/platformio/platformio-core/issues/3264))
* Fixed an issue with ""start-group/end-group"" linker flags on Native development platform ([issue #3282](https://github.com/platformio/platformio-core/issues/3282))
* Fixed default PIO Unified Debugger configuration for [J-Link probe](http://docs.platformio.org/page/plus/debug-tools/jlink.html)
* Fixed an issue with LDF when header files not found if ""libdeps_dir"" is within a subdirectory of ""lib_extra_dirs"" ([issue #3311](https://github.com/platformio/platformio-core/issues/3311))
* Fixed an issue ""Import of non-existent variable 'projenv''"" when development platform does not call ""env.BuildProgram()"" ([issue #3315](https://github.com/platformio/platformio-core/issues/3315))
* Fixed an issue when invalid CLI command does not return non-zero exit code
* Fixed an issue when Project Inspector crashes when flash use > 100% ([issue #3368](https://github.com/platformio/platformio-core/issues/3368))
* Fixed a ""UnicodeDecodeError"" when listing built-in libraries on macOS with Python 2.7 ([issue #3370](https://github.com/platformio/platformio-core/issues/3370))
* Fixed an issue with improperly handled compiler flags with space symbols in VSCode template ([issue #3364](https://github.com/platformio/platformio-core/issues/3364))
* Fixed an issue when no error is raised if referred parameter (interpolation) is missing in a project configuration file ([issue #3279](https://github.com/platformio/platformio-core/issues/3279))",19606299
4,False,False,2019-11-07T14:54:21Z,2019-11-07T15:01:25Z,"* [PIO Check](http://docs.platformio.org/page/plus/pio-check.html) – automated code analysis without hassle:
  - Potential NULL pointer dereferences
  - Possible indexing beyond array bounds
  - Suspicious assignments
  - Reads of potentially uninitialized objects
  - Unused variables or functions
  - Out of scope memory usage.
* [PlatformIO Home 3.0](http://docs.platformio.org/page/home/index.html) and Project Inspection
  - Static Code Analysis
  - Firmware File Explorer
  - Firmware Memory Inspection
  - Firmware Sections & Symbols Viewer.
* Added support for [Build Middlewares](http://docs.platformio.org/page/projectconf/advanced_scripting.html#build-middlewares): configure custom build flags per specific file, skip any build nodes from a framework, replace build file with another on-the-fly, etc.
* Extend project environment configuration in ""platformio.ini"" with other sections using a new [extends](http://docs.platformio.org/page/projectconf/section_env_advanced.html#extends) option ([issue #2953](https://github.com/platformio/platformio-core/issues/2953))
* Generate ``.ccls`` LSP file for [Emacs](https://docs.platformio.org/page/ide/emacs.html) cross references, hierarchies, completion and semantic highlighting
* Added ``--no-ansi`` flag for [PIO Core](http://docs.platformio.org/page/userguide/index.html) to disable ANSI control characters
* Added ``--shutdown-timeout`` option to [PIO Home Server](http://docs.platformio.org/page/userguide/cmd_home.html)
* Fixed an issue with project generator for [CLion IDE](http://docs.platformio.org/page/ide/clion.html) when 2 environments were used ([issue #2824](https://github.com/platformio/platformio-core/issues/2824))
* Fixed default PIO Unified Debugger configuration for [J-Link probe](http://docs.platformio.org/page/plus/debug-tools/jlink.html)
* Fixed an issue when configuration file options partly ignored when using custom ``--project-conf`` ([issue #3034](https://github.com/platformio/platformio-core/issues/3034))
* Fixed an issue when installing a package using custom Git tag and submodules were not updated correctly ([issue #3060](https://github.com/platformio/platformio-core/issues/3060))
* Fixed an issue with linking process when ``$LDSCRIPT`` contains a space in path
* Fixed security issue when extracting items from TAR archive ([issue #2995](https://github.com/platformio/platformio-core/issues/2995))
* Fixed an issue with project generator when ``src_build_flags`` were not respected ([issue #3137](https://github.com/platformio/platformio-core/issues/3137))
* Fixed an issue when booleans in ""platformio.ini"" are not parsed properly ([issue #3022](https://github.com/platformio/platformio-core/issues/3022))
* Fixed an issue with invalid encoding when generating project for Visual Studio ([issue #3183](https://github.com/platformio/platformio-core/issues/3183))
* Fixed an issue when Project Config Parser does not remove in-line comments when Python 3 is used ([issue #3213](https://github.com/platformio/platformio-core/issues/3213))
* Fixed an issue with a GCC Linter for PlatformIO IDE for Atom ([issue #3218](https://github.com/platformio/platformio-core/issues/3218))",19606299
5,False,False,2019-08-30T12:41:59Z,2019-08-30T12:53:31Z,"* Added support for multi-environment PlatformIO project for [CLion IDE](http://docs.platformio.org/page/ide/clion.html) ([issue #2824](https://github.com/platformio/platformio-core/issues/2824))
* Generate ``.ccls`` LSP file for [Vim](http://docs.platformio.org/en/page/vim.html) cross references, hierarchies, completion and semantic highlighting ([issue #2952](https://github.com/platformio/platformio-core/issues/2952))
* Added support for [PLATFORMIO_DISABLE_COLOR](http://docs.platformio.org/page/envvars.html#envvar-PLATFORMIO_DISABLE_COLOR) system environment variable which disables color ANSI-codes in a terminal output ([issue #2956](https://github.com/platformio/platformio-core/issues/2956))
* Updated SCons tool to 3.1.1
* Remove ProjectConfig cache when ""platformio.ini"" was modified outside
* Fixed an issue with PIO Unified Debugger on Windows OS when debug server is piped
* Fixed an issue when [--upload-port](http://docs.platformio.org/page/userguide/cmd_run.html#cmdoption-platformio-run-upload-port) CLI flag does not override declared  [upload_port](http://docs.platformio.org/page/projectconf/section_env_upload.html#upload-port) option in [""platformio.ini"" (Project Configuration File)](https://docs.platformio.org/page/projectconf.html)",19606299
6,False,False,2019-08-23T13:24:28Z,2019-08-23T13:26:53Z,* Fixed an issue with a broken [LDF](http://docs.platformio.org/page/librarymanager/ldf.html) when checking for framework compatibility [issue #2940](https://github.com/platformio/platformio-core/issues/2940),19606299
7,False,False,2019-08-22T11:25:40Z,2019-08-22T11:29:09Z,"* Print [debug tool](http://docs.platformio.org/page/plus/debugging.html#tools-debug-probes) name for the active debugging session
* Do not shutdown PIO Home Server for ""upgrade"" operations ([issue #2784](https://github.com/platformio/platformio-core/issues/2784))
* Improved computing of project check sum (structure, configuration) and avoid unnecessary rebuilding
* Improved printing of tabulated results
* Automatically normalize file system paths to UNIX-style for Project Generator ([issue #2857](https://github.com/platformio/platformio-core/issues/2857))
* Ability to set ""databaseFilename"" for VSCode and C/C++ extension ([issue #2825](https://github.com/platformio/platformio-core/issues/2825))
* Renamed ""enable_ssl"" setting to [strict_ssl](http://docs.platformio.org/page/userguide/cmd_settings.html#strict-ssl)
* Fixed an issue with incorrect escaping of Windows slashes when using [PIO Unified Debugger](http://docs.platformio.org/page/plus/debugging.html) and ""piped"" openOCD
* Fixed an issue when ""debug"", ""home"", ""run"", and ""test"" commands were not shown in ""platformio --help"" CLI
* Fixed an issue with PIO Home's ""No JSON object could be decoded"" ([issue #2823](https://github.com/platformio/platformio-core/issues/2823))
* Fixed an issue when [library.json](http://docs.platformio.org/page/librarymanager/config.html) had priority over project configuration for [LDF](http://docs.platformio.org/page/librarymanager/ldf.html) ([issue #2867](https://github.com/platformio/platformio-core/issues/2867))",19606299
8,False,False,2019-07-10T13:22:53Z,2019-07-10T13:32:34Z,"[Migration Guide from 3.0 to 4.0](http://docs.platformio.org/page/migration.html).

* [PlatformIO Plus Goes Open Source](https://community.platformio.org/t/platformio-plus-goes-open-source-improving-embedded-development-community-worldwide/8240/4)

  - Built-in [PIO Unified Debugger](http://docs.platformio.org/page/plus/debugging.html)
  - Built-in [PIO Unit Testing](http://docs.platformio.org/page/plus/unit-testing.html)

* **Project Configuration**

  - New project configuration parser with a strict options typing ([API](https://github.com/platformio/platformio-core/blob/develop/platformio/project/options.py))
  - Unified workspace storage ([workspace_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#workspace-dir) -> ``.pio``) for PlatformIO Build System, Library Manager, and other internal services ([issue #1778](https://github.com/platformio/platformio-core/issues/1778))
  - Share common (global) options between project environments using [[env]](http://docs.platformio.org/page/projectconf/section_env.html#global-scope-env) section ([issue #1643](https://github.com/platformio/platformio-core/issues/1643))
  - Include external configuration files with [extra_configs](http://docs.platformio.org/page/projectconf/section_platformio.html#extra-configs) option ([issue #1590](https://github.com/platformio/platformio-core/issues/1590))
  - Custom project ``***_dir`` options declared in [platformio](http://docs.platformio.org/page/projectconf/section_platformio.html) section have higher priority than [Environment variables](http://docs.platformio.org/page/envvars.html)
  - Added support for Unix shell-style wildcards for [monitor_port](http://docs.platformio.org/page/projectconf/section_env_monitor.html#monitor-port) option ([issue #2541](https://github.com/platformio/platformio-core/issues/2541))
  - Added new [monitor_flags](http://docs.platformio.org/page/projectconf/section_env_monitor.html#monitor-flags) option which allows passing extra flags and options to [platformio device monitor](http://docs.platformio.org/page/userguide/cmd_device.html#cmd-device-monitor) command ([issue #2165](https://github.com/platformio/platformio-core/issues/2165))
  - Added support for [PLATFORMIO_DEFAULT_ENVS](http://docs.platformio.org/page/envvars.html#envvar-PLATFORMIO_DEFAULT_ENVS) system environment variable ([issue #1967](https://github.com/platformio/platformio-core/issues/1967))
  - Added support for [shared_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#shared-dir) where you can place an extra files (extra scripts, LD scripts, etc.) which should be transferred to a [PIO Remote](http://docs.platformio.org/page/plus/pio-remote.html) machine

* **Library Management**

  - Switched to workspace ``.pio/libdeps`` folder for project dependencies instead of ``.piolibdeps``
  - Save libraries passed to [platformio lib install](http://docs.platformio.org/page/userguide/lib/cmd_install.html) command into the project dependency list ([lib_deps](http://docs.platformio.org/page/projectconf/section_env_library.html#lib-deps)) with a new ``--save`` flag ([issue #1028](https://github.com/platformio/platformio-core/issues/1028))
  - Install all project dependencies declared via [lib_deps](http://docs.platformio.org/page/projectconf/section_env_library.html#lib-deps) option using a simple [platformio lib install](http://docs.platformio.org/page/userguide/lib/cmd_install.html) command ([issue #2147](https://github.com/platformio/platformio-core/issues/2147))
  - Use isolated library dependency storage per project build environment ([issue #1696](https://github.com/platformio/platformio-core/issues/1696))
  - Look firstly in built-in library storages for a missing dependency instead of PlatformIO Registry ([issue #1654](https://github.com/platformio/platformio-core/issues/1654))
  - Override default source and include directories for a library via [library.json](http://docs.platformio.org/page/librarymanager/config.html) manifest using ``includeDir`` and ``srcDir`` fields
  - Fixed an issue when library keeps reinstalling for non-latin path ([issue #1252](https://github.com/platformio/platformio-core/issues/1252))
  - Fixed an issue when [lib_compat_mode = strict](http://docs.platformio.org/page/librarymanager/ldf.html#ldf-compat-mode) does not ignore libraries incompatible with a project framework

* **Build System**

  - Switched to workspace ``.pio/build`` folder for build artifacts instead of ``.pioenvs``
  - Switch between [Build Configurations](http://docs.platformio.org/page/projectconf/build_configurations.html) (``release`` and ``debug``) with a new project configuration option [build_type](http://docs.platformio.org/page/projectconf/section_env_build.html#build-type)
  - Custom [platform_packages](http://docs.platformio.org/page/projectconf/section_env_general.html#platform) per a build environment with an option to override default ([issue #1367](https://github.com/platformio/platformio-core/issues/1367))
  - Print platform package details, such as version, VSC source and commit ([issue #2155](https://github.com/platformio/platformio-core/issues/2155))
  - Control a number of parallel build jobs with a new [-j, --jobs](http://docs.platformio.org/page/userguide/cmd_run.html#cmdoption-platformio-run-j) option
  - Override default [""platformio.ini"" (Project Configuration File)](https://docs.platformio.org/page/projectconf.html) with a custom using ``-c, --project-conf`` option for [platformio run](http://docs.platformio.org/page/userguide/cmd_run.html), [platformio debug](http://docs.platformio.org/page/userguide/cmd_debug.html), or [platformio test](http://docs.platformio.org/page/userguide/cmd_test.html) commands ([issue #1913](https://github.com/platformio/platformio-core/issues/1913))
  - Override default development platform upload command with a custom [upload_command](http://docs.platformio.org/page/projectconf/section_env_upload.html#upload-command) ([issue #2599](https://github.com/platformio/platformio-core/issues/2599))
  - Configure a shared folder for the derived files (objects, firmwares, ELFs) from a build system using [build_cache_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#build-cache-dir) option ([issue #2674](https://github.com/platformio/platformio-core/issues/2674))
  - Fixed an issue when ``-U`` in ``build_flags`` does not remove macro previously defined via ``-D`` flag ([issue #2508](https://github.com/platformio/platformio-core/issues/2508))

* **Infrastructure**

  - Python 3 support ([issue #895](https://github.com/platformio/platformio-core/issues/895))
  - Significantly speedup back-end for PIO Home. It works super fast now!
  - Added support for the latest Python ""Click"" package (CLI) ([issue #349](https://github.com/platformio/platformio-core/issues/349))
  - Added options to override default locations used by PlatformIO Core ([core_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#core-dir), [globallib_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#globallib-dir), [platforms_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#platforms-dir), [packages_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#packages-dir), [cache_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#cache-dir)) ([issue #1615](https://github.com/platformio/platformio-core/issues/1615))
  - Removed line-buffering from [platformio run](http://docs.platformio.org/page/userguide/cmd_run.html) command which was leading to omitting progress bar from upload tools ([issue #856](https://github.com/platformio/platformio-core/issues/856))
  - Fixed numerous issues related to ""UnicodeDecodeError"" and international locales, or when project path contains non-ASCII chars ([issue #143](https://github.com/platformio/platformio-core/issues/143), [issue #1342](https://github.com/platformio/platformio-core/issues/1342), [issue #1959](https://github.com/platformio/platformio-core/issues/1959), [issue #2100](https://github.com/platformio/platformio-core/issues/2100))

* **Integration**

  - Support custom CMake configuration for CLion IDE using ``CMakeListsUser.txt`` file
  - Fixed an issue with hardcoded C standard version when generating project for CLion IDE ([issue #2527](https://github.com/platformio/platformio-core/issues/2527))
  - Fixed an issue with Project Generator when an include path search order is inconsistent to what passed to the compiler ([issue #2509](https://github.com/platformio/platformio-core/issues/2509))
  - Fixed an issue when generating invalid ""Eclipse CDT Cross GCC Built-in Compiler Settings"" if a custom [PLATFORMIO_CORE_DIR](http://docs.platformio.org/page/envvars.html#envvar-PLATFORMIO_CORE_DIR) is used ([issue #806](https://github.com/platformio/platformio-core/issues/806))

* **Miscellaneous**

  - Deprecated ``--only-check`` PlatformIO Core CLI option for ""update"" sub-commands, please use ``--dry-run`` instead
  - Fixed ""systemd-udevd"" warnings in [99-platformio-udev.rules](http://docs.platformio.org/page/faq.html#platformio-udev-rules) ([issue #2442](https://github.com/platformio/platformio-core/issues/2442))
  - Fixed an issue when package cache (Library Manager) expires too fast ([issue #2559](https://github.com/platformio/platformio-core/issues/2559))",19606299
9,False,False,2019-04-23T09:47:27Z,2019-04-23T09:56:04Z,"* [PIO Unified Debugger](https://docs.platformio.org/page/plus/debugging.html): improved debugging in ``debug_load_mode = modified`` and fixed an issue with useless project rebuilding
* Project Generator: fixed a VSCode C/C++'s ""Cannot find"" warning when CPPPATH folder does not exist
* Fixed an ""IndexError: list index out of range"" for Arduino sketch preprocessor ([issue #2268](https://github.com/platformio/platformio-core/issues/2268))
* Fixed an issue when invalid ""env_default"" in [""platformio.ini"" (Project Configuration File)](https://docs.platformio.org/page/projectconf.html) results into unhandled errors ([issue #2265](https://github.com/platformio/platformio-core/issues/2265))",19606299
10,False,False,2019-04-01T18:55:22Z,2019-04-01T18:55:41Z,"* Project Generator: fixed a warning ""Property !!! WARNING !!! is not allowed"" for VSCode ([issue #2243](https://github.com/platformio/platformio-core/issues/2243))
* Fixed an issue when PlatformIO Build System does not pick up ""mbed_lib.json"" files from libraries ([issue #2164](https://github.com/platformio/platformio-core/issues/2164))
* Fixed an error with conflicting declaration of a prototype (Arduino sketch preprocessor)
* Fixed ""FileExistsError"" when [platformio ci](https://docs.platformio.org/en/latest/userguide/cmd_ci.html) command is used in pair with ``--keep-build-dir`` option
* Fixed an issue with incorrect order of project ""include"" and ""src"" paths in ``CPPPATH`` ([issue #1914](https://github.com/platformio/platformio-core/issues/1914))",19606299
11,False,False,2019-04-01T18:52:11Z,2019-04-01T18:53:31Z,"* Project Generator: added new targets for [CLion IDE](http://docs.platformio.org/en/latest/ide/clion.html) ""BUILD_VERBOSE"" and ""MONITOR"" (serial port monitor) ([issue #359](https://github.com/platformio/platformio-core/issues/359))
* Fixed an issue with slow updating of PlatformIO Core packages on Windows
* Fixed an issue when [platformio ci](https://docs.platformio.org/en/latest/userguide/cmd_ci.html) recompiles project if ``--keep-build-dir`` option is passed ([issue #2109](https://github.com/platformio/platformio-core/issues/2109))
* Fixed an issue when ``$PROJECT_HASH`` template was not expanded for the other directory ``***_dir`` options in [""platformio.ini"" (Project Configuration File)](https://docs.platformio.org/page/projectconf.html) ([issue #2170](https://github.com/platformio/platformio-core/issues/2170))",19606299
12,False,False,2019-01-23T18:51:48Z,2019-01-23T18:58:43Z,"* Improved Project Generator for [Desktop IDEs](https://docs.platformio.org/en/latest/ide.html):
  - Use full path to PlatformIO CLI when generating a project ([issue #1674](https://github.com/platformio/platformio-core/issues/1674))
  - [CLion](https://docs.platformio.org/en/latest/ide/clion.html): Improved project portability using ""${CMAKE_CURRENT_LIST_DIR}"" instead of full path
  - [Eclipse](https://docs.platformio.org/en/latest/ide/eclipse.html): Provide language standard to a project C/C++ indexer ([issue #1010](https://github.com/platformio/platformio-core/issues/1010))
* Fixed an issue with incorrect detecting of compatibility (LDF) between generic library and Arduino or ARM mbed frameworks
* Fixed ""Runtime Error: Dictionary size changed during iteration"" ([issue #2003](https://github.com/platformio/platformio-core/issues/2003))
* Fixed an error ""Could not extract item..."" when extracting TAR archive with symbolic items on Windows platform ([issue #2015](https://github.com/platformio/platformio-core/issues/2015))",19606299
13,False,False,2018-12-12T14:19:25Z,2018-12-12T14:23:30Z,"* Ignore *.asm and *.ASM files when building Arduino-based library (compatibility with Arduino builder)
* Fixed spurious project's ""Problems"" for [PlatformIO IDE for VSCode](http://docs.platformio.org/page/ide/vscode.html) when ARM mbed framework is used
* Fixed an issue with a broken headers list when generating "".clang_complete"" for [Emacs](http://docs.platformio.org/page/ide/emacs.html) ([issue #1960](https://github.com/platformio/platformio-core/issues/1960))",19606299
14,False,False,2018-11-29T16:02:58Z,2018-11-29T16:08:49Z,"* Improved IntelliSense for [PlatformIO IDE for VSCode](http://docs.platformio.org/page/ide/vscode.html) via passing extra compiler information for C/C++ Code Parser (resolves issues with spurious project's ""Problems"")
* Fixed an issue with VSCode IntelliSense warning about the missed headers located in [include](http://docs.platformio.org/page/projectconf/section_platformio.html#include-dir) folder
* Fixed incorrect wording when initializing/updating project
* Fixed an issue with incorrect order for library dependencies ``CPPPATH`` ([issue #1914](https://github.com/platformio/platformio-core/issues/1914))
* Fixed an issue when Library Dependency Finder (LDF) does not handle project [src_filter](http://docs.platformio.org/page/projectconf/section_env_build.html#src-filter) ([issue #1905](https://github.com/platformio/platformio-core/issues/1905))
* Fixed an issue when Library Dependency Finder (LDF) finds spurious dependencies in ``chain+`` and ``deep+`` modes ([issue #1930](https://github.com/platformio/platformio-core/issues/1930))",19606299
15,False,False,2018-10-29T12:10:57Z,2018-10-29T12:14:07Z,"* Generate an [include](http://docs.platformio.org/page/projectconf/section_platformio.html#include-dir) and [test](http://docs.platformio.org/page/projectconf/section_platformio.html#test-dir) directories with a README file when initializing a new project
* Support in-line comments for multi-line value (``lib_deps``, ``build_flags``, etc) in [“platformio.ini” (Project Configuration File)](https://docs.platformio.org/page/projectconf.html)
* Added ``$PROJECT_HASH`` template variable for [build_dir](http://docs.platformio.org/en/latest/projectconf/section_platformio.html#projectconf-pio-build-dir). One of the use cases is setting a global storage for project artifacts using [PLATFORMIO_BUILD_DIR](http://docs.platformio.org/en/latest/envvars.html#envvar-PLATFORMIO_BUILD_DIR) system environment variable. For example, ``/tmp/pio-build/$PROJECT_HASH`` (Unix) or ``%TEMP%/pio-build/$PROJECT_HASH`` (Windows)
* Improved a loading speed of PIO Home ""Recent News""
* Improved [PIO Unified Debugger](https://docs.platformio.org/en/page/plus/debugging.html) for ""mbed"" framework and fixed issue with missed local variables
* Introduced [""Release"" and ""Debug"" Build Configurations](http://docs.platformio.org/page/projectconf/build_configurations.html)
* Build project in ""Debug Mode"" including debugging information with a new ``debug`` target using [platformio run](https://docs.platformio.org/page/userguide/cmd_run.html) command or [targets](http://docs.platformio.org/page/projectconf/section_env_general.html#targets) option in ``platformio.ini``. The last option allows avoiding project rebuilding between ""Run/Debug"" modes. ([issue #1833](https://github.com/platformio/platformio-core/issues/1833))
* Process ``build_unflags`` for the cloned environment when building a static library
* Report on outdated [99-platformio-udev.rules](http://docs.platformio.org/page/faq.html#platformio-udev-rules) ([issue #1823](https://github.com/platformio/platformio-core/issues/1823))
* Show a valid error when the Internet is off-line while initializing a new project ([issue #1784](https://github.com/platformio/platformio-core/issues/1784))
* Do not re-create "".gitignore"" and "".travis.yml"" files if they were removed from a project
* Fixed an issue when dynamic build flags were not handled correctly ([issue #1799](https://github.com/platformio/platformio-core/issues/1799))
* Fixed an issue when ``pio run -t monitor`` always uses the first ``monitor_port`` even with multiple environments ([issue #1841](https://github.com/platformio/platformio-core/issues/1841))
* Fixed an issue with broken includes when generating ``.clang_complete`` and space is used in a path ([issue #1873](https://github.com/platformio/platformio-core/issues/1873))
* Fixed an issue with incorrect handling of a custom package name when using [platformio lib install](http://docs.platformio.org/page/userguide/lib/cmd_install.html) or [platformio platform install](http://docs.platformio.org/page/userguide/platforms/cmd_install.html) commands
",19606299
16,False,False,2018-08-06T15:46:23Z,2018-08-06T15:50:15Z,"* [Program Memory Usage](http://docs.platformio.org/en/latest/faq.html#program-memory-usage)

  - Print human-readable memory usage information after a build and before uploading
  - Print detailed memory usage information with ""sections"" and ""addresses"" in [verbose mode](http://docs.platformio.org/en/latest/userguide/cmd_run.html#cmdoption-platformio-run-v)
  - Check maximum allowed ""program"" and ""data"" sizes before uploading/programming ([issue #1412](https://github.com/platformio/platformio-core/issues/1412))

* [PIO Unit Testing](http://docs.platformio.org/page/plus/unit-testing.html):

  - Documented [Project Shared Code](http://docs.platformio.org/page/plus/unit-testing.html#shared-code)
  - Force building of project source code using [test_build_project_src](http://docs.platformio.org/page/projectconf/section_env_test.html#test_build_project_src) option
  - Fixed missed ``UNIT_TEST`` macro for unit test components/libraries

* Check package structure after unpacking and raise error when antivirus tool blocks PlatformIO package manager ([issue #1462](https://github.com/platformio/platformio-core/issues/1462))
* Lock interprocess requests to PlatformIO Package Manager for install/uninstall operations ([issue #1594](https://github.com/platformio/platformio-core/issues/1594))
* Fixed an issue with [PIO Remote](http://docs.platformio.org/page/plus/pio-remote.html) when upload process depends on the source code of a project framework
* Fixed an issue when ``srcFilter`` field in [library.json](http://docs.platformio.org/page/librarymanager/config.html) breaks a library build ([issue #1735](https://github.com/platformio/platformio-core/issues/1735))",19606299
17,False,False,2018-07-03T12:11:32Z,2018-07-03T12:41:29Z,"* Improved removing of default build flags using [build_unflags](http://docs.platformio.org/page/projectconf/section_env_build.html#build-unflags) option ([issue #1712](https://github.com/platformio/platformio-core/issues/1712))
* Export ``LIBS``, ``LIBPATH``, and ``LINKFLAGS`` data from project dependent libraries to the global build environment
* Don't export ``CPPPATH`` data of project dependent libraries to framework's build environment ([issue #1665](https://github.com/platformio/platformio-core/issues/1665))
* Handle ""architectures"" data from ""library.properties"" manifest in [lib_compat_mode = strict](http://docs.platformio.org/en/page/librarymanager/ldf.html#compatibility-mode)
* Added workaround for Python SemVer package's [issue #61](https://github.com/rbarrois/python-semanticversion/issues/61) with caret range and pre-releases
* Replaced conflicted ""env"" pattern by ""sysenv"" for [""platformio.ini"" Dynamic Variables""](http://docs.platformio.org/page/projectconf/dynamic_variables.html) ([issue #1705](https://github.com/platformio/platformio-core/issues/1705))
* Removed ""date&time"" when processing project with [platformio run](http://docs.platformio.org/page/userguide/cmd_run.html) command ([issue #1343](https://github.com/platformio/platformio-core/issues/1343))
* Fixed issue with invalid LD script if path contains space
* Fixed preprocessor for Arduino sketch when function returns certain type ([issue #1683](https://github.com/platformio/platformio-core/issues/1683))
* Fixed issue when [platformio lib uninstall](http://docs.platformio.org/page/userguide/lib/cmd_uninstall.html) removes initial source code ([issue #1023](https://github.com/platformio/platformio-core/issues/1023))",19606299
18,False,False,2018-06-01T14:01:46Z,2018-06-01T14:05:23Z,"* [PlatformIO Home](http://docs.platformio.org/page/home/index.html) - interact with PlatformIO ecosystem using modern and cross-platform GUI:
  - ""Recent News"" block on ""Welcome"" page
  - Direct import of development platform's example
* Simplify configuration for [PIO Unit Testing](http://docs.platformio.org/page/plus/unit-testing.html): separate main program from a test build process, drop requirement for ``#ifdef UNIT_TEST`` guard
* Override any option from board manifest in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf/section_env_board.html#more-options) ([issue #1612](https://github.com/platformio/platformio-core/issues/1612))
* Configure a custom path to SVD file using [debug_svd_path](http://docs.platformio.org/page/projectconf/section_env_debug.html#debug-svd-path) option
* Custom project [description](http://docs.platformio.org/en/latest/projectconf/section_platformio.html#description) which will be used by [PlatformIO Home](http://docs.platformio.org/page/home/index.html)
* Updated Unity tool to 2.4.3
* Improved support for Black Magic Probe in ""uploader"" mode
* Renamed ""monitor_baud"" option to ""monitor_speed""
* Fixed issue when a custom [lib_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#lib-dir) was not handled correctly ([issue #1473](https://github.com/platformio/platformio-core/issues/1473))
* Fixed issue with useless project rebuilding for case insensitive file systems (Windows)
* Fixed issue with ``build_unflags`` option when a macro contains value (e.g., ``-DNAME=VALUE``)
* Fixed issue which did not allow to override runtime build environment using extra POST script
* Fixed ""RuntimeError: maximum recursion depth exceeded"" for library manager ([issue #1528](https://github.com/platformio/platformio-core/issues/1528))",19606299
19,False,False,2018-03-13T10:00:29Z,2018-03-13T10:19:47Z,"* [PlatformIO Home](http://docs.platformio.org/page/home/index.html) - interact with PlatformIO ecosystem using modern and cross-platform GUI:
  - Multiple themes (Dark & Light)
  - Ability to specify a name for new project
* Control [PIO Unified Debugger](http://docs.platformio.org/en/latest/plus/debugging.html) and its firmware loading mode using [debug_load_mode](http://docs.platformio.org/en/latest/projectconf/section_env_debug.html#debug-load-mode) option
* Added aliases (off, light, strict) for [LDF Compatibility Mode](http://docs.platformio.org/page/librarymanager/ldf.html)
* Search for a library using PIO Library Registry ID ``id:X`` (e.g. ``pio lib search id:13``)
* Show device system information (MCU, Frequency, RAM, Flash, Debugging tools) in a build log
* Show all available upload protocols before firmware uploading in a build log
* Handle ""os.mbed.com"" URL as a Mercurial (hg) repository
* Improved support for old mbed libraries without manifest
* Fixed project generator for Qt Creator IDE ([issue #1303](https://github.com/platformio/platformio-core/issues/1303), [issue #1323](https://github.com/platformio/platformio-core/issues/1323))
* Mark project source and library directories for CLion IDE ([issue #1359](https://github.com/platformio/platformio-core/issues/1359), [issue #1345](https://github.com/platformio/platformio-core/issues/1345), [issue #897](https://github.com/platformio/platformio-core/issues/897))
* Fixed issue with duplicated ""include"" records when generating data for IDE ([issue #1301](https://github.com/platformio/platformio-core/issues/1301))",19606299
20,False,False,2018-01-18T13:12:25Z,2018-01-18T13:22:19Z,"* New ``test_speed`` option to control a communication baudrate/speed between [PIO Unit Testing](http://docs.platformio.org/page/plus/unit-testing.html) engine and a target device ([issue #1273](https://github.com/platformio/platformio-core/issues/1273))
* Show full library version in ""Library Dependency Graph"" including VCS information ([issue #1274](https://github.com/platformio/platformio-core/issues/1274))
* Configure a custom firmware/program name in build directory ([example](http://docs.platformio.org/page/projectconf/advanced_scripting.html#custom-firmware-program-name))
* Renamed ``envs_dir`` option to ``build_dir`` in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf/section_platformio.html#build-dir)
* Refactored code without ""arrow"" dependency (resolve issue with ""ImportError: No module named backports.functools_lru_cache"")
* Improved support of PIO Unified Debugger for Eclipse Oxygen
* Improved a work in off-line mode
* Fixed project generator for CLion and Qt Creator IDE ([issue #1299](https://github.com/platformio/platformio-core/issues/1299))
* Fixed PIO Unified Debugger for mbed framework
* Fixed library updates when a version is declared in VCS format (not SemVer)",19606299
21,False,False,2017-12-28T15:26:12Z,2017-12-28T15:28:02Z,"PlatformIO Core 3.5.0 introduces many new features and performance improvements. The notable changes are as follows:

* [PlatformIO Home](http://docs.platformio.org/page/home/index.html) - interact with PlatformIO ecosystem using modern and cross-platform GUI:
  - Library Manager:
    * Search for new libraries in PlatformIO Registry
    * ""1-click"" library installation, per-project libraries, extra storages
    * List installed libraries in multiple storages
    * List built-in libraries (by frameworks)
    * Updates for installed libraries
    * Multiple examples, trending libraries, and more.
  - PlatformIO Projects
  - PIO Account
  - Development platforms, frameworks and board explorer
  - Device Manager: serial, logical, and multicast DNS services
* Integration with [Jenkins CI](http://docs.platformio.org/page/ci/jenkins.html)
* New [include](http://docs.platformio.org/page/projectconf/section_platformio.html#include-dir) folder for project's header files ([issue #1107](https://github.com/platformio/platformio-core/issues/1107))
* Depend on development platform using VSC URL (Git, Mercurial and Subversion) instead of a name in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf/section_env_general.html#platform). Drop support for ``*_stage`` dev/platform names (use VCS URL instead).
* Reinstall/redownload package with a new ``-f, --force`` option for [platformio lib install](http://docs.platformio.org/page/userguide/lib/cmd_install.html) and [platformio platform install](http://docs.platformio.org/page/userguide/platforms/cmd_install.html) commands ([issue #778](https://github.com/platformio/platformio-core/issues/778))
* Handle missed dependencies and provide a solution based on PlatformIO Library Registry ([issue #781](https://github.com/platformio/platformio-core/issues/781))
* New setting [projects_dir](http://docs.platformio.org/page/userguide/cmd_settings.html#projects-dir) that allows to override a default PIO Home Projects location ([issue #1161](https://github.com/platformio/platformio-core/issues/1161))
* [Library Dependency Finder (LDF)](http://docs.platformio.org/page/librarymanager/ldf.html):
  - Search for dependencies used in [PIO Unit Testing](http://docs.platformio.org/page/plus/unit-testing.html) ([issue #953](https://github.com/platformio/platformio-core/issues/953))
  - Parse library source file in pair with a header when they have the same name ([issue #1175](https://github.com/platformio/platformio-core/issues/1175))
  - Handle library dependencies defined as VCS or SemVer in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf/section_env_general.html#platform) ([issue #1155](https://github.com/platformio/platformio-core/issues/1155))
  - Added option to configure library [Compatible Mode](http://docs.platformio.org/page/librarymanager/ldf.html#compatibility-mode) using [library.json](http://docs.platformio.org/page/librarymanager/config.html)
* New options for [platformio device list](http://docs.platformio.org/page/userguide/cmd_device.html#platformio-device-list)  command:
  - ``--serial`` list available serial ports (default)
  - ``--logical`` list logical devices
  - ``--mdns`` discover multicast DNS services ([issue #463](https://github.com/platformio/platformio-core/issues/463))
* Other bug fixes and performance improvements.

See [PlatformIO 3.5 Release Notes](http://docs.platformio.org/page/history.html) for details.",19606299
22,False,False,2017-08-02T13:51:45Z,2017-08-02T13:57:57Z,"* Pre/Post extra scripting for advanced control of PIO Build System ([issue #891](https://github.com/platformio/platformio-core/issues/891))
* New [lib_archive](http://docs.platformio.org/page/projectconf/section_env_library.html#lib-archive) option to control library archiving and linking behavior ([issue #993](https://github.com/platformio/platformio-core/issues/993))
* Add ""inc"" folder automatically to CPPPATH when ""src"" is available (works for project and library) ([issue #1003](https://github.com/platformio/platformio-core/issues/1003))
* Use a root of library when filtering source code using [library.json](http://docs.platformio.org/page/librarymanager/config.html)  and ``srcFilter`` field
* Added ``monitor_*`` options to white-list for [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf.html) ([issue #982](https://github.com/platformio/platformio-core/issues/982))
* Do not ask for board ID when initializing project for desktop platform
* Handle broken PIO Core state and create new one
* Fixed an issue with a custom transport for [PIO Unit Testing](http://docs.platformio.org/page/plus/unit-testing.html) when multiple tests are present
* Fixed an issue when can not upload firmware to SAM-BA based board (Due)",19606299
23,False,False,2017-06-26T16:58:30Z,2017-06-26T17:04:23Z,"* [PIO Unified Debugger](http://docs.platformio.org/page/plus/debugging.html)

  - ""1-click"" solution, zero configuration
  - Support for 100+ embedded boards
  - Multiple architectures and development platforms
  - Windows, MacOS, Linux (+ARMv6-8)
  - Built-in into [PlatformIO IDE for Atom](http://docs.platformio.org/page/ide/atom.html) and [PlatformIO IDE for VScode](http://docs.platformio.org/page/ide/vscode.html)
  - Integration with [Eclipse](http://docs.platformio.org/page/ide/eclipse.html) and [Sublime Text](http://docs.platformio.org/page/ide/sublimetext.html)

* Filter [PIO Unit Testing](http://docs.platformio.org/page/plus/unit-testing.html) tests using a new ``test_filter`` option in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf.html) or [platformio test --filter](http://docs.platformio.org/page/userguide/cmd_test.html#cmdoption-platformio-test-f) command ([issue #934](https://github.com/platformio/platformio-core/issues/934))
* Custom ``test_transport`` for [PIO Unit Testing](http://docs.platformio.org/page/plus/unit-testing.html) Engine
* Configure Serial Port Monitor in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf.html) ([issue #787](https://github.com/platformio/platformio-core/issues/787))
* New [monitor](http://docs.platformio.org/page/userguide/cmd_run.html#cmdoption-platformio-run-t) target which allows to launch Serial Monitor automatically after successful ""build"" or ""upload"" operations ([issue #788](https://github.com/platformio/platformio-core/issues/788))
* Project generator for [VIM](http://docs.platformio.org/page/ide/vim.html)
* Multi-line support for the different options in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf.html), such as: ``build_flags``, ``build_unflags``, etc. ([issue #889](https://github.com/platformio/platformio-core/issues/889))
* Handle dynamic ``SRC_FILTER`` environment variable from [library.json extra script](http://docs.platformio.org/page/librarymanager/config.html#extrascript)
* Notify about multiple installations of PIO Core ([issue #961](https://github.com/platformio/platformio-core/issues/961))
* Improved auto-detecting of mbed-enabled media disks
* Automatically update Git-submodules for development platforms and libraries that were installed from repository
* Add support for ``.*cc`` extension ([issue #939](https://github.com/platformio/platformio-core/issues/939))
* Handle ``env_default`` in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf.html) when re-initializing a project ([issue #950](https://github.com/platformio/platformio-core/issues/950))
* Use root directory for PIO Home when path contains non-ascii characters ([issue #951](https://github.com/platformio/platformio-core/issues/951), [issue #952](https://github.com/platformio/platformio-core/issues/952))
* Don't warn about known ``boards_dir`` option ([pull #949](https://github.com/platformio/platformio-core/pull/949))
* Escape non-valid file name characters when installing a new package (library) ([issue #985](https://github.com/platformio/platformio-core/issues/985))
* Fixed infinite dependency installing when repository consists of multiple libraries ([issue #935](https://github.com/platformio/platformio-core/issues/935))
* Fixed linter error ""unity.h does not exist"" for Unit Testing ([issue #947](https://github.com/platformio/platformio-core/issues/947))
* Fixed issue when [Library Dependency Finder (LDF)](http://docs.platformio.org/page/librarymanager/ldf.html) does not handle custom ``src_dir`` ([issue #942](https://github.com/platformio/platformio-core/issues/942))
* Fixed cloning a package (library) from a private Git repository with custom user name and SSH port ([issue #925](https://github.com/platformio/platformio-core/issues/925))",19606299
24,False,False,2017-05-27T09:56:42Z,2017-05-27T10:01:36Z,* Hotfix for recently updated Python Requests package (2.16.0),19606299
25,False,False,2017-03-27T11:39:43Z,2017-03-27T11:45:05Z,"* PlatformIO Library Registry statistics with new [pio lib stats](http://docs.platformio.org/page/userguide/lib/cmd_stats.html) command

  - Recently updated and added libraries
  - Recent and popular keywords
  - Featured libraries (today, week, month)

* List built-in libraries based on development platforms with a new [pio lib builtin](http://docs.platformio.org/page/userguide/lib/cmd_builtin.html) command
* Show detailed info about a library using [pio lib show](http://docs.platformio.org/page/userguide/lib/cmd_show.html) command ([issue #430](https://github.com/platformio/platformio-core/issues/430))
* List supported frameworks, SDKs with a new [pio platform frameworks](http://docs.platformio.org/en/latest/userguide/platforms/cmd_frameworks.htmll) command
* Visual Studio Code extension for PlatformIO ([issue #619](https://github.com/platformio/platformio-core/issues/619))
* Added new options ``--no-reset``, ``--monitor-rts`` and ``--monitor-dtr`` to [pio test](http://docs.platformio.org/en/latest/userguide/cmd_test.html) command (allows to avoid automatic board's auto-reset when gathering test results)
* Added support for templated methods in ``*.ino to *.cpp`` converter ([pull #858](https://github.com/platformio/platformio-core/pull/858))
* Package version as ""Repository URL"" in manifest of development version (``""version"": ""https://github.com/user/repo.git""``)
* Produce less noisy output when ``-s/--silent`` options are used for [platformio init](http://docs.platformio.org/page/userguide/cmd_init.html) and [platformio run](http://docs.platformio.org/page/userguide/cmd_run.html) commands ([issue #850](https://github.com/platformio/platformio-core/issues/850))
* Use C++11 by default for CLion IDE based projects ([pull #873](https://github.com/platformio/platformio-core/pull/873))
* Escape project path when Glob matching is used
* Do not overwrite project configuration variables when system environment variables are set
* Handle dependencies when installing non-registry package/library (VCS, archive, local folder) ([issue #913](https://github.com/platformio/platformio-core/issues/913))
* Fixed package installing with VCS branch for Python 2.7.3 ([issue #885](https://github.com/platformio/platformio-core/issues/885))",19606299
26,False,False,2016-12-07T21:49:54Z,2016-12-07T22:34:02Z,"- Changed default [LDF Mode](http://docs.platformio.org/en/latest/librarymanager/ldf.html#ldf-mode) from `chain+` to `chain`
",19606299
27,False,False,2016-12-07T20:08:44Z,2016-12-07T22:33:19Z,"- [PIO Remote™](http://docs.platformio.org/en/latest/plus/pio-remote.html).
  **Your devices are always with you!**
  - Over-The-Air (OTA) Device Manager
  - OTA Serial Port Monitor
  - OTA Firmware Updates
  - Continuous Deployment
  - Continuous Delivery
- Integration with [Cloud IDEs](http://docs.platformio.org/en/latest/ide.html#cloud-ide)
  - Cloud9
  - Codeanywhere
  - Eclipse Che
- [PIO Account](http://docs.platformio.org/en/latest/userguide/account/index.html) and [PLATFORMIO_AUTH_TOKEN](http://docs.platformio.org/en/latest/envvars.html#envvar-PLATFORMIO_AUTH_TOKEN) environment variable for CI systems ([issue #808](https://github.com/platformio/platformio-core/issues/808), [issue #467](https://github.com/platformio/platformio-core/issues/467))
- Inject system environment variables to configuration settings in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/en/stable/projectconf.html) ([issue #792](https://github.com/platformio/platformio-core/issues/792))
- Custom boards per project with `boards_dir` option in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/en/stable/projectconf.html) ([issue #515](https://github.com/platformio/platformio-core/issues/515))
- Unix shell-style wildcards for [upload_port](http://docs.platformio.org/en/latest/projectconf.html#upload-port) ([issue #839](https://github.com/platformio/platformio-core/issues/839))
- Refactored [Library Dependency Finder (LDF)](http://docs.platformio.org/en/stable/librarymanager/ldf.html) C/C++ Preprocessor for conditional syntax (`#ifdef`, `#if`, `#else`, `#elif`, `#define`, etc.) ([issue #837](https://github.com/platformio/platformio-core/issues/837))
- Added new [LDF Modes](http://docs.platformio.org/en/latest/librarymanager/ldf.html#ldf-mode): `chain+` and `deep+` and set `chain+` as default
- Added global `lib_extra_dirs` option to `[platformio]` section for [Project Configuration File ""platformio.ini""](http://docs.platformio.org/en/stable/projectconf.html) ([issue #842](https://github.com/platformio/platformio-core/issues/842))
- Enabled caching by default for API requests and Library Manager (see [enable_cache](http://docs.platformio.org/en/latest/userguide/cmd_settings.html#enable-cache) setting)
- Native integration with VIM/Neovim using [neomake-platformio](https://github.com/coddingtonbear/neomake-platformio) plugin
- Changed a default exit combination for Device Monitor from `Ctrl+]` to `Ctrl+C`
- Improved detecting of ARM mbed media disk for uploading
- Improved Project Generator for CLion IDE when source folder contains nested items
- Improved handling of library dependencies specified in `library.json` manifest ([issue #814](https://github.com/platformio/platformio-core/issues/814))
- Improved [Library Dependency Finder (LDF)](http://docs.platformio.org/en/stable/librarymanager/ldf.html) for circular dependencies
- Show vendor version of a package for [platformio platform show](http://docs.platformio.org/en/stable/userguide/platforms/cmd_show.html) command ([issue #838](https://github.com/platformio/platformio-core/issues/838))
- Fixed unable to include SSH user in `lib_deps` repository url ([issue #830](https://github.com/platformio/platformio-core/issues/830))
- Fixed merging of "".gitignore"" files when re-initialize project ([issue #848](https://github.com/platformio/platformio-core/issues/848))
- Fixed issue with `PATH` auto-configuring for upload tools
- Fixed `99-platformio-udev.rules` checker for Linux OS
",19606299
28,False,False,2016-09-19T18:12:56Z,2016-09-19T18:23:53Z,"- New! Dynamic variables/templates for [Project Configuration File ""platformio.ini""](http://docs.platformio.org/en/stable/projectconf.html) ([issue #705](https://github.com/platformio/platformio/issues/705))
- Summary about processed environments ([issue #777](https://github.com/platformio/platformio/issues/777))
- Implemented LocalCache system for API and improved a work in off-line mode
- Improved Project Generator when custom `--project-option` is passed to [platformio init](http://docs.platformio.org/en/stable/userguide/cmd_init.html) command
- Deprecated `lib_force` option, please use [lib_deps](http://docs.platformio.org/en/stable/projectconf.html#lib-deps) instead
- Return valid exit code from `plaformio test` command
- Fixed Project Generator for CLion IDE using Windows OS ([issue #785](https://github.com/platformio/platformio/issues/785))
- Fixed SSL Server-Name-Indication for Python < 2.7.9 ([issue #774](https://github.com/platformio/platformio/issues/774))",19606299
29,False,False,2016-09-07T23:00:07Z,2016-09-08T12:00:47Z,"- Disabled temporary SSL for PlatformIO services
  [issue #772](https://github.com/platformio/platformio/issues/772)
",19606299
30,False,False,2016-09-07T17:50:47Z,2016-09-08T11:55:22Z,"- [PlatformIO Plus](https://pioplus.com)
  - Local and Embedded [Unit Testing](http://docs.platformio.org/en/latest/unit_testing.html)
    ([issue #408](https://github.com/platformio/platformio/issues/408),
    [issue #519](https://github.com/platformio/platformio/issues/519))
- Decentralized Development Platforms
  - Development platform manifest ""platform.json"" and
    [open source development platforms](https://github.com/platformio?utf8=✓&query=platform-)
  - [Semantic Versioning](http://semver.org/) for platform commands,
    development platforms and dependent packages
  - Custom package repositories
  - External embedded board configuration files, isolated build scripts
    ([issue #479](https://github.com/platformio/platformio/issues/479))
  - Embedded Board compatibility with more than one development platform
    ([issue #456](https://github.com/platformio/platformio/issues/456))
- Library Manager 3.0
  - Project dependencies per build environment using [lib_deps](http://docs.platformio.org/en/latest/projectconf.html#lib-deps) option
    ([issue #413](https://github.com/platformio/platformio/issues/413))
  - [Semantic Versioning](http://semver.org/) for library commands and
    dependencies
    ([issue #410](https://github.com/platformio/platformio/issues/410))
  - Multiple library storages: Project's Local, PlatformIO's Global or Custom
    ([issue #475](https://github.com/platformio/platformio/issues/475))
  - Install library by name
    ([issue #414](https://github.com/platformio/platformio/issues/414))
  - Depend on a library using VCS URL (GitHub, Git, ARM mbed code registry, Hg, SVN)
    ([issue #498](https://github.com/platformio/platformio/issues/498))
  - Strict search for library dependencies
    ([issue #588](https://github.com/platformio/platformio/issues/588))
  - Allowed `library.json` to specify sources other than PlatformIO's Repository
    ([issue #461](https://github.com/platformio/platformio/issues/461))
  - Search libraries by headers/includes with `platformio lib search --header` option
- New Intelligent Library Build System
  - [Library Dependency Finder](http://docs.platformio.org/en/latest/faq.html#how-works-library-dependency-finder-ldf)
    that interprets C/C++ Preprocessor conditional macros with deep search behavior
  - Check library compatibility with project environment before building
    ([issue #415](https://github.com/platformio/platformio/issues/415))
  - Control Library Dependency Finder for compatibility using
    [lib_compat_mode](http://docs.platformio.org/en/latest/projectconf.html#lib-compat-mode)
    option
  - Custom library storages/directories with
    [lib_extra_dirs](http://docs.platformio.org/en/latest/projectconf.html#lib-extra-dirs) option
    ([issue #537](https://github.com/platformio/platformio/issues/537))
  - Handle extra build flags, source filters and build script from
    [library.json](http://docs.platformio.org/en/latest/librarymanager/config.html)
    ([issue #289](https://github.com/platformio/platformio/issues/289))
  - Allowed to disable library archiving (`*.ar`)
    ([issue #719](https://github.com/platformio/platformio/issues/719))
  - Show detailed build information about dependent libraries
    ([issue #617](https://github.com/platformio/platformio/issues/617))
  - Support for the 3rd party manifests (Arduino IDE ""library.properties""
    and ARM mbed ""module.json"")
- Removed `enable_prompts` setting. Now, all PlatformIO CLI is non-blocking!
- Switched to SSL PlatformIO API
- Renamed `platformio serialports` command to `platformio device`
- Build System: Attach custom Before/Pre and After/Post actions for targets
  ([issue #542](https://github.com/platformio/platformio/issues/542))
- Allowed passing custom project configuration options to `platformio ci`
  and `platformio init` commands using `-O, --project-option`.
- Print human-readable information when processing environments without
  `-v, --verbose` option
  ([issue #721](https://github.com/platformio/platformio/issues/721))
- Improved INO to CPP converter
  ([issue #659](https://github.com/platformio/platformio/issues/659),
  [issue #765](https://github.com/platformio/platformio/issues/765))
- Added `license` field to [library.json](http://docs.platformio.org/en/latest/librarymanager/config.html)
  ([issue #522](https://github.com/platformio/platformio/issues/522))
- Warn about unknown options in project configuration file `platformio.ini`
  ([issue #740](https://github.com/platformio/platformio/issues/740))
- Fixed wrong line number for INO file when `#warning` directive is used
  ([issue #742](https://github.com/platformio/platformio/issues/742))
- Stopped supporting Python 2.6
",19606299
31,False,False,2016-08-02T18:25:50Z,2016-08-02T19:37:00Z,"- Improved support for [Microchip PIC32](http://docs.platformio.org/en/stable/platforms/microchippic32.html) development platform and ChipKIT boards
  [issue #438](https://github.com/platformio/platformio/issues/438)
- Added support for Pinoccio Scout board
  [issue #52](https://github.com/platformio/platformio/issues/52)
- Added support for [Teensy USB Features](http://docs.platformio.org/en/stable/platforms/teensy.html#usb-features)
  (HID, SERIAL_HID, DISK, DISK_SDFLASH, MIDI, etc.)
  [issue #722](https://github.com/platformio/platformio/issues/722)
- Switched to built-in GCC LwIP library for Espressif development platform
- Added support for local `--echo` for Serial Port Monitor
  [issue #733](https://github.com/platformio/platformio/issues/733)
- Updated `udev` rules for the new STM32F407DISCOVERY boards
  [issue #731](https://github.com/platformio/platformio/issues/731)
- Implemented firmware merging with base firmware for Nordic nRF51 development platform
  [issue #500](https://github.com/platformio/platformio/issues/500),
  [issue #533](https://github.com/platformio/platformio/issues/533)
- Fixed Project Generator for ESP8266 and ARM mbed based projects
  (resolves incorrect linter errors)
- Fixed broken LD Script for Element14 chipKIT Pi board
  [issue #725](https://github.com/platformio/platformio/issues/725)
- Fixed firmware uploading to Atmel SAMD21-XPRO board using ARM mbed framework
  [issue #732](https://github.com/platformio/platformio/issues/732)
",19606299
32,False,False,2016-07-12T16:37:00Z,2016-07-12T16:47:47Z,"-   Added support for Arduino M0, M0 Pro and Tian boards ([issue #472](https://github.com/platformio/platformio/issues/472))
-   Added support for Microchip chipKIT Lenny board
-   Updated Microchip PIC32 Arduino framework to v1.2.1
-   Documented [uploading of EEPROM data](http://docs.platformio.org/en/latest/platforms/atmelavr.html#upload-eeprom-data) (from EEMEM directive)
-   Added `Rebuild C/C++ Project Index` target to CLion and Eclipse IDEs
-   Improved project generator for [CLion IDE](http://docs.platformio.org/en/latest/ide/clion.html)
-   Added `udev` rules for OpenOCD CMSIS-DAP adapters ([issue #718](https://github.com/platformio/platformio/issues/718))
-   Auto-remove project cache when PlatformIO is upgraded
-   Keep user changes for `.gitignore` file when re-generate/update project data
-   Ignore `[platformio]` section from custom project configuration file when [platformio ci –project-conf](http://docs.platformio.org/en/latest/userguide/cmd_ci.html) command is used
-   Fixed missed `--boot` flag for the firmware uploader for ATSAM3X8E Cortex-M3 MCU based boards (Arduino Due, etc) ([issue #710](https://github.com/platformio/platformio/issues/710))
-   Fixed missing trailing `\` for the source files list when generate project for [Qt Creator IDE](http://docs.platformio.org/en/latest/ide/qtcreator.html) ([issue #711](https://github.com/platformio/platformio/issues/711))
-   Split source files to `HEADERS` and `SOURCES` when generate project for [Qt Creator IDE](http://docs.platformio.org/en/latest/ide/qtcreator.html) ([issue #713](https://github.com/platformio/platformio/issues/713))
",19606299
33,False,False,2016-06-28T15:04:20Z,2016-06-28T15:12:02Z,"-   New ESP8266-based boards: Generic ESP8285 Module, Phoenix 1.0 & 2.0, WifInfo
-   Added support for Arduino M0 Pro board ([issue #472](https://github.com/platformio/platformio/issues/472))
-   Added support for Arduino MKR1000 board ([issue #620](https://github.com/platformio/platformio/issues/620))
-   Added support for Adafruit Feather M0, SparkFun SAMD21 and SparkFun SAMD21 Mini Breakout boards ([issue #520](https://github.com/platformio/platformio/issues/520))
-   Updated Arduino ESP8266 core for Espressif platform to 2.3.0
-   Better removing unnecessary flags using `build_unflags` option ([issue #698](https://github.com/platformio/platformio/issues/698))
-   Fixed issue with `platformio init --ide` command for Python 2.6
",19606299
34,False,False,2016-06-15T15:46:56Z,2016-06-15T15:48:04Z,"- Fixed issue with `platformio init --ide` command
",19606299
35,False,False,2016-06-15T14:57:39Z,2016-06-15T15:10:44Z,"- Added support for ST Nucleo L031K6 board to ARM mbed framework
- Process `build_unflags` option for ARM mbed framework
- Updated Intel ARC32 Arduino framework to v1.0.6
  ([issue #695](https://github.com/platformio/platformio/issues/695))
- Improved a check of program size before uploading to the board
- Fixed issue with ARM mbed framework `-u _printf_float` and
  `-u _scanf_float` when parsing `$LINKFLAGS`
- Fixed issue with ARM mbed framework and extra includes for the custom boards,
  such as Seeeduino Arch Pro
",19606299
36,False,False,2016-06-13T18:32:07Z,2016-06-13T18:57:24Z,"- Re-submit a package to PyPI
",19606299
37,False,False,2016-06-13T16:49:55Z,2016-06-13T16:58:17Z,"-   Added support for [emonPi](https://github.com/openenergymonitor/emonpi), the OpenEnergyMonitor system ([issue #687](https://github.com/platformio/platformio/issues/687))
-   Added support for [SPL](http://platformio.org/frameworks/spl) framework for STM32F0 boards ([issue #683](https://github.com/platformio/platformio/issues/683))
-   Added support for [Arduboy DevKit](https://www.arduboy.com), the game system the size of a credit card
-   Updated ARM mbed framework package to v121
-   Check program size before uploading to the board ([issue #689](https://github.com/platformio/platformio/issues/689))
-   Improved firmware uploading to Arduino Leonardo based boards ([issue #691](https://github.com/platformio/platformio/issues/691))
-   Fixed issue with `-L relative/path` when parsing `build_flags` ([issue #688](https://github.com/platformio/platformio/issues/688))
",19606299
38,False,False,2016-06-03T21:26:01Z,2016-06-03T21:28:44Z,"- Show `udev` warning only for the Linux OS while uploading firmware
",19606299
39,False,False,2016-06-03T18:04:04Z,2016-06-03T18:09:06Z,"- Added support for [Arduboy](https://www.arduboy.com), the game system the size of a credit card
- Updated [99-platformio-udev.rules](https://github.com/platformio/platformio/blob/develop/scripts/99-platformio-udev.rules) for Linux OS
- Refactored firmware uploading to the embedded boards with SAM-BA bootloader
",19606299
40,False,False,2016-06-02T17:57:09Z,2016-06-02T18:07:49Z,"-   Simplified [Continuous Integration with AppVeyor]([issue #671])
-   Automatically add source directory to `CPPPATH` of Build System
-   Added support for Silicon Labs SLSTK3401A (Pearl Gecko) and
  MultiTech mDot F411 ARM mbed based boards
-   Added support for MightyCore ATmega8535 board ([issue #585](https://github.com/platformio/platformio/issues/585))
-   Added `stlink` as the default uploader for STM32 Discovery boards
  ([issue #665](https://github.com/platformio/platformio/issues/665))
-   Use HTTP mirror for Package Manager in a case with SSL errors
  ([issue #645](https://github.com/platformio/platformio/issues/645))
-   Improved firmware uploading to Arduino Leonardo/Due based boards
-   Fixed bug with `env_default` when `pio run -e` is used
-   Fixed issue with `src_filter` option for Windows OS ([issue #652](https://github.com/platformio/platformio/issues/652))
-   Fixed configuration data for TI LaunchPads based on msp430fr4133 and
  msp430fr6989 MCUs ([issue #676](https://github.com/platformio/platformio/issues/676))
-   Fixed issue with ARM mbed framework and multiple definition errors
  on FRDM-KL46Z board ([issue #641](https://github.com/platformio/platformio/issues/641))
-   Fixed issue with ARM mbed framework when abstract class breaks
  compile for LPC1768 ([issue #666](https://github.com/platformio/platformio/issues/666))
",19606299
41,False,False,2016-04-30T15:20:45Z,2016-04-30T15:32:06Z,"- Handle prototype pointers while converting `*.ino` to `.cpp`
  ([issue #639](https://github.com/platformio/platformio/issues/639))
",19606299
42,False,False,2016-04-28T15:23:50Z,2016-04-28T15:51:48Z,"-   Project generator for [CodeBlocks IDE](http://docs.platformio.org/en/latest/ide/codeblocks.html)  ([issue #600](https://github.com/platformio/platformio/issues/600))
-   New [Lattice iCE40 FPGA](http://docs.platformio.org/en/latest/platforms/lattice_ice40.html) development platform with support for Lattice iCEstick FPGA Evaluation Kit and BQ IceZUM Alhambra FPGA ([issue #480](https://github.com/platformio/platformio/issues/480))
-   New [Intel ARC 32-bit](http://docs.platformio.org/en/latest/platforms/intel_arc32.html) development platform with support for Arduino/Genuino 101 board ([issue #535](https://github.com/platformio/platformio/issues/535))
-   New [Microchip PIC32](http://docs.platformio.org/en/latest/platforms/microchippic32.html) development platform with support for 20+ different PIC32 based boards ([issue #438](https://github.com/platformio/platformio/issues/438))
-   New RTOS and build Framework named [Simba](http://docs.platformio.org/en/latest/frameworks/simba.html) ([issue #412](https://github.com/platformio/platformio/issues/412))
-   New boards for [ARM mbed](http://docs.platformio.org/en/latest/frameworks/mbed.html) framework: ST Nucleo F410RB, ST Nucleo L073RZ and BBC micro:bit
-   Added support for Arduino.Org boards: Arduino Leonardo ETH, Arduino Yun Mini, Arduino Industrial 101 and Linino One ([issue #472](https://github.com/platformio/platformio/issues/472))
-   Added support for Generic ATTiny boards: ATTiny13, ATTiny24, ATTiny25, ATTiny45 and ATTiny85 ([issue #636](https://github.com/platformio/platformio/issues/636))
-   Added support for MightyCore boards: ATmega1284, ATmega644, ATmega324, ATmega164, ATmega32, ATmega16 and ATmega8535 ([issue #585](https://github.com/platformio/platformio/issues/585))
-   Added support for [TI MSP430](http://docs.platformio.org/en/latest/platforms/timsp430.html) boards: TI LaunchPad w/ msp430fr4133 and TI LaunchPad w/ msp430fr6989
-   Updated Arduino core for Espressif platform to 2.2.0 ([issue #627](https://github.com/platformio/platformio/issues/627))
-   Updated native SDK for ESP8266 to 1.5 ([issue #366](https://github.com/platformio/platformio/issues/366))
-   PlatformIO Library Registry in JSON format! Implemented `--json-output` and `--page` options for platformio lib search](http://docs.platformio.org/en/latest/userguide/lib/cmd_search.html) command ([issue #604](https://github.com/platformio/platformio/issues/604))
-   Allowed to specify default environments [env_default](http://docs.platformio.org/en/latest/projectconf.html#env-default) which should be processed by default with `platformio run` command ([issue #576](https://github.com/platformio/platformio/issues/576))
-   Allowed to unflag(remove) base/initial flags using [build_unflags](http://docs.platformio.org/en/latest/projectconf.html#build-unflags) option ([issue #559](https://github.com/platformio/platformio/issues/559))
-   Allowed multiple VID/PID pairs when detecting serial ports ([issue #632](https://github.com/platformio/platformio/issues/632))
-   Automatically add `-DUSB_MANUFACTURER` with vendor’s name ([issue #631](https://github.com/platformio/platformio/issues/631))
-   Automatically reboot Teensy board after upload when Teensy Loader GUI is used ([issue #609](https://github.com/platformio/platformio/issues/609))
-   Refactored source code converter from `*.ino` to `*.cpp` ([issue #610](https://github.com/platformio/platformio/issues/610))
-   Forced `-std=gnu++11` for Atmel SAM development platform ([issue #601](https://github.com/platformio/platformio/issues/601))
-   Don’t check OS type for ARM mbed-enabled boards and ST STM32 development platform before uploading to disk ([issue #596](https://github.com/platformio/platformio/issues/596))
-   Fixed broken compilation for Atmel SAMD based boards except Arduino Due ([issue #598](https://github.com/platformio/platformio/issues/598))
-   Fixed firmware uploading using serial port with spaces in the path
-   Fixed cache system when project’s root directory is used as `src_dir` ([issue #635](https://github.com/platformio/platformio/issues/635))
",19606299
43,False,False,2016-03-22T21:02:57Z,2016-03-22T21:10:25Z,"-   Launched [PlatformIO Community Forums](http://community.platformio.org) ([issue #530](https://github.com/platformio/platformio/issues/530))
-   Added support for ARM mbed-enabled board Seed Arch Max (STM32F407VET6) ([issue #572](https://github.com/platformio/platformio/issues/572))
-   Improved DNS lookup for PlatformIO API
-   Updated Arduino Wiring-based framework to the latest version for Atmel AVR/SAM development platforms
-   Updated “Teensy Loader CLI” and fixed uploading of large .hex files ([issue #568](https://github.com/platformio/platformio/issues/568))
-   Updated the support for Sanguino Boards ([issue #586](https://github.com/platformio/platformio/issues/586))
-   Better handling of used boards when re-initialize/update project
-   Improved support for non-Unicode user profiles for Windows OS
-   Disabled progress bar for download operations when prompts are disabled
-   Fixed multiple definition errors for ST STM32 development platform and ARM mbed framework ([issue #571](https://github.com/platformio/platformio/issues/571))
-   Fixed invalid board parameters (reset method and baudrate) for a few ESP8266 based boards
-   Fixed “KeyError: ‘content-length’” in PlatformIO Download Manager ([issue #591](https://github.com/platformio/platformio/issues/591))
",19606299
44,False,False,2016-03-07T16:34:43Z,2016-03-07T16:38:04Z,"-   Project generator for [NetBeans IDE]([issue #541])
-   Created package for Homebrew Mac OS X Package Manager: `brew install platformio` ([issue #395](https://github.com/platformio/platformio/issues/395))
-   Updated Arduino core for Espressif platform to 2.1.0 ([issue #544](https://github.com/platformio/platformio/issues/544))
-   Added support for the ESP8266 ESP-07 board to [Espressif]([issue #527])
-   Improved handling of String-based `CPPDEFINES` passed to extra `build_flags` ([issue #526](https://github.com/platformio/platformio/issues/526))
-   Generate appropriate project for CLion IDE and CVS ([issue #523](https://github.com/platformio/platformio/issues/523))
-   Use `src_dir` directory from [Project Configuration File platformio.ini](http://docs.platformio.org/en/latest/projectconf.html) when initializing project otherwise create base `src` directory ([issue #536](https://github.com/platformio/platformio/issues/536))
-   Fixed issue with incorrect handling of user’s build flags where the base flags were passed after user’s flags to GCC compiler ([issue #528](https://github.com/platformio/platformio/issues/528))
-   Fixed issue with Project Generator when optional build flags were passed using system environment variables: [PLATFORMIO_BUILD_FLAGS](http://docs.platformio.org/en/latest/envvars.html#platformio-build-flags) or [PLATFORMIO_BUILD_SRC_FLAGS](http://docs.platformio.org/en/latest/envvars.html#platformio-build-src-flags)
-   Fixed invalid detecting of compiler type ([issue #550](https://github.com/platformio/platformio/issues/550))
-   Fixed issue with updating package which was deleted manually by user ([issue #555](https://github.com/platformio/platformio/issues/555))
-   Fixed incorrect parsing of GCC `-include` flag ([issue #552](https://github.com/platformio/platformio/issues/552))
",19606299
45,False,False,2016-02-17T20:53:08Z,2016-02-17T20:57:53Z,"-   Added support for the new ESP8266-based boards (ESPDuino, ESP-WROOM-02, ESPresso Lite 1.0 & 2.0, SparkFun ESP8266 Thing Dev, ThaiEasyElec ESPino) to [Espressif](http://docs.platformio.org/en/latest/platforms/espressif.html) development platform
-   Added `board_f_flash` option to [Project Configuration File platformio.ini](http://docs.platformio.org/en/latest/projectconf.html) which allows to specify [custom flash chip frequency](http://docs.platformio.org/en/latest/platforms/espressif.html#custom-flash-frequency) for Espressif development platform ([issue #501](https://github.com/platformio/platformio/issues/501))
-   Added `board_flash_mode` option to [Project Configuration File platformio.ini](http://docs.platformio.org/en/latest/projectconf.html) which allows to specify [custom flash chip mode](http://docs.platformio.org/en/latest/platforms/espressif.html#custom-flash-mode) for Espressif development platform
-   Handle new environment variables [PLATFORMIO_UPLOAD_PORT](http://docs.platformio.org/en/latest/envvars.html#platformio-upload-port) and [PLATFORMIO_UPLOAD_FLAGS]([issue #518])
-   Fixed issue with `CPPDEFINES` which contain space and break PlatformIO IDE Linter ([IDE issue #34](https://github.com/platformio/platformio-atom-ide/issues/34))
-   Fixed unable to link C++ standard library to Espressif platform build ([issue #503](https://github.com/platformio/platformio/issues/503))
-   Fixed issue with pointer (`char* myfunc()`) while converting from `*.ino` to `*.cpp` ([issue #506](https://github.com/platformio/platformio/issues/506))
",19606299
46,False,False,2016-02-02T17:52:38Z,2016-02-02T17:54:12Z,"-   Better integration of PlatformIO Builder with PlatformIO IDE Linter
-   Fixed issue with removing temporary file while converting `*.ino` to `*.cpp`
-   Fixed missing dependency (mbed framework) for Atmel SAM development platform ([issue #487](https://github.com/platformio/platformio/issues/487))
",19606299
47,False,False,2016-01-29T18:34:47Z,2016-01-29T18:45:25Z,"-   Corrected RAM size for NXP LPC1768 based boards ([issue #484](https://github.com/platformio/platformio/issues/484))
-   Exclude only `test` and `tests` folders from build process
-   Reverted `-Wl,-whole-archive` hook for ST STM32 and mbed
",19606299
48,False,False,2016-01-29T13:50:33Z,2016-01-29T18:44:17Z,"- Fixed a bug with Project Initialization in PlatformIO IDE
",19606299
49,False,False,2016-01-29T12:43:35Z,2016-01-29T12:49:20Z,"-   [PlatformIO IDE](http://docs.platformio.org/en/latest/ide/atom.html) for Atom ([issue #470](https://github.com/platformio/platformio/issues/470))
-   Added `pio` command line alias for `platformio` command ([issue #447](https://github.com/platformio/platformio/issues/447))
-   Added SPL-Framework support for Nucleo F401RE board ([issue #453](https://github.com/platformio/platformio/issues/453))
-   Added `upload_resetmethod` option to [Project Configuration File platformio.ini](http://docs.platformio.org/en/latest/projectconf.html) and allowed to [change default upload reset method](http://docs.platformio.org/en/latest/platforms/espressif.html#custom-reset-method) for Espressif development platform ([issue #444](https://github.com/platformio/platformio/issues/444))
-   Allowed to force output of color ANSI-codes or to disable progress bar even if the output is a `pipe` (not a `tty`) using [Environment variables](http://docs.platformio.org/en/latest/envvars.html)  ([issue #465](https://github.com/platformio/platformio/issues/465))
-   Set 1Mb SPIFFS for Espressif boards by default ([issue #458](https://github.com/platformio/platformio/issues/458))
-   Exclude `test*` folder by default from build process
-   Generate project for IDEs with information about installed libraries
-   Fixed builder for mbed framework and ST STM32 platform
",19606299
50,False,False,2016-01-06T12:56:31Z,2016-01-06T13:00:22Z,"-   Initial support for Arduino Zero board ([issue #356](https://github.com/platformio/platformio/issues/356))
-   Added support for completions to Atom text editor using `.clang_complete`
-   Generate default targets for [supported IDE](http://docs.platformio.org/en/latest/ide.html) (CLion, Eclipse IDE, Emacs, Sublime Text, VIM): Build, Clean, Upload, Upload SPIFFS image, Upload using Programmer, Update installed platforms and libraries ([issue #427](https://github.com/platformio/platformio/issues/427))
-   Updated Teensy Arduino Framework to 1.27 ([issue #434](https://github.com/platformio/platformio/issues/434))
-   Fixed uploading of EEPROM data using `uploadeep` target for Atmel AVR development platform
-   Fixed project generator for CLion IDE ([issue #422](https://github.com/platformio/platformio/issues/422))
-   Fixed package `shasum` validation on Mac OS X 10.11.2 ([issue #429](https://github.com/platformio/platformio/issues/429))
-   Fixed CMakeLists.txt `add_executable` has only one source file ([issue #421](https://github.com/platformio/platformio/issues/421))
",19606299
51,False,False,2015-12-30T18:25:12Z,2015-12-30T18:33:40Z,"**Happy New Year!**
-   Moved SCons to PlatformIO packages. PlatformIO does not require
  SCons to be installed in your system. Significantly simplified
  installation process of PlatformIO. `pip install platformio` rocks!
-   Implemented uploading files to file system of ESP8266 SPIFFS
  (including OTA) ([issue #382](https://github.com/platformio/platformio/issues/382))
-   Added support for the new Adafruit boards Bluefruit Micro and
  Feather ([issue #403](https://github.com/platformio/platformio/issues/403))
-   Added support for RFDuino ([issue #319](https://github.com/platformio/platformio/issues/319))
-   Project generator for [Emacs](http://docs.platformio.org/en/latest/ide/emacs.html) text editor ([pull #404](https://github.com/platformio/platformio/pull/404))
-   Updated Arduino framework for Atmel AVR development platform to
  1.6.7
-   Documented [firmware uploading for Atmel AVR development platform using Programmers](https://github.com/platformio/platformio/pull/417): AVR ISP, AVRISP mkII, USBtinyISP, USBasp,
  Parallel Programmer and Arduino as ISP
-   Fixed issue with current Python interpreter for Python-based tools
  (issue #417)
",19606299
52,False,False,2015-12-21T18:56:06Z,2015-12-21T19:13:12Z,"-   Restored support for Espressif ESP8266 ESP-01 1MB board (ready
  for OTA)
-   Fixed invalid ROM size for ESP8266-based boards ([issue #396](https://github.com/platformio/platformio/issues/396))
",19606299
53,False,False,2015-12-21T15:42:01Z,2015-12-21T15:52:25Z,"-   Removed `SCons` from requirements list. PlatformIO will try to
  install it automatically, otherwise users need to install it
  manually
-   Fixed `ChunkedEncodingError` when SF connection is broken ([issue
  #356](https://github.com/platformio/platformio/issues/356))
",19606299
54,False,False,2015-12-18T18:30:42Z,2015-12-18T18:37:00Z,"-   Added support for the new ESP8266-based boards (SparkFun ESP8266
  Thing, NodeMCU 0.9 & 1.0, Olimex MOD-WIFI-ESP8266(-DEV), Adafruit
  HUZZAH ESP8266, ESPino, SweetPea ESP-210, WeMos D1, WeMos D1 mini)
  to [Espressif](http://docs.platformio.org/en/latest/platforms/espressif.html) development platform
-   Created public [platformio-pkg-ldscripts](https://github.com/platformio/platformio-pkg-ldscripts.git) repository for LD scripts.
  Moved common configuration for ESP8266 MCU to
  `esp8266.flash.common.ld` ([issue #379](https://github.com/platformio/platformio/issues/379))
-   Improved documentation for [Espressif](http://docs.platformio.org/en/latest/platforms/espressif.html) development platform: OTA
  update, custom Flash Size, Upload Speed and CPU frequency
-   Fixed reset method for Espressif NodeMCU (ESP-12E Module) ([issue
  #380](https://github.com/platformio/platformio/issues/380))
-   Fixed issue with code builder when build path contains spaces
  ([issue #387](https://github.com/platformio/platformio/issues/387))
-   Fixed project generator for Eclipse IDE and “duplicate path entries
  found in project path” ([issue #383](https://github.com/platformio/platformio/issues/383))
",19606299
55,False,False,2015-12-15T18:54:31Z,2015-12-15T18:56:58Z,"-   Install only required packages depending on build environment
  ([issue #308](https://github.com/platformio/platformio/issues/308))
-   Added support for Raspberry Pi [WiringPi](http://docs.platformio.org/en/latest/frameworks/wiringpi.html) framework ([issue #372](https://github.com/platformio/platformio/issues/372))
-   Implemented Over The Air (OTA) upgrades for [Espressif](http://docs.platformio.org/en/latest/platforms/espressif.html)
  development platform. ([issue #365](https://github.com/platformio/platformio/issues/365))
-   Updated [CMSIS framework](http://docs.platformio.org/en/latest/frameworks/cmsis.html) and added CMSIS support for Nucleo F401RE
  board ([issue #373](https://github.com/platformio/platformio/issues/373))
-   Added support for Espressif ESP8266 ESP-01-1MB board (ready for OTA)
-   Handle `upload_flags` option in [platformio.ini]([issue #368])
-   Improved PlatformIO installation on the Mac OS X El Capitan
",19606299
56,False,False,2015-12-08T17:28:22Z,2015-12-08T17:31:33Z,"-   Improved code builder for parallel builds (up to 4 times faster
  than before)
-   Generate [.travis.yml](http://docs.platformio.org/en/latest/ci/travis.html) CI and .gitignore files for embedded projects
  by default ([issue #354](https://github.com/platformio/platformio/issues/354))
-   Removed prompt with “auto-uploading” from [platformio init](http://docs.platformio.org/en/latest/userguide/cmd_init.html) command
  and added `--enable-auto-uploading` option ([issue #352](https://github.com/platformio/platformio/issues/352))
-   Fixed incorrect behaviour of [platformio serialports monitor](http://docs.platformio.org/en/latest/userguide/cmd_serialports.html#platformio-serialports-monitor) in
  pair with PySerial 3.0
",19606299
57,False,False,2015-12-01T17:02:16Z,2015-12-01T17:13:26Z,"- Restored `PLATFORMIO` macros with the current version
",19606299
58,False,False,2015-12-01T15:51:04Z,2015-12-01T17:13:07Z,"-   Added support for the new boards: Atmel ATSAMR21-XPRO, Atmel
  SAML21-XPRO-B, Atmel SAMD21-XPRO, ST 32F469IDISCOVERY, ST
  32L476GDISCOVERY, ST Nucleo F031K6, ST Nucleo F042K6, ST Nucleo
  F303K8 and ST Nucleo L476RG
-   Updated Arduino core for Espressif platform to 2.0.0 ([issue #345](https://github.com/platformio/platformio/issues/345))
-   Added to FAQ explanation of [Can not compile a library that compiles
  without issue with Arduino IDE](http://docs.platformio.org/en/latest/faq.html#building) // ([issue #331](https://github.com/platformio/platformio/issues/331))
-   Fixed ESP-12E flash size ([pull #333](https://github.com/platformio/platformio/pull/333))
-   Fixed configuration for LowPowerLab MoteinoMEGA board ([issue
  #335](https://github.com/platformio/platformio/issues/335))
-   Fixed “LockFailed: failed to create appstate.json.lock” error for
  Windows
-   Fixed relative include path for preprocessor using `build_flags`
  ([issue #271](https://github.com/platformio/platformio/issues/271))
",19606299
59,False,False,2015-11-18T18:11:40Z,2015-11-18T18:17:40Z,"-   Added support of [libOpenCM3](http://docs.platformio.org/en/latest/frameworks/libopencm3.html) framework for Nucleo F103RB board
  ([issue #309](https://github.com/platformio/platformio/issues/309))
-   Added support for Espressif ESP8266 ESP-12E board (NodeMCU) ([issue
  #310](https://github.com/platformio/platformio/issues/310))
-   Added support for pySerial 3.0 ([issue #307](https://github.com/platformio/platformio/issues/307))
-   Updated Arduino AVR/SAM frameworks to 1.6.6 ([issue #321](https://github.com/platformio/platformio/issues/321))
-   Upload firmware using external programmer via [platformio run
  –target program](http://docs.platformio.org/en/latest/userguide/cmd_run.html#cmdoption-platformio-run-t) target ([issue #311](https://github.com/platformio/platformio/issues/311))
-   Fixed handling of upload port when `board` option is not specified
  in [platformio.ini]([issue #313])
-   Fixed firmware uploading for [nordicrf51](http://docs.platformio.org/en/latest/platforms/nordicnrf51.html) development platform
  ([issue #316](https://github.com/platformio/platformio/issues/316))
-   Fixed installation on Mac OS X El Capitan ([issue #312](https://github.com/platformio/platformio/issues/312))
-   Fixed project generator for CLion IDE under Windows OS with invalid
  path to executable ([issue #326](https://github.com/platformio/platformio/issues/326))
-   Fixed empty list with serial ports on Mac OS X ([isge #294](https://github.com/platformio/platformio/issues/294))
-   Fixed compilation error `TWI_Disable not declared` for Arduino Due
  board ([issue #329](https://github.com/platformio/platformio/issues/329))
",19606299
60,False,False,2015-10-13T17:40:46Z,2015-10-13T17:45:50Z,"-   Full support of [CLion IDE](http://docs.platformio.org/en/latest/ide/clion.html) including code auto-completion ([issue
  #132](https://github.com/platformio/platformio/issues/132))
-   PlatformIO [command completion in Terminal](http://docs.platformio.org/en/latest/faq.html#command-completion-in-terminal) for `bash` and `zsh`
-   Added support for ubIQio Ardhat board ([pull #302](https://github.com/platformio/platformio/pull/302))
-   Install SCons automatically and avoid
  `error: option --single-version-externally-managed not recognized`
  ([issue #279](https://github.com/platformio/platformio/issues/279))
-   Use Teensy CLI Loader for upload of .hex files on Mac OS X ([issue
  #306](https://github.com/platformio/platformio/issues/306))
-   Fixed missing [framework-mbed](http://docs.platformio.org/en/latest/frameworks/mbed.html) package for [teensy](http://docs.platformio.org/en/latest/platforms/teensy.html) platform ([issue
  #305](https://github.com/platformio/platformio/issues/305))
",19606299
61,False,False,2015-10-02T15:24:02Z,2015-10-02T15:27:33Z,"-   Added support for LightBlue Bean board ([pull #292](https://github.com/platformio/platformio/pull/292))
-   Added support for ST Nucleo F446RE board ([pull #293](https://github.com/platformio/platformio/pull/293))
-   Fixed broken lock file for “appstate” storage ([issue #288](https://github.com/platformio/platformio/issues/288))
-   Fixed ESP8266 compile errors about RAM size when adding 1 library
  ([issue #296](https://github.com/platformio/platformio/issues/296))
",19606299
62,False,False,2015-09-10T17:44:53Z,2015-09-10T17:48:49Z,"-   Allowed to use ST-Link uploader for mbed-based projects
-   Explained how to use `lib` directory from the PlatformIO based
  project in `readme.txt` which will be automatically generated using
  [platformio init](http://docs.platformio.org/en/latest/userguide/cmd_init.html) command ([issue #273](https://github.com/platformio/platformio/issues/273))
-   Found solution for “pip/scons error: option
  –single-version-externally-managed not recognized” when install
  PlatformIO using `pip` package manager ([issue #279](https://github.com/platformio/platformio/issues/279))
-   Fixed firmware uploading to Arduino Leonardo board using Mac OS
  ([issue #287](https://github.com/platformio/platformio/issues/287))
-   Fixed SConsNotInstalled error for Linux Debian-based distributives
",19606299
63,False,False,2015-09-06T15:17:53Z,2015-09-06T15:21:27Z,"-   Fixed critical issue when [platformio init –ide](http://docs.platformio.org/en/latest/userguide/cmd_init.html) command hangs
  PlatformIO ([issue #283](https://github.com/platformio/platformio/issues/283))
",19606299
64,False,False,2015-09-05T20:05:34Z,2015-09-05T20:07:47Z,"-   Added [native](http://docs.platformio.org/en/latest/platforms/native.html), [linux_arm](http://docs.platformio.org/en/latest/platforms/linux_arm.html), [linux_i686](http://docs.platformio.org/en/latest/platforms/linux_i686.html), [linux_x86_64](http://docs.platformio.org/en/latest/platforms/linux_x86_64.html),
  [windows_x86](http://docs.platformio.org/en/latest/platforms/windows_x86.html) development platforms ([issue #263](https://github.com/platformio/platformio/issues/263))
-   Added [PlatformIO Demo](http://docs.platformio.org/en/latest/demo.html) page to documentation
-   Simplified [installation](http://docs.platformio.org/en/latest/installation.html) process of PlatformIO ([issue #274](https://github.com/platformio/platformio/issues/274))
-   Significantly improved [Project Generator](http://docs.platformio.org/en/latest/userguide/cmd_init.html#cmdoption-platformio-init--ide) which allows to integrate
  with [the most popular IDE](http://docs.platformio.org/en/latest/ide.html)
-   Added short `-h` help option for PlatformIO and sub-commands
-   Updated [mbed](http://docs.platformio.org/en/latest/frameworks/mbed.html) framework
-   Updated `tool-teensy` package for [Teensy](http://docs.platformio.org/en/latest/platforms/teensy.html) platform ([issue #268](https://github.com/platformio/platformio/issues/268))
-   Added FAQ answer when [Program “platformio” not found in PATH]([issue #272])
-   Generate “readme.txt” for project “lib” directory ([issue #273](https://github.com/platformio/platformio/issues/273))
-   Use toolchain’s includes pattern `include*` for Project Generator
  ([issue #277](https://github.com/platformio/platformio/issues/277))
-   Added support for Adafruit Gemma board to [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html#boards) platform ([pull
  #256](https://github.com/platformio/platformio/pull/256))
-   Fixed includes list for Windows OS when generating project for
  [Eclipse IDE]([issue #270])
-   Fixed `AttributeError: 'module' object has no attribute 'packages'`
  ([issue #252](https://github.com/platformio/platformio/issues/252))
",19606299
65,False,False,2015-07-30T15:56:13Z,2015-07-30T16:05:52Z,"-   Integration with [Atom IDE](http://docs.platformio.org/en/latest/ide/atom.html)
-   Support for off-line/unpublished/private libraries ([issue #260](https://github.com/platformio/platformio/issues/260))
-   Disable project auto-clean while building/uploading firmware using
  [platformio run –disable-auto-clean](http://docs.platformio.org/en/latest/userguide/cmd_run.html#cmdoption--disable-auto-clean) option ([issue #255](https://github.com/platformio/platformio/issues/255))
-   Show internal errors from “Miniterm” using [platformio serialports
  monitor](http://docs.platformio.org/en/latest/userguide/cmd_serialports.html#platformio-serialports-monitor) command ([issue #257](https://github.com/platformio/platformio/issues/257))
-   Fixed [platformio serialports monitor –help][platformio serialports
  monitor](http://docs.platformio.org/en/latest/userguide/cmd_serialports.html#platformio-serialports-monitor) information with HEX char for hotkeys ([issue #253](https://github.com/platformio/platformio/issues/253))
-   Handle “OSError: [Errno 13] Permission denied” for PlatformIO
  installer script ([issue #254](https://github.com/platformio/platformio/issues/254))
",19606299
66,False,False,2015-07-17T11:54:55Z,2015-07-17T11:59:37Z,"-   Project generator for [CLion IDE]([issue #132])
-   Updated `tool-bossac` package to 1.5 version for [atmelsam](http://docs.platformio.org/en/latest/platforms/atmelsam.html) platform ([issue
  #251](https://github.com/platformio/platformio/issues/251))
-   Updated `sdk-esp8266` package for [espressif](http://docs.platformio.org/en/latest/platforms/espressif.html) platform 
-   Fixed incorrect arguments handling for [platformio serialports
  monitor](http://docs.platformio.org/en/latest/userguide/cmd_serialports.html#platformio-serialports-monitor) command ([issue #248](https://github.com/platformio/platformio/issues/248))
",19606299
67,False,False,2015-07-01T15:03:44Z,2015-07-01T15:07:02Z,"-   Allowed to exclude/include source files from build process using
  [src_filter]([issue #240])
-   Launch own extra script before firmware building/uploading processes
  ([issue #239](https://github.com/platformio/platformio/issues/239))
-   Specify own path to the linker script (ld) using [build_flags](http://docs.platformio.org/en/latest/projectconf.html#build-flags)
  option ([issue #233](https://github.com/platformio/platformio/issues/233))
-   Specify library compatibility with the all platforms/frameworks
  using `*` symbol in [library.json](http://docs.platformio.org/en/latest/librarymanager/config.html)
-   Added support for new embedded boards: _ST 32L0538DISCOVERY and
  Delta DFCM-NNN40_ to [Framework mbed](http://docs.platformio.org/en/latest/frameworks/mbed.html)
-   Updated packages for [Framework Arduino (AVR, SAM, Espressif and
  Teensy cores](http://docs.platformio.org/en/latest/frameworks/arduino.html), [Framework mbed](http://docs.platformio.org/en/latest/frameworks/mbed.html), [Espressif ESP8266 SDK]([issue
  #246])
-   Fixed `stk500v2_command(): command failed` ([issue #238](https://github.com/platformio/platformio/issues/238))
-   Fixed IDE project generator when board is specified ([issue #242](https://github.com/platformio/platformio/issues/242))
-   Fixed relative path for includes when generating project for IDE
  ([issue #243](https://github.com/platformio/platformio/issues/243))
-   Fixed ESP8266 native SDK exception ([issue #245](https://github.com/platformio/platformio/issues/245))
",19606299
68,False,False,2015-06-21T18:51:38Z,2015-06-21T18:57:22Z,"- Fixed broken link to SCons installer
",19606299
69,False,False,2015-06-09T19:21:21Z,2015-06-09T19:35:09Z,"-   Automatically detect upload port using VID:PID board settings
  ([issue #231](https://github.com/platformio/platformio/issues/231))
-   Improved detection of build changes
-   Avoided `LibInstallDependencyError` when more then 1 library is
  found ([issue #229](https://github.com/platformio/platformio/issues/229))
",19606299
70,False,False,2015-06-03T16:54:52Z,2015-06-03T16:59:38Z,"-   Added Silicon Labs EFM32 [siliconlabsefm32](http://docs.platformio.org/en/latest/platforms/siliconlabsefm32.html) development platform
  ([issue #226](https://github.com/platformio/platformio/issues/226))
-   Integrate PlatformIO with [Circle CI](https://circleci.com) and [Shippable CI](https://shippable.com)
-   Described in documentation how to [create/register own board](http://docs.platformio.org/en/latest/platforms/creating_board.html) for
  PlatformIO
-   Disabled “nano.specs” for ARM-based platforms ([issue #219](https://github.com/platformio/platformio/issues/219))
-   Fixed “ConnectionError” when PlatformIO SF Storage is off-line
-   Fixed resolving of C/C++ std libs by Eclipse IDE ([issue #220](https://github.com/platformio/platformio/issues/220))
-   Fixed firmware uploading using USB programmer (USBasp) for
  [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html) platform ([issue #221](https://github.com/platformio/platformio/issues/221))
",19606299
71,False,False,2015-05-27T16:27:02Z,2015-05-27T16:28:25Z,"- Fixed libraries order for ""Library Dependency Finder"" under Linux OS 
",19606299
72,False,False,2015-05-22T18:49:14Z,2015-05-22T19:04:48Z,"## _Made in [Paradise](https://twitter.com/ikravets/status/592356377185619969)_ 
-   PlatformIO as [Continuous Integration](http://docs.platformio.org/en/latest/ci/index.html) (CI) tool for embedded
  projects ([issue #108](https://github.com/platformio/platformio/issues/108))
-   Initialise PlatformIO project for the specified IDE ([issue
  #151](https://github.com/platformio/platformio/issues/151))
-   PlatformIO CLI 2.0: “platform” related commands have been moved to
  `platformio platforms` subcommand ([issue #158](https://github.com/platformio/platformio/issues/158))
-   Created [PlatformIO gitter.im](https://gitter.im/platformio/platformio) room ([issue #174](https://github.com/platformio/platformio/issues/174))
-   Global `-f, --force` option which will force to accept any
  confirmation prompts ([issue #152](https://github.com/platformio/platformio/issues/152))
-   Run project with [platformio run –project-dir](http://docs.platformio.org/en/latest/userguide/cmd_run.html#cmdoption--project-dir) option without
  changing the current working directory ([issue #192](https://github.com/platformio/platformio/issues/192))
-   Control verbosity of [platformio run](http://docs.platformio.org/en/latest/userguide/cmd_run.html#cmdoption-platformio-run-v) command via `-v/--verbose`
  option
-   Add library dependencies for build environment using
  [install_libs](http://docs.platformio.org/en/latest/projectconf.html#install-libs) option in `platformio.ini` ([issue #134](https://github.com/platformio/platformio/issues/134))
-   Specify libraries which are compatible with build environment using
  [use_libs](http://docs.platformio.org/en/latest/projectconf.html#use-libs) option in `platformio.ini` ([issue #148](https://github.com/platformio/platformio/issues/148))
-   Add more boards to PlatformIO project with [platformio init
  –board](http://docs.platformio.org/en/latest/userguide/cmd_init.html#cmdoption--board) command ([issue #167](https://github.com/platformio/platformio/issues/167))
-   Choose which library to update ([issue #168](https://github.com/platformio/platformio/issues/168))
-   Specify [platformio init –env-prefix](http://docs.platformio.org/en/latest/userguide/cmd_init.html#cmdoption--env-prefix) when initialise/update
  project ([issue #182](https://github.com/platformio/platformio/issues/182))
-   Added new Armstrap boards ([issue #204](https://github.com/platformio/platformio/issues/204))
-   Updated SDK for [espressif](http://docs.platformio.org/en/latest/platforms/espressif.html) development platform to v1.1 ([issue
  #179](https://github.com/platformio/platformio/issues/179))
-   Disabled automatic updates by default for platforms, packages and
  libraries ([issue #171](https://github.com/platformio/platformio/issues/171))
-   Fixed bug with creating copies of source files ([issue #177](https://github.com/platformio/platformio/issues/177))
",19606299
73,False,False,2015-05-15T11:00:51Z,2015-05-15T11:04:50Z,"-   Added support of [Framework mbed](http://platformio.org/#!/frameworks/mbed) for Teensy 3.1 ([issue #183](https://github.com/platformio/platformio/issues/183))
-   Added GDB as alternative uploader to [ststm32](http://docs.platformio.org/en/latest/platforms/ststm32.html) platform ([issue
  #175](https://github.com/platformio/platformio/issues/174))
-   Added [examples](https://github.com/platformio/platformio/tree/develop/examples) with preconfigured IDE projects ([issue #154](https://github.com/platformio/platformio/issues/154))
-   Fixed firmware uploading under Linux OS for Arduino Leonardo board
  ([issue #178](https://github.com/platformio/platformio/issues/178))
-   Fixed invalid “mbed” firmware for Nucleo F411RE ([issue #185](https://github.com/platformio/platformio/issues/185))
-   Fixed parsing of includes for PlatformIO Library Dependency Finder
  ([issue #189](https://github.com/platformio/platformio/issues/189))
-   Fixed handling symbolic links within source code directory ([issue
  #190](https://github.com/platformio/platformio/issues/190))
-   Fixed cancelling any previous definition of name, either built in or
  provided with a `-D` option ([issue #191](https://github.com/platformio/platformio/issues/191))
",19606299
74,False,False,2015-04-11T16:53:49Z,2015-04-11T17:05:14Z,"-   Added [espressif](http://docs.platformio.org/en/latest/platforms/espressif.html) development platform with ESP01 board
-   Integrated PlatformIO with AppVeyor Windows based Continuous
  Integration system ([issue #149](https://github.com/platformio/platformio/issues/149))
-   Added support for Teensy LC board to [teensy](http://docs.platformio.org/en/latest/platforms/teensy.html) platform
-   Added support for new Arduino based boards by _SparkFun, BQ,
  LightUp, LowPowerLab, Quirkbot, RedBearLab, TinyCircuits,
  WickedDevice_ to [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html#boards) platform
-   Upgraded [Arduino Framework](http://docs.platformio.org/en/latest/frameworks/arduino.html) to 1.6.3 version ([issue #156](https://github.com/platformio/platformio/issues/156))
-   Upgraded [Energia Framework](http://docs.platformio.org/en/latest/frameworks/energia.html) to 0101E0015 version ([issue
  #146](https://github.com/platformio/platformio/issues/146))
-   Upgraded [Arduino Framework with Teensy Core](http://docs.platformio.org/en/latest/frameworks/arduino.html) to
  1.22 version ([issue #162](https://github.com/platformio/platformio/issues/162), [issue #170](https://github.com/platformio/platformio/issues/170))
-   Fixed exceptions with PlatformIO auto-updates when Internet
  connection isn’t active
",19606299
75,False,False,2015-03-27T15:04:36Z,2015-03-27T15:07:18Z,"-   Moved PlatformIO source code and repositories from [Ivan Kravets](https://github.com/ivankravets)
  account to [PlatformIO Organisation](https://github.com/platformio) ([issue #138](https://github.com/platformio/platformio/issues/138))
-   Added support for new Arduino based boards by _SparkFun, RepRap,
  Sanguino_ to [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html#boards) platform ([issue #127](https://github.com/platformio/platformio/issues/127), [issue
  #131](https://github.com/platformio/platformio/issues/131))
-   Added integration instructions for [Visual Studio](http://docs.platformio.org/en/latest/ide/visualstudio.html) and [Sublime
  Text](http://docs.platformio.org/en/latest/ide/sublimetext.html) IDEs
-   Improved handling of multi-file `*.ino/pde` sketches ([issue
  #130](https://github.com/platformio/platformio/issues/130))
-   Fixed wrong insertion of function prototypes converting `*.ino/pde`
  ([issue #137](https://github.com/platformio/platformio/issues/137), [issue #140](https://github.com/platformio/platformio/issues/140))
",19606299
76,False,False,2015-03-20T20:30:06Z,2015-03-20T21:29:29Z,"-   Added full support of [mbed](http://docs.platformio.org/en/latest/frameworks/mbed.html) framework including libraries: _RTOS,
  Ethernet, DSP, FAT, USB_.
-   Added [freescalekinetis](http://docs.platformio.org/en/latest/platforms/freescalekinetis.html) development platform with Freescale
  Kinetis Freedom boards
-   Added [nordicnrf51](http://docs.platformio.org/en/latest/platforms/nordicnrf51.html) development platform with supported boards
  from _JKSoft, Nordic, RedBearLab, Switch Science_
-   Added [nxplpc](http://docs.platformio.org/en/latest/platforms/nxplpc.html) development platform with supported boards from _CQ
  Publishing, Embedded Artists, NGX Technologies, NXP, Outrageous
  Circuits, SeeedStudio, Solder Splash Labs, Switch Science, u-blox_
-   Added support for _ST Nucleo_ boards to [ststm32](http://docs.platformio.org/en/latest/platforms/ststm32.html) development
  platform
-   Created new [Frameworks](http://docs.platformio.org/en/latest/frameworks/index.html) page in documentation and added to
  [PlatformIO Web Site](http://platformio.org) ([issue #115](https://github.com/ivankravets/platformio/issues/115))
-   Introduced online [Embedded Boards Explorer](http://platformio.org/#!/boards)
-   Automatically append define `-DPLATFORMIO=%version%` to builder
  ([issue #105](https://github.com/ivankravets/platformio/issues/105))
-   Renamed `stm32` development platform to [ststm32](http://docs.platformio.org/en/latest/platforms/ststm32.html)
-   Renamed `opencm3` framework to [libopencm3](http://docs.platformio.org/en/latest/frameworks/libopencm3.html)
-   Fixed uploading for [atmelsam](http://docs.platformio.org/en/latest/platforms/atmelsam.html) development platform
-   Fixed re-arranging the `*.ino/pde` files when converting to `*.cpp`
  ([issue #100](https://github.com/ivankravets/platformio/issues/100))
",19606299
77,False,False,2015-03-05T13:05:40Z,2015-03-05T13:50:15Z,"-   Implemented `PLATFORMIO_*` environment variables ([issue #102](https://github.com/ivankravets/platformio/issues/102))
-   Added support for _SainSmart_ boards to [atmelsam](http://docs.platformio.org/en/latest/platforms/atmelsam.html#boards) development
  platform
-   Added [Project Configuration](http://docs.platformio.org/en/latest/projectconf.html) option named [envs_dir](http://docs.platformio.org/en/latest/projectconf.html#envs-dir)
-   Disabled “prompts” automatically for _Continuous Integration_
  systems ([issue #103](https://github.com/ivankravets/platformio/issues/103))
-   Fixed firmware uploading for [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html#boards) boards which work within
  `usbtiny` protocol
-   Fixed uploading for _Digispark_ board ([issue #106](https://github.com/ivankravets/platformio/issues/106))
",19606299
78,False,False,2015-02-27T21:06:31Z,2015-02-27T21:09:46Z,"**PlatformIO 1.0 - recommended for production**
-   Changed development status from `beta` to `Production/Stable`
-   Added support for _ARM_-based credit-card computers: [Raspberry
  Pi](http://www.raspberrypi.org), [BeagleBone](http://beagleboard.org) and [CubieBoard](http://cubieboard.org)
-   Added [atmelsam](http://docs.platformio.org/en/latest/platforms/atmelsam.html) development platform with supported boards:
  _Arduino Due and Digistump DigiX_ ([issue #71](https://github.com/ivankravets/platformio/issues/71))
-   Added [stm32](http://docs.platformio.org/en/latest/platforms/stm32.html) development platform with supported boards:
  _Discovery kit for STM32L151/152, STM32F303xx, STM32F407/417 lines_
  and [libOpenCM3 Framework](http://www.libopencm3.org) ([issue #73](https://github.com/ivankravets/platformio/issues/73))
-   Added [teensy](http://docs.platformio.org/en/latest/platforms/teensy.html) development platform with supported boards: _Teensy
  2.x & 3.x_ ([issue #72](https://github.com/ivankravets/platformio/issues/72))
-   Added new _Arduino_ boards to [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html#boards) platform: _Arduino NG,
  Arduino BT, Arduino Esplora, Arduino Ethernet, Arduino Robot
  Control, Arduino Robot Motor and Arduino Yun_
-   Added support for _Adafruit_ boards to [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html#boards) platform:
  _Adafruit Flora and Adafruit Trinkets_ ([issue #65](https://github.com/ivankravets/platformio/issues/65))
-   Added support for _Digispark_ boards to [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html#boards) platform:
  _Digispark USB Development Board and Digispark Pro_ ([issue #47](https://github.com/ivankravets/platformio/issues/47))
-   Covered code with tests ([issue #2](https://github.com/ivankravets/platformio/issues/2))
-   Refactored _Library Dependency Finder_ (issues [#48](https://github.com/ivankravets/platformio/issues/48), [#50](https://github.com/ivankravets/platformio/issues/50),
  [#55](https://github.com/ivankravets/platformio/pull/55))
-   Added [src_dir](http://docs.platformio.org/en/latest/projectconf.html#src-dir) option to `[platformio]` section of
  [platformio.ini](http://docs.platformio.org/en/latest/projectconf.html) which allows to redefine location to project’s
  source directory ([issue #83](https://github.com/ivankravets/platformio/issues/83))
-   Added `--json-output` option to [platformio boards](http://docs.platformio.org/en/latest/userguide/cmd_boards.html) and
  [platformio search](http://docs.platformio.org/en/latest/userguide/cmd_search.html) commands which allows to return the output in
  [JSON](http://en.wikipedia.org/wiki/JSON) format ([issue #42](https://github.com/ivankravets/platformio/issues/42))
-   Allowed to ignore some libs from _Library Dependency Finder_ via
  `ignore_libs <http://docs.platformio.org
-   Allowed to ignore some libs from _Library Dependency Finder_ via
  [ignore_libs](http://docs.platformio.org/en/latest/projectconf.html#ignore-libs) option
-   Improved [platformio run](http://docs.platformio.org/en/latest/userguide/cmd_run.html) command: asynchronous output for build
  process, timing and detailed information about environment
  configuration ([issue #74](https://github.com/ivankravets/platformio/issues/74))
-   Output compiled size and static memory usage with [platformio run](http://docs.platformio.org/en/latest/userguide/cmd_run.html)
  command ([issue #59](https://github.com/ivankravets/platformio/issues/59))
-   Updated framework-arduino AVR & SAM to 1.6 stable version
-   Fixed an issue with the libraries that are git repositories ([issue
  #49](https://github.com/ivankravets/platformio/issues/49))
-   Fixed handling of assembly files ([issue #58](https://github.com/ivankravets/platformio/issues/58))
-   Fixed compiling error if space is in user’s folder ([issue #56](https://github.com/ivankravets/platformio/issues/56))
-   Fixed
  AttributeError: 'module' object has no attribute 'disable_warnings'
  when a version of requests package is less then 2.4.0
-   Fixed bug with invalid process’s “return code” when PlatformIO has
  internal error ([issue #81](https://github.com/ivankravets/platformio/issues/81))
-   Several bug fixes, increased stability and performance improvements
",19606299
79,False,False,2015-01-06T16:33:36Z,2015-01-06T16:37:43Z,"- Fixed an issue with `--json-output` (issue #42)
- Fixed an exception during [platformio upgrade](http://docs.platformio.org/en/latest/userguide/cmd_upgrade.html) under Windows OS (issue #45)
",19606299
80,False,False,2015-01-02T21:18:14Z,2015-01-02T21:22:31Z,"- Added `--json-output` option to
  [platformio list](http://docs.platformio.org/en/latest/userguide/cmd_list.html),
  [platformio serialports list](http://docs.platformio.org/en/latest/userguide/cmd_serialports.html) and
  [platformio lib list](http://docs.platformio.org/en/latest/userguide/cmd_lib_list.html)
  commands which allows to return the output in [JSON](http://en.wikipedia.org/wiki/JSON) format
  (issue #42)
- Fixed missing auto-uploading by default after [platformio init](http://docs.platformio.org/en/latest/userguide/cmd_init.html) command
",19606299
81,False,False,2015-01-01T18:57:47Z,2015-01-01T19:07:38Z,"- Implemented [platformio boards](http://docs.platformio.org/en/latest/userguide/cmd_boards.html)
  command (issue #11)
- Added support of _Engduino_ boards for
  [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html#engduino)
  platform (issue #38)
- Added `--board` option to [platformio init](http://docs.platformio.org/en/latest/userguide/cmd_init.html)
  command which allows to initialise project with the specified embedded boards
  (issue #21)
- Added [example with uploading firmware](http://docs.platformio.org/en/latest/projectconf.html#examples)
  via USB programmer (USBasp) for
  [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html)
  _MCUs_ (issue #35)
- Automatic detection of port on [platformio serialports monitor](http://docs.platformio.org/en/latest/userguide/cmd_serialports.html#platformio-serialports-monitor) (issue #37)
- Allowed auto-installation of platforms when prompts are disabled (issue #43)
- Fixed urllib3's _SSL_ warning under Python <= 2.7.2 (issue #39)
- Fixed bug with _Arduino USB_ boards (issue #40)
",19606299
82,False,False,2014-12-10T21:12:27Z,2014-12-10T21:16:30Z,"## 0.9.2 (2014-12-10)
- Replaced ""dark blue"" by ""cyan"" colour for the texts (issue #33)
- Added new setting [enable_prompts](http://docs.platformio.ikravets.com/en/latest/userguide/cmd_settings.html)
  and allowed to disable all _PlatformIO_ prompts (useful for cloud compilers)
  (issue #34)
- Fixed compilation bug on _Windows_ with installed _MSVC_ (issue #18)
",19606299
83,False,False,2014-12-04T22:04:38Z,2014-12-04T22:25:49Z,"- Ask user to install platform (when it hasn't been installed yet) within
  [platformio run](http://docs.platformio.ikravets.com/en/latest/userguide/cmd_run.html) and [platformio show](http://docs.platformio.ikravets.com/en/latest/userguide/cmd_show.html) commands
- Improved [main documentation](http://docs.platformio.ikravets.com)
- Fixed ""_OSError: [Errno 2] No such file or directory_"" within
  [platformio run](http://docs.platformio.ikravets.com/en/latest/userguide/cmd_run.html)
  command when PlatformIO isn't installed properly
- Fixed example for [Eclipse IDE with Tiva board](https://github.com/ivankravets/platformio/tree/develop/examples/ide-eclipse)
  (issue #32)
- Upgraded [Eclipse Project Examples](https://github.com/ivankravets/platformio/tree/develop/examples/ide-eclipse)
  to latest _Luna_ and _PlatformIO_ releases
",19606299
84,False,False,2014-10-19T14:59:44Z,2014-12-01T22:00:34Z,"- Avoided trademark issues in [library.json](http://docs.platformio.ikravets.com/en/latest/librarymanager/config.html)
  with the new fields: [frameworks](http://docs.platformio.ikravets.com/en/latest/librarymanager/config.html#frameworks),
  [platforms](http://docs.platformio.ikravets.com/en/latest/librarymanager/config.html#platforms)
  and [dependencies](http://docs.platformio.ikravets.com/en/latest/librarymanager/config.html#dependencies)
  (issue #17)
- Switched logic from ""Library Name"" to ""Library Registry ID"" for all
  [platformio lib](http://docs.platformio.ikravets.com/en/latest/userguide/lib/index.html)
  commands (install, uninstall, update and etc.)
- Renamed `author` field to [authors](http://docs.platformio.ikravets.com/en/latest/librarymanager/config.html#authors)
  and allowed to setup multiple authors per library in [library.json](http://docs.platformio.ikravets.com/en/latest/librarymanager/config.html)
- Added option to specify ""maintainer"" status in [authors](http://docs.platformio.ikravets.com/en/latest/librarymanager/config.html#authors) field
- New filters/options for [platformio lib search](http://docs.platformio.ikravets.com/en/latest/userguide/lib/cmd_search.html)
  command: `--framework` and `--platform`
",19606299
85,False,False,2014-12-01T21:04:54Z,2014-12-01T21:57:39Z,"- Implemented [platformio settings](http://docs.platformio.ikravets.com/en/latest/userguide/cmd_settings.html) command
- Improved [platformio init](http://docs.platformio.ikravets.com/en/latest/userguide/cmd_init.html) command.
  Added new option `--project-dir` where you can specify another path to
  directory where new project will be initialized (issue #31)
- Added _Migration Manager_ which simplifies process with upgrading to a
  major release
- Added _Telemetry Service_ which should help us make _PlatformIO_ better
- Implemented _PlatformIO AppState Manager_ which allow to have multiple
  `.platformio` states.
- Refactored _Package Manager_
- Download Manager: fixed SHA1 verification within _Cygwin Environment_
  (issue #26)
- Fixed bug with code builder and built-in Arduino libraries
  (issue #28)
",19606299
86,False,False,2014-10-06T20:28:12Z,2014-10-06T20:31:24Z,"- Fixed bug with order for includes in conversation from INO/PDE to CPP
- Automatic detection of port on upload (issue #15)
- Fixed lib update crashing when no libs are installed (issue #19)
",19606299
87,False,False,2014-09-24T19:25:58Z,2014-09-24T19:31:01Z,"- Implemented new `[platformio]` section for Configuration File with `home_dir`
  option (issue #14)
- Implemented _Library Manager_ (issue #6)
",19606299
88,False,False,2014-08-09T20:21:02Z,2014-08-09T20:25:43Z,"- Implemented `serialports monitor` (issue #10)
- Fixed an issue `ImportError: No module named platformio.util` (issue #9)
- Fixed bug with auto-conversation from Arduino *.ino to *.cpp
",19606299
89,False,False,2014-08-04T08:56:43Z,2014-08-04T09:04:46Z,"- Improved nested lookups for libraries
- Disabled default warning flag ""-Wall""
- Added auto-conversation from *.ino to valid *.cpp for Arduino/Energia
  frameworks (issue #7)
- Added [Arduino example](https://github.com/ivankravets/platformio/tree/develop/examples/arduino-adafruit-library)
  with external library (Adafruit CC3000)
- Implemented `platformio upgrade` command and ""auto-check"" for the latest
  version (issue #8)
- Fixed issue with ""auto-reset"" for Raspduino board
- Fixed bug with nested libs building
",19606299
90,False,False,2014-07-31T13:26:35Z,2014-07-31T13:28:25Z,"- Implemented `serialports` command
- Allowed to put special build flags only for `src` files via
  `srcbuild_flags` environment option
- Allowed to override some of settings via system environment variables
  such as: `$PIOSRCBUILD_FLAGS` and `$PIOENVS_DIR`
- Added `--upload-port` option for `platformio run` command
- Implemented (especially for [SmartAnthill](http://smartanthill.ikravets.com/))
  `platformio run -t uploadlazy` target (no dependencies to framework libs,
  ELF and etc.)
- Allowed to skip default packages via `platformio install --skip-default-package` flag
- Added tools for Raspberry Pi platform
- Added support for Microduino and Raspduino boards in `atmelavr` platform
",19606299
91,False,False,2014-06-21T20:10:39Z,2014-06-21T20:15:40Z,"- Fixed auto-installer for Windows OS (bug with %PATH% customisations)  
",19606299
92,False,False,2014-06-21T19:31:46Z,2014-06-21T19:34:53Z,"## 0.3.0 (2014-06-21)
- Allowed to pass multiple ""SomePlatform"" to install/uninstall commands
- Added ""IDE Integration"" section to README with Eclipse project examples
- Created auto installer script for _PlatformIO_ (issue #3)
- Added ""Super-Quick"" way to Installation section (README)
- Implemented ""build_flags"" option for environments (issue #4)
",19606299
93,False,False,2014-06-15T19:06:33Z,2014-06-15T19:15:58Z,"## 0.2.0 (2014-06-15)
- Resolved [issue #1 ""Build referred libraries""](https://github.com/ivankravets/platformio/issues/1)
- Renamed project's ""libs"" directory to ""lib""
- Added [arduino-internal-library](https://github.com/ivankravets/platformio/tree/develop/examples/arduino-internal-library) example
- Changed to beta status
",19606299
94,False,False,2014-06-13T19:16:19Z,2014-06-15T19:15:35Z,"## 0.1.0 (2014-06-13)
- Birth! First alpha release
",19606299
95,False,False,2020-02-11T17:06:22Z,2020-02-13T11:12:09Z,"# Change Log

## [v3.0.2](https://github.com/LiskHQ/lisk-sdk/tree/v3.0.2) (2020-02-12)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v3.0.1...v3.0.2)

This release addresses bugs identified in the BFT finality manager of lisk-framework and the webpack build for lisk-cryptography.

### Released packages
- lisk-sdk@3.0.2
- lisk-commander@3.0.2
- lisk-framework@0.5.2
- @liskhq/lisk-elements@3.0.2
- @liskhq/lisk-client@3.0.2
- @liskhq/lisk-cryptography@2.4.2
- @liskhq/lisk-transactions@3.0.2
- @liskhq/lisk-validator@0.3.1
- @liskhq/lisk-p2p@0.4.2

### Bugs
- BFT properties min precommit height calculation error overwrite in finality in case of recompute need to be fixed [#4808](https://github.com/LiskHQ/lisk-sdk/issues/4808)
- lisk-cryptography should not assign to the env variable [#4779](https://github.com/LiskHQ/lisk-sdk/issues/4779)

<details>
  <summary>All the issues</summary>

### Closed issues
- BFT properties  min precommit height calculation error overwrite in finality in case of recompute need to be fixed [#4808](https://github.com/LiskHQ/lisk-sdk/issues/4808)
- Synchronizer expects to have peerId, but when restarting it doesnt have peerId [#4761](https://github.com/LiskHQ/lisk-sdk/issues/4761)
- Chain rebuild process is initialized in wrong order and failed to process [#4775](https://github.com/LiskHQ/lisk-sdk/issues/4775)
- When fails to undo, it crashes the node [#4796](https://github.com/LiskHQ/lisk-sdk/issues/4796)
- BFT deletion logic throws error which is not error [#4800](https://github.com/LiskHQ/lisk-sdk/issues/4800)
- It should not assign to the env variable [#4779](https://github.com/LiskHQ/lisk-sdk/issues/4779)
- BFT verify block header need to check version and prevotes [#4768](https://github.com/LiskHQ/lisk-sdk/issues/4768)
- BFT header cache is not working properly [#4776](https://github.com/LiskHQ/lisk-sdk/issues/4776)
- When BFTChainDisjointError happens, it should reject the block [#4762](https://github.com/LiskHQ/lisk-sdk/issues/4762)

### Merged pull requests
- Fix wrong min precommit height and overwrite of finality - Closes #4808 [#4811](https://github.com/LiskHQ/lisk-sdk/pull/4811) ([shuse2](https://github.com/shuse2))
- Fix BFT delete blocks logic - Closes #4800 [#4803](https://github.com/LiskHQ/lisk-sdk/pull/4803) ([shuse2](https://github.com/shuse2))
- Fix undo crash - Closes #4796 [#4797](https://github.com/LiskHQ/lisk-sdk/pull/4797) ([shuse2](https://github.com/shuse2))
- Remove env assignment - Closes #4779 [#4780](https://github.com/LiskHQ/lisk-sdk/pull/4780) ([shuse2](https://github.com/shuse2))
- Chain rebuild process is initialized in wrong order and failed to process - Closes #4775 [#4778](https://github.com/LiskHQ/lisk-sdk/pull/4778) ([nazarhussain](https://github.com/nazarhussain))
- Fix the cache loading to be consistent - Closes #4776 [#4777](https://github.com/LiskHQ/lisk-sdk/pull/4777) ([shuse2](https://github.com/shuse2))
- Fix BFT condition - Closes #4768 [#4769](https://github.com/LiskHQ/lisk-sdk/pull/4769) ([shuse2](https://github.com/shuse2))
- Update to throw disjoint error - Closes #4762 [#4764](https://github.com/LiskHQ/lisk-sdk/pull/4764) ([shuse2](https://github.com/shuse2))
- Remove restart from FCS - Closes #4761 [#4763](https://github.com/LiskHQ/lisk-sdk/pull/4763) ([shuse2](https://github.com/shuse2))
- Update crypto not to call fast if slow is specified - Closes #4759 [#4760](https://github.com/LiskHQ/lisk-sdk/pull/4760) ([shuse2](https://github.com/shuse2))
</details>",50873641
96,False,False,2020-01-24T13:07:46Z,2020-01-24T16:32:06Z,"# Change Log

## [v3.0.1](https://github.com/LiskHQ/lisk-sdk/tree/v3.0.1) (2020-01-24)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v3.0.0...v3.0.1)

This release addresses 2 minor bugs related to commander and block processing.

### Released packages
- lisk-sdk@3.0.1
- lisk-commander@3.0.1
- lisk-framework@0.5.1
- @liskhq/lisk-api-client@3.0.1
- @liskhq/lisk-elements@3.0.1
- @liskhq/lisk-client@3.0.1
- @liskhq/lisk-cryptography@2.4.1
- @liskhq/lisk-transactions@3.0.1
- @liskhq/lisk-p2p@0.4.1

### Bugs
- Duplicate key value violates unique constraint error https://github.com/LiskHQ/lisk-sdk/issues/4668
- Commander install command has unreachable code and missing pm2 process unregister https://github.com/LiskHQ/lisk-sdk/issues/4736

<details>
  <summary>All the issues</summary>

### Closed issues:
- Duplicate key value violates unique constraint error https://github.com/LiskHQ/lisk-sdk/issues/4668
- Expose new element libraries https://github.com/LiskHQ/lisk-sdk/issues/4728
- Commander install command has unreachable code and missing pm2 process un register https://github.com/LiskHQ/lisk-sdk/issues/4736
- Remove nethash from the code https://github.com/LiskHQ/lisk-sdk/issues/4663
- getTimeFromBlockchainEpoch should be exposed from lisk-transactions https://github.com/LiskHQ/lisk-sdk/issues/4732

### Merged pull requests:
- Fix unique constraints https://github.com/LiskHQ/lisk-sdk/pull/4724
- Expose new element libraries https://github.com/LiskHQ/lisk-sdk/pull/4729
- Commander install command has unreachable code and missing pm2 process un register https://github.com/LiskHQ/lisk-sdk/pull/4738
- Remove nethash from the code https://github.com/LiskHQ/lisk-sdk/pull/4735
- getTimeFromBlockchainEpoch should be exposed from lisk-transactions https://github.com/LiskHQ/lisk-sdk/pull/4734
</details>",50873641
97,False,False,2020-01-16T13:03:00Z,2020-01-17T12:22:18Z,"# Change Log

## [v2.3.7](https://github.com/LiskHQ/lisk-sdk/tree/v2.3.7) (2020-01-16)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v2.3.6...v2.3.7)

This release addresses 2 security issues found in the P2P library.

### Released packages
#### Patch releases
- lisk-sdk@2.3.7
- lisk-framework@0.4.7
- @liskhq/lisk-p2p@0.3.6

### Bugs
- Lisk P2P data frame and control frame security vulnerability https://github.com/LiskHQ/lisk-sdk/issues/4713
- Lisk P2P bucket overflow in new peers bucket list https://github.com/LiskHQ/lisk-sdk/issues/4714

<details>
  <summary>All the issues</summary>

  ### Closed issues:
- Lisk P2P data frame and control frame security vulnerability https://github.com/LiskHQ/lisk-sdk/issues/4713
- Lisk P2P bucket overflow in new peers bucket list https://github.com/LiskHQ/lisk-sdk/issues/4714
</details>",50873641
98,False,False,2020-01-17T12:40:04Z,2020-01-17T13:30:43Z,"# Change Log

## [v3.0.0](https://github.com/LiskHQ/lisk-sdk/tree/v3.0.0) (2020-01-17)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v2.3.7...v3.0.0)

This release implements 4 LIPs as part of the Security and Reliability phase:
- [Introduce BFT consensus protocol](https://github.com/LiskHQ/lips/blob/master/proposals/lip-0014.md)
- [Introduce robust peer selection and banning mechanism](https://github.com/LiskHQ/lips/blob/master/proposals/lip-0004.md)
- [Mitigate transaction replay on different chains](https://github.com/LiskHQ/lips/blob/master/proposals/lip-0009.md)
- [Remove redundant properties in transactions](https://github.com/LiskHQ/lips/blob/master/proposals/lip-0012.md)

### Released packages
- lisk-sdk@3.0.0
- lisk-elements@3.0.0
- lisk-commander@3.0.0
- lisk-framework@0.5.0
- @liskhq/lisk-api-client@3.0.0
- @liskhq/lisk-client@3.0.0
- @liskhq/lisk-constants@1.3.0
- @liskhq/lisk-cryptography@2.4.0
- @liskhq/lisk-p2p@0.4.0
- @liskhq/lisk-passphrase@3.0.0
- @liskhq/lisk-transaction-pool@0.2.0
- @liskhq/lisk-transactions@3.0.0
- @liskhq/lisk-validator@0.3.0

### LIPs
- Introduce BFT consensus protocol [#3555](https://github.com/LiskHQ/lisk-sdk/issues/3555)
- Remove redundant properties from transaction objects [#4038](https://github.com/LiskHQ/lisk-sdk/issues/4038)
- LIPS:0004 Introduce robust peer selection and banning mechanism [#3328](https://github.com/LiskHQ/lisk-sdk/issues/3328)
- Mitigate transaction replay on different chains [#4039](https://github.com/LiskHQ/lisk-sdk/issues/4039)

### Improvements
- Inefficient blocks transmission between peers [#2424](https://github.com/LiskHQ/lisk-sdk/issues/2424)
- Do not include nonce when broadcasting [#3702](https://github.com/LiskHQ/lisk-sdk/issues/3702)
- Remove NewRelic integration [#4141](https://github.com/LiskHQ/lisk-sdk/issues/4141)
- Remove broadhash consensus  [#4265](https://github.com/LiskHQ/lisk-sdk/issues/4265)
- Add filter to Accounts entity to allow searching in account.asset field  [#3990](https://github.com/LiskHQ/lisk-sdk/issues/3990)
- Upgrade to NodeJS 12 [#4392](https://github.com/LiskHQ/lisk-sdk/issues/4392)

### Bugs
- isNullByteIncluded mismatch regex [#2907](https://github.com/LiskHQ/lisk-sdk/issues/2907)
- Setting LISK_REDIS_HOST leads to unexpected logging behaviour [#4630](https://github.com/LiskHQ/lisk-sdk/issues/4630)
- HTTP API whitelists do not always work as expected [#4629](https://github.com/LiskHQ/lisk-sdk/issues/4629)
- LISK_API_PUBLIC=false does not work [#4631](https://github.com/LiskHQ/lisk-sdk/issues/4631)
- P2P: Peer ban expires before 24 hours [#4561](https://github.com/LiskHQ/lisk-sdk/issues/4561)

<details>
  <summary>All the issues</summary>

### Closed issues:
- Allow /delegates endpoint to accept voteWeight as sort parameter [#4715](https://github.com/LiskHQ/lisk-sdk/issues/4715)
- Allow lisk-api-client to have configureable sort parameter for delegates resource [#4716](https://github.com/LiskHQ/lisk-sdk/issues/4716)
- Upgrade dependencies for http-api module [#4699](https://github.com/LiskHQ/lisk-sdk/issues/4699)
- Protocol Spec for vote transactions generate different output [#4686](https://github.com/LiskHQ/lisk-sdk/issues/4686)
- Duplicate key value violates unique constraint error [#4668](https://github.com/LiskHQ/lisk-sdk/issues/4668)
- TypeError: Converting circular structure to JSON with Node 12.14.1 [#4667](https://github.com/LiskHQ/lisk-sdk/issues/4667)
- Fix lodash vulnerability [#4656](https://github.com/LiskHQ/lisk-sdk/issues/4656)
- Chain state store finalize () does not return the promise [#4652](https://github.com/LiskHQ/lisk-sdk/issues/4652)
- Fix all the fragile P2P test for consistant result [#4651](https://github.com/LiskHQ/lisk-sdk/issues/4651)
- Rename database table ""temp_block"" to ""temp_blocks"" [#4648](https://github.com/LiskHQ/lisk-sdk/issues/4648)
- Update term nethash to networkId in the p2p library [#4647](https://github.com/LiskHQ/lisk-sdk/issues/4647)
- Set the path parameter to the websocket server [#4646](https://github.com/LiskHQ/lisk-sdk/issues/4646)
- P2P migrating tests from Mocha to Jest [#4642](https://github.com/LiskHQ/lisk-sdk/issues/4642)
- Update to Node.js v12.14.0 [#4640](https://github.com/LiskHQ/lisk-sdk/issues/4640)
- P2P remove 'type:' value from 'rpc-request' messages payload [#4639](https://github.com/LiskHQ/lisk-sdk/issues/4639)
- Setting LISK_REDIS_HOST leads to unexpected logging behaviour [#4630](https://github.com/LiskHQ/lisk-sdk/issues/4630)
- LISK_API_PUBLIC=false does not work [#4631](https://github.com/LiskHQ/lisk-sdk/issues/4631)
- HTTP API whitelists do not always work as expected [#4629](https://github.com/LiskHQ/lisk-sdk/issues/4629)
- Integration test for genesis_block.spec.js does not terminated correctly [#4627](https://github.com/LiskHQ/lisk-sdk/issues/4627)
- Cleanup test utilities for framework [#4626](https://github.com/LiskHQ/lisk-sdk/issues/4626)
- Handle usage of async and await expression [#4619](https://github.com/LiskHQ/lisk-sdk/issues/4619)
- Prettier fails to apply format for lisk-sdk [#4614](https://github.com/LiskHQ/lisk-sdk/issues/4614)
- Remove jsdoc dev dependency from framework [#4612](https://github.com/LiskHQ/lisk-sdk/issues/4612)
- P2P PeerBook newPeers and tiredPeers lists should be disjoint [#4609](https://github.com/LiskHQ/lisk-sdk/issues/4609)
- Backup and use complete tried peers data [#4607](https://github.com/LiskHQ/lisk-sdk/issues/4607)
- P2P selectPeersForConnection unit test fails randomly [#4599](https://github.com/LiskHQ/lisk-sdk/issues/4599)
- Application state not updated at initialization [#4594](https://github.com/LiskHQ/lisk-sdk/issues/4594)
- Replace blacklistedPeers by blacklistedIPs [#4586](https://github.com/LiskHQ/lisk-sdk/issues/4586)
- fixedPeers still being evicted [#4581](https://github.com/LiskHQ/lisk-sdk/issues/4581)
- bestPeer.id returns `undefined:4000` [#4580](https://github.com/LiskHQ/lisk-sdk/issues/4580)
- Violation of fork choice rule error [#4579](https://github.com/LiskHQ/lisk-sdk/issues/4579)
- Remove validator from lisk-transactions and use lisk-validator [#4572](https://github.com/LiskHQ/lisk-sdk/issues/4572)
- Remove function signatures [#4571](https://github.com/LiskHQ/lisk-sdk/issues/4571)
- Fill-pool shouldn't be called when delegate is not enabled to forge or if node is syncing  [#4569](https://github.com/LiskHQ/lisk-sdk/issues/4569)
- P2P: Peer ban expires before 24 hours [#4561](https://github.com/LiskHQ/lisk-sdk/issues/4561)
- Commander: generate network identifier [#4559](https://github.com/LiskHQ/lisk-sdk/issues/4559)
- Network module use deprecated P2P config values [#4549](https://github.com/LiskHQ/lisk-sdk/issues/4549)
- Storage component not parsing Dapp transfer transactions correctly [#4547](https://github.com/LiskHQ/lisk-sdk/issues/4547)
- Finalized height is not being updated [#4546](https://github.com/LiskHQ/lisk-sdk/issues/4546)
- API: Node status remove network height and loaded [#4543](https://github.com/LiskHQ/lisk-sdk/issues/4543)
- Update readme for P2P library with instructions and example [#4542](https://github.com/LiskHQ/lisk-sdk/issues/4542)
- Remove unused dependency from package.json [#4539](https://github.com/LiskHQ/lisk-sdk/issues/4539)
- Refactor log level, code and variable shadowing [#4534](https://github.com/LiskHQ/lisk-sdk/issues/4534)
- BFT: Error occurred during synchronization [#4532](https://github.com/LiskHQ/lisk-sdk/issues/4532)
- Test that transaction replay is not possible among networks [#4530](https://github.com/LiskHQ/lisk-sdk/issues/4530)
- Node should not apply penalty while processing transaction [#4528](https://github.com/LiskHQ/lisk-sdk/issues/4528)
- Append last block info to ""Synchronization finished"" log [#4522](https://github.com/LiskHQ/lisk-sdk/issues/4522)
- Broadcaster should not send transaction Ids if the size is zero [#4521](https://github.com/LiskHQ/lisk-sdk/issues/4521)
- Add limit to BSM FCS get queries [#4518](https://github.com/LiskHQ/lisk-sdk/issues/4518)
- Improve logging when receiving common block on FCS [#4514](https://github.com/LiskHQ/lisk-sdk/issues/4514)
- Elements library show throw informative errors [#4512](https://github.com/LiskHQ/lisk-sdk/issues/4512)
- BFT compliance should not checked on detached block [#4511](https://github.com/LiskHQ/lisk-sdk/issues/4511)
- API transactions by default should display latest transactions [#4510](https://github.com/LiskHQ/lisk-sdk/issues/4510)
- Node info is not injected into the inbound peer [#4509](https://github.com/LiskHQ/lisk-sdk/issues/4509)
- API peers should hide internal state information [#4508](https://github.com/LiskHQ/lisk-sdk/issues/4508)
- Node should not update application state while syncing [#4505](https://github.com/LiskHQ/lisk-sdk/issues/4505)
- Amount and recipientId is invalid in transaction schema [#4504](https://github.com/LiskHQ/lisk-sdk/issues/4504)
- Revisit Peer discovery threshold test [#4503](https://github.com/LiskHQ/lisk-sdk/issues/4503)
- Invalid transaction payload during RPC causes network isolation [#4501](https://github.com/LiskHQ/lisk-sdk/issues/4501)
- Add more test coverage for logic that uses delegateMinHeightActive value [#4499](https://github.com/LiskHQ/lisk-sdk/issues/4499)
- Remove cache from the chain module [#4487](https://github.com/LiskHQ/lisk-sdk/issues/4487)
- Update app label to use WSPort [#4486](https://github.com/LiskHQ/lisk-sdk/issues/4486)
- Update Typescript version to 3.7 [#4485](https://github.com/LiskHQ/lisk-sdk/issues/4485)
- Move modules/migrations to modules/components/storage/migrations [#4483](https://github.com/LiskHQ/lisk-sdk/issues/4483)
- Remove ip field from P2P ProtocolPeerInfo interface [#4475](https://github.com/LiskHQ/lisk-sdk/issues/4475)
- Ban peer if applying a block fails on FCS (_switchChain method) [#4474](https://github.com/LiskHQ/lisk-sdk/issues/4474)
- Change prevotedConfirmedUptoHeight -> maxHeightPrevoted [#4471](https://github.com/LiskHQ/lisk-sdk/issues/4471)
- Move new Fork Choice Rule logic to BFT folder and call it from Block Processor V2 and V1 [#4470](https://github.com/LiskHQ/lisk-sdk/issues/4470)
- Add BFT height finalized information to HTTP API [#4463](https://github.com/LiskHQ/lisk-sdk/issues/4463)
- transaction.id should not be used before assignment [#4461](https://github.com/LiskHQ/lisk-sdk/issues/4461)
- Update broadcaster to store transaction and signature separately [#4460](https://github.com/LiskHQ/lisk-sdk/issues/4460)
- Update transport module to use consistent naming and returning schema [#4459](https://github.com/LiskHQ/lisk-sdk/issues/4459)
- Peer state is not updated after the node is restarted [#4454](https://github.com/LiskHQ/lisk-sdk/issues/4454)
- Block synchronisation, fast chain switching and p2p issues [#4453](https://github.com/LiskHQ/lisk-sdk/issues/4453)
- Update transaction library to remove old transaction and export more functions [#4451](https://github.com/LiskHQ/lisk-sdk/issues/4451)
- Version 3.0.0 - QA [#4450](https://github.com/LiskHQ/lisk-sdk/issues/4450)
- Show BFT properties in api/blocks response [#4449](https://github.com/LiskHQ/lisk-sdk/issues/4449)
- Fix fragile max payload test in p2p [#4447](https://github.com/LiskHQ/lisk-sdk/issues/4447)
- Peer not found to apply penalty [#4446](https://github.com/LiskHQ/lisk-sdk/issues/4446)
- Lisk-sdk folder requires index.d.ts [#4438](https://github.com/LiskHQ/lisk-sdk/issues/4438)
- Add network identifier in the framework [#4435](https://github.com/LiskHQ/lisk-sdk/issues/4435)
- Add postTransactionAnnouncement [#4434](https://github.com/LiskHQ/lisk-sdk/issues/4434)
- Check all of the exceptions related tests are covered [#4433](https://github.com/LiskHQ/lisk-sdk/issues/4433)
- Update producedBlocks for genesis block [#4429](https://github.com/LiskHQ/lisk-sdk/issues/4429)
- Cover Synchronizer class with unit tests [#4428](https://github.com/LiskHQ/lisk-sdk/issues/4428)
- Reject unnecessary messages and ban a peer [#4424](https://github.com/LiskHQ/lisk-sdk/issues/4424)
- Request and apply blocks in chunks for BSM [#4412](https://github.com/LiskHQ/lisk-sdk/issues/4412)
- Get rid of Storage.RoundDelegates.summedRound [#4407](https://github.com/LiskHQ/lisk-sdk/issues/4407)
- To many properties within Peer Class and redundant fields [#4401](https://github.com/LiskHQ/lisk-sdk/issues/4401)
- Add peerId on Message and Response packet [#4395](https://github.com/LiskHQ/lisk-sdk/issues/4395)
- Audit SQL queries and SQL indexes [#4394](https://github.com/LiskHQ/lisk-sdk/issues/4394)
- Upgrade to NodeJS 12 [#4392](https://github.com/LiskHQ/lisk-sdk/issues/4392)
- Validate Asset should return full path on error [#4388](https://github.com/LiskHQ/lisk-sdk/issues/4388)
- Introduce functional test suite into lisk-p2p library [#4387](https://github.com/LiskHQ/lisk-sdk/issues/4387)
- Cover fast chain switch mechanism with unit/integration tests [#4376](https://github.com/LiskHQ/lisk-sdk/issues/4376)
- Cover block synchronisation mechanism with unit/integration tests [#4375](https://github.com/LiskHQ/lisk-sdk/issues/4375)
- http server should be created when start() is called [#4371](https://github.com/LiskHQ/lisk-sdk/issues/4371)
- Refactor `blocks` endpoint to retrieve blocks from a peer [#4369](https://github.com/LiskHQ/lisk-sdk/issues/4369)
- Apply penalty on sending malformed peerInfo or peerList > 1000 [#4363](https://github.com/LiskHQ/lisk-sdk/issues/4363)
- Adding an incoming peer even when it is a duplicate connection [#4362](https://github.com/LiskHQ/lisk-sdk/issues/4362)
- Improve network actions to expose connectedPeers and disconnectedPeers [#4361](https://github.com/LiskHQ/lisk-sdk/issues/4361)
- Discover from seed peer when triedPeers < 100 [#4360](https://github.com/LiskHQ/lisk-sdk/issues/4360)
- Disconnect from seed peers after initial discovery [#4359](https://github.com/LiskHQ/lisk-sdk/issues/4359)
- Should save triedPeers in DB during network cleanup [#4358](https://github.com/LiskHQ/lisk-sdk/issues/4358)
- Add block announcement after processing a block [#4356](https://github.com/LiskHQ/lisk-sdk/issues/4356)
- Error Plugin: lisk-commander: files attribute must be specified [#4355](https://github.com/LiskHQ/lisk-sdk/issues/4355)
- Add incentivizing Lisk-BFT Protocol Participation [#4354](https://github.com/LiskHQ/lisk-sdk/issues/4354)
- Always allow fixed/whitelist incoming connections [#4353](https://github.com/LiskHQ/lisk-sdk/issues/4353)
- Incoming connections from fixed peers should never be closed similar to whitelist [#4352](https://github.com/LiskHQ/lisk-sdk/issues/4352)
- Missing a condition for selecting peers for connection when having low triedPeers [#4351](https://github.com/LiskHQ/lisk-sdk/issues/4351)
- Discover peers through seed peers when not enough outbound connections [#4350](https://github.com/LiskHQ/lisk-sdk/issues/4350)
- Add delegateMinHeightActive needs to be included in calculation of prevote and precommit [#4349](https://github.com/LiskHQ/lisk-sdk/issues/4349)
- Decide to restore blocks upon startup when temp_block table is not empty [#4348](https://github.com/LiskHQ/lisk-sdk/issues/4348)
- Jest Integration tests are failing randomly [#4343](https://github.com/LiskHQ/lisk-sdk/issues/4343)
- Investigate slow sync on introduce_bft_consensus-dpos branch [#4340](https://github.com/LiskHQ/lisk-sdk/issues/4340)
- Switch to Different Chain via FCS [#4339](https://github.com/LiskHQ/lisk-sdk/issues/4339)
- Query all blocks from common block for peer and validate for FCS [#4338](https://github.com/LiskHQ/lisk-sdk/issues/4338)
- Implement finding common block for FCS [#4337](https://github.com/LiskHQ/lisk-sdk/issues/4337)
- Update commander transaction commands to accept network identifier [#4336](https://github.com/LiskHQ/lisk-sdk/issues/4336)
- Update sign function to include network identifier [#4335](https://github.com/LiskHQ/lisk-sdk/issues/4335)
- Update getBasicBytes and getAssetBytes in transaction library [#4334](https://github.com/LiskHQ/lisk-sdk/issues/4334)
- Add getNetworkIdentifier function [#4333](https://github.com/LiskHQ/lisk-sdk/issues/4333)
- Update commander related to transaction schema [#4332](https://github.com/LiskHQ/lisk-sdk/issues/4332)
- Update genesis block format [#4331](https://github.com/LiskHQ/lisk-sdk/issues/4331)
- Update API to be compatible with the updated transaction schema [#4330](https://github.com/LiskHQ/lisk-sdk/issues/4330)
- Update transaction pool not to use senderId and update usage of recipientId [#4328](https://github.com/LiskHQ/lisk-sdk/issues/4328)
- Check all of the RPC endpoint related transaction [#4327](https://github.com/LiskHQ/lisk-sdk/issues/4327)
- Update storage to store updated transaction schema [#4326](https://github.com/LiskHQ/lisk-sdk/issues/4326)
- Update transaction schema without changing the byte array [#4325](https://github.com/LiskHQ/lisk-sdk/issues/4325)
- Latest Transactions from Testnet API are not consistent [#4323](https://github.com/LiskHQ/lisk-sdk/issues/4323)
- Call delete block for the BFT module [#4320](https://github.com/LiskHQ/lisk-sdk/issues/4320)
- Use state store for updating finalizedHeight [#4316](https://github.com/LiskHQ/lisk-sdk/issues/4316)
- Do not connect to a peer if we already have an outbound peer with that IP [#4315](https://github.com/LiskHQ/lisk-sdk/issues/4315)
- Backup and restore peer reputation and productivity to and from the PeerBook [#4314](https://github.com/LiskHQ/lisk-sdk/issues/4314)
- More detailed P2PPeerInfo [#4313](https://github.com/LiskHQ/lisk-sdk/issues/4313)
- Return full common block instead of only ID property [#4307](https://github.com/LiskHQ/lisk-sdk/issues/4307)
- Integrate swagger-stats APM [#4300](https://github.com/LiskHQ/lisk-sdk/issues/4300)
- BFT module should be initialized in the block processor [#4297](https://github.com/LiskHQ/lisk-sdk/issues/4297)
- Inconsistent use of previousBlock and previousBlockId [#4295](https://github.com/LiskHQ/lisk-sdk/issues/4295)
- API node status separate transactions from node status endpoint [#4294](https://github.com/LiskHQ/lisk-sdk/issues/4294)
- Improve log message and format [#4285](https://github.com/LiskHQ/lisk-sdk/issues/4285)
- Do not allow id property in PeerInfo provided by a peer [#4284](https://github.com/LiskHQ/lisk-sdk/issues/4284)
- Full peers list growing excessively large (> 100K) [#4279](https://github.com/LiskHQ/lisk-sdk/issues/4279)
- Remove vote column from mem_accounts [#4274](https://github.com/LiskHQ/lisk-sdk/issues/4274)
- Remove loading signatures and providing signature endpoint [#4268](https://github.com/LiskHQ/lisk-sdk/issues/4268)
- Fix forging_statistics endpoint [#4267](https://github.com/LiskHQ/lisk-sdk/issues/4267)
- Create genesis block for v2 protocol [#4266](https://github.com/LiskHQ/lisk-sdk/issues/4266)
- Remove broadhash consensus  [#4265](https://github.com/LiskHQ/lisk-sdk/issues/4265)
- Emit rounds change event when round finishes in Dpos module [#4264](https://github.com/LiskHQ/lisk-sdk/issues/4264)
- Request nodeInfo from outbound peers before adding to peer lists [#4260](https://github.com/LiskHQ/lisk-sdk/issues/4260)
- The nodeInfo was removed from _peerSelectForConnection again [#4253](https://github.com/LiskHQ/lisk-sdk/issues/4253)
- Integrate usage of `computeHeadersForNewBlock` on `create` pipeline in BlockProcessorV2 [#4247](https://github.com/LiskHQ/lisk-sdk/issues/4247)
- Unstable peers functional http tests [#4243](https://github.com/LiskHQ/lisk-sdk/issues/4243)
- Add default implementation for assetFromSync and verifyAgainstTransactions in BaseTransaction [#4238](https://github.com/LiskHQ/lisk-sdk/issues/4238)
- Register Block Processor V2 and make it default [#4235](https://github.com/LiskHQ/lisk-sdk/issues/4235)
- Create function to compute BFT headers on block creation [#4233](https://github.com/LiskHQ/lisk-sdk/issues/4233)
- Add unit test coverage for P2P request file [#4230](https://github.com/LiskHQ/lisk-sdk/issues/4230)
- Add unit test coverage for P2P peer pool file [#4229](https://github.com/LiskHQ/lisk-sdk/issues/4229)
-  Add unit test coverage for P2P peer directory folder  [#4227](https://github.com/LiskHQ/lisk-sdk/issues/4227)
- Add unit test coverage for P2P peer_book file [#4226](https://github.com/LiskHQ/lisk-sdk/issues/4226)
- Add unit test coverage for P2P outbound peer file  [#4225](https://github.com/LiskHQ/lisk-sdk/issues/4225)
- Add unit test coverage for P2P inbound peer file [#4224](https://github.com/LiskHQ/lisk-sdk/issues/4224)
- Add unit test coverage for P2P base peer file [#4223](https://github.com/LiskHQ/lisk-sdk/issues/4223)
- p2p integration tests fail sometimes and are unstable [#4219](https://github.com/LiskHQ/lisk-sdk/issues/4219)
- Move generating delegate list logic into Dpos.apply and Dpos.undo [#4218](https://github.com/LiskHQ/lisk-sdk/issues/4218)
- Delete caching mechanism in Dpos [#4217](https://github.com/LiskHQ/lisk-sdk/issues/4217)
- Extract the common integration tests setup/configs to a central place to allow tests to share the default topology/config [#4200](https://github.com/LiskHQ/lisk-sdk/issues/4200)
- Add integration test for P2P library events [#4199](https://github.com/LiskHQ/lisk-sdk/issues/4199)
- Improve syncing logging [#4195](https://github.com/LiskHQ/lisk-sdk/issues/4195)
- Write integration test coverage for DPOS module [#4192](https://github.com/LiskHQ/lisk-sdk/issues/4192)
- JavaScript heap out of memory error [#4183](https://github.com/LiskHQ/lisk-sdk/issues/4183)
- Alternative for getUniqueOutboundConnectedPeersCount and consensus calculation [#4178](https://github.com/LiskHQ/lisk-sdk/issues/4178)
- Remove old rounds related logic [#4168](https://github.com/LiskHQ/lisk-sdk/issues/4168)
- Wrong attribute description in app config schema [#4167](https://github.com/LiskHQ/lisk-sdk/issues/4167)
- Replace rounds.backwardTick by dpos.undo [#4158](https://github.com/LiskHQ/lisk-sdk/issues/4158)
- Replace rounds.tick by dpos.apply [#4157](https://github.com/LiskHQ/lisk-sdk/issues/4157)
- Replace rounds.validateBlockSlotAgainstPreviousRound by dpos.verifyBlockForger [#4156](https://github.com/LiskHQ/lisk-sdk/issues/4156)
- Replace rounds.validateBlockSlot by dpos.verifyBlockForger [#4155](https://github.com/LiskHQ/lisk-sdk/issues/4155)
- Replace rounds.generateDelegateList by dpos.getRoundDelegates [#4152](https://github.com/LiskHQ/lisk-sdk/issues/4152)
- Protocol-spec second signature [#4148](https://github.com/LiskHQ/lisk-sdk/issues/4148)
- Dpos.getRoundDelegates returns outdated list [#4147](https://github.com/LiskHQ/lisk-sdk/issues/4147)
- Implement verifyBlockForger in Dpos module [#4144](https://github.com/LiskHQ/lisk-sdk/issues/4144)
- Remove NewRelic integration [#4141](https://github.com/LiskHQ/lisk-sdk/issues/4141)
- Merge child tables of mem_accounts [#4139](https://github.com/LiskHQ/lisk-sdk/issues/4139)
- Move transaction module in framework to inside of blocks module [#4138](https://github.com/LiskHQ/lisk-sdk/issues/4138)
- Update transaction module to consistently use state store [#4137](https://github.com/LiskHQ/lisk-sdk/issues/4137)
- Define serialisation and deserialisation of blocks in interface adapters [#4131](https://github.com/LiskHQ/lisk-sdk/issues/4131)
- Unable to understand the use and relevance of reloadRequired function in blocks/verify.js file [#4130](https://github.com/LiskHQ/lisk-sdk/issues/4130)
- Create protocol-spec json for all fork choice patterns [#4129](https://github.com/LiskHQ/lisk-sdk/issues/4129)
- Functional GET tests taking too long on Jenkins [#4124](https://github.com/LiskHQ/lisk-sdk/issues/4124)
- Separate P2P integration tests into multiple files and improve naming and test descriptions [#4121](https://github.com/LiskHQ/lisk-sdk/issues/4121)
- Sync error on testnet [#4119](https://github.com/LiskHQ/lisk-sdk/issues/4119)
- Merge development into feature-bft [#4098](https://github.com/LiskHQ/lisk-sdk/issues/4098)
- README Set up new a blockchain application does not include configDevnet [#4096](https://github.com/LiskHQ/lisk-sdk/issues/4096)
- Framework should handle the cleanup successfully when failed on initialization [#4093](https://github.com/LiskHQ/lisk-sdk/issues/4093)
- Create protocol-spec json for Transaction replay specification [#4092](https://github.com/LiskHQ/lisk-sdk/issues/4092)
- API node/status/forging filter doesn't work as expected [#4091](https://github.com/LiskHQ/lisk-sdk/issues/4091)
- Create protocol-spec json for BFT specification [#4088](https://github.com/LiskHQ/lisk-sdk/issues/4088)
- Create protocol-spec json for basic current specification [#4087](https://github.com/LiskHQ/lisk-sdk/issues/4087)
- When a peer asks us for our peer list, we should not report the state property [#4073](https://github.com/LiskHQ/lisk-sdk/issues/4073)
- Create base class for peer list for peer directory [#4048](https://github.com/LiskHQ/lisk-sdk/issues/4048)
- Unit tests for eviction of peers from peer buckets [#4045](https://github.com/LiskHQ/lisk-sdk/issues/4045)
- Implement block processor [#4041](https://github.com/LiskHQ/lisk-sdk/issues/4041)
- Persist P2P secret to DB [#4040](https://github.com/LiskHQ/lisk-sdk/issues/4040)
- Mitigate transaction replay on different chains [#4039](https://github.com/LiskHQ/lisk-sdk/issues/4039)
- Remove redundant properties from transaction objects [#4038](https://github.com/LiskHQ/lisk-sdk/issues/4038)
- Don't use hardcode config options in the jest tests [#4028](https://github.com/LiskHQ/lisk-sdk/issues/4028)
- Add jest config clearMocks: true and remove jest.clearAllMocks() in tests  [#4026](https://github.com/LiskHQ/lisk-sdk/issues/4026)
- Replace the usage of verify* with validate* for in-memory checks defined for block object  [#4025](https://github.com/LiskHQ/lisk-sdk/issues/4025)
- Remove block dependency from blocks/utils [#4012](https://github.com/LiskHQ/lisk-sdk/issues/4012)
- Update delegates ranks at the end of the round  [#4006](https://github.com/LiskHQ/lisk-sdk/issues/4006)
- Update vote weight of delegates [#4005](https://github.com/LiskHQ/lisk-sdk/issues/4005)
- Update rewards & fees at the end of the round [#4004](https://github.com/LiskHQ/lisk-sdk/issues/4004)
- Update missed Round  [#4002](https://github.com/LiskHQ/lisk-sdk/issues/4002)
- Update Produce Block [#4001](https://github.com/LiskHQ/lisk-sdk/issues/4001)
- Add filter to Accounts entity to allow searching in account.asset field  [#3990](https://github.com/LiskHQ/lisk-sdk/issues/3990)
- Fix and unskip the tests for applyTransaction function defined in transactionHandler [#3987](https://github.com/LiskHQ/lisk-sdk/issues/3987)
- Use consistently flat structures for asset property objects [#3980](https://github.com/LiskHQ/lisk-sdk/issues/3980)
- Add util functions to be used in integration test [#3955](https://github.com/LiskHQ/lisk-sdk/issues/3955)
- Target specific peers in Block Sync Mechanism [#3916](https://github.com/LiskHQ/lisk-sdk/issues/3916)
- Emit event when a block is finalized from the bft module [#3908](https://github.com/LiskHQ/lisk-sdk/issues/3908)
- Improve finality manager performance and add more test simulations [#3894](https://github.com/LiskHQ/lisk-sdk/issues/3894)
- Split block processing steps into separate functions and expose them from module/blocks [#3869](https://github.com/LiskHQ/lisk-sdk/issues/3869)
- Fix cyclomatic complexity in P2P constructor [#3859](https://github.com/LiskHQ/lisk-sdk/issues/3859)
- Check and Update NodeJS versions in Readme files [#3852](https://github.com/LiskHQ/lisk-sdk/issues/3852)
- Create ChainMeta entity to persist BFT information [#3832](https://github.com/LiskHQ/lisk-sdk/issues/3832)
- Move BlockSlots class into Dpos Module [#3789](https://github.com/LiskHQ/lisk-sdk/issues/3789)
- Create constants.js in Chain Module [#3788](https://github.com/LiskHQ/lisk-sdk/issues/3788)
- Create compontents/index.js in Chain Module [#3787](https://github.com/LiskHQ/lisk-sdk/issues/3787)
- Epic: Fast Chain Switcher Task List [#3777](https://github.com/LiskHQ/lisk-sdk/issues/3777)
- Implement functionality for removing blocks stored in temp table [#3776](https://github.com/LiskHQ/lisk-sdk/issues/3776)
- Blocks need to be restored from temporary table upon failure or application restart [#3775](https://github.com/LiskHQ/lisk-sdk/issues/3775)
- Update Application State interface to include prevotedConfirmedUptoHeight [#3774](https://github.com/LiskHQ/lisk-sdk/issues/3774)
- Block Synchronizer class to combine Block Synchronizaton Mechanism logic [#3773](https://github.com/LiskHQ/lisk-sdk/issues/3773)
- Blocks need to be stored in temporary table on block deletion [#3772](https://github.com/LiskHQ/lisk-sdk/issues/3772)
- Implement request and apply blocks of new chain step for Block Sync Mechanism [#3771](https://github.com/LiskHQ/lisk-sdk/issues/3771)
- Implement reverting to last common block step for Block Sync Mechanism [#3770](https://github.com/LiskHQ/lisk-sdk/issues/3770)
- Implement mechanism for finding commonBlock [#3769](https://github.com/LiskHQ/lisk-sdk/issues/3769)
- Implement obtain tip of chain step for Block Sync Mechanism [#3768](https://github.com/LiskHQ/lisk-sdk/issues/3768)
- Implement peer selection algorithm step for Block Sync Mechanism [#3767](https://github.com/LiskHQ/lisk-sdk/issues/3767)
- Do not include nonce when broadcasting [#3702](https://github.com/LiskHQ/lisk-sdk/issues/3702)
- Update the block processing to persist maxHeightPreviouslyForged [#3696](https://github.com/LiskHQ/lisk-sdk/issues/3696)
- Persist BFT attribute heightFinalized as part of atomic block write [#3695](https://github.com/LiskHQ/lisk-sdk/issues/3695)
- Load minimum block headers on block deletion [#3694](https://github.com/LiskHQ/lisk-sdk/issues/3694)
- Create submodule/bft to initiate the BFT logic at application startup [#3693](https://github.com/LiskHQ/lisk-sdk/issues/3693)
- Implement BFT LIP logic to add/remove headers as logic/bft.js  [#3692](https://github.com/LiskHQ/lisk-sdk/issues/3692)
- Create data structure to store block headers for BFT [#3691](https://github.com/LiskHQ/lisk-sdk/issues/3691)
- Replace the previous Rounds module with the new Dpos module [#3686](https://github.com/LiskHQ/lisk-sdk/issues/3686)
- Remove previous Round implementation [#3685](https://github.com/LiskHQ/lisk-sdk/issues/3685)
- Update API /delegates/forgers endpoint to be BFT compliant [#3684](https://github.com/LiskHQ/lisk-sdk/issues/3684)
- Automatically cleanup round_delegates table [#3683](https://github.com/LiskHQ/lisk-sdk/issues/3683)
- Make usage of delegate list BFT compliant [#3681](https://github.com/LiskHQ/lisk-sdk/issues/3681)
- Add Round.undo function [#3680](https://github.com/LiskHQ/lisk-sdk/issues/3680)
- Reorganise P2P library folders and files [#3678](https://github.com/LiskHQ/lisk-sdk/issues/3678)
- Invoke `applyPenalty` network actions in framework [#3672](https://github.com/LiskHQ/lisk-sdk/issues/3672)
- Introduce advertiseAddress flag for peers [#3661](https://github.com/LiskHQ/lisk-sdk/issues/3661)
- Typo in the blocks RPC response [#3644](https://github.com/LiskHQ/lisk-sdk/issues/3644)
- Add Round.apply function [#3633](https://github.com/LiskHQ/lisk-sdk/issues/3633)
- Generate delegate list using `round_delegates` table [#3631](https://github.com/LiskHQ/lisk-sdk/issues/3631)
- Implement steps pertaining to BFT consensus protocol introduced in block reverting mechanism [#3571](https://github.com/LiskHQ/lisk-sdk/issues/3571)
- Implement steps pertaining to BFT consensus protocol introduced block processing mechanism [#3570](https://github.com/LiskHQ/lisk-sdk/issues/3570)
- Rounds module should support rolling back indefinite (until finality) number of rounds in the blockchain [#3568](https://github.com/LiskHQ/lisk-sdk/issues/3568)
- Add waiting threshold before forging block if node did not receive the block from previous slot [#3564](https://github.com/LiskHQ/lisk-sdk/issues/3564)
- Implement block synchronization mechanism introduced in the Introduce BFT consensus protocol LIP. [#3563](https://github.com/LiskHQ/lisk-sdk/issues/3563)
- Implement Fast chain switching mechanism as per the specifications in Introduce BFT consensus protocol LIP  [#3562](https://github.com/LiskHQ/lisk-sdk/issues/3562)
- Implement method to identify chain recovery mode with BFT [#3561](https://github.com/LiskHQ/lisk-sdk/issues/3561)
- Introduce BFT module as described in the ""Introduce BFT consensus protocol"" LIP. [#3560](https://github.com/LiskHQ/lisk-sdk/issues/3560)
- Implement the fork choice rules described in ""Introduce BFT consensus protocol"" LIP [#3559](https://github.com/LiskHQ/lisk-sdk/issues/3559)
- Include height property in calculating the signature of the block [#3558](https://github.com/LiskHQ/lisk-sdk/issues/3558)
- The received time of the most recent block in the blockchain should be maintained [#3557](https://github.com/LiskHQ/lisk-sdk/issues/3557)
- Introduce heightPrevious and heightPrevoted properties in block headers [#3556](https://github.com/LiskHQ/lisk-sdk/issues/3556)
- Introduce BFT consensus protocol [#3555](https://github.com/LiskHQ/lisk-sdk/issues/3555)
- Improve the logger name for JSON logger [#3532](https://github.com/LiskHQ/lisk-sdk/issues/3532)
- Update eslintrc.json files [#3468](https://github.com/LiskHQ/lisk-sdk/issues/3468)
- Ignore typescript projects from eslint [#3411](https://github.com/LiskHQ/lisk-sdk/issues/3411)
- LIPS:0004 Introduce robust peer selection and banning mechanism [#3328](https://github.com/LiskHQ/lisk-sdk/issues/3328)
- Add missing unit test for transactions library [#3331](https://github.com/LiskHQ/lisk-sdk/issues/3331)
- Remove unwanted old database functions [#2954](https://github.com/LiskHQ/lisk-sdk/issues/2954)
- isNullByteIncluded mismatch regex [#2907](https://github.com/LiskHQ/lisk-sdk/issues/2907)
- Add missing unit tests for p2p [#3338](https://github.com/LiskHQ/lisk-sdk/issues/3338)
- Add lazy push mechanism to reduce overall bandwidth consumption in the network [#3344](https://github.com/LiskHQ/lisk-sdk/issues/3344)
- Add eager push mechanism to ensure that blocks and transactions propagate quickly [#3345](https://github.com/LiskHQ/lisk-sdk/issues/3345)
- Inefficient blocks transmission between peers [#2424](https://github.com/LiskHQ/lisk-sdk/issues/2424)
- Fix the number accuracy of vote calculations in round [#2423](https://github.com/LiskHQ/lisk-sdk/issues/2423)


### Merged pull requests:
- Allow /delegates endpoint to accept voteWeight as sort parameter - Closes #4715, #4716  [#4717](https://github.com/LiskHQ/lisk-sdk/pull/4717) ([nazarhussain](https://github.com/nazarhussain))
- Upgrade dependencies for http-api module - Closes #4699  [#4700](https://github.com/LiskHQ/lisk-sdk/pull/4700) ([nazarhussain](https://github.com/nazarhussain))
- Protocol Spec for vote transactions generate different output - Closes #4686 [#4687](https://github.com/LiskHQ/lisk-sdk/pull/4687) ([pablitovicente](https://github.com/pablitovicente))
- TypeError: Converting circular structure to JSON with Node 12.14.1 - Closes #4667 [#4676](https://github.com/LiskHQ/lisk-sdk/pull/4676) ([nazarhussain](https://github.com/nazarhussain))
- Fix processor block save ordering - Closes #4668 [#4674](https://github.com/LiskHQ/lisk-sdk/pull/4674) ([mitsuaki-u](https://github.com/mitsuaki-u))
- Fix NaCL slow/fast module loading [#4673](https://github.com/LiskHQ/lisk-sdk/pull/4673) ([valamidev](https://github.com/valamidev))
- Create protocol-spec for all fork choice patterns - Closes #4129 [#4671](https://github.com/LiskHQ/lisk-sdk/pull/4671) ([nazarhussain](https://github.com/nazarhussain))
- Fix P2P endpoint path - Closes #4646 [#4664](https://github.com/LiskHQ/lisk-sdk/pull/4664) ([shuse2](https://github.com/shuse2))
- Rename nethash to networkId in lisk-p2p - Closes #4647 [#4661](https://github.com/LiskHQ/lisk-sdk/pull/4661) ([ishantiw](https://github.com/ishantiw))
- Accept blacklistedIps instead of blacklisted peer objects - Closes #4586 [#4660](https://github.com/LiskHQ/lisk-sdk/pull/4660) ([ishantiw](https://github.com/ishantiw))
- P2P update rpc-request procotol - Closes #4639 [#4659](https://github.com/LiskHQ/lisk-sdk/pull/4659) ([valamidev](https://github.com/valamidev))
- Fix loadash vulnerability - Closes #4656 [#4657](https://github.com/LiskHQ/lisk-sdk/pull/4657) ([ManuGowda](https://github.com/ManuGowda))
- Migrate P2P tests under Jest framework - Closes #4642 & #4651 [#4654](https://github.com/LiskHQ/lisk-sdk/pull/4654) ([valamidev](https://github.com/valamidev))
- Chain state store finalize () does not return the promise - Closes #4652 [#4653](https://github.com/LiskHQ/lisk-sdk/pull/4653) ([pablitovicente](https://github.com/pablitovicente))
- Rename database table ""temp_block"" to ""temp_blocks"" - Closes #4648 [#4649](https://github.com/LiskHQ/lisk-sdk/pull/4649) ([ManuGowda](https://github.com/ManuGowda))
- Cleanup test utilities for framework - Closes#4626 [#4645](https://github.com/LiskHQ/lisk-sdk/pull/4645) ([nazarhussain](https://github.com/nazarhussain))
- Update to Node.js v12.14.0 #4640 - Closes #4640 [#4643](https://github.com/LiskHQ/lisk-sdk/pull/4643) ([ManuGowda](https://github.com/ManuGowda))
- Integration test for genesis_block.spec.js does not terminated correctly - Closes#4627 [#4641](https://github.com/LiskHQ/lisk-sdk/pull/4641) ([nazarhussain](https://github.com/nazarhussain))
- Setting LISK_REDIS_HOST leads to unexpected logging behaviour - Closes #4630 [#4635](https://github.com/LiskHQ/lisk-sdk/pull/4635) ([nazarhussain](https://github.com/nazarhussain))
- LISK_API_PUBLIC=false does not work - Closes#4631 [#4634](https://github.com/LiskHQ/lisk-sdk/pull/4634) ([nazarhussain](https://github.com/nazarhussain))
- HTTP API whitelists do not always work as expected - Closes #4629 [#4633](https://github.com/LiskHQ/lisk-sdk/pull/4633) ([nazarhussain](https://github.com/nazarhussain))
- P2P add protocol message limit and improved message limit penalty [#4628](https://github.com/LiskHQ/lisk-sdk/pull/4628) ([valamidev](https://github.com/valamidev))
- Jest Integration tests are failing randomly - Closes # 4343 [#4625](https://github.com/LiskHQ/lisk-sdk/pull/4625) ([nazarhussain](https://github.com/nazarhussain))
- Handle usage of async and await expression - Closes #4619 [#4621](https://github.com/LiskHQ/lisk-sdk/pull/4621) ([ManuGowda](https://github.com/ManuGowda))
- Add examples to lisk-p2p library and update readme [#4618](https://github.com/LiskHQ/lisk-sdk/pull/4618) ([ishantiw](https://github.com/ishantiw))
- Check all of the exceptions related tests are covered - Closes #4433 [#4617](https://github.com/LiskHQ/lisk-sdk/pull/4617) ([nazarhussain](https://github.com/nazarhussain))
- P2P peerBook disjoint fix and test improvements - Closes #4609 & #4599 [#4616](https://github.com/LiskHQ/lisk-sdk/pull/4616) ([valamidev](https://github.com/valamidev))
- Prettier fails to apply format for lisk-sdk - Closes #4614 [#4615](https://github.com/LiskHQ/lisk-sdk/pull/4615) ([ManuGowda](https://github.com/ManuGowda))
- Remove jsdoc dev dependency from framework - Closes #4612 [#4613](https://github.com/LiskHQ/lisk-sdk/pull/4613) ([ManuGowda](https://github.com/ManuGowda))
- Add jest config clearMocks: true and remove jest.clearAllMocks() in tests - Closes #4026 [#4611](https://github.com/LiskHQ/lisk-sdk/pull/4611) ([yatki](https://github.com/yatki))
- Improve Chain/Transport unit test coverage  - Closes #4595 [#4603](https://github.com/LiskHQ/lisk-sdk/pull/4603) ([valamidev](https://github.com/valamidev))
- Wrong attribute description in app config schema #4167 [#4602](https://github.com/LiskHQ/lisk-sdk/pull/4602) ([ManuGowda](https://github.com/ManuGowda))
- Application state not updated at initialization - Closes #4594 [#4596](https://github.com/LiskHQ/lisk-sdk/pull/4596) ([lsilvs](https://github.com/lsilvs))
- Remove internal peer info from API get peers' output - Closes #4508 [#4593](https://github.com/LiskHQ/lisk-sdk/pull/4593) ([diego-G](https://github.com/diego-G))
- Prevent application crashing if there is a fork choice rule violation - Closes #4579 [#4584](https://github.com/LiskHQ/lisk-sdk/pull/4584) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Use `peerId` instead of constructing it on Block Synchronization Mechanism - Closes #4580 [#4583](https://github.com/LiskHQ/lisk-sdk/pull/4583) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- P2P avoid fixedPeer eviction - Closes #4581 [#4582](https://github.com/LiskHQ/lisk-sdk/pull/4582) ([valamidev](https://github.com/valamidev))
- Update & Enable eslint-plugin-jest - Closes #3992 [#4578](https://github.com/LiskHQ/lisk-sdk/pull/4578) ([yatki](https://github.com/yatki))
- Add P2P condition to select peers for connection - Closed #4351 [#4577](https://github.com/LiskHQ/lisk-sdk/pull/4577) ([diego-G](https://github.com/diego-G))
- Remove state from Network module - Closes #4073 [#4576](https://github.com/LiskHQ/lisk-sdk/pull/4576) ([valamidev](https://github.com/valamidev))
- Remove function signatures - Closes #4571 [#4575](https://github.com/LiskHQ/lisk-sdk/pull/4575) ([ManuGowda](https://github.com/ManuGowda))
- Remove validator from transaction - Closes #4572 [#4574](https://github.com/LiskHQ/lisk-sdk/pull/4574) ([shuse2](https://github.com/shuse2))
- Fill-pool shouldn't be called when delegate is not enabled to forge or if node is syncing - Closes #4569 [#4570](https://github.com/LiskHQ/lisk-sdk/pull/4570) ([ManuGowda](https://github.com/ManuGowda))
- Add missing unit test for transactions library - Closes #3331 [#4568](https://github.com/LiskHQ/lisk-sdk/pull/4568) ([pablitovicente](https://github.com/pablitovicente))
- Ignore some files in SonarCloud that should not be checked - Closes #4566 [#4567](https://github.com/LiskHQ/lisk-sdk/pull/4567) ([pablitovicente](https://github.com/pablitovicente))
- Commander: generate network identifier - Closes #4559 [#4565](https://github.com/LiskHQ/lisk-sdk/pull/4565) ([ManuGowda](https://github.com/ManuGowda))
- Remove test databases [#4564](https://github.com/LiskHQ/lisk-sdk/pull/4564) ([fchavant](https://github.com/fchavant))
- Create protocol-spec for all fork choice patterns - Closes #4129 [#4563](https://github.com/LiskHQ/lisk-sdk/pull/4563) ([MaciejBaj](https://github.com/MaciejBaj))
- P2P update DEFAULT_BAN_TIME in ms [#4562](https://github.com/LiskHQ/lisk-sdk/pull/4562) ([valamidev](https://github.com/valamidev))
- Fix logic not try to add to peer book if it already exist - Closes #4362 [#4560](https://github.com/LiskHQ/lisk-sdk/pull/4560) ([shuse2](https://github.com/shuse2))
- Fix not to evict the fixed peer - Closes #4352 [#4558](https://github.com/LiskHQ/lisk-sdk/pull/4558) ([shuse2](https://github.com/shuse2))
- Enable SonarCloud [#4557](https://github.com/LiskHQ/lisk-sdk/pull/4557) ([fchavant](https://github.com/fchavant))
- P2P rediscovery seedPeers interval - Closes #4350 & #4549 & #4503 [#4556](https://github.com/LiskHQ/lisk-sdk/pull/4556) ([valamidev](https://github.com/valamidev))
- Backup and restore peerInfo in p2p lib - Closes #4314 [#4555](https://github.com/LiskHQ/lisk-sdk/pull/4555) ([ishantiw](https://github.com/ishantiw))
- wait_for helper not updated when changing status endpoint - Closes #4553 [#4554](https://github.com/LiskHQ/lisk-sdk/pull/4554) ([pablitovicente](https://github.com/pablitovicente))
- Add more test coverage for logic that uses delegateMinHeightActive value - Closes #4499 [#4552](https://github.com/LiskHQ/lisk-sdk/pull/4552) ([yatki](https://github.com/yatki))
- isNullByteIncluded mismatch regex - Closes #2907 [#4550](https://github.com/LiskHQ/lisk-sdk/pull/4550) ([pablitovicente](https://github.com/pablitovicente))
- Storage component not parsing Dapp transfer transactions correctly - Closes #4547 [#4548](https://github.com/LiskHQ/lisk-sdk/pull/4548) ([lsilvs](https://github.com/lsilvs))
- P2P Update peer buckets with source_group bytes - Closes #4488 [#4545](https://github.com/LiskHQ/lisk-sdk/pull/4545) ([mitsuaki-u](https://github.com/mitsuaki-u))
- API: Node status remove network height and loaded - Closes #4543 [#4544](https://github.com/LiskHQ/lisk-sdk/pull/4544) ([ManuGowda](https://github.com/ManuGowda))
- Remove unused dependencies - Closes #4539 [#4540](https://github.com/LiskHQ/lisk-sdk/pull/4540) ([shuse2](https://github.com/shuse2))
- Fix merging default options on entities - Closes #4532 [#4537](https://github.com/LiskHQ/lisk-sdk/pull/4537) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Update BFT to use state store - Closes #4316 [#4536](https://github.com/LiskHQ/lisk-sdk/pull/4536) ([shuse2](https://github.com/shuse2))
- Refactor log level, code and variable shadowing - Closes #4534 [#4535](https://github.com/LiskHQ/lisk-sdk/pull/4535) ([ManuGowda](https://github.com/ManuGowda))
- Update typescript - Closes #4485 [#4533](https://github.com/LiskHQ/lisk-sdk/pull/4533) ([shuse2](https://github.com/shuse2))
- Test that transaction replay is not possible among networks - Closes #4530 [#4531](https://github.com/LiskHQ/lisk-sdk/pull/4531) ([pablitovicente](https://github.com/pablitovicente))
- Fix applying penalty on transaction processing error - Closes #4528 [#4529](https://github.com/LiskHQ/lisk-sdk/pull/4529) ([shuse2](https://github.com/shuse2))
- Update producedBlocks for genesis block - Closes #4429 [#4526](https://github.com/LiskHQ/lisk-sdk/pull/4526) ([lsilvs](https://github.com/lsilvs))
- Remove redundant P2P interfaces - Closes #4493 [#4525](https://github.com/LiskHQ/lisk-sdk/pull/4525) ([diego-G](https://github.com/diego-G))
- Fix broadcasting order - Closes #4521 [#4524](https://github.com/LiskHQ/lisk-sdk/pull/4524) ([shuse2](https://github.com/shuse2))
- Improve logging when syncing finishes - Closes #4522 [#4523](https://github.com/LiskHQ/lisk-sdk/pull/4523) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Update devnet genesis block - Closes #4266 [#4520](https://github.com/LiskHQ/lisk-sdk/pull/4520) ([shuse2](https://github.com/shuse2))
- Add limit to bsm fcs get queries - Closes #4518 [#4519](https://github.com/LiskHQ/lisk-sdk/pull/4519) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Elements library show throw informative errors- Closes #4512 [#4517](https://github.com/LiskHQ/lisk-sdk/pull/4517) ([pablitovicente](https://github.com/pablitovicente))
- P2P Disconnect from seed peers after initial discovery - Closes #4359 & #4360 [#4516](https://github.com/LiskHQ/lisk-sdk/pull/4516) ([valamidev](https://github.com/valamidev))
- Improve logging and error handling when receiving common block on FCS - Closes #4514 [#4515](https://github.com/LiskHQ/lisk-sdk/pull/4515) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Remove BFT headers validation from validate detached - Closes #4511 [#4513](https://github.com/LiskHQ/lisk-sdk/pull/4513) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Inject nodeInfo to InboundPeer - Closes #4509 [#4507](https://github.com/LiskHQ/lisk-sdk/pull/4507) ([mitsuaki-u](https://github.com/mitsuaki-u))
- Remove unnecessary update status - Closes #4505 [#4506](https://github.com/LiskHQ/lisk-sdk/pull/4506) ([shuse2](https://github.com/shuse2))
- Update chain loader to call action with correct param - Closes #4501 [#4502](https://github.com/LiskHQ/lisk-sdk/pull/4502) ([shuse2](https://github.com/shuse2))
- Validate Asset should return full path on error - Closes #4388 [#4500](https://github.com/LiskHQ/lisk-sdk/pull/4500) ([pablitovicente](https://github.com/pablitovicente))
- P2P Disconnect from seed peers after initial discovery - Closes #4359 [#4498](https://github.com/LiskHQ/lisk-sdk/pull/4498) ([valamidev](https://github.com/valamidev))
- Remove summedrounds and do in the application - Closes #4407 [#4497](https://github.com/LiskHQ/lisk-sdk/pull/4497) ([shuse2](https://github.com/shuse2))
- Add basic type definitions to SDK - Closes #4496 [#4495](https://github.com/LiskHQ/lisk-sdk/pull/4495) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Save tried peers in db - Closes #4358 [#4494](https://github.com/LiskHQ/lisk-sdk/pull/4494) ([shuse2](https://github.com/shuse2))
- Save P2P secret in the database - Closes #4040 [#4492](https://github.com/LiskHQ/lisk-sdk/pull/4492) ([shuse2](https://github.com/shuse2))
- Ban peer if block processing fails on FCS - Closes #4474 [#4491](https://github.com/LiskHQ/lisk-sdk/pull/4491) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Remove cache from the chain module - Closes #4487 [#4490](https://github.com/LiskHQ/lisk-sdk/pull/4490) ([ManuGowda](https://github.com/ManuGowda))
- Rename prevotedConfirmedUptoHeight -> maxHeightPrevoted - Closes #4471 [#4489](https://github.com/LiskHQ/lisk-sdk/pull/4489) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Move modules/migrations to modules/components/storage/migrations - Closes #4483 [#4484](https://github.com/LiskHQ/lisk-sdk/pull/4484) ([ManuGowda](https://github.com/ManuGowda))
- Add missing apply penalty from LIP-0004 - Closes #3672 [#4482](https://github.com/LiskHQ/lisk-sdk/pull/4482) ([shuse2](https://github.com/shuse2))
- Reject invalid messages from incoming connections - Closes #4424 [#4481](https://github.com/LiskHQ/lisk-sdk/pull/4481) ([ishantiw](https://github.com/ishantiw))
- Investigate slow sync on introduce_bft_consensus-dpos branch - Closes #4340 [#4480](https://github.com/LiskHQ/lisk-sdk/pull/4480) ([lsilvs](https://github.com/lsilvs))
- Update broadcaster to send transactionIds - Closes #4460 [#4479](https://github.com/LiskHQ/lisk-sdk/pull/4479) ([shuse2](https://github.com/shuse2))
- Request node info from Outbound peers - Closes #4260 [#4478](https://github.com/LiskHQ/lisk-sdk/pull/4478) ([mitsuaki-u](https://github.com/mitsuaki-u))
- Move fork choice rule logic to BFT folder - Closes #4470 [#4477](https://github.com/LiskHQ/lisk-sdk/pull/4477) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Implement unit tests for Block Synchronization Mechanism - Closes #4375 [#4476](https://github.com/LiskHQ/lisk-sdk/pull/4476) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Add delegateMinHeightActive needs to be included in calculation of prevote and precommit - Closes #4349 [#4473](https://github.com/LiskHQ/lisk-sdk/pull/4473) ([yatki](https://github.com/yatki))
- Remove nonce from framework chain submodule - Closes #3702 [#4472](https://github.com/LiskHQ/lisk-sdk/pull/4472) ([diego-G](https://github.com/diego-G))
- Move transactions into block - Closes #4138 [#4469](https://github.com/LiskHQ/lisk-sdk/pull/4469) ([shuse2](https://github.com/shuse2))
- Update transport module to use consistent naming and returning schema - Closes #4459 [#4468](https://github.com/LiskHQ/lisk-sdk/pull/4468) ([pablitovicente](https://github.com/pablitovicente))
- Update transaction processing to consistently use state store - Closes #4137, #3987 [#4467](https://github.com/LiskHQ/lisk-sdk/pull/4467) ([shuse2](https://github.com/shuse2))
- Introduce advertiseAddress flag for peers - Closes #3661 [#4466](https://github.com/LiskHQ/lisk-sdk/pull/4466) ([ManuGowda](https://github.com/ManuGowda))
- Add BFT height finalized information to HTTP API - Closes #4463 [#4465](https://github.com/LiskHQ/lisk-sdk/pull/4465) ([lsilvs](https://github.com/lsilvs))
- API node/status/forging filter doesn't work as expected - Closes #4091 [#4464](https://github.com/LiskHQ/lisk-sdk/pull/4464) ([ManuGowda](https://github.com/ManuGowda))
- transaction.id should not be used before assignment - Closes #4461 [#4462](https://github.com/LiskHQ/lisk-sdk/pull/4462) ([pablitovicente](https://github.com/pablitovicente))
- Update previousBlock to previousBlockId - Closes #4295 [#4458](https://github.com/LiskHQ/lisk-sdk/pull/4458) ([shuse2](https://github.com/shuse2))
- Lazy push for transactions - Closes #4434 [#4457](https://github.com/LiskHQ/lisk-sdk/pull/4457) ([diego-G](https://github.com/diego-G))
- Show BFT properties in api/blocks response - Closes #4449 [#4456](https://github.com/LiskHQ/lisk-sdk/pull/4456) ([lsilvs](https://github.com/lsilvs))
- Solve multiple issues on Synchronizer [#4455](https://github.com/LiskHQ/lisk-sdk/pull/4455) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Remove transactions 0 - 4 - Closes #4451 [#4452](https://github.com/LiskHQ/lisk-sdk/pull/4452) ([shuse2](https://github.com/shuse2))
- Upgrade to NodeJS 12 - Closes #4392 [#4448](https://github.com/LiskHQ/lisk-sdk/pull/4448) ([pablitovicente](https://github.com/pablitovicente))
- Update forgers endpoint - Closes #3684 [#4445](https://github.com/LiskHQ/lisk-sdk/pull/4445) ([shuse2](https://github.com/shuse2))
- Remove unnecessary reload check - Closes #4130 [#4443](https://github.com/LiskHQ/lisk-sdk/pull/4443) ([shuse2](https://github.com/shuse2))
- Add incentivizing Lisk-BFT Protocol Participation - Closes #4354 [#4441](https://github.com/LiskHQ/lisk-sdk/pull/4441) ([lsilvs](https://github.com/lsilvs))
- Update eager push to only send to 16 peers - Closes #3345 [#4440](https://github.com/LiskHQ/lisk-sdk/pull/4440) ([shuse2](https://github.com/shuse2))
- Add index.d.ts file for lisk-sdk - Closes #4438 [#4439](https://github.com/LiskHQ/lisk-sdk/pull/4439) ([shuse2](https://github.com/shuse2))
- Implement Unit tests for Fast Chain Switching - Closes #4376 [#4437](https://github.com/LiskHQ/lisk-sdk/pull/4437) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Add network identifier in framework - Closes #4435 [#4436](https://github.com/LiskHQ/lisk-sdk/pull/4436) ([shuse2](https://github.com/shuse2))
- Implement penalty for malformed peerList response - Closes #4363 & #4475 & #4447 [#4432](https://github.com/LiskHQ/lisk-sdk/pull/4432) ([valamidev](https://github.com/valamidev))
- Change protocol format and RPC procedure names to match LIP - Closes #4118 [#4431](https://github.com/LiskHQ/lisk-sdk/pull/4431) ([ManuGowda](https://github.com/ManuGowda))
- Add protocol specs for LIP-0009 and LIP-0012 - Closes #4092 [#4430](https://github.com/LiskHQ/lisk-sdk/pull/4430) ([shuse2](https://github.com/shuse2))
- Implement unit tests for Synchronizer class - Closes #4428 [#4427](https://github.com/LiskHQ/lisk-sdk/pull/4427) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Reject unnecessary messages - Closes #4424 [#4426](https://github.com/LiskHQ/lisk-sdk/pull/4426) ([ishantiw](https://github.com/ishantiw))
- Add IP limit for P2P Outbound connections - Closes #4315 [#4425](https://github.com/LiskHQ/lisk-sdk/pull/4425) ([valamidev](https://github.com/valamidev))
- Create P2P broadcast method - Related to #3344 [#4423](https://github.com/LiskHQ/lisk-sdk/pull/4423) ([diego-G](https://github.com/diego-G))
- Fix forging_statistics endpoint - Closes #4267 [#4422](https://github.com/LiskHQ/lisk-sdk/pull/4422) ([lsilvs](https://github.com/lsilvs))
- Update commander network identifier - Closes #4336 [#4421](https://github.com/LiskHQ/lisk-sdk/pull/4421) ([shuse2](https://github.com/shuse2))
- Merge dpos improvments into introduce bft [#4419](https://github.com/LiskHQ/lisk-sdk/pull/4419) ([lsilvs](https://github.com/lsilvs))
- Improve performance on vote weight calculation - Closes #4340 [#4415](https://github.com/LiskHQ/lisk-sdk/pull/4415) ([shuse2](https://github.com/shuse2))
- Request and apply blocks in chunks for BSM - Closes #4412 [#4414](https://github.com/LiskHQ/lisk-sdk/pull/4414) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Bubble up the peerId when a P2P message packet is received - Closes #4395 [#4411](https://github.com/LiskHQ/lisk-sdk/pull/4411) ([diego-G](https://github.com/diego-G))
- P2P introduce Functional testing - Closes #4387 [#4410](https://github.com/LiskHQ/lisk-sdk/pull/4410) ([valamidev](https://github.com/valamidev))
- Reuse PeerLists inside P2Pconfig - Closes #4405 [#4406](https://github.com/LiskHQ/lisk-sdk/pull/4406) ([diego-G](https://github.com/diego-G))
- Update sign network identifier - Closes #4335 [#4404](https://github.com/LiskHQ/lisk-sdk/pull/4404) ([mitsuaki-u](https://github.com/mitsuaki-u))
- Introduce functional test suite into lisk-p2p library Closes - #4387 [#4403](https://github.com/LiskHQ/lisk-sdk/pull/4403) ([valamidev](https://github.com/valamidev))
- Remove broadhash consensus - Closes #4625 [#4402](https://github.com/LiskHQ/lisk-sdk/pull/4402) ([shuse2](https://github.com/shuse2))
- Remove typo from response - Closes #3644 [#4400](https://github.com/LiskHQ/lisk-sdk/pull/4400) ([shuse2](https://github.com/shuse2))
- Remove vote column - Closes #4274 [#4399](https://github.com/LiskHQ/lisk-sdk/pull/4399) ([shuse2](https://github.com/shuse2))
- Add network identifier to cryptography - Closes #4333 [#4398](https://github.com/LiskHQ/lisk-sdk/pull/4398) ([mitsuaki-u](https://github.com/mitsuaki-u))
- Make usage of delegate list BFT compliant - Closes #3681 [#4397](https://github.com/LiskHQ/lisk-sdk/pull/4397) ([lsilvs](https://github.com/lsilvs))
- Implement Fast Chain Switching mechanism - Closes #3562 #4337 #4338 #4339 [#4396](https://github.com/LiskHQ/lisk-sdk/pull/4396) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Add default implementation for verifyAgainstTransactions - Closes #4238 [#4393](https://github.com/LiskHQ/lisk-sdk/pull/4393) ([michielmulders](https://github.com/michielmulders))
- Add consistent deserialization and serialization - Closes #4131 [#4391](https://github.com/LiskHQ/lisk-sdk/pull/4391) ([shuse2](https://github.com/shuse2))
- Update transaction pool not to use senderId and update usage of recipientId - Closes #4328 [#4390](https://github.com/LiskHQ/lisk-sdk/pull/4390) ([pablitovicente](https://github.com/pablitovicente))
- Remove delegate rank - Closes #4006 [#4389](https://github.com/LiskHQ/lisk-sdk/pull/4389) ([shuse2](https://github.com/shuse2))
- Update genesis block format - Closes #4331 [#4386](https://github.com/LiskHQ/lisk-sdk/pull/4386) ([shuse2](https://github.com/shuse2))
- Restore blocks upon startup - Closes #4348 [#4385](https://github.com/LiskHQ/lisk-sdk/pull/4385) ([michielmulders](https://github.com/michielmulders))
- Fix build and test for the new transaction schema - Closes #4332 [#4382](https://github.com/LiskHQ/lisk-sdk/pull/4382) ([shuse2](https://github.com/shuse2))
- Improve log message and format - Closes #4285 [#4381](https://github.com/LiskHQ/lisk-sdk/pull/4381) ([ManuGowda](https://github.com/ManuGowda))
- Update storage to store updated transaction schema - Closes #4326 [#4380](https://github.com/LiskHQ/lisk-sdk/pull/4380) ([pablitovicente](https://github.com/pablitovicente))
- Investigate slow sync on introduce_bft_consensus-dpos.1 branch - Closes #4340 [#4379](https://github.com/LiskHQ/lisk-sdk/pull/4379) ([lsilvs](https://github.com/lsilvs))
- Request and apply blocks of new chain [BSM] - Closes #3771 [#4378](https://github.com/LiskHQ/lisk-sdk/pull/4378) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Increase unit test coverage across P2P peer book - Closes #4227 [#4377](https://github.com/LiskHQ/lisk-sdk/pull/4377) ([diego-G](https://github.com/diego-G))
- Use new data structure to capture peer info to handle internal parameters - Closes #4313 [#4374](https://github.com/LiskHQ/lisk-sdk/pull/4374) ([ishantiw](https://github.com/ishantiw))
- Emit rounds change event when round finishes in Dpos module - Closes #4264 [#4373](https://github.com/LiskHQ/lisk-sdk/pull/4373) ([lsilvs](https://github.com/lsilvs))
- Refactor blocks endpoint - Closes #4369 [#4372](https://github.com/LiskHQ/lisk-sdk/pull/4372) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Expose BaseModule from framework and SDK - Closes #3826 [#4365](https://github.com/LiskHQ/lisk-sdk/pull/4365) ([alepop](https://github.com/alepop))
- Improve isValidNumber function validation - Closes #3902 [#4364](https://github.com/LiskHQ/lisk-sdk/pull/4364) ([alepop](https://github.com/alepop))
- Add unit test coverage for P2P PeerPool - Closes #4229 [#4357](https://github.com/LiskHQ/lisk-sdk/pull/4357) ([mitsuaki-u](https://github.com/mitsuaki-u))
- Remove transactions data from node status endpoint - Closes #4294 [#4347](https://github.com/LiskHQ/lisk-sdk/pull/4347) ([alepop](https://github.com/alepop))
- Jest Integration tests are failing randomly (Not Solved) [#4344](https://github.com/LiskHQ/lisk-sdk/pull/4344) ([yatki](https://github.com/yatki))
- Update transaction schema on transactions - Closes #4325 [#4342](https://github.com/LiskHQ/lisk-sdk/pull/4342) ([shuse2](https://github.com/shuse2))
- Revert to last common block in BSM - Closes #3770 [#4341](https://github.com/LiskHQ/lisk-sdk/pull/4341) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Undo did not call bft module to delete block - Closes #4320 [#4324](https://github.com/LiskHQ/lisk-sdk/pull/4324) ([shuse2](https://github.com/shuse2))
- Make usage of delegate list BFT compliant - Closes #3681 [#4322](https://github.com/LiskHQ/lisk-sdk/pull/4322) ([lsilvs](https://github.com/lsilvs))
- Merge child tables of mem_accounts - Closes #4139 [#4321](https://github.com/LiskHQ/lisk-sdk/pull/4321) ([pablitovicente](https://github.com/pablitovicente))
- State store inconsistent return value - Closes #4317 [#4319](https://github.com/LiskHQ/lisk-sdk/pull/4319) ([JesusTheHun](https://github.com/JesusTheHun))
- Update inbound peer eviction and add advanced test coverage - Closes #4280 [#4311](https://github.com/LiskHQ/lisk-sdk/pull/4311) ([mitsuaki-u](https://github.com/mitsuaki-u))
- Integrate swagger-stats APM - Closes #4300 [#4310](https://github.com/LiskHQ/lisk-sdk/pull/4310) ([ManuGowda](https://github.com/ManuGowda))
- Restore blocks from temp_block table - Closes #3775 [#4309](https://github.com/LiskHQ/lisk-sdk/pull/4309) ([michielmulders](https://github.com/michielmulders))
- Return full common block instead of ID property - Closes #4307 [#4308](https://github.com/LiskHQ/lisk-sdk/pull/4308) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Update max height previously forged - Closes #3696 [#4304](https://github.com/LiskHQ/lisk-sdk/pull/4304) ([shuse2](https://github.com/shuse2))
- Save height finalized when apply - Closes #3695 [#4303](https://github.com/LiskHQ/lisk-sdk/pull/4303) ([shuse2](https://github.com/shuse2))
- Integrate swagger-stats APM - Closes #4300 [#4302](https://github.com/LiskHQ/lisk-sdk/pull/4302) ([ManuGowda](https://github.com/ManuGowda))
- Move init steps to responsible files - Closes #4297 [#4298](https://github.com/LiskHQ/lisk-sdk/pull/4298) ([shuse2](https://github.com/shuse2))
- Add unit tests for P2P Inbound peer class - Closes #4224 [#4296](https://github.com/LiskHQ/lisk-sdk/pull/4296) ([diego-G](https://github.com/diego-G))
- Remove inefficient sync - Closes #2424 and  #2954 [#4293](https://github.com/LiskHQ/lisk-sdk/pull/4293) ([shuse2](https://github.com/shuse2))
- Full peers list growing excessively large (> 100K) - Closes #4279 [#4292](https://github.com/LiskHQ/lisk-sdk/pull/4292) ([jondubois](https://github.com/jondubois))
- Remove signature loading - Closes #4268 [#4290](https://github.com/LiskHQ/lisk-sdk/pull/4290) ([shuse2](https://github.com/shuse2))
- Add bft header - Closes #4247 [#4289](https://github.com/LiskHQ/lisk-sdk/pull/4289) ([shuse2](https://github.com/shuse2))
- Change v2 as default - Closes #4235 [#4287](https://github.com/LiskHQ/lisk-sdk/pull/4287) ([shuse2](https://github.com/shuse2))
- Implement obtain tip of chain step for Block Sync Mechanism - Closes #3768 [#4286](https://github.com/LiskHQ/lisk-sdk/pull/4286) ([pablitovicente](https://github.com/pablitovicente))
- Add unit tests for P2P Outbound peer class - Closes #4225 [#4277](https://github.com/LiskHQ/lisk-sdk/pull/4277) ([diego-G](https://github.com/diego-G))
- Update community links [#4275](https://github.com/LiskHQ/lisk-sdk/pull/4275) ([shuse2](https://github.com/shuse2))
- Write integration test coverage for DPOS module - Close #4192 [#4269](https://github.com/LiskHQ/lisk-sdk/pull/4269) ([yatki](https://github.com/yatki))
- Remove previous Round implementation - Closes #3685 [#4259](https://github.com/LiskHQ/lisk-sdk/pull/4259) ([lsilvs](https://github.com/lsilvs))
- Add unit test for P2P base peer file - Closes #4223 [#4258](https://github.com/LiskHQ/lisk-sdk/pull/4258) ([diego-G](https://github.com/diego-G))
- Extract and use common setup for integration tests - Closes #4200 [#4257](https://github.com/LiskHQ/lisk-sdk/pull/4257) ([ishantiw](https://github.com/ishantiw))
- The nodeInfo was removed from _peerSelectForConnection again - Closes #4253 [#4254](https://github.com/LiskHQ/lisk-sdk/pull/4254) ([jondubois](https://github.com/jondubois))
- Add event integration test coverage - Closes #4199 [#4252](https://github.com/LiskHQ/lisk-sdk/pull/4252) ([mitsuaki-u](https://github.com/mitsuaki-u))
- Move generate delegate list to dpos apply and undo - Closes #4218 [#4251](https://github.com/LiskHQ/lisk-sdk/pull/4251) ([michielmulders](https://github.com/michielmulders))
- Add unit test coverage for P2P request file - Closes #4230 [#4248](https://github.com/LiskHQ/lisk-sdk/pull/4248) ([jondubois](https://github.com/jondubois))
- Create function to compute BFT headers on block creation - Closes #4233 [#4246](https://github.com/LiskHQ/lisk-sdk/pull/4246) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Replace rounds.backwardTick by dpos.undo - Closes #4158 [#4245](https://github.com/LiskHQ/lisk-sdk/pull/4245) ([lsilvs](https://github.com/lsilvs))
- Remove id field of a peer coming from the database - Closes #4243 [#4244](https://github.com/LiskHQ/lisk-sdk/pull/4244) ([ishantiw](https://github.com/ishantiw))
- Removing newrelic integration - Closes #4141 [#4242](https://github.com/LiskHQ/lisk-sdk/pull/4242) ([ManuGowda](https://github.com/ManuGowda))
- Update eslint version - Closes #3468 [#4239](https://github.com/LiskHQ/lisk-sdk/pull/4239) ([shuse2](https://github.com/shuse2))
- Protocol-spec generator should not generate different JSON on each run - Closes #4193 [#4237](https://github.com/LiskHQ/lisk-sdk/pull/4237) ([pablitovicente](https://github.com/pablitovicente))
- Split block processing steps - Closes #3869 [#4234](https://github.com/LiskHQ/lisk-sdk/pull/4234) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Add JSDocs for filters for Transaction Entity - Closes #4231 [#4232](https://github.com/LiskHQ/lisk-sdk/pull/4232) ([michielmulders](https://github.com/michielmulders))
- Fix cyclomatic complexity across P2P Library - Closes #3859 [#4222](https://github.com/LiskHQ/lisk-sdk/pull/4222) ([diego-G](https://github.com/diego-G))
- Delete caching mechanism in Dpos - Closes #4217 [#4220](https://github.com/LiskHQ/lisk-sdk/pull/4220) ([yatki](https://github.com/yatki))
- Protocol-spec votes - Closes #4182 [#4215](https://github.com/LiskHQ/lisk-sdk/pull/4215) ([pablitovicente](https://github.com/pablitovicente))
- Replace rounds.tick by dpos.apply - Closes #4157 [#4191](https://github.com/LiskHQ/lisk-sdk/pull/4191) ([lsilvs](https://github.com/lsilvs))
- Protocol-spec multi-signature registration - Closes #4185 [#4190](https://github.com/LiskHQ/lisk-sdk/pull/4190) ([pablitovicente](https://github.com/pablitovicente))
- Solve JavaScript heap out of memory - Closes #4183 [#4188](https://github.com/LiskHQ/lisk-sdk/pull/4188) ([michielmulders](https://github.com/michielmulders))
- Refactor integration tests - Closes #4121 [#4187](https://github.com/LiskHQ/lisk-sdk/pull/4187) ([mitsuaki-u](https://github.com/mitsuaki-u))
- Protocol-spec transfer - Closes #4181 [#4186](https://github.com/LiskHQ/lisk-sdk/pull/4186) ([pablitovicente](https://github.com/pablitovicente))
- Make /delegates/forgers BFT compliant - Closes #3684 [#4172](https://github.com/LiskHQ/lisk-sdk/pull/4172) ([michielmulders](https://github.com/michielmulders))
- Protocol-spec delegate registration - Closes #4159 [#4166](https://github.com/LiskHQ/lisk-sdk/pull/4166) ([pablitovicente](https://github.com/pablitovicente))
- Fix the number accuracy of vote calculations in round - Closes #2423 [#4165](https://github.com/LiskHQ/lisk-sdk/pull/4165) ([nazarhussain](https://github.com/nazarhussain))
- Replace rounds.validateBlockSlot with dpos.verifyBlockForger - Closes #4155, #4156 [#4164](https://github.com/LiskHQ/lisk-sdk/pull/4164) ([michielmulders](https://github.com/michielmulders))
- Implement verify blockslot forger - Closes #4144 [#4162](https://github.com/LiskHQ/lisk-sdk/pull/4162) ([michielmulders](https://github.com/michielmulders))
- Dpos.getRoundDelegates returns outdated list - Closes #4147 [#4161](https://github.com/LiskHQ/lisk-sdk/pull/4161) ([yatki](https://github.com/yatki))
- Create base class peer list - Closes #4048 [#4160](https://github.com/LiskHQ/lisk-sdk/pull/4160) ([ishantiw](https://github.com/ishantiw))
- Replace rounds.generateDelegateList by dpos.getRoundDelegates - Closes #4152 [#4154](https://github.com/LiskHQ/lisk-sdk/pull/4154) ([lsilvs](https://github.com/lsilvs))
- Protocol-spec second signature - closes #4148 [#4151](https://github.com/LiskHQ/lisk-sdk/pull/4151) ([pablitovicente](https://github.com/pablitovicente))
- Reorganise p2p library - Closes #3678 [#4150](https://github.com/LiskHQ/lisk-sdk/pull/4150) ([diego-G](https://github.com/diego-G))
- Protocol-spec second signature - closes #4148 [#4149](https://github.com/LiskHQ/lisk-sdk/pull/4149) ([pablitovicente](https://github.com/pablitovicente))
- Functional GET tests taking too long on Jenkins - Closes #4124 [#4145](https://github.com/LiskHQ/lisk-sdk/pull/4145) ([pablitovicente](https://github.com/pablitovicente))
- Create protocol-spec json for BFT specification - Closes #4088 [#4123](https://github.com/LiskHQ/lisk-sdk/pull/4123) ([nazarhussain](https://github.com/nazarhussain))
- Sync error on testnet - Closes #4119 [#4120](https://github.com/LiskHQ/lisk-sdk/pull/4120) ([lsilvs](https://github.com/lsilvs))
- Load minimum block headers on block deletion - Closes #3694 [#4112](https://github.com/LiskHQ/lisk-sdk/pull/4112) ([nazarhussain](https://github.com/nazarhussain))
- Dpos undo produce block - Closes #4001 #4002 #4004 #4005 [#4110](https://github.com/LiskHQ/lisk-sdk/pull/4110) ([pablitovicente](https://github.com/pablitovicente))
- Merge development into feature-bft - Closes #4098 [#4099](https://github.com/LiskHQ/lisk-sdk/pull/4099) ([pablitovicente](https://github.com/pablitovicente))
- Fix readme code snippet #4096 [#4097](https://github.com/LiskHQ/lisk-sdk/pull/4097) ([RachBLondon](https://github.com/RachBLondon))
- Implement isEmpty and truncate for temp_block - Closes #3776 [#4085](https://github.com/LiskHQ/lisk-sdk/pull/4085) ([michielmulders](https://github.com/michielmulders))
- Add filter to Accounts entity to allow searching in account.asset field - Closes #3990 [#4078](https://github.com/LiskHQ/lisk-sdk/pull/4078) ([pablitovicente](https://github.com/pablitovicente))
- Improve logger naming for components - Closes #3532 [#4075](https://github.com/LiskHQ/lisk-sdk/pull/4075) ([michielmulders](https://github.com/michielmulders))
- Add initial setup for Spec of Specs generator [#4063](https://github.com/LiskHQ/lisk-sdk/pull/4063) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Emit event when a block is finalized from the bft module - Closes #3908 [#4061](https://github.com/LiskHQ/lisk-sdk/pull/4061) ([pablitovicente](https://github.com/pablitovicente))
- Move BlockSlots class into Dpos Module - Closes #3789 [#4059](https://github.com/LiskHQ/lisk-sdk/pull/4059) ([lsilvs](https://github.com/lsilvs))
- Update broken link in Readme, Closes #4056  [#4058](https://github.com/LiskHQ/lisk-sdk/pull/4058) ([Tschakki](https://github.com/Tschakki))
- Remove block dependency from block/utils - Closes #4012 [#4055](https://github.com/LiskHQ/lisk-sdk/pull/4055) ([michielmulders](https://github.com/michielmulders))
- Update sodium-native to latest version (includes libsodium 1.0.17) - Closes #3414 [#4053](https://github.com/LiskHQ/lisk-sdk/pull/4053) ([pablitovicente](https://github.com/pablitovicente))
- Improve finality manager performance and add more test simulations - Closes #3894 [#4050](https://github.com/LiskHQ/lisk-sdk/pull/4050) ([nazarhussain](https://github.com/nazarhussain))
- Add Round.apply function - Closes #3633 [#4047](https://github.com/LiskHQ/lisk-sdk/pull/4047) ([yatki](https://github.com/yatki))
- Add util functions to be used in integration test - Closes #3955 [#4046](https://github.com/LiskHQ/lisk-sdk/pull/4046) ([SargeKhan](https://github.com/SargeKhan))
- Add block processor - Closes #4041 [#4043](https://github.com/LiskHQ/lisk-sdk/pull/4043) ([shuse2](https://github.com/shuse2))
- Merge development into bft branch [#4034](https://github.com/LiskHQ/lisk-sdk/pull/4034) ([shuse2](https://github.com/shuse2))
- Merge development to feature/introduce_bft_consensus branch [#4020](https://github.com/LiskHQ/lisk-sdk/pull/4020) ([SargeKhan](https://github.com/SargeKhan))
- Store deleted block in temp table - Closes #3772 [#4019](https://github.com/LiskHQ/lisk-sdk/pull/4019) ([SargeKhan](https://github.com/SargeKhan))
- Add Round.apply function - Closes #3633 [#3934](https://github.com/LiskHQ/lisk-sdk/pull/3934) ([yatki](https://github.com/yatki))
- Implement peer selection algorithm for block sync mechanism - Closes #3767 [#3900](https://github.com/LiskHQ/lisk-sdk/pull/3900) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Implement method to identify chain recovery mode with BFT - Closes #3561 [#3891](https://github.com/LiskHQ/lisk-sdk/pull/3891) ([nazarhussain](https://github.com/nazarhussain))
- Update peer selection method for fetchPeers response - Closes #3333 [#3883](https://github.com/LiskHQ/lisk-sdk/pull/3883) ([mitsuaki-u](https://github.com/mitsuaki-u))
- Maintain received time of last received applied block - Closes #3557 [#3882](https://github.com/LiskHQ/lisk-sdk/pull/3882) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Update application state structure to include prevotedConfirmedUptoHeight  - Closes #3774 [#3865](https://github.com/LiskHQ/lisk-sdk/pull/3865) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Automatically cleanup round_delegates table - Closes #3683 [#3853](https://github.com/LiskHQ/lisk-sdk/pull/3853) ([SargeKhan](https://github.com/SargeKhan))
- Create submodule/bft to initiate the BFT logic at application startup - Closes #3693 [#3851](https://github.com/LiskHQ/lisk-sdk/pull/3851) ([nazarhussain](https://github.com/nazarhussain))
-  Synchronizer design proposal - Closes #3773 [#3846](https://github.com/LiskHQ/lisk-sdk/pull/3846) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Merge development to feature/bft branch  [#3836](https://github.com/LiskHQ/lisk-sdk/pull/3836) ([nazarhussain](https://github.com/nazarhussain))
- Create ChainMeta entity to persist BFT information - Closes #3832 [#3833](https://github.com/LiskHQ/lisk-sdk/pull/3833) ([nazarhussain](https://github.com/nazarhussain))
- Implement procedure to return the highest common block id - Closes #3769 [#3816](https://github.com/LiskHQ/lisk-sdk/pull/3816) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Generate delegate list using `round_delegates` table - Closes #3631 [#3782](https://github.com/LiskHQ/lisk-sdk/pull/3782) ([yatki](https://github.com/yatki))
- Implement BFT LIP logic to add/remove headers as logic/bft.js - Closes #3692 [#3758](https://github.com/LiskHQ/lisk-sdk/pull/3758) ([nazarhussain](https://github.com/nazarhussain))
- Implement BFT fork choice rules [#3725](https://github.com/LiskHQ/lisk-sdk/pull/3725) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Updated signature and heightPrevious / heightPrevoted with support old implementation - Closes #3558, #3556 [#3722](https://github.com/LiskHQ/lisk-sdk/pull/3722) ([michielmulders](https://github.com/michielmulders))
- Create data structure to store block headers for BFT - Closes #3691 [#3709](https://github.com/LiskHQ/lisk-sdk/pull/3709) ([nazarhussain](https://github.com/nazarhussain))
- Add waiting threshold before forging block if node did not receive the block from previous slot - Closes #3564 [#3569](https://github.com/LiskHQ/lisk-sdk/pull/3569) ([nazarhussain](https://github.com/nazarhussain))
</details>",50873641
99,False,False,2019-09-19T09:47:54Z,2019-09-19T13:41:56Z,"# Change Log

## [v2.3.6](https://github.com/LiskHQ/lisk-sdk/tree/v2.3.6) (2019-09-19)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v2.3.5...v2.3.6)

### Released packages
#### Patch releases
- lisk-sdk@2.3.6
- lisk-framework@0.4.6
- @liskhq/lisk-p2p@0.3.5

### Bugs
- When propagating a block with p2p.send, the block is more likely to reach inbound peers [#4271](https://github.com/LiskHQ/lisk-sdk/issues/4271)

<details>
  <summary>All the issues</summary>

  ### Closed issues:
- When propagating a block with p2p.send, the block is more likely to reach inbound peers [#4271](https://github.com/LiskHQ/lisk-sdk/issues/4271)


 ### Merged pull requests:
- When propagating a block with p2p.send, the block is more likely to reach inbound peers - Closes #4271 [#4272](https://github.com/LiskHQ/lisk-sdk/pull/4272) ([jondubois](https://github.com/jondubois))
</details>",50873641
100,False,False,2019-09-16T09:11:24Z,2019-09-16T12:01:41Z,"# Change Log

## [v2.3.5](https://github.com/LiskHQ/lisk-sdk/tree/v2.3.5) (2019-09-16)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v2.3.4...v2.3.5)

### Released packages
#### Patch releases
- lisk-sdk@2.3.5
- lisk-framework@0.4.5
- @liskhq/lisk-p2p@0.3.4


### Bugs
- Consensus is low due slow update of peerInfo [#4261](https://github.com/LiskHQ/lisk-sdk/issues/4261)
- Outdated value in configDevnet sample [#4256](https://github.com/LiskHQ/lisk-sdk/issues/4256)

<details>
  <summary>All the issues</summary>

### Closed issues:
- Consensus is low due slow update of peerInfo [#4261](https://github.com/LiskHQ/lisk-sdk/issues/4261)
- Outdated value in configDevnet sample [#4256](https://github.com/LiskHQ/lisk-sdk/issues/4256)

### Merged pull requests:
- Fix outdated max value for connection - Closes #4256 [#4263](https://github.com/LiskHQ/lisk-sdk/pull/4263) ([shuse2](https://github.com/shuse2))
- Add update status job for peer info in peer pool - Closes #4261 [#4262](https://github.com/LiskHQ/lisk-sdk/pull/4262) ([ishantiw](https://github.com/ishantiw))

</details>",50873641
101,False,False,2019-09-12T10:45:46Z,2019-09-12T12:53:22Z,"# Change Log

## [v2.3.4](https://github.com/LiskHQ/lisk-sdk/tree/v2.3.3) (2019-09-12)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v2.3.3...v2.3.4)

### Released packages
#### Patch releases
- lisk-sdk@2.3.4
- lisk-framework@0.4.4


### Closed Issues
- Fork function throws detached error and crash the application [#4249](https://github.com/LiskHQ/lisk-sdk/issues/4249)
",50873641
102,False,False,2019-09-09T08:01:14Z,2019-09-09T12:11:17Z,"# Change Log

## [v2.3.3](https://github.com/LiskHQ/lisk-sdk/tree/v2.3.3) (2019-09-09)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v2.3.2...v2.3.3)

### Released packages
#### Patch releases
- lisk-sdk@2.3.3
- lisk-framework@0.4.3
- lisk-elements@2.4.2
- @liskhq/lisk-p2p@0.3.3

### Improvements
- The rate limiter is not banning peers [#4180](https://github.com/LiskHQ/lisk-sdk/issues/4180)
- Improve cache logging [#4198](https://github.com/LiskHQ/lisk-sdk/issues/4198)


### Bugs
- Handle transport endpoints from malicious payload [#4208](https://github.com/LiskHQ/lisk-sdk/issues/4208)
- Issue with fixed/white peers config [#4197](https://github.com/LiskHQ/lisk-sdk/issues/4197)

<details>
  <summary>All the issues</summary>

### Closed issues:
- Transaction count wasn't cached TypeError [#4206](https://github.com/LiskHQ/lisk-sdk/issues/4206)
- The rate limiter is not banning peers [#4180](https://github.com/LiskHQ/lisk-sdk/issues/4180)
- Shuffling should not evict fixed peer from peer pool [#4213](https://github.com/LiskHQ/lisk-sdk/issues/4213)
- Show progress of genesis block [#4209](https://github.com/LiskHQ/lisk-sdk/issues/4209)
- Handle transport endpoints from malicious payload [#4208](https://github.com/LiskHQ/lisk-sdk/issues/4208)
- Improve cache logging [#4198](https://github.com/LiskHQ/lisk-sdk/issues/4198)
- Issue with fixed/white peers config [#4197](https://github.com/LiskHQ/lisk-sdk/issues/4197)


### Merged pull requests:
- Fix white/fixed/blacklist config and manage it in peer pool for connections- Closes#4197#4213#4214 [#4216](https://github.com/LiskHQ/lisk-sdk/pull/4216) ([ishantiw](https://github.com/ishantiw))
- Add logs for starting genesis block apply - Closes #4209 [#4212](https://github.com/LiskHQ/lisk-sdk/pull/4212) ([shuse2](https://github.com/shuse2))
- Fix event handling - Closes #4208 [#4211](https://github.com/LiskHQ/lisk-sdk/pull/4211) ([shuse2](https://github.com/shuse2))
- Fix cache logging and destruction - Closes #4198, #4206 [#4210](https://github.com/LiskHQ/lisk-sdk/pull/4210) ([shuse2](https://github.com/shuse2))
- Fix critical severity security alerts [#4207](https://github.com/LiskHQ/lisk-sdk/pull/4207) ([ManuGowda](https://github.com/ManuGowda))
- The rate limiter is not banning peers - Closes #4180 [#4184](https://github.com/LiskHQ/lisk-sdk/pull/4184) ([jondubois](https://github.com/jondubois))

</details>",50873641
103,False,False,2019-09-03T08:32:12Z,2019-09-03T09:27:45Z,"# Change Log

## [v2.3.2](https://github.com/LiskHQ/lisk-sdk/tree/v2.3.2) (2019-09-03)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v2.3.1...v2.3.2)

### Released packages
#### Patch releases
- lisk-sdk@2.3.2
- lisk-framework@0.4.2
- @liskhq/lisk-p2p@0.3.2

### Improvements
- Improve logging for peer discovery and invalid peers messages [#4174](https://github.com/LiskHQ/lisk-sdk/issues/4174)

### Bugs
- If an existing peer tries to connect to us, the inbound connection is kept even though they are not added to our peer list [#4170](https://github.com/LiskHQ/lisk-sdk/issues/4170)

<details>
  <summary>All the issues</summary>

### Closed issues:
- Improve logging for peer discovery and invalid peers messages [#4174](https://github.com/LiskHQ/lisk-sdk/issues/4174)
- If an existing peer tries to connect to us, the inbound connection is kept even though they are not added to our peer list [#4170](https://github.com/LiskHQ/lisk-sdk/issues/4170)


### Merged pull requests:
- Update socket cluster version [#4179](https://github.com/LiskHQ/lisk-sdk/pull/4179) ([shuse2](https://github.com/shuse2))
- Improve logging for peer discovery and invalid peer - Closes #4174 [#4175](https://github.com/LiskHQ/lisk-sdk/pull/4175) ([ishantiw](https://github.com/ishantiw))
- If an existing peer tries to connect to us, the inbound connection is kept even though they are not added to our peer list - Closes #4170 [#4171](https://github.com/LiskHQ/lisk-sdk/pull/4171) ([jondubois](https://github.com/jondubois))
- Allow inbound connections and get status from outbound [#4169](https://github.com/LiskHQ/lisk-sdk/pull/4169) ([ishantiw](https://github.com/ishantiw))

</details>",50873641
104,False,False,2019-08-27T10:14:54Z,2019-08-27T10:56:18Z,"# Change Log

## [v2.3.1](https://github.com/LiskHQ/lisk-sdk/tree/v2.3.1) (2019-08-27)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v2.3.0...v2.3.1)

### Released packages
#### Patch releases
- lisk-sdk@2.3.1
- lisk-framework@0.4.1

### Improvements
- Avoid low broadhash consensus attacks in partial mesh network [#3969](https://github.com/LiskHQ/lisk-sdk/issues/3969)
- Request data only from outbound peers [#4135](https://github.com/LiskHQ/lisk-sdk/issues/4135)

### Bugs
- Add back nodeInfo, peerLimit and requestPacket fields to _peerSelectForRequest function [#4142](https://github.com/LiskHQ/lisk-sdk/issues/4142)

<details>
  <summary>All the issues</summary>

### Closed issues:
- /api/accounts performance is too low [#4122](https://github.com/LiskHQ/lisk-sdk/issues/4122)
- Request data only from outbound peers [#4135](https://github.com/LiskHQ/lisk-sdk/issues/4135)
- Add back nodeInfo, peerLimit and requestPacket fields to _peerSelectForRequest function [#4142](https://github.com/LiskHQ/lisk-sdk/issues/4142)
- Add QA test simulating node takeover [#3972](https://github.com/LiskHQ/lisk-sdk/issues/3972)
- Avoid low broadhash consensus attacks in partial mesh network [#3969](https://github.com/LiskHQ/lisk-sdk/issues/3969)
- Do not expose new/triedPeers from P2P [#4044](https://github.com/LiskHQ/lisk-sdk/issues/4044)


### Merged pull requests:
- Request from Outbound peers - Closes #4135 [#4146](https://github.com/LiskHQ/lisk-sdk/pull/4146) ([mitsujutsu](https://github.com/mitsujutsu))
- Add back nodeInfo, peerLimit and requestPacket fields to _peerSelectForRequest function - Closes #4142 [#4143](https://github.com/LiskHQ/lisk-sdk/pull/4143) ([jondubois](https://github.com/jondubois))
- Calculate consensus only from outbound connected peers - Closes #3969 [#4134](https://github.com/LiskHQ/lisk-sdk/pull/4134) ([diego-G](https://github.com/diego-G))
- Fix slow http api/account - Closes #4122 [#4128](https://github.com/LiskHQ/lisk-sdk/pull/4128) ([shuse2](https://github.com/shuse2))
- Do not expose new or tried peers from P2P library - Close #4044 [#4125](https://github.com/LiskHQ/lisk-sdk/pull/4125) ([diego-G](https://github.com/diego-G))
</details>",50873641
105,False,False,2019-08-23T11:00:31Z,2019-08-23T12:45:17Z,"# Change Log

## [v2.0.2](https://github.com/LiskHQ/lisk-sdk/tree/v2.0.2) (2019-08-23)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v2.0.1...v2.0.2)


### Released packages
#### Patch releases
- lisk-sdk@2.0.2
- lisk-framework@0.1.4

### Bugs
- Error while saving peer info to database [#4132](https://github.com/LiskHQ/lisk-sdk/issues/4132)
- /api/accounts performance is too low [#4122](https://github.com/LiskHQ/lisk-sdk/issues/4122)
- Fix invalid use of callback [#4127](https://github.com/LiskHQ/lisk-sdk/issues/4127)",50873641
106,False,False,2019-08-21T07:19:04Z,2019-08-21T09:17:46Z,"# Change Log

## [v2.3.0](https://github.com/LiskHQ/lisk-sdk/tree/v2.3.0) (2019-08-21)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v2.2.0...v2.3.0)

This release partially introduces [LIP-0004](https://github.com/LiskHQ/lips/blob/master/proposals/lip-0004.md), where it does not introduce breaking changes.

### Released packages
#### Minor releases
- lisk-sdk@2.3.0
- lisk-framework@0.4.0
- lisk-commander@2.2.3
- lisk-elements@2.4.0
- @liskhq/lisk-p2p@0.3.0
- @liskhq/lisk-cryptography@2.3.0

#### Patch releases
These release only includes dependency updates
- @liskhq/lisk-api-client@2.0.3
- @liskhq/lisk-client@2.3.1
- @liskhq/lisk-constants@1.2.3
- @liskhq/lisk-passphrase@2.0.3
- @liskhq/lisk-transactions@2.3.1
- @liskhq/lisk-validator@0.2.1

### Improvements
- Share WS connection between Peers [#3342](https://github.com/LiskHQ/lisk-sdk/issues/3342)
- Add feature to disconnect peers as part of shuffling algorithm [#3347](https://github.com/LiskHQ/lisk-sdk/issues/3347)
- Introduce management of peer buckets within new/tried peers list [#3334](https://github.com/LiskHQ/lisk-sdk/issues/3334)
- Add way to retarget specific peers on the network to account for the new LIP advertising feature [#3565](https://github.com/LiskHQ/lisk-sdk/issues/3565)
- Introduce specific eviction method for incoming connections [#3721](https://github.com/LiskHQ/lisk-sdk/issues/3721)
- Remove relayLimit from broadcaster [#3819](https://github.com/LiskHQ/lisk-sdk/issues/3819)

### Bugs
- Lisk core upgrade to latest version using Lisk commander failed [#4037](https://github.com/LiskHQ/lisk-sdk/issues/4037)
- Postgres default connection is too heigh [#4062](https://github.com/LiskHQ/lisk-sdk/issues/4062)
- Command returns inconsistent output - Closes #4084 [#4094](https://github.com/LiskHQ/lisk-sdk/pull/4094) ([ManuGowda](https://github.com/ManuGowda))


<details>
  <summary>All the issues</summary>

  ### Closed issues:
  - Update sodium-native [#4105](https://github.com/LiskHQ/lisk-sdk/issues/4105)
  - Syncing should revert a block when loading from network failed [#4103](https://github.com/LiskHQ/lisk-sdk/issues/4103)
  - Network Ready event for P2P layer [#4090](https://github.com/LiskHQ/lisk-sdk/issues/4090)
  - Syncing halted due to block max payload size exceeded [#4089](https://github.com/LiskHQ/lisk-sdk/issues/4089)
  - core:status command returns inconsistent output [#4084](https://github.com/LiskHQ/lisk-sdk/issues/4084)
  - PeerPool removePeer should allow code or reason as parameter [#4083](https://github.com/LiskHQ/lisk-sdk/issues/4083)
  - Add check for non-existent actions and add tests to cover [#4081](https://github.com/LiskHQ/lisk-sdk/issues/4081)
  - Invalid schema usage for validating transaction [#4077](https://github.com/LiskHQ/lisk-sdk/issues/4077)
  - Required log info absent during node syncing from scratch [#4074](https://github.com/LiskHQ/lisk-sdk/issues/4074)
  - Transaction pool logs redundant info logs [#4072](https://github.com/LiskHQ/lisk-sdk/issues/4072)
  - Could not respond to peer request list because of error [#4070](https://github.com/LiskHQ/lisk-sdk/issues/4070)
  - Fix peer selection for eviction function [#4067](https://github.com/LiskHQ/lisk-sdk/issues/4067)
  - Postgres default connection is too heigh [#4062](https://github.com/LiskHQ/lisk-sdk/issues/4062)
  - P2P 2.3 incompatibility with 2.0 and 1.x related to peer lists [#4060](https://github.com/LiskHQ/lisk-sdk/issues/4060)
  - Check the sync is working with closed inbound [#4052](https://github.com/LiskHQ/lisk-sdk/issues/4052)
  - Improve logging related to peer discovery and selection [#4051](https://github.com/LiskHQ/lisk-sdk/issues/4051)
  - Lisk core upgrade to latest version using Lisk commander failed [#4037](https://github.com/LiskHQ/lisk-sdk/issues/4037)
  - does lisk-framework need a fixed node version? [#4009](https://github.com/LiskHQ/lisk-sdk/issues/4009)
  - Add pingTimeout back in 2.3 [#3998](https://github.com/LiskHQ/lisk-sdk/issues/3998)
  - Migrate the integration test description to Jest folder with standard. [#3986](https://github.com/LiskHQ/lisk-sdk/issues/3986)
  - Use netgrouping for inbound evictions [#3976](https://github.com/LiskHQ/lisk-sdk/issues/3976)
  - Rate limit WebSocket messages [#3975](https://github.com/LiskHQ/lisk-sdk/issues/3975)
  - Add QA test for malformed peerLists [#3971](https://github.com/LiskHQ/lisk-sdk/issues/3971)
  - Generate 32-bit entropy random secret on node startup [#3970](https://github.com/LiskHQ/lisk-sdk/issues/3970)
  - Due to partial mesh check if networkHeight is consistent across the network [#3966](https://github.com/LiskHQ/lisk-sdk/issues/3966)
  - Add P2P QA test to verify that shuffling is working as expected in outbound [#3953](https://github.com/LiskHQ/lisk-sdk/issues/3953)
  - Add P2P QA test case to check block, transaction and signature message rebound count [#3952](https://github.com/LiskHQ/lisk-sdk/issues/3952)
  - Only send back the port and ip when peer requests our peer list [#3948](https://github.com/LiskHQ/lisk-sdk/issues/3948)
  - Trying to upgrade non-existing instance does not return non-zero exit code [#3928](https://github.com/LiskHQ/lisk-sdk/issues/3928)
  - Create ip prefix calculation function for peer bucket [#3874](https://github.com/LiskHQ/lisk-sdk/issues/3874)
  - Resolve QA issues for P2P robust peer selection release [#3870](https://github.com/LiskHQ/lisk-sdk/issues/3870)
  - Remove relayLimit from broadcaster [#3819](https://github.com/LiskHQ/lisk-sdk/issues/3819)
  - Add a P2P integration test scenario to cover message propagation in partially connected network [#3812](https://github.com/LiskHQ/lisk-sdk/issues/3812)
  - Remove framework specific eslint rules [#3749](https://github.com/LiskHQ/lisk-sdk/issues/3749)
  - Introduce specific eviction method for incoming connections [#3721](https://github.com/LiskHQ/lisk-sdk/issues/3721)
  - Implement incoming connections limit [#3720](https://github.com/LiskHQ/lisk-sdk/issues/3720)
  - Bad behaviour on _newPeers list map [#3682](https://github.com/LiskHQ/lisk-sdk/issues/3682)
  - Update discovery according to LIP protocol [#3649](https://github.com/LiskHQ/lisk-sdk/issues/3649)
  - Introduce peer populator to replenish outbound connections [#3648](https://github.com/LiskHQ/lisk-sdk/issues/3648)
  - Propagate inbound socket close event on Peer to the top level P2P class [#3602](https://github.com/LiskHQ/lisk-sdk/issues/3602)
  - Add way to retarget specific peers on the network to account for the new LIP advertising feature [#3565](https://github.com/LiskHQ/lisk-sdk/issues/3565)
  - Fix _newPeers and _triedPeers to match the LIP [#3330](https://github.com/LiskHQ/lisk-sdk/issues/3330)
  - Update peer discovery messages in response to fetching peers list [#3333](https://github.com/LiskHQ/lisk-sdk/issues/3333)
  - Introduce management of peer buckets within new/tried peers list [#3334](https://github.com/LiskHQ/lisk-sdk/issues/3334)
  - module sc-uws: Compilation of µWebSockets has failed and there is no pre-compiled binary available for your system [#2897](https://github.com/LiskHQ/lisk-sdk/issues/2897)
  - Enforce limits on the size of inbound messages/requests in P2P [#3335](https://github.com/LiskHQ/lisk-sdk/issues/3335)
  - Add missing unit tests for p2p [#3338](https://github.com/LiskHQ/lisk-sdk/issues/3338)
  - Managing fixed white black lists of peers from configuration [#3339](https://github.com/LiskHQ/lisk-sdk/issues/3339)
  - Add banning mechanism [#3343](https://github.com/LiskHQ/lisk-sdk/issues/3343)
  - Update peer selection (for connection) mechanism for selection of multiple peers [#3346](https://github.com/LiskHQ/lisk-sdk/issues/3346)
  - Add feature to disconnect peers as part of shuffling algorithm [#3347](https://github.com/LiskHQ/lisk-sdk/issues/3347)
  - Share WS connection between Peers [#3342](https://github.com/LiskHQ/lisk-sdk/issues/3342)


  ### Merged pull requests:
  - Update cypress dependency for lodash update [#4113](https://github.com/LiskHQ/lisk-sdk/pull/4113) ([shuse2](https://github.com/shuse2))
  - Syncing halted due to block max payload size exceeded - Closes #4083 [#4109](https://github.com/LiskHQ/lisk-sdk/pull/4109) ([jondubois](https://github.com/jondubois))
  - Update sodium-native - Closes #4105 [#4108](https://github.com/LiskHQ/lisk-sdk/pull/4108) ([pablitovicente](https://github.com/pablitovicente))
  - Throw error for non-existent action and add tests - Closes #4080 #4081 [#4107](https://github.com/LiskHQ/lisk-sdk/pull/4107) ([michielmulders](https://github.com/michielmulders))
  - Fix syncing logic for reverting - Closes #4103 [#4104](https://github.com/LiskHQ/lisk-sdk/pull/4104) ([shuse2](https://github.com/shuse2))
  - Trying to upgrade non-existing instance does not return non-zero exit code - Closes #3928 [#4102](https://github.com/LiskHQ/lisk-sdk/pull/4102) ([ManuGowda](https://github.com/ManuGowda))
  - Update node version to be more flexible - Closes #4009 and #3852 [#4101](https://github.com/LiskHQ/lisk-sdk/pull/4101) ([shuse2](https://github.com/shuse2))
  - Add network ready event - Closes #4090 [#4100](https://github.com/LiskHQ/lisk-sdk/pull/4100) ([mitsujutsu](https://github.com/mitsujutsu))
  - core:status command returns inconsistent output - Closes #4084 [#4094](https://github.com/LiskHQ/lisk-sdk/pull/4094) ([ManuGowda](https://github.com/ManuGowda))
  - PeerPool removePeer should allow code or reason as parameter - Closes #4083 [#4086](https://github.com/LiskHQ/lisk-sdk/pull/4086) ([jondubois](https://github.com/jondubois))
  - Fix invalid schema - Closes #4077 [#4082](https://github.com/LiskHQ/lisk-sdk/pull/4082) ([shuse2](https://github.com/shuse2))
  - Lisk core upgrade to latest version using Lisk commander failed - Closes #4037 [#4079](https://github.com/LiskHQ/lisk-sdk/pull/4079) ([ManuGowda](https://github.com/ManuGowda))
  - Add logs for new blocks - Closes #4074 [#4076](https://github.com/LiskHQ/lisk-sdk/pull/4076) ([shuse2](https://github.com/shuse2))
  - Update default connection for DB - Closes #4062 [#4071](https://github.com/LiskHQ/lisk-sdk/pull/4071) ([shuse2](https://github.com/shuse2))
  - Update readme [#4069](https://github.com/LiskHQ/lisk-sdk/pull/4069) ([shuse2](https://github.com/shuse2))
  - Fix selection for eviction - Closes #4067 [#4068](https://github.com/LiskHQ/lisk-sdk/pull/4068) ([mitsujutsu](https://github.com/mitsujutsu))
  - P2P 2.3 incompatibility with older version - Closes #4060 [#4065](https://github.com/LiskHQ/lisk-sdk/pull/4065) ([ishantiw](https://github.com/ishantiw))
  - Merge development into feature p2p branch [#4035](https://github.com/LiskHQ/lisk-sdk/pull/4035) ([ishantiw](https://github.com/ishantiw))
  - Standarize eslint - Closes #3749 [#4033](https://github.com/LiskHQ/lisk-sdk/pull/4033) ([shuse2](https://github.com/shuse2))
  - Implement new/tried peer list and peer bucket management Closes #3334 [#4030](https://github.com/LiskHQ/lisk-sdk/pull/4030) ([ishantiw](https://github.com/ishantiw))
  - Merge development into p2p feature [#4024](https://github.com/LiskHQ/lisk-sdk/pull/4024) ([diego-G](https://github.com/diego-G))
  - Netgroup inbound peer eviction and secret generation - Closes #3976 [#4023](https://github.com/LiskHQ/lisk-sdk/pull/4023) ([mitsujutsu](https://github.com/mitsujutsu))
  - Update selection mechanism to connect to peers - Closes #3346 [#4022](https://github.com/LiskHQ/lisk-sdk/pull/4022) ([diego-G](https://github.com/diego-G))
  - Remove stdin and gc - Closes #3839 [#4018](https://github.com/LiskHQ/lisk-sdk/pull/4018) ([shuse2](https://github.com/shuse2))
  - Add get minimal peers list data for discovery process - Closes #3948 [#4017](https://github.com/LiskHQ/lisk-sdk/pull/4017) ([diego-G](https://github.com/diego-G))
  - Fix folder structure for issue template [#4014](https://github.com/LiskHQ/lisk-sdk/pull/4014) ([shuse2](https://github.com/shuse2))
  - Update issue and PR templates - Close #3302 [#4007](https://github.com/LiskHQ/lisk-sdk/pull/4007) ([shuse2](https://github.com/shuse2))
  - Enforce limits on the size of inbound messages/requests in P2P - Closes #3335 [#3999](https://github.com/LiskHQ/lisk-sdk/pull/3999) ([jondubois](https://github.com/jondubois))
  - Restructure the integration tests for Jest - Closes #3986 [#3985](https://github.com/LiskHQ/lisk-sdk/pull/3985) ([nazarhussain](https://github.com/nazarhussain))
  - Merge development into p2p feature [#3984](https://github.com/LiskHQ/lisk-sdk/pull/3984) ([diego-G](https://github.com/diego-G))
  - Rate limit WebSocket messages - Closes #3975 [#3981](https://github.com/LiskHQ/lisk-sdk/pull/3981) ([jondubois](https://github.com/jondubois))
  - Implement netgrouping for peer eviction and buckets - Closes #3874 [#3968](https://github.com/LiskHQ/lisk-sdk/pull/3968) ([mitsujutsu](https://github.com/mitsujutsu))
  - Uncaught TypeError in checkProtocolVersionCompatibility P2P validation method - Closes #3923 [#3937](https://github.com/LiskHQ/lisk-sdk/pull/3937) ([jondubois](https://github.com/jondubois))
  - Add more propagation tests - Closes #3812 [#3858](https://github.com/LiskHQ/lisk-sdk/pull/3858) ([diego-G](https://github.com/diego-G))
  - Remove relayLimit from broadcaster - Closes #3819 [#3855](https://github.com/LiskHQ/lisk-sdk/pull/3855) ([jondubois](https://github.com/jondubois))
  - Update discovery according to LIP protocol - Closes #3649 [#3835](https://github.com/LiskHQ/lisk-sdk/pull/3835) ([jondubois](https://github.com/jondubois))
  - Managing list of peers according to LIP004 - Closes #3339 [#3830](https://github.com/LiskHQ/lisk-sdk/pull/3830) ([diego-G](https://github.com/diego-G))
  - Inbound peer eviction method - Closes #3721 [#3824](https://github.com/LiskHQ/lisk-sdk/pull/3824) ([mitsujutsu](https://github.com/mitsujutsu))
  - Disconnect outbound peers periodically for shuffling - Closes #3347 [#3801](https://github.com/LiskHQ/lisk-sdk/pull/3801) ([mitsujutsu](https://github.com/mitsujutsu))
  - Implement maximum number of inbound peer connections - Closes #3720 [#3779](https://github.com/LiskHQ/lisk-sdk/pull/3779) ([diego-G](https://github.com/diego-G))
  - Add way to retarget specific peers on the network to account for the new LIP advertising feature - Closes #3565 [#3671](https://github.com/LiskHQ/lisk-sdk/pull/3671) ([jondubois](https://github.com/jondubois))
  - Implement peer banning mechanism - Closes #3343 #3664 [#3665](https://github.com/LiskHQ/lisk-sdk/pull/3665) ([mitsujutsu](https://github.com/mitsujutsu))
  - Share a single ws connection between peers - Closes #3342 [#3650](https://github.com/LiskHQ/lisk-sdk/pull/3650) ([diego-G](https://github.com/diego-G))
  - Propagate inbound socket close event on Peer to the top level P2P class - Closes #3602 [#3604](https://github.com/LiskHQ/lisk-sdk/pull/3604) ([jondubois](https://github.com/jondubois))
</details>",50873641
107,False,False,2019-08-02T07:22:49Z,2019-08-02T09:10:05Z,"## [v2.2.0](https://github.com/LiskHQ/lisk-sdk/tree/v2.2.0) (2019-08-02)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v2.1.0...v2.2.0)

## Released packages
- lisk-sdk@2.2.0
- lisk-framework@0.3.0
- lisk-elements@2.3.0
- @liskhq/lisk-client@2.3.0
- @liskhq/lisk-transactions@2.3.0
- @liskhq/lisk-p2p@0.2.0

## Improvements
  - Remove Circular Dependencies Inside Chain Module [#3511](https://github.com/LiskHQ/lisk-sdk/issues/3511)
  - Add capability to register database migration from the application/module layer [#3197](https://github.com/LiskHQ/lisk-sdk/issues/3197)
  - Delay in syncing with network due to too many failed to load block from network [#3954](https://github.com/LiskHQ/lisk-sdk/issues/3954)
  - Reduce the technical debt [#3394](https://github.com/LiskHQ/lisk-sdk/issues/3394)


<details>
  <summary>All the issues</summary>

  ### Closed issues
  - Snapshotting and syncing fails on 2.2 [#4003](https://github.com/LiskHQ/lisk-sdk/issues/4003)
  - Remove empty Jenkinsfile [#3993](https://github.com/LiskHQ/lisk-sdk/issues/3993)
  - Sequence should not be used in Loader [#3977](https://github.com/LiskHQ/lisk-sdk/issues/3977)
  - Some transaction events are not being broadcasted [#3962](https://github.com/LiskHQ/lisk-sdk/issues/3962)
  - Isolate nextForge and nextSync implementation from registering logic [#3958](https://github.com/LiskHQ/lisk-sdk/issues/3958)
  - Delay in syncing with network due to too many failed to load block from network [#3954](https://github.com/LiskHQ/lisk-sdk/issues/3954)
  - Jest application tests skipped [#3947](https://github.com/LiskHQ/lisk-sdk/issues/3947)
  - Duplicate key value violates unique constraint address_unique [#3897](https://github.com/LiskHQ/lisk-sdk/issues/3897)
  - Fatal error Block process cannot be executed in parallel [#3896](https://github.com/LiskHQ/lisk-sdk/issues/3896)
  - Move state_store and broadcaster out of the logic folder [#3845](https://github.com/LiskHQ/lisk-sdk/issues/3845)
  - Add Bunyan standard serializer [#3838](https://github.com/LiskHQ/lisk-sdk/issues/3838)
  - Remove bus from chain module [#3813](https://github.com/LiskHQ/lisk-sdk/issues/3813)
  - Replace crypto with @liskhq/lisk-cryptography [#3808](https://github.com/LiskHQ/lisk-sdk/issues/3808)
  - Replace bytebuffer with @liskhq/lisk-cryptography [#3807](https://github.com/LiskHQ/lisk-sdk/issues/3807)
  - Migration does execute in the correct order [#3762](https://github.com/LiskHQ/lisk-sdk/issues/3762)
  - Remove global scope references [#3754](https://github.com/LiskHQ/lisk-sdk/issues/3754)
  - Update sequence usage to be async [#3753](https://github.com/LiskHQ/lisk-sdk/issues/3753)
  - Rename helpers to utils to be consistent to other libraries [#3752](https://github.com/LiskHQ/lisk-sdk/issues/3752)
  - Change peer.js to utils without holding states [#3751](https://github.com/LiskHQ/lisk-sdk/issues/3751)
  - Update forger.js to use async/await [#3748](https://github.com/LiskHQ/lisk-sdk/issues/3748)
  - Update loader.js to async/await [#3747](https://github.com/LiskHQ/lisk-sdk/issues/3747)
  - Update transport.js to use async/await [#3746](https://github.com/LiskHQ/lisk-sdk/issues/3746)
  - Remove redundant code in modules/transactions [#3638](https://github.com/LiskHQ/lisk-sdk/issues/3638)
  - Combine all the block related logic into one module and expose used functionality [#3616](https://github.com/LiskHQ/lisk-sdk/issues/3616)
  - Combine all the rounds related logic into one module and expose used functionality [#3615](https://github.com/LiskHQ/lisk-sdk/issues/3615)
  - Combine all the transaction related logic into one module and expose used functionality [#3614](https://github.com/LiskHQ/lisk-sdk/issues/3614)
  - Functional WS tests constantly failing [#3607](https://github.com/LiskHQ/lisk-sdk/issues/3607)
  - Move state management and entry modules to the top level [#3580](https://github.com/LiskHQ/lisk-sdk/issues/3580)
  - Jenkins should cancel previous job when new commits are pushed [#3551](https://github.com/LiskHQ/lisk-sdk/issues/3551)
  - Invalid monitoring logs for bus activity  [#3545](https://github.com/LiskHQ/lisk-sdk/issues/3545)
  - Use async/await in chain module logic [#3540](https://github.com/LiskHQ/lisk-sdk/issues/3540)
  - Refactor redundant code in Account submodule/logic [#3524](https://github.com/LiskHQ/lisk-sdk/issues/3524)
  - Use redis cache from within http module [#3513](https://github.com/LiskHQ/lisk-sdk/issues/3513)
  - Remove unused code in chain module [#3512](https://github.com/LiskHQ/lisk-sdk/issues/3512)
  - Remove Circular Dependencies Inside Chain Module [#3511](https://github.com/LiskHQ/lisk-sdk/issues/3511)
  - Use only necessary dependencies  [#3494](https://github.com/LiskHQ/lisk-sdk/issues/3494)
  - Replace sodium-native with @liskhq/lisk-cryptography [#3426](https://github.com/LiskHQ/lisk-sdk/issues/3426)
  - Remove initial state from the config [#3405](https://github.com/LiskHQ/lisk-sdk/issues/3405)
  - Use async/await consistently across the application [#3396](https://github.com/LiskHQ/lisk-sdk/issues/3396)
  - Reduce the technical debt [#3394](https://github.com/LiskHQ/lisk-sdk/issues/3394)
  - Clean up the ""cleanup"" method in chain module [#3368](https://github.com/LiskHQ/lisk-sdk/issues/3368)
  - Complete changes of loader.js to ES6 and recover with unit tests [#3280](https://github.com/LiskHQ/lisk-sdk/issues/3280)
  - Update Ajv, ZSchema usages to use @liskhq/lisk-validator [#3278](https://github.com/LiskHQ/lisk-sdk/issues/3278)
  - Add capability to register database migration from the application/module layer [#3197](https://github.com/LiskHQ/lisk-sdk/issues/3197)
  - Move api related cache handler to httpApi module [#3111](https://github.com/LiskHQ/lisk-sdk/issues/3111)
  - Fix randomly failing tests  [#3096](https://github.com/LiskHQ/lisk-sdk/issues/3096)
  - Update BigNum to use @liskhq/bignum [#3067](https://github.com/LiskHQ/lisk-sdk/issues/3067)
  - Introduce the coverage metrics without using coverall [#3322](https://github.com/LiskHQ/lisk-sdk/issues/3322)


  ### Merged pull requests
  - Delay in syncing with network due to too many failed to load block from network - Closes #3954 [#4013](https://github.com/LiskHQ/lisk-sdk/pull/4013) ([lsilvs](https://github.com/lsilvs))
  - Snapshotting and syncing fails on 2.2 - Closes #4003 [#4010](https://github.com/LiskHQ/lisk-sdk/pull/4010) ([lsilvs](https://github.com/lsilvs))
  - Remove empty jenkins file - Closes #3993 [#3996](https://github.com/LiskHQ/lisk-sdk/pull/3996) ([shuse2](https://github.com/shuse2))
  - Merge 2.1.0 branch into 2.2.0 [#3991](https://github.com/LiskHQ/lisk-sdk/pull/3991) ([SargeKhan](https://github.com/SargeKhan))
  - Sequence should not be used in Loader - Closes #3977 [#3978](https://github.com/LiskHQ/lisk-sdk/pull/3978) ([pablitovicente](https://github.com/pablitovicente))
  - Some transaction events are not being broadcasted - Closes #3962 [#3965](https://github.com/LiskHQ/lisk-sdk/pull/3965) ([pablitovicente](https://github.com/pablitovicente))
  - Reenable and fix skipped Application unit tests - Closes #3947 [#3964](https://github.com/LiskHQ/lisk-sdk/pull/3964) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
  - Isolate next forge next sync concrete impl from task registration logic - Closes #3958 [#3960](https://github.com/LiskHQ/lisk-sdk/pull/3960) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
  - Prevent crashing the application when a block is received and node is syncing or forging - Closes #3896 [#3946](https://github.com/LiskHQ/lisk-sdk/pull/3946) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
  - Merge 2.1 into 2.2 july 11 2019 [#3944](https://github.com/LiskHQ/lisk-sdk/pull/3944) ([pablitovicente](https://github.com/pablitovicente))
  - Remove coverall and use Jenkins - Closes #3322 [#3938](https://github.com/LiskHQ/lisk-sdk/pull/3938) ([shuse2](https://github.com/shuse2))
  - Assign and verify transaction fees in Transactions domain - Closes #3860 [#3893](https://github.com/LiskHQ/lisk-sdk/pull/3893) ([pablitovicente](https://github.com/pablitovicente))
  - Improve create and sign any transaction functionality in Lisk Transactions - Closes #3739 [#3890](https://github.com/LiskHQ/lisk-sdk/pull/3890) ([lsilvs](https://github.com/lsilvs))
  - Remove unused dependency - Closes #3494 [#3857](https://github.com/LiskHQ/lisk-sdk/pull/3857) ([shuse2](https://github.com/shuse2))
  - Move state store and broadcast out of logic folder - Closes #3845 [#3849](https://github.com/LiskHQ/lisk-sdk/pull/3849) ([ishantiw](https://github.com/ishantiw))
  - Functional WS tests constantly failing - Closes #3607 [#3843](https://github.com/LiskHQ/lisk-sdk/pull/3843) ([lsilvs](https://github.com/lsilvs))
  - Update sequence in chain module - Closes #3753 [#3842](https://github.com/LiskHQ/lisk-sdk/pull/3842) ([shuse2](https://github.com/shuse2))
  - Remove initialState property from the config - Closes #3405 [#3841](https://github.com/LiskHQ/lisk-sdk/pull/3841) ([ishantiw](https://github.com/ishantiw))
  - Remove bus from chain module - Closes #3813 [#3840](https://github.com/LiskHQ/lisk-sdk/pull/3840) ([lsilvs](https://github.com/lsilvs))
  - Replace bytebuffer with @liskhq/lisk-cryptography - Closes #3807 [#3837](https://github.com/LiskHQ/lisk-sdk/pull/3837) ([lsilvs](https://github.com/lsilvs))
  - Remove unnecessary argument code from cleanup - Closes #3368 [#3829](https://github.com/LiskHQ/lisk-sdk/pull/3829) ([ishantiw](https://github.com/ishantiw))
  - Add bunyan standard serializer - Closes #3838 [#3818](https://github.com/LiskHQ/lisk-sdk/pull/3818) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
  - Rename helpers to utils to be consistent across SDK - Closes#3752 [#3811](https://github.com/LiskHQ/lisk-sdk/pull/3811) ([ishantiw](https://github.com/ishantiw))
  - Replace crypto with @liskhq/lisk-cryptography - Closes #3808 [#3810](https://github.com/LiskHQ/lisk-sdk/pull/3810) ([lsilvs](https://github.com/lsilvs))
  - Move peer.js to util without storing state - Closes#3751 [#3806](https://github.com/LiskHQ/lisk-sdk/pull/3806) ([ishantiw](https://github.com/ishantiw))
  - Replace sodium-native with @liskhq/lisk-cryptography - Closes #3426 [#3804](https://github.com/LiskHQ/lisk-sdk/pull/3804) ([lsilvs](https://github.com/lsilvs))
  - Remove global reference - Closes #3754 [#3803](https://github.com/LiskHQ/lisk-sdk/pull/3803) ([shuse2](https://github.com/shuse2))
  - Simplify loadBlocksData method - Closes #2752 [#3798](https://github.com/LiskHQ/lisk-sdk/pull/3798) ([lsilvs](https://github.com/lsilvs))
  - Integration tests failing on development - Closes #3794 [#3795](https://github.com/LiskHQ/lisk-sdk/pull/3795) ([lsilvs](https://github.com/lsilvs))
  - Update Ajv, ZSchema usages to use @liskhq/lisk-validator - Closes #3278 [#3793](https://github.com/LiskHQ/lisk-sdk/pull/3793) ([pablitovicente](https://github.com/pablitovicente))
  - Convert BlockReward Class functions to pure functions - Closes #2412 [#3784](https://github.com/LiskHQ/lisk-sdk/pull/3784) ([ishantiw](https://github.com/ishantiw))
  - Update transport.js to use async/await - Closes #3746 [#3783](https://github.com/LiskHQ/lisk-sdk/pull/3783) ([lsilvs](https://github.com/lsilvs))
  - Remove callback from loader js and use async - Closes #3747 [#3780](https://github.com/LiskHQ/lisk-sdk/pull/3780) ([ishantiw](https://github.com/ishantiw))
  - Fix to use basename for migration object - Closes #3762 [#3778](https://github.com/LiskHQ/lisk-sdk/pull/3778) ([shuse2](https://github.com/shuse2))
  - Update forger.js to use async/await - Closes #3748 [#3765](https://github.com/LiskHQ/lisk-sdk/pull/3765) ([pablitovicente](https://github.com/pablitovicente))
  - Update BigNum to use @liskhq/bignum - Closes #3067 [#3757](https://github.com/LiskHQ/lisk-sdk/pull/3757) ([pablitovicente](https://github.com/pablitovicente))
  - Rename cacheReady to ready - Closes #3606 [#3755](https://github.com/LiskHQ/lisk-sdk/pull/3755) ([pablitovicente](https://github.com/pablitovicente))
  - Error when loading transactions from network - Closes #3736 [#3737](https://github.com/LiskHQ/lisk-sdk/pull/3737) ([lsilvs](https://github.com/lsilvs))
  - Remove callbacks from chain account logic - Closes #3540 [#3729](https://github.com/LiskHQ/lisk-sdk/pull/3729) ([ishantiw](https://github.com/ishantiw))
  - Add capability to register database migration from the application/module layer - Closes #3197 [#3701](https://github.com/LiskHQ/lisk-sdk/pull/3701) ([lsilvs](https://github.com/lsilvs))
  - Refactor blocks related modules not to have circular dependency - Closes #3616 [#3679](https://github.com/LiskHQ/lisk-sdk/pull/3679) ([shuse2](https://github.com/shuse2))
  - Combine all the rounds related logic into one module and expose used functionality - Closes #3615 [#3658](https://github.com/LiskHQ/lisk-sdk/pull/3658) ([pablitovicente](https://github.com/pablitovicente))
  - Fix transaction related dependency - Closes #3614 [#3620](https://github.com/LiskHQ/lisk-sdk/pull/3620) ([shuse2](https://github.com/shuse2))
  - Refactor redundant code in Account submodule/logic #3524 [#3579](https://github.com/LiskHQ/lisk-sdk/pull/3579) ([lsilvs](https://github.com/lsilvs))
  - Cancel previous Jenkins build, if applicable - Closes #3551 [#3552](https://github.com/LiskHQ/lisk-sdk/pull/3552) ([fchavant](https://github.com/fchavant))
  - Fire `chain:blocks:change` event on block deletion - Closes #3525 [#3543](https://github.com/LiskHQ/lisk-sdk/pull/3543) ([pablitovicente](https://github.com/pablitovicente))
  - Remove unused code in chain module - Closes #3512 [#3534](https://github.com/LiskHQ/lisk-sdk/pull/3534) ([lsilvs](https://github.com/lsilvs))
  - Remove extraneous internal dependencies in chain module - Closes #3514 [#3526](https://github.com/LiskHQ/lisk-sdk/pull/3526) ([SargeKhan](https://github.com/SargeKhan))
  - Use redis cache from within http module - Closes #3513 [#3522](https://github.com/LiskHQ/lisk-sdk/pull/3522) ([pablitovicente](https://github.com/pablitovicente))
  - Update framework to use @liskhq/bignum - Closes #3067 [#3506](https://github.com/LiskHQ/lisk-sdk/pull/3506) ([shuse2](https://github.com/shuse2))
  - Replace sodium-native with @liskhq/lisk-cryptography - Closes #3426 [#3503](https://github.com/LiskHQ/lisk-sdk/pull/3503) ([shuse2](https://github.com/shuse2))
  - Solve mix of ES6 classes/prototypes - Closes #3497 [#3499](https://github.com/LiskHQ/lisk-sdk/pull/3499) ([pablitovicente](https://github.com/pablitovicente))
</details>",50873641
108,False,False,2019-07-30T15:14:08Z,2019-07-31T13:22:03Z,"## [v2.0.1](https://github.com/LiskHQ/lisk-sdk/tree/v2.0.1) (2019-07-31)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v2.0.0...v2.0.1)

## Released packages
- lisk-sdk@2.0.1
- lisk-framework@0.1.2
- @liskhq/lisk-p2p@0.1.3

### Closed issues
- P2P 2.0 peer spam vulnerability (https://github.com/LiskHQ/lisk-sdk/issues/4027)
",50873641
109,False,False,2019-07-24T14:29:33Z,2019-07-24T16:03:21Z,"## [v2.1.0](https://github.com/LiskHQ/lisk-sdk/tree/v2.1.0) (2019-07-24)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v2.1.0...HEAD)

## Released packages
- lisk-sdk@2.1.0
- lisk-framework@0.2.0
- lisk-elements@2.2.0
- @liskhq/lisk-client@2.2.0
- @liskhq/lisk-transactions@2.2.0

## Improvements
  - Provide a default implementation of the prepare step in BaseTransaction [#3730](https://github.com/LiskHQ/lisk-sdk/issues/3730)
  - Create README for custom transactions [#3164](https://github.com/LiskHQ/lisk-sdk/issues/3164)
  - API doesn't allow transactions with type higher than 7 [#3515](https://github.com/LiskHQ/lisk-sdk/issues/3515)
  - Update BaseTransaction validation in framework [#3877](https://github.com/LiskHQ/lisk-sdk/issues/3877)
  - Maximum limit for transaction type disallows custom transactions [#3536](https://github.com/LiskHQ/lisk-sdk/issues/3536)

<details>
  <summary>All the issues</summary>

  ### Closed Issues
  - Chai-as-promised assertions are giving false positives [#3956](https://github.com/LiskHQ/lisk-sdk/issues/3956)
  - Bus sockets setup timeout error [#3942](https://github.com/LiskHQ/lisk-sdk/issues/3942)
  - Custom transaction fails to validate if `FEE` member is not defined [#3941](https://github.com/LiskHQ/lisk-sdk/issues/3941)
  - application_config_schema.js not being used and Application/Schema invalid syntax [#3939](https://github.com/LiskHQ/lisk-sdk/issues/3939)
  - Use transaction not transactions in lisk-client readme [#3925](https://github.com/LiskHQ/lisk-sdk/issues/3925)
  - Improve usability of StateStore to get and set new values for accounts [#3913](https://github.com/LiskHQ/lisk-sdk/issues/3913)
  - Update BaseTransaction validation in framework [#3877](https://github.com/LiskHQ/lisk-sdk/issues/3877)
  - Assign and verify transaction fees in Transactions domain [#3860](https://github.com/LiskHQ/lisk-sdk/issues/3860)
  - Add Accounts asset data to the API [#3847](https://github.com/LiskHQ/lisk-sdk/issues/3847)
  - Remove registerTransaction check for extending BaseTransaction [#3821](https://github.com/LiskHQ/lisk-sdk/issues/3821)
  - Add introduction to Alpha SDK functionalities to the README [#3743](https://github.com/LiskHQ/lisk-sdk/issues/3743)
  - Implement create and sign any transaction functionality in Lisk Transactions [#3739](https://github.com/LiskHQ/lisk-sdk/issues/3739)
  - Enable forging on Genesis Delegates while starting Devnet [#3734](https://github.com/LiskHQ/lisk-sdk/issues/3734)
  - Provide a default implementation of the prepare step in BaseTransaction [#3730](https://github.com/LiskHQ/lisk-sdk/issues/3730)
  - Don't assign a transaction type as a private variable [#3726](https://github.com/LiskHQ/lisk-sdk/issues/3726)
  - Modify asset behavior for accounts in Postgres [#3717](https://github.com/LiskHQ/lisk-sdk/issues/3717)
  - Support asset field in BaseTransaction [#3697](https://github.com/LiskHQ/lisk-sdk/issues/3697)
  - Provide default application parameters [#3660](https://github.com/LiskHQ/lisk-sdk/issues/3660)
  - Maximum limit for transaction type disallows custom transactions [#3536](https://github.com/LiskHQ/lisk-sdk/issues/3536)
  - Don’t use transaction type at the time of transaction registration [#3523](https://github.com/LiskHQ/lisk-sdk/issues/3523)
  - Move fee as static property of the transaction implementation [#3521](https://github.com/LiskHQ/lisk-sdk/issues/3521)
  - API doesn't allow transactions with type higher than 7 [#3515](https://github.com/LiskHQ/lisk-sdk/issues/3515)
  - `init_transaction` module not extensible to custom transactions [#3429](https://github.com/LiskHQ/lisk-sdk/issues/3429)
  - Create README for custom transactions [#3164](https://github.com/LiskHQ/lisk-sdk/issues/3164)
  - Benchmark the framework parameters to suggest its values [#3151](https://github.com/LiskHQ/lisk-sdk/issues/3151)


  ### Merged pull requests
  - Update package lock file [#4000](https://github.com/LiskHQ/lisk-sdk/pull/4000) ([shuse2](https://github.com/shuse2))
  - Chai-as-promised assertions are giving false positives - Closes #3956 [#3963](https://github.com/LiskHQ/lisk-sdk/pull/3963) ([yatki](https://github.com/yatki))
  - Bus sockets timeout - Closes #3942 [#3957](https://github.com/LiskHQ/lisk-sdk/pull/3957) ([michielmulders](https://github.com/michielmulders))
  - Custom transaction fails to validate if `FEE` member is not defined - Closes #3941 [#3945](https://github.com/LiskHQ/lisk-sdk/pull/3945) ([lsilvs](https://github.com/lsilvs))
  - Add registerTransaction to README - Closes #3743 [#3943](https://github.com/LiskHQ/lisk-sdk/pull/3943) ([mitsujutsu](https://github.com/mitsujutsu))
  - application_config_schema.js not being used and Application/Schema invalid syntax - Closes #3939 [#3940](https://github.com/LiskHQ/lisk-sdk/pull/3940) ([pablitovicente](https://github.com/pablitovicente))
  - Use transaction not transactions in lisk-client readme - Closes #3925 [#3936](https://github.com/LiskHQ/lisk-sdk/pull/3936) ([lsilvs](https://github.com/lsilvs))
  - Improve usability of StateStore to get and set new values for accounts - Closes #3913 [#3921](https://github.com/LiskHQ/lisk-sdk/pull/3921) ([lsilvs](https://github.com/lsilvs))
  - Functional WS tests failing on release/2.1 branch [#3888](https://github.com/LiskHQ/lisk-sdk/pull/3888) ([lsilvs](https://github.com/lsilvs))
  - Add validation of custom transaction - Closes #3877 [#3880](https://github.com/LiskHQ/lisk-sdk/pull/3880) ([shuse2](https://github.com/shuse2))
  - Add Accounts asset data to the API - Closes #3847 [#3879](https://github.com/LiskHQ/lisk-sdk/pull/3879) ([pablitovicente](https://github.com/pablitovicente))
  - Remove BaseTransaction extension requirement [#3822](https://github.com/LiskHQ/lisk-sdk/pull/3822) ([mitsujutsu](https://github.com/mitsujutsu))
  - Introduce peer populator - Closes #3648 [#3764](https://github.com/LiskHQ/lisk-sdk/pull/3764) ([diego-G](https://github.com/diego-G))
  - Remove type requirement from register transaction - Closes #3523 [#3756](https://github.com/LiskHQ/lisk-sdk/pull/3756) ([mitsujutsu](https://github.com/mitsujutsu))
  - Provide a default implementation of the prepare step in BaseTransaction - Closes #3730 [#3744](https://github.com/LiskHQ/lisk-sdk/pull/3744) ([MaciejBaj](https://github.com/MaciejBaj))
  - Enable forging on Genesis Delegates while starting devnet - Closes #3734 [#3740](https://github.com/LiskHQ/lisk-sdk/pull/3740) ([MaciejBaj](https://github.com/MaciejBaj))
  - Create README for custom transactions - Closes #3164 [#3735](https://github.com/LiskHQ/lisk-sdk/pull/3735) ([MaciejBaj](https://github.com/MaciejBaj))
  - Move the type check from validateAsset to validate as a static field - Closes #3726 [#3727](https://github.com/LiskHQ/lisk-sdk/pull/3727) ([MaciejBaj](https://github.com/MaciejBaj))
  - Support {} behavior for asset field accounts - Closes #3717 [#3719](https://github.com/LiskHQ/lisk-sdk/pull/3719) ([michielmulders](https://github.com/michielmulders))
  - Support asset field in BaseTransaction - Closes #3697 [#3698](https://github.com/LiskHQ/lisk-sdk/pull/3698) ([MaciejBaj](https://github.com/MaciejBaj))
  - Provide default application parameters - Closes #3660 [#3663](https://github.com/LiskHQ/lisk-sdk/pull/3663) ([MaciejBaj](https://github.com/MaciejBaj))
  - Refactor init_transaction DB read into elements - Closes #3429 [#3501](https://github.com/LiskHQ/lisk-sdk/pull/3501) ([mitsujutsu](https://github.com/mitsujutsu))
</details>",50873641
110,False,False,2019-07-23T12:51:39Z,2019-07-23T13:41:12Z,"## [v2.0.0](https://github.com/LiskHQ/lisk-sdk/tree/v2.0.0) (2019-07-24)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v1.6.0...v2.0.0)

## Released packages
- lisk-sdk@2.0.0
- lisk-framework@0.1.2
- lisk-commander@2.1.2
- lisk-elements@2.1.1
- @liskhq/lisk-api-client@2.0.2
- @liskhq/lisk-client@2.1.1
- @liskhq/lisk-constants@1.2.2
- @liskhq/lisk-cryptography@2.1.1
- @liskhq/lisk-p2p@0.1.2
- @liskhq/lisk-passphrase@2.0.2
- @liskhq/lisk-transaction-pool@0.1.2
- @liskhq/lisk-transactions@2.1.2
- @liskhq/lisk-validator@0.1.1

## Breaking Changes
### API breaking changes
- Removed unconfirmedBalance from /api/accounts and /accounts/{address}/multisignature_groups (https://github.com/LiskHQ/lisk-sdk/issues/3183)
- Change transactions property of /node/status endpoint and /node/transactions/{state} from unconfirmed/unsigned/unprocessed to ready/pending/verified/validated/received (https://github.com/LiskHQ/lisk-sdk/issues/3609)
- API response returns array of errors instead of single error (https://github.com/LiskHQ/lisk-sdk/issues/3152)

### Other breaking changes
- Logging system changed (https://github.com/LiskHQ/lisk-sdk/issues/2148)
- Configuration files are now per module (https://github.com/LiskHQ/lisk-sdk/issues/2577)


### Soft fork related changes
- Transaction type 5 (DAPP) is disabled. (https://github.com/LiskHQ/lisk-sdk/issues/3104)

## Improvements
- Improve transaction processing efficiency ([LIP-0006](https://github.com/LiskHQ/lips/blob/master/proposals/lip-0006.md))
- Create new network module using lisk-p2p library (https://github.com/LiskHQ/lisk-sdk/issues/2874)

<details>
  <summary>All the issues</summary>
  
  ### Closed issues
  - Node keep disconnecting with peers running older versions [#3961](https://github.com/LiskHQ/lisk-sdk/issues/3961)
  - Add missing unit tests for transactions processing [#3951](https://github.com/LiskHQ/lisk-sdk/issues/3951)
  - Add unit tests for __private.undoConfirmedStep and __private.popLastBlock [#3929](https://github.com/LiskHQ/lisk-sdk/issues/3929)
  - Uncaught TypeError in checkProtocolVersionCompatibility P2P validation method [#3923](https://github.com/LiskHQ/lisk-sdk/issues/3923)
  - Missing await for async call  [#3922](https://github.com/LiskHQ/lisk-sdk/issues/3922)
  - Commander should remove backup on uninstall [#3919](https://github.com/LiskHQ/lisk-sdk/issues/3919)
  - Unreacheable peers are kept as connected for too long [#3917](https://github.com/LiskHQ/lisk-sdk/issues/3917)
  - Chain comparison is failing when nodes have the same block [#3915](https://github.com/LiskHQ/lisk-sdk/issues/3915)
  - Transaction pool behavior breaks backward compatibility causing hard-fork [#3914](https://github.com/LiskHQ/lisk-sdk/issues/3914)
  - Commander should create backup on upgrade [#3911](https://github.com/LiskHQ/lisk-sdk/issues/3911)
  - Multiple forks 1 on testnet after update to 2.0.0-rc.0 [#3907](https://github.com/LiskHQ/lisk-sdk/issues/3907)
  - Configuration parameter broadcastLimit is no longer used [#3905](https://github.com/LiskHQ/lisk-sdk/issues/3905)
  - Commander does not allow upgrading using a custom build [#3901](https://github.com/LiskHQ/lisk-sdk/issues/3901)
  - Commander should only download snapshots for mainnet and testnet [#3898](https://github.com/LiskHQ/lisk-sdk/issues/3898)
  - networkHeight in /api/node/status unreliable [#3885](https://github.com/LiskHQ/lisk-sdk/issues/3885)
  - API misreporting the connected peer count and state property is wrong [#3881](https://github.com/LiskHQ/lisk-sdk/issues/3881)
  - Use nodejs crypto library for checksum verification [#3872](https://github.com/LiskHQ/lisk-sdk/issues/3872)
  - Move transactions to the ready queue only if all transaction can be processed together [#3871](https://github.com/LiskHQ/lisk-sdk/issues/3871)
  - API /api/node/constants missing build field [#3848](https://github.com/LiskHQ/lisk-sdk/issues/3848)
  - Node upgrade failed due to schema validation errors [#3844](https://github.com/LiskHQ/lisk-sdk/issues/3844)
  - Not all transactions are queued for broadcast [#3809](https://github.com/LiskHQ/lisk-sdk/issues/3809)
  - Lisk Core 2.0.0 API performance degrade [#3800](https://github.com/LiskHQ/lisk-sdk/issues/3800)
  - Lisk 2.0.0 protocol rejects with incompatible protocol version for nodes with version <= 1.4.1 [#3799](https://github.com/LiskHQ/lisk-sdk/issues/3799)
  - Refine the Readme phrases [#3796](https://github.com/LiskHQ/lisk-sdk/issues/3796)
  - Network module should ignore peers for consensus while sycing to network [#3786](https://github.com/LiskHQ/lisk-sdk/issues/3786)
  - getTransactionFromNetwork does not serialize the transaction input [#3738](https://github.com/LiskHQ/lisk-sdk/issues/3738)
  - Transaction pool doesn't respect maxTransactionsPerQueue limit [#3732](https://github.com/LiskHQ/lisk-sdk/issues/3732)
  - Transactions type 4 are not propagated through the network [#3728](https://github.com/LiskHQ/lisk-sdk/issues/3728)
  - Blockchain verification process should not connect to network [#3723](https://github.com/LiskHQ/lisk-sdk/issues/3723)
  - Add default create values account state store asset [#3715](https://github.com/LiskHQ/lisk-sdk/issues/3715)
  - Remove broadcastLimit property from chain and move to network module [#3710](https://github.com/LiskHQ/lisk-sdk/issues/3710)
  - Fix application warnings [#3704](https://github.com/LiskHQ/lisk-sdk/issues/3704)
  - Improve log level and log information [#3703](https://github.com/LiskHQ/lisk-sdk/issues/3703)
  - Do not require nonce when broadcasting any object [#3699](https://github.com/LiskHQ/lisk-sdk/issues/3699)
  - P2P does not consider broadcastLimit [#3690](https://github.com/LiskHQ/lisk-sdk/issues/3690)
  - Confirmations value in block is NaN [#3688](https://github.com/LiskHQ/lisk-sdk/issues/3688)
  - Failed to generate block within delegate slot due to Inadequate broadhash consensus [#3687](https://github.com/LiskHQ/lisk-sdk/issues/3687)
  - commander core:install command hangs after installation [#3676](https://github.com/LiskHQ/lisk-sdk/issues/3676)
  - Remove redundant handler check in Bus [#3669](https://github.com/LiskHQ/lisk-sdk/issues/3669)
  - Rebuild/Verification failed for testnet and mainnet [#3668](https://github.com/LiskHQ/lisk-sdk/issues/3668)
  - Update myself fails a lot because of invalid peer ip or port [#3666](https://github.com/LiskHQ/lisk-sdk/issues/3666)
  - P2P errors while syncing with testnet [#3651](https://github.com/LiskHQ/lisk-sdk/issues/3651)
  - Difficulty in testing lisk-core with local versions of lisk-sdk and lisk-framework [#3645](https://github.com/LiskHQ/lisk-sdk/issues/3645)
  - Discovery is too reliant on seed peers [#3643](https://github.com/LiskHQ/lisk-sdk/issues/3643)
  - Expose more util functions from `lisk-transactions` [#3640](https://github.com/LiskHQ/lisk-sdk/issues/3640)
  - Benchmark transaction processing times [#3627](https://github.com/LiskHQ/lisk-sdk/issues/3627)
  - Unprocessed transactions were not added to empty or non full blocks [#3624](https://github.com/LiskHQ/lisk-sdk/issues/3624)
  - Redundant log info without any context [#3623](https://github.com/LiskHQ/lisk-sdk/issues/3623)
  - Frequent API timeouts when running stress test [#3622](https://github.com/LiskHQ/lisk-sdk/issues/3622)
  - Process status shows undefined in Lisk Application  [#3621](https://github.com/LiskHQ/lisk-sdk/issues/3621)
  - Node fail to sync when block contains multisignature transaction [#3612](https://github.com/LiskHQ/lisk-sdk/issues/3612)
  - Name of unsigned transactions queue is misleading [#3610](https://github.com/LiskHQ/lisk-sdk/issues/3610)
  - Update lisk-new-relic version [#3608](https://github.com/LiskHQ/lisk-sdk/issues/3608)
  - Inconsistent cache behavior - error when cache enabled [#3600](https://github.com/LiskHQ/lisk-sdk/issues/3600)
  - Update banner images [#3596](https://github.com/LiskHQ/lisk-sdk/issues/3596)
  - getSignatures and getTransactions from the network is not working [#3591](https://github.com/LiskHQ/lisk-sdk/issues/3591)
  - Transactions are not broadcasted after received by postTransactions [#3588](https://github.com/LiskHQ/lisk-sdk/issues/3588)
  - API returns incorrect error for postTransactions [#3586](https://github.com/LiskHQ/lisk-sdk/issues/3586)
  - Loader module does not have processTransactions module [#3583](https://github.com/LiskHQ/lisk-sdk/issues/3583)
  - For future compatibility, we need to allow receiving RPCs and events on the outbound socket [#3582](https://github.com/LiskHQ/lisk-sdk/issues/3582)
  - Check peer's blacklist before accepting an incoming connection [#3581](https://github.com/LiskHQ/lisk-sdk/issues/3581)
  - Node doesn't sync with the network [#3577](https://github.com/LiskHQ/lisk-sdk/issues/3577)
  - Small typo in the string of the `receivedQueue` constant [#3576](https://github.com/LiskHQ/lisk-sdk/issues/3576)
  - Unstable broadhash consensus [#3574](https://github.com/LiskHQ/lisk-sdk/issues/3574)
  - Remove the temporary ""/lisk"" directory [#3572](https://github.com/LiskHQ/lisk-sdk/issues/3572)
  - Integration on lisk-p2p fails randomly [#3549](https://github.com/LiskHQ/lisk-sdk/issues/3549)
  - Warning: A promise was created but was not returned from it [#3546](https://github.com/LiskHQ/lisk-sdk/issues/3546)
  - The order of loading modules does not seems correct [#3544](https://github.com/LiskHQ/lisk-sdk/issues/3544)
  - Pg-monitor doesn't show database level events in logs [#3541](https://github.com/LiskHQ/lisk-sdk/issues/3541)
  - Transactions not being instantiated when receiving a block [#3535](https://github.com/LiskHQ/lisk-sdk/issues/3535)
  - API node/status - invalid networkHeight [#3533](https://github.com/LiskHQ/lisk-sdk/issues/3533)
  - API node/status transactions section given invalid results [#3531](https://github.com/LiskHQ/lisk-sdk/issues/3531)
  - Test commander core commands [#3516](https://github.com/LiskHQ/lisk-sdk/issues/3516)
  - Remove unnecessary dependency from framwork [#3508](https://github.com/LiskHQ/lisk-sdk/issues/3508)
  - Remove unnecessary log from process transactions [#3507](https://github.com/LiskHQ/lisk-sdk/issues/3507)
  - Missing values while saving peers to DB [#3504](https://github.com/LiskHQ/lisk-sdk/issues/3504)
  - Application don't clean up properly on exit [#3502](https://github.com/LiskHQ/lisk-sdk/issues/3502)
  - Remove network related config from Chain module [#3484](https://github.com/LiskHQ/lisk-sdk/issues/3484)
  - Update network action/event name to be understandable channel name [#3476](https://github.com/LiskHQ/lisk-sdk/issues/3476)
  - Passing ENV var via CLI does not work to modify app behavior [#3475](https://github.com/LiskHQ/lisk-sdk/issues/3475)
  - Un-skip verify integration tests [#3473](https://github.com/LiskHQ/lisk-sdk/issues/3473)
  - Update framework module info convention [#3467](https://github.com/LiskHQ/lisk-sdk/issues/3467)
  - Update network config and update_config script accordingly [#3466](https://github.com/LiskHQ/lisk-sdk/issues/3466)
  - Remove unused constants and files [#3463](https://github.com/LiskHQ/lisk-sdk/issues/3463)
  - Add license header to new files [#3462](https://github.com/LiskHQ/lisk-sdk/issues/3462)
  - Fee and Amount incorrectly set to 0 for validated transactions received from blocks [#3457](https://github.com/LiskHQ/lisk-sdk/issues/3457)
  - Logging does not work for storage component [#3455](https://github.com/LiskHQ/lisk-sdk/issues/3455)
  - Creating a duplicate database object for the same connection [#3454](https://github.com/LiskHQ/lisk-sdk/issues/3454)
  - Export development helpers and samples from lisk-sdk  [#3441](https://github.com/LiskHQ/lisk-sdk/issues/3441)
  - App label validation fail when app.label is not given [#3437](https://github.com/LiskHQ/lisk-sdk/issues/3437)
  - NewRelic does not show the proper network name [#3435](https://github.com/LiskHQ/lisk-sdk/issues/3435)
  - Fix the update_config.js to point the right version of release for 2.0.0 [#3432](https://github.com/LiskHQ/lisk-sdk/issues/3432)
  - Enable bootstrap --hoist option to speed up the build process [#3425](https://github.com/LiskHQ/lisk-sdk/issues/3425)
  - Rename framework helper module to util to match with naming convention of other libraries [#3424](https://github.com/LiskHQ/lisk-sdk/issues/3424)
  - Missing new exception keys in config [#3419](https://github.com/LiskHQ/lisk-sdk/issues/3419)
  - Loader is trying to call non-existing function [#3418](https://github.com/LiskHQ/lisk-sdk/issues/3418)
  - New network module receive connection id not match error alot [#3417](https://github.com/LiskHQ/lisk-sdk/issues/3417)
  - Fix network test to be able to run after product merge [#3408](https://github.com/LiskHQ/lisk-sdk/issues/3408)
  - Remove VError usage from elements [#3406](https://github.com/LiskHQ/lisk-sdk/issues/3406)
  - Revisit skipped test in improve transaction processing efficiency [#3404](https://github.com/LiskHQ/lisk-sdk/issues/3404)
  - Verify snapshot and sync for the mainnet  [#3403](https://github.com/LiskHQ/lisk-sdk/issues/3403)
  - Reference to application specific setting should be removed from framework [#3402](https://github.com/LiskHQ/lisk-sdk/issues/3402)
  - Review prettier setting for overall SDK structure [#3401](https://github.com/LiskHQ/lisk-sdk/issues/3401)
  - Jenkins should run network test in the framework [#3397](https://github.com/LiskHQ/lisk-sdk/issues/3397)
  - Move the application-level project to TypeScript [#3391](https://github.com/LiskHQ/lisk-sdk/issues/3391)
  - Add message size test in lisk-p2p library [#3387](https://github.com/LiskHQ/lisk-sdk/issues/3387)
  - Provide a default database name of the Storage component [#3385](https://github.com/LiskHQ/lisk-sdk/issues/3385)
  - Add how to setup development initially in README [#3384](https://github.com/LiskHQ/lisk-sdk/issues/3384)
  - Add a script the start a sample application for test [#3383](https://github.com/LiskHQ/lisk-sdk/issues/3383)
  - Fix tests in development branch [#3375](https://github.com/LiskHQ/lisk-sdk/issues/3375)
  - Newrelic should be optional to run lisk core [#3372](https://github.com/LiskHQ/lisk-sdk/issues/3372)
  - Framework is referencing the framework keyword itself [#3366](https://github.com/LiskHQ/lisk-sdk/issues/3366)
  - P2P should not connect to itself [#3364](https://github.com/LiskHQ/lisk-sdk/issues/3364)
  - Wrong reference of the version from lisk folder [#3361](https://github.com/LiskHQ/lisk-sdk/issues/3361)
  - Commander tests failed after product merge [#3360](https://github.com/LiskHQ/lisk-sdk/issues/3360)
  - Move Jenkins files to each appropriate folder [#3354](https://github.com/LiskHQ/lisk-sdk/issues/3354)
  - Replace ASCII art with image file [#3351](https://github.com/LiskHQ/lisk-sdk/issues/3351)
  - Jenkins for sdk need to be fixed according to the new structure [#3350](https://github.com/LiskHQ/lisk-sdk/issues/3350)
  - Lisk Post SDK Fixes [#3324](https://github.com/LiskHQ/lisk-sdk/issues/3324)
  - Multi-signature registration - Create member accounts [#3313](https://github.com/LiskHQ/lisk-sdk/issues/3313)
  - Move exceptions.js file to be part of config.json to simplify config structure [#3309](https://github.com/LiskHQ/lisk-sdk/issues/3309)
  - Expose a sample Genesis Block from Framework [#3308](https://github.com/LiskHQ/lisk-sdk/issues/3308)
  - Add README for new lisk node commands [#3314](https://github.com/LiskHQ/lisk-sdk/issues/3314)
  - Transaction timestamps should be checked against slotNumber [#3297](https://github.com/LiskHQ/lisk-sdk/issues/3297)
  - Network tests fail when running more than 2 peers [#3296](https://github.com/LiskHQ/lisk-sdk/issues/3296)
  - Error when syncing from scratch at processing genesis block [#3292](https://github.com/LiskHQ/lisk-sdk/issues/3292)
  - Wrong options output parameter from api get peers [#3291](https://github.com/LiskHQ/lisk-sdk/issues/3291)
  - Align node commands with latest Lisk changes [#3315](https://github.com/LiskHQ/lisk-sdk/issues/3315)
  - Implement Unit tests for Chain module [#3285](https://github.com/LiskHQ/lisk-sdk/issues/3285)
  - Restructure jest folder [#3282](https://github.com/LiskHQ/lisk-sdk/issues/3282)
  - Restore logic of chain recover on sync [#3281](https://github.com/LiskHQ/lisk-sdk/issues/3281)
  - Simplify the default value generation for all configurations [#3273](https://github.com/LiskHQ/lisk-sdk/issues/3273)
  - Add lisk folder and move all of application related code [#3270](https://github.com/LiskHQ/lisk-sdk/issues/3270)
  - Rename framework folder to core [#3269](https://github.com/LiskHQ/lisk-sdk/issues/3269)
  - Fix Integration Tests for feature/improve_transaction_efficiency [#3266](https://github.com/LiskHQ/lisk-sdk/issues/3266)
  - Adapt network module to use application state [#3260](https://github.com/LiskHQ/lisk-sdk/issues/3260)
  - Remove snyk  integration in favour of npm audit [#3252](https://github.com/LiskHQ/lisk-sdk/issues/3252)
  - Implement design pattern for protocol change [#3251](https://github.com/LiskHQ/lisk-sdk/issues/3251)
  - Functional test GET /accounts fails randomly [#3249](https://github.com/LiskHQ/lisk-sdk/issues/3249)
  - Incorrect API responses during snapshotting [#3235](https://github.com/LiskHQ/lisk-sdk/issues/3235)
  - Revise list of actions in the chain module [#3230](https://github.com/LiskHQ/lisk-sdk/issues/3230)
  - Remove unconfirmed attributes for account in state store [#3212](https://github.com/LiskHQ/lisk-sdk/issues/3212)
  - Rename application controller identifier ""lisk"" to ""app"" [#3208](https://github.com/LiskHQ/lisk-sdk/issues/3208)
  - Remove invokeAsync() from controller and bus [#3198](https://github.com/LiskHQ/lisk-sdk/issues/3198)
  - Make each component/module responsible for validation its configuration [#3196](https://github.com/LiskHQ/lisk-sdk/issues/3196)
  - Node inspect can't be run with default child process [#3193](https://github.com/LiskHQ/lisk-sdk/issues/3193)
  - All of the Error needs to converted to error object [#3189](https://github.com/LiskHQ/lisk-sdk/issues/3189)
  - Remove attributes related to the unconfirmed state from the API [#3183](https://github.com/LiskHQ/lisk-sdk/issues/3183)
  - Add functionality for handling exceptions present in the blockchain [#3181](https://github.com/LiskHQ/lisk-sdk/issues/3181)
  - Add test coverage chain module config using commander [#3175](https://github.com/LiskHQ/lisk-sdk/issues/3175)
  - Use selected blockchain parameters from framework-level [#3173](https://github.com/LiskHQ/lisk-sdk/issues/3173)
  - Create new package.json in application-level [#3172](https://github.com/LiskHQ/lisk-sdk/issues/3172)
  - Create and use config.js script merging defaults and custom configuration [#3171](https://github.com/LiskHQ/lisk-sdk/issues/3171)
  - Create README for the application-level folder [#3163](https://github.com/LiskHQ/lisk-sdk/issues/3163)
  - Create README for the Lisk SDK [#3162](https://github.com/LiskHQ/lisk-sdk/issues/3162)
  - Create README for framework [#3161](https://github.com/LiskHQ/lisk-sdk/issues/3161)
  - Narrow the list of supported by framework network parameters [#3160](https://github.com/LiskHQ/lisk-sdk/issues/3160)
  - Integrate constants.js into chain-specific configuration [#3159](https://github.com/LiskHQ/lisk-sdk/issues/3159)
  - Improve module actions security [#3154](https://github.com/LiskHQ/lisk-sdk/issues/3154)
  - Prepare README.md files describing the new repositories structure  [#3153](https://github.com/LiskHQ/lisk-sdk/issues/3153)
  - Change the API response to return an array of errors [#3152](https://github.com/LiskHQ/lisk-sdk/issues/3152)
  - Implement LIP-0006 ""Improve transaction processing efficiency"" [#3150](https://github.com/LiskHQ/lisk-sdk/issues/3150)
  - Improve the overall configuration [#3149](https://github.com/LiskHQ/lisk-sdk/issues/3149)
  - Update packages versions [#3147](https://github.com/LiskHQ/lisk-sdk/issues/3147)
  - Prepare file structure for Lisk application [#3146](https://github.com/LiskHQ/lisk-sdk/issues/3146)
  - Move broadhash computation logic from applicationState.update() to chain module [#3141](https://github.com/LiskHQ/lisk-sdk/issues/3141)
  - Jest Unit test creates wrong log folder structure [#3139](https://github.com/LiskHQ/lisk-sdk/issues/3139)
  - Fix Unit Tests [#3134](https://github.com/LiskHQ/lisk-sdk/issues/3134)
  - Rename -s/--snapshot cli parameter [#3119](https://github.com/LiskHQ/lisk-sdk/issues/3119)
  - Add tests for file rounds_information.js and round_store.js [#3107](https://github.com/LiskHQ/lisk-sdk/issues/3107)
  - Disable type 5 - ""register dapp"" transaction  [#3104](https://github.com/LiskHQ/lisk-sdk/issues/3104)
  - Change system component to application state [#3036](https://github.com/LiskHQ/lisk-sdk/issues/3036)
  - Allow custom transactions to add custom info to accounts [#3027](https://github.com/LiskHQ/lisk-sdk/issues/3027)
  - Temporarily skip failing tests in feature/improve_transactions_processing_efficiency [#3026](https://github.com/LiskHQ/lisk-sdk/issues/3026)
  - Improve Lisk Framework UX [#3022](https://github.com/LiskHQ/lisk-sdk/issues/3022)
  - Issue with account entity sql file [#3009](https://github.com/LiskHQ/lisk-sdk/issues/3009)
  - Refactor undoing transactions and use the new StateStore and transactions library [#3006](https://github.com/LiskHQ/lisk-sdk/issues/3006)
  - Merge development into feature branch [#3000](https://github.com/LiskHQ/lisk-sdk/issues/3000)
  - Publish an event on the channel when the peerHeaders are updated in the System component [#2997](https://github.com/LiskHQ/lisk-sdk/issues/2997)
  - Support ENV vars and command line arguments in application-level  [#2976](https://github.com/LiskHQ/lisk-sdk/issues/2976)
  - Update schema validation support for chain module on provided options [#2959](https://github.com/LiskHQ/lisk-sdk/issues/2959)
  - Change ""eslint"" and ""prettier --write"" command order in .lintstagedrc.json [#2952](https://github.com/LiskHQ/lisk-sdk/issues/2952)
  - Add schema validation support to storage component on provided options [#2950](https://github.com/LiskHQ/lisk-sdk/issues/2950)
  - Add schema validation support to cache component on provided options [#2947](https://github.com/LiskHQ/lisk-sdk/issues/2947)
  - Remove ""save-prefix"" from .npmrc file [#2944](https://github.com/LiskHQ/lisk-sdk/issues/2944)
  - Move rounds related logic from account.merge function to rounds module. [#2942](https://github.com/LiskHQ/lisk-sdk/issues/2942)
  - Add schema validation support to system component on provided options [#2940](https://github.com/LiskHQ/lisk-sdk/issues/2940)
  - Update Account entity to insert/delete entries in dependent tables for memberPublicKeys and votedDelegatePublicKeys properties [#2938](https://github.com/LiskHQ/lisk-sdk/issues/2938)
  - Application should not start without valid blockchain state [#2923](https://github.com/LiskHQ/lisk-sdk/issues/2923)
  - Resolve inconsistency in migrations naming [#2916](https://github.com/LiskHQ/lisk-sdk/issues/2916)
  - Solve warnings: ""Creating a duplicate QueryFile object for the same file"" [#2911](https://github.com/LiskHQ/lisk-sdk/issues/2911)
  - Refactor validating transactions using elements transactions library [#2905](https://github.com/LiskHQ/lisk-sdk/issues/2905)
  - Remove rimraf from package.json [#2899](https://github.com/LiskHQ/lisk-sdk/issues/2899)
  - Add schema validation support to logger component on provided options [#2898](https://github.com/LiskHQ/lisk-sdk/issues/2898)
  - Remove all the P2P related files from chain module [#2883](https://github.com/LiskHQ/lisk-sdk/issues/2883)
  - Update DB to save existing peers [#2882](https://github.com/LiskHQ/lisk-sdk/issues/2882)
  - Update consensus calculation to use network module and fix the tests [#2881](https://github.com/LiskHQ/lisk-sdk/issues/2881)
  - Update node.js in http_api module to use network module and fix the tests [#2880](https://github.com/LiskHQ/lisk-sdk/issues/2880)
  - Update api/peer endpoints to use the network module [#2879](https://github.com/LiskHQ/lisk-sdk/issues/2879)
  - Update broadcaster to use network module and fix the tests [#2878](https://github.com/LiskHQ/lisk-sdk/issues/2878)
  - Update transport module in chain to use network module and fix the tests [#2877](https://github.com/LiskHQ/lisk-sdk/issues/2877)
  - Update loader module in chain to use network module and fix the tests [#2875](https://github.com/LiskHQ/lisk-sdk/issues/2875)
  - Create new network module [#2874](https://github.com/LiskHQ/lisk-sdk/issues/2874)
  - Integrate @liskhq/lisk-p2p module in chain module [#2873](https://github.com/LiskHQ/lisk-sdk/issues/2873)
  - Invalid API Response for peers endpoint with sort by height desc [#2861](https://github.com/LiskHQ/lisk-sdk/issues/2861)
  - Use transactions elements for validating new multisignature from API and peers [#2859](https://github.com/LiskHQ/lisk-sdk/issues/2859)
  - Unconfirmed State Removal - modules/accounts shouldn't mutate unconfirmed state [#2852](https://github.com/LiskHQ/lisk-sdk/issues/2852)
  - Unconfirmed State Removal - logic/account.js should not mutate unconfirmed fields when interacting with Account Entity [#2851](https://github.com/LiskHQ/lisk-sdk/issues/2851)
  - Only accept integer range values for snapshotting rounds [#2843](https://github.com/LiskHQ/lisk-sdk/issues/2843)
  - Remove implementation of all transaction types from logic folder [#2835](https://github.com/LiskHQ/lisk-sdk/issues/2835)
  - Refactor fillPool mechanism to get processable transactions from the transaction pool's ready queue [#2833](https://github.com/LiskHQ/lisk-sdk/issues/2833)
  - Expose functions from transaction pool module to get queued transactions [#2832](https://github.com/LiskHQ/lisk-sdk/issues/2832)
  - Expose functions from transaction pool module to get multi-signature transactions [#2830](https://github.com/LiskHQ/lisk-sdk/issues/2830)
  - Refactor transactions pool in lisk-core, and use transactions pool library [#2829](https://github.com/LiskHQ/lisk-sdk/issues/2829)
  - Remove usages of applying transaction to unconfirmed state from the application [#2828](https://github.com/LiskHQ/lisk-sdk/issues/2828)
  - Remove tables and columns related to unconfirmed state from the database [#2827](https://github.com/LiskHQ/lisk-sdk/issues/2827)
  - Use transactions elements for validating schema when receiving a transaction from API and peers [#2826](https://github.com/LiskHQ/lisk-sdk/issues/2826)
  - Refactor verifying multi-signatures for transactions and use the new StateStore and transactions library [#2825](https://github.com/LiskHQ/lisk-sdk/issues/2825)
  - Refactor applying transactions and use the new StateStore and transactions library [#2824](https://github.com/LiskHQ/lisk-sdk/issues/2824)
  - Refactor verifying transactions and use the new StateStore and transactions library [#2823](https://github.com/LiskHQ/lisk-sdk/issues/2823)
  - Update checkTransactions function and use StateStore and lisk-element's transactions [#2821](https://github.com/LiskHQ/lisk-sdk/issues/2821)
  - Implement StateStore for fetching accounts and transactions and saving updated accounts in the database [#2820](https://github.com/LiskHQ/lisk-sdk/issues/2820)
  - Create Proxy class for initializing class instance of transactions defined in lisk-elements. [#2819](https://github.com/LiskHQ/lisk-sdk/issues/2819)
  - Move Lisk-specific transaction types to application-level [#2780](https://github.com/LiskHQ/lisk-sdk/issues/2780)
  - Refactor current config.json file to be structured in different chunks  [#2577](https://github.com/LiskHQ/lisk-sdk/issues/2577)
  - Improve logging system [#2148](https://github.com/LiskHQ/lisk-sdk/issues/2148)


  ### Merged pull requests
  - Node keep disconnecting with peers running older versions - Closes #3961 [#3974](https://github.com/LiskHQ/lisk-sdk/pull/3974) ([jondubois](https://github.com/jondubois))
  - Add missing unit tests for transactions processing - Closes #3951 [#3959](https://github.com/LiskHQ/lisk-sdk/pull/3959) ([nazarhussain](https://github.com/nazarhussain))
  - Add unit tests for __private.undoConfirmedStep and __private.popLastBlock -  Closes #3929 [#3950](https://github.com/LiskHQ/lisk-sdk/pull/3950) ([yatki](https://github.com/yatki))
  - Transaction pool behavior breaks backward compatibility causing hard-fork - Closes #3914 [#3932](https://github.com/LiskHQ/lisk-sdk/pull/3932) ([nazarhussain](https://github.com/nazarhussain))
  - Node fail to sync when block contains multisignature transaction - Closes #3612 [#3931](https://github.com/LiskHQ/lisk-sdk/pull/3931) ([lsilvs](https://github.com/lsilvs))
  - Set websocket maxPayload on P2P library - Closes #3335 [#3930](https://github.com/LiskHQ/lisk-sdk/pull/3930) ([diego-G](https://github.com/diego-G))
  - Missing await for async call - Closes #3922 [#3927](https://github.com/LiskHQ/lisk-sdk/pull/3927) ([lsilvs](https://github.com/lsilvs))
  - Uncaught TypeError in checkProtocolVersionCompatibility P2P validation method - Closes #3923 [#3926](https://github.com/LiskHQ/lisk-sdk/pull/3926) ([jondubois](https://github.com/jondubois))
  - Check the error exists or not and then return with proper message [#3924](https://github.com/LiskHQ/lisk-sdk/pull/3924) ([ishantiw](https://github.com/ishantiw))
  - Commander should remove backup on uninstall - Closes #3919 [#3920](https://github.com/LiskHQ/lisk-sdk/pull/3920) ([ManuGowda](https://github.com/ManuGowda))
  - Unreacheable peers are kept as connected for too long - Close #3917 [#3918](https://github.com/LiskHQ/lisk-sdk/pull/3918) ([jondubois](https://github.com/jondubois))
  - Update broadcastLimit with emitPeerLimit and its values across framework - Closes #3905 [#3909](https://github.com/LiskHQ/lisk-sdk/pull/3909) ([ishantiw](https://github.com/ishantiw))
  - Commander does not allow upgrading using a custom build - Closes #3901 #3898 #3911 [#3903](https://github.com/LiskHQ/lisk-sdk/pull/3903) ([ManuGowda](https://github.com/ManuGowda))
  - API misreporting the connected peer count and state property is wrong - Closes #3881 #3885 #3907 [#3895](https://github.com/LiskHQ/lisk-sdk/pull/3895) ([ishantiw](https://github.com/ishantiw))
  - Use nodejs crypto library for checksum verification - Closes #3872 [#3876](https://github.com/LiskHQ/lisk-sdk/pull/3876) ([ManuGowda](https://github.com/ManuGowda))
  - Move transactions to the ready queue only if all transaction can be processed together [#3873](https://github.com/LiskHQ/lisk-sdk/pull/3873) ([SargeKhan](https://github.com/SargeKhan))
  - Fix: Readme typo [#3850](https://github.com/LiskHQ/lisk-sdk/pull/3850) ([Tschakki](https://github.com/Tschakki))
  - Fix disappearing broadcasts from broadcaster queue - Closes #3809 [#3831](https://github.com/LiskHQ/lisk-sdk/pull/3831) ([SargeKhan](https://github.com/SargeKhan))
  - Lisk 2.0.0 protocol rejects with incompatible protocol version for nodes with version <= 1.4.1 - Closes #3799 [#3802](https://github.com/LiskHQ/lisk-sdk/pull/3802) ([jondubois](https://github.com/jondubois))
  - Fix readme contribution section - Closes #3796 [#3797](https://github.com/LiskHQ/lisk-sdk/pull/3797) ([mitsujutsu](https://github.com/mitsujutsu))
  - Fix peerInfo update events across p2p lib - Closes #3624 [#3790](https://github.com/LiskHQ/lisk-sdk/pull/3790) ([ishantiw](https://github.com/ishantiw))
  - Add contribution section for development and testing of sdk - Closes #3645 [#3785](https://github.com/LiskHQ/lisk-sdk/pull/3785) ([ishantiw](https://github.com/ishantiw))
  - Unprocessed transactions were not added to empty or non full blocks - Closes #3624 [#3763](https://github.com/LiskHQ/lisk-sdk/pull/3763) ([SargeKhan](https://github.com/SargeKhan))
  - Update framework image [#3761](https://github.com/LiskHQ/lisk-sdk/pull/3761) ([shuse2](https://github.com/shuse2))
  - Update dependency for npm audit [#3760](https://github.com/LiskHQ/lisk-sdk/pull/3760) ([shuse2](https://github.com/shuse2))
  - Use mergeWith to overwrite array elements in config properly - Closes #3723 [#3759](https://github.com/LiskHQ/lisk-sdk/pull/3759) ([ishantiw](https://github.com/ishantiw))
  - getTransactionFromNetwork does not serialize the transaction input - Closes #3738 [#3742](https://github.com/LiskHQ/lisk-sdk/pull/3742) ([lsilvs](https://github.com/lsilvs))
  - Fix failure to generate block within delegate slot due to Inadequate broadhash consensus - Closes #3687 & #3682 [#3741](https://github.com/LiskHQ/lisk-sdk/pull/3741) ([diego-G](https://github.com/diego-G))
  - Too many self connect errors from P2P [#3733](https://github.com/LiskHQ/lisk-sdk/pull/3733) ([ishantiw](https://github.com/ishantiw))
  - API returns incorrect error for postTransactions - Closes #3586 [#3731](https://github.com/LiskHQ/lisk-sdk/pull/3731) ([pablitovicente](https://github.com/pablitovicente))
  - Add README for new lisk node commands - Closes #3314 [#3718](https://github.com/LiskHQ/lisk-sdk/pull/3718) ([ManuGowda](https://github.com/ManuGowda))
  - Add defualt create value for asset field - Closes #3715 [#3716](https://github.com/LiskHQ/lisk-sdk/pull/3716) ([michielmulders](https://github.com/michielmulders))
  - Fix unnecessary logs to be lower - Closes #3703 [#3712](https://github.com/LiskHQ/lisk-sdk/pull/3712) ([shuse2](https://github.com/shuse2))
  - Remove unused config - Closes #3710 [#3711](https://github.com/LiskHQ/lisk-sdk/pull/3711) ([shuse2](https://github.com/shuse2))
  - P2P does not consider broadcastLimit - Closes #3690 [#3708](https://github.com/LiskHQ/lisk-sdk/pull/3708) ([jondubois](https://github.com/jondubois))
  - Invalid monitoring logs for bus activity - Closes #3545 [#3707](https://github.com/LiskHQ/lisk-sdk/pull/3707) ([pablitovicente](https://github.com/pablitovicente))
  - Confirmations value in block is NaN - Close #3688 [#3706](https://github.com/LiskHQ/lisk-sdk/pull/3706) ([pablitovicente](https://github.com/pablitovicente))
  - P2P errors while sync on testnet - Closes #3651 [#3705](https://github.com/LiskHQ/lisk-sdk/pull/3705) ([ishantiw](https://github.com/ishantiw))
  - Do not require nonce when broadcasting any object - Close #3699 [#3700](https://github.com/LiskHQ/lisk-sdk/pull/3700) ([diego-G](https://github.com/diego-G))
  - Remove nonce from WSBlocksBroadcast schema definition - Closes #3687 [#3689](https://github.com/LiskHQ/lisk-sdk/pull/3689) ([diego-G](https://github.com/diego-G))
  - commander core:install command hangs after installation - Closes #3676 [#3677](https://github.com/LiskHQ/lisk-sdk/pull/3677) ([ManuGowda](https://github.com/ManuGowda))
  - Remove redundant handler check in Bus - Closes #3669 [#3670](https://github.com/LiskHQ/lisk-sdk/pull/3670) ([yatki](https://github.com/yatki))
  - Reuse wsPort of Peer to validate its incoming status - Closes #3666 [#3667](https://github.com/LiskHQ/lisk-sdk/pull/3667) ([ishantiw](https://github.com/ishantiw))
  - Commander failed to install lisk core - Closes #3642 [#3662](https://github.com/LiskHQ/lisk-sdk/pull/3662) ([ManuGowda](https://github.com/ManuGowda))
  - Remove first paragraph - Closes #3156 [#3656](https://github.com/LiskHQ/lisk-sdk/pull/3656) ([Tschakki](https://github.com/Tschakki))
  - Commander failed to install lisk core - Closes #3642 [#3655](https://github.com/LiskHQ/lisk-sdk/pull/3655) ([ManuGowda](https://github.com/ManuGowda))
  - Add identifier for ambiguous column reference asset - Closes #3639 [#3654](https://github.com/LiskHQ/lisk-sdk/pull/3654) ([michielmulders](https://github.com/michielmulders))
  - ""Error writing cache count for transactions - Cache Disabled"" when /api/node/status is called - Closes #2482 [#3653](https://github.com/LiskHQ/lisk-sdk/pull/3653) ([pablitovicente](https://github.com/pablitovicente))
  - Discovery is too reliant on seed peers - Closes #3643 [#3652](https://github.com/LiskHQ/lisk-sdk/pull/3652) ([jondubois](https://github.com/jondubois))
  - Change log level of relevant network events to debug - Closes #3623 [#3647](https://github.com/LiskHQ/lisk-sdk/pull/3647) ([ishantiw](https://github.com/ishantiw))
  - Unprocessed transactions were not added to empty or non full blocks - Closes #3624 [#3646](https://github.com/LiskHQ/lisk-sdk/pull/3646) ([SargeKhan](https://github.com/SargeKhan))
  - Expose `validateTransferAmount` and `validateNonTransferAmount` from elements - Closes #3640 [#3641](https://github.com/LiskHQ/lisk-sdk/pull/3641) ([SargeKhan](https://github.com/SargeKhan))
  - Fix typo in the string of the `receivedQueue` constant [#3637](https://github.com/LiskHQ/lisk-sdk/pull/3637) ([SargeKhan](https://github.com/SargeKhan))
  - Fix unstable broadhash consensus - Closes#3574 [#3634](https://github.com/LiskHQ/lisk-sdk/pull/3634) ([ishantiw](https://github.com/ishantiw))
  - Process status shows undefined in Lisk Application - Closes #3621 [#3630](https://github.com/LiskHQ/lisk-sdk/pull/3630) ([nazarhussain](https://github.com/nazarhussain))
  - Update framework components readme - Closes #3158 [#3629](https://github.com/LiskHQ/lisk-sdk/pull/3629) ([Tschakki](https://github.com/Tschakki))
  - Update framework modules readme - Closes #3157 [#3628](https://github.com/LiskHQ/lisk-sdk/pull/3628) ([Tschakki](https://github.com/Tschakki))
  - Node fail to sync when block contains multisignature transaction - Closes #3612 [#3626](https://github.com/LiskHQ/lisk-sdk/pull/3626) ([SargeKhan](https://github.com/SargeKhan))
  - Add validated queue count to api/node/status - Closes #3609 [#3625](https://github.com/LiskHQ/lisk-sdk/pull/3625) ([pablitovicente](https://github.com/pablitovicente))
  - confirmed transaction count not returned when cache is disabled - Close #3618 [#3619](https://github.com/LiskHQ/lisk-sdk/pull/3619) ([pablitovicente](https://github.com/pablitovicente))
  - Update newrelic package - Closes #3608 [#3611](https://github.com/LiskHQ/lisk-sdk/pull/3611) ([shuse2](https://github.com/shuse2))
  - Refactor entry modules - Closes #3580 [#3605](https://github.com/LiskHQ/lisk-sdk/pull/3605) ([shuse2](https://github.com/shuse2))
  - Inconsistent cache behavior - error when cache enabled - Closes #3600 [#3603](https://github.com/LiskHQ/lisk-sdk/pull/3603) ([pablitovicente](https://github.com/pablitovicente))
  - For future compatibility, we need to allow receiving RPCs and events on the outbound socket - Closes #3582 [#3599](https://github.com/LiskHQ/lisk-sdk/pull/3599) ([jondubois](https://github.com/jondubois))
  - Update banners - Closes #3596 [#3597](https://github.com/LiskHQ/lisk-sdk/pull/3597) ([shuse2](https://github.com/shuse2))
  - Node doesn't sync with the network - Closes #3577 [#3595](https://github.com/LiskHQ/lisk-sdk/pull/3595) ([jondubois](https://github.com/jondubois))
  - Fix loader expectation and add configs - Closes #3591 [#3592](https://github.com/LiskHQ/lisk-sdk/pull/3592) ([shuse2](https://github.com/shuse2))
  - Fix insufficient balance log - Closes #3578 [#3590](https://github.com/LiskHQ/lisk-sdk/pull/3590) ([mitsujutsu](https://github.com/mitsujutsu))
  - Fix broadcaster usage for transaction - Closes #3588 [#3589](https://github.com/LiskHQ/lisk-sdk/pull/3589) ([shuse2](https://github.com/shuse2))
  - Unstable broadhash due to stale info about peers in `getNetworkStatus()` [#3587](https://github.com/LiskHQ/lisk-sdk/pull/3587) ([ishantiw](https://github.com/ishantiw))
  - Reject incoming connection if IP is blacklisted - Closes #3581 [#3585](https://github.com/LiskHQ/lisk-sdk/pull/3585) ([diego-G](https://github.com/diego-G))
  - Loader module does not have processTransactions module - Closes #3583 [#3584](https://github.com/LiskHQ/lisk-sdk/pull/3584) ([pablitovicente](https://github.com/pablitovicente))
  - API node/status transactions section given invalid results - Closes #3531 [#3575](https://github.com/LiskHQ/lisk-sdk/pull/3575) ([pablitovicente](https://github.com/pablitovicente))
  - Remove the temporary ""/lisk"" directory - Closes #3572 [#3573](https://github.com/LiskHQ/lisk-sdk/pull/3573) ([MaciejBaj](https://github.com/MaciejBaj))
  - Warning: A promise was created but was not returned from it - Closes #3546 [#3554](https://github.com/LiskHQ/lisk-sdk/pull/3554) ([nazarhussain](https://github.com/nazarhussain))
  - Integration tests fail at lisk-p2p lib [#3550](https://github.com/LiskHQ/lisk-sdk/pull/3550) ([ishantiw](https://github.com/ishantiw))
  - Pg-monitor doesn't show database level events in logs - Closes #3541 [#3547](https://github.com/LiskHQ/lisk-sdk/pull/3547) ([nazarhussain](https://github.com/nazarhussain))
  - Create lisk sdk package - Closes #3441 [#3542](https://github.com/LiskHQ/lisk-sdk/pull/3542) ([shuse2](https://github.com/shuse2))
  - Transactions not being instantiated on block receive - Closes #3535 [#3537](https://github.com/LiskHQ/lisk-sdk/pull/3537) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
  - Improve actions security - Closes #3154 [#3530](https://github.com/LiskHQ/lisk-sdk/pull/3530) ([michielmulders](https://github.com/michielmulders))
  - Reference to application specific setting should be removed from framework - Closes #3402 [#3527](https://github.com/LiskHQ/lisk-sdk/pull/3527) ([yatki](https://github.com/yatki))
  - Remove dependencies - Closes #3508 [#3510](https://github.com/LiskHQ/lisk-sdk/pull/3510) ([shuse2](https://github.com/shuse2))
  - Remove unnecessary logs - Closes #3507 [#3509](https://github.com/LiskHQ/lisk-sdk/pull/3509) ([shuse2](https://github.com/shuse2))
  - Application do not close properly on cleanup [#3505](https://github.com/LiskHQ/lisk-sdk/pull/3505) ([ishantiw](https://github.com/ishantiw))
  - Move Lisk-specific transaction types to application-level - Closes #2780 [#3498](https://github.com/LiskHQ/lisk-sdk/pull/3498) ([lsilvs](https://github.com/lsilvs))
  - Modify boolean validation logic env - Closes #3495 [#3496](https://github.com/LiskHQ/lisk-sdk/pull/3496) ([michielmulders](https://github.com/michielmulders))
  - Disable type 5 - ""register dapp"" transaction - Closes #3104 [#3491](https://github.com/LiskHQ/lisk-sdk/pull/3491) ([lsilvs](https://github.com/lsilvs))
  - Bug fix ENV and Args passed via CLI - Closes #3475 [#3490](https://github.com/LiskHQ/lisk-sdk/pull/3490) ([michielmulders](https://github.com/michielmulders))
  - Rename action and event format for the Network module - Closes #3476 [#3488](https://github.com/LiskHQ/lisk-sdk/pull/3488) ([jondubois](https://github.com/jondubois))
  - Review prettier setting for overall SDK structure - Closes #3401 [#3487](https://github.com/LiskHQ/lisk-sdk/pull/3487) ([yatki](https://github.com/yatki))
  - Snapshot fails on Dapp registration - Closes #3325 [#3486](https://github.com/LiskHQ/lisk-sdk/pull/3486) ([SargeKhan](https://github.com/SargeKhan))
  - Remove network related config from Chain module - Closes #3484 [#3485](https://github.com/LiskHQ/lisk-sdk/pull/3485) ([lsilvs](https://github.com/lsilvs))
  - Remove unused constants and files - Closes #3463 [#3483](https://github.com/LiskHQ/lisk-sdk/pull/3483) ([pablitovicente](https://github.com/pablitovicente))
  - Add script to start test app - Closes #3383 [#3481](https://github.com/LiskHQ/lisk-sdk/pull/3481) ([shuse2](https://github.com/shuse2))
  - Add license header - Closes #3462 [#3480](https://github.com/LiskHQ/lisk-sdk/pull/3480) ([shuse2](https://github.com/shuse2))
  - Update module name - Closes #3467 [#3479](https://github.com/LiskHQ/lisk-sdk/pull/3479) ([shuse2](https://github.com/shuse2))
  - Fix network config - Closes #3466 [#3478](https://github.com/LiskHQ/lisk-sdk/pull/3478) ([shuse2](https://github.com/shuse2))
  - Remove VError usage - Closes #3406 [#3477](https://github.com/LiskHQ/lisk-sdk/pull/3477) ([mitsujutsu](https://github.com/mitsujutsu))
  - Un-skip verify integration tests - Closes #3473 [#3474](https://github.com/LiskHQ/lisk-sdk/pull/3474) ([pablitovicente](https://github.com/pablitovicente))
  - Move the application-level project to TypeScript - Closes #3391 [#3471](https://github.com/LiskHQ/lisk-sdk/pull/3471) ([yatki](https://github.com/yatki))
  - Merge Feature/create network module [#3465](https://github.com/LiskHQ/lisk-sdk/pull/3465) ([shuse2](https://github.com/shuse2))
  - Update folder structure and name - #3424 [#3464](https://github.com/LiskHQ/lisk-sdk/pull/3464) ([shuse2](https://github.com/shuse2))
  - Change state store not to be singleton - Partially closes #3403 [#3461](https://github.com/LiskHQ/lisk-sdk/pull/3461) ([shuse2](https://github.com/shuse2))
  - Fix skipped integration tests for second_signature and delegates [#3460](https://github.com/LiskHQ/lisk-sdk/pull/3460) ([mitsujutsu](https://github.com/mitsujutsu))
  - Provide a default database name of the Storage component [#3459](https://github.com/LiskHQ/lisk-sdk/pull/3459) ([MaciejBaj](https://github.com/MaciejBaj))
  - Disable network test - Closes #3296 [#3458](https://github.com/LiskHQ/lisk-sdk/pull/3458) ([shuse2](https://github.com/shuse2))
  - Logging does not work for storage component - Closes #3455 [#3456](https://github.com/LiskHQ/lisk-sdk/pull/3456) ([nazarhussain](https://github.com/nazarhussain))
  - Merge development into network feature [#3453](https://github.com/LiskHQ/lisk-sdk/pull/3453) ([shuse2](https://github.com/shuse2))
  - Move exceptions.js file to be part of config.json to simplify config structure - Closes #3309 [#3451](https://github.com/LiskHQ/lisk-sdk/pull/3451) ([nazarhussain](https://github.com/nazarhussain))
  - Start application only for tests requiring it - Closes #3449 [#3450](https://github.com/LiskHQ/lisk-sdk/pull/3450) ([fchavant](https://github.com/fchavant))
  - Fix commander with latest framework changes - Closes #3315 [#3448](https://github.com/LiskHQ/lisk-sdk/pull/3448) ([ManuGowda](https://github.com/ManuGowda))
  - Save and load tried peers to/from database in network module [#3446](https://github.com/LiskHQ/lisk-sdk/pull/3446) ([ishantiw](https://github.com/ishantiw))
  - Fix config for network module [#3445](https://github.com/LiskHQ/lisk-sdk/pull/3445) ([jondubois](https://github.com/jondubois))
  - Merge Feature/improve transactions processing efficiency [#3440](https://github.com/LiskHQ/lisk-sdk/pull/3440) ([shuse2](https://github.com/shuse2))
  - Revisit skipped test in improve transaction processing efficiency - Closes #3404 [#3439](https://github.com/LiskHQ/lisk-sdk/pull/3439) ([pablitovicente](https://github.com/pablitovicente))
  - App label validation fail when app.label is not given - Closes #3437 [#3438](https://github.com/LiskHQ/lisk-sdk/pull/3438) ([lsilvs](https://github.com/lsilvs))
  - NewRelic does not show the proper network name - Closes #3435 [#3436](https://github.com/LiskHQ/lisk-sdk/pull/3436) ([nazarhussain](https://github.com/nazarhussain))
  - Use getNodeStatus to retrieve lastBlock in HTTP API [#3434](https://github.com/LiskHQ/lisk-sdk/pull/3434) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
  - Re-enable hoist option for bootstrap - Closes #3425 [#3430](https://github.com/LiskHQ/lisk-sdk/pull/3430) ([shuse2](https://github.com/shuse2))
  - New network module receive connection id not match error alot - Closes #3417 [#3428](https://github.com/LiskHQ/lisk-sdk/pull/3428) ([jondubois](https://github.com/jondubois))
  - Validate overflowed string in transfer asset data [#3427](https://github.com/LiskHQ/lisk-sdk/pull/3427) ([mitsujutsu](https://github.com/mitsujutsu))
  - Fix to use updated function - Closes #3418 [#3423](https://github.com/LiskHQ/lisk-sdk/pull/3423) ([shuse2](https://github.com/shuse2))
  - Revise list of actions in Chain module [#3422](https://github.com/LiskHQ/lisk-sdk/pull/3422) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
  - Fix new exception config - Closes #3419 [#3421](https://github.com/LiskHQ/lisk-sdk/pull/3421) ([shuse2](https://github.com/shuse2))
  - Fix snapshotting validation and rewrite -s to --rebuild - Closes #2843, #3119 [#3420](https://github.com/LiskHQ/lisk-sdk/pull/3420) ([michielmulders](https://github.com/michielmulders))
  - Replace logger with bunyan - Closes #2148 [#3416](https://github.com/LiskHQ/lisk-sdk/pull/3416) ([shuse2](https://github.com/shuse2))
  - Add custom data column for accounts entity - Closes #3027 [#3412](https://github.com/LiskHQ/lisk-sdk/pull/3412) ([michielmulders](https://github.com/michielmulders))
  - Fix network test to be able to run after product merge - Closes #3408 [#3410](https://github.com/LiskHQ/lisk-sdk/pull/3410) ([pablitovicente](https://github.com/pablitovicente))
  - Fix commander slow test execution [#3400](https://github.com/LiskHQ/lisk-sdk/pull/3400) ([shuse2](https://github.com/shuse2))
  - Fix jenkins test order [#3399](https://github.com/LiskHQ/lisk-sdk/pull/3399) ([shuse2](https://github.com/shuse2))
  - Fix tests in development branch - Closes #3375 [#3398](https://github.com/LiskHQ/lisk-sdk/pull/3398) ([pablitovicente](https://github.com/pablitovicente))
  - Run network tests under framework/ - Closes #3397 [#3395](https://github.com/LiskHQ/lisk-sdk/pull/3395) ([fchavant](https://github.com/fchavant))
  - Add validation for app state - Closes #2940 [#3386](https://github.com/LiskHQ/lisk-sdk/pull/3386) ([michielmulders](https://github.com/michielmulders))
  - P2P should not connect to itself - Closes #3364 [#3382](https://github.com/LiskHQ/lisk-sdk/pull/3382) ([jondubois](https://github.com/jondubois))
  - Remove redundant .eslintrc.test.json - Closes #3380 [#3381](https://github.com/LiskHQ/lisk-sdk/pull/3381) ([yatki](https://github.com/yatki))
  - Fix test tsconfig reference for commander [#3379](https://github.com/LiskHQ/lisk-sdk/pull/3379) ([shuse2](https://github.com/shuse2))
  - Update precommit & prepush hooks in the root level - Closes #3371 [#3378](https://github.com/LiskHQ/lisk-sdk/pull/3378) ([yatki](https://github.com/yatki))
  - Restructure jest folder - Closes #3282 [#3376](https://github.com/LiskHQ/lisk-sdk/pull/3376) ([yatki](https://github.com/yatki))
  - Create and use config.js script merging defaults and custom configuration - Closes #3171 [#3373](https://github.com/LiskHQ/lisk-sdk/pull/3373) ([nazarhussain](https://github.com/nazarhussain))
  - Update jenkins after sdk merge - Closes #3350 [#3370](https://github.com/LiskHQ/lisk-sdk/pull/3370) ([fchavant](https://github.com/fchavant))
  - Implement Unit tests for Chain module - Closes #3285 [#3369](https://github.com/LiskHQ/lisk-sdk/pull/3369) ([yatki](https://github.com/yatki))
  - Fix framework reference - Closes #3366 [#3367](https://github.com/LiskHQ/lisk-sdk/pull/3367) ([shuse2](https://github.com/shuse2))
  - Expose a sample Genesis Block from Framework [#3365](https://github.com/LiskHQ/lisk-sdk/pull/3365) ([MaciejBaj](https://github.com/MaciejBaj))
  - Remove snyk setting - Closes #3252 [#3363](https://github.com/LiskHQ/lisk-sdk/pull/3363) ([shuse2](https://github.com/shuse2))
  - Fix version reference for lisk-framework - Closes #3361 [#3362](https://github.com/LiskHQ/lisk-sdk/pull/3362) ([shuse2](https://github.com/shuse2))
  - Multi-signature registration - Create member accounts - Closes #3313 [#3357](https://github.com/LiskHQ/lisk-sdk/pull/3357) ([pablitovicente](https://github.com/pablitovicente))
  - Move jenkins file to related folder - Closes #3354 [#3355](https://github.com/LiskHQ/lisk-sdk/pull/3355) ([shuse2](https://github.com/shuse2))
  - Add image to the READMEs - Closes #3351 [#3352](https://github.com/LiskHQ/lisk-sdk/pull/3352) ([shuse2](https://github.com/shuse2))
  - Update broadcaster to use network module - Close #2878 [#3312](https://github.com/LiskHQ/lisk-sdk/pull/3312) ([diego-G](https://github.com/diego-G))
  - Merge development into network module [#3307](https://github.com/LiskHQ/lisk-sdk/pull/3307) ([shuse2](https://github.com/shuse2))
  - Promisified dns lookup returns inconsistant results - Closes#3303 [#3305](https://github.com/LiskHQ/lisk-sdk/pull/3305) ([ManuGowda](https://github.com/ManuGowda))
  - Restore logic of chain recover on sync - Closes #3281 [#3301](https://github.com/LiskHQ/lisk-sdk/pull/3301) ([jondubois](https://github.com/jondubois))
  - Merge development into feature branch [#3300](https://github.com/LiskHQ/lisk-sdk/pull/3300) ([jondubois](https://github.com/jondubois))
  - Update transport to use network module - Closes #2877 [#3295](https://github.com/LiskHQ/lisk-sdk/pull/3295) ([shuse2](https://github.com/shuse2))
  - Implement design pattern for protocol change - Closes #3251 [#3294](https://github.com/LiskHQ/lisk-sdk/pull/3294) ([lsilvs](https://github.com/lsilvs))
  - Helm Chart for lisk-core - Closes #2986 [#3293](https://github.com/LiskHQ/lisk-sdk/pull/3293) ([psychopenguin](https://github.com/psychopenguin))
  - Update calculateConsensus() to use network module - Closes #2881 [#3290](https://github.com/LiskHQ/lisk-sdk/pull/3290) ([diego-G](https://github.com/diego-G))
  - Solve warnings: ""Creating a duplicate QueryFile object for the same file"" - Closes #2911 [#3289](https://github.com/LiskHQ/lisk-sdk/pull/3289) ([yatki](https://github.com/yatki))
  - Simplify the default value generation for all configurations - Closes #3273 [#3288](https://github.com/LiskHQ/lisk-sdk/pull/3288) ([nazarhussain](https://github.com/nazarhussain))
  - Fix functional and unit tests - Closes #3152 [#3287](https://github.com/LiskHQ/lisk-sdk/pull/3287) ([mitsujutsu](https://github.com/mitsujutsu))
  - Functional tests don't stop with SIGINT - Closes #3098 [#3284](https://github.com/LiskHQ/lisk-sdk/pull/3284) ([yatki](https://github.com/yatki))
  - Add validation initialState - Invalid [#3283](https://github.com/LiskHQ/lisk-sdk/pull/3283) ([michielmulders](https://github.com/michielmulders))
  - Fix snapshotting validation and rewrite -s to --rebuild [#3277](https://github.com/LiskHQ/lisk-sdk/pull/3277) ([michielmulders](https://github.com/michielmulders))
  - Narrow parameter list for end user - Closes #3160 [#3275](https://github.com/LiskHQ/lisk-sdk/pull/3275) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
  - Merge development into feature/create_network_module [#3272](https://github.com/LiskHQ/lisk-sdk/pull/3272) ([diego-G](https://github.com/diego-G))
  - Fix sorting function accounts API - Closes #3249 [#3271](https://github.com/LiskHQ/lisk-sdk/pull/3271) ([michielmulders](https://github.com/michielmulders))
  - Fix Integration Tests - Closes #3266 [#3268](https://github.com/LiskHQ/lisk-sdk/pull/3268) ([pablitovicente](https://github.com/pablitovicente))
  - Move Lisk-specific transaction types to application-level - Closes #2780 [#3267](https://github.com/LiskHQ/lisk-sdk/pull/3267) ([lsilvs](https://github.com/lsilvs))
  - Adapt network module to new applicaton state - Closes #3260 [#3261](https://github.com/LiskHQ/lisk-sdk/pull/3261) ([diego-G](https://github.com/diego-G))
  - Rename 'lisk' to 'app' ID for controller - Closes #3208 [#3258](https://github.com/LiskHQ/lisk-sdk/pull/3258) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
  - Implement pending unit tests for in memory channel [#3254](https://github.com/LiskHQ/lisk-sdk/pull/3254) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
  - Fix to call error properly [#3250](https://github.com/LiskHQ/lisk-sdk/pull/3250) ([shuse2](https://github.com/shuse2))
  - Convert error strings to objects - Closes #3189  [#3248](https://github.com/LiskHQ/lisk-sdk/pull/3248) ([mitsujutsu](https://github.com/mitsujutsu))
  - Move broadhash computation to chain module - Close #3141 [#3247](https://github.com/LiskHQ/lisk-sdk/pull/3247) ([diego-G](https://github.com/diego-G))
  - Modify validation chain and update config.json - Closes #2959 [#3246](https://github.com/LiskHQ/lisk-sdk/pull/3246) ([michielmulders](https://github.com/michielmulders))
  - Update loader module in chain to use network module and fix the tests - Closes #2875 [#3243](https://github.com/LiskHQ/lisk-sdk/pull/3243) ([jondubois](https://github.com/jondubois))
  - Fix failing func test for /account API - Closes #3239 [#3241](https://github.com/LiskHQ/lisk-sdk/pull/3241) ([michielmulders](https://github.com/michielmulders))
  - Fix lintstage setting to check eslint after prettier - Closes #2952 [#3238](https://github.com/LiskHQ/lisk-sdk/pull/3238) ([shuse2](https://github.com/shuse2))
  - Remove rimraf from dependency - Closes #2899 [#3237](https://github.com/LiskHQ/lisk-sdk/pull/3237) ([shuse2](https://github.com/shuse2))
  - Fix npmrc settting - Closes #2944 [#3236](https://github.com/LiskHQ/lisk-sdk/pull/3236) ([shuse2](https://github.com/shuse2))
  - Broadcast verified transactions among peers in feature/improve_transaction_processing - Closes #3190 [#3234](https://github.com/LiskHQ/lisk-sdk/pull/3234) ([pablitovicente](https://github.com/pablitovicente))
  - Rewrite reserved keywords [#3232](https://github.com/LiskHQ/lisk-sdk/pull/3232) ([michielmulders](https://github.com/michielmulders))
  - Add int range for snapshotting - Closes #2843 [#3231](https://github.com/LiskHQ/lisk-sdk/pull/3231) ([michielmulders](https://github.com/michielmulders))
  - Remove topAccounts from config file - Closes #2592 [#3223](https://github.com/LiskHQ/lisk-sdk/pull/3223) ([lsilvs](https://github.com/lsilvs))
  - Remove unconfirmed attributes for account in state store - Closes #3212 [#3213](https://github.com/LiskHQ/lisk-sdk/pull/3213) ([SargeKhan](https://github.com/SargeKhan))
  - Change jest:unit test folder structure [#3209](https://github.com/LiskHQ/lisk-sdk/pull/3209) ([michielmulders](https://github.com/michielmulders))
  - Add secondary key for ordering API /accounts - Closes #2854 [#3204](https://github.com/LiskHQ/lisk-sdk/pull/3204) ([michielmulders](https://github.com/michielmulders))
  - Add unit and integration tests for rounds and round state store - Closes #3107 [#3203](https://github.com/LiskHQ/lisk-sdk/pull/3203) ([mitsujutsu](https://github.com/mitsujutsu))
  - Add functionality for handling exceptions present in the blockchain - Closes #3181 [#3195](https://github.com/LiskHQ/lisk-sdk/pull/3195) ([SargeKhan](https://github.com/SargeKhan))
  - Node inspect can't be run with default child process - Closes #3193 [#3194](https://github.com/LiskHQ/lisk-sdk/pull/3194) ([pablitovicente](https://github.com/pablitovicente))
  - Remove attributes related to the unconfirmed state from the API - Closes #3183 [#3187](https://github.com/LiskHQ/lisk-sdk/pull/3187) ([pablitovicente](https://github.com/pablitovicente))
  - Update api peer endpoints use network module - Closes#2879 [#3180](https://github.com/LiskHQ/lisk-sdk/pull/3180) ([ishantiw](https://github.com/ishantiw))
  - Add minimal test coverage config commander -  Closes #3175 [#3178](https://github.com/LiskHQ/lisk-sdk/pull/3178) ([michielmulders](https://github.com/michielmulders))
  - Fix Unit Tests - Closes #3134 [#3169](https://github.com/LiskHQ/lisk-sdk/pull/3169) ([pablitovicente](https://github.com/pablitovicente))
  - Fix integration test for transactions in branch: feature/improve_transactions_processing_efficiency - Closes #3143 [#3166](https://github.com/LiskHQ/lisk-sdk/pull/3166) ([SargeKhan](https://github.com/SargeKhan))
  - Remove implementation of all transaction types and Remove unconfirmed state from database - Closes #2835, #2828 [#3144](https://github.com/LiskHQ/lisk-sdk/pull/3144) ([SargeKhan](https://github.com/SargeKhan))
  - Process incoming signatures using statestore and elements - Closes #2825 [#3130](https://github.com/LiskHQ/lisk-sdk/pull/3130) ([mitsujutsu](https://github.com/mitsujutsu))
  - Fix votes calculated for delegates in round - Closes #3107 [#3108](https://github.com/LiskHQ/lisk-sdk/pull/3108) ([SargeKhan](https://github.com/SargeKhan))
  - Merge development into feature branch - Closes #3084 [#3086](https://github.com/LiskHQ/lisk-sdk/pull/3086) ([pablitovicente](https://github.com/pablitovicente))
  - Convert system component to a general application state - Closes #3036 [#3076](https://github.com/LiskHQ/lisk-sdk/pull/3076) ([diego-G](https://github.com/diego-G))
  - Updating memberPublicKeys property for account does not work if the updated value is an empty array - Closes #3063 [#3064](https://github.com/LiskHQ/lisk-sdk/pull/3064) ([SargeKhan](https://github.com/SargeKhan))
  - Refactor transactions pool in lisk-core, and use transactions pool library - Closes #2829 [#3049](https://github.com/LiskHQ/lisk-sdk/pull/3049) ([SargeKhan](https://github.com/SargeKhan))
  - Block has no scope bind and transport validation is failing - Closes #3037 [#3038](https://github.com/LiskHQ/lisk-sdk/pull/3038) ([pablitovicente](https://github.com/pablitovicente))
  - Remove applyUnconfirmedStep and undoUnconfirmedStep from the applyBlock and deleteLastBlock functions - Closes #3025 [#3025](https://github.com/LiskHQ/lisk-sdk/pull/3025) ([SargeKhan](https://github.com/SargeKhan))
  - Integrate @liskhq/lisk-p2p module in chain module - Closes #2874 [#3019](https://github.com/LiskHQ/lisk-sdk/pull/3019) ([jondubois](https://github.com/jondubois))
  - Refactor undoing transactions and use the new StateStore and transactions library - Closes #3006 [#3015](https://github.com/LiskHQ/lisk-sdk/pull/3015) ([pablitovicente](https://github.com/pablitovicente))
  - Issue with account entity sql file - Close #3009 [#3010](https://github.com/LiskHQ/lisk-sdk/pull/3010) ([pablitovicente](https://github.com/pablitovicente))
  - Merge development into feature branch - Closes #3000 [#3003](https://github.com/LiskHQ/lisk-sdk/pull/3003) ([pablitovicente](https://github.com/pablitovicente))
  - Refactor applying transactions and use the new StateStore and transactions library - Closes #2824 [#3002](https://github.com/LiskHQ/lisk-sdk/pull/3002) ([SargeKhan](https://github.com/SargeKhan))
  - Support ENV vars and console parameters in application-level - Closes #2976 [#2977](https://github.com/LiskHQ/lisk-sdk/pull/2977) ([nazarhussain](https://github.com/nazarhussain))
  - Refactor transaction validation in block normalization - Closes #2905 [#2960](https://github.com/LiskHQ/lisk-sdk/pull/2960) ([mitsujutsu](https://github.com/mitsujutsu))
  - Move rounds related logic from account.merge function to rounds module - Closes #2942 [#2958](https://github.com/LiskHQ/lisk-sdk/pull/2958) ([SargeKhan](https://github.com/SargeKhan))
  - Update Account entity to insert/delete entries in dependent tables for memberPublicKeys and votedDelegatePublicKeys properties - Closes #2938 [#2941](https://github.com/LiskHQ/lisk-sdk/pull/2941) ([pablitovicente](https://github.com/pablitovicente))
  - Refactor current config.json file to be structured in different chunks - Closes #2577 [#2937](https://github.com/LiskHQ/lisk-sdk/pull/2937) ([nazarhussain](https://github.com/nazarhussain))
  - Refactor verify in generation of new blocks - Closes #2823 [#2925](https://github.com/LiskHQ/lisk-sdk/pull/2925) ([mitsujutsu](https://github.com/mitsujutsu))
  - Remove tables and columns related to unconfirmed state from the database - Closes #2827 [#2906](https://github.com/LiskHQ/lisk-sdk/pull/2906) ([pablitovicente](https://github.com/pablitovicente))
  - Update checkTransactions function and use StateStore and lisk-element's transactions [#2892](https://github.com/LiskHQ/lisk-sdk/pull/2892) ([SargeKhan](https://github.com/SargeKhan))
  - Unconfirmed State Removal - logic/account.js should not mutate unconfirmed fields when interacting with Account Entity - Closes #2851 [#2872](https://github.com/LiskHQ/lisk-sdk/pull/2872) ([pablitovicente](https://github.com/pablitovicente))
  - Implement StateStore for fetching accounts and transactions and saving updated accounts in the database - Closes #2820 [#2871](https://github.com/LiskHQ/lisk-sdk/pull/2871) ([SargeKhan](https://github.com/SargeKhan))
  - Validate received tx using elements - Closes #2826 [#2860](https://github.com/LiskHQ/lisk-sdk/pull/2860) ([mitsujutsu](https://github.com/mitsujutsu))
  - Unconfirmed State Removal - Account entity should not mutate unconfirmed columns - Closes #2850 [#2856](https://github.com/LiskHQ/lisk-sdk/pull/2856) ([pablitovicente](https://github.com/pablitovicente))
  - Add transaction proxy class - Closes #2819 [#2853](https://github.com/LiskHQ/lisk-sdk/pull/2853) ([mitsujutsu](https://github.com/mitsujutsu))
</details>",50873641
111,False,True,2019-06-24T08:14:05Z,2019-06-24T15:41:19Z,"# Change Log

## [v2.0.0-alpha.12](https://github.com/LiskHQ/lisk-sdk/tree/v2.0.0-alpha.12) (2019-06-24)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v1.6.0...v2.0.0-alpha.12)

## API breaking changes
- Removed unconfirmedBalance from api/accounts and /accounts/{address}/multisignature_groups (https://github.com/LiskHQ/lisk-sdk/issues/3183)
- Change transactions property of node/status endpoint and /node/transactions/{state} from unconfirmed/unsigned/unprocessed to ready/pending/verified/validated/received (https://github.com/LiskHQ/lisk-sdk/issues/3609)
- API response returns array of errors instead of single error (https://github.com/LiskHQ/lisk-sdk/issues/3152)

## Other breaking changes
- Logging system changed (https://github.com/LiskHQ/lisk-sdk/issues/2148)
- Configuration files are now per module (https://github.com/LiskHQ/lisk-sdk/issues/2577)


## Soft fork related changes
- Transaction type 5 (DAPP) is disabled. (https://github.com/LiskHQ/lisk-sdk/issues/3104)
- We are not allowing for conflicting transaction to be included in the same block (as explained in https://github.com/LiskHQ/lisk-sdk/issues/2209)

**Closed issues:**
- API /api/node/constants missing build field [#3848](https://github.com/LiskHQ/lisk-sdk/issues/3848)
- Node upgrade failed due to schema validation errors [#3844](https://github.com/LiskHQ/lisk-sdk/issues/3844)
- Not all transactions are queued for broadcast [#3809](https://github.com/LiskHQ/lisk-sdk/issues/3809)
- Lisk Core 2.0.0 API performance degrade [#3800](https://github.com/LiskHQ/lisk-sdk/issues/3800)
- Lisk 2.0.0 protocol rejects with incompatible protocol version for nodes with version <= 1.4.1 [#3799](https://github.com/LiskHQ/lisk-sdk/issues/3799)
- Refine the Readme phrases [#3796](https://github.com/LiskHQ/lisk-sdk/issues/3796)
- Network module should ignore peers for consensus while sycing to network [#3786](https://github.com/LiskHQ/lisk-sdk/issues/3786)
- getTransactionFromNetwork does not serialize the transaction input [#3738](https://github.com/LiskHQ/lisk-sdk/issues/3738)
- Transaction pool doesn't respect maxTransactionsPerQueue limit [#3732](https://github.com/LiskHQ/lisk-sdk/issues/3732)
- Transactions type 4 are not propagated through the network [#3728](https://github.com/LiskHQ/lisk-sdk/issues/3728)
- Blockchain verification process should not connect to network [#3723](https://github.com/LiskHQ/lisk-sdk/issues/3723)
- Add default create values account state store asset [#3715](https://github.com/LiskHQ/lisk-sdk/issues/3715)
- Remove broadcastLimit property from chain and move to network module [#3710](https://github.com/LiskHQ/lisk-sdk/issues/3710)
- Fix application warnings [#3704](https://github.com/LiskHQ/lisk-sdk/issues/3704)
- Improve log level and log information [#3703](https://github.com/LiskHQ/lisk-sdk/issues/3703)
- Do not require nonce when broadcasting any object [#3699](https://github.com/LiskHQ/lisk-sdk/issues/3699)
- P2P does not consider broadcastLimit [#3690](https://github.com/LiskHQ/lisk-sdk/issues/3690)
- Confirmations value in block is NaN [#3688](https://github.com/LiskHQ/lisk-sdk/issues/3688)
- Failed to generate block within delegate slot due to Inadequate broadhash consensus [#3687](https://github.com/LiskHQ/lisk-sdk/issues/3687)
- commander core:install command hangs after installation [#3676](https://github.com/LiskHQ/lisk-sdk/issues/3676)
- Remove redundant handler check in Bus [#3669](https://github.com/LiskHQ/lisk-sdk/issues/3669)
- Rebuild/Verification failed for testnet and mainnet [#3668](https://github.com/LiskHQ/lisk-sdk/issues/3668)
- Update myself fails a lot because of invalid peer ip or port [#3666](https://github.com/LiskHQ/lisk-sdk/issues/3666)
- P2P errors while syncing with testnet [#3651](https://github.com/LiskHQ/lisk-sdk/issues/3651)
- Difficulty in testing lisk-core with local versions of lisk-sdk and lisk-framework [#3645](https://github.com/LiskHQ/lisk-sdk/issues/3645)
- Discovery is too reliant on seed peers [#3643](https://github.com/LiskHQ/lisk-sdk/issues/3643)
- Expose more util functions from `lisk-transactions` [#3640](https://github.com/LiskHQ/lisk-sdk/issues/3640)
- Benchmark transaction processing times [#3627](https://github.com/LiskHQ/lisk-sdk/issues/3627)
- Unprocessed transactions were not added to empty or non full blocks [#3624](https://github.com/LiskHQ/lisk-sdk/issues/3624)
- Redundant log info without any context [#3623](https://github.com/LiskHQ/lisk-sdk/issues/3623)
- Frequent API timeouts when running stress test [#3622](https://github.com/LiskHQ/lisk-sdk/issues/3622)
- Process status shows undefined in Lisk Application  [#3621](https://github.com/LiskHQ/lisk-sdk/issues/3621)
- Node fail to sync when block contains multisignature transaction [#3612](https://github.com/LiskHQ/lisk-sdk/issues/3612)
- Name of unsigned transactions queue is misleading [#3610](https://github.com/LiskHQ/lisk-sdk/issues/3610)
- Update lisk-new-relic version [#3608](https://github.com/LiskHQ/lisk-sdk/issues/3608)
- Inconsistent cache behavior - error when cache enabled [#3600](https://github.com/LiskHQ/lisk-sdk/issues/3600)
- Update banner images [#3596](https://github.com/LiskHQ/lisk-sdk/issues/3596)
- getSignatures and getTransactions from the network is not working [#3591](https://github.com/LiskHQ/lisk-sdk/issues/3591)
- Transactions are not broadcasted after received by postTransactions [#3588](https://github.com/LiskHQ/lisk-sdk/issues/3588)
- API returns incorrect error for postTransactions [#3586](https://github.com/LiskHQ/lisk-sdk/issues/3586)
- Loader module does not have processTransactions module [#3583](https://github.com/LiskHQ/lisk-sdk/issues/3583)
- For future compatibility, we need to allow receiving RPCs and events on the outbound socket [#3582](https://github.com/LiskHQ/lisk-sdk/issues/3582)
- Check peer's blacklist before accepting an incoming connection [#3581](https://github.com/LiskHQ/lisk-sdk/issues/3581)
- Node doesn't sync with the network [#3577](https://github.com/LiskHQ/lisk-sdk/issues/3577)
- Small typo in the string of the `receivedQueue` constant [#3576](https://github.com/LiskHQ/lisk-sdk/issues/3576)
- Unstable broadhash consensus [#3574](https://github.com/LiskHQ/lisk-sdk/issues/3574)
- Remove the temporary ""/lisk"" directory [#3572](https://github.com/LiskHQ/lisk-sdk/issues/3572)
- Integration on lisk-p2p fails randomly [#3549](https://github.com/LiskHQ/lisk-sdk/issues/3549)
- Warning: A promise was created but was not returned from it [#3546](https://github.com/LiskHQ/lisk-sdk/issues/3546)
- The order of loading modules does not seems correct [#3544](https://github.com/LiskHQ/lisk-sdk/issues/3544)
- Pg-monitor doesn't show database level events in logs [#3541](https://github.com/LiskHQ/lisk-sdk/issues/3541)
- Transactions not being instantiated when receiving a block [#3535](https://github.com/LiskHQ/lisk-sdk/issues/3535)
- API node/status - invalid networkHeight [#3533](https://github.com/LiskHQ/lisk-sdk/issues/3533)
- API node/status transactions section given invalid results [#3531](https://github.com/LiskHQ/lisk-sdk/issues/3531)
- Test commander core commands [#3516](https://github.com/LiskHQ/lisk-sdk/issues/3516)
- Remove unnecessary dependency from framwork [#3508](https://github.com/LiskHQ/lisk-sdk/issues/3508)
- Remove unnecessary log from process transactions [#3507](https://github.com/LiskHQ/lisk-sdk/issues/3507)
- Missing values while saving peers to DB [#3504](https://github.com/LiskHQ/lisk-sdk/issues/3504)
- Application don't clean up properly on exit [#3502](https://github.com/LiskHQ/lisk-sdk/issues/3502)
- Remove network related config from Chain module [#3484](https://github.com/LiskHQ/lisk-sdk/issues/3484)
- Update network action/event name to be understandable channel name [#3476](https://github.com/LiskHQ/lisk-sdk/issues/3476)
- Passing ENV var via CLI does not work to modify app behavior [#3475](https://github.com/LiskHQ/lisk-sdk/issues/3475)
- Un-skip verify integration tests [#3473](https://github.com/LiskHQ/lisk-sdk/issues/3473)
- Update framework module info convention [#3467](https://github.com/LiskHQ/lisk-sdk/issues/3467)
- Update network config and update_config script accordingly [#3466](https://github.com/LiskHQ/lisk-sdk/issues/3466)
- Remove unused constants and files [#3463](https://github.com/LiskHQ/lisk-sdk/issues/3463)
- Add license header to new files [#3462](https://github.com/LiskHQ/lisk-sdk/issues/3462)
- Fee and Amount incorrectly set to 0 for validated transactions received from blocks [#3457](https://github.com/LiskHQ/lisk-sdk/issues/3457)
- Logging does not work for storage component [#3455](https://github.com/LiskHQ/lisk-sdk/issues/3455)
- Creating a duplicate database object for the same connection [#3454](https://github.com/LiskHQ/lisk-sdk/issues/3454)
- Export development helpers and samples from lisk-sdk  [#3441](https://github.com/LiskHQ/lisk-sdk/issues/3441)
- App label validation fail when app.label is not given [#3437](https://github.com/LiskHQ/lisk-sdk/issues/3437)
- NewRelic does not show the proper network name [#3435](https://github.com/LiskHQ/lisk-sdk/issues/3435)
- Fix the update_config.js to point the right version of release for 2.0.0 [#3432](https://github.com/LiskHQ/lisk-sdk/issues/3432)
- Enable bootstrap --hoist option to speed up the build process [#3425](https://github.com/LiskHQ/lisk-sdk/issues/3425)
- Rename framework helper module to util to match with naming convention of other libraries [#3424](https://github.com/LiskHQ/lisk-sdk/issues/3424)
- Missing new exception keys in config [#3419](https://github.com/LiskHQ/lisk-sdk/issues/3419)
- Loader is trying to call non-existing function [#3418](https://github.com/LiskHQ/lisk-sdk/issues/3418)
- New network module receive connection id not match error alot [#3417](https://github.com/LiskHQ/lisk-sdk/issues/3417)
- Fix network test to be able to run after product merge [#3408](https://github.com/LiskHQ/lisk-sdk/issues/3408)
- Remove VError usage from elements [#3406](https://github.com/LiskHQ/lisk-sdk/issues/3406)
- Revisit skipped test in improve transaction processing efficiency [#3404](https://github.com/LiskHQ/lisk-sdk/issues/3404)
- Verify snapshot and sync for the mainnet  [#3403](https://github.com/LiskHQ/lisk-sdk/issues/3403)
- Reference to application specific setting should be removed from framework [#3402](https://github.com/LiskHQ/lisk-sdk/issues/3402)
- Review prettier setting for overall SDK structure [#3401](https://github.com/LiskHQ/lisk-sdk/issues/3401)
- Jenkins should run network test in the framework [#3397](https://github.com/LiskHQ/lisk-sdk/issues/3397)
- Move the application-level project to TypeScript [#3391](https://github.com/LiskHQ/lisk-sdk/issues/3391)
- Provide a default database name of the Storage component [#3385](https://github.com/LiskHQ/lisk-sdk/issues/3385)
- Add how to setup development initially in README [#3384](https://github.com/LiskHQ/lisk-sdk/issues/3384)
- Add a script the start a sample application for test [#3383](https://github.com/LiskHQ/lisk-sdk/issues/3383)
- Fix tests in development branch [#3375](https://github.com/LiskHQ/lisk-sdk/issues/3375)
- Newrelic should be optional to run lisk core [#3372](https://github.com/LiskHQ/lisk-sdk/issues/3372)
- Framework is referencing the framework keyword itself [#3366](https://github.com/LiskHQ/lisk-sdk/issues/3366)
- P2P should not connect to itself [#3364](https://github.com/LiskHQ/lisk-sdk/issues/3364)
- Wrong reference of the version from lisk folder [#3361](https://github.com/LiskHQ/lisk-sdk/issues/3361)
- Commander tests failed after product merge [#3360](https://github.com/LiskHQ/lisk-sdk/issues/3360)
- Move Jenkins files to each appropriate folder [#3354](https://github.com/LiskHQ/lisk-sdk/issues/3354)
- Replace ASCII art with image file [#3351](https://github.com/LiskHQ/lisk-sdk/issues/3351)
- Jenkins for sdk need to be fixed according to the new structure [#3350](https://github.com/LiskHQ/lisk-sdk/issues/3350)
- Lisk Post SDK Fixes [#3324](https://github.com/LiskHQ/lisk-sdk/issues/3324)
- Multi-signature registration - Create member accounts [#3313](https://github.com/LiskHQ/lisk-sdk/issues/3313)
- Move exceptions.js file to be part of config.json to simplify config structure [#3309](https://github.com/LiskHQ/lisk-sdk/issues/3309)
- Expose a sample Genesis Block from Framework [#3308](https://github.com/LiskHQ/lisk-sdk/issues/3308)
- Add README for new lisk node commands [#3314](https://github.com/LiskHQ/lisk-sdk/issues/3314)
- Transaction timestamps should be checked against slotNumber [#3297](https://github.com/LiskHQ/lisk-sdk/issues/3297)
- Network tests fail when running more than 2 peers [#3296](https://github.com/LiskHQ/lisk-sdk/issues/3296)
- Error when syncing from scratch at processing genesis block [#3292](https://github.com/LiskHQ/lisk-sdk/issues/3292)
- Wrong options output parameter from api get peers [#3291](https://github.com/LiskHQ/lisk-sdk/issues/3291)
- Align node commands with latest Lisk changes [#3315](https://github.com/LiskHQ/lisk-sdk/issues/3315)
- Implement Unit tests for Chain module [#3285](https://github.com/LiskHQ/lisk-sdk/issues/3285)
- Restructure jest folder [#3282](https://github.com/LiskHQ/lisk-sdk/issues/3282)
- Restore logic of chain recover on sync [#3281](https://github.com/LiskHQ/lisk-sdk/issues/3281)
- Simplify the default value generation for all configurations [#3273](https://github.com/LiskHQ/lisk-sdk/issues/3273)
- Add lisk folder and move all of application related code [#3270](https://github.com/LiskHQ/lisk-sdk/issues/3270)
- Rename framework folder to core [#3269](https://github.com/LiskHQ/lisk-sdk/issues/3269)
- Fix Integration Tests for feature/improve_transaction_efficiency [#3266](https://github.com/LiskHQ/lisk-sdk/issues/3266)
- Adapt network module to use application state [#3260](https://github.com/LiskHQ/lisk-sdk/issues/3260)
- Remove snyk  integration in favour of npm audit [#3252](https://github.com/LiskHQ/lisk-sdk/issues/3252)
- Implement design pattern for protocol change [#3251](https://github.com/LiskHQ/lisk-sdk/issues/3251)
- Functional test GET /accounts fails randomly [#3249](https://github.com/LiskHQ/lisk-sdk/issues/3249)
- Incorrect API responses during snapshotting [#3235](https://github.com/LiskHQ/lisk-sdk/issues/3235)
- Revise list of actions in the chain module [#3230](https://github.com/LiskHQ/lisk-sdk/issues/3230)
- Remove unconfirmed attributes for account in state store [#3212](https://github.com/LiskHQ/lisk-sdk/issues/3212)
- Rename application controller identifier ""lisk"" to ""app"" [#3208](https://github.com/LiskHQ/lisk-sdk/issues/3208)
- Remove invokeAsync() from controller and bus [#3198](https://github.com/LiskHQ/lisk-sdk/issues/3198)
- Make each component/module responsible for validation its configuration [#3196](https://github.com/LiskHQ/lisk-sdk/issues/3196)
- Node inspect can't be run with default child process [#3193](https://github.com/LiskHQ/lisk-sdk/issues/3193)
- All of the Error needs to converted to error object [#3189](https://github.com/LiskHQ/lisk-sdk/issues/3189)
- Add functionality for handling exceptions present in the blockchain [#3181](https://github.com/LiskHQ/lisk-sdk/issues/3181)
- Add test coverage chain module config using commander [#3175](https://github.com/LiskHQ/lisk-sdk/issues/3175)
- Use selected blockchain parameters from framework-level [#3173](https://github.com/LiskHQ/lisk-sdk/issues/3173)
- Create new package.json in application-level [#3172](https://github.com/LiskHQ/lisk-sdk/issues/3172)
- Create and use config.js script merging defaults and custom configuration [#3171](https://github.com/LiskHQ/lisk-sdk/issues/3171)
- Create README for the application-level folder [#3163](https://github.com/LiskHQ/lisk-sdk/issues/3163)
- Create README for the Lisk SDK [#3162](https://github.com/LiskHQ/lisk-sdk/issues/3162)
- Create README for framework [#3161](https://github.com/LiskHQ/lisk-sdk/issues/3161)
- Narrow the list of supported by framework network parameters [#3160](https://github.com/LiskHQ/lisk-sdk/issues/3160)
- Integrate constants.js into chain-specific configuration [#3159](https://github.com/LiskHQ/lisk-sdk/issues/3159)
- Improve module actions security [#3154](https://github.com/LiskHQ/lisk-sdk/issues/3154)
- Prepare README.md files describing the new repositories structure  [#3153](https://github.com/LiskHQ/lisk-sdk/issues/3153)
- Change the API response to return an array of errors [#3152](https://github.com/LiskHQ/lisk-sdk/issues/3152)
- Implement LIP-0006 ""Improve transaction processing efficiency"" [#3150](https://github.com/LiskHQ/lisk-sdk/issues/3150)
- Improve the overall configuration [#3149](https://github.com/LiskHQ/lisk-sdk/issues/3149)
- Update packages versions [#3147](https://github.com/LiskHQ/lisk-sdk/issues/3147)
- Prepare file structure for Lisk application [#3146](https://github.com/LiskHQ/lisk-sdk/issues/3146)
- Move broadhash computation logic from applicationState.update() to chain module [#3141](https://github.com/LiskHQ/lisk-sdk/issues/3141)
- Jest Unit test creates wrong log folder structure [#3139](https://github.com/LiskHQ/lisk-sdk/issues/3139)
- Fix Unit Tests [#3134](https://github.com/LiskHQ/lisk-sdk/issues/3134)
- Rename -s/--snapshot cli parameter [#3119](https://github.com/LiskHQ/lisk-sdk/issues/3119)
- Add tests for file rounds_information.js and round_store.js [#3107](https://github.com/LiskHQ/lisk-sdk/issues/3107)
- Disable type 5 - ""register dapp"" transaction  [#3104](https://github.com/LiskHQ/lisk-sdk/issues/3104)
- Change system component to application state [#3036](https://github.com/LiskHQ/lisk-sdk/issues/3036)
- Allow custom transactions to add custom info to accounts [#3027](https://github.com/LiskHQ/lisk-sdk/issues/3027)
- Temporarily skip failing tests in feature/improve_transactions_processing_efficiency [#3026](https://github.com/LiskHQ/lisk-sdk/issues/3026)
- Improve Lisk Framework UX [#3022](https://github.com/LiskHQ/lisk-sdk/issues/3022)
- Issue with account entity sql file [#3009](https://github.com/LiskHQ/lisk-sdk/issues/3009)
- Refactor undoing transactions and use the new StateStore and transactions library [#3006](https://github.com/LiskHQ/lisk-sdk/issues/3006)
- Merge development into feature branch [#3000](https://github.com/LiskHQ/lisk-sdk/issues/3000)
- Publish an event on the channel when the peerHeaders are updated in the System component [#2997](https://github.com/LiskHQ/lisk-sdk/issues/2997)
- Support ENV vars and command line arguments in application-level  [#2976](https://github.com/LiskHQ/lisk-sdk/issues/2976)
- Update schema validation support for chain module on provided options [#2959](https://github.com/LiskHQ/lisk-sdk/issues/2959)
- Change ""eslint"" and ""prettier --write"" command order in .lintstagedrc.json [#2952](https://github.com/LiskHQ/lisk-sdk/issues/2952)
- Add schema validation support to storage component on provided options [#2950](https://github.com/LiskHQ/lisk-sdk/issues/2950)
- Add schema validation support to cache component on provided options [#2947](https://github.com/LiskHQ/lisk-sdk/issues/2947)
- Remove ""save-prefix"" from .npmrc file [#2944](https://github.com/LiskHQ/lisk-sdk/issues/2944)
- Move rounds related logic from account.merge function to rounds module. [#2942](https://github.com/LiskHQ/lisk-sdk/issues/2942)
- Add schema validation support to system component on provided options [#2940](https://github.com/LiskHQ/lisk-sdk/issues/2940)
- Update Account entity to insert/delete entries in dependent tables for memberPublicKeys and votedDelegatePublicKeys properties [#2938](https://github.com/LiskHQ/lisk-sdk/issues/2938)
- Application should not start without valid blockchain state [#2923](https://github.com/LiskHQ/lisk-sdk/issues/2923)
- Resolve inconsistency in migrations naming [#2916](https://github.com/LiskHQ/lisk-sdk/issues/2916)
- Solve warnings: ""Creating a duplicate QueryFile object for the same file"" [#2911](https://github.com/LiskHQ/lisk-sdk/issues/2911)
- Refactor validating transactions using elements transactions library [#2905](https://github.com/LiskHQ/lisk-sdk/issues/2905)
- Remove rimraf from package.json [#2899](https://github.com/LiskHQ/lisk-sdk/issues/2899)
- Add schema validation support to logger component on provided options [#2898](https://github.com/LiskHQ/lisk-sdk/issues/2898)
- Remove all the P2P related files from chain module [#2883](https://github.com/LiskHQ/lisk-sdk/issues/2883)
- Update DB to save existing peers [#2882](https://github.com/LiskHQ/lisk-sdk/issues/2882)
- Update consensus calculation to use network module and fix the tests [#2881](https://github.com/LiskHQ/lisk-sdk/issues/2881)
- Update node.js in http_api module to use network module and fix the tests [#2880](https://github.com/LiskHQ/lisk-sdk/issues/2880)
- Update api/peer endpoints to use the network module [#2879](https://github.com/LiskHQ/lisk-sdk/issues/2879)
- Update broadcaster to use network module and fix the tests [#2878](https://github.com/LiskHQ/lisk-sdk/issues/2878)
- Update transport module in chain to use network module and fix the tests [#2877](https://github.com/LiskHQ/lisk-sdk/issues/2877)
- Update loader module in chain to use network module and fix the tests [#2875](https://github.com/LiskHQ/lisk-sdk/issues/2875)
- Create new network module [#2874](https://github.com/LiskHQ/lisk-sdk/issues/2874)
- Integrate @liskhq/lisk-p2p module in chain module [#2873](https://github.com/LiskHQ/lisk-sdk/issues/2873)
- Invalid API Response for peers endpoint with sort by height desc [#2861](https://github.com/LiskHQ/lisk-sdk/issues/2861)
- Use transactions elements for validating new multisignature from API and peers [#2859](https://github.com/LiskHQ/lisk-sdk/issues/2859)
- Unconfirmed State Removal - modules/accounts shouldn't mutate unconfirmed state [#2852](https://github.com/LiskHQ/lisk-sdk/issues/2852)
- Unconfirmed State Removal - logic/account.js should not mutate unconfirmed fields when interacting with Account Entity [#2851](https://github.com/LiskHQ/lisk-sdk/issues/2851)
- Only accept integer range values for snapshotting rounds [#2843](https://github.com/LiskHQ/lisk-sdk/issues/2843)
- Remove implementation of all transaction types from logic folder [#2835](https://github.com/LiskHQ/lisk-sdk/issues/2835)
- Refactor fillPool mechanism to get processable transactions from the transaction pool's ready queue [#2833](https://github.com/LiskHQ/lisk-sdk/issues/2833)
- Expose functions from transaction pool module to get queued transactions [#2832](https://github.com/LiskHQ/lisk-sdk/issues/2832)
- Expose functions from transaction pool module to get multi-signature transactions [#2830](https://github.com/LiskHQ/lisk-sdk/issues/2830)
- Refactor transactions pool in lisk-core, and use transactions pool library [#2829](https://github.com/LiskHQ/lisk-sdk/issues/2829)
- Remove usages of applying transaction to unconfirmed state from the application [#2828](https://github.com/LiskHQ/lisk-sdk/issues/2828)
- Remove tables and columns related to unconfirmed state from the database [#2827](https://github.com/LiskHQ/lisk-sdk/issues/2827)
- Use transactions elements for validating schema when receiving a transaction from API and peers [#2826](https://github.com/LiskHQ/lisk-sdk/issues/2826)
- Refactor verifying multi-signatures for transactions and use the new StateStore and transactions library [#2825](https://github.com/LiskHQ/lisk-sdk/issues/2825)
- Refactor applying transactions and use the new StateStore and transactions library [#2824](https://github.com/LiskHQ/lisk-sdk/issues/2824)
- Refactor verifying transactions and use the new StateStore and transactions library [#2823](https://github.com/LiskHQ/lisk-sdk/issues/2823)
- Update checkTransactions function and use StateStore and lisk-element's transactions [#2821](https://github.com/LiskHQ/lisk-sdk/issues/2821)
- Implement StateStore for fetching accounts and transactions and saving updated accounts in the database [#2820](https://github.com/LiskHQ/lisk-sdk/issues/2820)
- Create Proxy class for initializing class instance of transactions defined in lisk-elements. [#2819](https://github.com/LiskHQ/lisk-sdk/issues/2819)
- Move Lisk-specific transaction types to application-level [#2780](https://github.com/LiskHQ/lisk-sdk/issues/2780)
- Refactor current config.json file to be structured in different chunks  [#2577](https://github.com/LiskHQ/lisk-sdk/issues/2577)
- Improve logging system [#2148](https://github.com/LiskHQ/lisk-sdk/issues/2148)
- Fix the invalid filter for fetching dapp account in InTransfer Transaction [#1223](https://github.com/LiskArchive/lisk-elements/issues/1223)
- Recipient account should be created in case it does not exist for OutTransfer transaction [#1222](https://github.com/LiskArchive/lisk-elements/issues/1222)
- OutTransfer transaction should not fail if transaction with id provided in property ""transactionId"" already exists in the database  [#1219](https://github.com/LiskArchive/lisk-elements/issues/1219)
- Transaction validate incorrectly throws error from assetToBytes [#1214](https://github.com/LiskArchive/lisk-elements/issues/1214)
- applyNodeInfo is not adding custom fields anymore [#1209](https://github.com/LiskArchive/lisk-elements/issues/1209)
- Socket protocol error when trying to make outbound connections [#1207](https://github.com/LiskArchive/lisk-elements/issues/1207)
- TransactionError in case of exceeding votes for VoteTransaction has invalid parameters [#1206](https://github.com/LiskArchive/lisk-elements/issues/1206)
- Non required properties for transactions should be allowed to be null/undefined [#1203](https://github.com/LiskArchive/lisk-elements/issues/1203)
- Vote transaction should not throw an error if recipientPublicKey is not preset [#1201](https://github.com/LiskArchive/lisk-elements/issues/1201)
- The P2PPeerSelectionForSendRequest function should receive the current message/request packet as an argument [#1200](https://github.com/LiskArchive/lisk-elements/issues/1200)
- getBytes function should take the first 8 bytes for recipientID if it exceeds uint8 size. [#1198](https://github.com/LiskArchive/lisk-elements/issues/1198)
- Store blockchain specific properties in transaction instances [#1197](https://github.com/LiskArchive/lisk-elements/issues/1197)
- PeekUntil and DequeueUntil does not return transactions in the correct order [#1195](https://github.com/LiskArchive/lisk-elements/issues/1195)
- Multi-signature registration transaction without signatures should have status pending [#1192](https://github.com/LiskArchive/lisk-elements/issues/1192)
- PeerPool should not respond to get peers list [#1186](https://github.com/LiskArchive/lisk-elements/issues/1186)
- Update BigNum to use @liskhq/bignum [#1182](https://github.com/LiskArchive/lisk-elements/issues/1182)
- Negative timestamp should be allowed in transaction [#1179](https://github.com/LiskArchive/lisk-elements/issues/1179)
- UndoAsset for transactions should revert the properties instead of removing them [#1177](https://github.com/LiskArchive/lisk-elements/issues/1177)
- Create addMultisignature function in BaseTransaction [#1176](https://github.com/LiskArchive/lisk-elements/issues/1176)
- Add `blockId` property in base transaction [#1173](https://github.com/LiskArchive/lisk-elements/issues/1173)
- Improve returned errors [#1164](https://github.com/LiskArchive/lisk-elements/issues/1164)
- Adding signatures for a multisignature registration transaction from a second passphrase enabled account fails [#1163](https://github.com/LiskArchive/lisk-elements/issues/1163)
- Transaction should accept null recipientId [#1158](https://github.com/LiskArchive/lisk-elements/issues/1158)
- Transfer should accept undefined asset [#1157](https://github.com/LiskArchive/lisk-elements/issues/1157)
- Transaction receiveAt doesn't match the input/output [#1156](https://github.com/LiskArchive/lisk-elements/issues/1156)
- Cannot send request with rpc-timeout [#1155](https://github.com/LiskArchive/lisk-elements/issues/1155)
- Add a function to connectAndFetch peers to be used in discovery process [#1152](https://github.com/LiskArchive/lisk-elements/issues/1152)
- Dapp transaction should allow type parameter to either be 0 or 1. [#1148](https://github.com/LiskArchive/lisk-elements/issues/1148)
- Second signature registration transaction should update secondSignature flag for account [#1147](https://github.com/LiskArchive/lisk-elements/issues/1147)
- Transaction fee should not be overwritten in the constructor of transactions [#1144](https://github.com/LiskArchive/lisk-elements/issues/1144)
- null recipientPublicKey should not fail validation [#1142](https://github.com/LiskArchive/lisk-elements/issues/1142)
- Multisignature transaction sets property with incorrect casing for multiMin and multiLifetime when applying/undoing transaction. [#1140](https://github.com/LiskArchive/lisk-elements/issues/1140)
- Add lisk-validator library to be used across products and libraries [#1139](https://github.com/LiskArchive/lisk-elements/issues/1139)
- Need a function to resolve peers domain names to their IP addresses [#1138](https://github.com/LiskArchive/lisk-elements/issues/1138)
- Check for network, version, protocol compatibility during handshake [#1137](https://github.com/LiskArchive/lisk-elements/issues/1137)
- Remove babel and eslint setting and suffix and update init command [#1133](https://github.com/LiskArchive/lisk-elements/issues/1133)
- Test custom peer selection in integration tests [#1131](https://github.com/LiskArchive/lisk-elements/issues/1131)
- Allow selection function to use P2PDiscoveredPeerInfo [#1130](https://github.com/LiskArchive/lisk-elements/issues/1130)
- Vote transaction should update the votedDelegatesPublicKeys property for account [#1128](https://github.com/LiskArchive/lisk-elements/issues/1128)
- Multisignature transaction should update the memberPublicKeys property for account [#1125](https://github.com/LiskArchive/lisk-elements/issues/1125)
- Multisignature registration transaction always fails with error: 'Account is not a multisignature' [#1122](https://github.com/LiskArchive/lisk-elements/issues/1122)
- lisk-transaction:validation:schema senderId, recipientId are not required and senderSecondPublicKey is an invalid property [#1121](https://github.com/LiskArchive/lisk-elements/issues/1121)
- Make sure that all P2PNodeInfo/peerHeaders has an options object to support custom properties [#1115](https://github.com/LiskArchive/lisk-elements/issues/1115)
- Cryptography library test are frequently failing [#1114](https://github.com/LiskArchive/lisk-elements/issues/1114)
- Pass peer selection algorithm as an argument to p2p constructor [#1113](https://github.com/LiskArchive/lisk-elements/issues/1113)
- Disallow null character on transfer and dapp transaction [#1108](https://github.com/LiskArchive/lisk-elements/issues/1108)
- Multisignature registration tx not properly pending [#1106](https://github.com/LiskArchive/lisk-elements/issues/1106)
- Transaction returns incorrect error when sender does not have enough balance [#1105](https://github.com/LiskArchive/lisk-elements/issues/1105)
- P2P Integration test randomly fail [#1103](https://github.com/LiskArchive/lisk-elements/issues/1103)
- Add publicKey from sender if it doesn't exist in account [#1099](https://github.com/LiskArchive/lisk-elements/issues/1099)
- Transaction constructor with fee and amount as type numbers should be accepted [#1096](https://github.com/LiskArchive/lisk-elements/issues/1096)
- verifyMultisignatures should fail if account is not multi-signature account but has signatures [#1092](https://github.com/LiskArchive/lisk-elements/issues/1092)
- Add getOrDefault for StateStore.account [#1091](https://github.com/LiskArchive/lisk-elements/issues/1091)
- Add no additional asset properties check for transaction asset field [#1090](https://github.com/LiskArchive/lisk-elements/issues/1090)
- Disconnect old peers, cleanup node and improve timeouts [#1086](https://github.com/LiskArchive/lisk-elements/issues/1086)
- Add stubbing for StateStore tests [#1084](https://github.com/LiskArchive/lisk-elements/issues/1084)
- Need to handle inbound status RPC request [#1082](https://github.com/LiskArchive/lisk-elements/issues/1082)
- Receiving blocks, transactions and signatures from v1 lisk core [#1081](https://github.com/LiskArchive/lisk-elements/issues/1081)
- Implement .toString() function for TransactionError and TransactionMultiError [#1080](https://github.com/LiskArchive/lisk-elements/issues/1080)
- Hoist Dependencies [#1079](https://github.com/LiskArchive/lisk-elements/issues/1079)
- Fix compatibility issues with Core v1.x version [#1077](https://github.com/LiskArchive/lisk-elements/issues/1077)
- Update the name of abstract functions [#1073](https://github.com/LiskArchive/lisk-elements/issues/1073)
- Update P2P header should include options  [#1071](https://github.com/LiskArchive/lisk-elements/issues/1071)
- Update ProtocolPeerInfo format [#1070](https://github.com/LiskArchive/lisk-elements/issues/1070)
- Clean up file structure and name in transaction module [#1063](https://github.com/LiskArchive/lisk-elements/issues/1063)
- Update dev-dependencies and check hoisted [#1062](https://github.com/LiskArchive/lisk-elements/issues/1062)
- Fix package-lock.json for lisk-transactions [#1060](https://github.com/LiskArchive/lisk-elements/issues/1060)
- Change selectPeers function to only handle detailed PeerInfo objects; not live Peer objects [#1059](https://github.com/LiskArchive/lisk-elements/issues/1059)
- The P2P class should not interact directly with Peer instances [#1058](https://github.com/LiskArchive/lisk-elements/issues/1058)
- Remove fromJSON and create function from custom transaction [#1057](https://github.com/LiskArchive/lisk-elements/issues/1057)
- Need a separate peer info interface for basic and detailed peers info [#1055](https://github.com/LiskArchive/lisk-elements/issues/1055)
- Combine validate and validateSchema [#1052](https://github.com/LiskArchive/lisk-elements/issues/1052)
- Remove processRequiredState from transaction [#1051](https://github.com/LiskArchive/lisk-elements/issues/1051)
- Combine apply and verify function [#1050](https://github.com/LiskArchive/lisk-elements/issues/1050)
- Remove unused functions from transactions [#1046](https://github.com/LiskArchive/lisk-elements/issues/1046)
- Add missing unit tests for custom errors in lisk-p2p [#1043](https://github.com/LiskArchive/lisk-elements/issues/1043)
- Add missing unit tests of validation in lisk-p2p [#1038](https://github.com/LiskArchive/lisk-elements/issues/1038)
- Fix typo in transaction pool [#1034](https://github.com/LiskArchive/lisk-elements/issues/1034)
- Calling wrong function in custom transactions [#1033](https://github.com/LiskArchive/lisk-elements/issues/1033)
- Skip Fully connected network integration test and enable Disconnected network test [#1031](https://github.com/LiskArchive/lisk-elements/issues/1031)
- Transaction branch is failing on the build/test [#1025](https://github.com/LiskArchive/lisk-elements/issues/1025)
- Move peer discovery and peer connection related stuff to peer pool [#1019](https://github.com/LiskArchive/lisk-elements/issues/1019)
- Add functions in sanitization to handler ProtocolRPCRequest and ProtocolMessage [#1017](https://github.com/LiskArchive/lisk-elements/issues/1017)
- Create event emitters on adding and removing of transactions for transaction pool [#1013](https://github.com/LiskArchive/lisk-elements/issues/1013)
- Remove local definition of socketcluster-server for close() method [#1010](https://github.com/LiskArchive/lisk-elements/issues/1010)
- Implement Peer connect and event handling for connectAbort and connect [#1008](https://github.com/LiskArchive/lisk-elements/issues/1008)
- Add separate functions to drop inbound and outbound connections [#1005](https://github.com/LiskArchive/lisk-elements/issues/1005)
- Add Socket.destroy() definition and use it instead of disconnect()  [#1004](https://github.com/LiskArchive/lisk-elements/issues/1004)
- Add integration tests for lisk-transaction-pool [#1001](https://github.com/LiskArchive/lisk-elements/issues/1001)
- Fix linting errors in transaction-pool module [#999](https://github.com/LiskArchive/lisk-elements/issues/999)
- Add sign method in base transaction [#997](https://github.com/LiskArchive/lisk-elements/issues/997)
- Update base transaction constructor to accept without id or signature [#995](https://github.com/LiskArchive/lisk-elements/issues/995)
- Use selection algorithm in PeerPool to select peers for send or request [#992](https://github.com/LiskArchive/lisk-elements/issues/992)
- Remove asset field from base transaction [#989](https://github.com/LiskArchive/lisk-elements/issues/989)
- Remove a getters for sockets in Peer class [#987](https://github.com/LiskArchive/lisk-elements/issues/987)
- Implement P2P.getNetworkStatus() functionality [#985](https://github.com/LiskArchive/lisk-elements/issues/985)
- Implement handling of pending signatures and incoming new signatures to multisignature verification flow [#982](https://github.com/LiskArchive/lisk-elements/issues/982)
- Request status and apply status on peer [#981](https://github.com/LiskArchive/lisk-elements/issues/981)
- Implement p2p level send and request methods [#980](https://github.com/LiskArchive/lisk-elements/issues/980)
- Use discoverPeers function in p2p for discovery [#979](https://github.com/LiskArchive/lisk-elements/issues/979)
- Use selectForConnection in P2P [#978](https://github.com/LiskArchive/lisk-elements/issues/978)
- Update getRequiredAttributes function in BaseTransaction [#975](https://github.com/LiskArchive/lisk-elements/issues/975)
- Integration tests are not properly terminated [#973](https://github.com/LiskArchive/lisk-elements/issues/973)
- Make current integration tests pass [#971](https://github.com/LiskArchive/lisk-elements/issues/971)
- Use socket cluster types definitions [#969](https://github.com/LiskArchive/lisk-elements/issues/969)
- Add functionality for getting processable transactions [#964](https://github.com/LiskArchive/lisk-elements/issues/964)
- Fix the bug in verifying validated transactions [#963](https://github.com/LiskArchive/lisk-elements/issues/963)
- Timeout for tests on Jenkins [#960](https://github.com/LiskArchive/lisk-elements/issues/960)
- Cleaner separation of different kinds of logic for lisk-p2p  [#958](https://github.com/LiskArchive/lisk-elements/issues/958)
- Update tests for Base Transaction Class [#956](https://github.com/LiskArchive/lisk-elements/issues/956)
- Fetch Peers method in Peer class to get all the peers [#954](https://github.com/LiskArchive/lisk-elements/issues/954)
- Add integration tests for discovery for lisk-p2p [#953](https://github.com/LiskArchive/lisk-elements/issues/953)
- new crypto method ""getAddressFromPrivateKey"" [#952](https://github.com/LiskArchive/lisk-elements/issues/952)
- Add Base Transaction `isExpired` [#947](https://github.com/LiskArchive/lisk-elements/issues/947)
- Add Base Transaction `undo` [#946](https://github.com/LiskArchive/lisk-elements/issues/946)
- Add Base Transaction `apply` [#945](https://github.com/LiskArchive/lisk-elements/issues/945)
- Add Base Transaction `checkTypes` [#944](https://github.com/LiskArchive/lisk-elements/issues/944)
- Add Base Transaction `verify` [#943](https://github.com/LiskArchive/lisk-elements/issues/943)
- Add Base Transaction `validate` [#942](https://github.com/LiskArchive/lisk-elements/issues/942)
- Add Base Transaction `checkSchema` [#941](https://github.com/LiskArchive/lisk-elements/issues/941)
- Add validation for unknown types in p2p [#938](https://github.com/LiskArchive/lisk-elements/issues/938)
- Add metrics to calculate the performance of transaction pool [#937](https://github.com/LiskArchive/lisk-elements/issues/937)
- Consider disabling esModuleInterop [#933](https://github.com/LiskArchive/lisk-elements/issues/933)
- Add connect/disconnect function to peer [#932](https://github.com/LiskArchive/lisk-elements/issues/932)
- Add selectForConnection function to P2P [#931](https://github.com/LiskArchive/lisk-elements/issues/931)
- Select peers doesn't always give 'n' number of peers requested [#925](https://github.com/LiskArchive/lisk-elements/issues/925)
- Update to Node.js 8.14.0; use 'npm ci' [#921](https://github.com/LiskArchive/lisk-elements/issues/921)
- Remove unused Jenkinsfile [#920](https://github.com/LiskArchive/lisk-elements/issues/920)
- Define socket cluster types [#918](https://github.com/LiskArchive/lisk-elements/issues/918)
- Add higher order filter functions for queues in transaction pool [#911](https://github.com/LiskArchive/lisk-elements/issues/911)
- Add black/white/fixed listing for p2p initialization [#899](https://github.com/LiskArchive/lisk-elements/issues/899)
- Add send/request data mechanism [#897](https://github.com/LiskArchive/lisk-elements/issues/897)
- Add receive data and handle response mechanism [#896](https://github.com/LiskArchive/lisk-elements/issues/896)
- Add initialization function, constructor, start() and stop() [#895](https://github.com/LiskArchive/lisk-elements/issues/895)
- Add peer management mechanism [#894](https://github.com/LiskArchive/lisk-elements/issues/894)
- Add basic discovery algorithm for lisk-p2p [#893](https://github.com/LiskArchive/lisk-elements/issues/893)
- Add foundation of network testing for lisk-p2p [#892](https://github.com/LiskArchive/lisk-elements/issues/892)
- Add peer selection algorithm for lisk-p2p [#891](https://github.com/LiskArchive/lisk-elements/issues/891)
- Create package and setup boilerplate for lisk-p2p [#890](https://github.com/LiskArchive/lisk-elements/issues/890)
- Add OutTransfer Transactions class [#889](https://github.com/LiskArchive/lisk-elements/issues/889)
- Add InTransferTransaction class [#888](https://github.com/LiskArchive/lisk-elements/issues/888)
- Add DappTransaction class [#887](https://github.com/LiskArchive/lisk-elements/issues/887)
- Add MultiSignatureTransaction class [#886](https://github.com/LiskArchive/lisk-elements/issues/886)
- Add VoteTransaction class [#885](https://github.com/LiskArchive/lisk-elements/issues/885)
- Add DelegateTransaction class [#884](https://github.com/LiskArchive/lisk-elements/issues/884)
- Add SecondSignatureTransaction class [#883](https://github.com/LiskArchive/lisk-elements/issues/883)
- Add TransferTransaction class [#882](https://github.com/LiskArchive/lisk-elements/issues/882)
- Add functionality to process transactions in transaction pool [#881](https://github.com/LiskArchive/lisk-elements/issues/881)
- Add functionality to verify transactions in transaction pool [#880](https://github.com/LiskArchive/lisk-elements/issues/880)
- Add functionality to validate transactions in transaction pool [#879](https://github.com/LiskArchive/lisk-elements/issues/879)
- Add functionality to enqueue transaction from a peer [#878](https://github.com/LiskArchive/lisk-elements/issues/878)
- Add functionality to enqueue transaction from a client [#877](https://github.com/LiskArchive/lisk-elements/issues/877)
- Add functionality to handle multi-signature transaction in transaction pool [#876](https://github.com/LiskArchive/lisk-elements/issues/876)
- Add functionality to expire transactions in transaction pool [#875](https://github.com/LiskArchive/lisk-elements/issues/875)
- Add BaseTransaction implementation [#874](https://github.com/LiskArchive/lisk-elements/issues/874)
- Define listeners for transaction pool related events [#873](https://github.com/LiskArchive/lisk-elements/issues/873)
- Add functionality to move transaction between queues for transaction pool [#872](https://github.com/LiskArchive/lisk-elements/issues/872)
- Add data structure for queues and corresponding hashmaps for transaction pool [#871](https://github.com/LiskArchive/lisk-elements/issues/871)
- Create package and setup boilerplate for lisk-transaction-pool [#870](https://github.com/LiskArchive/lisk-elements/issues/870)
- Improve node management terminology / description [#705](https://github.com/LiskArchive/lisk-commander/issues/705)
- Add unit tests for src/utils/node [#703](https://github.com/LiskArchive/lisk-commander/issues/703)
- Improve UX of node management commands [#700](https://github.com/LiskArchive/lisk-commander/issues/700)
- Improve Lister UI presentation [#699](https://github.com/LiskArchive/lisk-commander/issues/699)
- Add node:logs command [#692](https://github.com/LiskArchive/lisk-commander/issues/692)
- Add node:migrate command [#691](https://github.com/LiskArchive/lisk-commander/issues/691)
- Add node:upgrade command [#690](https://github.com/LiskArchive/lisk-commander/issues/690)
- Add node:status command [#689](https://github.com/LiskArchive/lisk-commander/issues/689)
- Add node:list command [#688](https://github.com/LiskArchive/lisk-commander/issues/688)
- Add node:stop command [#687](https://github.com/LiskArchive/lisk-commander/issues/687)
- Add node:start command [#686](https://github.com/LiskArchive/lisk-commander/issues/686)
- Add node:uninstall command [#685](https://github.com/LiskArchive/lisk-commander/issues/685)
- Add node:install command [#684](https://github.com/LiskArchive/lisk-commander/issues/684)


**Merged pull requests:**
- Fix: Readme typo [#3850](https://github.com/LiskHQ/lisk-sdk/pull/3850) ([Tschakki](https://github.com/Tschakki))
- Fix disappearing broadcasts from broadcaster queue - Closes #3809 [#3831](https://github.com/LiskHQ/lisk-sdk/pull/3831) ([SargeKhan](https://github.com/SargeKhan))
- Lisk 2.0.0 protocol rejects with incompatible protocol version for nodes with version <= 1.4.1 - Closes #3799 [#3802](https://github.com/LiskHQ/lisk-sdk/pull/3802) ([jondubois](https://github.com/jondubois))
- Fix readme contribution section - Closes #3796 [#3797](https://github.com/LiskHQ/lisk-sdk/pull/3797) ([mitsujutsu](https://github.com/mitsujutsu))
- Fix peerInfo update events across p2p lib - Closes #3624 [#3790](https://github.com/LiskHQ/lisk-sdk/pull/3790) ([ishantiw](https://github.com/ishantiw))
- Add contribution section for development and testing of sdk - Closes #3645 [#3785](https://github.com/LiskHQ/lisk-sdk/pull/3785) ([ishantiw](https://github.com/ishantiw))
- Unprocessed transactions were not added to empty or non full blocks - Closes #3624 [#3763](https://github.com/LiskHQ/lisk-sdk/pull/3763) ([SargeKhan](https://github.com/SargeKhan))
- Update framework image [#3761](https://github.com/LiskHQ/lisk-sdk/pull/3761) ([shuse2](https://github.com/shuse2))
- Update dependency for npm audit [#3760](https://github.com/LiskHQ/lisk-sdk/pull/3760) ([shuse2](https://github.com/shuse2))
- Use mergeWith to overwrite array elements in config properly - Closes #3723 [#3759](https://github.com/LiskHQ/lisk-sdk/pull/3759) ([ishantiw](https://github.com/ishantiw))
- getTransactionFromNetwork does not serialize the transaction input - Closes #3738 [#3742](https://github.com/LiskHQ/lisk-sdk/pull/3742) ([lsilvs](https://github.com/lsilvs))
- Fix failure to generate block within delegate slot due to Inadequate broadhash consensus - Closes #3687 & #3682 [#3741](https://github.com/LiskHQ/lisk-sdk/pull/3741) ([diego-G](https://github.com/diego-G))
- Too many self connect errors from P2P [#3733](https://github.com/LiskHQ/lisk-sdk/pull/3733) ([ishantiw](https://github.com/ishantiw))
- API returns incorrect error for postTransactions - Closes #3586 [#3731](https://github.com/LiskHQ/lisk-sdk/pull/3731) ([pablitovicente](https://github.com/pablitovicente))
- Add README for new lisk node commands - Closes #3314 [#3718](https://github.com/LiskHQ/lisk-sdk/pull/3718) ([ManuGowda](https://github.com/ManuGowda))
- Add defualt create value for asset field - Closes #3715 [#3716](https://github.com/LiskHQ/lisk-sdk/pull/3716) ([michielmulders](https://github.com/michielmulders))
- Fix unnecessary logs to be lower - Closes #3703 [#3712](https://github.com/LiskHQ/lisk-sdk/pull/3712) ([shuse2](https://github.com/shuse2))
- Remove unused config - Closes #3710 [#3711](https://github.com/LiskHQ/lisk-sdk/pull/3711) ([shuse2](https://github.com/shuse2))
- P2P does not consider broadcastLimit - Closes #3690 [#3708](https://github.com/LiskHQ/lisk-sdk/pull/3708) ([jondubois](https://github.com/jondubois))
- Invalid monitoring logs for bus activity - Closes #3545 [#3707](https://github.com/LiskHQ/lisk-sdk/pull/3707) ([pablitovicente](https://github.com/pablitovicente))
- Confirmations value in block is NaN - Close #3688 [#3706](https://github.com/LiskHQ/lisk-sdk/pull/3706) ([pablitovicente](https://github.com/pablitovicente))
- P2P errors while sync on testnet - Closes #3651 [#3705](https://github.com/LiskHQ/lisk-sdk/pull/3705) ([ishantiw](https://github.com/ishantiw))
- Do not require nonce when broadcasting any object - Close #3699 [#3700](https://github.com/LiskHQ/lisk-sdk/pull/3700) ([diego-G](https://github.com/diego-G))
- Remove nonce from WSBlocksBroadcast schema definition - Closes #3687 [#3689](https://github.com/LiskHQ/lisk-sdk/pull/3689) ([diego-G](https://github.com/diego-G))
- commander core:install command hangs after installation - Closes #3676 [#3677](https://github.com/LiskHQ/lisk-sdk/pull/3677) ([ManuGowda](https://github.com/ManuGowda))
- Remove redundant handler check in Bus - Closes #3669 [#3670](https://github.com/LiskHQ/lisk-sdk/pull/3670) ([yatki](https://github.com/yatki))
- Reuse wsPort of Peer to validate its incoming status - Closes #3666 [#3667](https://github.com/LiskHQ/lisk-sdk/pull/3667) ([ishantiw](https://github.com/ishantiw))
- Commander failed to install lisk core - Closes #3642 [#3662](https://github.com/LiskHQ/lisk-sdk/pull/3662) ([ManuGowda](https://github.com/ManuGowda))
- Remove first paragraph - Closes #3156 [#3656](https://github.com/LiskHQ/lisk-sdk/pull/3656) ([Tschakki](https://github.com/Tschakki))
- Commander failed to install lisk core - Closes #3642 [#3655](https://github.com/LiskHQ/lisk-sdk/pull/3655) ([ManuGowda](https://github.com/ManuGowda))
- Add identifier for ambiguous column reference asset - Closes #3639 [#3654](https://github.com/LiskHQ/lisk-sdk/pull/3654) ([michielmulders](https://github.com/michielmulders))
- ""Error writing cache count for transactions - Cache Disabled"" when /api/node/status is called - Closes #2482 [#3653](https://github.com/LiskHQ/lisk-sdk/pull/3653) ([pablitovicente](https://github.com/pablitovicente))
- Discovery is too reliant on seed peers - Closes #3643 [#3652](https://github.com/LiskHQ/lisk-sdk/pull/3652) ([jondubois](https://github.com/jondubois))
- Change log level of relevant network events to debug - Closes #3623 [#3647](https://github.com/LiskHQ/lisk-sdk/pull/3647) ([ishantiw](https://github.com/ishantiw))
- Unprocessed transactions were not added to empty or non full blocks - Closes #3624 [#3646](https://github.com/LiskHQ/lisk-sdk/pull/3646) ([SargeKhan](https://github.com/SargeKhan))
- Expose `validateTransferAmount` and `validateNonTransferAmount` from elements - Closes #3640 [#3641](https://github.com/LiskHQ/lisk-sdk/pull/3641) ([SargeKhan](https://github.com/SargeKhan))
- Fix typo in the string of the `receivedQueue` constant [#3637](https://github.com/LiskHQ/lisk-sdk/pull/3637) ([SargeKhan](https://github.com/SargeKhan))
- Fix unstable broadhash consensus - Closes#3574 [#3634](https://github.com/LiskHQ/lisk-sdk/pull/3634) ([ishantiw](https://github.com/ishantiw))
- Process status shows undefined in Lisk Application - Closes #3621 [#3630](https://github.com/LiskHQ/lisk-sdk/pull/3630) ([nazarhussain](https://github.com/nazarhussain))
- Update framework components readme - Closes #3158 [#3629](https://github.com/LiskHQ/lisk-sdk/pull/3629) ([Tschakki](https://github.com/Tschakki))
- Update framework modules readme - Closes #3157 [#3628](https://github.com/LiskHQ/lisk-sdk/pull/3628) ([Tschakki](https://github.com/Tschakki))
- Node fail to sync when block contains multisignature transaction - Closes #3612 [#3626](https://github.com/LiskHQ/lisk-sdk/pull/3626) ([SargeKhan](https://github.com/SargeKhan))
- Add validated queue count to api/node/status - Closes #3609 [#3625](https://github.com/LiskHQ/lisk-sdk/pull/3625) ([pablitovicente](https://github.com/pablitovicente))
- confirmed transaction count not returned when cache is disabled - Close #3618 [#3619](https://github.com/LiskHQ/lisk-sdk/pull/3619) ([pablitovicente](https://github.com/pablitovicente))
- Merge release2.0.0 into development 20190514 [#3617](https://github.com/LiskHQ/lisk-sdk/pull/3617) ([pablitovicente](https://github.com/pablitovicente))
- Update newrelic package - Closes #3608 [#3611](https://github.com/LiskHQ/lisk-sdk/pull/3611) ([shuse2](https://github.com/shuse2))
- Refactor entry modules - Closes #3580 [#3605](https://github.com/LiskHQ/lisk-sdk/pull/3605) ([shuse2](https://github.com/shuse2))
- Inconsistent cache behavior - error when cache enabled - Closes #3600 [#3603](https://github.com/LiskHQ/lisk-sdk/pull/3603) ([pablitovicente](https://github.com/pablitovicente))
- For future compatibility, we need to allow receiving RPCs and events on the outbound socket - Closes #3582 [#3599](https://github.com/LiskHQ/lisk-sdk/pull/3599) ([jondubois](https://github.com/jondubois))
- Update banners - Closes #3596 [#3597](https://github.com/LiskHQ/lisk-sdk/pull/3597) ([shuse2](https://github.com/shuse2))
- Node doesn't sync with the network - Closes #3577 [#3595](https://github.com/LiskHQ/lisk-sdk/pull/3595) ([jondubois](https://github.com/jondubois))
- Fix loader expectation and add configs - Closes #3591 [#3592](https://github.com/LiskHQ/lisk-sdk/pull/3592) ([shuse2](https://github.com/shuse2))
- Fix insufficient balance log - Closes #3578 [#3590](https://github.com/LiskHQ/lisk-sdk/pull/3590) ([mitsujutsu](https://github.com/mitsujutsu))
- Fix broadcaster usage for transaction - Closes #3588 [#3589](https://github.com/LiskHQ/lisk-sdk/pull/3589) ([shuse2](https://github.com/shuse2))
- Unstable broadhash due to stale info about peers in `getNetworkStatus()` [#3587](https://github.com/LiskHQ/lisk-sdk/pull/3587) ([ishantiw](https://github.com/ishantiw))
- Reject incoming connection if IP is blacklisted - Closes #3581 [#3585](https://github.com/LiskHQ/lisk-sdk/pull/3585) ([diego-G](https://github.com/diego-G))
- Loader module does not have processTransactions module - Closes #3583 [#3584](https://github.com/LiskHQ/lisk-sdk/pull/3584) ([pablitovicente](https://github.com/pablitovicente))
- API node/status transactions section given invalid results - Closes #3531 [#3575](https://github.com/LiskHQ/lisk-sdk/pull/3575) ([pablitovicente](https://github.com/pablitovicente))
- Remove the temporary ""/lisk"" directory - Closes #3572 [#3573](https://github.com/LiskHQ/lisk-sdk/pull/3573) ([MaciejBaj](https://github.com/MaciejBaj))
- Warning: A promise was created but was not returned from it - Closes #3546 [#3554](https://github.com/LiskHQ/lisk-sdk/pull/3554) ([nazarhussain](https://github.com/nazarhussain))
- Integration tests fail at lisk-p2p lib [#3550](https://github.com/LiskHQ/lisk-sdk/pull/3550) ([ishantiw](https://github.com/ishantiw))
- Pg-monitor doesn't show database level events in logs - Closes #3541 [#3547](https://github.com/LiskHQ/lisk-sdk/pull/3547) ([nazarhussain](https://github.com/nazarhussain))
- Create lisk sdk package - Closes #3441 [#3542](https://github.com/LiskHQ/lisk-sdk/pull/3542) ([shuse2](https://github.com/shuse2))
- Transactions not being instantiated on block receive - Closes #3535 [#3537](https://github.com/LiskHQ/lisk-sdk/pull/3537) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Improve actions security - Closes #3154 [#3530](https://github.com/LiskHQ/lisk-sdk/pull/3530) ([michielmulders](https://github.com/michielmulders))
- Reference to application specific setting should be removed from framework - Closes #3402 [#3527](https://github.com/LiskHQ/lisk-sdk/pull/3527) ([yatki](https://github.com/yatki))
- Remove dependencies - Closes #3508 [#3510](https://github.com/LiskHQ/lisk-sdk/pull/3510) ([shuse2](https://github.com/shuse2))
- Remove unnecessary logs - Closes #3507 [#3509](https://github.com/LiskHQ/lisk-sdk/pull/3509) ([shuse2](https://github.com/shuse2))
- Application do not close properly on cleanup [#3505](https://github.com/LiskHQ/lisk-sdk/pull/3505) ([ishantiw](https://github.com/ishantiw))
- Move Lisk-specific transaction types to application-level - Closes #2780 [#3498](https://github.com/LiskHQ/lisk-sdk/pull/3498) ([lsilvs](https://github.com/lsilvs))
- Modify boolean validation logic env - Closes #3495 [#3496](https://github.com/LiskHQ/lisk-sdk/pull/3496) ([michielmulders](https://github.com/michielmulders))
- Disable type 5 - ""register dapp"" transaction - Closes #3104 [#3491](https://github.com/LiskHQ/lisk-sdk/pull/3491) ([lsilvs](https://github.com/lsilvs))
- Bug fix ENV and Args passed via CLI - Closes #3475 [#3490](https://github.com/LiskHQ/lisk-sdk/pull/3490) ([michielmulders](https://github.com/michielmulders))
- Rename action and event format for the Network module - Closes #3476 [#3488](https://github.com/LiskHQ/lisk-sdk/pull/3488) ([jondubois](https://github.com/jondubois))
- Review prettier setting for overall SDK structure - Closes #3401 [#3487](https://github.com/LiskHQ/lisk-sdk/pull/3487) ([yatki](https://github.com/yatki))
- Snapshot fails on Dapp registration - Closes #3325 [#3486](https://github.com/LiskHQ/lisk-sdk/pull/3486) ([SargeKhan](https://github.com/SargeKhan))
- Remove network related config from Chain module - Closes #3484 [#3485](https://github.com/LiskHQ/lisk-sdk/pull/3485) ([lsilvs](https://github.com/lsilvs))
- Remove unused constants and files - Closes #3463 [#3483](https://github.com/LiskHQ/lisk-sdk/pull/3483) ([pablitovicente](https://github.com/pablitovicente))
- Add script to start test app - Closes #3383 [#3481](https://github.com/LiskHQ/lisk-sdk/pull/3481) ([shuse2](https://github.com/shuse2))
- Add license header - Closes #3462 [#3480](https://github.com/LiskHQ/lisk-sdk/pull/3480) ([shuse2](https://github.com/shuse2))
- Update module name - Closes #3467 [#3479](https://github.com/LiskHQ/lisk-sdk/pull/3479) ([shuse2](https://github.com/shuse2))
- Fix network config - Closes #3466 [#3478](https://github.com/LiskHQ/lisk-sdk/pull/3478) ([shuse2](https://github.com/shuse2))
- Remove VError usage - Closes #3406 [#3477](https://github.com/LiskHQ/lisk-sdk/pull/3477) ([mitsujutsu](https://github.com/mitsujutsu))
- Un-skip verify integration tests - Closes #3473 [#3474](https://github.com/LiskHQ/lisk-sdk/pull/3474) ([pablitovicente](https://github.com/pablitovicente))
- Move the application-level project to TypeScript - Closes #3391 [#3471](https://github.com/LiskHQ/lisk-sdk/pull/3471) ([yatki](https://github.com/yatki))
- Merge Feature/create network module [#3465](https://github.com/LiskHQ/lisk-sdk/pull/3465) ([shuse2](https://github.com/shuse2))
- Update folder structure and name - #3424 [#3464](https://github.com/LiskHQ/lisk-sdk/pull/3464) ([shuse2](https://github.com/shuse2))
- Change state store not to be singleton - Partially closes #3403 [#3461](https://github.com/LiskHQ/lisk-sdk/pull/3461) ([shuse2](https://github.com/shuse2))
- Fix skipped integration tests for second_signature and delegates [#3460](https://github.com/LiskHQ/lisk-sdk/pull/3460) ([mitsujutsu](https://github.com/mitsujutsu))
- Provide a default database name of the Storage component [#3459](https://github.com/LiskHQ/lisk-sdk/pull/3459) ([MaciejBaj](https://github.com/MaciejBaj))
- Disable network test - Closes #3296 [#3458](https://github.com/LiskHQ/lisk-sdk/pull/3458) ([shuse2](https://github.com/shuse2))
- Logging does not work for storage component - Closes #3455 [#3456](https://github.com/LiskHQ/lisk-sdk/pull/3456) ([nazarhussain](https://github.com/nazarhussain))
- Merge development into network feature [#3453](https://github.com/LiskHQ/lisk-sdk/pull/3453) ([shuse2](https://github.com/shuse2))
- Move exceptions.js file to be part of config.json to simplify config structure - Closes #3309 [#3451](https://github.com/LiskHQ/lisk-sdk/pull/3451) ([nazarhussain](https://github.com/nazarhussain))
- Start application only for tests requiring it - Closes #3449 [#3450](https://github.com/LiskHQ/lisk-sdk/pull/3450) ([fchavant](https://github.com/fchavant))
- Fix commander with latest framework changes - Closes #3315 [#3448](https://github.com/LiskHQ/lisk-sdk/pull/3448) ([ManuGowda](https://github.com/ManuGowda))
- Save and load tried peers to/from database in network module [#3446](https://github.com/LiskHQ/lisk-sdk/pull/3446) ([ishantiw](https://github.com/ishantiw))
- Fix config for network module [#3445](https://github.com/LiskHQ/lisk-sdk/pull/3445) ([jondubois](https://github.com/jondubois))
- Merge Feature/improve transactions processing efficiency [#3440](https://github.com/LiskHQ/lisk-sdk/pull/3440) ([shuse2](https://github.com/shuse2))
- Revisit skipped test in improve transaction processing efficiency - Closes #3404 [#3439](https://github.com/LiskHQ/lisk-sdk/pull/3439) ([pablitovicente](https://github.com/pablitovicente))
- App label validation fail when app.label is not given - Closes #3437 [#3438](https://github.com/LiskHQ/lisk-sdk/pull/3438) ([lsilvs](https://github.com/lsilvs))
- NewRelic does not show the proper network name - Closes #3435 [#3436](https://github.com/LiskHQ/lisk-sdk/pull/3436) ([nazarhussain](https://github.com/nazarhussain))
- Use getNodeStatus to retrieve lastBlock in HTTP API [#3434](https://github.com/LiskHQ/lisk-sdk/pull/3434) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Re-enable hoist option for bootstrap - Closes #3425 [#3430](https://github.com/LiskHQ/lisk-sdk/pull/3430) ([shuse2](https://github.com/shuse2))
- New network module receive connection id not match error alot - Closes #3417 [#3428](https://github.com/LiskHQ/lisk-sdk/pull/3428) ([jondubois](https://github.com/jondubois))
- Validate overflowed string in transfer asset data [#3427](https://github.com/LiskHQ/lisk-sdk/pull/3427) ([mitsujutsu](https://github.com/mitsujutsu))
- Fix to use updated function - Closes #3418 [#3423](https://github.com/LiskHQ/lisk-sdk/pull/3423) ([shuse2](https://github.com/shuse2))
- Revise list of actions in Chain module [#3422](https://github.com/LiskHQ/lisk-sdk/pull/3422) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Fix new exception config - Closes #3419 [#3421](https://github.com/LiskHQ/lisk-sdk/pull/3421) ([shuse2](https://github.com/shuse2))
- Fix snapshotting validation and rewrite -s to --rebuild - Closes #2843, #3119 [#3420](https://github.com/LiskHQ/lisk-sdk/pull/3420) ([michielmulders](https://github.com/michielmulders))
- Replace logger with bunyan - Closes #2148 [#3416](https://github.com/LiskHQ/lisk-sdk/pull/3416) ([shuse2](https://github.com/shuse2))
- Add custom data column for accounts entity - Closes #3027 [#3412](https://github.com/LiskHQ/lisk-sdk/pull/3412) ([michielmulders](https://github.com/michielmulders))
- Fix network test to be able to run after product merge - Closes #3408 [#3410](https://github.com/LiskHQ/lisk-sdk/pull/3410) ([pablitovicente](https://github.com/pablitovicente))
- Fix commander slow test execution [#3400](https://github.com/LiskHQ/lisk-sdk/pull/3400) ([shuse2](https://github.com/shuse2))
- Fix jenkins test order [#3399](https://github.com/LiskHQ/lisk-sdk/pull/3399) ([shuse2](https://github.com/shuse2))
- Fix tests in development branch - Closes #3375 [#3398](https://github.com/LiskHQ/lisk-sdk/pull/3398) ([pablitovicente](https://github.com/pablitovicente))
- Run network tests under framework/ - Closes #3397 [#3395](https://github.com/LiskHQ/lisk-sdk/pull/3395) ([fchavant](https://github.com/fchavant))
- Add validation for app state - Closes #2940 [#3386](https://github.com/LiskHQ/lisk-sdk/pull/3386) ([michielmulders](https://github.com/michielmulders))
- P2P should not connect to itself - Closes #3364 [#3382](https://github.com/LiskHQ/lisk-sdk/pull/3382) ([jondubois](https://github.com/jondubois))
- Remove redundant .eslintrc.test.json - Closes #3380 [#3381](https://github.com/LiskHQ/lisk-sdk/pull/3381) ([yatki](https://github.com/yatki))
- Fix test tsconfig reference for commander [#3379](https://github.com/LiskHQ/lisk-sdk/pull/3379) ([shuse2](https://github.com/shuse2))
- Update precommit & prepush hooks in the root level - Closes #3371 [#3378](https://github.com/LiskHQ/lisk-sdk/pull/3378) ([yatki](https://github.com/yatki))
- Restructure jest folder - Closes #3282 [#3376](https://github.com/LiskHQ/lisk-sdk/pull/3376) ([yatki](https://github.com/yatki))
- Create and use config.js script merging defaults and custom configuration - Closes #3171 [#3373](https://github.com/LiskHQ/lisk-sdk/pull/3373) ([nazarhussain](https://github.com/nazarhussain))
- Update jenkins after sdk merge - Closes #3350 [#3370](https://github.com/LiskHQ/lisk-sdk/pull/3370) ([fchavant](https://github.com/fchavant))
- Implement Unit tests for Chain module - Closes #3285 [#3369](https://github.com/LiskHQ/lisk-sdk/pull/3369) ([yatki](https://github.com/yatki))
- Fix framework reference - Closes #3366 [#3367](https://github.com/LiskHQ/lisk-sdk/pull/3367) ([shuse2](https://github.com/shuse2))
- Expose a sample Genesis Block from Framework [#3365](https://github.com/LiskHQ/lisk-sdk/pull/3365) ([MaciejBaj](https://github.com/MaciejBaj))
- Remove snyk setting - Closes #3252 [#3363](https://github.com/LiskHQ/lisk-sdk/pull/3363) ([shuse2](https://github.com/shuse2))
- Fix version reference for lisk-framework - Closes #3361 [#3362](https://github.com/LiskHQ/lisk-sdk/pull/3362) ([shuse2](https://github.com/shuse2))
- Multi-signature registration - Create member accounts - Closes #3313 [#3357](https://github.com/LiskHQ/lisk-sdk/pull/3357) ([pablitovicente](https://github.com/pablitovicente))
- Move jenkins file to related folder - Closes #3354 [#3355](https://github.com/LiskHQ/lisk-sdk/pull/3355) ([shuse2](https://github.com/shuse2))
- Add image to the READMEs - Closes #3351 [#3352](https://github.com/LiskHQ/lisk-sdk/pull/3352) ([shuse2](https://github.com/shuse2))
- Update broadcaster to use network module - Close #2878 [#3312](https://github.com/LiskHQ/lisk-sdk/pull/3312) ([diego-G](https://github.com/diego-G))
- Merge development into network module [#3307](https://github.com/LiskHQ/lisk-sdk/pull/3307) ([shuse2](https://github.com/shuse2))
- Promisified dns lookup returns inconsistant results - Closes#3303 [#3305](https://github.com/LiskHQ/lisk-sdk/pull/3305) ([ManuGowda](https://github.com/ManuGowda))
- Restore logic of chain recover on sync - Closes #3281 [#3301](https://github.com/LiskHQ/lisk-sdk/pull/3301) ([jondubois](https://github.com/jondubois))
- Merge development into feature branch [#3300](https://github.com/LiskHQ/lisk-sdk/pull/3300) ([jondubois](https://github.com/jondubois))
- Update transport to use network module - Closes #2877 [#3295](https://github.com/LiskHQ/lisk-sdk/pull/3295) ([shuse2](https://github.com/shuse2))
- Implement design pattern for protocol change - Closes #3251 [#3294](https://github.com/LiskHQ/lisk-sdk/pull/3294) ([lsilvs](https://github.com/lsilvs))
- Helm Chart for lisk-core - Closes #2986 [#3293](https://github.com/LiskHQ/lisk-sdk/pull/3293) ([psychopenguin](https://github.com/psychopenguin))
- Update calculateConsensus() to use network module - Closes #2881 [#3290](https://github.com/LiskHQ/lisk-sdk/pull/3290) ([diego-G](https://github.com/diego-G))
- Solve warnings: ""Creating a duplicate QueryFile object for the same file"" - Closes #2911 [#3289](https://github.com/LiskHQ/lisk-sdk/pull/3289) ([yatki](https://github.com/yatki))
- Simplify the default value generation for all configurations - Closes #3273 [#3288](https://github.com/LiskHQ/lisk-sdk/pull/3288) ([nazarhussain](https://github.com/nazarhussain))
- Fix functional and unit tests - Closes #3152 [#3287](https://github.com/LiskHQ/lisk-sdk/pull/3287) ([mitsujutsu](https://github.com/mitsujutsu))
- Functional tests don't stop with SIGINT - Closes #3098 [#3284](https://github.com/LiskHQ/lisk-sdk/pull/3284) ([yatki](https://github.com/yatki))
- Add validation initialState - Invalid [#3283](https://github.com/LiskHQ/lisk-sdk/pull/3283) ([michielmulders](https://github.com/michielmulders))
- Fix snapshotting validation and rewrite -s to --rebuild [#3277](https://github.com/LiskHQ/lisk-sdk/pull/3277) ([michielmulders](https://github.com/michielmulders))
- Narrow parameter list for end user - Closes #3160 [#3275](https://github.com/LiskHQ/lisk-sdk/pull/3275) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Merge development into feature/create_network_module [#3272](https://github.com/LiskHQ/lisk-sdk/pull/3272) ([diego-G](https://github.com/diego-G))
- Fix sorting function accounts API - Closes #3249 [#3271](https://github.com/LiskHQ/lisk-sdk/pull/3271) ([michielmulders](https://github.com/michielmulders))
- Fix Integration Tests - Closes #3266 [#3268](https://github.com/LiskHQ/lisk-sdk/pull/3268) ([pablitovicente](https://github.com/pablitovicente))
- Move Lisk-specific transaction types to application-level - Closes #2780 [#3267](https://github.com/LiskHQ/lisk-sdk/pull/3267) ([lsilvs](https://github.com/lsilvs))
- Adapt network module to new applicaton state - Closes #3260 [#3261](https://github.com/LiskHQ/lisk-sdk/pull/3261) ([diego-G](https://github.com/diego-G))
- Rename 'lisk' to 'app' ID for controller - Closes #3208 [#3258](https://github.com/LiskHQ/lisk-sdk/pull/3258) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Implement pending unit tests for in memory channel [#3254](https://github.com/LiskHQ/lisk-sdk/pull/3254) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Fix to call error properly [#3250](https://github.com/LiskHQ/lisk-sdk/pull/3250) ([shuse2](https://github.com/shuse2))
- Convert error strings to objects - Closes #3189  [#3248](https://github.com/LiskHQ/lisk-sdk/pull/3248) ([mitsujutsu](https://github.com/mitsujutsu))
- Move broadhash computation to chain module - Close #3141 [#3247](https://github.com/LiskHQ/lisk-sdk/pull/3247) ([diego-G](https://github.com/diego-G))
- Modify validation chain and update config.json - Closes #2959 [#3246](https://github.com/LiskHQ/lisk-sdk/pull/3246) ([michielmulders](https://github.com/michielmulders))
- Update loader module in chain to use network module and fix the tests - Closes #2875 [#3243](https://github.com/LiskHQ/lisk-sdk/pull/3243) ([jondubois](https://github.com/jondubois))
- Fix failing func test for /account API - Closes #3239 [#3241](https://github.com/LiskHQ/lisk-sdk/pull/3241) ([michielmulders](https://github.com/michielmulders))
- Fix lintstage setting to check eslint after prettier - Closes #2952 [#3238](https://github.com/LiskHQ/lisk-sdk/pull/3238) ([shuse2](https://github.com/shuse2))
- Remove rimraf from dependency - Closes #2899 [#3237](https://github.com/LiskHQ/lisk-sdk/pull/3237) ([shuse2](https://github.com/shuse2))
- Fix npmrc settting - Closes #2944 [#3236](https://github.com/LiskHQ/lisk-sdk/pull/3236) ([shuse2](https://github.com/shuse2))
- Broadcast verified transactions among peers in feature/improve_transaction_processing - Closes #3190 [#3234](https://github.com/LiskHQ/lisk-sdk/pull/3234) ([pablitovicente](https://github.com/pablitovicente))
- Rewrite reserved keywords [#3232](https://github.com/LiskHQ/lisk-sdk/pull/3232) ([michielmulders](https://github.com/michielmulders))
- Add int range for snapshotting - Closes #2843 [#3231](https://github.com/LiskHQ/lisk-sdk/pull/3231) ([michielmulders](https://github.com/michielmulders))
- Remove topAccounts from config file - Closes #2592 [#3223](https://github.com/LiskHQ/lisk-sdk/pull/3223) ([lsilvs](https://github.com/lsilvs))
- Remove unconfirmed attributes for account in state store - Closes #3212 [#3213](https://github.com/LiskHQ/lisk-sdk/pull/3213) ([SargeKhan](https://github.com/SargeKhan))
- Change jest:unit test folder structure [#3209](https://github.com/LiskHQ/lisk-sdk/pull/3209) ([michielmulders](https://github.com/michielmulders))
- Add secondary key for ordering API /accounts - Closes #2854 [#3204](https://github.com/LiskHQ/lisk-sdk/pull/3204) ([michielmulders](https://github.com/michielmulders))
- Add unit and integration tests for rounds and round state store - Closes #3107 [#3203](https://github.com/LiskHQ/lisk-sdk/pull/3203) ([mitsujutsu](https://github.com/mitsujutsu))
- Add functionality for handling exceptions present in the blockchain - Closes #3181 [#3195](https://github.com/LiskHQ/lisk-sdk/pull/3195) ([SargeKhan](https://github.com/SargeKhan))
- Node inspect can't be run with default child process - Closes #3193 [#3194](https://github.com/LiskHQ/lisk-sdk/pull/3194) ([pablitovicente](https://github.com/pablitovicente))
- Remove attributes related to the unconfirmed state from the API - Closes #3183 [#3187](https://github.com/LiskHQ/lisk-sdk/pull/3187) ([pablitovicente](https://github.com/pablitovicente))
- Update api peer endpoints use network module - Closes#2879 [#3180](https://github.com/LiskHQ/lisk-sdk/pull/3180) ([ishantiw](https://github.com/ishantiw))
- Add minimal test coverage config commander -  Closes #3175 [#3178](https://github.com/LiskHQ/lisk-sdk/pull/3178) ([michielmulders](https://github.com/michielmulders))
- Fix Unit Tests - Closes #3134 [#3169](https://github.com/LiskHQ/lisk-sdk/pull/3169) ([pablitovicente](https://github.com/pablitovicente))
- Fix integration test for transactions in branch: feature/improve_transactions_processing_efficiency - Closes #3143 [#3166](https://github.com/LiskHQ/lisk-sdk/pull/3166) ([SargeKhan](https://github.com/SargeKhan))
- Remove implementation of all transaction types and Remove unconfirmed state from database - Closes #2835, #2828 [#3144](https://github.com/LiskHQ/lisk-sdk/pull/3144) ([SargeKhan](https://github.com/SargeKhan))
- Process incoming signatures using statestore and elements - Closes #2825 [#3130](https://github.com/LiskHQ/lisk-sdk/pull/3130) ([mitsujutsu](https://github.com/mitsujutsu))
- Fix votes calculated for delegates in round - Closes #3107 [#3108](https://github.com/LiskHQ/lisk-sdk/pull/3108) ([SargeKhan](https://github.com/SargeKhan))
- Merge development into feature branch - Closes #3084 [#3086](https://github.com/LiskHQ/lisk-sdk/pull/3086) ([pablitovicente](https://github.com/pablitovicente))
- Convert system component to a general application state - Closes #3036 [#3076](https://github.com/LiskHQ/lisk-sdk/pull/3076) ([diego-G](https://github.com/diego-G))
- Updating memberPublicKeys property for account does not work if the updated value is an empty array - Closes #3063 [#3064](https://github.com/LiskHQ/lisk-sdk/pull/3064) ([SargeKhan](https://github.com/SargeKhan))
- Refactor transactions pool in lisk-core, and use transactions pool library - Closes #2829 [#3049](https://github.com/LiskHQ/lisk-sdk/pull/3049) ([SargeKhan](https://github.com/SargeKhan))
- Block has no scope bind and transport validation is failing - Closes #3037 [#3038](https://github.com/LiskHQ/lisk-sdk/pull/3038) ([pablitovicente](https://github.com/pablitovicente))
- Remove applyUnconfirmedStep and undoUnconfirmedStep from the applyBlock and deleteLastBlock functions - Closes #3025 [#3025](https://github.com/LiskHQ/lisk-sdk/pull/3025) ([SargeKhan](https://github.com/SargeKhan))
- Integrate @liskhq/lisk-p2p module in chain module - Closes #2874 [#3019](https://github.com/LiskHQ/lisk-sdk/pull/3019) ([jondubois](https://github.com/jondubois))
- Refactor undoing transactions and use the new StateStore and transactions library - Closes #3006 [#3015](https://github.com/LiskHQ/lisk-sdk/pull/3015) ([pablitovicente](https://github.com/pablitovicente))
- Issue with account entity sql file - Close #3009 [#3010](https://github.com/LiskHQ/lisk-sdk/pull/3010) ([pablitovicente](https://github.com/pablitovicente))
- Merge development into feature branch - Closes #3000 [#3003](https://github.com/LiskHQ/lisk-sdk/pull/3003) ([pablitovicente](https://github.com/pablitovicente))
- Refactor applying transactions and use the new StateStore and transactions library - Closes #2824 [#3002](https://github.com/LiskHQ/lisk-sdk/pull/3002) ([SargeKhan](https://github.com/SargeKhan))
- Support ENV vars and console parameters in application-level - Closes #2976 [#2977](https://github.com/LiskHQ/lisk-sdk/pull/2977) ([nazarhussain](https://github.com/nazarhussain))
- Refactor transaction validation in block normalization - Closes #2905 [#2960](https://github.com/LiskHQ/lisk-sdk/pull/2960) ([mitsujutsu](https://github.com/mitsujutsu))
- Move rounds related logic from account.merge function to rounds module - Closes #2942 [#2958](https://github.com/LiskHQ/lisk-sdk/pull/2958) ([SargeKhan](https://github.com/SargeKhan))
- Update Account entity to insert/delete entries in dependent tables for memberPublicKeys and votedDelegatePublicKeys properties - Closes #2938 [#2941](https://github.com/LiskHQ/lisk-sdk/pull/2941) ([pablitovicente](https://github.com/pablitovicente))
- Refactor current config.json file to be structured in different chunks - Closes #2577 [#2937](https://github.com/LiskHQ/lisk-sdk/pull/2937) ([nazarhussain](https://github.com/nazarhussain))
- Refactor verify in generation of new blocks - Closes #2823 [#2925](https://github.com/LiskHQ/lisk-sdk/pull/2925) ([mitsujutsu](https://github.com/mitsujutsu))
- Remove tables and columns related to unconfirmed state from the database - Closes #2827 [#2906](https://github.com/LiskHQ/lisk-sdk/pull/2906) ([pablitovicente](https://github.com/pablitovicente))
- Update checkTransactions function and use StateStore and lisk-element's transactions [#2892](https://github.com/LiskHQ/lisk-sdk/pull/2892) ([SargeKhan](https://github.com/SargeKhan))
- Unconfirmed State Removal - logic/account.js should not mutate unconfirmed fields when interacting with Account Entity - Closes #2851 [#2872](https://github.com/LiskHQ/lisk-sdk/pull/2872) ([pablitovicente](https://github.com/pablitovicente))
- Implement StateStore for fetching accounts and transactions and saving updated accounts in the database - Closes #2820 [#2871](https://github.com/LiskHQ/lisk-sdk/pull/2871) ([SargeKhan](https://github.com/SargeKhan))
- Validate received tx using elements - Closes #2826 [#2860](https://github.com/LiskHQ/lisk-sdk/pull/2860) ([mitsujutsu](https://github.com/mitsujutsu))
- Unconfirmed State Removal - Account entity should not mutate unconfirmed columns - Closes #2850 [#2856](https://github.com/LiskHQ/lisk-sdk/pull/2856) ([pablitovicente](https://github.com/pablitovicente))
- Add transaction proxy class - Closes #2819 [#2853](https://github.com/LiskHQ/lisk-sdk/pull/2853) ([mitsujutsu](https://github.com/mitsujutsu))
- The P2PPeerSelectionForSendRequest function should receive the current message/request packet as an argument - Closes #1200 [#1231](https://github.com/LiskArchive/lisk-elements/pull/1231) ([jondubois](https://github.com/jondubois))
- Multi-signature registration - Create member accounts - Closes #1227 [#1230](https://github.com/LiskArchive/lisk-elements/pull/1230) ([pablitovicente](https://github.com/pablitovicente))
- fix dappId constraint [#1229](https://github.com/LiskArchive/lisk-elements/pull/1229) ([SargeKhan](https://github.com/SargeKhan))
- Deduct amount from account for exception vote transactions  - Closes #1215 [#1218](https://github.com/LiskArchive/lisk-elements/pull/1218) ([mitsujutsu](https://github.com/mitsujutsu))
- Fix validation of asset data - Closes #1214 [#1216](https://github.com/LiskArchive/lisk-elements/pull/1216) ([mitsujutsu](https://github.com/mitsujutsu))
- Integration tests failing randomly due to low timeout - Closes#1103 [#1211](https://github.com/LiskArchive/lisk-elements/pull/1211) ([ishantiw](https://github.com/ishantiw))
- applyNodeInfo is not adding custom fields anymore - Closes #1209 [#1210](https://github.com/LiskArchive/lisk-elements/pull/1210) ([jondubois](https://github.com/jondubois))
- Improve error datapath for vote transaction [#1208](https://github.com/LiskArchive/lisk-elements/pull/1208) ([shuse2](https://github.com/shuse2))
- Fix to slice bytes exceeds uint64 for recipientId [#1205](https://github.com/LiskArchive/lisk-elements/pull/1205) ([shuse2](https://github.com/shuse2))
- Convert optional field null to undefined [#1204](https://github.com/LiskArchive/lisk-elements/pull/1204) ([shuse2](https://github.com/shuse2))
- Remove the requirement for recipient_public_key property for vote transaction [#1202](https://github.com/LiskArchive/lisk-elements/pull/1202) ([SargeKhan](https://github.com/SargeKhan))
- Update transaction to hold blockchain related property [#1199](https://github.com/LiskArchive/lisk-elements/pull/1199) ([shuse2](https://github.com/shuse2))
- Fix the order of elements returned from peekUntil and dequeueUntil - Closes #1195 [#1196](https://github.com/LiskArchive/lisk-elements/pull/1196) ([SargeKhan](https://github.com/SargeKhan))
- Default to pending for multisig registration transaction - Closes #1192 [#1193](https://github.com/LiskArchive/lisk-elements/pull/1193) ([mitsujutsu](https://github.com/mitsujutsu))
- Update existsInTransactionPool function parameters and use id instead of transaction object  [#1191](https://github.com/LiskArchive/lisk-elements/pull/1191) ([SargeKhan](https://github.com/SargeKhan))
- Check for network, version, protocol compatibility during handshake - Closes#1137 [#1189](https://github.com/LiskArchive/lisk-elements/pull/1189) ([ishantiw](https://github.com/ishantiw))
- Update to BigNum to use @liskhq/bignum - Closes #1182 [#1188](https://github.com/LiskArchive/lisk-elements/pull/1188) ([shuse2](https://github.com/shuse2))
- PeerPool should not respond to get peers list - Closes#1186 [#1187](https://github.com/LiskArchive/lisk-elements/pull/1187) ([ishantiw](https://github.com/ishantiw))
- Add lisk validator - Closes #1139 [#1185](https://github.com/LiskArchive/lisk-elements/pull/1185) ([shuse2](https://github.com/shuse2))
- Create addMultisignature function in BaseTransaction - Closes #1176 [#1183](https://github.com/LiskArchive/lisk-elements/pull/1183) ([pablitovicente](https://github.com/pablitovicente))
- Fix undo to reset value not to strip - #Closes 1177 [#1181](https://github.com/LiskArchive/lisk-elements/pull/1181) ([shuse2](https://github.com/shuse2))
- Fix timestamp validation - Closes #1179 [#1180](https://github.com/LiskArchive/lisk-elements/pull/1180) ([shuse2](https://github.com/shuse2))
- Improve error message and not throw in constructor - Closes #1164 [#1178](https://github.com/LiskArchive/lisk-elements/pull/1178) ([shuse2](https://github.com/shuse2))
- Integration test custom peer select functions - Closes1131 [#1175](https://github.com/LiskArchive/lisk-elements/pull/1175) ([ishantiw](https://github.com/ishantiw))
- Add blockId to base transaction [#1174](https://github.com/LiskArchive/lisk-elements/pull/1174) ([shuse2](https://github.com/shuse2))
- Add connectAndFetchPeers and new Discovery function Closes#1152 [#1170](https://github.com/LiskArchive/lisk-elements/pull/1170) ([ishantiw](https://github.com/ishantiw))
- Fix bug with processing multisignature transaction from a second signature enabled account - Closes #1163 [#1169](https://github.com/LiskArchive/lisk-elements/pull/1169) ([SargeKhan](https://github.com/SargeKhan))
- Expose function for adding pending transaction in transaction pool [#1168](https://github.com/LiskArchive/lisk-elements/pull/1168) ([SargeKhan](https://github.com/SargeKhan))
- When adding transaction, the transaction pool should return the name of the queue along with the status - Closes #1166 [#1167](https://github.com/LiskArchive/lisk-elements/pull/1167) ([SargeKhan](https://github.com/SargeKhan))
- Change recipientId to accept null - Closes #1158 [#1161](https://github.com/LiskArchive/lisk-elements/pull/1161) ([shuse2](https://github.com/shuse2))
- Fix type 0 transaction to accept undefined asset - Closes #1157 [#1160](https://github.com/LiskArchive/lisk-elements/pull/1160) ([shuse2](https://github.com/shuse2))
- Fix receivedAt to use iso date format as input and store as date - Closes #1156 [#1159](https://github.com/LiskArchive/lisk-elements/pull/1159) ([shuse2](https://github.com/shuse2))
- Second signature registration transaction should update secondSignature flag for account - Closes #1147 [#1151](https://github.com/LiskArchive/lisk-elements/pull/1151) ([pablitovicente](https://github.com/pablitovicente))
- Dapp transaction should allow type parameter to either be 0 or 1. - Closes #1148 [#1149](https://github.com/LiskArchive/lisk-elements/pull/1149) ([pablitovicente](https://github.com/pablitovicente))
- Fix fee property not to be set in the constructor - Closes #1144 [#1146](https://github.com/LiskArchive/lisk-elements/pull/1146) ([shuse2](https://github.com/shuse2))
- null recipientPublicKey should not fail validation - Closes #1142 [#1143](https://github.com/LiskArchive/lisk-elements/pull/1143) ([pablitovicente](https://github.com/pablitovicente))
- Fix account property name - Closes #1140 [#1141](https://github.com/LiskArchive/lisk-elements/pull/1141) ([shuse2](https://github.com/shuse2))
- Fix multisignature double check - Closes #1122 [#1136](https://github.com/LiskArchive/lisk-elements/pull/1136) ([shuse2](https://github.com/shuse2))
- Fix init script and template - Closes #1133 [#1134](https://github.com/LiskArchive/lisk-elements/pull/1134) ([shuse2](https://github.com/shuse2))
- Update P2PPeerInfo to contain discovered peer info and options field Closes#1130 [#1132](https://github.com/LiskArchive/lisk-elements/pull/1132) ([ishantiw](https://github.com/ishantiw))
- Vote transaction should update the votedDelegatesPublicKeys property for account - Closes #1128 [#1129](https://github.com/LiskArchive/lisk-elements/pull/1129) ([pablitovicente](https://github.com/pablitovicente))
- Multisignature transaction should update the memberPublicKeys property for account - Closes #1125 [#1126](https://github.com/LiskArchive/lisk-elements/pull/1126) ([pablitovicente](https://github.com/pablitovicente))
- Add scenarios in integration tests relevant to lisk-p2p [#1124](https://github.com/LiskArchive/lisk-elements/pull/1124) ([ishantiw](https://github.com/ishantiw))
- lisk-transaction:validation:schema senderId, recipientId are not required and senderSecondPublicKey is an invalid property - Closes #1121 [#1123](https://github.com/LiskArchive/lisk-elements/pull/1123) ([pablitovicente](https://github.com/pablitovicente))
- Allow custom peer selection function to be passed and used in P2P - Closes#1113 [#1119](https://github.com/LiskArchive/lisk-elements/pull/1119) ([ishantiw](https://github.com/ishantiw))
- Fix timeout for cryptography [#1118](https://github.com/LiskArchive/lisk-elements/pull/1118) ([shuse2](https://github.com/shuse2))
- Make sure that all P2PNodeInfo/peerHeaders has an options object to support custom properties - Closes #1115 [#1117](https://github.com/LiskArchive/lisk-elements/pull/1117) ([jondubois](https://github.com/jondubois))
- Add hoist option to bootstrap [#1116](https://github.com/LiskArchive/lisk-elements/pull/1116) ([shuse2](https://github.com/shuse2))
- Multisignature registration sets to pending when signatures missing - Closes #1106  [#1110](https://github.com/LiskArchive/lisk-elements/pull/1110) ([mitsujutsu](https://github.com/mitsujutsu))
- Validate null character - Closes #1108 [#1109](https://github.com/LiskArchive/lisk-elements/pull/1109) ([shuse2](https://github.com/shuse2))
- Remove duplicate balance error - Closes #1105 [#1107](https://github.com/LiskArchive/lisk-elements/pull/1107) ([mitsujutsu](https://github.com/mitsujutsu))
- Disconnect old peers, cleanup node and improve timeouts - Closes #1086 [#1104](https://github.com/LiskArchive/lisk-elements/pull/1104) ([jondubois](https://github.com/jondubois))
- Add check for additional asset fields - Closes #1090 [#1102](https://github.com/LiskArchive/lisk-elements/pull/1102) ([mitsujutsu](https://github.com/mitsujutsu))
- Add publicKey in base transaction - Closes #1099 [#1101](https://github.com/LiskArchive/lisk-elements/pull/1101) ([mitsujutsu](https://github.com/mitsujutsu))
- Add stubbing to state store tests - Closes #1084  [#1100](https://github.com/LiskArchive/lisk-elements/pull/1100) ([mitsujutsu](https://github.com/mitsujutsu))
- Revert getOrDefault for state store [#1098](https://github.com/LiskArchive/lisk-elements/pull/1098) ([shuse2](https://github.com/shuse2))
- Change to allow number for fee and amount in constructor [#1097](https://github.com/LiskArchive/lisk-elements/pull/1097) ([shuse2](https://github.com/shuse2))
- Add discovery process - Closes #900 [#1095](https://github.com/LiskArchive/lisk-elements/pull/1095) ([jondubois](https://github.com/jondubois))
- Add check for non multisignature account - Closes #1092 [#1094](https://github.com/LiskArchive/lisk-elements/pull/1094) ([shuse2](https://github.com/shuse2))
- Add get or default to explicitly get the default account [#1093](https://github.com/LiskArchive/lisk-elements/pull/1093) ([shuse2](https://github.com/shuse2))
- Update error to contain detail info when thrown - Closes#1080 [#1089](https://github.com/LiskArchive/lisk-elements/pull/1089) ([shuse2](https://github.com/shuse2))
- Update abstract function to have consistent name - Closes #1073 [#1088](https://github.com/LiskArchive/lisk-elements/pull/1088) ([shuse2](https://github.com/shuse2))
- Cleanup file structure and unused functions - Closes #1063 & #1046 [#1087](https://github.com/LiskArchive/lisk-elements/pull/1087) ([shuse2](https://github.com/shuse2))
- Need to handle inbound status RPC request - Closes #1082 [#1085](https://github.com/LiskArchive/lisk-elements/pull/1085) ([jondubois](https://github.com/jondubois))
- Receiving blocks, transactions and signatures from v1 lisk core - Closes #1081 [#1083](https://github.com/LiskArchive/lisk-elements/pull/1083) ([jondubois](https://github.com/jondubois))
- Fix compatibility issues with Core v1.x version - Closes #1077 [#1078](https://github.com/LiskArchive/lisk-elements/pull/1078) ([jondubois](https://github.com/jondubois))
- Update dependencies - Closes #1062 [#1076](https://github.com/LiskArchive/lisk-elements/pull/1076) ([pablitovicente](https://github.com/pablitovicente))
- Update P2P header should include options - Closes #1071 [#1075](https://github.com/LiskArchive/lisk-elements/pull/1075) ([jondubois](https://github.com/jondubois))
- Update ProtocolPeerInfo format - Closes #1070 [#1074](https://github.com/LiskArchive/lisk-elements/pull/1074) ([jondubois](https://github.com/jondubois))
- Add integration tests for P2P library - Closes #1068 [#1069](https://github.com/LiskArchive/lisk-elements/pull/1069) ([jondubois](https://github.com/jondubois))
- Change selectPeers function to only handle detailed PeerInfo objects; not live Peer objects Closes#1059 [#1067](https://github.com/LiskArchive/lisk-elements/pull/1067) ([ishantiw](https://github.com/ishantiw))
- Need a separate peer info interface for basic and detailed peers info - Closes#1055 [#1066](https://github.com/LiskArchive/lisk-elements/pull/1066) ([ishantiw](https://github.com/ishantiw))
- Remove fromJSON and create function from custom transaction - Closes #1057 [#1065](https://github.com/LiskArchive/lisk-elements/pull/1065) ([pablitovicente](https://github.com/pablitovicente))
- Clean up and combine apply and verify function - Closes #1050 [#1064](https://github.com/LiskArchive/lisk-elements/pull/1064) ([shuse2](https://github.com/shuse2))
- Fix package-lock.json for lisk-transactions - Closes #1060 [#1061](https://github.com/LiskArchive/lisk-elements/pull/1061) ([pablitovicente](https://github.com/pablitovicente))
- Remove processRequiredState and add StateStore - Closes #1051 [#1056](https://github.com/LiskArchive/lisk-elements/pull/1056) ([shuse2](https://github.com/shuse2))
- Update package-lock.json [#1054](https://github.com/LiskArchive/lisk-elements/pull/1054) ([shuse2](https://github.com/shuse2))
- Add missing unit tests for custom errors in lisk-p2p - Closes#1043 [#1049](https://github.com/LiskArchive/lisk-elements/pull/1049) ([ishantiw](https://github.com/ishantiw))
- Make current integration tests pass - Closes #971 and addresses #900 [#1048](https://github.com/LiskArchive/lisk-elements/pull/1048) ([jondubois](https://github.com/jondubois))
- Fix build for removed functions [#1045](https://github.com/LiskArchive/lisk-elements/pull/1045) ([shuse2](https://github.com/shuse2))
- Add multisignature class - Closes #886 [#1044](https://github.com/LiskArchive/lisk-elements/pull/1044) ([mitsujutsu](https://github.com/mitsujutsu))
- Add missing unit tests of validation in lisk-p2p - Closes#1038 [#1042](https://github.com/LiskArchive/lisk-elements/pull/1042) ([ishantiw](https://github.com/ishantiw))
- Add getAddressFromPrivateKey - Closes #952 [#1041](https://github.com/LiskArchive/lisk-elements/pull/1041) ([shuse2](https://github.com/shuse2))
- Add performance tests for queues - Closes #937 [#1040](https://github.com/LiskArchive/lisk-elements/pull/1040) ([SargeKhan](https://github.com/SargeKhan))
- Fix the bug in verifying validated transactions - Closes #963 [#1039](https://github.com/LiskArchive/lisk-elements/pull/1039) ([SargeKhan](https://github.com/SargeKhan))
- Fix type definition in test for transaction-pool [#1037](https://github.com/LiskArchive/lisk-elements/pull/1037) ([shuse2](https://github.com/shuse2))
- Fix to call super.verify - Closes #1033 [#1036](https://github.com/LiskArchive/lisk-elements/pull/1036) ([shuse2](https://github.com/shuse2))
- Fix typo in transaction pool - Closes #1034 [#1035](https://github.com/LiskArchive/lisk-elements/pull/1035) ([SargeKhan](https://github.com/SargeKhan))
- Skip Fully connected network integration test and enable Disconnected network test - Closes#1031 [#1032](https://github.com/LiskArchive/lisk-elements/pull/1032) ([ishantiw](https://github.com/ishantiw))
- Implement peer connect and event handling [#1030](https://github.com/LiskArchive/lisk-elements/pull/1030) ([ishantiw](https://github.com/ishantiw))
- Add delegate registration class - Closes #884 [#1029](https://github.com/LiskArchive/lisk-elements/pull/1029) ([mitsujutsu](https://github.com/mitsujutsu))
- Add second passphrase class - Closes #883 [#1028](https://github.com/LiskArchive/lisk-elements/pull/1028) ([mitsujutsu](https://github.com/mitsujutsu))
- Fix test for tx-pool and tx library [#1027](https://github.com/LiskArchive/lisk-elements/pull/1027) ([shuse2](https://github.com/shuse2))
- Create event emitters on adding and removing of transactions for transaction pool - Closes #1013 [#1026](https://github.com/LiskArchive/lisk-elements/pull/1026) ([SargeKhan](https://github.com/SargeKhan))
- Add out transfer transaction - Closes #889 [#1024](https://github.com/LiskArchive/lisk-elements/pull/1024) ([shuse2](https://github.com/shuse2))
- Move peer discovery and peer connection related stuff to peer pool - Closes#1019 [#1023](https://github.com/LiskArchive/lisk-elements/pull/1023) ([ishantiw](https://github.com/ishantiw))
- Add receive data and handle response mechanism - Closes #896 and #981 [#1022](https://github.com/LiskArchive/lisk-elements/pull/1022) ([jondubois](https://github.com/jondubois))
- Remove local definition of socketcluster-server for close() method - Closes#1010 [#1021](https://github.com/LiskArchive/lisk-elements/pull/1021) ([ishantiw](https://github.com/ishantiw))
- Add functions in sanitization to handler ProtocolRPCRequest and ProtocolMessage - Closes#1017 [#1020](https://github.com/LiskArchive/lisk-elements/pull/1020) ([ishantiw](https://github.com/ishantiw))
- Add integration tests for lisk-transaction pool - Closes #1001 [#1018](https://github.com/LiskArchive/lisk-elements/pull/1018) ([SargeKhan](https://github.com/SargeKhan))
- Fix the functionality of checkTransactionForRecipientId - Closes #1015 [#1016](https://github.com/LiskArchive/lisk-elements/pull/1016) ([SargeKhan](https://github.com/SargeKhan))
- Add separate functions to drop inbound and outbound connections -Closes #1005 [#1014](https://github.com/LiskArchive/lisk-elements/pull/1014) ([ishantiw](https://github.com/ishantiw))
- Add receive data and handle response mechanism - Addresses #896 [#1012](https://github.com/LiskArchive/lisk-elements/pull/1012) ([jondubois](https://github.com/jondubois))
- Add Socket.destroy() definition and use it instead of disconnect() - Closes#1004 [#1011](https://github.com/LiskArchive/lisk-elements/pull/1011) ([ishantiw](https://github.com/ishantiw))
- Add InTransfer transaction [#1009](https://github.com/LiskArchive/lisk-elements/pull/1009) ([shuse2](https://github.com/shuse2))
- Add dapp transaction - Closes #887 [#1006](https://github.com/LiskArchive/lisk-elements/pull/1006) ([shuse2](https://github.com/shuse2))
- Use selection algorithm in PeerPool to select peers for send or request [#1003](https://github.com/LiskArchive/lisk-elements/pull/1003) ([ishantiw](https://github.com/ishantiw))
- Add transfer transaction class - Closes #882 [#1002](https://github.com/LiskArchive/lisk-elements/pull/1002) ([mitsujutsu](https://github.com/mitsujutsu))
- Fix linting errors in lisk-transaction-pool package - Closes #999 [#1000](https://github.com/LiskArchive/lisk-elements/pull/1000) ([SargeKhan](https://github.com/SargeKhan))
- Add sign transaction feature in BaseTransaction [#998](https://github.com/LiskArchive/lisk-elements/pull/998) ([shuse2](https://github.com/shuse2))
- Allow empty id and signature for constructor - Closes #995 [#996](https://github.com/LiskArchive/lisk-elements/pull/996) ([shuse2](https://github.com/shuse2))
- Add functionality for handling pending transactions - Closes #876 [#994](https://github.com/LiskArchive/lisk-elements/pull/994) ([SargeKhan](https://github.com/SargeKhan))
- Use peer selection to choose peers for connection in p2p - Closes#978 [#993](https://github.com/LiskArchive/lisk-elements/pull/993) ([ishantiw](https://github.com/ishantiw))
- Use discover peers function in p2p - Closes#979 [#991](https://github.com/LiskArchive/lisk-elements/pull/991) ([ishantiw](https://github.com/ishantiw))
- Remove asset field from base transaction - Closes #989 [#990](https://github.com/LiskArchive/lisk-elements/pull/990) ([shuse2](https://github.com/shuse2))
- Remove a getters for sockets in peer class - Closes#987 [#988](https://github.com/LiskArchive/lisk-elements/pull/988) ([ishantiw](https://github.com/ishantiw))
- Implement P2P.getNetworkStatus() functionality - Closes #985 and #897, addresses #896 and #953 [#986](https://github.com/LiskArchive/lisk-elements/pull/986) ([jondubois](https://github.com/jondubois))
- Implement handling of pending signatures in verifyMultisignatures [#984](https://github.com/LiskArchive/lisk-elements/pull/984) ([mitsujutsu](https://github.com/mitsujutsu))
- Update required attributes - Closes #975 [#983](https://github.com/LiskArchive/lisk-elements/pull/983) ([shuse2](https://github.com/shuse2))
- Add Vote Transaction - Closes #885 [#976](https://github.com/LiskArchive/lisk-elements/pull/976) ([shuse2](https://github.com/shuse2))
- Integration tests are not properly terminated - Closes#973 [#974](https://github.com/LiskArchive/lisk-elements/pull/974) ([ishantiw](https://github.com/ishantiw))
- Use socket cluster types definitions - Closes#969 [#972](https://github.com/LiskArchive/lisk-elements/pull/972) ([ishantiw](https://github.com/ishantiw))
- Add select function to p2p connection - Closes#931 [#968](https://github.com/LiskArchive/lisk-elements/pull/968) ([ishantiw](https://github.com/ishantiw))
- Add functionality for getting processable transactions - Closes #964 [#966](https://github.com/LiskArchive/lisk-elements/pull/966) ([SargeKhan](https://github.com/SargeKhan))
- Add black/white/fixed listing for p2p initialization - Closes#967 [#965](https://github.com/LiskArchive/lisk-elements/pull/965) ([ishantiw](https://github.com/ishantiw))
- Add functionality for processing transactions - Closes #881 [#962](https://github.com/LiskArchive/lisk-elements/pull/962) ([SargeKhan](https://github.com/SargeKhan))
- Jenkinsfile: enforce 10 minutes timeout for tests - Closes #960 [#961](https://github.com/LiskArchive/lisk-elements/pull/961) ([fchavant](https://github.com/fchavant))
- Base transaction tests - Closes #956 [#957](https://github.com/LiskArchive/lisk-elements/pull/957) ([mitsujutsu](https://github.com/mitsujutsu))
- Add functionality for verifing validated transactions - Closes #880 [#955](https://github.com/LiskArchive/lisk-elements/pull/955) ([SargeKhan](https://github.com/SargeKhan))
- Add functionality for validating received transactions - Closes #879 [#951](https://github.com/LiskArchive/lisk-elements/pull/951) ([SargeKhan](https://github.com/SargeKhan))
- Need to add rules to tslint.json to account for recent discussion/meeting about rules - Closes #949 [#950](https://github.com/LiskArchive/lisk-elements/pull/950) ([jondubois](https://github.com/jondubois))
- Add functionality for enqueuing transaction from client - Closes #877 [#948](https://github.com/LiskArchive/lisk-elements/pull/948) ([SargeKhan](https://github.com/SargeKhan))
- Add validation and helper for rpc response - Closes#938 [#940](https://github.com/LiskArchive/lisk-elements/pull/940) ([ishantiw](https://github.com/ishantiw))
- Initialization start(), stop() and peer management - Addresses #894, #895, #932, #897 [#936](https://github.com/LiskArchive/lisk-elements/pull/936) ([jondubois](https://github.com/jondubois))
- Disable esModuleInterop setting - Closes #993 [#935](https://github.com/LiskArchive/lisk-elements/pull/935) ([shuse2](https://github.com/shuse2))
- Add functionality for enqueuing transaction from peers [#929](https://github.com/LiskArchive/lisk-elements/pull/929) ([SargeKhan](https://github.com/SargeKhan))
- Add functionality for expiring transactions - Closes #875 [#928](https://github.com/LiskArchive/lisk-elements/pull/928) ([SargeKhan](https://github.com/SargeKhan))
- Add type definition for socketcluster [#927](https://github.com/LiskArchive/lisk-elements/pull/927) ([ishantiw](https://github.com/ishantiw))
- Select peers doesn't always give 'n' requested peers - Closes#925 [#926](https://github.com/LiskArchive/lisk-elements/pull/926) ([ishantiw](https://github.com/ishantiw))
- Add peer discovery algorithm - Closes#893 [#924](https://github.com/LiskArchive/lisk-elements/pull/924) ([ishantiw](https://github.com/ishantiw))
- Update to Node.js 8.14.0 and use 'npm ci' - Closes #921 [#923](https://github.com/LiskArchive/lisk-elements/pull/923) ([fchavant](https://github.com/fchavant))
- Remove unused Jenkinsfile.nightly - Closes #920 [#922](https://github.com/LiskArchive/lisk-elements/pull/922) ([fchavant](https://github.com/fchavant))
- Define listeners for transaction pool related events - Closes #873 [#917](https://github.com/LiskArchive/lisk-elements/pull/917) ([SargeKhan](https://github.com/SargeKhan))
- Add higher order filter functions for queues in transaction pool - Closes #911 [#913](https://github.com/LiskArchive/lisk-elements/pull/913) ([SargeKhan](https://github.com/SargeKhan))
- Add queues datastructure for transaction pool - Closes #871 [#910](https://github.com/LiskArchive/lisk-elements/pull/910) ([SargeKhan](https://github.com/SargeKhan))
- Adding p2p peer selection algorithm - Closes#891 [#909](https://github.com/LiskArchive/lisk-elements/pull/909) ([ishantiw](https://github.com/ishantiw))
- Create package and setup boilerplate for lisk-transaction-pool - Closes #870 [#908](https://github.com/LiskArchive/lisk-elements/pull/908) ([SargeKhan](https://github.com/SargeKhan))
- Add PeerPool and prepare integration tests [#898](https://github.com/LiskArchive/lisk-elements/pull/898) ([jondubois](https://github.com/jondubois))
- Setup P2P and Peer structure for lisk-elements@lisk-p2p - Closes#890 [#867](https://github.com/LiskArchive/lisk-elements/pull/867) ([ishantiw](https://github.com/ishantiw))
- Create base transaction class - Closes #874 [#865](https://github.com/LiskArchive/lisk-elements/pull/865) ([mitsujutsu](https://github.com/mitsujutsu))
- Improve node management terminology / description - Closes#705 [#706](https://github.com/LiskArchive/lisk-commander/pull/706) ([ManuGowda](https://github.com/ManuGowda))
- Add unit tests for src/utils/node- Closes#703 [#704](https://github.com/LiskArchive/lisk-commander/pull/704) ([ManuGowda](https://github.com/ManuGowda))
- Improve UX of node management commands - closes #700 [#701](https://github.com/LiskArchive/lisk-commander/pull/701) ([ManuGowda](https://github.com/ManuGowda))
- Add node:logs command - closes #692 [#698](https://github.com/LiskArchive/lisk-commander/pull/698) ([ManuGowda](https://github.com/ManuGowda))
- Add node:upgrade command - Closes #690 [#697](https://github.com/LiskArchive/lisk-commander/pull/697) ([ManuGowda](https://github.com/ManuGowda))
- Add node:list command - Closes #688 #689 [#696](https://github.com/LiskArchive/lisk-commander/pull/696) ([ManuGowda](https://github.com/ManuGowda))
- Add node:uninstall command - Closes #685 [#695](https://github.com/LiskArchive/lisk-commander/pull/695) ([ManuGowda](https://github.com/ManuGowda))
- Add node start command - Closes #686 [#694](https://github.com/LiskArchive/lisk-commander/pull/694) ([shuse2](https://github.com/shuse2))
- Add node install command - Closes #684 [#693](https://github.com/LiskArchive/lisk-commander/pull/693) ([ManuGowda](https://github.com/ManuGowda))
",50873641
112,False,False,2019-04-24T07:18:25Z,2019-04-24T13:58:20Z,"# Change Log

## [v1.6.0](https://github.com/LiskHQ/lisk-sdk/tree/v1.6.0) (2019-04-24)
[Full Changelog](https://github.com/LiskHQ/lisk-sdk/compare/v1.5.1...v1.6.0)

**Closed issues:**
- Node crashed multiple times without any error [#3353](https://github.com/LiskHQ/lisk-sdk/issues/3353)
- Allow setting output directory in lisk_snapshot.sh, add cleanup example [#3310](https://github.com/LiskHQ/lisk-sdk/issues/3310)
- Issues with Next Forging Turn (/api/delegates/forgers) [#3304](https://github.com/LiskHQ/lisk-sdk/issues/3304)
- Revert use of ""npm start"" in Dockerfile and docker-compose.yml [#3264](https://github.com/LiskHQ/lisk-sdk/issues/3264)
- App doesn't start when using child process on mainnet [#3256](https://github.com/LiskHQ/lisk-sdk/issues/3256)
- Update config failed to run in 1.6.0 [#3255](https://github.com/LiskHQ/lisk-sdk/issues/3255)
- Handle application and process restart [#3245](https://github.com/LiskHQ/lisk-sdk/issues/3245)
- Mainnet syncing and snapshotting failed for 1.6.0-alpha.4 [#3242](https://github.com/LiskHQ/lisk-sdk/issues/3242)
- Functional Get account is failing randomly [#3239](https://github.com/LiskHQ/lisk-sdk/issues/3239)
- Snapshot creation failed due to frozen transaction type 7 [#3229](https://github.com/LiskHQ/lisk-sdk/issues/3229)
- Genesis Block Schema validation error [#3225](https://github.com/LiskHQ/lisk-sdk/issues/3225)
- Accounts module assigns undefined logger to Votes logic [#3224](https://github.com/LiskHQ/lisk-sdk/issues/3224)
- Broadhash doesn't update on 1.6.0-alpha.1 [#3217](https://github.com/LiskHQ/lisk-sdk/issues/3217)
- NewRelic does not capture lisk core data [#3216](https://github.com/LiskHQ/lisk-sdk/issues/3216)
- PM2 does not show CPU and Memory usage as expected [#3215](https://github.com/LiskHQ/lisk-sdk/issues/3215)
- Lisk Node failed to start with snapshot mode [#3214](https://github.com/LiskHQ/lisk-sdk/issues/3214)
- Fix typo in newrelic_lisk.js [#3206](https://github.com/LiskHQ/lisk-sdk/issues/3206)
- Exit event does not kill all the processes [#3201](https://github.com/LiskHQ/lisk-sdk/issues/3201)
- NewRelic throws errors on start [#3200](https://github.com/LiskHQ/lisk-sdk/issues/3200)
- 1.6.0-alpha.0 Build failed with errors [#3199](https://github.com/LiskHQ/lisk-sdk/issues/3199)
- Revert child process auto-reload [#3191](https://github.com/LiskHQ/lisk-sdk/issues/3191)
- Remove jest-chain [#3177](https://github.com/LiskHQ/lisk-sdk/issues/3177)
- Lisk Core Should Start Without Redis [#3176](https://github.com/LiskHQ/lisk-sdk/issues/3176)
- Pipeline options are empty on the first run on Jenkins [#3136](https://github.com/LiskHQ/lisk-sdk/issues/3136)
- Fix brittle cache tests [#3131](https://github.com/LiskHQ/lisk-sdk/issues/3131)
- Bug: Fix failing tests development [#3127](https://github.com/LiskHQ/lisk-sdk/issues/3127)
- Upgrade Node.js version from 10.14.1 to 10.15.3 [#3124](https://github.com/LiskHQ/lisk-sdk/issues/3124)
- Log file is missing and incorrect log level [#3123](https://github.com/LiskHQ/lisk-sdk/issues/3123)
- Fix Jenkinsfile for put tests [#3121](https://github.com/LiskHQ/lisk-sdk/issues/3121)
- Unit test ChildProcessChannel class [#3117](https://github.com/LiskHQ/lisk-sdk/issues/3117)
- CLI option -c requires relative path [#3115](https://github.com/LiskHQ/lisk-sdk/issues/3115)
- Jenkins test is giving false positive [#3113](https://github.com/LiskHQ/lisk-sdk/issues/3113)
- lisk_snapshot.sh: dump directly from database [#3109](https://github.com/LiskHQ/lisk-sdk/issues/3109)
- Implement once listener for ChildProcessChannel sockets [#3102](https://github.com/LiskHQ/lisk-sdk/issues/3102)
- Functional test code coverage is broken [#3100](https://github.com/LiskHQ/lisk-sdk/issues/3100)
- Complete migration of the build process to a Makefile [#3099](https://github.com/LiskHQ/lisk-sdk/issues/3099)
- Error objects not being correctly logged [#3092](https://github.com/LiskHQ/lisk-sdk/issues/3092)
- Remove sequential tags from tests and Fix conflicting tests [#3089](https://github.com/LiskHQ/lisk-sdk/issues/3089)
- Fix protocol version parsing with double digits [#3081](https://github.com/LiskHQ/lisk-sdk/issues/3081)
- Update README file to reflect the modular architecture changes [#3075](https://github.com/LiskHQ/lisk-sdk/issues/3075)
- Wait for all sockets to be bound in Bus, ChildProcessChannel [#3073](https://github.com/LiskHQ/lisk-sdk/issues/3073)
- Remove js extension filename from requires [#3071](https://github.com/LiskHQ/lisk-sdk/issues/3071)
- Refactor channel.invoke to return only valid data [#3068](https://github.com/LiskHQ/lisk-sdk/issues/3068)
- Add missing functional:put tests on Jenkins [#3060](https://github.com/LiskHQ/lisk-sdk/issues/3060)
- Load http_api module as a child process [#3059](https://github.com/LiskHQ/lisk-sdk/issues/3059)
- Review http_api module unit test coverage [#3058](https://github.com/LiskHQ/lisk-sdk/issues/3058)
- Improve functional test coverage for asset field API response [#3053](https://github.com/LiskHQ/lisk-sdk/issues/3053)
- Remove symlinks from HTTP API module [#3047](https://github.com/LiskHQ/lisk-sdk/issues/3047)
- Remove callbacks from chain module actions [#3045](https://github.com/LiskHQ/lisk-sdk/issues/3045)
- Move ""packaged"" lisk-scripts into lisk repository [#3042](https://github.com/LiskHQ/lisk-sdk/issues/3042)
- Update lisk scripts to work along new structure [#3041](https://github.com/LiskHQ/lisk-sdk/issues/3041)
- Update docker configuration to match with current structure [#3039](https://github.com/LiskHQ/lisk-sdk/issues/3039)
- Review chain/helpers/ content [#3035](https://github.com/LiskHQ/lisk-sdk/issues/3035)
- Remove insecure and not used chain actions [#3033](https://github.com/LiskHQ/lisk-sdk/issues/3033)
- Refactor channel.invoke to not use callbacks as argument [#3029](https://github.com/LiskHQ/lisk-sdk/issues/3029)
- Merge coverage both Mocha and Jest [#3023](https://github.com/LiskHQ/lisk-sdk/issues/3023)
- Add test coverage for moved api error codes [#3021](https://github.com/LiskHQ/lisk-sdk/issues/3021)
- Update bus to support RPC connections and relevant channel should be introduced [#3013](https://github.com/LiskHQ/lisk-sdk/issues/3013)
- File name should be snake case [#3012](https://github.com/LiskHQ/lisk-sdk/issues/3012)
- Event & Action name validation regex definitions are different in Base class [#3008](https://github.com/LiskHQ/lisk-sdk/issues/3008)
- Update Lisk-elements to use latest version [#3007](https://github.com/LiskHQ/lisk-sdk/issues/3007)
- Validate filters for getter methods in Account and Transaction entities [#3005](https://github.com/LiskHQ/lisk-sdk/issues/3005)
- Remove swagger.yml file from Chain module and refactor http_api.js, attach_swagger.js [#2996](https://github.com/LiskHQ/lisk-sdk/issues/2996)
- Extract ApiError and ApiCodes logic from Chain and move it to HTTP API [#2995](https://github.com/LiskHQ/lisk-sdk/issues/2995)
- Group transaction actions on Chain module [#2992](https://github.com/LiskHQ/lisk-sdk/issues/2992)
- Refactor Chain actions arguments [#2991](https://github.com/LiskHQ/lisk-sdk/issues/2991)
- Remove usage of storageRead function on Chain actions [#2989](https://github.com/LiskHQ/lisk-sdk/issues/2989)
- Implement pending unit tests for HTTP API module [#2988](https://github.com/LiskHQ/lisk-sdk/issues/2988)
- Merge 1.5.0 release branch to development [#2984](https://github.com/LiskHQ/lisk-sdk/issues/2984)
- Update running application instructions in readme [#2974](https://github.com/LiskHQ/lisk-sdk/issues/2974)
- Peer objects are not being converted to string correctly [#2964](https://github.com/LiskHQ/lisk-sdk/issues/2964)
- Typo on peer dns lookup resolution code [#2961](https://github.com/LiskHQ/lisk-sdk/issues/2961)
- Change pending amount occurrences to strings across application [#2957](https://github.com/LiskHQ/lisk-sdk/issues/2957)
- Add jest tests to CI pipeline [#2946](https://github.com/LiskHQ/lisk-sdk/issues/2946)
- Storage component files exported via a predefined interface [#2945](https://github.com/LiskHQ/lisk-sdk/issues/2945)
- Run mocha tests by npm scripts & Remove Gruntfile.js [#2935](https://github.com/LiskHQ/lisk-sdk/issues/2935)
- Support running single test files with npx mocha [#2930](https://github.com/LiskHQ/lisk-sdk/issues/2930)
- Use npx instead of ./node_modules/.bin/ [#2920](https://github.com/LiskHQ/lisk-sdk/issues/2920)
- Refactor and verify the application cleanup logic for different cases [#2914](https://github.com/LiskHQ/lisk-sdk/issues/2914)
- Refactor the action layer for modules to load the actions directly not just names [#2913](https://github.com/LiskHQ/lisk-sdk/issues/2913)
- Refactor the event model and remove source from event [#2912](https://github.com/LiskHQ/lisk-sdk/issues/2912)
- Bump version of eslint-config-lisk-base devDependecy [#2910](https://github.com/LiskHQ/lisk-sdk/issues/2910)
- Drop `blocks_list` and `trs_list` views [#2908](https://github.com/LiskHQ/lisk-sdk/issues/2908)
- Convert to async update function from system component  [#2904](https://github.com/LiskHQ/lisk-sdk/issues/2904)
- Inspect async/await usages in test hooks [#2901](https://github.com/LiskHQ/lisk-sdk/issues/2901)
- Remove Storage.instance to allow Storage component to be used by different modules [#2895](https://github.com/LiskHQ/lisk-sdk/issues/2895)
- Create controller/schemas/constants.js to validate system wide constants [#2889](https://github.com/LiskHQ/lisk-sdk/issues/2889)
- Test suite not working [#2885](https://github.com/LiskHQ/lisk-sdk/issues/2885)
- Create controller/schemas/genesisBlock.js to validate genesis block [#2884](https://github.com/LiskHQ/lisk-sdk/issues/2884)
- Refactor the chain module initialization to simplify and maintainable  [#2866](https://github.com/LiskHQ/lisk-sdk/issues/2866)
- Improve the UX/DX for creating a module for framework [#2863](https://github.com/LiskHQ/lisk-sdk/issues/2863)
- Istanbul throws ""Transformation error"" exceptions [#2858](https://github.com/LiskHQ/lisk-sdk/issues/2858)
- Update the temp directory structure suitable for deployment and check the PID file before startup [#2849](https://github.com/LiskHQ/lisk-sdk/issues/2849)
- Introduce new flexible, resilient and modular architecture - reference list [#2848](https://github.com/LiskHQ/lisk-sdk/issues/2848)
- Review Lisk Framework documentation [#2845](https://github.com/LiskHQ/lisk-sdk/issues/2845)
- Add unit tests for controller codebase  [#2839](https://github.com/LiskHQ/lisk-sdk/issues/2839)
- Import test suite structure from lisk-modular [#2838](https://github.com/LiskHQ/lisk-sdk/issues/2838)
- Fix intermittent test failure for database unit tests [#2834](https://github.com/LiskHQ/lisk-sdk/issues/2834)
- Account.get() does not work when multiple filters are provided with same key [#2822](https://github.com/LiskHQ/lisk-sdk/issues/2822)
- Update storage component readme file [#2813](https://github.com/LiskHQ/lisk-sdk/issues/2813)
- Enable network QA builds from core [#2807](https://github.com/LiskHQ/lisk-sdk/issues/2807)
- New migrations being created on wrong folder (old db folder) [#2805](https://github.com/LiskHQ/lisk-sdk/issues/2805)
- Cache component should implement a retry/auto-reconnect strategy [#2802](https://github.com/LiskHQ/lisk-sdk/issues/2802)
- Refactor the logic files of all transaction types to have consistent dependencies [#2779](https://github.com/LiskHQ/lisk-sdk/issues/2779)
- Update all functional GET tests for API module [#2778](https://github.com/LiskHQ/lisk-sdk/issues/2778)
- Update all functional POST tests for API module [#2777](https://github.com/LiskHQ/lisk-sdk/issues/2777)
- Integrate “peers” retrieval communication from chain module [#2776](https://github.com/LiskHQ/lisk-sdk/issues/2776)
- Integrate “transactions” posting communication with chain module [#2775](https://github.com/LiskHQ/lisk-sdk/issues/2775)
- Integrate “signatures” posting communication with chain module [#2774](https://github.com/LiskHQ/lisk-sdk/issues/2774)
- Load the “http_api” module through controller [#2772](https://github.com/LiskHQ/lisk-sdk/issues/2772)
- Initialize the storage, logger and cache components separately for http-api module [#2771](https://github.com/LiskHQ/lisk-sdk/issues/2771)
- Extract api codebase to http_api module [#2770](https://github.com/LiskHQ/lisk-sdk/issues/2770)
- Move Peer entity to chain module only [#2769](https://github.com/LiskHQ/lisk-sdk/issues/2769)
- Move Round entity to chain module  [#2768](https://github.com/LiskHQ/lisk-sdk/issues/2768)
- Move Migration entity to chain module  [#2767](https://github.com/LiskHQ/lisk-sdk/issues/2767)
- Update Transaction entity to have only getters and move other functions to chain specific implementation [#2766](https://github.com/LiskHQ/lisk-sdk/issues/2766)
- Update Block entity to have only getters and move other functions to chain specific implementation [#2765](https://github.com/LiskHQ/lisk-sdk/issues/2765)
- Update Account entity to have only getters and move other functions to chain specific implementation [#2764](https://github.com/LiskHQ/lisk-sdk/issues/2764)
- Migrate Lisk Modular repository files to framework directory and create lisk-chain module [#2763](https://github.com/LiskHQ/lisk-sdk/issues/2763)
- Restructure the file directories for components, modules and framework files [#2762](https://github.com/LiskHQ/lisk-sdk/issues/2762)
- Resolve the conflicting responsibilities between api/controller and module of Delegates [#2782](https://github.com/LiskHQ/lisk-sdk/issues/2782)
- Resolve the conflicting responsibilities between api/controller and module of Node  [#2783](https://github.com/LiskHQ/lisk-sdk/issues/2783)
- Create a component system which will replace current modules/system to always have latest system status. [#2760](https://github.com/LiskHQ/lisk-sdk/issues/2760)
- Update logger component to be modified as component pattern [#2578](https://github.com/LiskHQ/lisk-sdk/issues/2578)
- Update cache component to be modified as component pattern [#2579](https://github.com/LiskHQ/lisk-sdk/issues/2579)
- Update db component to be modified as component pattern [#2580](https://github.com/LiskHQ/lisk-sdk/issues/2580)


**Merged pull requests:**
- Add PID file check process restart - Closes #3245 [#3359](https://github.com/LiskHQ/lisk-sdk/pull/3359) ([michielmulders](https://github.com/michielmulders))
- Fix bug sorting API /delegates/forgers - Closes #3304 [#3356](https://github.com/LiskHQ/lisk-sdk/pull/3356) ([michielmulders](https://github.com/michielmulders))
- Allow setting output directory in lisk_snapshot.sh, add usage examples - Closes #3310  [#3311](https://github.com/LiskHQ/lisk-sdk/pull/3311) ([fchavant](https://github.com/fchavant))
- Merge master branch into 1.6.0 with cherry pick [#3299](https://github.com/LiskHQ/lisk-sdk/pull/3299) ([shuse2](https://github.com/shuse2))
- Preserve symlinks in Darwin builds - Closes #3274 [#3276](https://github.com/LiskHQ/lisk-sdk/pull/3276) ([fchavant](https://github.com/fchavant))
- Revert use of ""npm start"" in Dockerfile and docker-compose.yml - Closes #3264 [#3265](https://github.com/LiskHQ/lisk-sdk/pull/3265) ([lsilvs](https://github.com/lsilvs))
- Update config failed to run in 1.6.0 - Closes #3255 [#3259](https://github.com/LiskHQ/lisk-sdk/pull/3259) ([lsilvs](https://github.com/lsilvs))
- App doesn't start when using child process on mainnet - Closes #3256 [#3257](https://github.com/LiskHQ/lisk-sdk/pull/3257) ([lsilvs](https://github.com/lsilvs))
- Avoid mutation of roundRewards in rewardsAtRound() - Closes #3242 [#3253](https://github.com/LiskHQ/lisk-sdk/pull/3253) ([diego-G](https://github.com/diego-G))
- Snapshot creation failed due to frozen transaction type 7 - Closes #3229 [#3233](https://github.com/LiskHQ/lisk-sdk/pull/3233) ([lsilvs](https://github.com/lsilvs))
- NewRelic does not capture lisk core data - Closes #3216 [#3228](https://github.com/LiskHQ/lisk-sdk/pull/3228) ([nazarhussain](https://github.com/nazarhussain))
- Fix undefined logger in Votes logic - Closes #3224 [#3227](https://github.com/LiskHQ/lisk-sdk/pull/3227) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Genesis Block Schema validation error - Closes #3225 [#3226](https://github.com/LiskHQ/lisk-sdk/pull/3226) ([lsilvs](https://github.com/lsilvs))
- PM2 does not show CPU and Memory usage as expected - Closes #3215 [#3220](https://github.com/LiskHQ/lisk-sdk/pull/3220) ([lsilvs](https://github.com/lsilvs))
- Fix broadhash http api - Closes #3217 [#3219](https://github.com/LiskHQ/lisk-sdk/pull/3219) ([diego-G](https://github.com/diego-G))
- Lisk Node failed to start with snapshot mode - Closes #3214 [#3218](https://github.com/LiskHQ/lisk-sdk/pull/3218) ([lsilvs](https://github.com/lsilvs))
- Exit event does not kill all the processes - Closes #3201 [#3211](https://github.com/LiskHQ/lisk-sdk/pull/3211) ([lsilvs](https://github.com/lsilvs))
- Fix typo in newrelic lisk - Closes #3206 [#3207](https://github.com/LiskHQ/lisk-sdk/pull/3207) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Newrelic throws error on start - Closes #3200 [#3205](https://github.com/LiskHQ/lisk-sdk/pull/3205) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Build failed with errors - Closes #3199 [#3202](https://github.com/LiskHQ/lisk-sdk/pull/3202) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Revert child process auto-reload - Closes #3191 [#3192](https://github.com/LiskHQ/lisk-sdk/pull/3192) ([lsilvs](https://github.com/lsilvs))
- Integration test for InMemoryChannel - Partially Closes #3118 [#3186](https://github.com/LiskHQ/lisk-sdk/pull/3186) ([yatki](https://github.com/yatki))
- Lisk Core should start without Redis - Closes #3176 [#3184](https://github.com/LiskHQ/lisk-sdk/pull/3184) ([shuse2](https://github.com/shuse2))
- Remove jest-chain - Closes #3177 [#3179](https://github.com/LiskHQ/lisk-sdk/pull/3179) ([yatki](https://github.com/yatki))
- Implement unit tests for ChildProcessChannel - Closes #3117  [#3170](https://github.com/LiskHQ/lisk-sdk/pull/3170) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Prevent application from crashing if child process crashes - Closes #3142 [#3168](https://github.com/LiskHQ/lisk-sdk/pull/3168) ([lsilvs](https://github.com/lsilvs))
- Event & Action name validation regex definitions are different in Base class - Closes #3008 [#3167](https://github.com/LiskHQ/lisk-sdk/pull/3167) ([MaciejBaj](https://github.com/MaciejBaj))
- Implement pending unit tests http api module - Closes #2988 [#3165](https://github.com/LiskHQ/lisk-sdk/pull/3165) ([michielmulders](https://github.com/michielmulders))
- Error objects not being correctly logged - Closes #3092 [#3155](https://github.com/LiskHQ/lisk-sdk/pull/3155) ([lsilvs](https://github.com/lsilvs))
- Pipeline options are empty on the first run on Jenkins - Closes #3136 [#3137](https://github.com/LiskHQ/lisk-sdk/pull/3137) ([yatki](https://github.com/yatki))
- Fix missing log file and apply logging level - Closes #3123 [#3135](https://github.com/LiskHQ/lisk-sdk/pull/3135) ([michielmulders](https://github.com/michielmulders))
- Fix failing network and core tests - Closes #3127 [#3133](https://github.com/LiskHQ/lisk-sdk/pull/3133) ([michielmulders](https://github.com/michielmulders))
- Fix brittle cache tests - Closes #3131 [#3132](https://github.com/LiskHQ/lisk-sdk/pull/3132) ([yatki](https://github.com/yatki))
- Update README file to reflect the modular architecture changes - Closes #3075 [#3129](https://github.com/LiskHQ/lisk-sdk/pull/3129) ([Tschakki](https://github.com/Tschakki))
- Implemment once() for ChildProcessChannel subSocket - Closes #3102 [#3128](https://github.com/LiskHQ/lisk-sdk/pull/3128) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Remove insecure chain actions - Closes #3033 [#3126](https://github.com/LiskHQ/lisk-sdk/pull/3126) ([michielmulders](https://github.com/michielmulders))
- Upgrade Node.js version from 10.14.1 to 10.15.3 - Closes #3124 [#3125](https://github.com/LiskHQ/lisk-sdk/pull/3125) ([fchavant](https://github.com/fchavant))
- Fix Jenkinsfile for put tests - Closes #3121 [#3122](https://github.com/LiskHQ/lisk-sdk/pull/3122) ([yatki](https://github.com/yatki))
- Jenkins test is giving false positive - Closes #3113 [#3120](https://github.com/LiskHQ/lisk-sdk/pull/3120) ([yatki](https://github.com/yatki))
- Fix relative path -c option CLI - Closes #3115 [#3116](https://github.com/LiskHQ/lisk-sdk/pull/3116) ([michielmulders](https://github.com/michielmulders))
- lisk_snapshot.sh: dump directly from database - Closes #3109 [#3114](https://github.com/LiskHQ/lisk-sdk/pull/3114) ([fchavant](https://github.com/fchavant))
- Makefile build - Closes #3099 [#3110](https://github.com/LiskHQ/lisk-sdk/pull/3110) ([fchavant](https://github.com/fchavant))
- Validate filter getter methods - Closes #3005 [#3105](https://github.com/LiskHQ/lisk-sdk/pull/3105) ([michielmulders](https://github.com/michielmulders))
- Load http_api module as a child process - Closes #3059 [#3103](https://github.com/LiskHQ/lisk-sdk/pull/3103) ([lsilvs](https://github.com/lsilvs))
- Functional test code coverage is broken - Closes #3100 [#3101](https://github.com/LiskHQ/lisk-sdk/pull/3101) ([yatki](https://github.com/yatki))
- Add jest tests to CI pipeline - Closes #2946 [#3094](https://github.com/LiskHQ/lisk-sdk/pull/3094) ([yatki](https://github.com/yatki))
- Add missing functional:put tests on Jenkins - Closes #3060 [#3093](https://github.com/LiskHQ/lisk-sdk/pull/3093) ([yatki](https://github.com/yatki))
- Remove sequential tags from tests and Fix conflicting tests - Closes #3089 [#3091](https://github.com/LiskHQ/lisk-sdk/pull/3091) ([yatki](https://github.com/yatki))
- Fix protocol version parsing with double digits - Closes #3081 [#3083](https://github.com/LiskHQ/lisk-sdk/pull/3083) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Be more specific when checking whether PostgreSQL is running - Closes #3080 [#3082](https://github.com/LiskHQ/lisk-sdk/pull/3082) ([fchavant](https://github.com/fchavant))
- Remove js extension filename from requires - Closes #3071 [#3079](https://github.com/LiskHQ/lisk-sdk/pull/3079) ([diego-G](https://github.com/diego-G))
- Run mocha tests by npm scripts & Remove Gruntfile.js - Closes #2935 [#3078](https://github.com/LiskHQ/lisk-sdk/pull/3078) ([yatki](https://github.com/yatki))
- Wait for all sockets to be created on Bus and ChildProcessChannel - Closes #3073  [#3077](https://github.com/LiskHQ/lisk-sdk/pull/3077) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Refactor channel.invoke to return only valid data - Closes #3068 [#3069](https://github.com/LiskHQ/lisk-sdk/pull/3069) ([lsilvs](https://github.com/lsilvs))
- Refactor chain actions with arguments - Closes #2991 [#3065](https://github.com/LiskHQ/lisk-sdk/pull/3065) ([michielmulders](https://github.com/michielmulders))
- Update application readme - Closes #2974 [#3062](https://github.com/LiskHQ/lisk-sdk/pull/3062) ([michielmulders](https://github.com/michielmulders))
- Drop `blocks_list` and `trs_list` views Closes - #2908 [#3061](https://github.com/LiskHQ/lisk-sdk/pull/3061) ([lsilvs](https://github.com/lsilvs))
- Functional tests for validating asset field API - Closes #3053 [#3057](https://github.com/LiskHQ/lisk-sdk/pull/3057) ([michielmulders](https://github.com/michielmulders))
- Remove symlinks from http api - Closes #3047 [#3056](https://github.com/LiskHQ/lisk-sdk/pull/3056) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Review chain helpers - Closes #3035 [#3055](https://github.com/LiskHQ/lisk-sdk/pull/3055) ([diego-G](https://github.com/diego-G))
- Fix coverage paths in Jenkinsfile - Closes #3051 [#3052](https://github.com/LiskHQ/lisk-sdk/pull/3052) ([yatki](https://github.com/yatki))
- Adapt scripts and configurations files to new structure - Closes 3041 [#3050](https://github.com/LiskHQ/lisk-sdk/pull/3050) ([fchavant](https://github.com/fchavant))
- Remove callbacks from chain module actions - Closes #2992, #3045 [#3048](https://github.com/LiskHQ/lisk-sdk/pull/3048) ([michielmulders](https://github.com/michielmulders))
- Move ""packaged"" lisk-scripts - Closes #3042 [#3044](https://github.com/LiskHQ/lisk-sdk/pull/3044) ([fchavant](https://github.com/fchavant))
- Use src/index.js in Dockerfile and docker-compose.yml - Closes #3039 [#3043](https://github.com/LiskHQ/lisk-sdk/pull/3043) ([fchavant](https://github.com/fchavant))
- Update bus to support RPC connections and relevant channel should be introduced - Closes #3013 [#3034](https://github.com/LiskHQ/lisk-sdk/pull/3034) ([lsilvs](https://github.com/lsilvs))
- Add test coverage for moved api error codes - Closes #3021 #3029 [#3032](https://github.com/LiskHQ/lisk-sdk/pull/3032) ([michielmulders](https://github.com/michielmulders))
- Rename chain/modules/ folder to chain/submodules/ - Closes #3030 [#3031](https://github.com/LiskHQ/lisk-sdk/pull/3031) ([diego-G](https://github.com/diego-G))
- Rename files to follow snake_case pattern - Closes #3012 [#3028](https://github.com/LiskHQ/lisk-sdk/pull/3028) ([diego-G](https://github.com/diego-G))
- Remove Swagger from chain - Closes #2996 [#3020](https://github.com/LiskHQ/lisk-sdk/pull/3020) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Remove storageRead call from http_api to chain - Closes #2989 [#3018](https://github.com/LiskHQ/lisk-sdk/pull/3018) ([michielmulders](https://github.com/michielmulders))
- Merge 1.5.0 onto development - Closes #2984 [#3017](https://github.com/LiskHQ/lisk-sdk/pull/3017) ([diego-G](https://github.com/diego-G))
- Upgrade lisk-elements - Closes #3007 [#3014](https://github.com/LiskHQ/lisk-sdk/pull/3014) ([shuse2](https://github.com/shuse2))
- Move api error and codes from chain module to http_api [#3011](https://github.com/LiskHQ/lisk-sdk/pull/3011) ([michielmulders](https://github.com/michielmulders))
- Add validation for delegate asset - Closes #2979 [#2998](https://github.com/LiskHQ/lisk-sdk/pull/2998) ([michielmulders](https://github.com/michielmulders))
- Extract api codebase to http_api module - Closes #2770, #2771, #2772, #2274, #2775, #2776 [#2982](https://github.com/LiskHQ/lisk-sdk/pull/2982) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Change pending amount occurrences to strings across application - Closes #2957 [#2980](https://github.com/LiskHQ/lisk-sdk/pull/2980) ([michielmulders](https://github.com/michielmulders))
- Export storage component files through a root interface - Closes #2945 [#2970](https://github.com/LiskHQ/lisk-sdk/pull/2970) ([diego-G](https://github.com/diego-G))
- Fix Peer object string address - Closes #2964 [#2966](https://github.com/LiskHQ/lisk-sdk/pull/2966) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Fix typo on dns lookup resolution code - Closes #2961 [#2962](https://github.com/LiskHQ/lisk-sdk/pull/2962) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Add unit tests for controller codebase - Closes #2839 [#2951](https://github.com/LiskHQ/lisk-sdk/pull/2951) ([yatki](https://github.com/yatki))
- Update storage entity Transaction to contain just getters - Closes #2766 [#2949](https://github.com/LiskHQ/lisk-sdk/pull/2949) ([diego-G](https://github.com/diego-G))
- Istanbul throws ""Transformation error"" exceptions - Closes 2858 [#2948](https://github.com/LiskHQ/lisk-sdk/pull/2948) ([yatki](https://github.com/yatki))
- Update storage entity Block to contain just getters - Closes #2765 [#2943](https://github.com/LiskHQ/lisk-sdk/pull/2943) ([diego-G](https://github.com/diego-G))
- Update storage entity Account to contain just getters - Closes #2764 [#2936](https://github.com/LiskHQ/lisk-sdk/pull/2936) ([diego-G](https://github.com/diego-G))
- Import jest structure from lisk modular - Closes #2838 [#2934](https://github.com/LiskHQ/lisk-sdk/pull/2934) ([yatki](https://github.com/yatki))
- Move custom storage entities to module chain - Closes #2767, #2768 & #2769 [#2933](https://github.com/LiskHQ/lisk-sdk/pull/2933) ([diego-G](https://github.com/diego-G))
- Support running single test files with npx mocha - Closes #2930 [#2931](https://github.com/LiskHQ/lisk-sdk/pull/2931) ([yatki](https://github.com/yatki))
- Refactor the action layer for modules to load the actions directly not just names - Closes #2913 [#2929](https://github.com/LiskHQ/lisk-sdk/pull/2929) ([lsilvs](https://github.com/lsilvs))
- Fix intermittent test failure for database unit tests - Closes #2834 [#2928](https://github.com/LiskHQ/lisk-sdk/pull/2928) ([nazarhussain](https://github.com/nazarhussain))
- Refactor the event model and remove source from event - Closes #2912 [#2927](https://github.com/LiskHQ/lisk-sdk/pull/2927) ([lsilvs](https://github.com/lsilvs))
- Use npx instead ./node_modules/.bin/ - Closes #2920 [#2921](https://github.com/LiskHQ/lisk-sdk/pull/2921) ([diego-G](https://github.com/diego-G))
- Bump eslint-config-lisk-base devDependecy to 1.1.0 - Closes #2910 [#2917](https://github.com/LiskHQ/lisk-sdk/pull/2917) ([diego-G](https://github.com/diego-G))
- Convert to async update function system component - Closes #2904 [#2909](https://github.com/LiskHQ/lisk-sdk/pull/2909) ([diego-G](https://github.com/diego-G))
- Fix intermittent test failure for database unit tests - Closes #2834 [#2900](https://github.com/LiskHQ/lisk-sdk/pull/2900) ([yatki](https://github.com/yatki))
- Remove Storage.instance from Storage component class - Closes #2895 [#2896](https://github.com/LiskHQ/lisk-sdk/pull/2896) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Validate system constants - Closes #2889 [#2893](https://github.com/LiskHQ/lisk-sdk/pull/2893) ([michielmulders](https://github.com/michielmulders))
- Update system as a component - Closes #2760 [#2890](https://github.com/LiskHQ/lisk-sdk/pull/2890) ([diego-G](https://github.com/diego-G))
- Validate genesis block - Closes #2884 [#2888](https://github.com/LiskHQ/lisk-sdk/pull/2888) ([michielmulders](https://github.com/michielmulders))
- Refactor the chain module initialization to simplify and maintainable - Closes #2866 [#2887](https://github.com/LiskHQ/lisk-sdk/pull/2887) ([nazarhussain](https://github.com/nazarhussain))
- Update hierarchy JSDocs - Closes #2845 [#2876](https://github.com/LiskHQ/lisk-sdk/pull/2876) ([michielmulders](https://github.com/michielmulders))
- Remove async from all describes across our test suites - Closes #2834 [#2870](https://github.com/LiskHQ/lisk-sdk/pull/2870) ([michielmulders](https://github.com/michielmulders))
- Remove async from unit tests - Closes #2834 [#2868](https://github.com/LiskHQ/lisk-sdk/pull/2868) ([michielmulders](https://github.com/michielmulders))
- Improve the UX/DX for creating a module for framework - Closes #2863 [#2865](https://github.com/LiskHQ/lisk-sdk/pull/2865) ([nazarhussain](https://github.com/nazarhussain))
- Update JSDocs for framework/src/controller [#2864](https://github.com/LiskHQ/lisk-sdk/pull/2864) ([michielmulders](https://github.com/michielmulders))
- Move mocha tests - Closes #2847 [#2862](https://github.com/LiskHQ/lisk-sdk/pull/2862) ([yatki](https://github.com/yatki))
- Update the temp directory structure suitable for deployment and check the PID file before startup - Closes #2849 [#2857](https://github.com/LiskHQ/lisk-sdk/pull/2857) ([nazarhussain](https://github.com/nazarhussain))
- Consistent dependencies on transaction types - Closes #2779 [#2844](https://github.com/LiskHQ/lisk-sdk/pull/2844) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Fix lisk logo in jsdocs - Closes 2840 [#2841](https://github.com/LiskHQ/lisk-sdk/pull/2841) ([Tschakki](https://github.com/Tschakki))
- Account.get() does not work when multiple filters are provided with same key - Closes #2822 [#2836](https://github.com/LiskHQ/lisk-sdk/pull/2836) ([SargeKhan](https://github.com/SargeKhan))
- Update storage component readme file - Closes #2813 [#2815](https://github.com/LiskHQ/lisk-sdk/pull/2815) ([lsilvs](https://github.com/lsilvs))
- Migrate Lisk Modular repository files to framework directory and create lisk-chain module  - Closes #2763, 2762 [#2814](https://github.com/LiskHQ/lisk-sdk/pull/2814) ([nazarhussain](https://github.com/nazarhussain))
- Update logger to be modified as component - Closes #2578 [#2811](https://github.com/LiskHQ/lisk-sdk/pull/2811) ([diego-G](https://github.com/diego-G))
- Enable network QA builds from core - Closes #2807 [#2808](https://github.com/LiskHQ/lisk-sdk/pull/2808) ([ManuGowda](https://github.com/ManuGowda))
- Replace array join by string literals on logging calls - Closes #2800 [#2804](https://github.com/LiskHQ/lisk-sdk/pull/2804) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Resolve the conflicting responsibilities between api/controller and module of Delegates - Closes #2782 [#2795](https://github.com/LiskHQ/lisk-sdk/pull/2795) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Update cache module to be modified as component - Closes #2579 & #2802 [#2786](https://github.com/LiskHQ/lisk-sdk/pull/2786) ([diego-G](https://github.com/diego-G))",50873641
113,False,False,2019-04-10T07:54:55Z,2019-04-10T16:24:36Z,"# Change Log

## [v1.5.1](https://github.com/LiskHQ/lisk/tree/v1.5.1) (2019-04-10)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/v1.5.0...v1.5.1)

**Closed issues:**
- Blocks endpoint returns genesis block with unknown blockid #3298 

**Merged pull requests:**
- Blocks endpoint returns genesis block with unknown blockid  - Closes #3298  (https://github.com/LiskHQ/lisk/commit/7ae8b36c5f3530c9112b92c81c684a8c905f99b1) ([pablitovicente](https://github.com/pablitovicente))",50873641
114,False,False,2019-03-06T09:13:06Z,2019-03-06T09:47:04Z,"# Change Log

## [v1.5.0](https://github.com/LiskHQ/lisk/tree/v1.5.0) (2019-03-06)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/v1.4.1...v1.5.0)

**Closed issues:**
- API returns wrong height in snapshot mode [#2999](https://github.com/LiskHQ/lisk/issues/2999)
- API Transaction Type Delegate Creation Missing Asset Fields [#2979](https://github.com/LiskHQ/lisk/issues/2979)
- API Transactions failed to handle request [#2978](https://github.com/LiskHQ/lisk/issues/2978)
- API Transactions exclude field signSignature if its empty [#2973](https://github.com/LiskHQ/lisk/issues/2973)
- API Accounts approval results changed from 1.4.1 to 1.5.0-rc.1 [#2971](https://github.com/LiskHQ/lisk/issues/2971)
- API voters votes field value changed from count of voters to vote weight [#2968](https://github.com/LiskHQ/lisk/issues/2968)
- Account productivity not showing decimal places [#2965](https://github.com/LiskHQ/lisk/issues/2965)
- Calculate broadhash from ""id"" instead of legacy ""b_id"" field [#2953](https://github.com/LiskHQ/lisk/issues/2953)
- Snapshotting failed on testnet and mainnet for 1.5.0-alpha.2 [#2831](https://github.com/LiskHQ/lisk/issues/2831)
- Replace dependant trs tables by json field in trs table [#2818](https://github.com/LiskHQ/lisk/issues/2818)
- API Performance degrade [#2817](https://github.com/LiskHQ/lisk/issues/2817)
- Invalid API node status response [#2816](https://github.com/LiskHQ/lisk/issues/2816)
- 1.5.0-alpha.1 Testnet and Mainnet Snapshotting failure [#2810](https://github.com/LiskHQ/lisk/issues/2810)
- Performance degradation of transaction related API endpoints [#2803](https://github.com/LiskHQ/lisk/issues/2803)
- Discarded block that does not match with current chain [#2797](https://github.com/LiskHQ/lisk/issues/2797)
- Hardcoded limit param to retrieve all the peers from storage [#2787](https://github.com/LiskHQ/lisk/issues/2787)
- getDelegatesFromPreviousRound using non existing library.db.rounds [#2749](https://github.com/LiskHQ/lisk/issues/2749)
- Database gets exhausted when enabling forging on several delegates  [#2747](https://github.com/LiskHQ/lisk/issues/2747)
- Update the loading of SQL files to avoid warning messages [#2737](https://github.com/LiskHQ/lisk/issues/2737)
- Add interface to register entities with storage module [#2736](https://github.com/LiskHQ/lisk/issues/2736)
- Remove db.delegates repository [#2735](https://github.com/LiskHQ/lisk/issues/2735)
- Remove db.voters repository [#2734](https://github.com/LiskHQ/lisk/issues/2734)
- Remove db.votes repository [#2733](https://github.com/LiskHQ/lisk/issues/2733)
- Do not disable API in snapshot mode [#2729](https://github.com/LiskHQ/lisk/issues/2729)
- Replace extended blocks getter interfaces with storage.entities.Block.get [#2726](https://github.com/LiskHQ/lisk/issues/2726)
- Update lisk-newrelic version its Node.js update to v10.14.1 [#2722](https://github.com/LiskHQ/lisk/issues/2722)
- scBroker sever throws error when launching a network with several peers [#2720](https://github.com/LiskHQ/lisk/issues/2720)
- Use sodium-friends/sodium-native [#2717](https://github.com/LiskHQ/lisk/issues/2717)
- Update Postgres version on the Readme [#2713](https://github.com/LiskHQ/lisk/issues/2713)
- Remove db.accounts repository [#2709](https://github.com/LiskHQ/lisk/issues/2709)
- Replace round getter interfaces with storage.entities.Round.get [#2707](https://github.com/LiskHQ/lisk/issues/2707)
- Implement delete method for entities [#2699](https://github.com/LiskHQ/lisk/issues/2699)
- Implement storage extended Block [#2698](https://github.com/LiskHQ/lisk/issues/2698)
- Update Peers Tests due to changes in Storage Sandbox [#2694](https://github.com/LiskHQ/lisk/issues/2694)
- Implement pending tests of DB Entities [#2688](https://github.com/LiskHQ/lisk/issues/2688)
- Base Entity parseFilters() is not grouping OR and AND [#2685](https://github.com/LiskHQ/lisk/issues/2685)
- Invalid transaction response for type multi-signature transaction [#2679](https://github.com/LiskHQ/lisk/issues/2679)
- Create methods must accept arrays as well [#2677](https://github.com/LiskHQ/lisk/issues/2677)
- Implement count method for entities [#2676](https://github.com/LiskHQ/lisk/issues/2676)
- Add sorting support in getter functions [#2675](https://github.com/LiskHQ/lisk/issues/2675)
- Restore stability of peers blacklists and disconnections in Network Tests [#2670](https://github.com/LiskHQ/lisk/issues/2670)
- Refactor data persistence layer to improve quality and usability [#2669](https://github.com/LiskHQ/lisk/issues/2669)
- Overhaul Jenkinsfile [#2657](https://github.com/LiskHQ/lisk/issues/2657)
- Use npm ci for builds [#2656](https://github.com/LiskHQ/lisk/issues/2656)
- Upgrade Node.js version from 8.14.0 to 10.14.1 [#2647](https://github.com/LiskHQ/lisk/issues/2647)
- Archive logs from lisk-core-network tests on Jenkins [#2634](https://github.com/LiskHQ/lisk/issues/2634)
- Clean db namespace and remove its reference usage [#2632](https://github.com/LiskHQ/lisk/issues/2632)
- Remove db.peers repository [#2631](https://github.com/LiskHQ/lisk/issues/2631)
- Remove db.rounds repository [#2630](https://github.com/LiskHQ/lisk/issues/2630)
- Remove db.transactions repository  [#2628](https://github.com/LiskHQ/lisk/issues/2628)
- Remove db.migration repository [#2626](https://github.com/LiskHQ/lisk/issues/2626)
- Refactor `modules.blocks[.shared]` namespace [#2625](https://github.com/LiskHQ/lisk/issues/2625)
- Refactor `modules.transactions[.shared]` namespace [#2624](https://github.com/LiskHQ/lisk/issues/2624)
- Replace blocks getter interfaces with storage.entities.Block.get [#2622](https://github.com/LiskHQ/lisk/issues/2622)
- Replace transactions getter interfaces with storage.entities.Transaction.get [#2621](https://github.com/LiskHQ/lisk/issues/2621)
- Replace account getter interfaces with storage.entities.Account.get [#2620](https://github.com/LiskHQ/lisk/issues/2620)
- Create Migration entity with CRUD operations and unit tests  [#2619](https://github.com/LiskHQ/lisk/issues/2619)
- Create Round entity with CRUD operations and unit tests  [#2618](https://github.com/LiskHQ/lisk/issues/2618)
- Create Peer entity with CRUD operations and unit tests  [#2617](https://github.com/LiskHQ/lisk/issues/2617)
- Create Transaction entity with CRUD operations and unit tests  [#2616](https://github.com/LiskHQ/lisk/issues/2616)
- Create Block entity with CRUD operations and unit tests  [#2615](https://github.com/LiskHQ/lisk/issues/2615)
- Create Account entity with CRUD operations and unit tests  [#2614](https://github.com/LiskHQ/lisk/issues/2614)
- Create basic structure for entities and storage initialization [#2613](https://github.com/LiskHQ/lisk/issues/2613)
- Application crashes if any DNS name cannot be resolved [#2608](https://github.com/LiskHQ/lisk/issues/2608)
- Invalid error message while registering second signature for the second time [#2606](https://github.com/LiskHQ/lisk/issues/2606)
- Use a consistent and informative versioning scheme [#2594](https://github.com/LiskHQ/lisk/issues/2594)
- Refactor generateDelegateList & validateBlockSlot functions [#2574](https://github.com/LiskHQ/lisk/issues/2574)
- Disable multiple workers support on P2P layer [#2541](https://github.com/LiskHQ/lisk/issues/2541)
- Update Dependencies requiring code updates [#2500](https://github.com/LiskHQ/lisk/issues/2500)
- Add full unit test coverage for partially covered node module [#2446](https://github.com/LiskHQ/lisk/issues/2446)
- Add unit test coverage for signatures module [#2445](https://github.com/LiskHQ/lisk/issues/2445)
- networkHeight takes too long to update in some cases [#2438](https://github.com/LiskHQ/lisk/issues/2438)
- Extensible Data Persistence Model [#2576](https://github.com/LiskHQ/lisk/issues/2576)
- Roadmap to upgrade Node.js from v6.14.3 to v10 LTS [#2239](https://github.com/LiskHQ/lisk/issues/2239)


**Merged pull requests:**
- API returns wrong height snapshot mode - Closes #2999 [#3001](https://github.com/LiskHQ/lisk/pull/3001) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Add validation for delegate asset - Closes #2979 [#2998](https://github.com/LiskHQ/lisk/pull/2998) ([michielmulders](https://github.com/michielmulders))
- Fix api get transactions filter height - Closes #2978 [#2985](https://github.com/LiskHQ/lisk/pull/2985) ([diego-G](https://github.com/diego-G))
- Exclude sign signature if it is empty - Closes #2973 [#2983](https://github.com/LiskHQ/lisk/pull/2983) ([diego-G](https://github.com/diego-G))
- API Accounts approval results changed from 1.4.1 to 1.5.0-rc.1 - Closes #2971 [#2972](https://github.com/LiskHQ/lisk/pull/2972) ([lsilvs](https://github.com/lsilvs))
- API voters votes field value changed from count of voters to vote weight - Closes #2968 [#2969](https://github.com/LiskHQ/lisk/pull/2969) ([lsilvs](https://github.com/lsilvs))
- Account productivity not showing decimal places - Closes #2965 [#2967](https://github.com/LiskHQ/lisk/pull/2967) ([lsilvs](https://github.com/lsilvs))
- Calculate broadhash from ""id"" instead of legacy ""b_id"" field - Closes #2953 [#2955](https://github.com/LiskHQ/lisk/pull/2955) ([MaciejBaj](https://github.com/MaciejBaj))
- Reduce size of Darwin builds - Closes #2902 [#2932](https://github.com/LiskHQ/lisk/pull/2932) ([fchavant](https://github.com/fchavant))
- Darwin builds - Closes #2902 [#2903](https://github.com/LiskHQ/lisk/pull/2903) ([fchavant](https://github.com/fchavant))
- API Performance degrade - Closes #2817 [#2894](https://github.com/LiskHQ/lisk/pull/2894) ([lsilvs](https://github.com/lsilvs))
- Replace dependant trs tables by json field in trs table - Closes #2818 [#2891](https://github.com/LiskHQ/lisk/pull/2891) ([lsilvs](https://github.com/lsilvs))
- Snapshotting failed on testnet and mainnet for 1.5.0-alpha.2  [#2842](https://github.com/LiskHQ/lisk/pull/2842) ([nazarhussain](https://github.com/nazarhussain))
- 1.5.0-alpha.1 Testnet and Mainnet Snapshotting failure - Closes #2810 [#2812](https://github.com/LiskHQ/lisk/pull/2812) ([lsilvs](https://github.com/lsilvs))
- Performance degradation of transaction related API endpoints - Closes #2803 [#2809](https://github.com/LiskHQ/lisk/pull/2809) ([nazarhussain](https://github.com/nazarhussain))
- New migrations being created on wrong folder (old db folder) - Closes #2805 [#2806](https://github.com/LiskHQ/lisk/pull/2806) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Discarded block that does not match with current chain - Closes #2797 [#2799](https://github.com/LiskHQ/lisk/pull/2799) ([lsilvs](https://github.com/lsilvs))
- Hardcoded limit param to retrieve all the peers from storage - Closes #2787 [#2798](https://github.com/LiskHQ/lisk/pull/2798) ([pablitovicente](https://github.com/pablitovicente))
- Resolve the conflicting responsibilities between api/controller and module of Node  - Closes #2783 [#2796](https://github.com/LiskHQ/lisk/pull/2796) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Use lisk-scripts 0.7.0 - Closes #2791 [#2792](https://github.com/LiskHQ/lisk/pull/2792) ([Nazgolze](https://github.com/Nazgolze))
- Fix JSDoc return type - Closes #2788 [#2789](https://github.com/LiskHQ/lisk/pull/2789) ([Tschakki](https://github.com/Tschakki))
- Implement pending tests of DB Entities - Closes #2688 [#2785](https://github.com/LiskHQ/lisk/pull/2785) ([pablitovicente](https://github.com/pablitovicente))
- Extensible Data Persistence Model - Closes #2576 [#2781](https://github.com/LiskHQ/lisk/pull/2781) ([lsilvs](https://github.com/lsilvs))
- Implement delete method for entities - Closes #2699 [#2759](https://github.com/LiskHQ/lisk/pull/2759) ([lsilvs](https://github.com/lsilvs))
- Update the loading of SQL files to avoid warning messages - Closes #2737 [#2758](https://github.com/LiskHQ/lisk/pull/2758) ([lsilvs](https://github.com/lsilvs))
- Remove PM2 section from Readme - Closes #2756 [#2757](https://github.com/LiskHQ/lisk/pull/2757) ([Tschakki](https://github.com/Tschakki))
- Update node reference in Readme - Closes #2754 [#2755](https://github.com/LiskHQ/lisk/pull/2755) ([Tschakki](https://github.com/Tschakki))
- Clean db namespace and remove its reference usage - Closes #2632 [#2753](https://github.com/LiskHQ/lisk/pull/2753) ([nazarhussain](https://github.com/nazarhussain))
- Use consistent informative versioning scheme - Closes #2594 [#2751](https://github.com/LiskHQ/lisk/pull/2751) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- getDelegatesFromPreviousRound using non existing library.db.rounds - Closes #2749 [#2750](https://github.com/LiskHQ/lisk/pull/2750) ([lsilvs](https://github.com/lsilvs))
- Remove db.migration repository - Closes #2626 [#2745](https://github.com/LiskHQ/lisk/pull/2745) ([pablitovicente](https://github.com/pablitovicente))
- Remove db.delegates repository - Closes #2735 [#2742](https://github.com/LiskHQ/lisk/pull/2742) ([nazarhussain](https://github.com/nazarhussain))
- Remove db.votes repository - Closes #2733 [#2741](https://github.com/LiskHQ/lisk/pull/2741) ([nazarhussain](https://github.com/nazarhussain))
- Remove db.voters repository - Closes #2734 [#2740](https://github.com/LiskHQ/lisk/pull/2740) ([nazarhussain](https://github.com/nazarhussain))
- Remove db.blocks repository - Closes #2629 [#2739](https://github.com/LiskHQ/lisk/pull/2739) ([lsilvs](https://github.com/lsilvs))
- Add interface to register entities with storage module - Closes #2736 [#2738](https://github.com/LiskHQ/lisk/pull/2738) ([nazarhussain](https://github.com/nazarhussain))
- Upgrade dependencies January 2019 - Related to #2500 [#2732](https://github.com/LiskHQ/lisk/pull/2732) ([diego-G](https://github.com/diego-G))
- Enable readonly API mode when snapshotting - Closes #2729 [#2731](https://github.com/LiskHQ/lisk/pull/2731) ([diego-G](https://github.com/diego-G))
- Refactor `modules.blocks[.shared]` namespace - Closes #2625 [#2730](https://github.com/LiskHQ/lisk/pull/2730) ([lsilvs](https://github.com/lsilvs))
- Replace extended blocks getter interfaces with storage.entities.Block.get - Closes #2726 [#2727](https://github.com/LiskHQ/lisk/pull/2727) ([lsilvs](https://github.com/lsilvs))
- Restore stability of peers blacklists and disconnections in Network Tests - Closes #2670 [#2725](https://github.com/LiskHQ/lisk/pull/2725) ([diego-G](https://github.com/diego-G))
- Remove db.transactions repository - Closes #2628 [#2724](https://github.com/LiskHQ/lisk/pull/2724) ([pablitovicente](https://github.com/pablitovicente))
- Update lisk-newrelic Node.js to v10.14.1 - Close #2722 [#2723](https://github.com/LiskHQ/lisk/pull/2723) ([diego-G](https://github.com/diego-G))
- Remove unnecessary webSocket config parameter `appName` - Closes #2720 [#2721](https://github.com/LiskHQ/lisk/pull/2721) ([diego-G](https://github.com/diego-G))
- Use sodium-friends/sodium-native and bump to version 2.2.4 - Closes #2717 [#2718](https://github.com/LiskHQ/lisk/pull/2718) ([fchavant](https://github.com/fchavant))
- Missing symlink of PM2 and Lisk Commander in builds - Closes #2715 [#2716](https://github.com/LiskHQ/lisk/pull/2716) ([fchavant](https://github.com/fchavant))
- Update Postgres version in README - Closes #2713 [#2714](https://github.com/LiskHQ/lisk/pull/2714) ([Tschakki](https://github.com/Tschakki))
- Remove db.rounds repository - Closes #2630, #2707 [#2712](https://github.com/LiskHQ/lisk/pull/2712) ([pablitovicente](https://github.com/pablitovicente))
- Implement storage extended Block - Closes #2698 [#2711](https://github.com/LiskHQ/lisk/pull/2711) ([lsilvs](https://github.com/lsilvs))
- Remove db.accounts repository - Closes #2709 [#2710](https://github.com/LiskHQ/lisk/pull/2710) ([nazarhussain](https://github.com/nazarhussain))
- Create Round entity with CRUD operations and unit tests - Closes #2618 [#2704](https://github.com/LiskHQ/lisk/pull/2704) ([pablitovicente](https://github.com/pablitovicente))
- Replace transactions getter interfaces with storage.entities.Transaction.get - Closes #2621 [#2703](https://github.com/LiskHQ/lisk/pull/2703) ([nazarhussain](https://github.com/nazarhussain))
- Allow sort to not force a default - Closes #2700 [#2702](https://github.com/LiskHQ/lisk/pull/2702) ([pablitovicente](https://github.com/pablitovicente))
- Allow sort to not force a default - Closes #2700 [#2701](https://github.com/LiskHQ/lisk/pull/2701) ([pablitovicente](https://github.com/pablitovicente))
- Remove clock from Peers - Closes #2687 [#2697](https://github.com/LiskHQ/lisk/pull/2697) ([pablitovicente](https://github.com/pablitovicente))
- Remove db.peers repository - Closes #2631 [#2695](https://github.com/LiskHQ/lisk/pull/2695) ([pablitovicente](https://github.com/pablitovicente))
- Update Node.js GPG keyring - Closes #2689 [#2693](https://github.com/LiskHQ/lisk/pull/2693) ([fchavant](https://github.com/fchavant))
- Create Migration entity with CRUD operations and unit tests - Closes #2619 [#2692](https://github.com/LiskHQ/lisk/pull/2692) ([pablitovicente](https://github.com/pablitovicente))
- Replace account getter interfaces with storage.entities.Account.get - Closes #2620, #2623 [#2691](https://github.com/LiskHQ/lisk/pull/2691) ([nazarhussain](https://github.com/nazarhussain))
- Replace blocks getter interfaces with storage.entities.Block.get - Closes #2622 [#2690](https://github.com/LiskHQ/lisk/pull/2690) ([lsilvs](https://github.com/lsilvs))
- Base Entity parseFilters() is not grouping OR and AND - Closes #2685 [#2686](https://github.com/LiskHQ/lisk/pull/2686) ([pablitovicente](https://github.com/pablitovicente))
- Create Transaction entity with CRUD operations and unit tests - Closes #2616 [#2684](https://github.com/LiskHQ/lisk/pull/2684) ([nazarhussain](https://github.com/nazarhussain))
- Create methods must accept arrays as well - Closes #2677 [#2683](https://github.com/LiskHQ/lisk/pull/2683) ([nazarhussain](https://github.com/nazarhussain))
- Add unit tests for signatures module - Closes #2445 [#2682](https://github.com/LiskHQ/lisk/pull/2682) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Implement count method for entities - Closes #2676 [#2681](https://github.com/LiskHQ/lisk/pull/2681) ([lsilvs](https://github.com/lsilvs))
- Add sorting support in getter functions - Closes #2675 [#2680](https://github.com/LiskHQ/lisk/pull/2680) ([lsilvs](https://github.com/lsilvs))
- Archive Jenkins network tests logs - Closes #2634 [#2678](https://github.com/LiskHQ/lisk/pull/2678) ([fchavant](https://github.com/fchavant))
- Disable multiple workers support on P2P layer - Closes #2541 [#2674](https://github.com/LiskHQ/lisk/pull/2674) ([diego-G](https://github.com/diego-G))
- Refactor data persistence layer to improve quality and usability - Closes #2669 [#2673](https://github.com/LiskHQ/lisk/pull/2673) ([nazarhussain](https://github.com/nazarhussain))
- Add full unit test coverage for Node module - Closes #2446 [#2672](https://github.com/LiskHQ/lisk/pull/2672) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Create Peer entity with CRUD operations and unit tests - Closes #2617 [#2666](https://github.com/LiskHQ/lisk/pull/2666) ([pablitovicente](https://github.com/pablitovicente))
- Invalid error message on second signature registration - Closes #2606 [#2664](https://github.com/LiskHQ/lisk/pull/2664) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Application no longer crashing on dns lookup failure - Closes #2608 [#2663](https://github.com/LiskHQ/lisk/pull/2663) ([limiaspasdaniel](https://github.com/limiaspasdaniel))
- Create npm-shrinkwrap.json, use 'npm ci' in build - Closes #2656 [#2662](https://github.com/LiskHQ/lisk/pull/2662) ([fchavant](https://github.com/fchavant))
- Create Block entity with CRUD operations and unit tests - Closes #2615 [#2661](https://github.com/LiskHQ/lisk/pull/2661) ([lsilvs](https://github.com/lsilvs))
- Clean network test suite - Closes #2438 [#2659](https://github.com/LiskHQ/lisk/pull/2659) ([diego-G](https://github.com/diego-G))
- Overhaul Jenksinfile - Closes #2657 [#2658](https://github.com/LiskHQ/lisk/pull/2658) ([fchavant](https://github.com/fchavant))
- Upgrade Node.js version from 8.14.0 to 10.14.1 - Closes #2647 [#2650](https://github.com/LiskHQ/lisk/pull/2650) ([diego-G](https://github.com/diego-G))
- Apply eslint-rule no-restricted-globals - Related to #1597 [#2649](https://github.com/LiskHQ/lisk/pull/2649) ([diego-G](https://github.com/diego-G))
- Apply eslint-rule no-prototype-builtins - Related to #1597 [#2646](https://github.com/LiskHQ/lisk/pull/2646) ([diego-G](https://github.com/diego-G))
- Apply eslint-rule no-restricted-syntax - Related to #1597 [#2643](https://github.com/LiskHQ/lisk/pull/2643) ([diego-G](https://github.com/diego-G))
- Apply eslint-rule prefer-rest-params - Related to #1597 [#2640](https://github.com/LiskHQ/lisk/pull/2640) ([diego-G](https://github.com/diego-G))
- Create basic structure for entities and storage initialization - Closes #2613, #2614 [#2636](https://github.com/LiskHQ/lisk/pull/2636) ([nazarhussain](https://github.com/nazarhussain))

",50873641
115,False,False,2019-02-13T15:12:37Z,2019-02-14T15:50:08Z,"# Change Log

## [v1.4.1](https://github.com/LiskHQ/lisk/tree/v1.4.1) (2019-02-14)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/v1.4.0...v1.4.1)

**Closed issues:**
- Not allow the null character in Dapp registration #2886

**Merged pull requests:**
- Not allow the null character in Dapp registration - Closes #2886  (https://github.com/LiskHQ/lisk/commit/5c7e2944383bf369f1343fba62c71e84de6f9664) ([lsilvs](https://github.com/lsilvs))",50873641
116,False,False,2019-01-07T10:47:43Z,2019-01-07T13:36:24Z,"# Change Log

## [v1.4.0](https://github.com/LiskHQ/lisk/tree/v1.4.0) (2019-01-07)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/v1.3.0...v1.4.0)

**Closed issues:**
- Fix misuse of sort method while updating delegates list cache [#2652](https://github.com/LiskHQ/lisk/issues/2652)
- Endpoint /api/delegates/forgers fail with offset > 100 [#2651](https://github.com/LiskHQ/lisk/issues/2651)
- Configuration of https timeouts being set in wrong place  [#2644](https://github.com/LiskHQ/lisk/issues/2644)
- Update Node.js GPG keyring [#2641](https://github.com/LiskHQ/lisk/issues/2641)
- Do not call callback multiple times when Redis is disconnected [#2635](https://github.com/LiskHQ/lisk/issues/2635)
- Remove unused Jenkinsfiles [#2602](https://github.com/LiskHQ/lisk/issues/2602)
- Overhaul Jenkinsfile.network [#2598](https://github.com/LiskHQ/lisk/issues/2598)
- Use lisk-scripts version 0.6.1 [#2595](https://github.com/LiskHQ/lisk/issues/2595)
- Add unit tests for updateDelegateListCache & clearLastDelegateListCache methods [#2593](https://github.com/LiskHQ/lisk/issues/2593)
- getLastCommit fails if git is not installed [#2588](https://github.com/LiskHQ/lisk/issues/2588)
- API /node/constants build has a invalid timestamp value and format [#2586](https://github.com/LiskHQ/lisk/issues/2586)
- Set build constants in Dockerfile [#2584](https://github.com/LiskHQ/lisk/issues/2584)
- Update build/config.sh to pull in lisk-scripts 0.6.0  [#2569](https://github.com/LiskHQ/lisk/issues/2569)
- Don't use ""="" prefix in package.json to freeze dependencies [#2568](https://github.com/LiskHQ/lisk/issues/2568)
- Update Node.js version from 8.12.0 to 8.13.0 [#2567](https://github.com/LiskHQ/lisk/issues/2567)
- Client doesn't get new blocks after reload and is stuck in ""Releasing unqued broadcasts""-loops [#2558](https://github.com/LiskHQ/lisk/issues/2558)
- Use UNLOGGED Tables for huge performance gain during snapshotting [#2556](https://github.com/LiskHQ/lisk/issues/2556)
- Transactions made are not always included in the 'block/change' socket event on Testnet [#2533](https://github.com/LiskHQ/lisk/issues/2533)
- Add Eslint rule to avoid Chai aliases in favour of readability [#2532](https://github.com/LiskHQ/lisk/issues/2532)
- Docker compose support for dynamic inclusion and exclusion of services [#2531](https://github.com/LiskHQ/lisk/issues/2531)
- Wrong error message  ""API access denied"" [#2514](https://github.com/LiskHQ/lisk/issues/2514)
- Regression after merging 1.1.1 related to Bignumber's upgrade [#2503](https://github.com/LiskHQ/lisk/issues/2503)
- Update Dependencies not requiring code changes [#2498](https://github.com/LiskHQ/lisk/issues/2498)
- Peers insert failed due smallint out of range [#2496](https://github.com/LiskHQ/lisk/issues/2496)
- Enforce Chai expects to have actual assertions [#2480](https://github.com/LiskHQ/lisk/issues/2480)
- Package Node.js specified in .nvmrc [#2572](https://github.com/LiskHQ/lisk/issues/2572)
- Remove unused exception variables from config and their related code [#2462](https://github.com/LiskHQ/lisk/issues/2462)
- Received post block broadcast request in unexpected format [#2453](https://github.com/LiskHQ/lisk/issues/2453)
- Create log file dynamically based on network [#2452](https://github.com/LiskHQ/lisk/issues/2452)
- Always pass a callback as the last function parameter [#2449](https://github.com/LiskHQ/lisk/issues/2449)
- Remove ""eslint-disable"" statements from on top of files [#2447](https://github.com/LiskHQ/lisk/issues/2447)
- Remove transaction fee exception from betanet config [#2443](https://github.com/LiskHQ/lisk/issues/2443)
- Unify indexOf & includes usage in exception handling [#2436](https://github.com/LiskHQ/lisk/issues/2436)
- Upgrade bignumber.js dependency [#2427](https://github.com/LiskHQ/lisk/issues/2427)
- Application start takes too much time [#2426](https://github.com/LiskHQ/lisk/issues/2426)
- Redundant logic in getBlockSlotData [#2422](https://github.com/LiskHQ/lisk/issues/2422)
- Node receives blocks during snapshotting  [#2419](https://github.com/LiskHQ/lisk/issues/2419)
- Use ACTIVE_DELEGATES constant in corresponding places [#2413](https://github.com/LiskHQ/lisk/issues/2413)
- Allow to search for transactions by data field [#2404](https://github.com/LiskHQ/lisk/issues/2404)
- Balance change after new block is delayed by several seconds [#2403](https://github.com/LiskHQ/lisk/issues/2403)
- Makefile [#2400](https://github.com/LiskHQ/lisk/issues/2400)
- During the syncing process, do not process bundled transactions [#2398](https://github.com/LiskHQ/lisk/issues/2398)
- Add fromTimestamp and toTimestamp to Blocks API endpoint [#2391](https://github.com/LiskHQ/lisk/issues/2391)
- Improve performance of blockchain synchronisation process [#2384](https://github.com/LiskHQ/lisk/issues/2384)
- Change BYTEA to VARCHAR [#2314](https://github.com/LiskHQ/lisk/issues/2314)
- Clean up loadBlocksFromNetwork function in modules.loader [#2292](https://github.com/LiskHQ/lisk/issues/2292)
- Add ready and signatures parameters as required to all unsigned transactions  [#1695](https://github.com/LiskHQ/lisk/issues/1695)


**Merged pull requests:**
- Use strict nodejs engine in docker [#2706](https://github.com/LiskHQ/lisk/pull/2706) ([ManuGowda](https://github.com/ManuGowda))
- Peers insert failed due smallint out of range - Closes #2496 [#2660](https://github.com/LiskHQ/lisk/pull/2660) ([pablitovicente](https://github.com/pablitovicente))
- Maintain delegates list in memory - Closes #2421 [#2655](https://github.com/LiskHQ/lisk/pull/2655) ([4miners](https://github.com/4miners))
- Fix misuse of sort method while updating delegates list cache [#2654](https://github.com/LiskHQ/lisk/pull/2654) ([lsilvs](https://github.com/lsilvs))
- Maintain delegates list in memory - Closes #2421 [#2653](https://github.com/LiskHQ/lisk/pull/2653) ([4miners](https://github.com/4miners))
- Configuration of https timeouts being set in wrong place - Closes #2644 [#2645](https://github.com/LiskHQ/lisk/pull/2645) ([pablitovicente](https://github.com/pablitovicente))
- Build: update Node.js GPG keyring - Closes #2641 [#2642](https://github.com/LiskHQ/lisk/pull/2642) ([fchavant](https://github.com/fchavant))
- Do not call callback multiple times when Redis is disconnected - Closes #2635 [#2639](https://github.com/LiskHQ/lisk/pull/2639) ([diego-G](https://github.com/diego-G))
- Endpoint /api/delegates/forgers fail with offset > 100 - Closes #2651 [#2637](https://github.com/LiskHQ/lisk/pull/2637) ([Bit-Shifts](https://github.com/Bit-Shifts))
- Add unit tests for updateDelegateListCache & clearLastDelegateListCache methods - Closes #2593 [#2612](https://github.com/LiskHQ/lisk/pull/2612) ([yatki](https://github.com/yatki))
- Do not process bundled transactions while node is syncing - Closes #2398 [#2607](https://github.com/LiskHQ/lisk/pull/2607) ([diego-G](https://github.com/diego-G))
- Remove unused Jenkinsfiles - Closes #2602 [#2604](https://github.com/LiskHQ/lisk/pull/2604) ([fchavant](https://github.com/fchavant))
- Apply eslint-rule no-var- Related to #1597 [#2603](https://github.com/LiskHQ/lisk/pull/2603) ([diego-G](https://github.com/diego-G))
- Overhaul Jenkinsfile.network [#2600](https://github.com/LiskHQ/lisk/pull/2600) ([fchavant](https://github.com/fchavant))
- Build: use lisk-scripts 0.6.1 - Closes #2595 [#2599](https://github.com/LiskHQ/lisk/pull/2599) ([fchavant](https://github.com/fchavant))
- Always pass a callback as the last function parameter - Closes #2449 [#2597](https://github.com/LiskHQ/lisk/pull/2597) ([pablitovicente](https://github.com/pablitovicente))
- Fix get last commit helper when git is not installed - Closes #2588 [#2596](https://github.com/LiskHQ/lisk/pull/2596) ([diego-G](https://github.com/diego-G))
- Change format of 'build' constant - Closes #2586 [#2591](https://github.com/LiskHQ/lisk/pull/2591) ([fchavant](https://github.com/fchavant))
- Apply eslint-rule no-bitwise - Related to #1597 [#2590](https://github.com/LiskHQ/lisk/pull/2590) ([diego-G](https://github.com/diego-G))
- Apply eslint-rule no-nested-ternary - Related to #1597 [#2589](https://github.com/LiskHQ/lisk/pull/2589) ([diego-G](https://github.com/diego-G))
- Set build constants in Dockerfile - Closes #2584 [#2587](https://github.com/LiskHQ/lisk/pull/2587) ([fchavant](https://github.com/fchavant))
- Apply eslint-rule no-shadow - Related to #1597 [#2583](https://github.com/LiskHQ/lisk/pull/2583) ([diego-G](https://github.com/diego-G))
- Unify indexOf & includes usage in exception handling - Closes #2436 [#2581](https://github.com/LiskHQ/lisk/pull/2581) ([yatki](https://github.com/yatki))
- Build: read Node.js version specified in .nvmrc - Closes #2572 [#2575](https://github.com/LiskHQ/lisk/pull/2575) ([fchavant](https://github.com/fchavant))
- Update build/config.sh to pull in lisk-scripts 0.6.0 - Closes #2569 [#2573](https://github.com/LiskHQ/lisk/pull/2573) ([fchavant](https://github.com/fchavant))
- Don't use ""="" prefix in package.json to freeze dependencies - Closes #2568 [#2571](https://github.com/LiskHQ/lisk/pull/2571) ([MaciejBaj](https://github.com/MaciejBaj))
- Update Node.js version from 8.12.0 to 8.13.0 - Closes #2567 [#2570](https://github.com/LiskHQ/lisk/pull/2570) ([MaciejBaj](https://github.com/MaciejBaj))
- Apply eslint-rule new-cap - Related to #1597 [#2566](https://github.com/LiskHQ/lisk/pull/2566) ([diego-G](https://github.com/diego-G))
- Apply eslint-rule consistent-return - Related to #1597 [#2565](https://github.com/LiskHQ/lisk/pull/2565) ([diego-G](https://github.com/diego-G))
- Apply eslint-rule array-callback-return - Related to #1597 [#2563](https://github.com/LiskHQ/lisk/pull/2563) ([diego-G](https://github.com/diego-G))
- Apply eslint-rule eqeqeq - Related to #1597 [#2562](https://github.com/LiskHQ/lisk/pull/2562) ([diego-G](https://github.com/diego-G))
- Add eslint-rule callback-return - Related to #1597 [#2561](https://github.com/LiskHQ/lisk/pull/2561) ([diego-G](https://github.com/diego-G))
- Clean up loadBlocksFromNetwork function from loader module - Closes #2292 & #2384 [#2555](https://github.com/LiskHQ/lisk/pull/2555) ([diego-G](https://github.com/diego-G))
- Update Development Dependencies not requiring code changes - Closes #2499 [#2554](https://github.com/LiskHQ/lisk/pull/2554) ([pablitovicente](https://github.com/pablitovicente))
- Update Dependencies not requiring code changes - Closes #2498 [#2553](https://github.com/LiskHQ/lisk/pull/2553) ([pablitovicente](https://github.com/pablitovicente))
- Received post block broadcast request in unexpected format - Closes #2453 [#2552](https://github.com/LiskHQ/lisk/pull/2552) ([lsilvs](https://github.com/lsilvs))
- Refactor eslint-disable comments - Closes #2447 [#2547](https://github.com/LiskHQ/lisk/pull/2547) ([yatki](https://github.com/yatki))
- Move LiskHQ/lisk-build into LiskHQ/lisk and introduce basic Makefile - Closes #2400 [#2545](https://github.com/LiskHQ/lisk/pull/2545) ([fchavant](https://github.com/fchavant))
- Maintain delegate list in memory - Closes #2421 [#2543](https://github.com/LiskHQ/lisk/pull/2543) ([yatki](https://github.com/yatki))
- Multiple docker compose files - Closes #2531 [#2538](https://github.com/LiskHQ/lisk/pull/2538) ([fchavant](https://github.com/fchavant))
- Wrong error message ""API access denied"" - Closes #2514 [#2537](https://github.com/LiskHQ/lisk/pull/2537) ([pablitovicente](https://github.com/pablitovicente))
- Add ready and signatures parameters as required to all unsigned transactions - Closes #1695 [#2530](https://github.com/LiskHQ/lisk/pull/2530) ([pablitovicente](https://github.com/pablitovicente))
- Balance change after new block is delayed by several seconds - Closes #2403 [#2519](https://github.com/LiskHQ/lisk/pull/2519) ([lsilvs](https://github.com/lsilvs))
- Stop receiving blocks during snapshotting - Closes #2419 [#2515](https://github.com/LiskHQ/lisk/pull/2515) ([diego-G](https://github.com/diego-G))
- Allow fuzzy search on data filter when getting transactions - Closes #2404 [#2513](https://github.com/LiskHQ/lisk/pull/2513) ([diego-G](https://github.com/diego-G))
- Fix more false positives on our test suites - Closes #2480 [#2508](https://github.com/LiskHQ/lisk/pull/2508) ([diego-G](https://github.com/diego-G))
- Peers insert failed due smallint out of range - Closes #2496 [#2507](https://github.com/LiskHQ/lisk/pull/2507) ([pablitovicente](https://github.com/pablitovicente))
- Fix regression after merging 1.1.1 into development related to Bignumber upgrade - Closes #2503 [#2504](https://github.com/LiskHQ/lisk/pull/2504) ([diego-G](https://github.com/diego-G))
- Redundant logic in getBlockSlotData - Closes #2422 [#2488](https://github.com/LiskHQ/lisk/pull/2488) ([lsilvs](https://github.com/lsilvs))
- Application start takes too much time - Closes #2426 [#2485](https://github.com/LiskHQ/lisk/pull/2485) ([pablitovicente](https://github.com/pablitovicente))
- Logs are created dynamically based on network name - Closes #2452 [#2475](https://github.com/LiskHQ/lisk/pull/2475) ([pablitovicente](https://github.com/pablitovicente))
- Add from/to timestamp filter to get blocks endpoint - Closes #2391 [#2472](https://github.com/LiskHQ/lisk/pull/2472) ([diego-G](https://github.com/diego-G))
- Add filter data field to get transactions endpoint - Closes #2404 [#2470](https://github.com/LiskHQ/lisk/pull/2470) ([diego-G](https://github.com/diego-G))
- Remove slots.delegates & use ACTIVE_DELEGATES constant - Closes #2413 [#2469](https://github.com/LiskHQ/lisk/pull/2469) ([yatki](https://github.com/yatki))
- Removed unused exception variables from config and their related code  - Closes #2462 [#2463](https://github.com/LiskHQ/lisk/pull/2463) ([diego-G](https://github.com/diego-G))
- Upgrade bignumber.js library to 7.2.1 - Closes #2427 [#2461](https://github.com/LiskHQ/lisk/pull/2461) ([diego-G](https://github.com/diego-G))",50873641
117,False,False,2018-12-05T08:59:31Z,2018-12-05T13:16:31Z,"## [v1.3.1](https://github.com/LiskHQ/lisk/tree/v1.3.1) (2018-12-05)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/v1.3.1...HEAD)

**Closed issues:**
- Update NodeJS to v8.14.0 [#2601](https://github.com/LiskHQ/lisk/issues/2601)
- DoS attack leads to exhaust node's memory, P2P layer [#2611](https://github.com/LiskHQ/lisk/issues/2611)
- Update lisk-newrelic version its Node.js update to v8.14.0 [#2610](https://github.com/LiskHQ/lisk/issues/2610)
- Update SocketCluster to version 14.3.3 [#2609](https://github.com/LiskHQ/lisk/issues/2609)

**Merged pull requests:**
- Update NodeJS to v8.14.0 - Closes #2601 ([#0370ec2](https://github.com/LiskHQ/lisk/commit/0370ec25d5cc01ffca59374b079827c7e6134fa8)) ([pablitovicente](https://github.com/pablitovicente))
- DoS attack leads to exhaust node's memory ([#63cc257](https://github.com/LiskHQ/lisk/commit/63cc2579d153ef70ff8f9d49bdc01d3275806403)) ([pablitovicente](https://github.com/pablitovicente))
- DoS attack leads to exhaust node's memory, P2P layer - Closes #2611 ([#54683fcb](https://github.com/LiskHQ/lisk/commit/54683fcb2c4f6a68fd2f9fcea20cbe9129ae2edb)) ([MaciejBaj](https://github.com/MaciejBaj))
- Update lisk-newrelic version its Node.js update to v8.14.0 - Closes #2610 ([#98d74e4f](https://github.com/LiskHQ/lisk/commit/98d74e4f1cce28b73480d04b7177797cf6ff4563)) ([MaciejBaj](https://github.com/MaciejBaj))
- Bump socketcluster and socketcluster-client versions - Closes #2609 ([#87a4f05](https://github.com/LiskHQ/lisk/commit/87a4f05b99f1d412c157cfa01ed60d02b07edb67)) ([jondubois](https://github.com/jondubois))

",50873641
118,False,False,2018-11-19T10:49:30Z,2018-11-19T11:53:17Z,"
# Change Log

## [v1.3.0](https://github.com/LiskHQ/lisk/tree/v1.3.0) (2018-11-19)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/v1.2.1...v1.3.0)

**Closed issues:**
- Docker is missing curl after introducing node:8-alpine [#2550](https://github.com/LiskHQ/lisk/issues/2550)
- Update config fails to migrate from 1.2.1 to 1.3.0 [#2542](https://github.com/LiskHQ/lisk/issues/2542)
- SQL migrations added in 1.3.0 are not applied [#2535](https://github.com/LiskHQ/lisk/issues/2535)
- Use `npm ci` for faster, more reliable builds [#2526](https://github.com/LiskHQ/lisk/issues/2526)
- Change Node image used in Dockerfile to Alpine version [#2525](https://github.com/LiskHQ/lisk/issues/2525)
- Set engine-strict parameter to true in .npmrc [#2506](https://github.com/LiskHQ/lisk/issues/2506)
- setAccountAndGet function returns sender as null leading to fatal exception [#2494](https://github.com/LiskHQ/lisk/issues/2494)
- Node fail to start because of ""Invalid block reward"" on mainnet [#2481](https://github.com/LiskHQ/lisk/issues/2481)
- Read newrelic license key also from the config file [#2415](https://github.com/LiskHQ/lisk/issues/2415)
- Add unit tests to ensure node and postgres versions are supported [#2388](https://github.com/LiskHQ/lisk/issues/2388)
- Remove Peers Blacklist from Network Test suite [#2386](https://github.com/LiskHQ/lisk/issues/2386)
- Use proper name formatting for all SQL queries [#2383](https://github.com/LiskHQ/lisk/issues/2383)
- Prefer deconstruction when using Lisk Core constants [#2381](https://github.com/LiskHQ/lisk/issues/2381)
- Expire transaction test is failing randomly [#2377](https://github.com/LiskHQ/lisk/issues/2377)
- Inconsistent transaction response when using senderIdOrRecipientId [#2358](https://github.com/LiskHQ/lisk/issues/2358)
- Use two different DNS domains for seed nodes in config.json [#2347](https://github.com/LiskHQ/lisk/issues/2347)
- Refactor checkIpInList function [#2343](https://github.com/LiskHQ/lisk/issues/2343)
- Add comments to SYNC_MODES in Network tests [#2335](https://github.com/LiskHQ/lisk/issues/2335)
- Use asynchronous childProcess commands in Network tests [#2334](https://github.com/LiskHQ/lisk/issues/2334)
- Replace hardcoded values from description of Peer Disconnect network tests [#2333](https://github.com/LiskHQ/lisk/issues/2333)
- Wait for consensus to be achieved in Peers Network tests [#2332](https://github.com/LiskHQ/lisk/issues/2332)
- Do not verify transactions amount against of ""totalAmount"" [#2319](https://github.com/LiskHQ/lisk/issues/2319)
- Perform strict expectations in Peers Blacklisting tests [#2276](https://github.com/LiskHQ/lisk/issues/2276)
- Network test suite improvements [#2230](https://github.com/LiskHQ/lisk/issues/2230)
- checkIpInList should not manipulate inputs [#2212](https://github.com/LiskHQ/lisk/issues/2212)
- Multiple rows for one transaction ID in transaction asset tables in snapshots [#2054](https://github.com/LiskHQ/lisk/issues/2054)
- Develop a strategy and related toolset to benchmark database layer [#1780](https://github.com/LiskHQ/lisk/issues/1780)
- Refactor lisk-core constants to use const, upper case with underscores [#1774](https://github.com/LiskHQ/lisk/issues/1774)
- API performance benchmarking [#1623](https://github.com/LiskHQ/lisk/issues/1623)
- node-gyp requirement should be documented [#1224](https://github.com/LiskHQ/lisk/issues/1224)
- Fix unstable cache tests [#955](https://github.com/LiskHQ/lisk/issues/955)
- Better regular expression for vote in logic/vote -> verifyVote function [#627](https://github.com/LiskHQ/lisk/issues/627)


**Merged pull requests:**
- Dockerfile: explicitly install curl - Closes #2550 [#2551](https://github.com/LiskHQ/lisk/pull/2551) ([fchavant](https://github.com/fchavant))
- Update config fails to migrate from 1.2.1 to 1.3.0 - Closes #2542 [#2544](https://github.com/LiskHQ/lisk/pull/2544) ([nazarhussain](https://github.com/nazarhussain))
- SQL migrations added in 1.3.0 are not applied - Closes #2535 [#2536](https://github.com/LiskHQ/lisk/pull/2536) ([4miners](https://github.com/4miners))
- Dockerfile: use node:8-alpine as base image - Closes #2525 [#2534](https://github.com/LiskHQ/lisk/pull/2534) ([fchavant](https://github.com/fchavant))
- Use npm ci - Closes #2526 [#2527](https://github.com/LiskHQ/lisk/pull/2527) ([fchavant](https://github.com/fchavant))
- Set engine-strict to true in .npmrc - Closes #2506 [#2509](https://github.com/LiskHQ/lisk/pull/2509) ([diego-G](https://github.com/diego-G))
- setAccountAndGet function returns sender as null leading to fatal exception - Closes #2494 [#2505](https://github.com/LiskHQ/lisk/pull/2505) ([lsilvs](https://github.com/lsilvs))
- Make rewards and offset uppercase for mainnet constants - Closes #2481 [#2483](https://github.com/LiskHQ/lisk/pull/2483) ([4miners](https://github.com/4miners))
- Add comments to SYNC_MODES in Network tests - Closes #2335 [#2457](https://github.com/LiskHQ/lisk/pull/2457) ([jondubois](https://github.com/jondubois))
- Perform strict expectations in Peers Blacklisting tests - Closes #2276 and #2386 [#2454](https://github.com/LiskHQ/lisk/pull/2454) ([jondubois](https://github.com/jondubois))
- Wait for consensus to be achieved in Peers Network tests - Closes #2332 [#2431](https://github.com/LiskHQ/lisk/pull/2431) ([jondubois](https://github.com/jondubois))
- Read newrelic license key also from the config file - Closes #2415 [#2416](https://github.com/LiskHQ/lisk/pull/2416) ([nazarhussain](https://github.com/nazarhussain))
- Refactor constants usage to use deconstructors - Closes #2381 [#2409](https://github.com/LiskHQ/lisk/pull/2409) ([yatki](https://github.com/yatki))
- Fix inconsistent transactions response caused by senderIdOrRecipientId - Closes #2358 [#2408](https://github.com/LiskHQ/lisk/pull/2408) ([yatki](https://github.com/yatki))
- Fixed README.md typos [#2405](https://github.com/LiskHQ/lisk/pull/2405) ([Eupharia113](https://github.com/Eupharia113))
- Add support for running standalone tests - Closes #955 [#2402](https://github.com/LiskHQ/lisk/pull/2402) ([yatki](https://github.com/yatki))
- Use proper name formatting for all SQL queries - Closes #2383  [#2401](https://github.com/LiskHQ/lisk/pull/2401) ([nazarhussain](https://github.com/nazarhussain))
- API performance benchmarking via newrelic - Closes #1623, #1780 [#2396](https://github.com/LiskHQ/lisk/pull/2396) ([nazarhussain](https://github.com/nazarhussain))
- Add tests to check Node & Postgresql versions - Closes #2388 [#2392](https://github.com/LiskHQ/lisk/pull/2392) ([yatki](https://github.com/yatki))
- Use two different DNS domains for seed nodes - Closes #2347 [#2387](https://github.com/LiskHQ/lisk/pull/2387) ([fchavant](https://github.com/fchavant))
- Use asynchronous childProcess commands in Network tests - Closes #2334 [#2382](https://github.com/LiskHQ/lisk/pull/2382) ([jondubois](https://github.com/jondubois))
- Disable totalAmount verification on Transaction - Closes #2319 [#2380](https://github.com/LiskHQ/lisk/pull/2380) ([yatki](https://github.com/yatki))
- Expire transaction test is failing randomly - Closes #2377 [#2379](https://github.com/LiskHQ/lisk/pull/2379) ([ManuGowda](https://github.com/ManuGowda))
- Replace hardcoded values from description of Peer Disconnect network tests - Closes #2333 [#2378](https://github.com/LiskHQ/lisk/pull/2378) ([jondubois](https://github.com/jondubois))
- Better regular expression for verifying vote in verify vote - Close #627 [#2375](https://github.com/LiskHQ/lisk/pull/2375) ([SargeKhan](https://github.com/SargeKhan))
- Remove duplicate asset rows from trs tables - Closes #2054 [#2372](https://github.com/LiskHQ/lisk/pull/2372) ([SargeKhan](https://github.com/SargeKhan))
- Refactor Lisk core constants - Closes #1774 [#2371](https://github.com/LiskHQ/lisk/pull/2371) ([yatki](https://github.com/yatki))
- Refactor checkIpInList function - Closes #2343, #2212 [#2344](https://github.com/LiskHQ/lisk/pull/2344) ([Tschakki](https://github.com/Tschakki))",50873641
119,False,False,2018-11-10T10:36:43Z,2018-11-10T16:06:25Z,"# Change Log

## [v1.2.1](https://github.com/LiskHQ/lisk/tree/v1.2.1) (2018-11-10)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/v1.2.0...v1.2.1)

**Closed issues:**
- Validate signatures against different publicKeys within keysgroup #2540

**Merged pull requests:**
- Validate signatures against different publicKeys within keysgroup - Closes #2540  (https://github.com/LiskHQ/lisk/commit/7d10367d67915914c1fad22e3608d4ac36dc02f1) ([4miners](https://github.com/4miners))",50873641
120,False,False,2018-11-08T11:03:10Z,2018-11-08T13:09:45Z,"# Change Log

## [v1.2.0](https://github.com/LiskHQ/lisk/tree/v1.2.0) (2018-11-08)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/v1.1.0...v1.2.0)

**Closed issues:**
- Configure Redis through environment variables [#2522](https://github.com/LiskHQ/lisk/issues/2522)
- Upgrade to Lisk Core 1.2.0 changes whitelisted local ip in config to 'null' [#2520](https://github.com/LiskHQ/lisk/issues/2520)
- Wrong comment example on how to enable forging in Docker [#2518](https://github.com/LiskHQ/lisk/issues/2518)
- Allow changing database name when using Docker [#2516](https://github.com/LiskHQ/lisk/issues/2516)
- Account fixture generates public keys 32 chars long [#2510](https://github.com/LiskHQ/lisk/issues/2510)
- Add support of LISK_NETWORK variable for configuration migration [#2497](https://github.com/LiskHQ/lisk/issues/2497)
- Update config script generates malformed config.json during testnet migration from 1.1.0-rc.0 to 1.1.1-rc.0 [#2495](https://github.com/LiskHQ/lisk/issues/2495)
- Multi-signature transaction process after long delay [#2489](https://github.com/LiskHQ/lisk/issues/2489)
- NPM deprecated warning for outdated packages  [#2484](https://github.com/LiskHQ/lisk/issues/2484)
- ""Error writing cache count for transactions - Cache Disabled"" when /api/node/status is called [#2482](https://github.com/LiskHQ/lisk/issues/2482)
- Re-use package.lock.json to point to public sodium-native repository [#2411](https://github.com/LiskHQ/lisk/issues/2411)
- secondsSinceEpoch needs to be required [#2323](https://github.com/LiskHQ/lisk/issues/2323)
- Use DNS name instead of IP addresses for seed nodes in config.json [#2320](https://github.com/LiskHQ/lisk/issues/2320)
- Update PR template [#2318](https://github.com/LiskHQ/lisk/issues/2318)
- Write unit tests for modules/node/getStatus function [#2312](https://github.com/LiskHQ/lisk/issues/2312)
- Use node 8 in Dockerfile [#2306](https://github.com/LiskHQ/lisk/issues/2306)
- Update docker image to use new configuration variables [#2305](https://github.com/LiskHQ/lisk/issues/2305)
-  Lisk.sh error [#2279](https://github.com/LiskHQ/lisk/issues/2279)
- Support update_config.js migrations [#2278](https://github.com/LiskHQ/lisk/issues/2278)
- Remove redundant tests out of integration test suite [#2274](https://github.com/LiskHQ/lisk/issues/2274)
- Rename test suites [#2273](https://github.com/LiskHQ/lisk/issues/2273)
- Add functional tests for type 7 transaction assets [#2272](https://github.com/LiskHQ/lisk/issues/2272)
- Remove ""Broadhash consensus now"" log messages [#2263](https://github.com/LiskHQ/lisk/issues/2263)
- RPC status call gives wrong height when syncing [#2261](https://github.com/LiskHQ/lisk/issues/2261)
- Please, fix UI on API 1.0 documentation page [#2259](https://github.com/LiskHQ/lisk/issues/2259)
- Unable to authenticate Sudo. [#2256](https://github.com/LiskHQ/lisk/issues/2256)
- Off-line multi sign [#2255](https://github.com/LiskHQ/lisk/issues/2255)
- Move docker-compose.yml file to lisk repository [#2237](https://github.com/LiskHQ/lisk/issues/2237)
- Expectations are missing assertions [#2236](https://github.com/LiskHQ/lisk/issues/2236)
- Add ENV variables support for few configuration option [#2225](https://github.com/LiskHQ/lisk/issues/2225)
- Possible memory leak in one edge case of syncing [#2210](https://github.com/LiskHQ/lisk/issues/2210)
- Move all scripts to task runner grunt [#2206](https://github.com/LiskHQ/lisk/issues/2206)
- Rename usages of .apply from the application. [#2198](https://github.com/LiskHQ/lisk/issues/2198)
- No asset data is returned for transactions type 6 (inTransfer) [#2194](https://github.com/LiskHQ/lisk/issues/2194)
- Check all initialization steps in case of errors and cleanup [#2188](https://github.com/LiskHQ/lisk/issues/2188)
- networkHeight in /api/node/status is wrong [#2179](https://github.com/LiskHQ/lisk/issues/2179)
- Update to Node.js version 8.12.0 [#2135](https://github.com/LiskHQ/lisk/issues/2135)
- Functional http get tests fail randomly [#2015](https://github.com/LiskHQ/lisk/issues/2015)
- Allow filter/sort transactions by height [#1891](https://github.com/LiskHQ/lisk/issues/1891)
- Naming of ""checkConfirmed"" is confusing [#1822](https://github.com/LiskHQ/lisk/issues/1822)
- Improve process exit [#1788](https://github.com/LiskHQ/lisk/issues/1788)
- Add current time to node/status endpoint [#1733](https://github.com/LiskHQ/lisk/issues/1733)
- Expire transactions doesn't call undoUnconfirmed [#1731](https://github.com/LiskHQ/lisk/issues/1731)
- Add unit test coverage for modules multisignatures [#1723](https://github.com/LiskHQ/lisk/issues/1723)
- Equalise to bytea type all the parameters related to publicKey [#1694](https://github.com/LiskHQ/lisk/issues/1694)
- An address isn’t bound to a keypair until it has sent money to another address (or voted for a delegate) [#1345](https://github.com/LiskHQ/lisk/issues/1345)
- Modify Jenkinsfile to accept parameter that modifies node selection [#1001](https://github.com/LiskHQ/lisk/issues/1001)
- Remove the usage of this variables in all transaction types [#750](https://github.com/LiskHQ/lisk/issues/750)


**Merged pull requests:**
- Update docker specific version of wait-for-it script - Closes #2528 [#2529](https://github.com/LiskHQ/lisk/pull/2529) ([ManuGowda](https://github.com/ManuGowda))
- Configure redis via environment variables and command line input - Closes #2522 [#2524](https://github.com/LiskHQ/lisk/pull/2524) ([diego-G](https://github.com/diego-G))
- Upgrade to Lisk Core 1.2.0 changes whitelisted local ip in config to 'null' - Closes #2520 [#2523](https://github.com/LiskHQ/lisk/pull/2523) ([nazarhussain](https://github.com/nazarhussain))
- Correct docker example to enable forging - Closes #2518 [#2521](https://github.com/LiskHQ/lisk/pull/2521) ([diego-G](https://github.com/diego-G))
- docker: read ENV_LISK_DB_DATABASE from .env - Closes #2516 [#2517](https://github.com/LiskHQ/lisk/pull/2517) ([fchavant](https://github.com/fchavant))
- Multi-signature transaction process after long delay - Closes #2489 [#2512](https://github.com/LiskHQ/lisk/pull/2512) ([MaciejBaj](https://github.com/MaciejBaj))
- Fix public key size generation for tests - Closes #2510 [#2511](https://github.com/LiskHQ/lisk/pull/2511) ([lsilvs](https://github.com/lsilvs))
- Add support of LISK_NETWORK variable for configuration migration - Closes #2497 [#2502](https://github.com/LiskHQ/lisk/pull/2502) ([nazarhussain](https://github.com/nazarhussain))
- ""Error writing cache count for transactions - Cache Disabled"" when /api/node/status is called - Closes 2482 [#2501](https://github.com/LiskHQ/lisk/pull/2501) ([pablitovicente](https://github.com/pablitovicente))
- NPM deprecated warning for outdated packages - Closes #2484 [#2493](https://github.com/LiskHQ/lisk/pull/2493) ([pablitovicente](https://github.com/pablitovicente))
- Detected unapplied rounds in mem_round - Closes #2458 [#2487](https://github.com/LiskHQ/lisk/pull/2487) ([4miners](https://github.com/4miners))
- Update to Node.js version 8.12.0 - Closes #2135 [#2479](https://github.com/LiskHQ/lisk/pull/2479) ([ManuGowda](https://github.com/ManuGowda))
- Improve example for unconfirmedBalance - Closes #2477 [#2478](https://github.com/LiskHQ/lisk/pull/2478) ([Tschakki](https://github.com/Tschakki))
- Supply calculation bug in block reward (1.2.0)- Closes #2471 [#2476](https://github.com/LiskHQ/lisk/pull/2476) ([ManuGowda](https://github.com/ManuGowda))
- Update to Node.js version 8.12.0 and npm to version 5.6.0 - Closes #2135 [#2414](https://github.com/LiskHQ/lisk/pull/2414) ([MaciejBaj](https://github.com/MaciejBaj))
- Use jenkins nodes running nodejs 8 (development) - Closes #1001  [#2395](https://github.com/LiskHQ/lisk/pull/2395) ([MaciejBaj](https://github.com/MaciejBaj))
- Use jenkins nodes running nodejs 8 - Closes #1001 [#2393](https://github.com/LiskHQ/lisk/pull/2393) ([fchavant](https://github.com/fchavant))
- Update PR template - Closes #2318 [#2337](https://github.com/LiskHQ/lisk/pull/2337) ([yatki](https://github.com/yatki))
- Unit tests for node/getStatus function - Closes #2312 [#2327](https://github.com/LiskHQ/lisk/pull/2327) ([yatki](https://github.com/yatki))
- Unit tests for Multisignatures module - Closes #1723 [#2326](https://github.com/LiskHQ/lisk/pull/2326) ([yatki](https://github.com/yatki))
- Use DNS name instead of IP addresses for seed nodes in config.json - Closes #2320 [#2325](https://github.com/LiskHQ/lisk/pull/2325) ([jondubois](https://github.com/jondubois))
- Make secondsSinceEpoch required - Closes #2323 [#2324](https://github.com/LiskHQ/lisk/pull/2324) ([yatki](https://github.com/yatki))
- Use DNS name for seed nodes in config.json - Closes #2320 [#2322](https://github.com/LiskHQ/lisk/pull/2322) ([fchavant](https://github.com/fchavant))
- Add indexes for trs table to improve sorting - Closes #2201 [#2316](https://github.com/LiskHQ/lisk/pull/2316) ([4miners](https://github.com/4miners))
- Disable updating system headers while snapshotting - Closes #2261 [#2313](https://github.com/LiskHQ/lisk/pull/2313) ([yatki](https://github.com/yatki))
- Fix application hanging during clean up when processing block - Closes #2271 [#2308](https://github.com/LiskHQ/lisk/pull/2308) ([SargeKhan](https://github.com/SargeKhan))
- Support update_config.js migrations - Closes #2278 [#2307](https://github.com/LiskHQ/lisk/pull/2307) ([nazarhussain](https://github.com/nazarhussain))
- Move docker-compose.yml to LiskHQ/lisk, remove confd template, use node:8 - Closes #2237, #2305, #2306 [#2304](https://github.com/LiskHQ/lisk/pull/2304) ([fchavant](https://github.com/fchavant))
- Remove broadcast flag & always update system headers - Closes #2261 [#2300](https://github.com/LiskHQ/lisk/pull/2300) ([yatki](https://github.com/yatki))
- Refactor checkConfirmed function to behave as expected - Closes #1822 [#2299](https://github.com/LiskHQ/lisk/pull/2299) ([yatki](https://github.com/yatki))
- Add epochTime to node/status endpoint - Closes #1733 [#2298](https://github.com/LiskHQ/lisk/pull/2298) ([yatki](https://github.com/yatki))
- Remove redundant tests out of integration test suite - Closes #2274 [#2297](https://github.com/LiskHQ/lisk/pull/2297) ([ManuGowda](https://github.com/ManuGowda))
- Add currenTime property to node/status endpoint - Closes #1733 [#2294](https://github.com/LiskHQ/lisk/pull/2294) ([yatki](https://github.com/yatki))
- Add tests for type 7 transaction assets - Closes #2272 [#2291](https://github.com/LiskHQ/lisk/pull/2291) ([Tschakki](https://github.com/Tschakki))
- Rename test suites - Closes #2273 [#2289](https://github.com/LiskHQ/lisk/pull/2289) ([ManuGowda](https://github.com/ManuGowda))
- Add ENV variables support for few configuration option - Closes #2225 [#2285](https://github.com/LiskHQ/lisk/pull/2285) ([nazarhussain](https://github.com/nazarhussain))
- Duplicated signatures in transactions - Closes #2254 [#2275](https://github.com/LiskHQ/lisk/pull/2275) ([4miners](https://github.com/4miners))
- Improve process exit - Closes #1788 [#2260](https://github.com/LiskHQ/lisk/pull/2260) ([jondubois](https://github.com/jondubois))
- Return asset data for type 6 transactions - Closes #2194 [#2247](https://github.com/LiskHQ/lisk/pull/2247) ([Tschakki](https://github.com/Tschakki))
- Expectations are missing assertions - Closes #2236 [#2242](https://github.com/LiskHQ/lisk/pull/2242) ([ManuGowda](https://github.com/ManuGowda))
- Rename usage of apply and undo for transaction - Closes #2198 [#2238](https://github.com/LiskHQ/lisk/pull/2238) ([SargeKhan](https://github.com/SargeKhan))
- Update to Node.js version 8.11.3 - Closes #2135 [#2235](https://github.com/LiskHQ/lisk/pull/2235) ([ManuGowda](https://github.com/ManuGowda))
- NetworkHeight in /api/node/status is wrong - Closes #2179 [#2228](https://github.com/LiskHQ/lisk/pull/2228) ([ManuGowda](https://github.com/ManuGowda))
- Expire transactions doesn't call undoUnconfirmed - Closes #1731 [#2219](https://github.com/LiskHQ/lisk/pull/2219) ([ManuGowda](https://github.com/ManuGowda))
- Check all initialization steps in case of errors and cleanup - Close #2188 [#2204](https://github.com/LiskHQ/lisk/pull/2204) ([ManuGowda](https://github.com/ManuGowda))
- Remove passing the scope of transaction logic to tx types - Closes #750 [#2195](https://github.com/LiskHQ/lisk/pull/2195) ([Tschakki](https://github.com/Tschakki))
- Remove ""Broadhash consensus now"" log messages - Closes #2263 [#2191](https://github.com/LiskHQ/lisk/pull/2191) ([webmaster128](https://github.com/webmaster128))",50873641
121,False,False,2018-10-23T13:02:34Z,2018-10-23T14:59:40Z,"# Change Log

## [v1.1.1](https://github.com/LiskHQ/lisk/tree/v1.1.1) (2018-10-23)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/v1.1.0...v1.1.1)

**Closed issues:**
- Detected unapplied rounds in mem_round #2458
- Failed to validate transaction schema #2490

**Merged pull requests:**
- Incorrect bytes calculation on invalid address (https://github.com/LiskHQ/lisk/commit/b486afbab5fe2eb015acbe447e891dc0f6a78b2a) ([webmaster128](https://github.com/webmaster128))
- Detected unapplied rounds in mem_round - Closes #2458 [#2492](https://github.com/LiskHQ/lisk/pull/2492) ([4miners](https://github.com/4miners))
- Failed to validate transaction schema - Closes #2490 [#2491](https://github.com/LiskHQ/lisk/pull/2491) ([ManuGowda](https://github.com/ManuGowda))",50873641
122,False,False,2018-10-22T11:24:09Z,2018-10-22T12:31:00Z,"
# Change Log

## [v1.1.0](https://github.com/LiskHQ/lisk/tree/v1.1.0) (2018-10-22)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/v1.0.3...v1.1.0)

**Closed issues:**
- Cover system.versionCompatible unit tests with Testnet, Betanet and Mainnet scenarios [#2473](https://github.com/LiskHQ/lisk/issues/2473)
- Supply calculation bug in block reward [#2471](https://github.com/LiskHQ/lisk/issues/2471)
- Rollback version patching mechanism [#2466](https://github.com/LiskHQ/lisk/issues/2466)
- Allow block to be backward compatible with 1.0.x node while broadcasting [#2464](https://github.com/LiskHQ/lisk/issues/2464)
- Update script adds null value to api whitelist array [#2459](https://github.com/LiskHQ/lisk/issues/2459)
- Frequent peer removal and inserting [#2455](https://github.com/LiskHQ/lisk/issues/2455)
- Vote verify function should call waterfall callback instead of main callback [#2450](https://github.com/LiskHQ/lisk/issues/2450)
- Patching system headers should be logged as debug [#2439](https://github.com/LiskHQ/lisk/issues/2439)
- Update config don't check LISK_NETWORK env variable  [#2437](https://github.com/LiskHQ/lisk/issues/2437)
- Change of vote processing logic ignore address collision scenario [#2434](https://github.com/LiskHQ/lisk/issues/2434)
- Wrong block height for block version 0 for testnet [#2433](https://github.com/LiskHQ/lisk/issues/2433)
- Wrong amount check in verify function of logic/In_transfer and logic/out_transfer [#2430](https://github.com/LiskHQ/lisk/issues/2430)
- Differences in vote column in mem_accounts while syncing from scratch [#2420](https://github.com/LiskHQ/lisk/issues/2420)
- Intentionally disconnecting and removing peer [#2410](https://github.com/LiskHQ/lisk/issues/2410)
- Update P2P layer connection logic so it can work with 1.0.0-rc.* releases [#2389](https://github.com/LiskHQ/lisk/issues/2389)
- /api/delegates/{address}/forging_statistics returns different results compared to v0.9.16 [#2367](https://github.com/LiskHQ/lisk/issues/2367)
- Poor performance of GET /api/delegates/[address]/forging_statistics [#2352](https://github.com/LiskHQ/lisk/issues/2352)
- Poor performance of GET /api/delegates [#2351](https://github.com/LiskHQ/lisk/issues/2351)
- Poor performance of GET /api/accounts in case of some few parameters [#2350](https://github.com/LiskHQ/lisk/issues/2350)
- Poor performance of GET /api/node/status [#2348](https://github.com/LiskHQ/lisk/issues/2348)
- bad sorting when using balance:asc [#2330](https://github.com/LiskHQ/lisk/issues/2330)
- Wrong wsPort number in mainnet/config.json [#2329](https://github.com/LiskHQ/lisk/issues/2329)
- Set default db user to 'lisk' [#2248](https://github.com/LiskHQ/lisk/issues/2248)
- Change the precedence of configurations to override custom configuration  [#2231](https://github.com/LiskHQ/lisk/issues/2231)
- Worker controller needs to adopted to use the new configs [#2216](https://github.com/LiskHQ/lisk/issues/2216)
- Fix randomness for unit logic vote test [#2207](https://github.com/LiskHQ/lisk/issues/2207)
- Update configuration migration script  from 1.0.x to 1.1.x [#2202](https://github.com/LiskHQ/lisk/issues/2202)
- Fix failing tests in Jenkins for 1.1.0 [#2192](https://github.com/LiskHQ/lisk/issues/2192)
- Clean constants, exceptions and config files from all networks folders  [#2186](https://github.com/LiskHQ/lisk/issues/2186)
- Clean the version and minVersion config from all config files [#2184](https://github.com/LiskHQ/lisk/issues/2184)
- Update jenkins integration to use the dedicated build server [#2182](https://github.com/LiskHQ/lisk/issues/2182)
- Fix docker container workflow in 1.1  [#2180](https://github.com/LiskHQ/lisk/issues/2180)
- forge should be called after fillPool and not before [#2170](https://github.com/LiskHQ/lisk/issues/2170)
- Improve vote transaction verification/processing efficiency [#2168](https://github.com/LiskHQ/lisk/issues/2168)
- Cleanup tests to use ""devnet"" configuration files to run all tests [#2156](https://github.com/LiskHQ/lisk/issues/2156)
- Merge helpers/milestones.js to network specific exceptions  [#2155](https://github.com/LiskHQ/lisk/issues/2155)
- Block verification functional test for fork2 is failing [#2152](https://github.com/LiskHQ/lisk/issues/2152)
- Blocks verify functional test is not covered in Jenkins parallel test  [#2151](https://github.com/LiskHQ/lisk/issues/2151)
- Update PostgreSQL to version 10 [#2147](https://github.com/LiskHQ/lisk/issues/2147)
- Delegates endpoint should sort by rank:asc [#2138](https://github.com/LiskHQ/lisk/issues/2138)
- Remove dependency of ""round"" from ""summedRound"" [#2129](https://github.com/LiskHQ/lisk/issues/2129)
- Review integration test suite [#2125](https://github.com/LiskHQ/lisk/issues/2125)
- npm install failed on Mac os 10.13.4 [#2082](https://github.com/LiskHQ/lisk/issues/2082)
- Send back better error when disconnecting because of invalid peer headers [#2068](https://github.com/LiskHQ/lisk/issues/2068)
- Forging status broken after resync with beta7 [#2058](https://github.com/LiskHQ/lisk/issues/2058)
- Refactor generateDelegateList to accept round as parameter [#2014](https://github.com/LiskHQ/lisk/issues/2014)
- Log level of ""Inserted new peer"" and ""Removed peer"" should be symmetric [#1992](https://github.com/LiskHQ/lisk/issues/1992)
- GET api/peers doesn't return the peer when WebSocket process restarted [#1814](https://github.com/LiskHQ/lisk/issues/1814)
- Update libsodium [#1797](https://github.com/LiskHQ/lisk/issues/1797)
- Incorrect missedBlocks update after delete last block of round [#1783](https://github.com/LiskHQ/lisk/issues/1783)
- It's not possible to sort delegates by 'producedblocks'/'missedblocks' with api/delegates [#1716](https://github.com/LiskHQ/lisk/issues/1716)
- Different datatype for round number among different tables [#1647](https://github.com/LiskHQ/lisk/issues/1647)
- Separate VCS config file from live config file [#1421](https://github.com/LiskHQ/lisk/issues/1421)
- Store amounts as strings [#716](https://github.com/LiskHQ/lisk/issues/716)
- Implement ForgingEnable flag [#647](https://github.com/LiskHQ/lisk/issues/647)
- Implement SyncOnly flag for firewalled clients [#646](https://github.com/LiskHQ/lisk/issues/646)
- Improve sync speed [#498](https://github.com/LiskHQ/lisk/issues/498)
- Support multiple networks with one installation [#398](https://github.com/LiskHQ/lisk/issues/398)


**Merged pull requests:**
- Improve example for unconfirmedBalance - Closes #2477 [#2478](https://github.com/LiskHQ/lisk/pull/2478) ([Tschakki](https://github.com/Tschakki))
- Supply calculation bug in block reward - Closes #2471 [#2474](https://github.com/LiskHQ/lisk/pull/2474) ([ManuGowda](https://github.com/ManuGowda))
- Rollback version patching mechanism - Closes #2466 [#2467](https://github.com/LiskHQ/lisk/pull/2467) ([jondubois](https://github.com/jondubois))
- Allow block to be backward compatible with 1.0.x node while broadcasting - Closes #2464 [#2465](https://github.com/LiskHQ/lisk/pull/2465) ([ManuGowda](https://github.com/ManuGowda))
- Update script adds null value to api whitelist array - Closes #2459 [#2460](https://github.com/LiskHQ/lisk/pull/2460) ([nazarhussain](https://github.com/nazarhussain))
- Vote verify function should call waterfall callback instead of main callback - Closes #2450 [#2451](https://github.com/LiskHQ/lisk/pull/2451) ([MaciejBaj](https://github.com/MaciejBaj))
- Add exception for votes collision for testnet - Closes #2434 [#2448](https://github.com/LiskHQ/lisk/pull/2448) ([SargeKhan](https://github.com/SargeKhan))
- Patching system headers should be logged as debug - Closes #2439 [#2444](https://github.com/LiskHQ/lisk/pull/2444) ([nazarhussain](https://github.com/nazarhussain))
- Add fix for vote collision scenario - Closes #2434 [#2442](https://github.com/LiskHQ/lisk/pull/2442) ([SargeKhan](https://github.com/SargeKhan))
- Differences in vote column in mem_accounts while syncing from scratch - Closes #2420 [#2441](https://github.com/LiskHQ/lisk/pull/2441) ([nazarhussain](https://github.com/nazarhussain))
- Update config don't check LISK_NETWORK env variable - Closes #2437 [#2440](https://github.com/LiskHQ/lisk/pull/2440) ([nazarhussain](https://github.com/nazarhussain))
- Wrong block height for block version 0 for testnet - Closes #2433 [#2435](https://github.com/LiskHQ/lisk/pull/2435) ([nazarhussain](https://github.com/nazarhussain))
- Wrong amount check in verify function of logic/In_transfer and logic/out_transfer - Closes #2430 [#2432](https://github.com/LiskHQ/lisk/pull/2432) ([nazarhussain](https://github.com/nazarhussain))
- Fix merge mistake and update the rewire version [#2428](https://github.com/LiskHQ/lisk/pull/2428) ([shuse2](https://github.com/shuse2))
- Fix differences in vote column in mem_accounts while syncing from scratch - Closes #2420 [#2425](https://github.com/LiskHQ/lisk/pull/2425) ([nazarhussain](https://github.com/nazarhussain))
- Calculate the correct time interval in aggregateBlocksReward - Closes #2367 [#2417](https://github.com/LiskHQ/lisk/pull/2417) ([TheGoldenEye](https://github.com/TheGoldenEye))
- Update P2P layer connection logic so it can work with 1.0.0-rc.* releases (development) - Closes #2389 [#2397](https://github.com/LiskHQ/lisk/pull/2397) ([MaciejBaj](https://github.com/MaciejBaj))
- Update P2P layer connection logic so it can work with 1.0.0-rc.* releases - Closes #2389 [#2390](https://github.com/LiskHQ/lisk/pull/2390) ([nazarhussain](https://github.com/nazarhussain))
- Add sort support for username field on api/voters - Closes #2330 [#2376](https://github.com/LiskHQ/lisk/pull/2376) ([yatki](https://github.com/yatki))
- Poor performance of GET /api/accounts in case of some few parameters - Resolves #2350 [#2374](https://github.com/LiskHQ/lisk/pull/2374) ([4miners](https://github.com/4miners))
- Poor performance of GET /api/delegates - Resolves #2351 [#2373](https://github.com/LiskHQ/lisk/pull/2373) ([4miners](https://github.com/4miners))
- Poor performance of GET /api/delegates/[address]/forging_statistics - Closes #2352 [#2360](https://github.com/LiskHQ/lisk/pull/2360) ([nazarhussain](https://github.com/nazarhussain))
- Poor performance of GET /api/delegates/[address]/forging_statistics - Closes #2352 [#2357](https://github.com/LiskHQ/lisk/pull/2357) ([nazarhussain](https://github.com/nazarhussain))
- Add sort support to api/voters endpoint - Closes #2330 [#2346](https://github.com/LiskHQ/lisk/pull/2346) ([yatki](https://github.com/yatki))
- Align README with docs - Closes #2295 [#2315](https://github.com/LiskHQ/lisk/pull/2315) ([Tschakki](https://github.com/Tschakki))
- Update preinstall section of README - Closes #2248 [#2286](https://github.com/LiskHQ/lisk/pull/2286) ([Tschakki](https://github.com/Tschakki))
- Set db user in default config to 'lisk' - Closes #2248 [#2250](https://github.com/LiskHQ/lisk/pull/2250) ([Nazgolze](https://github.com/Nazgolze))
- Fix unstable unit test for vote - Closes #2207 [#2241](https://github.com/LiskHQ/lisk/pull/2241) ([SargeKhan](https://github.com/SargeKhan))
- Make docker images for 1.1 configurable - Closes #2180 [#2234](https://github.com/LiskHQ/lisk/pull/2234) ([fchavant](https://github.com/fchavant))
- Change the precedence of configurations to override custom configuration - Closes #2231 [#2232](https://github.com/LiskHQ/lisk/pull/2232) ([nazarhussain](https://github.com/nazarhussain))
- Fix config usage in worker_controller - Closes #2216 [#2217](https://github.com/LiskHQ/lisk/pull/2217) ([shuse2](https://github.com/shuse2))
- Log level of ""Inserted new peer"" and ""Removed peer"" should be symmetric - Closes #1992 [#2215](https://github.com/LiskHQ/lisk/pull/2215) ([jondubois](https://github.com/jondubois))
- Update configuration migration script from 1.0.x to 1.1.x - Closes #2202 [#2205](https://github.com/LiskHQ/lisk/pull/2205) ([nazarhussain](https://github.com/nazarhussain))
- Review integration test suite - Close #2125 [#2203](https://github.com/LiskHQ/lisk/pull/2203) ([diego-G](https://github.com/diego-G))
- Clean constants, exceptions and config files from all networks folders - Closes #2186 [#2200](https://github.com/LiskHQ/lisk/pull/2200) ([nazarhussain](https://github.com/nazarhussain))
- SSL breaks Websocket connection - Closes #2154 [#2197](https://github.com/LiskHQ/lisk/pull/2197) ([jondubois](https://github.com/jondubois))
- Clean the version and minVersion config from all config files - Closes #2184 [#2196](https://github.com/LiskHQ/lisk/pull/2196) ([nazarhussain](https://github.com/nazarhussain))
- Fix failing tests in Jenkins for 1.1.0 - Closes #2192 [#2193](https://github.com/LiskHQ/lisk/pull/2193) ([nazarhussain](https://github.com/nazarhussain))
- Improve vote transaction verification performance - Close #2168 [#2189](https://github.com/LiskHQ/lisk/pull/2189) ([SargeKhan](https://github.com/SargeKhan))
- Store amounts as strings - Closes #716 [#2187](https://github.com/LiskHQ/lisk/pull/2187) ([ManuGowda](https://github.com/ManuGowda))
- Update jenkins integration to use the dedicated build server - Closes #2182 [#2183](https://github.com/LiskHQ/lisk/pull/2183) ([ManuGowda](https://github.com/ManuGowda))
- Cleanup tests to use ""devnet"" configuration files to run all tests - Closes #2156 [#2181](https://github.com/LiskHQ/lisk/pull/2181) ([nazarhussain](https://github.com/nazarhussain))
- Add sorting by producedBlocks - Closes #1716 [#2177](https://github.com/LiskHQ/lisk/pull/2177) ([Tschakki](https://github.com/Tschakki))
- Forging status broken after resync with beta7 - Closes #2058 [#2174](https://github.com/LiskHQ/lisk/pull/2174) ([ManuGowda](https://github.com/ManuGowda))
- Refactor generateDelegateList to accept round as parameter - Closes #2014 [#2172](https://github.com/LiskHQ/lisk/pull/2172) ([4miners](https://github.com/4miners))
- forge should be called after fillPool and not before - Closes #2170 [#2171](https://github.com/LiskHQ/lisk/pull/2171) ([4miners](https://github.com/4miners))
- Round fixes - Closes #216, #1783 [#2169](https://github.com/LiskHQ/lisk/pull/2169) ([4miners](https://github.com/4miners))
- Different datatype for round number among different tables - Closes #1647 [#2167](https://github.com/LiskHQ/lisk/pull/2167) ([4miners](https://github.com/4miners))
- Send back better error when disconnecting because of invalid peer headers - Closes #2068 [#2165](https://github.com/LiskHQ/lisk/pull/2165) ([jondubois](https://github.com/jondubois))
- Blocks verify functional test is not covered in Jenkins parallel test - Closes #2151 #2152 [#2160](https://github.com/LiskHQ/lisk/pull/2160) ([ManuGowda](https://github.com/ManuGowda))
- Change default delegate sorting to rank:asc - Closes #2138 [#2153](https://github.com/LiskHQ/lisk/pull/2153) ([Tschakki](https://github.com/Tschakki))
",50873641
123,False,False,2018-09-17T12:40:23Z,2018-09-19T08:13:22Z,"# Change Log

**Lisk Core 1.0.3 Patch Release**

## [v1.0.3](https://github.com/LiskHQ/lisk/tree/v1.0.3) (2018-09-19)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/v1.0.2...v1.0.3)

**Fixed bugs:**
- Multisign issue with repeated signatures in tx #2254
- peers.remove called with wrong parameters on Node start #2406

**Commits:**
- Duplicated signatures in transactions [af1de56](https://github.com/LiskHQ/lisk/commit/af1de56666f56bdfe0bd13f11ed0859f6e1d63d9) ([4miners](https://github.com/4miners), [nazarhussein](https://github.com/nazarhussein))
- peers.remove called with wrong parameters on Node start [b796c7d](https://github.com/LiskHQ/lisk/commit/b796c7df2903fe86e489212cdb3152febf673be0) ([MaciejBaj](https://github.com/MaciejBaj))",50873641
124,False,True,2018-09-05T14:32:53Z,2018-09-07T08:02:05Z,"# Change Log

## [v1.1.0-alpha.1](https://github.com/LiskHQ/lisk-commander/tree/v1.1.0-alpha.1) (2018-09-05)
[Full Changelog](https://github.com/LiskHQ/lisk-commander/compare/v1.1.0-alpha.0...v1.1.0-alpha.1)

**Closed issues:**
- bad sorting when using balance:asc [#2330](https://github.com/LiskHQ/lisk/issues/2330)

**Merged pull requests:**
- Add sort support for username field on api/voters - Closes #2330 [#2376](https://github.com/LiskHQ/lisk/pull/2376) ([yatki](https://github.com/yatki))",50873641
125,False,True,2018-09-05T10:02:57Z,2018-09-07T08:01:19Z,"# Change Log

## [v1.1.0-alpha.0](https://github.com/LiskHQ/lisk-commander/tree/v1.1.0-alpha.0) (2018-09-06)
[Full Changelog](https://github.com/LiskHQ/lisk-commander/compare/v1.0.2...v1.1.0-alpha.0)

**Closed issues:**
- Poor performance of GET /api/delegates/[address]/forging_statistics [#2352](https://github.com/LiskHQ/lisk/issues/2352)
- Poor performance of GET /api/delegates [#2351](https://github.com/LiskHQ/lisk/issues/2351)
- Poor performance of GET /api/accounts in case of some few parameters [#2350](https://github.com/LiskHQ/lisk/issues/2350)
- Poor performance of GET /api/node/status [#2348](https://github.com/LiskHQ/lisk/issues/2348)
- bad sorting when using balance:asc [#2330](https://github.com/LiskHQ/lisk/issues/2330)
- Wrong wsPort number in mainnet/config.json [#2329](https://github.com/LiskHQ/lisk/issues/2329)
- Set default db user to 'lisk' [#2248](https://github.com/LiskHQ/lisk/issues/2248)
- Change the precedence of configurations to override custom configuration  [#2231](https://github.com/LiskHQ/lisk/issues/2231)
- Worker controller needs to adopted to use the new configs [#2216](https://github.com/LiskHQ/lisk/issues/2216)
- Fix randomness for unit logic vote test [#2207](https://github.com/LiskHQ/lisk/issues/2207)
- Update configuration migration script  from 1.0.x to 1.1.x [#2202](https://github.com/LiskHQ/lisk/issues/2202)
- Fix failing tests in Jenkins for 1.1.0 [#2192](https://github.com/LiskHQ/lisk/issues/2192)
- Clean constants, exceptions and config files from all networks folders  [#2186](https://github.com/LiskHQ/lisk/issues/2186)
- Clean the version and minVersion config from all config files [#2184](https://github.com/LiskHQ/lisk/issues/2184)
- Update jenkins integration to use the dedicated build server [#2182](https://github.com/LiskHQ/lisk/issues/2182)
- Fix docker container workflow in 1.1  [#2180](https://github.com/LiskHQ/lisk/issues/2180)
- forge should be called after fillPool and not before [#2170](https://github.com/LiskHQ/lisk/issues/2170)
- Improve vote transaction verification/processing efficiency [#2168](https://github.com/LiskHQ/lisk/issues/2168)
- Cleanup tests to use ""devnet"" configuration files to run all tests [#2156](https://github.com/LiskHQ/lisk/issues/2156)
- Merge helpers/milestones.js to network specific exceptions  [#2155](https://github.com/LiskHQ/lisk/issues/2155)
- Block verification functional test for fork2 is failing [#2152](https://github.com/LiskHQ/lisk/issues/2152)
- Blocks verify functional test is not covered in Jenkins parallel test  [#2151](https://github.com/LiskHQ/lisk/issues/2151)
- Update PostgreSQL to version 10 [#2147](https://github.com/LiskHQ/lisk/issues/2147)
- Delegates endpoint should sort by rank:asc [#2138](https://github.com/LiskHQ/lisk/issues/2138)
- Remove dependency of ""round"" from ""summedRound"" [#2129](https://github.com/LiskHQ/lisk/issues/2129)
- Review integration test suite [#2125](https://github.com/LiskHQ/lisk/issues/2125)
- npm install failed on Mac os 10.13.4 [#2082](https://github.com/LiskHQ/lisk/issues/2082)
- Send back better error when disconnecting because of invalid peer headers [#2068](https://github.com/LiskHQ/lisk/issues/2068)
- Forging status broken after resync with beta7 [#2058](https://github.com/LiskHQ/lisk/issues/2058)
- Refactor generateDelegateList to accept round as parameter [#2014](https://github.com/LiskHQ/lisk/issues/2014)
- Log level of ""Inserted new peer"" and ""Removed peer"" should be symmetric [#1992](https://github.com/LiskHQ/lisk/issues/1992)
- GET api/peers doesn't return the peer when WebSocket process restarted [#1814](https://github.com/LiskHQ/lisk/issues/1814)
- Update libsodium [#1797](https://github.com/LiskHQ/lisk/issues/1797)
- Incorrect missedBlocks update after delete last block of round [#1783](https://github.com/LiskHQ/lisk/issues/1783)
- It's not possible to sort delegates by 'producedblocks'/'missedblocks' with api/delegates [#1716](https://github.com/LiskHQ/lisk/issues/1716)
- Different datatype for round number among different tables [#1647](https://github.com/LiskHQ/lisk/issues/1647)
- Store amounts as strings [#716](https://github.com/LiskHQ/lisk/issues/716)
- Implement ForgingEnable flag [#647](https://github.com/LiskHQ/lisk/issues/647)
- Implement SyncOnly flag for firewalled clients [#646](https://github.com/LiskHQ/lisk/issues/646)
- Improve sync speed [#498](https://github.com/LiskHQ/lisk/issues/498)
- Support multiple networks with one installation [#398](https://github.com/LiskHQ/lisk/issues/398)
- Why is mem_round flushed twice while finishing a round [#216](https://github.com/LiskHQ/lisk/issues/216)


**Merged pull requests:**
- Poor performance of GET /api/accounts in case of some few parameters - Resolves #2350 [#2374](https://github.com/LiskHQ/lisk/pull/2374) ([4miners](https://github.com/4miners))
- Poor performance of GET /api/delegates - Resolves #2351 [#2373](https://github.com/LiskHQ/lisk/pull/2373) ([4miners](https://github.com/4miners))
- Poor performance of GET /api/delegates/[address]/forging_statistics - Closes #2352 [#2357](https://github.com/LiskHQ/lisk/pull/2357) ([nazarhussain](https://github.com/nazarhussain))
- Add sort support to api/voters endpoint - Closes #2330 [#2346](https://github.com/LiskHQ/lisk/pull/2346) ([yatki](https://github.com/yatki))
- Align README with docs - Closes #2295 [#2315](https://github.com/LiskHQ/lisk/pull/2315) ([Tschakki](https://github.com/Tschakki))
- Update preinstall section of README - Closes #2248 [#2286](https://github.com/LiskHQ/lisk/pull/2286) ([Tschakki](https://github.com/Tschakki))
- Set db user in default config to 'lisk' - Closes #2248 [#2250](https://github.com/LiskHQ/lisk/pull/2250) ([Nazgolze](https://github.com/Nazgolze))
- Fix unstable unit test for vote - Closes #2207 [#2241](https://github.com/LiskHQ/lisk/pull/2241) ([SargeKhan](https://github.com/SargeKhan))
- Make docker images for 1.1 configurable - Closes #2180 [#2234](https://github.com/LiskHQ/lisk/pull/2234) ([fchavant](https://github.com/fchavant))
- Change the precedence of configurations to override custom configuration - Closes #2231 [#2232](https://github.com/LiskHQ/lisk/pull/2232) ([nazarhussain](https://github.com/nazarhussain))
- Fix config usage in worker_controller - Closes #2216 [#2217](https://github.com/LiskHQ/lisk/pull/2217) ([shuse2](https://github.com/shuse2))
- Log level of ""Inserted new peer"" and ""Removed peer"" should be symmetric - Closes #1992 [#2215](https://github.com/LiskHQ/lisk/pull/2215) ([jondubois](https://github.com/jondubois))
- Update configuration migration script from 1.0.x to 1.1.x - Closes #2202 [#2205](https://github.com/LiskHQ/lisk/pull/2205) ([nazarhussain](https://github.com/nazarhussain))
- Review integration test suite - Close #2125 [#2203](https://github.com/LiskHQ/lisk/pull/2203) ([diego-G](https://github.com/diego-G))
- Clean constants, exceptions and config files from all networks folders - Closes #2186 [#2200](https://github.com/LiskHQ/lisk/pull/2200) ([nazarhussain](https://github.com/nazarhussain))
- SSL breaks Websocket connection - Closes #2154 [#2197](https://github.com/LiskHQ/lisk/pull/2197) ([jondubois](https://github.com/jondubois))
- Clean the version and minVersion config from all config files - Closes #2184 [#2196](https://github.com/LiskHQ/lisk/pull/2196) ([nazarhussain](https://github.com/nazarhussain))
- Fix failing tests in Jenkins for 1.1.0 - Closes #2192 [#2193](https://github.com/LiskHQ/lisk/pull/2193) ([nazarhussain](https://github.com/nazarhussain))
- Improve vote transaction verification performance - Close #2168 [#2189](https://github.com/LiskHQ/lisk/pull/2189) ([SargeKhan](https://github.com/SargeKhan))
- Store amounts as strings - Closes #716 [#2187](https://github.com/LiskHQ/lisk/pull/2187) ([ManuGowda](https://github.com/ManuGowda))
- Update jenkins integration to use the dedicated build server - Closes #2182 [#2183](https://github.com/LiskHQ/lisk/pull/2183) ([ManuGowda](https://github.com/ManuGowda))
- Cleanup tests to use ""devnet"" configuration files to run all tests - Closes #2156 [#2181](https://github.com/LiskHQ/lisk/pull/2181) ([nazarhussain](https://github.com/nazarhussain))
- Add sorting by producedBlocks - Closes #1716 [#2177](https://github.com/LiskHQ/lisk/pull/2177) ([Tschakki](https://github.com/Tschakki))
- Forging status broken after resync with beta7 - Closes #2058 [#2174](https://github.com/LiskHQ/lisk/pull/2174) ([ManuGowda](https://github.com/ManuGowda))
- Refactor generateDelegateList to accept round as parameter - Closes #2014 [#2172](https://github.com/LiskHQ/lisk/pull/2172) ([4miners](https://github.com/4miners))
- forge should be called after fillPool and not before - Closes #2170 [#2171](https://github.com/LiskHQ/lisk/pull/2171) ([4miners](https://github.com/4miners))
- Round fixes - Closes #216, #1783 [#2169](https://github.com/LiskHQ/lisk/pull/2169) ([4miners](https://github.com/4miners))
- Different datatype for round number among different tables - Closes #1647 [#2167](https://github.com/LiskHQ/lisk/pull/2167) ([4miners](https://github.com/4miners))
- Send back better error when disconnecting because of invalid peer headers - Closes #2068 [#2165](https://github.com/LiskHQ/lisk/pull/2165) ([jondubois](https://github.com/jondubois))
- Blocks verify functional test is not covered in Jenkins parallel test - Closes #2151 #2152 [#2160](https://github.com/LiskHQ/lisk/pull/2160) ([ManuGowda](https://github.com/ManuGowda))
- Change default delegate sorting to rank:asc - Closes #2138 [#2153](https://github.com/LiskHQ/lisk/pull/2153) ([Tschakki](https://github.com/Tschakki))",50873641
126,False,False,2018-09-01T22:38:51Z,2018-09-02T00:18:09Z,"# Change Log

## [v1.0.0-rc.4](https://github.com/liskhq/lisk/tree/v1.0.0-rc.4) (2018-09-02)
[Full Changelog](https://github.com/liskhq/lisk/compare/v1.0.0-rc.3...v1.0.0-rc.4)

**Closed issues:**
- Null character ""\u0000"" in transaction type 0 data field throws error #2370",50873641
127,False,False,2018-09-01T22:46:01Z,2018-09-02T00:15:32Z,"# Change Log

## [v1.0.2](https://github.com/liskhq/lisk/tree/v1.0.2) (2018-09-02)
[Full Changelog](https://github.com/liskhq/lisk/compare/v1.0.1...v1.0.2)

**Closed issues:**
- Null character ""\u0000"" in transaction type 0 data field throws error #2370",50873641
128,False,False,2018-08-24T13:42:09Z,2018-08-24T14:10:04Z,"# Change Log

**Lisk Core 1.0.1 Patch Release is fully compatible with 1.0.0 version.**

- Fixes Docker images for 1.0 version #2336. If you are willing to run Lisk Core v1.0 using Docker, please use this Patch Release.
- We also highly recommend using 1.0.1 Patch Release to all 3rd party tools users as exchanges or explorers as it boosts the performance of API transactions endpoint with sort #2201.

## [v1.0.3](https://github.com/LiskHQ/lisk/tree/v1.0.1) (2018-08-24)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/v1.0.0...v1.0.1)

**Closed issues:**

- Adjust docker template to Mainnet #2336
- Low performance for transactions endpoint with sort param #2201

**Commits:**

- Adjust Docker config #2336 (MaciejBaj)
- Add indexes for trs table to improve sorting #2201 ([4miners](https://github.com/4miners))
- Adapt update_config.js script to run on top of 1.0.0 version (0fd3b31) ([MaciejBaj](https://github.com/MaciejBaj))",50873641
129,False,False,2018-08-16T14:33:14Z,2018-08-16T14:41:24Z,"# Change Log

### Scheduled mainnet migration at block height **6901027**

#### Please read [Block Height Announcement  —  Release of Lisk Core 1.0.0 to Mainnet](https://blog.lisk.io/block-height-announcement-release-of-lisk-core-1-0-0-to-mainnet-55de51f6d9e4) for all the information required to migrate to this release. 

## [v1.0.0](https://github.com/LiskHQ/lisk/tree/v1.0.0) (2018-08-16)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.16...v1.0.0)

**Closed issues:**

[https://github.com/LiskHQ/lisk/issues](https://github.com/LiskHQ/lisk/issues?q=is%3Aissue+is%3Aclosed+project%3ALiskHQ%2Flisk%2F6)

**Merged pull requests:**

[https://github.com/LiskHQ/lisk/pulls](https://github.com/LiskHQ/lisk/pulls?q=is%3Apr+project%3ALiskHQ%2Flisk%2F6+is%3Aclosed+label%3A%22%3Awhite_check_mark%3A+ready%22)

_Find out more in series of our [blog posts](https://blog.lisk.io/search?q=Lisk%20Core%201.0)._
",50873641
130,False,True,2018-08-08T15:32:29Z,2018-08-09T13:16:28Z,"# Change Log

## [v1.0.0-rc.2](https://github.com/liskhq/lisk/tree/v1.0.0-rc.2) (2018-08-08)
[Full Changelog](https://github.com/liskhq/lisk/compare/v1.0.0-rc.1...v1.0.0-rc.2)

**Fixed bugs:**

- Set ""lisk"" user for database if its empty during migration  [\#2178](https://github.com/LiskHQ/lisk/issues/2178)

**Closed issues:**

- Update lisk-elements to v1.0.0 [\#2283](https://github.com/LiskHQ/lisk/issues/2283)
- Ban peers when validation of their blocks fails during sync [\#2252](https://github.com/LiskHQ/lisk/issues/2252)
- Validate chain on startup of the application  [\#2249](https://github.com/LiskHQ/lisk/issues/2249)
- Configuration migration of script rc2 should be compatible for rc1 [\#2243](https://github.com/LiskHQ/lisk/issues/2243)
- Set default db username during configuration migration [\#2227](https://github.com/LiskHQ/lisk/issues/2227)
- Update forging doc - Lisk Core [\#2226](https://github.com/LiskHQ/lisk/issues/2226)
- Core 1.0.0-rc.1 unable to migrate a 0.9 snapshot [\#2214](https://github.com/LiskHQ/lisk/issues/2214)
- Change binaries to binary in README [\#2213](https://github.com/LiskHQ/lisk/issues/2213)
- Do not write defaultPassword to config when migrating [\#2208](https://github.com/LiskHQ/lisk/issues/2208)
- Update block version to 1 [\#2199](https://github.com/LiskHQ/lisk/issues/2199)

**Merged pull requests:**

- Add height range to blockVersions in exceptions \(Testnet\) - Closes \#2246 [\#2296](https://github.com/LiskHQ/lisk/pull/2296) ([MaciejBaj](https://github.com/MaciejBaj))
- Update lisk-elements to v1.0.0 - Closes \#2283 [\#2284](https://github.com/LiskHQ/lisk/pull/2284) ([MaciejBaj](https://github.com/MaciejBaj))
- Stringify Block to verify while logging - Relates \#2249 [\#2267](https://github.com/LiskHQ/lisk/pull/2267) ([MaciejBaj](https://github.com/MaciejBaj))
- Add more logs and test to validate chain - Relates \#2249 [\#2264](https://github.com/LiskHQ/lisk/pull/2264) ([nazarhussain](https://github.com/nazarhussain))
- Refacor isValid function in logic/block\_version - Closes \#2199 [\#2262](https://github.com/LiskHQ/lisk/pull/2262) ([4miners](https://github.com/4miners))
- Add block version exception for devnet-rc2 branch - Closes \#2258 [\#2257](https://github.com/LiskHQ/lisk/pull/2257) ([nazarhussain](https://github.com/nazarhussain))
- Ban peers when validation of their blocks fails during sync - Closes \#2252 [\#2253](https://github.com/LiskHQ/lisk/pull/2253) ([MaciejBaj](https://github.com/MaciejBaj))
- Validate chain on startup of the application - Closes \#2249 [\#2251](https://github.com/LiskHQ/lisk/pull/2251) ([nazarhussain](https://github.com/nazarhussain))
- Set db user in default config to 'lisk' - Closes \#2248 [\#2250](https://github.com/LiskHQ/lisk/pull/2250) ([Nazgolze](https://github.com/Nazgolze))
- Configuration migration of script rc2 should be compatible for rc1 - Closes \#2243 [\#2244](https://github.com/LiskHQ/lisk/pull/2244) ([nazarhussain](https://github.com/nazarhussain))
- Add support for block versions - Closes \#2199 [\#2233](https://github.com/LiskHQ/lisk/pull/2233) ([4miners](https://github.com/4miners))
- Set default db username during configuration migration - Closes \#2227 [\#2229](https://github.com/LiskHQ/lisk/pull/2229) ([nazarhussain](https://github.com/nazarhussain))
- SSL breaks Websocket connection - Closes \#2154 [\#2224](https://github.com/LiskHQ/lisk/pull/2224) ([nazarhussain](https://github.com/nazarhussain))
- Do not write defaultPassword to config when migrating - Closes \#2208 [\#2223](https://github.com/LiskHQ/lisk/pull/2223) ([nazarhussain](https://github.com/nazarhussain))
- Change readme binaries to binary - Closes \#2213 [\#2220](https://github.com/LiskHQ/lisk/pull/2220) ([Tschakki](https://github.com/Tschakki))
- Final readme review v1.0.0 - Closes \#2134 [\#2164](https://github.com/LiskHQ/lisk/pull/2164) ([diego-G](https://github.com/diego-G))",50873641
131,False,True,2018-06-25T14:23:00Z,2018-06-28T08:58:53Z,"## [v1.0.0-rc.1](https://github.com/liskhq/lisk/tree/v1.0.0-rc.1) (2018-06-28)
[Full Changelog](https://github.com/liskhq/lisk/compare/v1.0.0-beta.9...v1.0.0-rc.1)

**Fixed bugs:**

- Update config script should allow password to be optional [\#2161](https://github.com/LiskHQ/lisk/issues/2161)

**Closed issues:**

- Update configuration template for testnet 1.0 [\#2157](https://github.com/LiskHQ/lisk/issues/2157)
- Update the milestone of rejecting type 6 and 7 transactions [\#2145](https://github.com/LiskHQ/lisk/issues/2145)
- Final README review v1.0.0 [\#2134](https://github.com/LiskHQ/lisk/issues/2134)

**Merged pull requests:**

- Update config script should allow password to be optional - Closes \#2161 [\#2163](https://github.com/LiskHQ/lisk/pull/2163) ([ManuGowda](https://github.com/ManuGowda))
- Final readme review v1.0.0 \(development\) - Closes \#2134  [\#2162](https://github.com/LiskHQ/lisk/pull/2162) ([MaciejBaj](https://github.com/MaciejBaj))
- Update template for 1.0 testnet [\#2158](https://github.com/LiskHQ/lisk/pull/2158) ([fchavant](https://github.com/fchavant))",50873641
132,False,True,2018-06-14T15:46:21Z,2018-06-15T11:33:03Z,"# Change Log

## [1.0.0-beta.9](https://github.com/liskhq/lisk/tree/1.0.0-beta.9) (2018-06-14)
[Full Changelog](https://github.com/liskhq/lisk/compare/1.0.0-beta.8...1.0.0-beta.9)

**Fixed bugs:**

- Balances in mem_accounts off after snapshotting [\#2126](https://github.com/LiskHQ/lisk/issues/2126)
- beta8 does not sync from 0 because of invalid fee [\#2123](https://github.com/LiskHQ/lisk/issues/2123)

**Merged pull requests:**

- Balances in mem_accounts off after snapshotting - Closes \#2126 [\#2115](https://github.com/LiskHQ/lisk/pull/2115) ([4miners](https://github.com/4miners))
- beta8 does not sync from 0 because of invalid fee - Closes \#2123 [\#2124](https://github.com/LiskHQ/lisk/pull/4miners) ([4miners](https://github.com/4miners))
- Migration config.json script from 1.0.0-beta.7 to 1.0.0-beta.9 - Closes \#2046 [\#2130](https://github.com/LiskHQ/lisk/pull/2130)([MaciejBaj](https://github.com/MaciejBaj))
- Fix create_rounds_rewards_table SQL migration query - Fixes #2126 ([4miners](https://github.com/4miners))
",50873641
133,False,True,2018-06-14T13:18:07Z,2018-06-15T11:32:02Z,"# Change Log

## [1.0.0-beta.8](https://github.com/liskhq/lisk/tree/1.0.0-beta.8) (2018-06-12)
[Full Changelog](https://github.com/liskhq/lisk/compare/1.0.0-beta.7...1.0.0-beta.8)

**Implemented enhancements:**

- Add Dockerfile to the lisk repository [\#2053](https://github.com/LiskHQ/lisk/issues/2053)
- Add config.json migration script from from old version 0.9.x [\#2046](https://github.com/LiskHQ/lisk/issues/2046)

**Fixed bugs:**

- encryptedSecret still present [\#2112](https://github.com/LiskHQ/lisk/issues/2112)
- Correct typo in config template [\#2107](https://github.com/LiskHQ/lisk/issues/2107)
- Error from modules.round.tick is ignored [\#2103](https://github.com/LiskHQ/lisk/issues/2103)
- Last block is set before block is saved to database [\#2102](https://github.com/LiskHQ/lisk/issues/2102)
- Incorrect usage of promises in Chain.prototype.saveBlock [\#2101](https://github.com/LiskHQ/lisk/issues/2101)
- During syncing, reject blocks received through broadcasts [\#2096](https://github.com/LiskHQ/lisk/issues/2096)
- Multi-signature transactions are not processed during stress tests [\#2094](https://github.com/LiskHQ/lisk/issues/2094)
- Nightly tests failing on 1.0.0 branch [\#2022](https://github.com/LiskHQ/lisk/issues/2022)

**Closed issues:**

- Improve explanation of timestamps in swagger API introduction [\#2109](https://github.com/LiskHQ/lisk/issues/2109)
- Backport 0.9.16 changes to 1.0.0 [\#2098](https://github.com/LiskHQ/lisk/issues/2098)
- Backport 0.9.15 changes to 1.0.0 [\#2097](https://github.com/LiskHQ/lisk/issues/2097)
- Decrease the number of missed/deleted blocks [\#2080](https://github.com/LiskHQ/lisk/issues/2080)
- Improve headers propagation [\#2078](https://github.com/LiskHQ/lisk/issues/2078)
- Adjust the frequency of P2P discovery [\#2076](https://github.com/LiskHQ/lisk/issues/2076)
- How to indicate that lisk core is done creating a snapshot [\#2072](https://github.com/LiskHQ/lisk/issues/2072)
- Forward compatibility for single bidirectional connection [\#2069](https://github.com/LiskHQ/lisk/issues/2069)
- \[Feature Request\] Use a PM2 JSON/JS configuration file instead of starting it manually [\#2062](https://github.com/LiskHQ/lisk/issues/2062)
- Port the feature of blackList for P2P layer to web sockets [\#2010](https://github.com/LiskHQ/lisk/issues/2010)

**Merged pull requests:**

- Make PUT /node/status/forging idempotent - Closes \#1956 [\#2119](https://github.com/LiskHQ/lisk/pull/2119) ([nazarhussain](https://github.com/nazarhussain))
- Configuration template for betanet [\#2115](https://github.com/LiskHQ/lisk/pull/2115) ([fchavant](https://github.com/fchavant))
- Fix configuration template's forging section - Closes \#2112 [\#2113](https://github.com/LiskHQ/lisk/pull/2113) ([fchavant](https://github.com/fchavant))
- Allow client socket to behave as an RPC server [\#2111](https://github.com/LiskHQ/lisk/pull/2111) ([jondubois](https://github.com/jondubois))
- Improve Lisk Timestamps explanation - Closes \#2109 [\#2110](https://github.com/LiskHQ/lisk/pull/2110) ([Tschakki](https://github.com/Tschakki))
- Correct typo in config template - Closes \#2107 [\#2108](https://github.com/LiskHQ/lisk/pull/2108) ([fchavant](https://github.com/fchavant))
- During syncing, reject blocks received through broadcasts [\#2106](https://github.com/LiskHQ/lisk/pull/2106) ([nazarhussain](https://github.com/nazarhussain))
- Backport 0.9.16 changes to 1.0.0 - Closes \#2098, \#2102 [\#2105](https://github.com/LiskHQ/lisk/pull/2105) ([4miners](https://github.com/4miners))
- Backport 0.9.15 changes to 1.0.0 - Closes \#2097 [\#2104](https://github.com/LiskHQ/lisk/pull/2104) ([4miners](https://github.com/4miners))
- Blacklist peers from config - Closes \#2010 [\#2095](https://github.com/LiskHQ/lisk/pull/2095) ([diego-G](https://github.com/diego-G))
- Nightly builds changes - Closes \#2027 [\#2070](https://github.com/LiskHQ/lisk/pull/2070) ([abelboldu](https://github.com/abelboldu))
- Nightly tests failing on 1.0.0 branch - Closes \#2022 \#2094 [\#2060](https://github.com/LiskHQ/lisk/pull/2060) ([ManuGowda](https://github.com/ManuGowda))
- Dockerfile with config.json templating - Closes \#2053 [\#2056](https://github.com/LiskHQ/lisk/pull/2056) ([fchavant](https://github.com/fchavant))
- Remove rank parameter in delegates endpoint - Closes \#1988 [\#2055](https://github.com/LiskHQ/lisk/pull/2055) ([Mastermaulik](https://github.com/Mastermaulik))
- Add config.json migration script from from old version 0.9.x - Closes \#2046 [\#2048](https://github.com/LiskHQ/lisk/pull/2048) ([nazarhussain](https://github.com/nazarhussain))
",50873641
134,False,False,2018-06-05T15:51:09Z,2018-06-05T16:40:46Z,"# Change Log

## [0.9.16](https://github.com/LiskHQ/lisk-private/tree/0.9.16) (2018-06-05)
[Full Changelog](https://github.com/LiskHQ/lisk-private/compare/0.9.15...0.9.16)

**Closed issues:**

- Error from modules.round.tick is ignored (https://github.com/LiskHQ/lisk/issues/2103)
- Last block is set before block is saved to (https://github.com/LiskHQ/lisk/issues/2102)
- Incorrect usage of promises in Chain.prototype.saveBlock (https://github.com/LiskHQ/lisk/issues/2101)

**Merged pull requests:**

- Error from modules.round.tick is ignored - (https://github.com/LiskHQ/lisk/commit/c9ea8c2e0439a9d8b6bfe42ce14cc60ef60bff54) ([4miners](https://github.com/4miners))
- Last block is set before block is saved to database - (https://github.com/LiskHQ/lisk/commit/165c1957ac402364a2f7561955a64f91923dba55) ([4miners](https://github.com/4miners))
- Incorrect usage of promises in Chain.prototype.saveBlock -(https://github.com/LiskHQ/lisk/commit/cf6a1ab3aa77b727d2e554fce3d5a4c1734fe915) ([4miners](https://github.com/4miners))",50873641
135,False,False,2018-06-02T11:37:53Z,2018-06-02T13:36:57Z,"# Change Log

## [0.9.15](https://github.com/liskhq/lisk/tree/0.9.15) (2018-06-02)
[Full Changelog](https://github.com/liskhq/lisk/compare/0.9.14...0.9.15)

**Closed issues:**

- Check INT\_32 range for transaction timestamps [\#2088](https://github.com/LiskHQ/lisk/issues/2088)

**Merged pull requests:**

- Check int32 range for transaction timestamps - Closes \#2088 ([webmaster128](https://github.com/webmaster128))",50873641
136,False,True,2018-05-25T11:14:50Z,2018-05-25T14:34:31Z,"# Change Log

## [v1.0.0-beta.7](https://github.com/liskhq/lisk/tree/v1.0.0-beta.7) (2018-05-25)
[Full Changelog](https://github.com/liskhq/lisk/compare/v1.0.0-beta.6...v1.0.0-beta.7)

**Fixed bugs:**

- Block propagation failure/partition and node crash [\#2030](https://github.com/LiskHQ/lisk/issues/2030)
- Broadcast, FindGoodPeer and Broadcast header does not select intended peers [\#2042](https://github.com/LiskHQ/lisk/issues/2042)
- Undo on transactions called with wrong block [\#2037](https://github.com/LiskHQ/lisk/issues/2037)
- Block deletion outside of SQL transaction [\#2036](https://github.com/LiskHQ/lisk/issues/2036)
- Application gets stuck when deleting last block of the same round twice [\#2032](https://github.com/LiskHQ/lisk/issues/2032)
- Fix unreachable peers code of self-update [\#2029](https://github.com/LiskHQ/lisk/issues/2029)
- Investigate sequences behaviour on 1.0.0-beta.7.3 branch [\#2021](https://github.com/LiskHQ/lisk/issues/2021)
- If a peer object for a specific nonce already exists and has a socket, destroy the socket [\#2012](https://github.com/LiskHQ/lisk/issues/2012)

**Closed issues:**

- Update wamp-socket-cluster to v1.0.0-beta.3 [\#2044](https://github.com/LiskHQ/lisk/issues/2044)
- Adjust the frequency of P2P discovery [\#1943](https://github.com/LiskHQ/lisk/issues/1943)

**Implemented enhancements:**

- Peers list should include some unmatched broadhash peers to broadcast to [\#2025](https://github.com/LiskHQ/lisk/issues/2025)
- Inconsistent IPv4 and IPv6 addresses [\#1947](https://github.com/LiskHQ/lisk/issues/1947)

**Merged pull requests:**

- Fix unreachable peers code of self-update - Closes \#2029 [\#2050](https://github.com/LiskHQ/lisk/pull/2050) ([ManuGowda](https://github.com/ManuGowda))
- Update wamp-socket-cluster to v1.0.0-beta.3 [\#2049](https://github.com/LiskHQ/lisk/pull/2049) ([MaciejBaj](https://github.com/MaciejBaj))
- Broadcast, FindGoodPeer and Broadcast header does not select intended peers - Closes \#2042 [\#2043](https://github.com/LiskHQ/lisk/pull/2043) ([jondubois](https://github.com/jondubois))
- Undo on transactions called with wrong block - Closes \#2037 [\#2039](https://github.com/LiskHQ/lisk/pull/2039) ([4miners](https://github.com/4miners))
- Block deletion outisde of SQL transaction - Closes \#2036 [\#2038](https://github.com/LiskHQ/lisk/pull/2038) ([4miners](https://github.com/4miners))
- Application gets stuck when deleting last block of the same round twice - Closes \#2032 [\#2035](https://github.com/LiskHQ/lisk/pull/2035) ([4miners](https://github.com/4miners))
- Fix non-called callback - Closes \#2021 [\#2023](https://github.com/LiskHQ/lisk/pull/2023) ([shuse2](https://github.com/shuse2))
- Simplify peer headers - Closes \#1841 [\#1991](https://github.com/LiskHQ/lisk/pull/1991) ([jondubois](https://github.com/jondubois))
- Inconsistent IPv4 and IPv6 addresses - Closes \#1947 [\#1951](https://github.com/LiskHQ/lisk/pull/1951) ([jondubois](https://github.com/jondubois))
- Adjust the frequency of P2P discovery - Closes \#1943 [\#1944](https://github.com/LiskHQ/lisk/pull/1944) ([shuse2](https://github.com/shuse2))
- Node syncing with Peers below minVersion - Closes \#1922 [\#1930](https://github.com/LiskHQ/lisk/pull/1930) ([4miners](https://github.com/4miners))

",50873641
137,False,False,2018-04-27T10:33:50Z,2018-04-27T13:49:05Z,"# Change Log

## [0.9.14](https://github.com/LiskHQ/lisk/tree/0.9.14) (2018-04-27) 
[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.13...0.9.14)

**Merged pull requests:**

- Inconsistent behavior between syncing and snapshotting - Closes \#1879 ([nazarhussain](https://github.com/nazarhussain))
- Add code changes for handling inert transactions - Closes \#1880 ([SargeKhan](https://github.com/SargeKhan))
- Remove exceptions added in 0.9.13 for mainnet - Closes \#1916 ([4miners](https://github.com/4miners))

**Closed issues:**

- Inconsistent behavior between syncing and snapshotting #1879
- Introduce inert exceptions #1880
- Remove exceptions added in 0.9.13 for mainnet #1916

",50873641
138,False,True,2018-04-20T14:24:27Z,2018-04-20T16:47:25Z,"# Change Log

## [v1.0.0-beta.6](https://github.com/liskhq/lisk/tree/v1.0.0-beta.6) (2018-04-17)
[Full Changelog](https://github.com/liskhq/lisk/compare/v1.0.0-beta.5...v1.0.0-beta.6)

**Fixed bugs:**

- Never reuse sockets and always destroy socket instead of just disconnecting and always unbind all event handlers - Potential memory leak [\#1876](https://github.com/LiskHQ/lisk/issues/1876)
- Post tx via peers with requesterPublicKey property takes down the node [\#1847](https://github.com/LiskHQ/lisk/issues/1847)
- Post mutisig tx via peers with invalid signatures takes down the node [\#1845](https://github.com/LiskHQ/lisk/issues/1845)

**Closed issues:**

- Cannot debug worker processes for memory leaks [\#1887](https://github.com/LiskHQ/lisk/issues/1887)
- Improve readability of verifySignature\(\) [\#1873](https://github.com/LiskHQ/lisk/issues/1873)
- Add tests for manipulated block data [\#1871](https://github.com/LiskHQ/lisk/issues/1871)
- Extensive functionality for integration test suite is missing [\#1849](https://github.com/LiskHQ/lisk/issues/1849)
- Update to Node.js version 6.14.1 [\#1844](https://github.com/LiskHQ/lisk/issues/1844)
- Backport stress test extension by adding type 2 and 3 transaction types [\#1758](https://github.com/LiskHQ/lisk/issues/1758)

**Merged pull requests:**

- Cannot debug worker processes for memory leaks - Closes \#1887 [\#1888](https://github.com/LiskHQ/lisk/pull/1888) ([jondubois](https://github.com/jondubois))
- Never reuse sockets and always destroy socket instead of just disconnecting - Closes \#1876 [\#1877](https://github.com/LiskHQ/lisk/pull/1877) ([jondubois](https://github.com/jondubois))
- Improve readability of verifySignature\(\) - Closes \#1873 [\#1874](https://github.com/LiskHQ/lisk/pull/1874) ([webmaster128](https://github.com/webmaster128))
- Tests negative verification result for manipulated data - Closes \#1871 [\#1872](https://github.com/LiskHQ/lisk/pull/1872) ([webmaster128](https://github.com/webmaster128))
- Remove variable shadowing in transaction apply, applyUnconfirmed, undo, undoUnconfirmed - Closes \#1726 [\#1860](https://github.com/LiskHQ/lisk/pull/1860) ([nazarhussain](https://github.com/nazarhussain))
- Bump Node.js version to 6.14.1 - Closes \#1844 [\#1857](https://github.com/LiskHQ/lisk/pull/1857) ([willclarktech](https://github.com/willclarktech))
- Reject transaction with requesterPublicKey - Closes \#1847  [\#1852](https://github.com/LiskHQ/lisk/pull/1852) ([diego-G](https://github.com/diego-G))
- Extensive functionality for integration tests - Closes \#1849 [\#1850](https://github.com/LiskHQ/lisk/pull/1850) ([Tschakki](https://github.com/Tschakki))
- Add json schema validation for transaction.signatures property - Closes \#1845 [\#1848](https://github.com/LiskHQ/lisk/pull/1848) ([diego-G](https://github.com/diego-G))
- Add stress tests for tx type 2 and 3 - Closes \#1758 [\#1846](https://github.com/LiskHQ/lisk/pull/1846) ([Tschakki](https://github.com/Tschakki))",50873641
139,False,True,2018-04-12T11:11:43Z,2018-04-12T11:26:17Z,"# Change Log

## [v1.0.0-beta.5](https://github.com/liskhq/lisk/tree/v1.0.0-beta.5) (2018-04-12)
[Full Changelog](https://github.com/liskhq/lisk/compare/v1.0.0-beta.4...v1.0.0-beta.5)

**Fixed bugs:**

- TypeError: Cannot read property 'nonce' of undefined [\#1856](https://github.com/LiskHQ/lisk/issues/1856)
- Consensus always 0% [\#1832](https://github.com/LiskHQ/lisk/issues/1832)

**Closed issues:**

- Cannot read property 'peers' of undefined crashing master process [\#1865](https://github.com/LiskHQ/lisk/issues/1865)
- Update wamp-socket-cluster to v1.0.0-beta.2 [\#1862](https://github.com/LiskHQ/lisk/issues/1862)
- Log current socket number while connecting Peer [\#1859](https://github.com/LiskHQ/lisk/issues/1859)
- Modify endpoint to add additional functionality for peers endpoint [\#1858](https://github.com/LiskHQ/lisk/issues/1858)

**Merged pull requests:**

- TypeError: Cannot read property 'nonce' of undefined - Closes \#1856 [\#1866](https://github.com/LiskHQ/lisk/pull/1866) ([jondubois](https://github.com/jondubois))
- Log current socket number while connecting Peer - Closes \#1859 [\#1864](https://github.com/LiskHQ/lisk/pull/1864) ([ManuGowda](https://github.com/ManuGowda))
- Update wamp-socket-cluster to v1.0.0-beta.2 - Closes \#1862 [\#1863](https://github.com/LiskHQ/lisk/pull/1863) ([MaciejBaj](https://github.com/MaciejBaj))",50873641
140,False,True,2018-04-11T11:07:57Z,2018-04-12T09:11:28Z,"# Change Log

## [Unreleased](https://github.com/liskhq/lisk/tree/HEAD)

[Full Changelog](https://github.com/liskhq/lisk/compare/v1.0.0-beta.4...HEAD)

## [v1.0.0-beta.4](https://github.com/liskhq/lisk/tree/v1.0.0-beta.4) (2018-04-11)
[Full Changelog](https://github.com/liskhq/lisk/compare/v1.0.0-beta.3...v1.0.0-beta.4)

**Closed issues:**

- Sockets are not being cleaned up properly and are disconnecting too often [\#1836](https://github.com/LiskHQ/lisk/issues/1836)
- Strange logs related to P2P on node - (Needs investigation) [\#1831](https://github.com/LiskHQ/lisk/issues/1831)

**Merged pull requests:**

- Sockets are not being cleaned up properly and are disconnecting too often - Closes \#1836 [\#1837] ([jondubois](https://github.com/jondubois))
",50873641
141,False,False,2018-04-10T11:13:47Z,2018-04-10T14:05:10Z,"# Change Log

## [0.9.13](https://github.com/LiskHQ/lisk/tree/0.9.13) (2018-04-10)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.12...0.9.13)

**Merged pull requests:**

- Remove variable shadowing in transaction apply, applyUnconfirmed, undo, undoUnconfirmed - Closes #1726 ([nazarhussain](https://github.com/nazarhussain))
- Add exceptions for mainnet ([nazarhussain](https://github.com/nazarhussain))
- Add json schema validation for transaction.signatures property ([diego-G](https://github.com/diego-G))
- Reject transactions with requesterPublicKey ([diego-G](https://github.com/diego-G))

**Closed issues:**

- Remove variable shadowing in transaction apply, applyUnconfirmed, undo, undoUnconfirmed #1726",50873641
142,False,True,2018-04-06T12:08:56Z,2018-04-06T18:24:26Z,"# Change Log
Change WS ports of seed nodes from 6001 to 6000.

## [v1.0.0-beta.2](https://github.com/liskhq/lisk/tree/v1.0.0-beta.2) (2018-04-06)
[Full Changelog](https://github.com/liskhq/lisk/compare/v1.0.0-beta.1...v1.0.0-beta.2)",50873641
143,False,True,2018-04-06T11:35:39Z,2018-04-06T18:22:30Z,"# Change Log
Change port used by HTTP and WS protocols of node's APIs from 6000 and 6001 to 5000 and 5001 respectively. 

## [v1.0.0-beta.1](https://github.com/liskhq/lisk/tree/v1.0.0-beta.1) (2018-04-06)
[Full Changelog](https://github.com/liskhq/lisk/compare/v1.0.0-beta.0...v1.0.0-beta.1)",50873641
144,False,True,2018-04-06T09:19:15Z,2018-04-06T18:10:40Z,"# Change Log
The first beta release for version 1.0.0 of lisk-core.

## [v1.0.0-beta.0](https://github.com/liskhq/lisk/tree/v1.0.0-beta.0) (2018-04-06)
[Full Changelog](https://github.com/liskhq/lisk/compare/v1.0.0-alpha.6...v1.0.0-beta.0)
",50873641
145,False,True,2018-04-05T15:23:15Z,2018-04-05T15:44:51Z,"# Change Log

## [v1.0.0-alpha.6](https://github.com/liskhq/lisk/tree/v1.0.0-alpha.6) (2018-04-05)
[Full Changelog](https://github.com/liskhq/lisk/compare/v1.0.0-alpha.5...v1.0.0-alpha.6)

**Closed issues:**

- Update wamp-socket-cluster to newest Beta release [\#1820](https://github.com/LiskHQ/lisk/issues/1820)

**Merged pull requests:**

- Update wamp-socket-cluster to newest Beta release - Closes [\#1821](https://github.com/LiskHQ/lisk/pull/1821) ([MaciejBaj](https://github.com/MaciejBaj))",50873641
146,False,True,2018-04-05T08:46:37Z,2018-04-05T08:51:41Z,"# Change Log

## [v1.0.0-alpha.5](https://github.com/liskhq/lisk/tree/v1.0.0-alpha.5) (2018-04-05)
[Full Changelog](https://github.com/liskhq/lisk/compare/v1.0.0-alpha.4...v1.0.0-alpha.5)

**Fixed bugs:**

- Block are not broadcasted properly [\#1817](https://github.com/LiskHQ/lisk/issues/1817)
- GET api/delegates/forgers returns invalid information [\#1813](https://github.com/LiskHQ/lisk/issues/1813)
- Next forgers are not sorted [\#1811](https://github.com/LiskHQ/lisk/issues/1811)

**Closed issues:**

- Unrequired  query complexity in get\_blocks\_for\_transport [\#1794](https://github.com/LiskHQ/lisk/issues/1794)

**Merged pull requests:**

- Block are not broadcasted properly - Closes \#1817 [\#1818](https://github.com/LiskHQ/lisk/pull/1818) ([4miners](https://github.com/4miners))
- Sort delegates for nextForgers endpoint - Closes \#1811 [\#1816](https://github.com/LiskHQ/lisk/pull/1816) ([SargeKhan](https://github.com/SargeKhan))
",50873641
147,False,True,2018-04-03T17:22:35Z,2018-04-03T17:28:44Z,"#  Change Log

## [v1.0.0-alpha.4](https://github.com/liskhq/lisk/tree/v1.0.0-alpha.4) (2018-04-03)
[Full Changelog](https://github.com/liskhq/lisk/compare/v1.0.0-alpha.3...v1.0.0-alpha.4)

**Implemented enhancements:**

- Migrations takes too long after rebuild from snapshot [\#1799](https://github.com/LiskHQ/lisk/issues/1799)

**Fixed bugs:**

- Next forgers are not sorted [\#1811](https://github.com/LiskHQ/lisk/issues/1811)
- Update broadhash and height headers after block deletion [\#1803](https://github.com/LiskHQ/lisk/issues/1803)
- Fail to recover chain when syncing [\#1795](https://github.com/LiskHQ/lisk/issues/1795)
- Failed to find common block with: xxx [\#1789](https://github.com/LiskHQ/lisk/issues/1789)
- Version column in peers table expects shorter length value  [\#1786](https://github.com/LiskHQ/lisk/issues/1786)
- NetworkHeight shows always zero [\#1778](https://github.com/LiskHQ/lisk/issues/1778)

**Closed issues:**

- Fix log issue for matched broadhash and unmatched broadhash peers [\#1809](https://github.com/LiskHQ/lisk/issues/1809)
- Database migrations must run in series but mutually exclusive to each other [\#1806](https://github.com/LiskHQ/lisk/issues/1806)
- Improve jsdoc by replacing type {hash} with valid JavaScript type [\#1798](https://github.com/LiskHQ/lisk/issues/1798)
- Add integration tests coverage for synchronize and broadcast modes [\#1751](https://github.com/LiskHQ/lisk/issues/1751)
- Installation fails - compiling libsodium [\#1725](https://github.com/LiskHQ/lisk/issues/1725)

**Merged pull requests:**

- Sort delegates for nextForgers endpoint - Closes \#1811 [\#1812](https://github.com/LiskHQ/lisk/pull/1812) ([SargeKhan](https://github.com/SargeKhan))
- Fix logs for peers listing attempt parameter - Closes \#1809 [\#1810](https://github.com/LiskHQ/lisk/pull/1810) ([SargeKhan](https://github.com/SargeKhan))
- Update broadhash and height headers after block deletion - Closes \#1803 [\#1808](https://github.com/LiskHQ/lisk/pull/1808) ([4miners](https://github.com/4miners))
- Database migrations must run in series but mutually exclusive to each other - Close \#1806 [\#1807](https://github.com/LiskHQ/lisk/pull/1807) ([nazarhussain](https://github.com/nazarhussain))
- Migrations takes too long after rebuild from snapshot - Closes \#1799 [\#1804](https://github.com/LiskHQ/lisk/pull/1804) ([nazarhussain](https://github.com/nazarhussain))
- Fix chain recovery by changing getCommonBlock - Closes \#1795 [\#1801](https://github.com/LiskHQ/lisk/pull/1801) ([SargeKhan](https://github.com/SargeKhan))
- Improve jsdoc by replacing type {hash} with valid JavaScript type - Closes \#1798 [\#1796](https://github.com/LiskHQ/lisk/pull/1796) ([webmaster128](https://github.com/webmaster128))
- Update system headers and revert node network height changes - Closes \#1778 [\#1793](https://github.com/LiskHQ/lisk/pull/1793) ([ManuGowda](https://github.com/ManuGowda))
- Version column in peers table expects shorter length value - Closes \#1786 [\#1792](https://github.com/LiskHQ/lisk/pull/1792) ([jondubois](https://github.com/jondubois))
- Failed to find common block with: xxx - Closes \#1789 [\#1791](https://github.com/LiskHQ/lisk/pull/1791) ([4miners](https://github.com/4miners))
- Network height shows always zero - Closes \#1778 [\#1790](https://github.com/LiskHQ/lisk/pull/1790) ([ManuGowda](https://github.com/ManuGowda))
- Add integration tests coverage for synchronize and broadcast modes - Closes \#1751 [\#1784](https://github.com/LiskHQ/lisk/pull/1784) ([jondubois](https://github.com/jondubois))
- Improve use of promises - Closes \#1437 [\#1749](https://github.com/LiskHQ/lisk/pull/1749) ([vitaly-t](https://github.com/vitaly-t))
- Add functional test coverage for rounds system - Closes \#1303 [\#1747](https://github.com/LiskHQ/lisk/pull/1747) ([4miners](https://github.com/4miners))",50873641
148,False,True,2018-03-27T09:31:16Z,2018-03-27T10:30:45Z,"# Change Log

## [v1.0.0-alpha.3](https://github.com/liskhq/lisk/tree/v1.0.0-alpha.3) (2018-03-27)
[Full Changelog](https://github.com/liskhq/lisk/compare/v1.0.0-alpha.2...v1.0.0-alpha.3)

**Fixed bugs:**

- Nodes are not broadcasting transactions [\#1777](https://github.com/LiskHQ/lisk/issues/1777)

**Closed issues:**

- Remove unused helpers/constants variables [\#1732](https://github.com/LiskHQ/lisk/issues/1732)
- Consistent usage of es6 features [\#1709](https://github.com/LiskHQ/lisk/issues/1709)
- Consistent usage of es6 features in modules implementation [\#1680](https://github.com/LiskHQ/lisk/issues/1680)
- Achieve atomic block deletion [\#1563](https://github.com/LiskHQ/lisk/issues/1563)

**Merged pull requests:**

- Revert to single transaction and signature for onTransaction and onSignature events - Closes \#1777 [\#1787](https://github.com/LiskHQ/lisk/pull/1787) ([SargeKhan](https://github.com/SargeKhan))
- Standardise domain specific variable naming - Closes \#826 [\#1785](https://github.com/LiskHQ/lisk/pull/1785) ([ManuGowda](https://github.com/ManuGowda))
- Remove unused constants - Closes \#1732 [\#1768](https://github.com/LiskHQ/lisk/pull/1768) ([ManuGowda](https://github.com/ManuGowda))
- Achieve atomic block deletion - Closes \#1563 [\#1757](https://github.com/LiskHQ/lisk/pull/1757) ([SargeKhan](https://github.com/SargeKhan))
- Consistent usage of es6 features in modules - Closes \#1680 [\#1743](https://github.com/LiskHQ/lisk/pull/1743) ([LucasIsasmendi](https://github.com/LucasIsasmendi))",50873641
149,False,True,2018-03-23T12:09:02Z,2018-03-23T12:19:53Z,"# Change Log

## [v1.0.0-alpha.2](https://github.com/liskhq/lisk/tree/v1.0.0-alpha.2) (2018-03-23)
[Full Changelog](https://github.com/liskhq/lisk/compare/v1.0.0-alpha.1...v1.0.0-alpha.2)

**Fixed bugs:**

- Node stops after restart while applying Genesis Block [\#1766](https://github.com/LiskHQ/lisk/issues/1766)
- Logs are written about cache not available, although the user disabled the functionality in config file. [\#1756](https://github.com/LiskHQ/lisk/issues/1756)
- When setting log level to trace, one log entry is not parsed correctly. [\#1755](https://github.com/LiskHQ/lisk/issues/1755)
- Nonce is not propagated correctly in PeersManager mappings [\#1752](https://github.com/LiskHQ/lisk/issues/1752)
- WSPeerHeaders in swagger.yaml the version number should not have min or max length. [\#1744](https://github.com/LiskHQ/lisk/issues/1744)

**Closed issues:**

- QA issues - More logging [\#1770](https://github.com/LiskHQ/lisk/issues/1770)
- Functional test HTTP GET blocks fails when there is no blocks [\#1736](https://github.com/LiskHQ/lisk/issues/1736)
- Update lisk-js/lisk-elements to 1.0.0-rc.1 [\#1629](https://github.com/LiskHQ/lisk/issues/1629)
- The makeRequest function in swagger\_spec makes tests harder to read [\#1612](https://github.com/LiskHQ/lisk/issues/1612)

**Merged pull requests:**

- Fix functional random test get blocks with offset - Closes \#1736 [\#1775](https://github.com/LiskHQ/lisk/pull/1775) ([diego-G](https://github.com/diego-G))
- Nonce is not propagated correctly in PeersManager mappings - Closes \#1752 [\#1773](https://github.com/LiskHQ/lisk/pull/1773) ([MaciejBaj](https://github.com/MaciejBaj))
- More detailed logging - Closes \#1770 [\#1772](https://github.com/LiskHQ/lisk/pull/1772) ([jondubois](https://github.com/jondubois))
- Fix issue with loading genesisBlock twice - Fixes \#1766 [\#1769](https://github.com/LiskHQ/lisk/pull/1769) ([SargeKhan](https://github.com/SargeKhan))
- Removed remaining length limitations for version number - Closes \#1774 [\#1767](https://github.com/LiskHQ/lisk/pull/1767) ([jondubois](https://github.com/jondubois))
- Update lisk-js to 1.0.0 temporary branch - Closes \#1629 [\#1765](https://github.com/LiskHQ/lisk/pull/1765) ([diego-G](https://github.com/diego-G))
- Update log message to cache disabled - Closes \#1756 [\#1764](https://github.com/LiskHQ/lisk/pull/1764) ([ManuGowda](https://github.com/ManuGowda))",50873641
150,False,True,2018-03-20T15:23:13Z,2018-03-20T15:49:52Z,"# Change Log

## [v1.0.0-alpha.1](https://github.com/LiskHQ/lisk/tree/v1.0.0-alpha.1) (2018-03-20)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/v1.0.0-alpha.0...v1.0.0-alpha.1)

**Implemented enhancements:**

- Improve logging of low-level WebSocket messages and events [\#1762](https://github.com/LiskHQ/lisk/issues/1762)
- Core should have better logs in debug level logging for WS connections. [\#1745](https://github.com/LiskHQ/lisk/issues/1745)

**Fixed bugs:**

- WSPeerHeaders in swagger.yaml the version number should not have min or max length. [\#1744](https://github.com/LiskHQ/lisk/issues/1744)
- Unit tests are failing due to too many connections [\#1741](https://github.com/LiskHQ/lisk/issues/1741)
- PUT /api/node/status/forging doesn't change the forging status [\#1740](https://github.com/LiskHQ/lisk/issues/1740)
- Expire transactions doesn't return all transaction ids [\#1727](https://github.com/LiskHQ/lisk/issues/1727)

**Closed issues:**

- Review unit test coverage of logic/vote [\#1663](https://github.com/LiskHQ/lisk/issues/1663)
- Update the unit tests for db repos to test calls for pg-promise helpers namespace [\#1649](https://github.com/LiskHQ/lisk/issues/1649)
- Add unit test coverage for modules blocks.verify [\#1598](https://github.com/LiskHQ/lisk/issues/1598)
- Add unit test coverage for db/repos/transactions.\* [\#1594](https://github.com/LiskHQ/lisk/issues/1594)
- Add unit test coverage for modules blocks.chain [\#1549](https://github.com/LiskHQ/lisk/issues/1549)

**Merged pull requests:**

- Improve logging of WebSocket messages and events - Closes \#1762 [\#1763](https://github.com/LiskHQ/lisk/pull/1763) ([jondubois](https://github.com/jondubois))
- PUT /api/node/status/forging doesn't change the forging status - Closes \#1740 [\#1754](https://github.com/LiskHQ/lisk/pull/1754) ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Log peer WebSocket connection errors in debug mode - Closes \#1745 [\#1753](https://github.com/LiskHQ/lisk/pull/1753) ([jondubois](https://github.com/jondubois))
- Remove minLength and maxLength schema restrictions for WSPeerHeaders - Closes \#1744 [\#1746](https://github.com/LiskHQ/lisk/pull/1746) ([jondubois](https://github.com/jondubois))
- Unit tests are failing due to too many connections - Closes \#1741 [\#1742](https://github.com/LiskHQ/lisk/pull/1742) ([4miners](https://github.com/4miners))
- Add unit tests for db/accounts to stub pgp.helpers namespace - Closes \#1649 [\#1739](https://github.com/LiskHQ/lisk/pull/1739) ([nazarhussain](https://github.com/nazarhussain))
- Expire transactions doesn't return all transaction ids - Closes \#1727 [\#1734](https://github.com/LiskHQ/lisk/pull/1734) ([ManuGowda](https://github.com/ManuGowda))
- Add unit tests for db/repos/transactions\* - Closes \#1594 [\#1679](https://github.com/LiskHQ/lisk/pull/1679) ([nazarhussain](https://github.com/nazarhussain))
- Review unit test coverage of logic vote - Closes \#1663 [\#1673](https://github.com/LiskHQ/lisk/pull/1673) ([ManuGowda](https://github.com/ManuGowda))
- Add unit test coverage for modules blocks.verify - Closes \#1598 [\#1657](https://github.com/LiskHQ/lisk/pull/1657) ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Add unit test coverage for modules blocks.chain - Closes \#1549 [\#1635](https://github.com/LiskHQ/lisk/pull/1635) ([LucasIsasmendi](https://github.com/LucasIsasmendi))",50873641
151,False,True,2018-03-15T12:32:07Z,2018-03-15T12:45:25Z,"# Change Log

**First alpha pre-release of `1.0.0` for quality assurance testing.**

## [v1.0.0-alpha.0](https://github.com/LiskHQ/lisk/tree/v1.0.0-alpha.0) (2018-03-15)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.12...v1.0.0-alpha.0)

**Closed issues:**

[https://github.com/LiskHQ/lisk/issues](https://github.com/LiskHQ/lisk/issues?q=is%3Aissue+is%3Aclosed+project%3ALiskHQ%2Flisk%2F6)

**Merged pull requests:**

[https://github.com/LiskHQ/lisk/pulls](https://github.com/LiskHQ/lisk/pulls?q=is%3Apr+project%3ALiskHQ%2Flisk%2F6+is%3Aclosed+label%3A%22%3Awhite_check_mark%3A+ready%22)",50873641
152,False,False,2018-03-01T09:41:50Z,2018-03-01T14:54:16Z,"# Change Log

## [0.9.12](https://github.com/LiskHQ/lisk/tree/0.9.12) (2018-03-01)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.11...0.9.12)

**Merged pull requests:**

- On transaction apply and undo, do not reset state of an account - Closes #1328 https://github.com/LiskHQ/lisk/pull/1349 ([SargeKhan](https://github.com/SargeKhan))
- Bug in TransactionPool.transactionInPool - Closes #707 https://github.com/LiskHQ/lisk/pull/1360 ([4miners](https://github.com/4miners))
- Logs are not verbose enough for apply unconfirmed transaction - Fixes #1331 https://github.com/LiskHQ/lisk/pull/1367 ([SargeKhan](https://github.com/SargeKhan))
- Error on applyUnconfirmed step is neglected in chain/applyBlock a5043616e75bc01dcf1f251373f6b88297b17713 ([SargeKhan](https://github.com/SargeKhan))
- Ensure forge and sync process exclusiveness d305c88ef9893d09946f477f278076e8ec626c99 ([MaciejBaj](https://github.com/MaciejBaj))
- Duplicated transaction in queues corrupts unconfirmed state 7c20780eebe431ffcbdcdf8a7c4652740ca03e0f ([MaciejBaj](https://github.com/MaciejBaj))
- Re-receive transactions from deleted block ac2498d4530a77da9541e2a3fa0a791ea33a2ace ([MaciejBaj](https://github.com/MaciejBaj))
- Update dependencies with vulnerabilities 62451437495f3edb9fe18e510227a71b39cc80cf ([diego-G](https://github.com/diego-G))
- Transaction pool unit tests fix aad735c10a5c269ca1a1acf6cebf8e19ddac7765 ([MaciejBaj](https://github.com/MaciejBaj))
- Fix delegate unit tests 1e8018ea92a5515e36b4daaf0b94e2166e48f819 ([MaciejBaj](https://github.com/MaciejBaj))
- Extend stress test by adding extra transaction types d7e16e35c85d2ca16ddffa3adf6634401e624864 ([MaciejBaj](https://github.com/MaciejBaj))
- Re-receive transactions from deleted block d533af33f83b093584e3819db4602095ce2d931a ([SargeKhan](https://github.com/SargeKhan))

**Closed issues:**

- Error loading blocks: Delegate not found #1182",50873641
153,False,False,2017-12-19T14:45:27Z,2017-12-20T22:41:23Z,"# Change Log

## [0.9.11](https://github.com/LiskHQ/lisk/tree/0.9.11)

[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.10...0.9.11)

**Merged pull requests:**

- Update LiskHQ/node-sodium version #988 ([fchavant](https://github.com/fchavant))
- Peers module unit tests are failing randomly - Closes #1048 #1057 ([MaciejBaj](https://github.com/MaciejBaj))
- Fix missing parameter propagation - Closes #1015 #1017 ([4miners ](https://github.com/4miners))
- Improve quality of transaction pool documentation - Closes #1073 #1074 ([karmacoma](https://github.com/karmacoma))
- Wrong logic in loader.__private.sync - Closes #1024 #1075 ([4miners](https://github.com/4miners))
- Decouple and remove Lisk UI - Closes #1077 #1078 ([Tschakki](https://github.com/Tschakki)) 
- Improve quality of dapps module documentation - Closes #1099 #1100 ([karmacoma](https://github.com/karmacoma))
- Reject blocks receipts with block slot/timestamp out of window ([SargeKhan](https://github.com/SargeKhan))
- Fix broken npm run test - Closes #1113 #1114 ([karmacoma](https://github.com/karmacoma))
- Fix failing tests in test/unit/modules/blocks/verify.js - Closes #1115 #1118 ([SargeKhan](https://github.com/SargeKhan)) 
- Update README.md for 0.9.11 - Closes #1085 #1126 ([Tschakki](https://github.com/Tschakki)) 
- Fix LiskHQ/lisk/test.sh failure - Closes #1157 #1158 ([karmacoma](https://github.com/karmacoma))
",50873641
154,False,False,2017-10-25T14:01:05Z,2017-10-25T15:25:27Z,"# Change Log

## [0.9.10](https://github.com/LiskHQ/lisk/tree/0.9.10)

[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.9...0.9.10)

**Merged pull requests:**

- Move cb to last argument for blocks/chain/applyBlock 02082337cc71ebed4aed818c16e473d28274c8ed ([4miners](https://github.com/4miners))
- 0.9.10 - Multisig transactions from the same account bug resolution 231e5abc50a961320e55f93fa8c2cbbc6839e07e ([SargeKhan](https://github.com/SargeKhan)) ([4miners](https://github.com/4miners))
- Decreased amount of LSK transferred to multi account c6b0b6223f57ae584418b6160046850cf0d6e394 ([SargeKhan](https://github.com/SargeKhan))
- Rewind fork 5-3 fix 546d8fd3f8b867b92625626d40b50c7dce1233bd ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Bug resolution for multisignature registration transaction 053d43c6a3410b6856d56b10d4ee6f68f3bf708e ([SargeKhan](https://github.com/SargeKhan))
- Duplicated delegates fix with silent validation failure 1ffd2aef69f5397a47020880dabe2ede3c1a2bff ([SargeKhan](https://github.com/SargeKhan)) ([MaciejBaj](https://github.com/MaciejBaj))",50873641
155,False,False,2017-09-03T18:03:00Z,2017-09-03T18:07:59Z,"# Change Log

## [0.9.9](https://github.com/LiskHQ/lisk/tree/0.9.9) (2017-09-03)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.8...0.9.9)

**Reverted changes:**

- Fixed duplicate name delegate registration within same block. Closes #736",50873641
156,False,False,2017-08-31T14:20:10Z,2017-08-31T14:40:03Z,"# Change Log

## [0.9.8](https://github.com/LiskHQ/lisk/tree/0.9.8) (2017-08-31)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.7...0.9.8)

**Fixed bugs:**

- Fixed duplicate name delegate registration within same block. Closes #736 
- Fixed schema checks for min/max length of arrays.",50873641
157,False,False,2017-08-22T20:12:31Z,2017-08-22T20:36:46Z,"# Change Log

## [0.9.7](https://github.com/LiskHQ/lisk/tree/0.9.7) (2017-08-22)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.6...0.9.7)

**Fixed bugs:**

- Fixed bug in multisignature schema validations with functional and unit tests - Closes #744",50873641
158,False,False,2017-08-21T18:52:01Z,2017-08-21T18:58:52Z,"# Change Log

## [0.9.6](https://github.com/LiskHQ/lisk/tree/0.9.6) (2017-08-21)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.5...0.9.6)

**Fixed bugs:**

- Fixed block verification logic with unit tests.",50873641
159,False,False,2017-08-20T19:12:06Z,2017-08-20T19:35:32Z,"# Change Log

## [0.9.5](https://github.com/LiskHQ/lisk/tree/0.9.5) (2017-08-20)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.4...0.9.5)

**Fixed bugs:**

- Fixed block rewind. Revised block verification checks in `onReceiveBlock` event handler.",50873641
160,False,False,2017-08-20T00:25:47Z,2017-08-20T01:12:34Z,"# Change Log

## [0.9.4](https://github.com/LiskHQ/lisk/tree/0.9.4) (2017-08-19)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.3...0.9.4)

**Fixed bugs:**

- Fixed block rewind. Added block verification checks to `onReceiveBlock` event handler.",50873641
161,False,False,2017-08-02T09:23:33Z,2017-08-02T13:34:02Z,"# Change Log

## [0.9.3](https://github.com/LiskHQ/lisk/tree/0.9.3) (2017-08-02)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.2...0.9.3)

**Fixed bugs:**

- Properly handle votes rollback after delete last block of round - Closes \#689 [\#690](https://github.com/LiskHQ/lisk/pull/690) ([4miners](https://github.com/4miners))

**Closed issues:**

- Votes don't rewind correctly in some cases [\#689](https://github.com/LiskHQ/lisk/issues/689)",50873641
162,False,False,2017-07-05T13:05:09Z,2017-07-05T13:24:34Z,"# Change Log

## [0.9.2](https://github.com/LiskHQ/lisk/tree/0.9.2) (2017-07-05)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.1...0.9.2)

**Implemented enhancements:**

- Improve handling of invalid peers - Closes \#645 [\#648](https://github.com/LiskHQ/lisk/pull/648) ([4miners](https://github.com/4miners))
- Unit tests for transfer, vote and transaction logic [\#653](https://github.com/LiskHQ/lisk/pull/653) ([SargeKhan](https://github.com/SargeKhan))

**Fixed bugs:**

- Properly initialize genesisBlock correctly in modules/transaction [\#651](https://github.com/LiskHQ/lisk/issues/651)
- Inconsistent undo logic [\#649](https://github.com/LiskHQ/lisk/issues/649)
- Peers table polution from light clients [\#645](https://github.com/LiskHQ/lisk/issues/645)
- Node enters blockchain ready instead of terminating after snapshot [\#637](https://github.com/LiskHQ/lisk/issues/637)
- Peers are not cleaned up after disconnected [\#633](https://github.com/LiskHQ/lisk/issues/633)
- Delegate nodes try to forge multiple times after forging a block in their slot [\#632](https://github.com/LiskHQ/lisk/issues/632)
- Initialize genesis block correctly - Fixes \#651 [\#652](https://github.com/LiskHQ/lisk/pull/652) ([SargeKhan](https://github.com/SargeKhan))
- Properly rollback failed undo operation - Closes \#649 [\#650](https://github.com/LiskHQ/lisk/pull/650) ([4miners](https://github.com/4miners))
- Wait for functions execution in jobsQueue - Closes \#632 [\#643](https://github.com/LiskHQ/lisk/pull/643) ([4miners](https://github.com/4miners))
- Verify snapshot - Closes \#637 [\#642](https://github.com/LiskHQ/lisk/pull/642) ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Improve peers state management - Closes \#633 [\#638](https://github.com/LiskHQ/lisk/pull/638) ([MaciejBaj](https://github.com/MaciejBaj))
",50873641
163,False,False,2017-06-28T09:55:46Z,2017-06-28T09:56:55Z,"# Change Log

## [0.9.1](https://github.com/LiskHQ/lisk/tree/0.9.1) (2017-06-28)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.0...0.9.1)

**Fixed bugs:**

- Node crash with the FTL error [\#629](https://github.com/LiskHQ/lisk/issues/629)
- Overwrite 'receivedAt' property prior to add tx to pool - Closes \#629 [\#636](https://github.com/LiskHQ/lisk/pull/636) ([4miners](https://github.com/4miners))
",50873641
164,False,False,2017-06-23T08:44:00Z,2017-06-23T15:57:15Z,"**Implemented enhancements:**

- Replace function parameter scope with specific value content [\#555](https://github.com/LiskHQ/lisk/issues/555) ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Change process.exit\(\[code\]\) calls [\#554](https://github.com/LiskHQ/lisk/issues/554) ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Split scope \(closure reduction\) - Closes \#555 [\#584](https://github.com/LiskHQ/lisk/pull/584) ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Api calls caching via redis - Closes \#484 [\#577](https://github.com/LiskHQ/lisk/pull/577) ([SargeKhan](https://github.com/SargeKhan))
- Replace call exit\(\) with exitCode - Closes \#554 [\#572](https://github.com/LiskHQ/lisk/pull/572) ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Update redis to have a password [\#603](https://github.com/LiskHQ/lisk/pull/603) ([Isabello](https://github.com/Isabello))
- Back to process.exit\(code\) - Rollback \#554 [\#613](https://github.com/LiskHQ/lisk/pull/613) ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Disable console logging for production - Closes \#620 [\#621](https://github.com/LiskHQ/lisk/pull/621) ([5an1ty](https://github.com/5an1ty))

**Fixed bugs:**

- Inconsistent unconfirmed state in memory tables \#1 [\#593](https://github.com/LiskHQ/lisk/issues/593)
- Transactions broadcast not work on small network [\#592](https://github.com/LiskHQ/lisk/issues/592)
- Storing synchronous actions in one place [\#582](https://github.com/LiskHQ/lisk/issues/582)
- Consistency when dealing with timestamps [\#448](https://github.com/LiskHQ/lisk/issues/448)
- Block verification - exception blockreward [\#607](https://github.com/LiskHQ/lisk/issues/607)
- Delegates table ends up with Duplicate Entries [\#610](https://github.com/LiskHQ/lisk/issues/610)
- Block verification - exception blockreward [\#607](https://github.com/LiskHQ/lisk/issues/607)
- Do not use cache if Redis authentication failed [\#606](https://github.com/LiskHQ/lisk/issues/606)
- Inconsistent unconfirmed state in memory tables \#1 - Closes \#593 [\#596](https://github.com/LiskHQ/lisk/pull/596) ([4miners](https://github.com/4miners)) 
- Transactions broadcast not work on small network - Closes \#592 [\#595](https://github.com/LiskHQ/lisk/pull/595) ([4miners](https://github.com/4miners))
- Save all synchronous jobs in one container - Closes \#582 [\#583](https://github.com/LiskHQ/lisk/pull/583) ([MaciejBaj](https://github.com/MaciejBaj))
- Timestamps performance - Closes \#448 [\#571](https://github.com/LiskHQ/lisk/pull/571) ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Fix rounds module init, improved tests [\#604](https://github.com/LiskHQ/lisk/pull/604) ([4miners](https://github.com/4miners))
- Position blockRewards var - Closes \#607 [\#626](https://github.com/LiskHQ/lisk/pull/626) ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Duplicate vote fix [\#625](https://github.com/LiskHQ/lisk/pull/625) ([SargeKhan](https://github.com/SargeKhan))
- Fix redis authentication error - Closes \#606 [\#612](https://github.com/LiskHQ/lisk/pull/612) ([SargeKhan](https://github.com/SargeKhan))
- Add migration to recreate delegates table content - Closes \#610 [\#611](https://github.com/LiskHQ/lisk/pull/611) ([MaciejBaj](https://github.com/MaciejBaj))
- Block reward exceptions - Closes \#607 [\#608](https://github.com/LiskHQ/lisk/pull/608) ([LucasIsasmendi](https://github.com/LucasIsasmendi))


**Closed issues:**

- Postgresql fail on Ubuntu 17.04 [\#591](https://github.com/LiskHQ/lisk/issues/591)
- Gruntfile.js needs to be updated [\#589](https://github.com/LiskHQ/lisk/issues/589)
- Deprecated: new Buffer\(string\[, encoding\]\)  [\#559](https://github.com/LiskHQ/lisk/issues/559)
- Document source code using JSDoc [\#542](https://github.com/LiskHQ/lisk/issues/542)
- Refactor blocks module to submodules [\#534](https://github.com/LiskHQ/lisk/issues/534)
- Implement automatic caching of API calls [\#484](https://github.com/LiskHQ/lisk/issues/484)
- Replace Travis with Jenkins [\#602](https://github.com/LiskHQ/lisk/issues/602)
- Improve ""Invalid transaction timestamp"" error message [\#614](https://github.com/LiskHQ/lisk/issues/614)

**Merged pull requests:**

- Add declaration for blocks folder in Gruntfile - Closes \#589 [\#590](https://github.com/LiskHQ/lisk/pull/590) ([Isabello](https://github.com/Isabello))
- Replace new Buffer with .from or .alloc - Closes \#559 [\#573](https://github.com/LiskHQ/lisk/pull/573) ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Refactor blocks module to submodules - Closes \#534 [\#564](https://github.com/LiskHQ/lisk/pull/564) ([4miners](https://github.com/4miners))
- Initial documentation for blocks module - Closes \#542 [\#553](https://github.com/LiskHQ/lisk/pull/553) ([4miners](https://github.com/4miners))
- Initial JSDoc config and documentation - Closes \#542 [\#549](https://github.com/LiskHQ/lisk/pull/549) ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Implement Jenkins into TestSuite - Closes \#602 [\#605](https://github.com/LiskHQ/lisk/pull/605) ([Isabello](https://github.com/Isabello))
- Improve verbosity of timestamp failure - Closes \#614 [\#617](https://github.com/LiskHQ/lisk/pull/617) ([Isabello](https://github.com/Isabello))",50873641
165,False,True,2017-06-23T08:52:06Z,2017-06-23T08:55:18Z,"# Change Log

## [0.9.0e](https://github.com/LiskHQ/lisk/tree/0.9.0e) (2017-06-23)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.0d...0.9.0e)

**Fixed bugs:**

- Block verification - exception blockreward [\#607](https://github.com/LiskHQ/lisk/issues/607)
- Position blockRewards var - Closes \#607 [\#626](https://github.com/LiskHQ/lisk/pull/626) ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Duplicate vote fix [\#625](https://github.com/LiskHQ/lisk/pull/625) ([SargeKhan](https://github.com/SargeKhan))
",50873641
166,False,True,2017-06-20T14:25:13Z,2017-06-20T15:35:54Z,"# Change Log

## [0.9.0d](https://github.com/LiskHQ/lisk/tree/0.9.0d) (2017-06-20)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.0c...0.9.0d)

**Implemented enhancements:**

- Disable console logging for production - Closes \#620 [\#621](https://github.com/LiskHQ/lisk/pull/621) ([5an1ty](https://github.com/5an1ty))",50873641
167,False,True,2017-06-16T16:11:47Z,2017-06-19T13:42:30Z,"# Change Log

## [0.9.0c](https://github.com/LiskHQ/lisk/tree/0.9.0c) (2017-06-16)
[Full Changelog](https://github.com/LiskHQ/lisk/compare/0.9.0b...0.9.0c)

**Implemented enhancements:**

- Back to process.exit\(code\) - Rollback \#554 [\#613](https://github.com/LiskHQ/lisk/pull/613) ([LucasIsasmendi](https://github.com/LucasIsasmendi))

**Fixed bugs:**

- Delegates table ends up with Duplicate Entries [\#610](https://github.com/LiskHQ/lisk/issues/610)
- Block verification - exception blockreward [\#607](https://github.com/LiskHQ/lisk/issues/607)
- Do not use cache if Redis authentication failed [\#606](https://github.com/LiskHQ/lisk/issues/606)
- Fix redis authentication error - Closes \#606 [\#612](https://github.com/LiskHQ/lisk/pull/612) ([SargeKhan](https://github.com/SargeKhan))
- Add migration to recreate delegates table content - Closes \#610 [\#611](https://github.com/LiskHQ/lisk/pull/611) ([MaciejBaj](https://github.com/MaciejBaj))
- Block reward exceptions - Closes \#607 [\#608](https://github.com/LiskHQ/lisk/pull/608) ([LucasIsasmendi](https://github.com/LucasIsasmendi))

**Closed issues:**

- Improve ""Invalid transaction timestamp"" error message [\#614](https://github.com/LiskHQ/lisk/issues/614)

**Merged pull requests:**

- Improve verbosity of timestamp failure - Closes \#614 [\#617](https://github.com/LiskHQ/lisk/pull/617) ([Isabello](https://github.com/Isabello))",50873641
168,False,True,2017-06-12T17:02:50Z,2017-06-12T17:04:39Z,"**Implemented enhancements:**

- Update redis to have a password [\#603](https://github.com/LiskHQ/lisk/pull/603) ([Isabello](https://github.com/Isabello))

**Fixed bugs:**

- Fix rounds module init, improved tests [\#604](https://github.com/LiskHQ/lisk/pull/604) ([4miners](https://github.com/4miners))

**Closed issues:**

- Replace Travis with Jenkins [\#602](https://github.com/LiskHQ/lisk/issues/602)

**Merged pull requests:**

- Implement Jenkins into TestSuite - Closes \#602 [\#605](https://github.com/LiskHQ/lisk/pull/605) ([Isabello](https://github.com/Isabello))",50873641
169,False,True,2017-06-08T14:27:03Z,2017-06-12T16:09:21Z,"**Implemented enhancements:**

- Replace function parameter scope with specific value content [\#555](https://github.com/LiskHQ/lisk/issues/555) ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Change process.exit\(\[code\]\) calls [\#554](https://github.com/LiskHQ/lisk/issues/554) ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Split scope \(closure reduction\) - Closes \#555 [\#584](https://github.com/LiskHQ/lisk/pull/584) ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Api calls caching via redis - Closes \#484 [\#577](https://github.com/LiskHQ/lisk/pull/577) ([SargeKhan](https://github.com/SargeKhan))
- Replace call exit\(\) with exitCode - Closes \#554 [\#572](https://github.com/LiskHQ/lisk/pull/572) ([LucasIsasmendi](https://github.com/LucasIsasmendi))

**Fixed bugs:**

- Inconsistent unconfirmed state in memory tables \#1 [\#593](https://github.com/LiskHQ/lisk/issues/593)
- Transactions broadcast not work on small network [\#592](https://github.com/LiskHQ/lisk/issues/592)
- Storing synchronous actions in one place [\#582](https://github.com/LiskHQ/lisk/issues/582)
- Consistency when dealing with timestamps [\#448](https://github.com/LiskHQ/lisk/issues/448)
- Inconsistent unconfirmed state in memory tables \#1 - Closes \#593 [\#596](https://github.com/LiskHQ/lisk/pull/596) ([4miners](https://github.com/4miners)) 
- Transactions broadcast not work on small network - Closes \#592 [\#595](https://github.com/LiskHQ/lisk/pull/595) ([4miners](https://github.com/4miners))
- Save all synchronous jobs in one container - Closes \#582 [\#583](https://github.com/LiskHQ/lisk/pull/583) ([MaciejBaj](https://github.com/MaciejBaj))
- Timestamps performance - Closes \#448 [\#571](https://github.com/LiskHQ/lisk/pull/571) ([LucasIsasmendi](https://github.com/LucasIsasmendi))

**Closed issues:**

- Postgresql fail on Ubuntu 17.04 [\#591](https://github.com/LiskHQ/lisk/issues/591)
- Gruntfile.js needs to be updated [\#589](https://github.com/LiskHQ/lisk/issues/589)
- Deprecated: new Buffer\(string\[, encoding\]\)  [\#559](https://github.com/LiskHQ/lisk/issues/559)
- Document source code using JSDoc [\#542](https://github.com/LiskHQ/lisk/issues/542)
- Refactor blocks module to submodules [\#534](https://github.com/LiskHQ/lisk/issues/534)
- Implement automatic caching of API calls [\#484](https://github.com/LiskHQ/lisk/issues/484)

**Merged pull requests:**

- Add declaration for blocks folder in Gruntfile - Closes \#589 [\#590](https://github.com/LiskHQ/lisk/pull/590) ([Isabello](https://github.com/Isabello))
- Replace new Buffer with .from or .alloc - Closes \#559 [\#573](https://github.com/LiskHQ/lisk/pull/573) ([LucasIsasmendi](https://github.com/LucasIsasmendi))
- Refactor blocks module to submodules - Closes \#534 [\#564](https://github.com/LiskHQ/lisk/pull/564) ([4miners](https://github.com/4miners))
- Initial documentation for blocks module - Closes \#542 [\#553](https://github.com/LiskHQ/lisk/pull/553) ([4miners](https://github.com/4miners))
- Initial JSDoc config and documentation - Closes \#542 [\#549](https://github.com/LiskHQ/lisk/pull/549) ([LucasIsasmendi](https://github.com/LucasIsasmendi))",50873641
170,False,False,2017-05-05T13:58:39Z,2017-05-05T14:37:58Z,"## Changelog

### Backend

- Merged https://github.com/LiskHQ/lisk/pull/570. Fixing summing and reversal of round on backwards tick. @4miners ",50873641
171,False,False,2017-05-02T01:05:06Z,2017-05-02T01:28:54Z,"## Changelog

### Backend

- Merged: https://github.com/LiskHQ/lisk/pull/569. **HOTFIX**: Added exception for round `27040`. @4miners ",50873641
172,False,False,2017-04-12T08:56:17Z,2017-04-12T12:47:28Z,"## Changelog

### Backend

- Merged #467. Extract http api from modules - Closes #455. @MaciejBaj 
- Merged #478. Update README to reference port 8000. @drouillard
- Merged #483. Add missing API enabled parameter to Router. @MaciejBaj
- Merged #486. Set response headers properly - Closes #48. @4miners
- Merged #487. Trigger sync faster when node is missing blocks. @4miners 
- Merged #492. Update README.md and author.
- Merged #477. Remove ignored default value in ColumnConfig. @vitaly-t
- Merged #489. Improving SQL performance - Part 1 - Addresses #482. @4miners 
- Merged #493. Added 'rank' property to /api/delegates endpoint - Closes #366. @4miners 
- Merged #494. Add application signature header - Closes #488. @MaciejBaj
- Merged #497. Unify access errors and disable static files when public API disabled. @4miners 
- Merged #499. Refactored 'rounds_rewards' table and functions - Part 2 - Addresses #482. @4miners 
- Merged #502. Add process.cwd() to resolve relative path issue - Closes #501. @Isabello 
- Merged #507. Server listens after modules initialization - Closes #505. @MaciejBaj 
- Merged #504. Grunt updates for compiled app.js - Closes #500. @Isabello
- Merged #510. Change delegates forging enable / disable methods from GET to POST. @MaciejBaj 
- Merged #508. Renamed 'rounds_rewards' to 'rounds_fees'. @4miners 
- Merged #512. Unify IP address acquisition - Closes #511. @MaciejBaj
- Merged #514. Updating README.md - Closes #490.
- Merged #515. Updating README.md and .travis.yml - Closes #513. 
- Merged #517. Recreate `trs_list` view, drop needless ordering - Part 3 - Addresses #482. @4miners 
- Merged #516. Improving block reward and dapps test stability - Addresses #400. @MaciejBaj 
- Merged #522. Changing license from MIT to GPLv3 - Closes #520.
- Merged #523. Fix emptying `config.json` - Closes #521. @MaciejBaj 
- Merged #528. Update seed peers to the new nodes - Closes #527. @Isabello
- Merged #531. Read API access rules from proper config - Closes #530. @MaciejBaj 
- Merged #532. Change not allowed requests error messages - Closes #529 @MaciejBaj 
- Merged #547. Correct API endpoints mapping of dapps - Closes #546. @MaciejBaj 
- Closed #482. Improved SQL performance & flexibility. @4miners 
- Merged #552. Fix `maxAmount` support in transactions API endpoint - Closes #550. @4miners 

### Frontend

- Merged LiskHQ/lisk-ui#100. Not display forging-releated stuff when acc is not a delegate. @4miners 
- Merged LiskHQ/lisk-ui#102. Hide forging indicator when access is denied - Fixes  LiskHQ/lisk-ui#93. @alihaghighatkhah
- Merged LiskHQ/lisk-ui#103. Remove account-related information after users logs out - Fixes  LiskHQ/lisk-ui#85 and  LiskHQ/lisk-ui#87. @alihaghighatkhah
- Merged LiskHQ/lisk-ui#107. Fetching the correct properties for USD, BTC, LSK - Fixes LiskHQ/lisk-ui#104. @Tosch110
- Merged LiskHQ/lisk-ui#109. Improving responsiveness - Fixes LiskHQ/lisk-ui#105. @alihaghighatkhah
- Merged LiskHQ/lisk-ui#110. Use the existing error message template to notify API errors - Fixes LiskHQ/lisk-ui#73. @alihaghighatkhah
- Merged LiskHQ/lisk-ui#112. Add isPending status for (un)voted delegates - Fixes LiskHQ/lisk-ui#106. @alihaghighatkhah
- Merged LiskHQ/lisk-ui#113. Fixing balance updates by limiting the calls the GUI does to 1 - Fixes LiskHQ/lisk-ui#53. @Tosch110
- Merged LiskHQ/lisk-ui#111. Fix broken ""blockchain loading"" page - Fixes LiskHQ/lisk-ui#101. @slaweet
- Merged LiskHQ/lisk-ui#114. Update authors.
- Merged LiskHQ/lisk-ui#11. Fix sync doughnut chart in dashboard - Fixes #71. @alihaghighatkhah
- Merged LiskHQ/lisk-ui#116. Improving responsiveness - Fixes #105.
- Merged LiskHQ/lisk-ui#118. Changing license from MIT to GPLv3 - Closes #117.

### Build

- Merged LiskHQ/lisk-build#90. Add new fields to snapshot.json - Closes LiskHQ/lisk-build#89. @Isabello 
- Merged LiskHQ/lisk-build#92. Replace Forever with PM2 - Closes LiskHQ/lisk-build#91. @Isabello 
- Merged LiskHQ/lisk-build#94. Updating node version and tool chains to 6.10.1 - Closes LiskHQ/lisk-build#93.
- Merged LiskHQ/lisk-build#95. Updating README.md.
- Merged LiskHQ/lisk-build#97. Correct regressions introduced by PM2 - Closes LiskHQ/lisk-build#96. @Isabello 
- Merged LiskHQ/lisk-build#99. Changing license from MIT to GPLv3 - Closes LiskHQ/lisk-build#98. @Isabello 
- Merged LiskHQ/lisk-build#104. Fixed PM2 home path declaration. @Nerigal
- Merged LiskHQ/lisk-build#106. Add PM2 cleanup functions - Closes LiskHQ/lisk-build#105. @Isabello
- Merged LiskHQ/lisk-build#109. Disable watching for node processes - Closes LiskHQ/lisk-build#107. @Isabello 
- Merged LiskHQ/lisk-build#110. Insert GPL3 header into `installLisk.sh` - Closes LiskHQ/lisk-build#108. @Isabello 
- Merged LiskHQ/lisk-build#112. Update links for prereq check failures - Closes LiskHQ/lisk-build#111. @Isabello ",50873641
173,False,False,2017-03-15T19:46:04Z,2017-03-16T14:57:02Z,"## Changelog

### Backend

- Merged #425. Implemented test coverage report. Closes #408. @MaciejBaj 
- Merged #428. Updated project dependenices to latest versions. Closes #426. @MaciejBaj 
- Merged #430. Setup eslint as linter and formatter. Closes #430. @MaciejBaj 
- Merged #438. Improved `/api/transactions` API endpoint. @4miners 
  - Changed `fromTimestamp` and `toTimestamp` behaviour, now referencing Lisk epoch instead of unix time. Closes #432.
  - Added `fromUnixTime` and `toUnixTime` params, referencing unix time. Closes #431.
- Merged #439. Using ceil for round calculations. Closes #427. @4miners
- Merged #444. Updated README.md to include new Node.js version. @Isabello 
- Merged #445. Changed travis node package installer to `npm`. Closes #44. @MaciejBaj
- Merged #440. Added genesis block loading indicator. Closes #290. @MaciejBaj 
- Merged #442. Added further protections against transactions ever being sent from genesis account. Closes #290. @MaciejBaj 
- Merged #450. Using `BigNumber.js` for round calculations. Closes #447. @MaciejBaj 
- Merged #409. Moved peers management to memory instead of database. Closes #409. @4miners 
- Merged #453. Improved peer logic, fixed SQL errors during peers `dbSave`. @4miners 
- Merged #454. Reduced limit of `GET /peer/blocks` from 1440 to 34.
- Merged #461. Improved performance when counting all blocks. Closes #342. @4miners
- Merged #460. Fixed stability of dapps test, fixed `waitUntilBlockchainReady` function. Closes #400. @MaciejBaj
- Merged #463. Improved sync negoiation speed. Closes #462. @4miners
- Merged #464. Fixed performance of `aggregateBlocksReward` SQL query. Closes #427. @4miners
- Merged #466. Extended test timeout. Closes #400. @MaciejBaj 
- Merged #466. Removing unused `grunt-jsdox`.
- Merged #473. Addressing #409. Updating peer object properly. @4miners
- Merged #475. Added new mechanism to disable APIs and toggle whitelists. @Isabello 
- Merged #480. Moved `maxTxsPerQueue` constant to `config.json`. Allowing per node configuration. @MaciejBaj 

### Build

- Merged LiskHQ/lisk-build#78. Updated Node.js version and tool chains to `6.9.5`. Closes LiskHQ/lisk-build#74. @Isabello 
- Merged LiskHQ/lisk-build#79. Updated `config.sh` for postgres 9.6. Closes LiskHQ/lisk-build#75. @Isabello
- Merged LiskHQ/lisk-build#80. Provided bypass for sync from 0. Closes LiskHQ/lisk-build#77. @Isabello
- Merged LiskHQ/lisk-build#82. Corrected `rpath` issue with `libsodium` library. Closes LiskHQ/lisk-build#81. @Isabello
- Merged LiskHQ/lisk-build#84. Corrected seed peers update. Closes LiskHQ/lisk-build#83. @Isabello
- Merged LiskHQ/lisk-build#86. Corrected user check in `lisk.sh` and `installLisk.sh`. Closes LiskHQ/lisk-build#85. @Isabello
- Merged LiskHQ/lisk-build#88. Added peers blacklist migration. Closes LiskHQ/lisk-build#87.",50873641
174,False,False,2017-02-21T15:01:34Z,2017-02-22T08:51:31Z,"## Changelog

### Backend
- Merged https://github.com/LiskHQ/lisk/pull/343. Added delegate forging stats. Closes #318. @dakk
- Merged https://github.com/LiskHQ/lisk/pull/344. Fixed incorrect `currentSlot` calculation in `getNextForgers`. @4miners
- Merged https://github.com/LiskHQ/lisk/pull/354. Added exception for invalid multi-sig creation tx. Closes #351. @4miners
- Merged https://github.com/LiskHQ/lisk/pull/354. Added possibility to get account via publicKey. Closes #355. @4miners
- Merged https://github.com/LiskHQ/lisk/issues/359. Improved consistency on fork 1 and 5 recovery. Closes #358. @4miners
- Merged https://github.com/LiskHQ/lisk/pull/363. Redesigned /api/delegates/forging/status endpoint. Closes #338, #360. @4miners
- Merged https://github.com/LiskHQ/lisk/pull/365. Added peers count to API. Closes #337. @dakk
- Merged https://github.com/LiskHQ/lisk/pull/369. Passing debug status to dapp. Closes #368. @TheGoldenEye
- Merged https://github.com/LiskHQ/lisk/pull/370. Added transactions count to API. Closes #341. @MaciejBaj 
- Merged https://github.com/LiskHQ/lisk/pull/371. Added latest commit hash to API. Closes #340. @MaciejBaj
- Merged https://github.com/LiskHQ/lisk/pull/391. Fixed `BackwardTick` promise so it doesn't throw undefined error. Closes #390. @MaciejBaj
- Merged https://github.com/LiskHQ/lisk/pull/378. Ordering `null` values last for queries with `ORDER_BY` clause. Closes #356. @MaciejBaj
- Merged https://github.com/LiskHQ/lisk/pull/384. Fixed fee calculations in `getForgedByAccount` endpoint. Closes #396. @4miners
- Merged https://github.com/LiskHQ/lisk/pull/388. Ignoring `versionChar` in version check if no range specifier `(^ ~ *)` is used. Closes #387. @TheGoldenEye
- Merged https://github.com/LiskHQ/lisk/pull/386. Preventing node from syncing with itself. Closes #336. @MaciejBaj
- Merged https://github.com/LiskHQ/lisk/pull/395. Updated README to be verbose about dependencies. @Isabello
- Merged https://github.com/LiskHQ/lisk/pull/397. Added unique address constraint for peers table. Closes #361. @MaciejBaj
- Merged https://github.com/LiskHQ/lisk/pull/393. Enclosing column identifiers (fields) in double quotes. Closes #392. @TheGoldenEye
- Merged https://github.com/LiskHQ/lisk/pull/399. Improved ban handling, added additional logs. Closes #334. @4miners
- Merged https://github.com/LiskHQ/lisk/pull/401. Setup unit tests environment. @MaciejBaj
- Merged https://github.com/LiskHQ/lisk/pull/404. Redesigned `/api/transactions` endpoint. Closes: #220, #265, #379, #380. @4miners
- Merged https://github.com/LiskHQ/lisk/pull/405. Checking if account is multisignature enabled. Closes #383. @MaciejBaj
- Merged https://github.com/LiskHQ/lisk/pull/410. Parallelizing travis jobs. Closes #407. @MaciejBaj
- Merged https://github.com/LiskHQ/lisk/pull/412. Fixed dirname in `applyRuntimeQueryFile`. @MaciejBaj
- Merged https://github.com/LiskHQ/lisk/pull/414. Fixed deleted `Gruntfile` dependencies. @MaciejBaj
- Merged https://github.com/LiskHQ/lisk/pull/421. Closes #418, #419, #420. @4miners
- Merged https://github.com/LiskHQ/lisk/pull/424. Starting sync when peers ready, improved logging. Closes #422. @4miners
- Merged https://github.com/LiskHQ/lisk/pull/436. Improved peers data acquisition, logging, tuned peer sweeper. Closes #435. @4miners

### Frontend
- Merged https://github.com/LiskHQ/lisk-ui/pull/83. Allowing cookies to be set with passphrase and first state during development. @slaweet
- Merged https://github.com/LiskHQ/lisk-ui/pull/88. Adding delegate search. Closes #8. @slaweet
- Merged https://github.com/LiskHQ/lisk-ui/pull/89. Optimising images. @densmirnov
- Merged https://github.com/LiskHQ/lisk-ui/pull/90. Adding forging statistics. @dakk
- Merged https://github.com/LiskHQ/lisk-ui/pull/94. Updated copyright. @Isabello
- Merged https://github.com/LiskHQ/lisk-ui/pull/95. Limiting forged lisk to 2 decimal places. Closes #92. @mrv777
-  Disabling applications directory LiskHQ/lisk-ui#78. 

### Build
- Merged https://github.com/LiskHQ/lisk-build/pull/67. Updated to Node.js 6.9.4 LTS. Closes LiskHQ/lisk-build#65. @MaciejBaj
- Merged https://github.com/LiskHQ/lisk-build/pull/68. Added shellcheck static code analysis of `bash` scripts. @isabello
- Merged https://github.com/LiskHQ/lisk-build/pull/70. Added Travis badge to README.md. Closes LiskHQ/lisk-build#69. @Isabello
- Merged https://github.com/LiskHQ/lisk-build/pull/71. Corrected fresh install issues in `installLisk.sh`. @Isabello
- Merged https://github.com/LiskHQ/lisk-build/pull/73 and https://github.com/LiskHQ/lisk-build/pull/76. Improved robustness of `lisk_snapshot.sh`. @gr33ndrag0n",50873641
175,False,False,2017-01-08T20:25:57Z,2017-01-08T21:53:44Z,"## Changelog

### Backend
- Closed #381. Verifying each vote in trs.asset.votes. Checking vote type, format and length.

### Build
- Correcting help text for `installLisk.sh`.
",50873641
176,False,False,2016-12-08T12:56:09Z,2016-12-08T14:28:43Z,"## Changelog

### Backend
- Closed #327. Fixing / improving fork cause 1/5 recovery.
- Closed #328. Fixing invalid total supply calculation.
- Replaced `js-nacl` with `libsodium` library. @4miners
- Added broadhash & consensus % info to `/api/loaders/status/sync`. @4miners
- Added `/api/delegates/getNextForgers` endpoint. @4miners
- Added votes to `/api/transactions/get` endpoint. @4miners

### Build
- Closed LiskHQ/lisk #331. Setting max memory for high mem systems. @Isabello
- Closed [#56](https://github.com/LiskHQ/lisk-build/issues/56). Changing installLisk.sh to use pwd for location. @Isabello
- Closed [#58](https://github.com/LiskHQ/lisk-build/issues/58). Adding support for compiling libsodium / node-sodium.
- Updated node/lisk-node to 0.12.17.
",50873641
177,False,False,2016-11-30T06:00:51Z,2016-11-30T07:11:09Z,"## Changelog

### Backend
- Closed #104. Implementing peer sweeper. Collecting peer changes and sweeping in batches.
- Closed #294. Loading unconfirmed transactions from ""good"" peer.
- Closed #284. Emitting delegates/fork event after forking.
- Closed #255. Matching genesis block with database.
- Closed #141. Attempting to load delegates on each cycle.
- Closed #297. Improved peers/chain selection reliability thanks to new `broadhash` implementation.
- Closed #298. Array items are not unique in Loader.prototype.onPeersReady.
- Closed #259. Mitigating against fork cause 2.
  - Restoring sane API behaviour for `POST /peer/transactions`.
    - Returning error on already processed transaction.
    - Returning error on already confirmed transaction.
- Fixed #253. Adding missing check on transaction.
- Closed #306. Implemented new transaction pool and broadcast queuing
  - Adding new API endpoints:
    - `GET /api/transactions/multisignatures/get`
    - `GET /api/transactions/multisignatures`
    - `GET /api/transactions/queued/get`
    - `GET /api/transactions/queued`
- Rewrote and refactored multisignature module.
- Increased default database connection pool size to `95`.
- Merged #314. Prevent ""TypeError: Cannot read property 'network' of undefined @TheGoldenEye.
- Closed #51. Fixing invalid getGenesis parameter.
- Closed #244. Adding minimal client version parameter.
- Closed #91. Validating config.json according to schema. 
- Do not remove peer on `ETIMEOUT`, only ban for 10 minutes.
- Returning `500` status code upon incorrect network / version.
- Correcting ban on peers returning invalid common block request to 10 minutes.
- Fixed incorrect math operator in `__private.checkDelegates`.
- Disabling forced forging for known nethashes.
- Closed #316. Logging warning when delegate slot skipped.
- Increased gzip compression level on express middleware.
- Improved broadcast efficiency. Squashing queued broadcasts from many to one per route. Accepting collection or object on `POST /peer/transactions` and `POST /peer/signatures`.
- Implemented bundled transaction processing. Dramatically speeding up response times for POST /peer/transactions.
- Closed #307. Implementing auto recovery from forks.
  - Deleting last block on failed chain comparision and poor broadhash efficiency.
  - Deleting losing block in case of received fork 1 and 5.
- Merged #320. Allowing ""+"" char in os version check @4miners.
- Closed #307. Fixing broken backwards round tick.
  - Refactoring code. Adding __private.sumRound function.
  - Fixing property typo in Rounds.prototype.backwardTick.
  - Fixing property typo in Rounds.prototype.tick.
  - Fixing broken round changes on backwards tick.
  - Fixing broken missed blocks on backwards tick.
  - Fixing broken Rounds.prototype.directionSwap.
  - Summing round from blocks on forwards direction.
  - Do not flush round on direction swap.
  - Adding missing direction swaps.
    - Before/after Blocks.prototype.deleteLastBlock.
    - Before/after Blocks.prototype.deleteBlocksBefore.
  - Marking undone blocks in mem_accounts.
    - Excluding marked accounts from orphaned mem_accounts check.
- Closed #319. Fixing broadhash update reliability.
- Closed #323. Fixing bad `setInterval` strategy.
- Shortening various peer ban times from 60 to 10 minutes.
- Closes #322. Fixing multisignature processing.
  - Fixing incorrect message bus arguments.
  - Resetting u_multimin, u_multilifetime on startup.
  - Removing nested balancesSequence (causing timeouts).
  - Updating ready state after processing signature.
  - Fixing max keysgroup size check. Adding ability to add exceptions for existing transactions. @TheGoldenEye
  - Fixing erroneous check on account.multisignatures.
  - Determining multisignatures from sender or transaction asset.
  - Pushing senderPublicKey onto multisignatures.
  - Improving check on requester public key.
  - Improving error messages.

### Frontend
- Using jit-grunt to slightly speed up grunt. @Alevale
- Updating lisk-js dependency.

### Build
- Added PostgreSQL 9.6.x support to `installLisk.sh`.
- Added logrotation support for linux in `installLisk.sh`.
- Implemented `updateConfig.js` for automated config.json updates.
- Improved `installLisk.sh` installation efficiency.
- Add rebuild/url support to `installLisk.sh` for upgrade and install functions.
",50873641
178,False,False,2016-11-02T20:00:49Z,2016-11-02T21:47:46Z,"## Changelog

### Backend
- Do not apply or undo transaction when syncing (before processing).
- Fixed #293. Expected type string but found type null. @Isabello
- Closed #285. Moved TOP=true param. to config.json. @Isabello
- Fixed state filter on `GET /api/peers` endpoint.
- Using extend consistently for all object extension.
- Handling NaN port in Peers.prototype.inspect.
- Revised and improved schema validations.

### Frontend
- Merged #79. Fixing cramped high page numbers on blockchain page. @slaweet

### Build
- Merged #49. Updating md5 command for macOS. @Doweig
- Improving block height check in `lisk.sh` to show “Unavailable” when query is empty. @Isabello
",50873641
179,False,False,2016-10-10T01:26:34Z,2016-10-10T10:33:02Z,"## Changelog

### Backend

#### Accounts
- Closed #197. Improving error messages when account does not have enough funds. Yielding sender address and account balance.
- Closed #266. Changed behavior of `POST /api/accounts/open` and `POST /api/accounts/generatePublicKey`. New accounts are no longer written to `mem_accounts`. Added one-time migration to delete dormant accounts which have never received or sent funds.
- Closed #266. Verifying public key type, length and format in `Account.prototype.set` and `Account.prototype.merge`.
- Closed #266. Added `virgin` column to `mem_accounts`. Indicating whether an unconfirmed transaction sent from an account has been applied.
- Closed #266. Added `protect_mem_account` database trigger. Making `address`, `u_username`, `username`, `virgin`, `publicKey`, and secondPublicKey columns immutable once written.
- Closed #266. Added `senderPublicKey` exceptions to `Transaction.prototype.verify`.
- Added missing address validation to `GET /accounts?address=`.
- Fixed error on `GET /api/delegates?orderBy=unknown:asc`.
- Fixed error on `GET /api/delegates?limit=0`.

#### Blocks
- Closed #163. Adding default orderBy to `/api/blocks` (height:desc).
- Merged #210. Block processing rewrite @fix.
  - Verifying block and transactions before database writes.
  - Eliminating duplicate logic, using `Blocks.prototype.processBlock` during rebuild.
- Preventing data corruption of memory tables after reload or shutdown #213.
  - Tracking cleanup status through `__private.cleanup`.
  - Skipping blocks on cleanup for `Blocks.prototype.loadBlocksOffset`.
  - Skipping blocks on cleanup for `Blocks.prototype.loadBlocksFromPeer`.
  - Exiting `Blocks.prototype.processBlock` early on cleanup.
  - Cleaning up immediately on `Loader.prototype.cleanup`.
- Closed #222. Fixing block reward calculation within first few blocks after milestone.
- Closed #258. Detecting numericality of snapshot round. Allowing `node app.js —snapshot=foobar` to default to the highest round.
- Closed #260. Removing infinite recursion in `Loader.prototype.getNetwork`.
- Closed #276. Finishing snapshot within `__private.applyBlock`.
- Closed #289. Prevent sync slowdown after receiving unconfirmed transactions.
- Conditionally loading blocks from network; when there has been no block “receipts” over network transport, or when last receipt was over 120 seconds ago.
- Added `GET /api/loader/status/ping` endpoint @34ro.
- Added `GET /api/blocks/getEpoch` endpoint.
- Added `nethash` and `epoch` properties to `GET /api/blocks/getStatus`.
- Fixed orphan account check. Excluding `mem_accounts` with NULL `blockId`.
- Fixed invalid type comparison on unapplied rounds.
- Fixed reported block height when rebuilding blockchain.
- Improved error logging with JSON dump of affected block.

#### Transactions
- Closed #265. Fixing ""Account not found"" error when sending transactions to virgin account using `POST /api/transactions`.
- Fixed #279. Removing erroneous unconfirmed transactions.
- Fixed #279. Removing redundant double spend collection.
- Fixed undefined is not a function error. After error thrown while verifying transaction bytes.
- Added verification of transaction assets for all transaction types.
- Improved error logging with JSON dump of affected transaction.
- Improved logging of apply / undo of transactions at debug level.
- Performing sender balance checks using bignum arithmetic.

#### Applications
- Closed #269. Fixed crash on 404 error for `POST /api/dapps/install`.
- Downgraded `npm` to latest LTS release `2.15.10`.

#### Peers
- Improving peers db efficiency #104. Sequencing peers updates.
- Improving peers db efficiency #104. Replacing insert / update with single upsert.
- Improving peers db efficiency #104. Chaining database queries when adding dapp peer.
- Closed #147. Replacing request with popsicle. Fixing memory leak on large request bodies, e.g. loading blocks from peer.
- Merged #227. Improved peer discovery using histogram cut selection of ""good"" peers @fix.
- Closed #231. Implementing API rate limiter. Individually configurable for both `/api` and `/peer`. Disabled by default.
- Added `EHEADERS`, `ERESPONSE`, `ENETHASH` peer error codes, extending: https://github.com/blakeembrey/popsicle#error-handling.
- Fixed timers in `Loader.prototype.onPeerReady`.
  - Only trigger `nextLoadBlock` if loaded and not already syncing.
  - Fixed halt to `nextLoadUnconfirmedTransactions` recursion when syncing.
  - Fixed halt to `nextLoadSignatures` recursion when syncing.
- Checking `nethash` for all transport `/peer` requests.
- Returning JSON response for `POST /peer/blocks`.
- Returning `success` or `error` for `GET /api/peers/get`.
- Added `success` property to `GET /peer/transactions`.
- Ignoring already processed or confirmed transactions for `POST /peer/transactions`.
- Added `transactionId` property to `POST /peer/transactions`.
- Added `success` property to `GET /peer/height`.
- Removing peers which return bad response code.
- Removing peers with invalid request headers.
- Removing peers with invalid nethash.
- Improved logging of peer changes at debug level.
- Increased default peer timeout to 5000 ms.
- Fixed unwanted rejection of seed peers due to lack of `os`, `version` metadata.
- Removed unnecessary peer loopback detection.
- Validating peer headers using zschema only.

#### Refactoring
- Closed #147. Dramatically improved CPU and memory efficiency.
  - Moved schema validations into separate modules, to eliminate unnecessary continous object creation.
  - Added unique ids to schema validations, to better utilize z-schema schema caching.
  - Nullifying any large objects identified by memory profiling at the earliest opportunity.
- Decoupled transaction types from modules into separately addressed modules.
- Defining functions on constructor prototype where possible.
- Using `async` for control flow, to remove deep nesting of code.
- Fully linted code base using `jshint` to a strict standard.
- Created database indexes on memory tables.

#### Tests
- Complete rewrite and abstraction of API tests, for cleaner tests.
- Massively expanded API test coverage, resulting in many fixes.
- Added initial unit test coverage, e.g. for block rewards.

#### Configuration
- Removed unimplemented `serveHttpAPI/Wallet` options from `config.json`.
- Added `maxUpdatePeers` option to `config.json`.
- Added `trustProxy` setting to `config.json`.

#### Dependencies
- Updated all dependencies to latest compatible versions.
- Replaced `underscore`, `util-extend` with `lodash`.

### Frontend
- Added Polish language support.
- Fixating and updating dependency versions.
- Fixing calls to `null` `u_multisignatures/multisignatures`. 
- Fixing call to `undefined` `resp.data.account`.

### Build
- Closed #44. Added timestamp to postgresql logs.
- Added empty blockchain.db.gz to allow for starting the blockchain from 0.
- Updating node/lisk-node to 0.12.16.

`lisk.sh`
- Implemented url flag for `lisk.sh` to allow remote snapshots to be used with rebuild.
- Updated rebuild logic to allow for local backups to be reused and to specify file name.
- Improved lisk startup to display current block height after start or status is issued.
- Implemented new logic for interactive snapshotting.
- Added progress bar when downloading snapshots.

`lisk_snapshot.sh`
- Implemented `lisk_snapshot.sh` for automated database backups.
- Added `snapshot.json` for configuring `lisk_snapshot.sh` backups.

`installLisk.sh`
- Removed duplicated block height check already present in `lisk.sh`.
- Changed coldstart to use empty blockchain.db.gz.

### Documentation
- Updated upgrade instructions to use automated upgrade.
- Updated testnet installation instructions.
",50873641
180,False,False,2016-09-17T10:53:22Z,2016-09-17T16:16:28Z,"**IMPORTANT:** This version is a **mandatory update**, and is being released due to a critical transaction signature malleability issue found in the ed25519 implementation previously used by Lisk. Please note, in order to protect the network, all active delegates were patched prior to this release. All node operators are encouraged to update immediately.

## Changelog
- Backporting transaction signature malleability fix. Replacing ed25519 implementation with js-nacl version 1.2.1, a high level API to libsodium.

For further details, please read the accompanying [release announcement](https://blog.lisk.io/lisk-v0-3-4-release-announcement-2f3d6ce07468) on our blog.
",50873641
181,False,False,2016-09-02T02:11:37Z,2016-09-03T18:20:33Z,"**IMPORTANT:** This version is a **mandatory update**, and is being released due to a critical bug encountered at block [808831](https://explorer.lisk.io/block/7172869804714308506). In order for all nodes to remain operative past this block, all node operators are required to update immediately.

## Changelog

Backported inTransfer / outTransfer module fixes. Resolves critical issue when saving outTransfer (type 7) transactions, used to initiate LSK transfers between a sidechain and the mainchain. The supporting test-suite has been improved to ensure this basic functionality is maintained between releases.

For further details, please read the accompanying [release announcement](https://blog.lisk.io/lisk-v0-3-3-release-announcement-b2c9af724a3d) on our blog.
",50873641
182,False,False,2016-08-10T12:39:02Z,2016-08-10T17:12:23Z,"## Changelog

### Backend
- Closed #110. Fixed fatal error when `tmp` directory does not exist. @m-schmoock.
- Closed #119. Added snapshot functionality.
- Closed #140. Adjusting levels for various log messages @tharude.
- Closed #160. Preventing / gracefully handling 101 votes exceeded errors @karek314.
- Closed #161. Improving consistency of `GET /api/delegates?orderBy=` results @ByronP.
- Closed #166. Standardising `GET /api/transactions?orderBy=` field prefixing @ByronP.
- Closed #171. Snipping secrets from logs @cezarsn.
- Closed #191. Configuring CORS with pre-flight.
- Closed #192. Normalising address casing, upon setting and merging of accounts.
- Closed #198. Added `GET /api/delegates/search` endpoint.
- Closed #201. Improving/log order and format @m-schmoock.
- Closed #203. Allowing local forging via config switch @m-schmoock.
- Closed #208. Fixed fatal error when trying to install a broken dapp link @m-schmoock.
- Closed #233. Improving efficiency of `GET /api/accounts/top` endpoint.
- Closed #237. Fixed `PUT /api/multisignatures` endpoint, including test coverage @mongrim.
- Closed #238. Fixed transaction broadcast reliability. Added unconfirmed transaction expiry @Crypto2.
- Merge #187. Fixed SQL errors in `DappsSql` module @TheGoldenEye.
- Merge #189. Added whiteList / blackList extension allowing cidr subnets @TheGoldenEye.
- Merge #226. Using local mocha dependency for tests @mfressdorf.
- Merge #199. Do not leave loop early, if ip was not found yet  @TheGoldenEye.
- Fixed `DApp#getWithdrawalLastTransaction` error.
- Fixed invalid results yielded by `GET /api/delegates/count` endpoint.
- Refactored `orderBy` parameter parsing for all endpoints.
- Improved efficiency. Performing upsert when merging accounts.
- Fixed intermittent unnecessary rebuild of memory tables.
- Fixed inconsistent multisignature maximum lifetime (72 hours).
- Implemented chronological database migration system.

### Frontend
- Closed #47. Replacing zeroclipboard with clipboard.js.
- Closed #50. Fixed `Invalid Lisk amount` error when sending fractional amount.
- Closed #57. Updating bitcore-mnemonic to version 1.0.1.
- Closed #59. Checking for zero amount after building parts.
- Closed #67. Removing prefixes from `orderBy` parameters.
- Fixed broken sync status indicator.
- Updated translations.

### Build
- Updating node/lisk-node to 0.12.15.

`lisk.sh`
- Closed #31. Added `-s` flag to support new snapshot feature.
- Closed #31. Added `-c` flag to specify `config.json` at runtime.
- Closed #21. Adding prereq checks, correct md5 checks for bsd/darwin.
- Implemented standard location for PID and log files.
- Adjusted log naming based on DB instance Lisk is using.
- Determining whether Lisk is running based on PID and config.json input.
- Implemented new cases for independent management of Nodejs and PostgreSQL.

`installLisk.sh`
- Added flag options for batch and silent install @34ro.

### Documentation
- Update binary installation to reflect new options available in `installLisk.sh`.
- Added table of contents to API reference.
",50873641
183,False,False,2016-05-29T11:17:00Z,2016-05-29T14:05:45Z,"## Changelog

### Frontend
- Fixed Lisk address validations.

### Backend
- Fixed Lisk address validations.
- Fixing /apt/blocks/get?id= endpoint.
- Improved peers connectivity / preventing network partitioning.
- Improved logging when rebuilding chain.
- Set default loadPerIteration to 1000.
- Temporary extension of reward offset.
- Reverted forging timeout feature which was causing network to pause.
",50873641
184,False,False,2016-05-24T18:07:12Z,2016-05-24T20:01:01Z,"## Changelog

### First main-net release

## Frontend
- Complete change of terminology from dapps to blockchain applications.
- Implemented feeService. Fetching transactions fees for each transaction type.
- Adding security warning before opening apps.
- Closed #9. Disabling buttons on first click. Adding success/error toasts.
- Closed #14. Explaining master passphrase.
- Closed #17. Fixing Safari font-weight / aliasing.
- Fixed #31. Updating bitcore-mnemonic @mrv777.
- Fixed #38. Including total count of delegates.

## Backend
- Updated transaction fees. 25 LSK for Delegate and Dapp registrations.
- Change of blockchain application categories
- Moved large queries into postgresql views
- Extracted SQL logic into separate modules
- Closed #134 Adding GET /api/blocks/getFees endpoint.
- Closed #137 Adding GET /api/blocks/getNethash endpoint.
- Standardised and fixed up test-suite.

## Build
- `installLisk.sh` - added mainnet vs testnet installation.
- `installLisk.sh` - laying framework for upgrade support.
- `tune.sh` - corrected bsd memory allocation.

## Documentation
- `lisk-docs` - Added prereq document.
- `lisk-docs` - Added upgrade document.
- `lisk-docs` - Added instructions for mainnet installation.",50873641
185,False,True,2016-05-18T18:10:42Z,2016-05-18T20:41:43Z,"## Changelog

### Build
- Fixed #76. Updating node/lisk-node to 0.12.14.
- Improvements to: `installLisk.sh`-`lisk.sh`: @Isabello 
  - Reducing ram usage on machines with less than 1024Mb RAM.
  - Made further reliability improvements to process management.
  - Fixing postgresql locale / character encoding issues.

### Backend
- Completed work towards #82, fork cause 3: @karmacoma
  - Removing use of setImmediate in round ticks.
  - Scoping each invocation of RoundPromiser.
  - Iterating over delegates asynchronously.
  - Getting outsiders only at end of round.
  - Fixing finishRound logic.
- Fixed #131. Added nethash p2p verification. @fix
- Fixed #22. Cannot read property 'senderPublicKey' of undefined. @fix 
- Fixed forced blocks verification on startup, i.e: `config.json`-`loading`-`verifyOnLoading`. 
- Closed #126. Using recommended pg-promise approach. @vitaly-t 
",50873641
186,False,True,2016-05-14T17:28:04Z,2016-05-14T18:03:39Z,"## Changelog

### Build
- Added `lisk.sh reload` command. @Isabello
- Fixed #6. `lisk.sh restart` now cycles both Node.js and Postgresql. @Isabello
- Fixed #10. `lisk.sh start/stop/restart` now work more reliably. @Isabello
- New simpler binary installation, thanks to `liskInstall.sh`. @Isabello
- Added `tune.sh` for optimizing the default postgresql.conf. @Isabello
- Preliminary support for checksummed archives. @Isabello

### Backend
- Completed work towards #82, fork cause 3: @karmacoma
  - Heavy refactoring of `Round#tick`, `Round#backwardTick`.
  - Memory table updates are now wrapped within db transactions.
  - Added checks for inconsistent mem_rounds on startup.
  - Dropping mem_rounds table on reload if not in a valid state.
  - Skipping delegate slot when round is ticking.
  - Don't receive block when round is ticking.
- Fixed pending transactions API endpoint. @fix
- Fixed #8. Delegate usernames must now be lowercase. @fix
- Fixed #40. API payloads are now limited to 2Mb per request. @fix
- Fixed ip address detection when using proxy. @Isabello
- Fixed #122. Corrected schema errors in dapp transfers. @TheGoldenEye 
- Fixed #101, #107 productivity calculations. @mrv777 
- Fixed #90. Translating ips from long. @cezarsn

### Frontend
- Fixed non-functioning delegate registration. @2mdoty
- Fixed #34. Dapp registration when 2nd passphrase enabled. 
- Fixed #43. Language switcher now works for all languages. @senikk
",50873641
187,False,True,2016-05-03T23:19:00Z,2016-05-04T12:59:07Z,"## Changelog

### Build
- PostgreSQL is now included with the ""Binary"" install, removing the need to install it separately. A simple `bash lisk.sh coldstart` will initialize the database on first start.
- Running `lisk.sh` as root is now prevented by default.

Platforms available with this release: Linux-x86_64, Linux-i686, Linux-armv6l, Linux-armv7l, FreeBSD-amd64 and Darwin-x86_64.

The official docker image has also been updated: https://github.com/LiskHQ/lisk-docker 

### Backend
- Closed #69. Loading schema using external SQL file @vitaly-t.
- Closed #84. Allowing the setup of logging path in config.json @TheGoldenEye.
- Fixed #77. Peers API endpoint now works when filtered by state @slasheks.
- Fixed all known casting issues caused by db migration.
- Fixed 'Recipient not found' error on virgin accounts.
- Improved error logging/comments on fork causes.
- Added proper delegate username validations.
- Fixed test coverage of delegates API.

### Frontend
- Fixed #30. Voting now possible after enabling 2nd passphrase @pilldriver.
- Fixed #29. Resetting application state between sessions @2mdoty.
- Fixed #13. Improved error handling when sending transactions @karek314.
- New and improved Russian translation @densmirnov.
- Refactored delegate username validations.
",50873641
188,False,True,2016-04-29T18:24:38Z,2016-04-29T18:25:30Z,"## Changelog

### Backend
- Changed database engine from SQLite to [PostgreSQL](http://www.postgresql.org/). Providing faster query performance, better support for concurrency, and further options for scalability.
- Removed usernames and contacts from mainchain (to be later reimplemented as a separate Identity Dapp sidechain). Delegate usernames still remain.
- Added dapp zip link storage mechanism, replaces GitHub and Sia integration, with alternative decentralized solutions to be implemented in future releases.
- Implemented concatenated inserts/updates, dramatically reducing number of round trips between client and database: https://github.com/vitaly-t/pg-promise/wiki/Performance-Boost
- Implemented promise based database logic using: https://github.com/vitaly-t/pg-promise
- Added optional PostgreSQL event monitoring using: https://github.com/vitaly-t/pg-monitor (see: config.json:db.logEvents). This will be used for finding further efficiency improvements at the database level.
- Enabled gzip compression on all http requests using: https://github.com/expressjs/compression. Significantly reducing the size of payloads transmitted between peers on the network, and also for lisk-ui (Example: vendor_app.js : Without compression 5.4MB, With compression: 1.2MB).
- Improved syncing reliability and chain comparison efficiency between peers, through query and code refactoring of Blocks#getIdSequence and the `/peer/blocks/common` API endpoint.
- Accounts#getDelegate(s): Calculating approval rating from total supply rather than a static amount.
- Increased max transactions per block from 10 to 25 (subject to further change after more testing and efficiency improvements have been made).
- Changed peers communication format from CSV to JSON.
- Fixed DApps#getInstalledIds, filtering installed ids to only include numerically named folders.
- Fixed ""Dapp not ready"" messages when auto-launching dapps upon starting client.
- Closed #24. Changing 'sync' to 'syncing'. @HeisenbergCoin
- Closed #33. Logging each client request. @slasheks 
- Fixed #36. Adding username and publicKey properties. @fix
- Fixed #47. Changing timestamps to UTC. @TheGoldenEye 
- Fixed #50. Indicating forged blocks more clearly. @punkrock
- Fixed #52. Removing virgin field from mem_accounts. @simonmorgenthaler
- Fixed #54. Restricting total number of votes to 101. @TheGoldenEye 
- Fixed #55. Fixing circular reference.
- Updated all 3rd party node modules to latest compatible versions.
- Switched from zip to gzipped tar for release packaging.
- Generated new genesis block for use on open testnet.

### Frontend
- Added translations for 10 languages (Greek, Spanish, French, Hungarian, Italian, Japanese, Norwegian, Portuguese, Romanian, Ukrainian).
- Updated translations for 4 languages (Chinese, Russian, German, Dutch).
- Enforced BIP39 passphrases.
- Enforced BIP39 second passphrases.
- Unified every modal.
- Improved Dapp registration and Multi-signature registration modals. 
- Added fees overview to every modal.
- Added more descriptions to every modal.
- Removed usernames and contacts (to be later reimplemented as a separate Identity Dapp sidechain).
- Improved and unified the overall user interface.
",50873641
189,False,True,2016-04-12T11:01:14Z,2016-04-12T11:57:16Z,"## Changelog

Imposing hard limit on number of transactions per block.

The previous limit of 100 was only checked during block verification, after a block has already been generated. Now only the last 10 unconfirmed txs in a given delegate's stack will be included.
",50873641
190,False,True,2016-04-10T17:44:38Z,2016-04-12T10:57:53Z,"## Changelog

- Fixed #45. Improved sync / block insertion rate.
- Fixed #3. Setting X-Frame-Options/CSP headers @fix.
- Improved logging of received unconfirmed transactions.
- Improved logging of blocks loading from peer.
",50873641
191,False,True,2016-04-02T17:21:49Z,2016-04-02T17:38:48Z,"## Changelog

- Allowing dapps installation from GitHub using https.
- Fixed #13. Checking for presence of recipientId @fix.
- SSL: Using the default cipher from recent nodejs version to protect against weak RC4 cipher @TheGoldenEye.
- Fixed unrecoverable fork when comparing delegate id to generator id.
",50873641
192,False,True,2016-02-10T18:39:27Z,2016-02-10T18:41:59Z,"## Changelog

- Implemented multi-language user interface, with initial support for Chinese and German.
- Implemented block reward offset (first reward starts on block 60480).
- Revised error and logs messages throughout all backend modules.
- Changed address format (addresses now end with an L).
",50873641
193,False,True,2016-02-05T00:15:03Z,2016-02-10T18:00:07Z,"## Changelog

- Rebranded from Crypti to Lisk.
- Changed transaction fee to 0.1 LISK.
- Implemented block rewards.
",50873641
194,False,True,2020-03-23T08:40:56Z,2020-03-23T08:47:57Z,"
        Release Notes - Apache ServiceComb - Version java-chassis-2.0.1
    
<h2>        Sub-task
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1531'>SCB-1531</a>] -         Support multiple service-center clusters
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1752'>SCB-1752</a>] -         accessor problem fix:  LogMarkerLeakFixUtils memory leak fix
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1801'>SCB-1801</a>] -         fix SCB-1752
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1802'>SCB-1802</a>] -         add document: for servlet transport, remove log4j will cause some change
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1807'>SCB-1807</a>] -         update documentation for kie long polling
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1809'>SCB-1809</a>] -         add document for InvokerUtils usage
</li>
</ul>
        
<h2>        Bug
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1787'>SCB-1787</a>] -         Http 2 idleTimeoutInSeconds is not used
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1793'>SCB-1793</a>] -         When use @RequestHeader(value =&quot;xxx&quot;) and aggregatedParam at same time, it will throw null pointer exception
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1795'>SCB-1795</a>] -         when use query object, sdk don&#39;t support fluent setter
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1799'>SCB-1799</a>] -         add back servicecomb.service.registry.registerUrlPrefix
</li>
</ul>
            
<h2>        New Feature
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1737'>SCB-1737</a>] -         support ISO 8601 data and time
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1796'>SCB-1796</a>] -         support client outlog
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1798'>SCB-1798</a>] -         InvokerUtils support specify response type
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1812'>SCB-1812</a>] -         Endpoint add new constructor to support user defined transport
</li>
</ul>
    
<h2>        Improvement
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1779'>SCB-1779</a>] -         update servicecomb test cases to make run in MAC
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1785'>SCB-1785</a>] -         Run java-chassis in spring boot with external tomcat
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1786'>SCB-1786</a>] -         remove log4j dependency by default
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1794'>SCB-1794</a>] -         update the version of commons-beautils
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1800'>SCB-1800</a>] -         log4j is deprecated package, make log4j implementaions optional
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1803'>SCB-1803</a>] -         config-kie support long polling
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1814'>SCB-1814</a>] -         binary release only include java-chassis artifacts
</li>
</ul>
            
<h2>        Task
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1804'>SCB-1804</a>] -         anylyse updating commons-configuration and archairus
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1805'>SCB-1805</a>] -         clear some unused 3rd party software and use akarta Expression Language
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1806'>SCB-1806</a>] -         PR TestSpringMVCObjectParamTypeRestOnly should run both for rest and highway
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1808'>SCB-1808</a>] -         add documentaion for using TraceIdLogger
</li>
</ul>
                                                                                                                                            ",91674936
195,False,False,2020-02-17T06:33:38Z,2020-02-17T08:04:53Z,"
        Release Notes - Apache ServiceComb - Version java-chassis-2.0.0
    
<h2>        Sub-task
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-267'>SCB-267</a>] -         support generic for highway
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1117'>SCB-1117</a>] -         change SwaggerConsumer arguments to not depend on swagger class generation
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1212'>SCB-1212</a>] -         change response mapper to not depend on swagger class generation
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1213'>SCB-1213</a>] -         swagger generator placeholder resolver not depend on spring
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1214'>SCB-1214</a>] -         change weak-contract-type branch version to weak-contract-type-SNAPSHOT
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1225'>SCB-1225</a>] -         swagger generator core not depend on create dynamic class
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1227'>SCB-1227</a>] -         swagger generator jaxrs not depend on create dynamic class
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1228'>SCB-1228</a>] -         swagger generator springmvc not depend on create dynamic class
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1242'>SCB-1242</a>] -         provide spring data plugin to generate swagger and deserialize
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1248'>SCB-1248</a>] -         ServiceRegistry manage MicroserviceMeta
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1252'>SCB-1252</a>] -         change element of HttpParameterType to uppercase
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1256'>SCB-1256</a>] -         rename ConcreteInterfaceRegister to ConcreteTypeRegister
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1268'>SCB-1268</a>] -         ServiceRegistry publish microservice life event and move meta back to core
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1269'>SCB-1269</a>] -         change SwaggerProducer arguments to not depend on swagger class generation
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1283'>SCB-1283</a>] -         avoid generate empty property by SwaggerDefinition
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1284'>SCB-1284</a>] -         operationId should not be empty
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1285'>SCB-1285</a>] -         enhance ResponseTypeProcessor to support extractResponseType
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1286'>SCB-1286</a>] -         support only generate response for a operation
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1290'>SCB-1290</a>] -         add swagger generator unit test case for List&lt;List&lt;String&gt;&gt;
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1323'>SCB-1323</a>] -         should ignore parameter of HttpServletRequest when generate swagger
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1324'>SCB-1324</a>] -         basePath should be a single slash when basePath not specified and annotation by RestController
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1327'>SCB-1327</a>] -         delete duplicated swagger definition: ExtendConst
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1328'>SCB-1328</a>] -         restore feature: collect java type from swagger model or property
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1336'>SCB-1336</a>] -         should not lost @ApiParam description when wrap parameter to body at swagger generator pojo mode
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1337'>SCB-1337</a>] -         should wrap enum to body at swagger generator pojo mode
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1338'>SCB-1338</a>] -         tiny optimize for collect primitive default value 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1342'>SCB-1342</a>] -         consumer should not use ArgumentsMapperDirectReuse when arg index is different
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1344'>SCB-1344</a>] -         use producer parameter type in producer argument mapper for wrapped body
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1345'>SCB-1345</a>] -         rest transport switch to weak type core
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1346'>SCB-1346</a>] -         only special type need convert logic
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1347'>SCB-1347</a>] -         tiny optimize for DefaultParameterNameProvider
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1348'>SCB-1348</a>] -         change SchemaLoader to SwaggerLoader
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1362'>SCB-1362</a>] -         microservice meta not depend on create dynamic class
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1625'>SCB-1625</a>] -         update license file
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1626'>SCB-1626</a>] -         provide interface to replace spring 5 deprecated classes
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1628'>SCB-1628</a>] -         change starter name
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1629'>SCB-1629</a>] -         documentation should cut 2.0 branch
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1630'>SCB-1630</a>] -         add documentation for spring boot and add samples for it
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1631'>SCB-1631</a>] -         add documentation to help users migrate from 1.x to 2.0
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1632'>SCB-1632</a>] -         Complete weak type code and merge it into master branch
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1635'>SCB-1635</a>] -         Recover highway tests
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1636'>SCB-1636</a>] -         SwaggerLoader remove the dependency on Spring utilities
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1637'>SCB-1637</a>] -         Fix test problem in demo
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1644'>SCB-1644</a>] -         add tests for different model in client and server
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1678'>SCB-1678</a>] -         using new proto API to serialize/deserialize Internal Objects 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1682'>SCB-1682</a>] -         Refactor getVendorExtensions method and add ProtoMapper to ScopedProtobufSchemaManager
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1683'>SCB-1683</a>] -         using new proto API to serialize/deserialize Requests/Responses
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1684'>SCB-1684</a>] -         add codec test cases and fix Date/LocalDate codec problem
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1692'>SCB-1692</a>] -         deserialize arguments in map with arguments actual types
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1693'>SCB-1693</a>] -         invocation args change from array to map
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1703'>SCB-1703</a>] -         Highway transport switch to new codec APIs and turn on highway transport
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1704'>SCB-1704</a>] -         change invocation arguments from &quot;swagger arguments&quot; to &quot;invocation arguments&quot;
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1706'>SCB-1706</a>] -         mapper arguments in codec phase for REST
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1709'>SCB-1709</a>] -         restore arguments mappers and refactor to invocation argument types
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1713'>SCB-1713</a>] -         Invocation carries both invocation arguments and swagger arguments
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1714'>SCB-1714</a>] -         highway support different models and arguments types in consumer and provider
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1722'>SCB-1722</a>] -         add generics test case and fix know problems
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1725'>SCB-1725</a>] -         turn on integration tests of highway
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1726'>SCB-1726</a>] -         fix all TODOs in springmvc demo(integration tests)
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1727'>SCB-1727</a>] -         support encode/decode Object(Any) types
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1728'>SCB-1728</a>] -         support response headers in Response type
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1730'>SCB-1730</a>] -         highway support primitive default values and convert char/byte/short
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1732'>SCB-1732</a>] -         support inheritance schema definition
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1734'>SCB-1734</a>] -         add a test case for bean with aXXX property and documents
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1744'>SCB-1744</a>] -         separate primitive descriptorParamType from non primitive
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1745'>SCB-1745</a>] -         remove accessor modifier in reflection 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1746'>SCB-1746</a>] -         add docs for SCB-1745 of changes
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1749'>SCB-1749</a>] -         fix OperationConfig setter problem
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1750'>SCB-1750</a>] -         remove usage of javax.xml.ws.Holder 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1755'>SCB-1755</a>] -         add  JavaBeans Activation Framework implicitly
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1758'>SCB-1758</a>] -         add document links to older versions 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1759'>SCB-1759</a>] -          fix first sample link error
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1761'>SCB-1761</a>] -         import document of porter application to java-chassis doc
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1762'>SCB-1762</a>] -         change gitbook to mkdoc
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1764'>SCB-1764</a>] -         add porter appliation to docs
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1765'>SCB-1765</a>] -         create a mirror for github pages for better access of china
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1766'>SCB-1766</a>] -         add documents for kie, nacos, appollo integration
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1771'>SCB-1771</a>] -         change project version to 2.0.0
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1772'>SCB-1772</a>] -         fix javadoc compile error
</li>
</ul>
        
<h2>        Bug
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1310'>SCB-1310</a>] -         @RequestPart should use MultipartFile instead of string
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1489'>SCB-1489</a>] -         Micro-service instance wouldn&#39;t work after we shotdown our service center for updating while we had enable RSA authentication between services.
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1546'>SCB-1546</a>] -         fix wrong code for sample
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1601'>SCB-1601</a>] -         Abandon waiting 30 seconds after waiting request timeout.
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1638'>SCB-1638</a>] -         servicecenter do not handle websocket PONG message
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1710'>SCB-1710</a>] -         The scheduled tasks in RemoteServiceRegistry may be interrupted by exception
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1715'>SCB-1715</a>] -         IdleTimeout not work in client side without keepaliveTimeout set
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1716'>SCB-1716</a>] -         High CPU load when there are too many instances
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1717'>SCB-1717</a>] -         Return nothing when file upload exception occurs 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1740'>SCB-1740</a>] -         RouterInvokeFilter beforeSendResponseAsync return null and cause server hang without any information
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1747'>SCB-1747</a>] -         fix long file name problems
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1763'>SCB-1763</a>] -         upgrade netty and tcnative 
</li>
</ul>
            
<h2>        New Feature
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-102'>SCB-102</a>] -         As a developer, I want to work in reactive mode to improve performance
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-265'>SCB-265</a>] -         Support generic type in input parameter or response type
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-279'>SCB-279</a>] -         As a developer, I need to build edge service to open my microservices to the external users
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1499'>SCB-1499</a>] -         support servicecomb kie
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1550'>SCB-1550</a>] -         Add a sample Java client of ServiceComb-Kie
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1565'>SCB-1565</a>] -         add a Java client of servicecomb-service-center
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1566'>SCB-1566</a>] -         add README.md for 中文
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1615'>SCB-1615</a>] -         Extended dynamic configuration support for Nacos
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1624'>SCB-1624</a>] -         remove spring 4 &amp; spring boot 1 support for java-chassis
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1643'>SCB-1643</a>] -         add a slution to integrate with huaweicloud
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1649'>SCB-1649</a>] -         RestTemplate result can use a different model than provider
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1674'>SCB-1674</a>] -         Highway transport not dependent on class generation
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1711'>SCB-1711</a>] -         suppot kie as config source in java-chassis
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1757'>SCB-1757</a>] -         prepare and improment documents for java-chassis 2.0
</li>
</ul>
    
<h2>        Improvement
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1557'>SCB-1557</a>] -         Fix application start info log incorrect
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1567'>SCB-1567</a>] -         move java-chassis samples to servicecomb-samples project
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1574'>SCB-1574</a>] -         Add README for Kie-Client 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1575'>SCB-1575</a>] -         Add README for Service-Center-Client 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1582'>SCB-1582</a>] -         Upgrading thirdparty dependency versions
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1588'>SCB-1588</a>] -         ServerListFilterExt add switch 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1592'>SCB-1592</a>] -         upgrade vert.x and netty 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1610'>SCB-1610</a>] -         add updateInstanceStatus to ServiceRegistryClient.java 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1616'>SCB-1616</a>] -         refactor edge dispatcher to make them more extensible
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1623'>SCB-1623</a>] -         when timeout, return 500 error code and message is timeout
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1666'>SCB-1666</a>] -         improve documents for file uploading / downloading
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1705'>SCB-1705</a>] -         Update javax.servlet to jakarta.servlet
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1708'>SCB-1708</a>] -         add inspector module developer guide
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1767'>SCB-1767</a>] -         adjust nacos config name
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1773'>SCB-1773</a>] -         fix javadoc error: doclink all docs and add comments to APIs
</li>
</ul>
            
<h2>        Task
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1559'>SCB-1559</a>] -         Use java.time.Clock instead of java.lang.System#currentTimeMillis to get time
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1770'>SCB-1770</a>] -         release java-chassis 2.0.0
</li>
</ul>
                                                                                                                                            ",91674936
196,False,False,2019-10-26T08:26:56Z,2019-10-26T08:37:06Z,"
        Release Notes - Apache ServiceComb - Version java-chassis-1.3.0
            
<h2>        Bug
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1304'>SCB-1304</a>] -         FallbackPolicy interface support returns an exception
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1305'>SCB-1305</a>] -         CseAsyncRestTemplate is not support set headers
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1306'>SCB-1306</a>] -         When the request body of VertxServerRequestToHttpServletRequest is modified, the field VertxServerRequestToHttpServletRequest#inputStream should be set to null
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1318'>SCB-1318</a>] -         There may be memory leak in RSAProviderTokenManager
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1390'>SCB-1390</a>] -         quick start java-chassis samples bmi has some errors
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1475'>SCB-1475</a>] -         ServiceCombServerStats.getFailedRate may arise an  exception of java.lang.ArithmeticException: / by zero under concurrency scenarios
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1511'>SCB-1511</a>] -         when use method override, the generated swagger body is wrong
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1513'>SCB-1513</a>] -         merge config items according to priority
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1520'>SCB-1520</a>] -         using RPC and when first paramter type is Object, the second parameter value will be null
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1543'>SCB-1543</a>] -         java-chassis dependency structure is wrong and compile fail in clean environment
</li>
</ul>
                
<h2>        Improvement
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1274'>SCB-1274</a>] -         when service center is unavailable, service should enter safe mode.
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1278'>SCB-1278</a>] -         ServiceComb related headers are not exposed to 3rd party services by default
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1287'>SCB-1287</a>] -         refactor edge dispatcher to make them more extensible
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1291'>SCB-1291</a>] -         Support rest interface method overriding by @ApiOperation
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1297'>SCB-1297</a>] -         Print warn log about config resolving failure while fetching config from Spring Environment
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1308'>SCB-1308</a>] -         Improve instance isolation mechanism
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1392'>SCB-1392</a>] -         If Multiple java bean param types are given the same name by using @ApiModel, there should be error tips in microservice&#39;s booting log
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1402'>SCB-1402</a>] -         BeanUtils.getImplClassFromBean can not return correctly info in cglib proxy situation
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1405'>SCB-1405</a>] -         support maxWaitQueueSize setting in RestTransportClient
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1407'>SCB-1407</a>] -         Add new field when print provideCache log
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1431'>SCB-1431</a>] -         set all dependency version as properties in java-chasis-dependencies
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1434'>SCB-1434</a>] -         add a springboot2 archetype
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1437'>SCB-1437</a>] -         Upgrading third party dependency versions
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1448'>SCB-1448</a>] -         support class inheritance and interface inheritance with template type
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1450'>SCB-1450</a>] -         Microservice instance may get stuck when watch connection to sc is recovered and pulling instance action is executed in eventloop thread
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1451'>SCB-1451</a>] -         Printing the service information on the log
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1457'>SCB-1457</a>] -         delete no use code in ProtobufManager
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1461'>SCB-1461</a>] -         servicecomb.service.registry.client.workerPoolSize hasn&#39;t display the real role that it has announce by its name.
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1462'>SCB-1462</a>] -         Two properties has been required by fix SCB-1450.
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1488'>SCB-1488</a>] -         Upgrading protobuf version to 3.7.1
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1492'>SCB-1492</a>] -         Allow users to custom the ObjectMapper used in Swagger schema generation
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1494'>SCB-1494</a>] -         Optimizing log when starting a new microservice
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1515'>SCB-1515</a>] -         use jdk 8 compiler for the Travis-CI of java-chassis
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1516'>SCB-1516</a>] -         Upgrade third-party dependency versions
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1522'>SCB-1522</a>] -         Add &quot;Why use Java Chassis&quot; introduction into README
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1523'>SCB-1523</a>] -         Stopping retrying another server when no server available
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1524'>SCB-1524</a>] -         support register schema when old schema already exists
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1525'>SCB-1525</a>] -         print codec error stack
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1528'>SCB-1528</a>] -         Optimizing some code implementations
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1544'>SCB-1544</a>] -         default metrics printer should not print 0 operations
</li>
</ul>
                                                                                                                                                        ",91674936
197,False,False,2019-04-08T08:07:23Z,2019-05-05T17:05:05Z,"
        Release Notes - Apache ServiceComb - Version java-chassis-1.2.0
    
<h2>        Sub-task
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-353'>SCB-353</a>] -         Servicecomb当前性能统计不支持时延分布的统计，这个对于业务有重要意义
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-837'>SCB-837</a>] -         add http2 special configuration
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-945'>SCB-945</a>] -         enhance swagger to idl to support method parameter/result/List&lt;List&gt;/List&lt;Map&gt;/Map&lt;List&gt;/Map&lt;Map&gt;
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-946'>SCB-946</a>] -         serialize/deseriaze List&lt;List&lt;X&gt;&gt;/List&lt;Map&lt;X, Y&gt;&gt;/Map&lt;X, List&lt;Y&gt;&gt;/Map&lt;X, Map&lt;Y, Z&gt;&gt;
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1071'>SCB-1071</a>] -         serialize/deserialize array and primitives
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1144'>SCB-1144</a>] -         change samples use log4j2
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1153'>SCB-1153</a>] -         provide traceId-invocationId by marker mechanism
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1162'>SCB-1162</a>] -         document for PriorityProperty/InjectProperties/InjectProperty
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1175'>SCB-1175</a>] -         document for basic configuration rule
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1188'>SCB-1188</a>] -         provide a way to view/convert and download schemas
</li>
</ul>
        
<h2>        Bug
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-781'>SCB-781</a>] -         关于apollo配置中心不支持@ConfigurationProperties
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-968'>SCB-968</a>] -         [SCB-968] http2 do not support pump download
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1054'>SCB-1054</a>] -         when download file, we should ignore consumer acceptType
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1065'>SCB-1065</a>] -         when request not contain traceId,should use provider&#39;s invocation&#39;s traceId
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1066'>SCB-1066</a>] -         when start error, destroy method may throw an exception lead to origin exception losed
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1073'>SCB-1073</a>] -         StaticMicroserviceVersions should be ignored while checking instance cache
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1089'>SCB-1089</a>] -         Fix PrometheusPublisher naming error
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1095'>SCB-1095</a>] -         Timer task need catch all throwable to protected from unexpected error
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1096'>SCB-1096</a>] -         [SCB-1096]change the method calculate process cpu rate  to same with top
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1102'>SCB-1102</a>] -         fix empty swagger and information leak problem
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1108'>SCB-1108</a>] -         when timeout, the access log status is 200
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1109'>SCB-1109</a>] -         local-service-registry sample of java-chassis can not run directly 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1114'>SCB-1114</a>] -         upgrade zipkin
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1115'>SCB-1115</a>] -         fix not standard protostuff javadoc @Created
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1126'>SCB-1126</a>] -         springmvc project generated by ServiceComb scaffold can not run
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1129'>SCB-1129</a>] -         @JsonProperty on enum value is ignored
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1141'>SCB-1141</a>] -         latest versionRule can not update to new version
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1143'>SCB-1143</a>] -         Servicecomb support watch service center with auth headers
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1156'>SCB-1156</a>] -         avoid collect wrong invocation stage data when rest invoke failed
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1191'>SCB-1191</a>] -         NPE When return type is ResponseEntity&lt;Void&gt;
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1224'>SCB-1224</a>] -         [SCB-1224] az affinity is conflict with empty instance protection
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1226'>SCB-1226</a>] -         there are problems when request rejected by thread pool queue full
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1230'>SCB-1230</a>] -         avoid throw exception in httpClientResponse.exceptionHandler
</li>
</ul>
        
<h2>        New Feature
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1048'>SCB-1048</a>] -         Provide a way to configure bootstrap information in Cloud Native enviroment
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1061'>SCB-1061</a>] -         Provide a way to using handlers(e.g. LoabalanceHanler) outside handler chain
</li>
</ul>
        
<h2>        Improvement
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-674'>SCB-674</a>] -         protobuf codec based on idl from swagger
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1037'>SCB-1037</a>] -         in vertx 3.6.0, PumpImpl do not support &quot;&quot;, it will throw exception
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1044'>SCB-1044</a>] -         add current process CPU rate  and net packets in the metrics
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1047'>SCB-1047</a>] -         microservice.yaml  service_description.version support format xxx.xx.xxx.xxx
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1051'>SCB-1051</a>] -         when interface set produces=text/plain;charset=utf-8. and consumers set accept = text/plain,will cause error
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1056'>SCB-1056</a>] -         Put provider QPS flow control in front
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1063'>SCB-1063</a>] -         Improve the time cost when first time loading schema
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1068'>SCB-1068</a>] -         As a developer want to know instance detail info when instance isolation 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1072'>SCB-1072</a>] -         change dependency management version to project.version
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1074'>SCB-1074</a>] -         minor fixes for mistakes and logs
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1075'>SCB-1075</a>] -         upgrade spring-framework to 4.3.20.RELEASE
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1076'>SCB-1076</a>] -         upgrade guava to 25.1
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1077'>SCB-1077</a>] -         upgrade hystrix to 1.5.12
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1079'>SCB-1079</a>] -         allow consumer-id to be empty when query instance
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1101'>SCB-1101</a>] -         ServiceComb-Java-Chassis support IPv6
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1106'>SCB-1106</a>] -         isolation must make sure one of instances is available
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1135'>SCB-1135</a>] -         Add client max receive header size config item
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1139'>SCB-1139</a>] -         Upgrade Vert.x to 3.6
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1146'>SCB-1146</a>] -         update PR template
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1157'>SCB-1157</a>] -         spring-boot2-starter-discovery and spring-boot-starter-discovery depend on zuul is not correct
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1170'>SCB-1170</a>] -         improve log of upload directory during boot.
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1177'>SCB-1177</a>] -         update vertx to 3.6+ version to result .vertx directory was default created 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1178'>SCB-1178</a>] -         In the unit test, the issue of assertEquals and Float.MAX_VALUE.
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1179'>SCB-1179</a>] -         Optimize the mainclass auto-discovery logic to cover more scenes.
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1185'>SCB-1185</a>] -         Log DNS related exception to help locate problem
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1186'>SCB-1186</a>] -         add a common pom module to simplify user configurations
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1193'>SCB-1193</a>] -         upgread spring boot versions and add easy to use dependency management
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1202'>SCB-1202</a>] -         pump down with vertx3.6.3 no need to check buff length in AsynFileImpl#doWrite
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1205'>SCB-1205</a>] -         improve edge forward http2 request
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1206'>SCB-1206</a>] -         sort schemas in inspector ui
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1208'>SCB-1208</a>] -         improve slow invocation logger: log remote address
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1210'>SCB-1210</a>] -         improve the average latency precision of the metrics log
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1211'>SCB-1211</a>] -         avoid  create multiple caches for different expression of one versionRule 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1220'>SCB-1220</a>] -         Support regex path param on consumer side
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1222'>SCB-1222</a>] -         change groupId of &quot;hibernate-validator&quot; from &quot;org.hibernate&quot; to &quot;org.hibernate.validator&quot;
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1239'>SCB-1239</a>] -         close thread after finish unit test case at once.
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1240'>SCB-1240</a>] -         allowed one prometheus cluster support multiple apps
</li>
</ul>
            
<h2>        Task
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-291'>SCB-291</a>] -         delete old useless configuration mechanism
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-594'>SCB-594</a>] -         Create a document description for https://github.com/apache/incubator-servicecomb-java-chassis/pull/704
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-638'>SCB-638</a>] -         create mechanism for read config item by priority 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1046'>SCB-1046</a>] -         file upload support file array for the same name
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1062'>SCB-1062</a>] -         Update the project development version to 1.2.0-SNAPSHOT
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1083'>SCB-1083</a>] -         support test before provide service
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1134'>SCB-1134</a>] -         change default verticle instance count
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1136'>SCB-1136</a>] -         change default settings of sync executor
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1147'>SCB-1147</a>] -         log invocation stage trace information if too slow
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1148'>SCB-1148</a>] -         read transport configuration from model
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1163'>SCB-1163</a>] -         Support spring-cloud-gateway 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1165'>SCB-1165</a>] -         filter bridge methods when generate swagger
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1184'>SCB-1184</a>] -         upgrade swagger from 1.5.12 to 1.5.22 to support convert swagger to html
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1192'>SCB-1192</a>] -         add &quot;metrics&quot; prefix to slow invocation configuration 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1218'>SCB-1218</a>] -         Prepare 1.2.0 Release
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1221'>SCB-1221</a>] -         add missed modules to distribution and adjust orders
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1231'>SCB-1231</a>] -         add queue meter of http client connection pool 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1232'>SCB-1232</a>] -         make GroupExecutor configuration compatible to old version
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1237'>SCB-1237</a>] -         improve default thread pool strategy
</li>
</ul>
                                                                                                                                        ",91674936
198,False,False,2018-11-26T11:15:28Z,2018-12-03T06:50:44Z,"
        Release Notes - Apache ServiceComb - Version java-chassis-1.1.0
    
<h2>        Sub-task
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-493'>SCB-493</a>] -         parameters and DefaultLogPublisher optimize
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-675'>SCB-675</a>] -         generate protobuf idl from swagger
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-681'>SCB-681</a>] -         jackson protobuf support v3 specification: map/list/array
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-687'>SCB-687</a>] -         highway server not accept too many connection
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-691'>SCB-691</a>] -         add vertx server/ rest client/highway client/ highway server connection meter
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-790'>SCB-790</a>] -         support create new target microservice instance in one node
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-793'>SCB-793</a>] -         run it-consumer during travis CI 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-842'>SCB-842</a>] -         jackson protobuf serializer have performance problem
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-843'>SCB-843</a>] -         add http client pool request time to consumer invocation meter
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-881'>SCB-881</a>] -         add more invocation stage measurement
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-894'>SCB-894</a>] -         measure httpServer and httpClient
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-917'>SCB-917</a>] -         parse proto file to model
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-918'>SCB-918</a>] -         serialize/deserialize based on proto model
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-922'>SCB-922</a>] -         collect Getter/Setter from pojo
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-947'>SCB-947</a>] -         delete old jackson protobuf logic
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-948'>SCB-948</a>] -         convert proto model to string
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1001'>SCB-1001</a>] -         [vertx] downloading, client disconnect first, should close WriteStream right now.
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1021'>SCB-1021</a>] -         add vertx client/server meters to metrics
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1022'>SCB-1022</a>] -         measure tcpServer and tcpClient
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1034'>SCB-1034</a>] -         metrics performance optimize
</li>
</ul>
        
<h2>        Bug
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-74'>SCB-74</a>] -         POJO static method is export as an operation
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-381'>SCB-381</a>] -         Fix foudation-vertx UT failure on linux
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-769'>SCB-769</a>] -         When delay fault injection is enabled, the business thread will be blocked 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-774'>SCB-774</a>] -         Unexpected warn log is printed while the service is exiting if there are reactive operations
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-780'>SCB-780</a>] -         sessionstickrule add the judgement of whether lastServer can also be accessed.
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-787'>SCB-787</a>] -         Server States not clean unavailable server
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-794'>SCB-794</a>] -         Edge invocation do not properly send servlet filter response code
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-799'>SCB-799</a>] -         fix problem about &quot;mvn install&quot; in ubuntu
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-800'>SCB-800</a>] -         Param order generated by BeanParamAnnotationProcessor is not stable
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-802'>SCB-802</a>] -         in rollback scenario, old versions meta is used and invocation is fail
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-810'>SCB-810</a>] -         fix zipkin dependency
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-828'>SCB-828</a>] -         In some tomcat implementation inputstream available is null
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-845'>SCB-845</a>] -         some times download file can not get correct content
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-849'>SCB-849</a>] -         refactor producer connection limit using vertx metrics spi mechanism
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-861'>SCB-861</a>] -         lost response type of @ApiResponse 490/590
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-886'>SCB-886</a>] -         Path param is not encoded and decoded correctly
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-888'>SCB-888</a>] -         switch SCBEngine status to up in the wrong time
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-895'>SCB-895</a>] -         When json parse fail will not get 400 but 590
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-898'>SCB-898</a>] -         Governance function is not effective when configuration Start with servicecomb
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-904'>SCB-904</a>] -         SpringMVC @RequestHeader do not support value,only support name
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-905'>SCB-905</a>] -         Request connection is hang up when request path contains illegal string
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-910'>SCB-910</a>] -         Java Chassis support spring boot 2.0
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-956'>SCB-956</a>] -         not support body to be a enum
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-959'>SCB-959</a>] -         When parsing inner classes，CtType will throw NotFoundException
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-960'>SCB-960</a>] -         when consumer local failed(eg: LB failed), CompletableFuture callback can not get InvocationContext
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-964'>SCB-964</a>] -         Fix MediaType setting problem
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-965'>SCB-965</a>] -         resolve DoS attack problem about enum/char/Character/byte/Byte/short/Short/int/Integer/long/Long/float/Float/double/Double
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-972'>SCB-972</a>] -         Using SHA1 signature key as UUID of micro service
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1007'>SCB-1007</a>] -         not support CustomGeneric&lt;Map&lt;KEY, VALUE&gt;&gt;
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1012'>SCB-1012</a>] -         add NoRouteToHostException in retry&#39;s exception
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1014'>SCB-1014</a>] -         Fix priority problem of ExceptionToResponseConverter
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1043'>SCB-1043</a>] -         MicroserviceVersions.safeSetInstances lost exception message
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1045'>SCB-1045</a>] -         fix sample spring bean declaring
</li>
</ul>
        
<h2>        New Feature
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-215'>SCB-215</a>] -         support annotation ApiParam
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-775'>SCB-775</a>] -         support invoke service using raw type like JsonObject
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-777'>SCB-777</a>] -         Support @BeanParam annotation in JAX-RS developing style
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-778'>SCB-778</a>] -         In tomcat, support register swagger base path with container prefix
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-786'>SCB-786</a>] -         when instances cache is not sync to SC caused by bug, auto fix it.
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-788'>SCB-788</a>] -         public key black/white add feature: choose server by microservice field  and properties
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-847'>SCB-847</a>] -         Provide a way to decode user&#39;s custom error data
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-880'>SCB-880</a>] -         Give an option to query parameter convert empty to null
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-903'>SCB-903</a>] -         Add a feature to serialize/deserialize using Object to avoid information lose
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-926'>SCB-926</a>] -         Invoke 3rd party service
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-936'>SCB-936</a>] -         Encoded slash &#39;/&#39; is decoded in EdgeService, causing 404 error response
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-967'>SCB-967</a>] -         support configed ip send request
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1009'>SCB-1009</a>] -         Supporting configure encrypted password for proxy settings
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1040'>SCB-1040</a>] -         Support discover instances from ServiceCenter Aggregator
</li>
</ul>
        
<h2>        Improvement
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-206'>SCB-206</a>] -         Support @Api to specify produces and consumes
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-207'>SCB-207</a>] -         Fix known defects related to SCB-184
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-711'>SCB-711</a>] -         HTTP2 and other client should be lasy initialized 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-747'>SCB-747</a>] -         add jaxrs upload file demo
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-795'>SCB-795</a>] -         update jackson from 2.9.5 to 2.9.6
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-827'>SCB-827</a>] -         Add response decode error log
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-832'>SCB-832</a>] -         modify the errorThresholdPercentage from 20 to 0
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-833'>SCB-833</a>] -         Provide a retry mechanism to meet upgrade no interrupt
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-870'>SCB-870</a>] -         Refractor loadbalancer rule to not use IRule to give more control
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-873'>SCB-873</a>] -         Make the validation result display the parameter name instead of arg0, arg1
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-887'>SCB-887</a>] -         aysnc servlet timeout is too short and may block container pool when tasks are timeout
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-889'>SCB-889</a>] -         add SCBEngine reference to BootEvent
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-897'>SCB-897</a>] -         Support config rest server max initial line length
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-911'>SCB-911</a>] -         Timeout scenario print too many logs
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-931'>SCB-931</a>] -         upgrade vert.x to fix some know issues
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-933'>SCB-933</a>] -         Revert changes to RestObjectMapper that fail on primitive types not present
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-943'>SCB-943</a>] -         make ProduceJsonProcessor,DefaultHttpClientFilter,ServerRestArgsFilter changable
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-954'>SCB-954</a>] -         improve consumer stage time record when failed
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-961'>SCB-961</a>] -         Isolation provide a way to isolate for at least a moment
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-975'>SCB-975</a>] -         Improve retry rule
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-979'>SCB-979</a>] -         Add reminder log on the selection of SwaggerGeneratorContext
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-982'>SCB-982</a>] -         Show the warning message in maven compile plugin
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-985'>SCB-985</a>] -         Add springboot2-starter-discovery
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-986'>SCB-986</a>] -         ServerInstances can be cached in spring-boot2-starter-discovery
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-987'>SCB-987</a>] -         delete spring 3 related declaring
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-989'>SCB-989</a>] -         scan RestController to to make springmvc controller publish as ServiceComb Rest easier
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-996'>SCB-996</a>] -         When retries fail, return the last error
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1020'>SCB-1020</a>] -         No need unregister when bootup failure before register service
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1031'>SCB-1031</a>] -         The Response&#39;s properties was overrided wrong between @APIOperation and @Resoponse on the controller method
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1038'>SCB-1038</a>] -         Fix some bugs and logs improvement reported by users when testing
</li>
</ul>
            
<h2>        Task
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-612'>SCB-612</a>] -         delete useless MicroserviceMetaManager
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-736'>SCB-736</a>] -         generate default value to swagger for primitive type, even there is no defaultValue annotation
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-854'>SCB-854</a>] -         BootListener support load by not only spring bean, but also SPI
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-859'>SCB-859</a>] -         generate traceId when create invocation for consumer/producer/edge
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-882'>SCB-882</a>] -         split mixed integration test case
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-893'>SCB-893</a>] -         measure vertx by vertx metrics mechanism
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-906'>SCB-906</a>] -         add sample for invocation apm by java agent
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-919'>SCB-919</a>] -         generate lambda Getter/Setter from reflect method or field to improve performance
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-920'>SCB-920</a>] -         Remove duplicate dependencies
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-928'>SCB-928</a>] -         support swagger &quot;collection-format&quot; feature
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-944'>SCB-944</a>] -         make control IT deploy simpler and print less log
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-957'>SCB-957</a>] -         delete too old protobuf map compatible flag
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-973'>SCB-973</a>] -         TLP graduation tasks
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-992'>SCB-992</a>] -         Synchronous open source code from Vert.x 3.5.3 version
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1023'>SCB-1023</a>] -         switch max connection limitation to metrics mechanism
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-1035'>SCB-1035</a>] -         Update third party licenses for java-chassis
</li>
</ul>
                                                                                                                                        
### Download links are available [here](http://servicecomb.apache.org/release/java-chassis-downloads/)",91674936
199,False,False,2018-07-25T06:58:33Z,2018-08-06T03:40:21Z,"
        Release Notes - Apache ServiceComb - Version java-chassis-1.0.0
            
<h2>        Bug
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-651'>SCB-651</a>] -         QPS rate limit bug
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-662'>SCB-662</a>] -         Using cse/servicecomb duplicate key will get list of values
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-666'>SCB-666</a>] -         Test failure on system that have rotate option set in /etc/resolv.conf
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-696'>SCB-696</a>] -         [AccessLog] If nginx send requests via short-lived connections, %v will print &quot;0.0.0.0&quot;
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-699'>SCB-699</a>] -         add schemaIds field in register.yaml when mock the Local sevice-center
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-703'>SCB-703</a>] -         When consumer invoke void type method in RPC style, an exception is thrown
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-705'>SCB-705</a>] -         When consumer invoke an unregistered provider, it will never find this provider even the provider is registered later
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-753'>SCB-753</a>] -         NPE when query not exists service
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-754'>SCB-754</a>] -         Check null invocation in AbstractRestInvocation to avoid unexpected NPE
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-759'>SCB-759</a>] -         Fix ServiceComb version error
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-772'>SCB-772</a>] -         Java Chassis::Handlers::Loadbalance test failed
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-773'>SCB-773</a>] -         Java Chassis::Core test failed
</li>
</ul>
        
<h2>        New Feature
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-616'>SCB-616</a>] -         Make access log mechanism extensible
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-640'>SCB-640</a>] -         Add black/white list support based on public key handler
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-679'>SCB-679</a>] -         Support Cross-Origin Resource Sharing (CORS)
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-708'>SCB-708</a>] -         Support assembling query param into Object parameter(in Spring MVC developing style)
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-752'>SCB-752</a>] -         User can switch off outputting merged log4j property file
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-760'>SCB-760</a>] -         provide a way to invoke service with full path
</li>
</ul>
        
<h2>        Improvement
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-194'>SCB-194</a>] -         Improve component-scan setting
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-661'>SCB-661</a>] -         Logs improvement to give better information
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-671'>SCB-671</a>] -         Duplicate cse.xxx to servicecomb.xxx to work better in future
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-684'>SCB-684</a>] -         Following swagger conventions
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-685'>SCB-685</a>] -         Service comb chassis must support default values
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-697'>SCB-697</a>] -         Service comb chassis must support JAX-RS @DefaultValue
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-700'>SCB-700</a>] -         Check server status when choose an available server
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-701'>SCB-701</a>] -         RequestBody(required = false) and when requestBody is null then exception observed
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-702'>SCB-702</a>] -         Deleted unwanted json-lib maven dependency for foundation-config
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-706'>SCB-706</a>] -         refactor loadbalance filters logic to support invocation based filter
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-712'>SCB-712</a>] -         Do not register service path to service center when not necessary
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-713'>SCB-713</a>] -         @DefaulValue should be set only when input param is null
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-715'>SCB-715</a>] -         Working in thread that do not have context class loader
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-727'>SCB-727</a>] -         Java Chassis-Local generated schema and service center schema are different while registering the service then print the difference content
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-750'>SCB-750</a>] -         Dependency management is incomplete in Saga and Java-Chassis
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-755'>SCB-755</a>] -         [SCB-755] 755 Duplicate copy cse config to Servicecomb config
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-763'>SCB-763</a>] -         Simplify Dynamic Config (Apollo) Integration Test in Java Chassis
</li>
</ul>
        
<h2>        Wish
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-746'>SCB-746</a>] -         Update Chassis from m1 to m2 in start.servicecomb.io
</li>
</ul>
    
<h2>        Task
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-506'>SCB-506</a>] -         Report the service governance event 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-693'>SCB-693</a>] -         registry microservice failed if get host address failed
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-725'>SCB-725</a>] -         support get main class package when run with &quot;java -jar xxx.jar&quot;
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-726'>SCB-726</a>] -         edge support convert from form-data or x-www-form-urlencoded to json automatically
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-728'>SCB-728</a>] -         add decrypt/signature/... to edge demo
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-729'>SCB-729</a>] -         check if instance cache equals to SC
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-733'>SCB-733</a>] -         open handlerContext for business logic, and add a new name: localContext
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-738'>SCB-738</a>] -         delete microservice from MicroserviceManager after it not exist in SC
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-762'>SCB-762</a>] -         resolve eclipse compile warnings
</li>
</ul>
                                                                                                                                        
###  NOTE : It is highly recommended to use [Service-Center 1.0.0](https://github.com/apache/incubator-servicecomb-service-center/releases/tag/1.0.0) with this version of Java-Chassis  
  

#### Download links are available [here](http://servicecomb.incubator.apache.org/release/java-chassis-downloads/)",91674936
200,False,False,2018-06-14T14:31:48Z,2018-06-25T11:46:33Z,"
        Release Notes - Apache ServiceComb - Version java-chassis-1.0.0-m2
    
<h2>        Sub-task
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-137'>SCB-137</a>] -         Add new dimension of transport way for all Consumer/Producer
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-196'>SCB-196</a>] -         Add metrics for each consumer/provider handler
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-203'>SCB-203</a>] -         servlet rest support file upload
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-252'>SCB-252</a>] -         Metrics support overwatch Integration
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-370'>SCB-370</a>] -         Metrics timer (like latency) output precision must to nano level not milli level
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-383'>SCB-383</a>] -         metrics subscribe invocation life event and do statistics
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-384'>SCB-384</a>] -         provide invocation performance log publisher
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-385'>SCB-385</a>] -         metrics publisher switch to new mechanism
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-422'>SCB-422</a>] -         add executor metrics, not just queue size
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-440'>SCB-440</a>] -         Provide Maven Archetype of business-service-pojo
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-441'>SCB-441</a>] -         Provide Maven Archetype of business-service-jaxrs
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-442'>SCB-442</a>] -         Provide Maven Archetype of business-service-springmvc
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-445'>SCB-445</a>] -         delete old metrics mechanism
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-446'>SCB-446</a>] -         metrics-prometheus switch to new mechanism
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-450'>SCB-450</a>] -         documents for metrics initializer/publisher, and how to extend
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-462'>SCB-462</a>] -         cloud eye publisher switch to new mechanism
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-470'>SCB-470</a>] -         Provide Maven Archetype of business-service-spring-boot-starter
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-483'>SCB-483</a>] -         springmvc over transport rest vertx support file download
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-484'>SCB-484</a>] -         servlet rest support download
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-485'>SCB-485</a>] -         jaxrs mode support file download
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-486'>SCB-486</a>] -         edge support route file download invocation
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-487'>SCB-487</a>] -         consumer support download file
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-494'>SCB-494</a>] -         support delete temp file after download
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-501'>SCB-501</a>] -         document for download
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-527'>SCB-527</a>] -         Reorganization All Archetype For Enable Auto Publish
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-529'>SCB-529</a>] -         producer download file from byte[]
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-531'>SCB-531</a>] -         x-java-interface change from require to optional
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-532'>SCB-532</a>] -         support recursive dependence
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-533'>SCB-533</a>] -         javassistUtils create class from CtClass, not only JavaType
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-534'>SCB-534</a>] -         generic class generate optimize
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-538'>SCB-538</a>] -         create SwaggerToClassGenerator to convert swagger to class
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-540'>SCB-540</a>] -         Delete archetypes from java-chassis-dependencies
</li>
</ul>
        
<h2>        Bug
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-72'>SCB-72</a>] -         Can isolation information of provider and consumer been discovered through capability of release and subscription?
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-449'>SCB-449</a>] -         Typo in LICENSE
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-455'>SCB-455</a>] -         Base on 1.0.0-m2-SNAPSHOT version, execution of the metrics UT failed 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-474'>SCB-474</a>] -         使用zuul做网关进行路由，当同一个微服务接口同时开放rest和highway方式时，出现无法调用情况。
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-481'>SCB-481</a>] -         Fix qps handler assertion errors when schemaid or microservice name contails . (dot)
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-495'>SCB-495</a>] -         Compile java-chassis 1.0.0-m2-SNAPSHOT failed
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-502'>SCB-502</a>] -         logs日志没有输出
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-503'>SCB-503</a>] -         When using WeighedResponseTimeRule, there are some initialize and stateless access problems
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-507'>SCB-507</a>] -         poll task in MetricsBootstrap did not really measure meters
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-512'>SCB-512</a>] -         download support chinese file name
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-516'>SCB-516</a>] -         AccessLog of EdgeService does not print traceId
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-520'>SCB-520</a>] -         resolve service with env re-registered will fail
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-521'>SCB-521</a>] -         change the priority of ServiceComb config and SpringBoot config
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-562'>SCB-562</a>] -         Java Chassis will throw NPE when producer impl do not contain any method
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-567'>SCB-567</a>] -         treat warning as errors, modify the compilerArgments
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-579'>SCB-579</a>] -         NullPointerException is thrown when consumer upload null
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-580'>SCB-580</a>] -         When upload file size exceeds limitation of provider, consumer will return a confusing response
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-587'>SCB-587</a>] -         Fix archetypes readme
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-588'>SCB-588</a>] -         Set archetypes sourceEncoding to UTF-8
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-591'>SCB-591</a>] -         configcenter need to do encode
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-593'>SCB-593</a>] -         Change log level to remind user to specify loadbalance handler
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-597'>SCB-597</a>] -         update spring boot version from 1.4.5 to 1.5.12 in starter archetype
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-617'>SCB-617</a>] -         graceful shutdown with standalone tomcat
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-652'>SCB-652</a>] -         Fix schema registry environment configuration
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-653'>SCB-653</a>] -         When provider returns Transfer-Encoding header and Edge will cause problem
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-654'>SCB-654</a>] -         DiscoveryTree has concurrency problems.
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-656'>SCB-656</a>] -         When provider returns non 200 code Edge Service will all convert to 502
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-658'>SCB-658</a>] -         leak of MicroserviceVersions register to EventBus
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-659'>SCB-659</a>] -         Fix build failed in Springmvc Integration Test
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-667'>SCB-667</a>] -         gracefully shutdown is not work in some case
</li>
</ul>
        
<h2>        New Feature
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-6'>SCB-6</a>] -         ServiceComb Java Chassis Metrics
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-136'>SCB-136</a>] -         Improvement and New Features of Java Chassis Metrics in version 1.0.0-m2
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-201'>SCB-201</a>] -         As a SDK user, I want to send file/stream data so that I can use ServiceComb to handle the music or image data
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-257'>SCB-257</a>] -         As a developer, I want to download file from microservice
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-285'>SCB-285</a>] -         consumer cache schemas
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-292'>SCB-292</a>] -         As a developer, I want to use annotation to validate input parameter
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-345'>SCB-345</a>] -         As a developer, i want to use the openssl engine instead of jdk ssl engine to improve ssl/tls performance, so that java chassis has to support config
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-406'>SCB-406</a>] -         Chassis must support standard parameter validation handler
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-439'>SCB-439</a>] -         Provide Maven Archetypes in Java Chassis
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-482'>SCB-482</a>] -         Http2 support for java chassis
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-582'>SCB-582</a>] -         Provide a way to protection for instance removal
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-607'>SCB-607</a>] -         Support printing invocation context in access log
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-611'>SCB-611</a>] -         Provide a default Edge service dispatcher to make developer edge easy
</li>
</ul>
        
<h2>        Improvement
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-350'>SCB-350</a>] -         Vertx ssl file config error execption approvement
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-355'>SCB-355</a>] -         As a operator, when sdk config a fault ak/sk on HuaweiCloud, then will auth token fail, but it continues to register, will cause may fault in server
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-373'>SCB-373</a>] -         As a developer, i want to do something around serialize/deserialize, so that we should make a  aspect to eanable others can do this work
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-431'>SCB-431</a>] -         Add Rat check on the travis CI
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-444'>SCB-444</a>] -         try to optimize autodiscovery function
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-447'>SCB-447</a>] -         optimize SPIServiceUtils to avoid get different instance for the same type
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-467'>SCB-467</a>] -         Contributing &amp; Reporting Issues in java-chassis README.md is not direct to any contents
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-477'>SCB-477</a>] -         sdk guava‘s version need to update from 16.0.1 to 19.0
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-488'>SCB-488</a>] -         Retry/Metrics some default behavior cause unnecessary retry and logs
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-498'>SCB-498</a>] -         Configuration Center IP Addresses need to meet general specifications
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-514'>SCB-514</a>] -         update pom and code, so that we can treat warnings as errors
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-517'>SCB-517</a>] -         service center starter for spring boot/cloud improvement
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-518'>SCB-518</a>] -         ServiceCenter ip address need to config default port
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-523'>SCB-523</a>] -         maven-remote-resource-plugin execute very slow
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-526'>SCB-526</a>] -         When creating dynamic configuration, we need to fetch once for the configuration when startup
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-543'>SCB-543</a>] -         optimize registry procedure
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-546'>SCB-546</a>] -         As a developer, want to reregistry schemas in the dev environment
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-548'>SCB-548</a>] -         Support Gracefully Shutdown
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-570'>SCB-570</a>] -         reformat  everything
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-576'>SCB-576</a>] -         javassist License file need to be updated
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-585'>SCB-585</a>] -         Add ServiceComb-java-chassis reference guide to project
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-625'>SCB-625</a>] -         ProduceProcessor use SPI to support extends
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-627'>SCB-627</a>] -         Java Chassis- Client Request Timeout support for operation/schema/service level
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-636'>SCB-636</a>] -         As a OM staff, i want to use the lb endpoint as the servicecenter/configcenter address config
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-646'>SCB-646</a>] -         if local swagger exists, not generate swagger according to class
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-649'>SCB-649</a>] -         when port can&#39;t been listened,log warn and show more detail message
</li>
</ul>
        
<h2>        Wish
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-504'>SCB-504</a>] -         Upgrade to Spring boot 1.5.12.RELEASE
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-515'>SCB-515</a>] -          change all configuration from &#39;cse.xxx&#39; to &#39;servicecomb.xxx&#39;
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-672'>SCB-672</a>] -         Edge Service support calls from different ApplicationIds
</li>
</ul>
    
<h2>        Task
</h2>
<ul>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-324'>SCB-324</a>] -         Chassis must support network failure simulation, so that I can developers can enhance the robustness of the app
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-352'>SCB-352</a>] -         Support operation level flow control on provider side
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-354'>SCB-354</a>] -         metrics上报的统计数据可能需要支持加上业务自己的维度，方便统计分析，比如APP版本，机型等，业务可以把参数作为invocation参数传递到框架，需要框架支持
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-420'>SCB-420</a>] -         Change default HTTP header length restriction to 32K
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-424'>SCB-424</a>] -         Get configuration interface to add header: x-environment
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-443'>SCB-443</a>] -         Fix randomly UT failure of TestProviderQpsFlowControlHandler
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-453'>SCB-453</a>] -         Read configuration from application.yml/application.properties
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-456'>SCB-456</a>] -         Provider a way to input configuration from a Map, instead of  micreservice.yaml
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-457'>SCB-457</a>] -         Verify if gradle can manage the ServiceComb java Chassis jars in a remote or local maven repository
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-471'>SCB-471</a>] -         vertx upgrade causes use config center push mode error 
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-478'>SCB-478</a>] -         revert netty&#39;s version to 4.1.17 and vertx&#39;s version to 3.5.0
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-509'>SCB-509</a>] -         Update jackson&#39;s version to 2.9.5
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-542'>SCB-542</a>] -         Update netty&#39;s version to 4.1.24
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-589'>SCB-589</a>] -         allow consumer upgrade before producer
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-590'>SCB-590</a>] -         Update the validator version to latest(6.0.2)
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-599'>SCB-599</a>] -         Service registry failed when service before Service Center start
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-601'>SCB-601</a>] -         ServiceComb integrated to spring boot or tomcat will print too many logs
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-637'>SCB-637</a>] -         enhance HttpServletRequestEx impl
</li>
<li>[<a href='https://issues.apache.org/jira/browse/SCB-647'>SCB-647</a>] -         Update LICENSE/NOTICE for release
</li>
</ul>

###  NOTE : It is highly recommended to use [Service-Center 1.0.0-m2](https://github.com/apache/incubator-servicecomb-service-center/releases/tag/1.0.0-m2) with this version of Java-Chassis  
  

#### Download links are available [here](http://servicecomb.incubator.apache.org/release/java-chassis-downloads/)
                                                                                                                                    ",91674936
201,False,False,2018-03-26T13:25:13Z,2018-04-23T09:49:01Z,"
### Major improvements:

 - Java Chassis can now use Apollo as configuration center. Users can now
change configurations like load balancing policy and those changes will
come into effect on the fly.
See [here](http://servicecomb.incubator.apache.org/users/dynamic-config/) for more
details.

 - Metrics was re-factored. We now uses events for collecting invocation data
instead of Hystrix. This reduces the performance penalty of computing
metrics.
Metrics can now be fetched via '/metrics' using HTTP.
See [here](http://servicecomb.incubator.apache.org/users/metrics-in-1.0.0-m1/) for
more details.

### Other Noticeable Changes:

- The Java Chassis libraries are now under group ""org.apache.servicecomb"".
- We provide out of the box metrics support now. Prometheus is supported.
- Configuration center was re-factored and moved out from foundation.
Support for Apollo was added.
- Users can now use Object type for calling services.
- Users can now use Generics for calling services.
- Better integration with Spring MVC.
- Upgraded to zipkin2 internally, Java Chassis can now work with zipkin
server v1 and v2.
- We are in the process of supporting reactive programming. Pojo consumer
and provider now supports CompletableFuture.

### For more detailed information please checkout [here](https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12321626&version=12342351)

### Download links are available [here](http://servicecomb.incubator.apache.org/release/java-chassis-downloads/)",91674936
202,False,False,2017-12-05T11:04:34Z,2017-12-08T06:21:37Z,"#### ChangeLog

- Fix the concurrent issue of  RSAConsumerTokenManager createToken  [\#349](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/349) 
- JAV-550 support use \_ to represent system environment variable config levels [\#348](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/348) 
- make the constructor private for the singleton pattern [\#347](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/347) 
- JAV-546 register an anonymous subscriber to listen to instance registry event and trigger AFTER\_REGISTRY event [\#346](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/346) 
- Skip redundant check by Travis [\#344](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/344) 
- remove unused code of TestJavassistUtils and make it readable  [\#337](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/337) 
- JAV-543 Fix dns resolve [\#334](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/334) 
- Update Configuration.java [\#333](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/333) 
- JAV-501 Public key authentication between consumer and provider [\#330](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/330) 
- fix turnoff Metrics log func [\#328](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/328)
- simplified implementations by using method reference and lambda [\#322](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/322) 
- used finally to execute common codes [\#319](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/319) 
- Rename function name [\#318](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/318) 
- Jav 529 dubbo migration [\#317](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/317) 
- JAV-245 content-type convert to low case  && accept Type … [\#315](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/315) 
- JAV-503 optimize logic of load balance isolation [\#306](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/306) 
- \[JAV-527\]keepalive, idle timeout and poolsize give configuration support [\#303](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/303) 
- JAV-526 Writing metric data into files [\#300](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/300) 
- add-edge-to-distribution [\#299](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/299) 
- JAV-524 Optimize edge executor [\#297](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/297) 
- JAV-416 expose and publish metrics using servo [\#292](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/292) 
- JAV-495 Set default URL pattern [\#291](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/291) 
- JAVA-539 cse.request.timeout support dynamic refresh [\#286](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/286) 
- Update the sample server listen to 8889 [\#284](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/284) 
- JAV-505 HttpServletReqeust.getContextPath returns the default value """" [\#278](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/278) 
- \[JAV-504\] instance not unregistered when shutdown and auto-discovery … [\#276](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/276) 
- JAV-491 Url with servicename [\#274](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/274) 
- JAV-496 Async servlet timeout will cause 500 error [\#271](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/271) 
- JAV-358 Operation filter [\#268](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/268) 
- JAVA-421 use the new style of loadbalance rule invalid [\#266](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/266) 
- JAV-492 Edge service not properly handle 404 requests [\#264](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/264) 
- JAV-479 Discovery optimize [\#261](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/261) 
- JAV-497 gen schema by APIResponse annotation lack of message infomation [\#260](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/260) 
- removed useless abstract class [\#259](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/259) 
- update the name of CodeFirstJaxrsHelloImpl.java [\#258](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/258) 
- JAV-151 Local registry support version rule [\#257](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/257) 
- minor changes of service interface in bmi [\#253](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/253) 
- JAV-493 send form data must use urlcoding and remove null value to send [\#250](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/250) 
- \[JAV-490\]Fix the rest address binding logic. [\#248](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/248) 
- JAV-489 resolve Edge service return Cotent-Length error [\#247](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/247) 
- show call time and instance id in bmi page. [\#246](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/246) 
- Update AbstractPropertiesLoader.java [\#242](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/242) 
- Update EdgeInvocation.java [\#241](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/241) 
- JAV-228 hidden method should be skipped in swagger method lookup [\#239](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/239) 
- simplified code [\#235](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/235) 
- JAV-469 Edge lb new instance cache manager [\#232](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/232) 
- fixed typo [\#245](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/245)  [\#244](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/244) [\#243](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/243) [\#321](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/321)  [\#320](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/320) [\#323](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/323) [\#282](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/282) 

",91674936
203,False,False,2017-10-28T10:08:28Z,2017-10-30T01:40:59Z,"
### ChangeLog
- JAV-474 fix servlet timeout concurrent problems [\#231](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/231) ([wujimin](https://github.com/wujimin))
- JAV-47 resolve if Invocation has an exception, then has no respose [\#230](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/230) ([jeho0815](https://github.com/jeho0815))
-  \[JAV-461\]service center API change. URI using domain and header using project [\#228](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/228) ([liubao68](https://github.com/liubao68))
- JAV-473 fix usage of HttpServerFilter.afterReceiceRequest result [\#227](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/227) ([wujimin](https://github.com/wujimin))
- JAV-472 fix rest produce select bug [\#226](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/226) ([wujimin](https://github.com/wujimin))
- udpate setup environment url [\#225](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/225) ([kangfoo](https://github.com/kangfoo))
- \[JAV-461\]service center API change. we make it v4 as default as CI only support v4. [\#219](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/219) ([liubao68](https://github.com/liubao68))
- \[JAV-399\]\[JAV-193\]load balance support configure rules using literal … [\#213](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/213) ([liubao68](https://github.com/liubao68))
- JAV-357 Meta in special classloader [\#212](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/212) ([wujimin](https://github.com/wujimin))
- Return error to travis CI if maven commands failed [\#209](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/209) ([asifdxtreme](https://github.com/asifdxtreme))
- JAV-462 removed useless files and unnecessary dependencies in bmi sample [\#208](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/208) ([eric-lee-ltk](https://github.com/eric-lee-ltk))
- JAV-454 enhanced cache manager [\#207](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/207) ([wujimin](https://github.com/wujimin))
- \[JAV-461\]service center API change [\#206](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/206) ([liubao68](https://github.com/liubao68))
- \[JAV-459\]added header for qps to work with zuul [\#205](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/205) ([eric-lee-ltk](https://github.com/eric-lee-ltk))
- JAV-453 support version rule [\#201](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/201) ([wujimin](https://github.com/wujimin))
- Update Timer.java [\#200](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/200) ([bruce1991](https://github.com/bruce1991))
- Update RegistryUtil.java [\#199](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/199) ([a1154043439](https://github.com/a1154043439))
- JAV-409 Fix JavaDoc Error for Spring-Cloud-Zuul-Zipkin [\#197](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/197) ([asifdxtreme](https://github.com/asifdxtreme))
- \[Issue 203\]support sign auth for rest request [\#196](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/196) ([donglzh168](https://github.com/donglzh168))
- JAV-409 Automate the signing of release on tagged commit [\#195](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/195) ([asifdxtreme](https://github.com/asifdxtreme))
- Jav 439 support raw json annotation [\#194](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/194) ([zhengyangyong](https://github.com/zhengyangyong))
- \[JAV-442\]add PULL support between SDK and service center [\#193](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/193) ([liubao68](https://github.com/liubao68))
- JAV-402 add model field json ignore test [\#192](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/192) ([zhengyangyong](https://github.com/zhengyangyong))
- JAV-318 added switch for tracing [\#189](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/189) ([eric-lee-ltk](https://github.com/eric-lee-ltk))",91674936
204,False,False,2017-10-11T11:43:30Z,2017-10-13T10:37:26Z,"
- Report error instead of warning if rest/highway address format is invalid [\#187](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/187) 
- JAV-423 RESTful deserialization should ignore unknown properties automatically [\#186](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/186) 
- JAV-434 Upgrade jackson from 2.8.1 to 2.8.10 [\#185](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/185) 
- JAV-432 Implement get custmon address\(remote address\) [\#184](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/184) 
- JAV-430 Standarized constants naming [\#182](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/182)
- JAV-397 Add automatic signing of release on tagged builds [\#181](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/181)
- fixed typos and removed unnecessary imports [\#180](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/180) 
- JAV-403 ignored non-rest style interfaces using @RestSchema [\#179](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/179) 
- JAV-425 avoid implicit spring bean dependencies [\#178](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/178)
- JAV-426 Clean up the third party dependenices [\#176](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/176)
- JAV-389 Add spanName and callPath attribute in the span annotation. [\#175](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/175)
- JAV-427 Fixed the demo docker run issue on Mac [\#174](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/174) 
- JAV-406 add fallback from cache and used customized cache strategies [\#172](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/172) 
- JAV-389 changed from log waiting to tcp polling [\#171](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/171)
- JAV-398 support SpringMVC simplified annotations [\#170](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/170)
- JAV-389 custom tracing [\#169](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/169) 
- JAV-421 Add support for template type for compatibility [\#168](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/168)
- JAV-418 transport rest client optimize [\#166](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/166)
- JAV-415 Update Spring dependency from 4.3.4.RELEASE to 4.3.5.RELEASE [\#165](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/165) 
- JAV-401 fix typo [\#164](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/164) 
- JAV-408 Event manager added for chassis events [\#163](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/163)
- JAV-417 Handle EXPIRED event send by SC and remove unused code InstanceVersionCacheManager [\#162](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/162)
- JAV-355 Extract rest invocation [\#161](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/161) 
- \[Body Type\]Take non-JSON body as plain text [\#159](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/159)
- JAV-369 Vertx rest signature [\#158](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/158) 
- JAV-349 Unify http request [\#152](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/152) 
- JAV-392 default version supports configuration and environment supp… [\#151](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/151) 
- JAV-354 Servlet rest signature [\#148](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/148) 
- JAV-382 Sorted spi services [\#147](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/147) 
- added profiles for samples [\#146](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/146)
- JAV-259 move ArchaiusUtils to foundation-test-scaffolding [\#144](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/144) 
- throws exception with invalid input [\#143](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/143) 
- \[JAV-364\]add more details message when loadbalance not configured in … [\#141](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/141)
- JAV-352 Placeholder in path annotation [\#139](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/139)
- \[\# 130\]fix samples error [\#131](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/131)
- added bmi sample for quick start guide [\#129](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/129)
- \[JAV-348\]http header extensions support and java.lang.Error cause app… [\#128](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/128)
- JAV-151 Code style [\#125](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/125)
- [JAV-166]Read the Microservice meta before register the service[\#124](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/124) 
- JAV-150 Contract deployment decoupling [\#122](https://github.com/ServiceComb/ServiceComb-Java-Chassis/pull/122)",91674936
205,False,False,2017-08-18T12:55:27Z,2017-08-21T05:57:51Z,"- Auto choose same name transport [\#110](https://github.com/ServiceComb/java-chassis/pull/110) 
- JAV-163 zuul tracing [\#86](https://github.com/ServiceComb/java-chassis/pull/86) 
- Assert rpc invocation cannot start before sdk init [\#120](https://github.com/ServiceComb/java-chassis/pull/120)
- Consumer init optimize completely [\#119](https://github.com/ServiceComb/java-chassis/pull/119) 
- Schema meta should not check if method exists [\#118](https://github.com/ServiceComb/java-chassis/pull/118)
- JAV-304 No error when provider starts up with unsupported return type… [\#117](https://github.com/ServiceComb/java-chassis/pull/117) 
- resolve compile warnings [\#115](https://github.com/ServiceComb/java-chassis/pull/115)
- Unified servlet init [\#114](https://github.com/ServiceComb/java-chassis/pull/114) 
- JAV-286 add protect feature when call remote calls in bean initializ… [\#113](https://github.com/ServiceComb/java-chassis/pull/113) 
- remove-transport-manager-unused-code [\#112]
- JAV-103 resolve PropertyPlaceholderConfigurer conflict [\#111]
- JAV-280 1. init client and setup to avoid deadlock; 2. avoid NetUtil… [\#109](https://github.com/ServiceComb/java-chassis/pull/109)
- JAV-281 cann't reconnect to SC at retry thread. [\#108](https://github.com/ServiceComb/java-chassis/pull/108)
- Fix output of pojo consumer. [\#107](https://github.com/ServiceComb/java-chassis/pull/107)
- JAV-264support zone aware load balance features [\#106](https://github.com/ServiceComb/java-chassis/pull/106)
- JAV-238 delayed tracing not to include processing of other filters [\#104](https://github.com/ServiceComb/java-chassis/pull/104)
- JAV-246 sc code reliable issues, check issue for details [\#103](https://github.com/ServiceComb/java-chassis/pull/103)
- JAV-235 resolve the query/path parameter encoding issue, and the body encoding issue [\#101](https://github.com/ServiceComb/java-chassis/pull/101)
- JAV-222 when register schema failed, can not find the reason from log. [\#100](https://github.com/ServiceComb/java-chassis/pull/100) ([wujimin](https://github.com/wujimin))
- JAV-108 project structure suitable for release [\#99](https://github.com/ServiceComb/java-chassis/pull/99)
- JAV-141 resolve spelling mistake for configuration item problem [\#98](https://github.com/ServiceComb/java-chassis/pull/98)
- JAV-221 make vertx eventloop thread name related to vertx name [\#97](https://github.com/ServiceComb/java-chassis/pull/97)
- Configuration of config center url [\#96](https://github.com/ServiceComb/java-chassis/pull/96)
- JAV-211 APPLICTION\_ID & microservice name can not use any java packag… [\#95](https://github.com/ServiceComb/java-chassis/pull/95)
- JAV-90 conflicting transports in spring boot starters [\#94](https://github.com/ServiceComb/java-chassis/pull/94)
- Highway performance [\#93](https://github.com/ServiceComb/java-chassis/pull/93)
- JAV-174 Adding the index parameter for the application developer  [\#92](https://github.com/ServiceComb/java-chassis/pull/92)
- JAV-129 supporting both cse & servicecomb in config properties [\#91](https://github.com/ServiceComb/java-chassis/pull/91)
- JAV-214 avoid NullPointerException in register task, let it try to register again [\#90](https://github.com/ServiceComb/java-chassis/pull/90) 
- JAV-88 springmvc spring provider test [\#89](https://github.com/ServiceComb/java-chassis/pull/89) 
- JAV-88 pojo spring transport test [\#88](https://github.com/ServiceComb/java-chassis/pull/88) 
- JAV-88 added pojo tests [\#85](https://github.com/ServiceComb/java-chassis/pull/85)
- JAV-88 added provider test of jaxrs spring [\#80](https://github.com/ServiceComb/java-chassis/pull/80) 
- JAV-202 delete unused line [\#79](https://github.com/ServiceComb/java-chassis/pull/79)
- Jav 124 tracing highway [\#78](https://github.com/ServiceComb/java-chassis/pull/78)
- JAV-174 change the public method of the developer [\#76](https://github.com/ServiceComb/java-chassis/pull/76)
- JAV-165 check the schema version to avoid service registration more than once [\#75](https://github.com/ServiceComb/java-chassis/pull/75) 
- JAV-88 added springmvc tests to verify springmvc endpoints only [\#74](https://github.com/ServiceComb/java-chassis/pull/74) 
",91674936
206,False,False,2017-07-07T03:12:59Z,2017-07-10T02:08:32Z,"Story
[JAV-99] - multiple microservice-configuration
[JAV-107] - Retryable remote service loading
[JAV-123] - tracing of rest transport
[JAV-147] - RestTemplate支持扩展
Task
[JAV-132] - unit test optimize and resolve compile warnings
Bug
[JAV-98] - extra ""/"" appended when using root as controller base path
[JAV-130] - servicecomb swagger checkType is so strict
[JAV-133] - RegistryUtils: placeholder in publish address is network interface name, not host name
[JAV-136] - 在发生异常，执行fallback的时候，没有打印原始异常，问题定位非常不方便
Sub-task
[JAV-139] - jaxrs demo refactoring",91674936
207,False,True,2017-06-19T01:12:17Z,2017-06-19T03:35:38Z,"Story
[JAV-30] - service discovery for zuul using java chassis
[JAV-45] - standardize version of spring cloud components
Task
[JAV-92] - create a pom profile to make demos can run by java -jar xxx.jar
Bug
[JAV-104] - spring boot starter discovery returned caller service instead of remote callee address",91674936
208,False,True,2017-06-04T16:23:37Z,2017-06-19T03:32:14Z,"This is the first mile stone release of Java Chassis 0.1.0.
",91674936
209,False,True,2019-12-04T13:56:19Z,2019-12-04T14:41:52Z,"This is next major release of Go! AOP that contains some improvements and uses new code features for better performance and stability.

Notable changes are:
* [BC BREAK] Switched to the PHP7.2 and upper, strict types, return type hints and new syntax
* [BC BREAK] Removed the Joinpoint->getThis() method, as not all joinpoints belongs to classes (eg. FunctionInvocation)
* [BC BREAK] Removed the Joinpoint->getStaticPart() method as it can return anything, better to use explicit methods 
* [Feature] Introduced the new ClassJoinpoint interface with getScope(), getThis() and isDynamic() methods
* [Feature] Implemented parameter widening feature for generated code #380
* [Feature] AnnotatedReflectionProperty provides simple access to property annotations #388 by @TheCelavi
* [Feature] Switched to the `zendframework/zend-code` package to generate code for proxies
* [Feature] Add private properties interception #412",1416156
210,False,False,2019-08-13T12:58:30Z,2019-12-04T13:30:28Z,This is a patch release with #425 bug fix.,1416156
211,False,False,2019-08-01T07:06:56Z,2019-08-01T07:18:24Z,"Patch release that contains several small fixes

 - Fixed call to undefined method with new PhpParser for 2.x branch #419 
 - Finder glob pattern #421 
 - Fix memory leaks and late object disposal #423  
",1416156
212,False,False,2019-01-05T21:55:35Z,2019-01-13T12:00:49Z,"This minor release introduces some fixes:
  - Fix error with ""self"" references in top level namespace #397 
  - Use Symfony Finder component for faster enumeration #402  
  - [BC Break] Update `goaop/parser-reflection` dependency to 2.0+ #403

Please, be aware that #403 bumps the PHP minimum version for 2.x branch to be >=7.0.0. As minimum supported PHP version now is 7.2, I decided to drop 5.6 for 2.x branch too.

In emergency cases 2.3.1 patch can be released.",1416156
213,False,False,2018-01-05T23:07:51Z,2018-02-09T12:20:04Z,"This version introduces latest minor release in 2.x branch. Only security fixes and bug patches will be applied to the 2.x since current release.

Fixes:
 - [x] AdviceMatcher should reject abstract method as fix for #335, #337 
 - [x] Fix wrong checking of member modifiers for static members, resolves #293 
 - [x] Feature/detecting inconsistent weaving #346
 - [x] Fix incorrect optimization logic for transformers, resolves #355
 - [x] Introduce an option to configure cached reader for annotations, resolves #136, #358 and #245

Improvements:
 - [x] Replace unsupported HHVM with supported PHP7.2 in Travis matrix
 - [x] Inline definition of advices into classes and beautify formatting
 - [x] Improve PhpUnit integration and prepare reusable constraints, resolves #340 #350 
 - [x] Add support for class initializations asserts. #354
 - [x] Apply short array syntax for files in 2.x branch
 - [x] Performance tuning

Features:
 - [x] Implementation of AST+token modification instead of direct source transforming #362. Be aware, that this feature can reduce the speed of proxy generation because of switching to the AST analysis.
 - [x] Implement return-type pointcuts for the framework, #370 #371. Now you can match methods by return type.
 - [x] Interception of final methods, resolves #372 #373. Yes, now you can intercept final methods in your classes with Go! AOP.

BC breaks on code level:
 - [x] d0c11d06aba419a4ce2bbedd89c7e4957352ac46 Simplify interface of IntroductionAdvisor, also allow only one interface/trait per introduction.",1416156
214,False,False,2017-07-18T11:45:18Z,2017-07-18T11:49:15Z,"This small patch introduces following fixes, thanks to @TheCelavi:
 - [x] Implement workaround for Doctrine entities with metadata listener #327
 - [x] CLI commands can be owerwritten for transparent integration with frameworks #330",1416156
215,False,False,2017-04-25T11:27:19Z,2017-04-25T12:30:39Z,"Small patch version with fixes
 - [x] Fix `fnmatch` issue on Windows machine #326
 - [x] Fix incorrect usage of CachedAspectLoader when cache is not configured #319",1416156
216,False,False,2017-02-04T16:00:52Z,2017-02-04T16:16:09Z,"Version 2.1.0 enables support for PHP7.1. As well it provides some useful features for you applications:
- [x] Add support for the nullable types in PHP7.1, see #309, #314
- [x] Add support for the `void` return types for PHP7.1, see #307
- [x] Update the requirement for the `goaop/parser-reflection` library to use the latest version with PHP7.1 support.  
- [x] Add a fix for non-absolute paths returned from the composer since PHP5.6 #295 
- [x] Add an ability to update invocation arguments via `Invocation->setArguments()` method #297 
- [x] Enable wildcard paths for the Enumerator, e.g `/*Bundle/*/Tests`, see #300 
- [x] Allow to pass an exception as a second argument to the invocation for the `AfterThrowing` type of adivce, see #302 
",1416156
217,False,False,2017-02-04T15:33:03Z,2017-02-04T15:50:43Z,"Version 1.2.0 is a minor release with one new feature and several fixes:
- [x] Add an ability to update invocation arguments in advices, see #297 
- [x] Restrict the `1.x` branch only to the PHP5.5, because `andrewsville/php-token-reflection` can work only with PHP=<5.5 and is not maintained anymore, see #305
- [x] Fix broken logic of pattern matching for `includePath` and `excludePath` options, see #300, #311

Please, note, that the branch `1.x` **will not receive any new features** and you should plan your time to upgrade to the `2.x` versions.
",1416156
218,False,False,2016-05-14T12:17:38Z,2016-05-14T12:24:03Z,"Here it is! Shiny 2.0.0 version!

This version contains a lot of fixes and improvements:
- [x] Added a support for the PHP5.6 and 7.0 features: variadic arguments for methods, scalar type hints, return type hints
- [x] Migrated from the `Andrewswille/Token-Reflection` to the `goaop/parser-reflection` library for PHP5.6 and PHP7.0 support
- [x] Command-line tools for debugging aspects and advisors
- [x] Dropped support for PHP<5.6, cleaned all old code
- [x] [BC BREAK] Removed ability to rebind closures because of PHP restrictions, see #247
- [x] [BC BREAK] Removed getDefaultFeatures() method from the AspectKernel, no need in it since PHP5.6

Changes from the 1.x branch:
- [x] Fixed cache files permission, now all cache files will be created with given cache mode, resolves #275 
- [x] Added context-sensitive matching that allows new checks #274 and resolves #272 by providing a new pointcut expression `!matchInherited()` to exclude all inherited methods from matching
- [x] Fixed logic for complex pointcut expressions, combined with OR logic, resolves #217
- [x] Fixed broken property interception generated source code for the constructor, resolves #271
- [x] Property interceptor now use trait for common logic as well returns values by reference, see #54 and #232 

Pay attention, that some internal parts are changed, so be careful when updated. Also property interceptors logic is changed now and to modify values in advices, you should use returning by reference methods like following:

``` php
    /**
     * Advice that controls an access to the properties
     *
     * @param FieldAccess $fieldAccess Joinpoint
     *
     * @Around(""access(public|protected Demo\Example\PropertyDemo->*)"")
     * @return mixed
     */
    public function aroundFieldAccess(FieldAccess $fieldAccess)
    {
        $isRead = $fieldAccess->getAccessType() == FieldAccess::READ;
        // proceed all internal advices
        $fieldAccess->proceed();

        if ($isRead) {
            // if you want to change original property value, then return it by reference
            $value = /* & */$fieldAccess->getValue();
        } else {
            // if you want to change value to set, then return it by reference
            $value = /* & */$fieldAccess->getValueToSet();
        }

        echo $fieldAccess, "", value: "", json_encode($value), PHP_EOL;
    }
```
",1416156
219,False,False,2016-05-14T12:02:48Z,2016-05-14T12:07:38Z,"This version contains several important fixes and improvements:
- [x] Fixed cache files permission, now all cache files will be created with given cache mode, resolves #275 
- [x] Added context-sensitive matching that allows new checks #274 and resolves #272 by providing a new pointcut expression `!matchInherited()` to exclude all inherited methods from matching
- [x] Fixed logic for complex pointcut expressions, combined with OR logic, resolves #217
- [x] Fixed broken property interception generated source code for the constructor, resolves #271
- [x] Property interceptor now use trait for common logic as well returns values by reference, see #54 and #232 

Pay attention, that some internal parts are changed, so be careful, when updated. Also property interceptors logic is changed now and to modify values in advices, you should use returning by reference methods like following:

``` php
    /**
     * Advice that controls an access to the properties
     *
     * @param FieldAccess $fieldAccess Joinpoint
     *
     * @Around(""access(public|protected Demo\Example\PropertyDemo->*)"")
     * @return mixed
     */
    public function aroundFieldAccess(FieldAccess $fieldAccess)
    {
        $isRead = $fieldAccess->getAccessType() == FieldAccess::READ;
        // proceed all internal advices
        $fieldAccess->proceed();

        if ($isRead) {
            // if you want to change original property value, then return it by reference
            $value = /* & */$fieldAccess->getValue();
        } else {
            // if you want to change value to set, then return it by reference
            $value = /* & */$fieldAccess->getValueToSet();
        }

        echo $fieldAccess, "", value: "", json_encode($value), PHP_EOL;
    }
```
",1416156
220,False,False,2016-04-08T07:02:54Z,2016-03-08T07:04:31Z,"Patch release fox fixing the issue #259, which dramatically reduce the performance of the framework. 
",1416156
221,False,False,2016-02-13T14:56:30Z,2016-02-13T15:04:59Z,"1.0.0 (Feb 13, 2016)
- Dropped support for PHP<5.5, clean all old code
- Tagged public methods and interfaces with @api tag. No more changes for them in future.
- Refactored core code to use general interceptors for everything instead of separate classes
- New static initialization pointcut to intercept the moment of class loading
- New feature to intercept object initializations, requires INTERCEPT_INITIALIZATIONS to be enabled
- [BC BREAK] remove class() pointcut from the grammar #189
- [BC BREAK] make within() and @within() match all joinpoints #189
- [BC BREAK] drop @annotation syntax. Add @execution pointcut
- Pointcuts can be build now directly from closures via `PointcutBuilder` class
- Do not create files in the cache, if no aspects were applied to them, respects `includePath` option now
- `FilterInjector` is now disabled by default, this job for composer integration now
- Automatic opcache invalidation for cache state file
",1416156
222,False,False,2015-07-05T11:37:33Z,2015-07-28T06:44:32Z,"Minor patch to fix a bug with overwriting of original files
",1416156
223,False,False,2015-02-01T16:07:48Z,2015-02-01T19:24:22Z,"Version 0.6.0 is ready! This is probably the last 0.x release and now we are going to 1.0.0.

However, this version also includes some improvements and changes:
- Interceptor for magic methods via ""dynamic"" pointcut. This feature also gives an access for dynamic pointcuts with different checks and conditions.
- PSR-4 standard for the codebase, thanks to @cordoval 
- Added a support for splat (...) operator for more efficient advice invocation (requires PHP5.6)
- New feature system. All tunings of kernel are configured with feature-set. This breaks old configuration option `interceptFunctions=>true` use `'features' => $defaultFeatures | Features::INTERCEPT_FUNCTIONS` now
- Proxy can generate more effective invocation call with `static::class` for PHP>=5.5
- Bug-fixes with empty cache path and PSR4 code, thanks to @andy-shea
",1416156
224,False,False,2014-07-08T11:34:22Z,2014-05-24T11:52:08Z,"Version 0.5.0 of framework is ready!
- Proxies are now stored in the separate files to allow more transparent debugging
- Cache warmer command added
- Extended pointcut syntax for or-ed methods: ClassName->method1|method2(*)
- Access to the annotations from MethodInvocation instance
- Support for read-only file systems (phar, GAE, etc)
- Direct access to advisors (no more serialize/unserialize)
- New @within pointcut to match classes by annotation class
- Nice demo GUI
- Deprecate the usage of submodules for framework
- Inheritance support during class-loading and weaving
- List of small fixes and imrovements
",1416156
225,False,False,2013-11-03T10:00:46Z,2013-12-19T18:46:24Z,"1. Add minor changes for supporting CLI-mode
2. Optimization: sort list of advices only during the cache creation phase
3. Optimization: do not split a source into array of lines if there is only one class per file
",1416156
226,False,False,2013-09-19T20:04:24Z,2013-12-19T18:35:30Z,"1. Switched to doctrine/annotations package instead of doctrine/common
2. Removed the `Demo` namespace from the composer and use it only for testing.
3. Optimized injection of advices and caching of callables
4. Some fixes for supporting Symfony2 and SensioDistributionBundle
",1416156
227,False,False,2013-08-27T18:55:37Z,2013-08-27T18:57:37Z,"- Better parsing of complex ""include"" expressions for Yii (by @zvirusz)
- Support for dynamic arguments count for methods by checking for func_get_args() inside method body
- Fixed a bug with autoloaders reodering (by @zvirusz)
",1416156
228,False,False,2013-08-04T19:56:39Z,2013-08-04T20:01:13Z,"This release contains a lot of new features. Here are the short changelog for them: 
- Privileged advices for aspect: allows to access private and protected properties and methods of objects inside advice
- Full integration with composer that allows for easy configuration and workflow with AOP
- Fix some bugs with caching on Windows
- ""True"" pointcut references that gives the ability to compose a complex pointcut from a simple pointcuts.
- Pointcut now accept ""$this"" in references to point to the current aspect instance
  (Allows for abstract aspects and abstract pointcuts)
- AspectContainer interface was extracted. This gives the way to integrate with another DIC. Look at Warlock framework.
- Intercepting system functions such as `fopen()`, `file_get_contents()`, etc
- Annotation property pointcut was added
- Ability to declare multiple interfaces and/or traits with single `DeclareParent` introduction
- DeclareError interceptor was added. This can be used for generating an runtime error for methods that should not be executed
  in such a way.
",1416156
229,False,False,2020-03-08T06:43:18Z,2020-03-08T06:48:34Z,"Froxlor bugfix release 0.10.15 - frontend enhancements, more variables for templates and new Froxlor.integrityCheck() API method. See https://bit.ly/rls010",3639119
230,False,False,2020-03-06T21:15:30Z,2020-03-06T21:20:54Z,"Froxlor maintenance release 0.10.14 - frontend enhancements, more variables for templates and new Froxlor.integrityCheck() API method. See https://bit.ly/rls010",3639119
231,False,False,2020-02-07T15:44:08Z,2020-02-07T15:57:06Z,Froxlor maintenance release 0.10.13 - new php-fpm defaults and updated php.ini plus small fixes in dns and resource-calculation. See bit.ly/rls010,3639119
232,False,False,2020-01-10T16:48:18Z,2020-01-10T16:57:37Z,Froxlor maintenance release 0.10.12 - advanced custom LogFormat for webserver and awstats and some minor fixes. See bit.ly/rls010,3639119
233,False,False,2020-01-03T12:35:55Z,2020-01-03T12:44:15Z,Froxlor maintenance release 0.10.11 - apply more flags from domain to subdomains; add custom config to php-fpm pool configs; validate SSL certificates before usage and minor fixes. See bit.ly/rls010,3639119
234,False,False,2019-12-13T16:09:04Z,2019-12-13T16:32:56Z,Froxlor maintenance release 0.10.10 - new ssl-settings for domains; new API method to generate passwords according to froxlor settings and minor fixes,3639119
235,False,False,2019-12-06T10:36:57Z,2019-12-06T10:46:12Z,Froxlor maintenance release 0.10.9 - fixes for listing orders in UI and SQL error when searching certificates,3639119
236,False,False,2019-11-29T16:22:58Z,2019-11-29T16:26:54Z,"Froxlor maintenance release 0.10.8 - fixes for domain-listing in UI, adjust lets encrypt to respect api-endpoint parameters and debug flag",3639119
237,False,False,2019-11-22T15:39:14Z,2019-11-22T15:45:40Z,Froxlor maintenance release 0.10.7 - various UI fixes; corrections in mysql-access-host changing; nginx custom vhost content improvements,3639119
238,False,False,2019-11-15T16:02:48Z,2019-11-15T16:21:23Z,"Froxlor maintenance release 0.10.6. - adding search, limiting and ordering to listing() API calls; new SysLog API module an bugfixes/enhancements in Domains, SubDomains and EmailForwarders API modules",3639119
239,False,False,2019-11-01T13:27:36Z,2019-11-01T13:32:53Z,Froxlor bugfix release 0.10.5. Fixing renew check in Let's Encrypt implementation,3639119
240,False,False,2019-11-01T10:27:26Z,2019-11-01T10:34:53Z,"Froxlor maintenance release 0.10.4. adding cidr/netmask support for mysql-access-hosts, fixes in api-endpoint, Customer.add and nginx-config",3639119
241,False,False,2019-10-25T13:01:20Z,2019-10-25T13:07:19Z,"Froxlor maintenance release 0.10.3. adding TLS settings per domain, avoid logger errors if no filename is set but file-logging activated and some minor fixes for updaters",3639119
242,False,False,2019-10-18T11:59:23Z,2019-10-18T12:03:40Z,Froxlor maintenance release 0.10.2. Introducing custom vhost content for ssl-vhost only (or combined); added DomainZones.listing API-call; and force ACMEv2 for acme.sh,3639119
243,False,False,2019-10-10T12:56:57Z,2019-10-10T13:07:31Z,"Froxlor maintenance release 0.10.1. You can now allow API access on a per user basis. If you're on 0.10.0, autoupdate should work fine",3639119
244,False,False,2019-10-03T11:04:58Z,2019-10-03T11:10:24Z,"#Froxlor 0.10.0 stable release, API based, 2F, MySQL8 compatibility and much more. See bit.ly/rls010",3639119
245,False,True,2019-05-27T09:48:43Z,2019-05-27T09:50:54Z,"#Froxlor 0.10.0-rc2 release candidate, API based, 2fa and more. See bit.ly/rls0100rc2",3639119
246,False,True,2019-04-10T06:27:09Z,2019-04-10T06:57:05Z,"#Froxlor 0.10.0-rc1 release candidate, API based, 2fa and more. See bit.ly/rls0100rc2",3639119
247,False,False,2018-11-27T17:42:19Z,2018-11-27T17:45:36Z,"#Froxlor 0.9.40.1 bugfix release with Xenial support, customizable webserver logging, ACMEv2 and FPM enhancements. See http://bit.ly/rls0940",3639119
248,False,False,2018-11-10T10:42:42Z,2018-11-10T10:48:42Z,"#Froxlor 0.9.40 release with Xenial support, customizable webserver logging, ACMEv2 and FPM enhancements. See http://bit.ly/rls0940",3639119
249,False,False,2018-02-14T12:32:45Z,2018-02-14T12:35:51Z,"#Froxlor 0.9.39.5 bugfix release with Stretch support, multi-slot FPM, settings import/export and more. See http://bit.ly/rls0939",3639119
250,False,False,2018-02-13T11:24:16Z,2018-02-13T11:26:19Z,"#Froxlor 0.9.39.4 bugfix release with Stretch support, multi-slot FPM, settings import/export and more. See http://bit.ly/rls0939",3639119
251,False,False,2018-02-13T08:07:31Z,2018-02-13T08:15:40Z,"#Froxlor 0.9.39.3 maintenance release with Stretch support, multi-slot FPM, settings import/export and more. See http://bit.ly/rls0939",3639119
252,False,False,2018-02-12T06:49:41Z,2018-02-12T06:52:09Z,"#Froxlor 0.9.39.2 bugfix release with Stretch support, multi-slot FPM, settings import/export and more. See http://bit.ly/rls0939",3639119
253,False,False,2018-02-10T15:07:37Z,2018-02-10T15:12:04Z,"#Froxlor 0.9.39.1 maintenance release with Stretch support, multi-slot FPM, settings import/export and more. See http://bit.ly/rls0939",3639119
254,False,False,2018-02-06T12:14:17Z,2018-02-06T12:15:38Z,"#Froxlor 0.9.39 final release with Stretch support, multi-slot FPM, settings import/export and more. See http://bit.ly/rls0939",3639119
255,False,False,2017-12-31T10:42:50Z,2017-12-31T10:47:37Z,"Maintenance/Bugfix release 0.9.38.8, see http://bit.ly/rls09388",3639119
256,False,False,2017-01-24T09:23:22Z,2017-01-24T09:27:31Z,"#Froxlor 0.9.38.7 bugfix release. For announcement see http://bit.ly/rls09387
",3639119
257,False,False,2017-01-15T06:45:42Z,2017-01-15T06:47:39Z,"#Froxlor 0.9.38.6 bugfix release
",3639119
258,False,False,2017-01-13T18:47:26Z,2017-01-13T18:53:15Z,"#Froxlor 0.9.38.5 security bugfix release. For announcement see http://bit.ly/rls09385
",3639119
259,False,False,2016-11-27T11:17:06Z,2016-11-27T11:21:22Z,"#Froxlor 0.9.38.4 bugfix release. For announcement see http://bit.ly/rls09384
",3639119
260,False,False,2016-11-18T09:27:34Z,2016-11-18T07:42:27Z,"#Froxlor 0.9.38 final release with Let's Encrypt for panel, HSTS settings and ssl-cert overview. See http://bit.ly/rls0938
",3639119
261,False,True,2016-11-07T06:30:08Z,2016-11-07T06:33:14Z,"#Froxlor 0.9.38-rc2 release candidate with Let's Encrypt for panel, HSTS settings and ssl-cert overview. See http://bit.ly/rls0938rc1
",3639119
262,False,True,2016-10-11T05:56:57Z,2016-10-11T06:05:29Z,"Froxlor 0.9.38-rc1 release candidate with Let's Encrypt for panel, HSTS settings and ssl-cert overview. See http://bit.ly/rls0938rc1
",3639119
263,False,False,2016-08-02T06:53:38Z,2016-08-02T06:57:58Z,"#Froxlor 0.9.37 release with full DNS-editor and PowerDNS support. See http://bit.ly/rls0937
",3639119
264,False,True,2016-07-18T14:50:35Z,2016-07-18T14:55:47Z,"#Froxlor 0.9.37-rc1 release candidate with full DNS-editor and PowerDNS support. See http://bit.ly/rls0937rc1 
",3639119
265,False,False,2016-05-18T08:57:44Z,2016-05-18T09:05:29Z,"#Froxlor 0.9.36 final release with customer backup solution and Let's Encrypt improvements. Announcement see http://bit.ly/rls0936
",3639119
266,False,False,2016-04-08T11:52:56Z,2016-04-08T11:54:58Z,"#Froxlor 0.9.35.1 release with Let's Encrypt support, auto-update and more. Announcement see http://bit.ly/rls0935
",3639119
267,False,False,2016-04-08T11:02:18Z,2016-04-08T11:12:59Z,"#Froxlor 0.9.35 final release with Let's Encrypt support, auto-update and more. Announcement see http://bit.ly/rls0935
",3639119
268,False,True,2016-03-02T14:43:11Z,2016-03-02T14:50:45Z,"#Froxlor 0.9.35-rc1 first release candidate with Let's Encrypt support, auto-update and more. Announcement see http://bit.ly/rls0935rc1
",3639119
269,False,False,2016-01-18T09:57:21Z,2016-02-08T11:55:50Z,"#Froxlor 0.9.34.2 maintenance release update. Announcement see http://bit.ly/rls09341
",3639119
270,False,False,2016-01-18T07:29:48Z,2016-01-18T08:17:24Z,"#Froxlor 0.9.34.1 maintenance release. Announcement see http://bit.ly/rls09341 
",3639119
271,False,False,2015-09-07T11:47:52Z,2015-09-07T13:09:27Z,"#Froxlor 0.9.34 stable release with Debian Jessie support and more. Announcement see http://bit.ly/rls0934 
",3639119
272,False,False,2015-07-29T14:42:34Z,2015-08-13T13:32:33Z,"Froxlor 0.9.33.2 bugfix release has been released. Announcement see http://bit.ly/1P9fnOk
",3639119
273,False,False,2015-02-16T07:52:19Z,2015-02-16T07:56:49Z,"Froxlor 0.9.33.1 bugfix release has been released. Announcement see http://bit.ly/rls0933
",3639119
274,False,False,2015-02-07T09:01:40Z,2015-02-07T09:03:18Z,"Froxlor 0.9.33 stable has been released. Announcement see http://bit.ly/rls0933
",3639119
275,False,False,2013-10-24T17:48:58Z,2015-02-06T06:50:48Z,"Froxlor 0.9.30 stable release published. Including multi-stack and a brand new theme. Announcement: http://bit.ly/rls0930
",3639119
276,False,True,2013-12-11T14:09:13Z,2015-02-06T06:49:59Z,"Announcing the second release candidate of 0.9.31 - minor bugfixes. Please test and report any issues, see http://bit.ly/0931rc2
",3639119
277,False,True,2013-12-04T14:06:25Z,2015-02-06T06:49:33Z,"Froxlor 0.9.31 release candidate 1 published. Please test and report bugs to http://redmine.froxlor.org/  , announcement: http://bit.ly/0931rc1
",3639119
278,False,True,2014-03-17T16:10:31Z,2015-02-06T06:46:35Z,"Froxlor 0.9.32 release candidate 2 published. Please test and report bugs to http://redmine.froxlor.org/  , announcement: http://bit.ly/0932rc2
",3639119
279,False,True,2014-02-16T18:40:34Z,2015-02-06T06:46:07Z,"Froxlor 0.9.32 release candidate 1 published. Please test and report bugs to http://redmine.froxlor.org/ , announcement: http://bit.ly/0932rc1
",3639119
280,False,False,2013-12-18T08:43:30Z,2015-02-06T06:43:55Z,"Froxlor 0.9.31 stable release published. Including new PDO-database backend and a new dashboard, announcement see http://bit.ly/rls0931
",3639119
281,False,False,2013-12-19T17:12:56Z,2015-02-06T06:43:39Z,"Froxlor 0.9.31.1 stable bugfix release published, announcement see http://bit.ly/rls0931 
",3639119
282,False,False,2013-12-27T15:32:04Z,2015-02-06T06:43:24Z,"Froxlor 0.9.31.2 stable bugfix release published, announcement see http://bit.ly/rls0931 
",3639119
283,False,False,2014-05-23T08:07:12Z,2015-02-06T06:33:41Z,"Froxlor 0.9.32 stable has been released. Announcement see http://bit.ly/rls0932
",3639119
284,False,True,2015-01-06T10:43:02Z,2015-02-06T06:32:56Z,"Froxlor 0.9.33 release candidate published. Please test and report bugs to http://redmine.froxlor.org/ , announcement: http://bit.ly/rls0933rc1
",3639119
285,False,True,2015-01-31T10:37:59Z,2015-02-06T06:32:34Z,"Froxlor 0.9.33 release candidate 2 published. Please test and report bugs to http://redmine.froxlor.org/ , announcement: http://bit.ly/rls0933rc2
",3639119
286,False,True,2015-02-01T17:11:45Z,2015-02-06T06:32:14Z,"Froxlor 0.9.33 release candidate 3 published. Please test and report bugs to http://redmine.froxlor.org/ , announcement: http://bit.ly/rls0933rc2
",3639119
287,False,False,2020-02-12T04:57:19Z,2020-02-12T05:01:11Z,"## Release 1.4.13 (See [ERRATA](https://github.com/aws/aws-fpga/blob/master/ERRATA.md) for unsupported features)
* FPGA developer kit now supports Xilinx Vivado/Vitis 2019.2
* To upgrade, use [Developer AMI v1.8.0](https://aws.amazon.com/marketplace/pp/B06VVYBLZZ) on the AWS Marketplace.",72888735
288,False,False,2019-12-13T23:49:47Z,2019-12-13T23:56:31Z,"* Added supported versions for BJS AMI's
* Added link to the re:Invent 19 F1 workshop
* Fixed missing extern C declaration by PR #473 
* Documentation Path fixes from #466, #468 and #470 ",72888735
289,False,False,2019-09-20T01:11:15Z,2019-09-20T01:12:22Z,"* FPGA developer kit now supports Xilinx SDx/Vivado 2019.1
    * We recommend developers upgrade to v1.4.11 to benefit from the new features, bug fixes, and optimizations. 
    * To upgrade, use [Developer AMI v1.7.0](https://aws.amazon.com/marketplace/pp/B06VVYBLZZ) on the AWS Marketplace. The Developer Kit scripts (hdk_setup.sh or sdaccel_setup.sh) will detect the tool version and update the environment based on requirements needed for Xilinx 2019.1 tools. 
* New functionality:
    * Added a [developer resources section](https://github.com/aws/aws-fpga/blob/RC_v1_4_11/developer_resources/README.md) that provides guides on how to setup your own GUI Desktop and compute cluster environment.
    * Developers can now ask for AFI limit increases via the [AWS Support Center Console](https://console.aws.amazon.com/support/cases#/create).
        * Create a case to increase your `EC2 FPGA` service limit from the console.
    * HLx IPI flow updates
        * HLx support for AXI Fast Memory mode.
        * HLx support for 3rd party simulations.
        * HLx support for changes in shell and AWS IP updates(e.g. sh_ddr).     
* Bug Fixes:
    * Documentation fixes in the [Shell Interface Specification](https://github.com/aws/aws-fpga/blob/RC_v1_4_11/hdk/docs/AWS_Shell_Interface_Specification.md)
    * Fixes for forum questions
        * [Unable to compile aws_v1_0_vl_rfs.sv in Synopsys VCS](https://forums.aws.amazon.com/thread.jspa?threadID=308829&tstart=0)
        * [Use fpga_mgmt init in HLx runtime](https://forums.aws.amazon.com/thread.jspa?messageID=912063)
    * New XRT versions added to the [XRT Installation Instructions](https://github.com/aws/aws-fpga/blob/RC_v1_4_11/SDAccel/docs/XRT_installation_instructions.md) to fix segmentation faults when using xclbin instead of awsxclbin files.
* Deprecations:
    * Removed GUI Setup scripts from AMI v1.7.0 onwards. See the [developer resources section](https://github.com/aws/aws-fpga/blob/RC_v1_4_11/developer_resources/README.md) that provides guides on how to setup your own GUI Desktop and compute cluster environment.
* Package versions used for validation
  
   | Package | AMI 1.7.0 [2019.1] | AMI 1.6.0 [2018.3] |AMI 1.5.0 [2018.2] | AMI 1.4.0 [2017.4] |
   |---------|---|------------------------|------------------------|-----------------------|
   | OS      | Centos 7.6 | Centos 7.6 | Centos 7.5, 7.6 | Centos 7.4 |
   | kernel  | 3.10.0-957.27.2.el7.x86_64 | 3.10.0-957.5.1.el7.x86_64 | 3.10.0-862.11.6.el7.x86_64, 3.10.0-957.1.3.el7.x86_64  | 3.10.0-693.21.1.el7.x86_64 |
   | kernel-devel | 3.10.0-957.27.2.el7.x86_64 | 3.10.0-957.5.1.el7.x86_64 | 3.10.0-862.11.6.el7.x86_64, 3.10.0-957.1.3.el7.x86_64 | 3.10.0-693.21.1.el7.x86_64 |
   | LIBSTDC++ | libstdc++-4.8.5-36.el7_6.2.x86_64 | libstdc++-4.8.5-36.el7.x86_64 | libstdc++-4.8.5-36.el7.x86_64 | libstdc++-4.8.5-16.el7_4.2.x86_64 |   
",72888735
290,False,False,2019-08-01T15:05:15Z,2019-08-01T15:06:02Z,"* New functionality:
    * SDK now sorts the slots in DBDF order. Any scripts or integration maintainers should note that the slot order will be different from previous versions and should make any updates accordingly.
  
* Bug Fixes:
    * Fixes a bug in the [Automatic Traffic Generator (ATG)](./hdk/cl/examples/cl_dram_dma/design/cl_tst.sv). In SYNC mode, the ATG did not wait for write response transaction before issuing read transactions.
    * Released [Xilinx runtime(XRT) version 2018.3.3.2](https://github.com/Xilinx/XRT/releases/tag/2018.3.3.2) to fix the following error: `symbol lookup error: /opt/xilinx/xrt/lib/libxrt_aws.so: undefined symbol: uuid_parse!` discussed in this [forum post](https://forums.aws.amazon.com/thread.jspa?messageID=899474&#899474).
    * This release fixes a bug wherein concurrent AFI load requests on two or more slots resulted in a race condition which sometimes resulted in Error: `(20) pci-device-missing`
    * This release fixes a issue with coding style of logic which could infer a latch during synthesis in [sde_ps_acc module](./hdk/cl/examples/cl_sde/design/sde_ps_acc.sv) within cl_sde example",72888735
291,False,False,2019-05-14T17:39:44Z,2019-05-14T17:42:44Z,"* New functionality:
    * Improved AFI load times for pipelined accelerator designs. For more details please see [Amazon FPGA image (AFI) pre-fetch and caching features](./hdk/docs/load_times.md).

 * Ease of Use features:
    * [Improved SDK Error messaging](./sdk/userspace/fpga_libs/fpga_mgmt/fpga_mgmt.c)
    * [Improved documentation](./hdk/docs/IPI_GUI_Vivado_Setup.md#switching-between-hdk-and-hlx-flows) to help with transition from [HLX to HDK command line flows](https://forums.aws.amazon.com/thread.jspa?threadID=302718&tstart=0) and vice versa
    * Incorporates feedback from [aws-fpga Issue 458](https://github.com/aws/aws-fpga/issues/458) by making the ```init_ddr``` function, used in design simulations to initialize DDR, more generic by moving out ATG deselection logic to a new ```deselect_atg_hw``` task

 * Bug Fixes:
    * Fixed Shell simulation model (sh_bfm) issue on PCIM AXI read data channel back pressure which was described in HDK 1.4.8 Errata.
    * Fixed HDK simulation example which [demonstrates DMA and PCIM traffic in parallel](./hdk/cl/examples/cl_dram_dma/verif/tests/test_dma_pcim_concurrent.sv).",72888735
292,False,False,2019-04-17T21:19:43Z,2019-04-22T16:58:41Z,"## Documentation fixes
* Fixed XRT installation instructions for 2018.3
* Updated tool version tables in README.md
## Other fixes
* Artifact update for SDAccel helloworld_ocl_runtime example
",72888735
293,False,False,2019-04-12T17:55:30Z,2019-04-12T17:56:04Z,"* FPGA developer kit supports Xilinx SDx/Vivado 2018.3
    * We recommend developers upgrade to v1.4.8 to benefit from the new features, bug fixes, and optimizations. To upgrade, use [Developer AMI v1.6.0](https://aws.amazon.com/marketplace/pp/B06VVYBLZZ) on AWS Marketplace.  The Developer Kit scripts (hdk_setup.sh or sdaccel_setup.sh) will detect the tool version and update the environment based on requirements needed for Xilinx 2018.3 tools. 
 * Ease of Use features:
    * Support for importing results into SDx GUI - By importing results from a script-based flow into SDx IDE, developers can leverage the tools for debug/profiling while keeping flexibility of the script-based flow
    * Vivado HLS developers can now import designs into SDAccel environment to leverage emulation, debug and run-time software
 * New functionality:
    * The following HLS Video Processing cores are now license free and come installed with Vivado (VPSS, Video Mixer, Video TPG, Frame Buffer WR/RD, Gamma LUT, Demosaic, VTC) 
    * Improved XCLBIN utilities designed for automating the management of accelerator designs
    * Incremental compile reduces build times
    * [Python bindings for AWS FPGA MGMT Tools](sdk/userspace/python_bindings/README.md)

  * Fixed Issues
    * [Fixes printf in main of fpga_local_cmd](https://github.com/aws/aws-fpga/pull/450)
    * [Fixes SV dma read function to work with unprintable chars](https://github.com/aws/aws-fpga/pull/412)
    * [Fixes Segmentation Fault in cl_sde simulation test](https://forums.aws.amazon.com/thread.jspa?threadID=298946&tstart=0)
    * [Fixes test issues in cl_dram_dma example when using the AXI memory model for faster simulations](./hdk/cl/examples/cl_dram_dma/verif/README.md)
 
  * Deprecated Features
    * As announced in HDK 1.4.6 all EDMA driver code has been removed and deprecated from the developer kit. 
        * AWS recommends using the [XDMA](sdk/linux_kernel_drivers/xdma/README.md) driver for your applications.
   
  * Package versions used for validation
  
   | Package | AMI 1.6.0 [2018.3] |AMI 1.5.0 [2018.2] | AMI 1.4.0 [2017.4] |
   |---------|------------------------|------------------------|-----------------------|
   | OS      | Centos 7.6 | Centos 7.5, 7.6 | Centos 7.4 |
   | kernel  | 3.10.0-957.5.1.el7.x86_64 | 3.10.0-862.11.6.el7.x86_64, 3.10.0-957.1.3.el7.x86_64  | 3.10.0-693.21.1.el7.x86_64 |
   | kernel-devel | 3.10.0-957.5.1.el7.x86_64 | 3.10.0-862.11.6.el7.x86_64, 3.10.0-957.1.3.el7.x86_64 | 3.10.0-693.21.1.el7.x86_64 |
   | LIBSTDC++ | libstdc++-4.8.5-36.el7.x86_64 | libstdc++-4.8.5-36.el7.x86_64 | libstdc++-4.8.5-16.el7_4.2.x86_64 |
   
",72888735
294,False,False,2019-02-11T23:14:38Z,2019-02-11T23:16:19Z,* Adds [Xilinx Runtime (XRT)](https://github.com/Xilinx/XRT/releases/tag/2018.2_XDF.RC5) Support for Linux kernel 3.10.0-957.1.3.el7.x86_64 & Centos 7.6,72888735
295,False,False,2019-01-25T21:09:22Z,2019-01-25T21:15:27Z,"* Fixes SDx 2018.2 [missing profile report items in SDAccel](https://forums.aws.amazon.com/thread.jspa?threadID=293541&tstart=0)
    * Requires [Xilinx 2018.2 Patch AR71715](https://github.com/aws/aws-fpga/blob/master/hdk/docs/SDxPatch_AR71715_and_XRT_installation_instructions.md#installing-sdx-20182-tool-patch-ar71715)
    * Requires [Xilinx runtime release 2018.2_XDF.RC4](https://github.com/Xilinx/XRT/tree/2018.2_XDF.RC4)
    * Please see patching & XRT installation instructions [here](https://github.com/aws/aws-fpga/blob/master/hdk/docs/SDxPatch_AR71715_and_XRT_installation_instructions.md)
* Fixes SDx 2018.2 [multithreaded kernel driver scheduling](https://forums.aws.amazon.com/thread.jspa?threadID=293166&tstart=0)
     * Requires [Xilinx runtime release 2018.2_XDF.RC4](https://github.com/Xilinx/XRT/tree/2018.2_XDF.RC4)
     * Please see XRT installation instructions [here](https://github.com/aws/aws-fpga/blob/master/hdk/docs/SDxPatch_AR71715_and_XRT_installation_instructions.md#installing-xilinx-runtime-xrt-20182_xdfrc4)  
* EDMA Driver is no longer supported. 
   * AWS strongly recommends moving your applications to [XDMA](sdk/linux_kernel_drivers/xdma/README.md).
   * [EDMA Driver](https://github.com/aws/aws-fpga/blob/master/sdk/linux_kernel_drivers/edma/README.md) will be fully removed from Developer kit 1.4.7+.
* Fixed Issues
    * [NULL definition include in header file](https://github.com/aws/aws-fpga/pull/414)
    * [Improved messaging for AFI builder script](https://github.com/aws/aws-fpga/pull/407)
    * [Fixes address decoding to DDR slaves in cl_dram_dma example](https://github.com/aws/aws-fpga/blob/master/hdk/cl/examples/cl_dram_dma/design)  
* Improvements
    * [Improves SDK FPGA management tools error messaging](https://github.com/aws/aws-fpga/blob/master/sdk/userspace/fpga_mgmt_tools/README.md)
    * [Enhanced DMA lib for general device number mapping](https://github.com/aws/aws-fpga/blob/master/sdk/userspace/fpga_libs/fpga_dma/fpga_dma_utils.c)
    * [Improved guidelines for AFI power management](https://github.com/aws/aws-fpga/blob/master/hdk/docs/afi_power.md)
    * [Improved Streaming Data Engine IP Integration Documentation](https://github.com/aws/aws-fpga/blob/master/sdk/apps/virtual-ethernet/doc/SDE_HW_Guide.md) 
   
* Package versions used to validate SDAccel runtime
  
   | Package | AMI 1.5.0 [SDx 2018.2] | AMI 1.4.0 [SDx 2017.4] |
   |---------|------------------------|------------------------|
   | kernel  | 3.10.0-862.11.6.el7.x86_64 | 3.10.0-693.21.1.el7.x86_64 |
   | kernel-devel | 3.10.0-862.11.6.el7.x86_64 | 3.10.0-693.21.1.el7.x86_64 |
   | LIBSTDC++ | libstdc++-4.8.5-36.el7.x86_64 | libstdc++-4.8.5-16.el7_4.2.x86_64 |
   ",72888735
296,False,False,2018-12-04T04:43:52Z,2018-12-04T04:47:00Z,"## Release 1.4.5 (See [ERRATA](https://github.com/aws/aws-fpga/blob/master/ERRATA.md) for unsupported features) 

* [Documents SDAccel Runtime compatibility](https://github.com/aws/aws-fpga/blob/master/SDAccel/docs/Create_Runtime_AMI.md#runtime-ami-compatability-table)
* [Enables SDK FPGA Mgmt tool access to Non-root users](https://github.com/aws/aws-fpga/blob/master/sdk/README.md#using-fpga-as-non-root-user)
* Fixed issues
  * [HLX simulation failure](https://forums.aws.amazon.com/thread.jspa?threadID=293313&tstart=0)
  * [Shell BFM  read from C host memory](https://forums.aws.amazon.com/thread.jspa?threadID=288959&tstart=0)
  * [cl_dram_dma example design DDR read issue](https://forums.aws.amazon.com/thread.jspa?threadID=290277&tstart=50)",72888735
297,False,False,2018-10-05T23:30:04Z,2018-11-06T13:30:57Z,"## Release 1.4.3 (See [ERRATA](https://github.com/aws/aws-fpga/blob/master/ERRATA.md) for unsupported features)
* [DRAM Data Retention](https://github.com/aws/aws-fpga/blob/master/hdk/docs/data_retention.md) - With DRAM data retention, developers can simply load a new AFI and continue using the data that is persistently kept in the DRAM attached to the FPGA, eliminating unnecessary data movements and greatly improving the overall application performance.
* [Virtual Ethernet](https://github.com/aws/aws-fpga/blob/master/sdk/apps/virtual-ethernet/README.md) - Provides a low latency network interface for EC2 F1, that enables high performance hardware acceleration to ethernet based applications on AWS like firewalls, routers and advanced security virtual appliances. With Virtual Ethernet, developers are able to create F1 accelerators that process ethernet packets directly from user-space on the FPGA with high throughput and low-latency. 
* [Developer AMI v1.5](https://aws.amazon.com/marketplace/pp/B06VVYBLZZ) with Vivado/SDx 2018.2 tools - New FPGA developer AMI supporting Vivado 2018.2 for faster compile times, higher frequencies and improved timing closure",72888735
298,False,False,2018-11-06T13:24:57Z,2018-11-06T13:27:04Z,"## Release 1.4.4 (See [ERRATA](https://github.com/aws/aws-fpga/blob/master/ERRATA.md) for unsupported features)        
* Fixed compile issues in Simulation while using  3rd party simulators (synopsys VCS, Cadence IES and Mentor Questasim).",72888735
299,False,False,2018-08-29T22:05:43Z,2018-08-29T22:08:13Z,* Fixed SDAccel XOCL driver compile fails that occur on linux kernels greater than 3.10.0-862.3.3.el7.x86_64,72888735
300,False,False,2018-08-15T02:28:13Z,2018-08-15T02:32:58Z,"## Release 1.4.1 (See [ERRATA](https://github.com/aws/aws-fpga/blob/master/ERRATA.md) for unsupported features)
* Simulation performance Improvements
  * DDR Behavioural Model - Hardware simulations use an AXI memory model to run 4X faster by skipping DDR initialization. Please refer to this [README](https://github.com/aws/aws-fpga/blob/master/hdk/cl/examples/cl_dram_dma/verif/README.md) on how to use this feature in your simulation.
  * DDR Backdoor Loading - Hardware simulation time is reduced by pre-loading data directly into memory models.  Please refer to this [README](https://github.com/aws/aws-fpga/blob/master/hdk/cl/examples/cl_dram_dma/verif/README.md#ddr-backdoor-loading) for example tests that demonstrate this feature.
* Fixed Issues
  * XOCL Driver update to address synchronization issues.
  * Fixed XOCL driver issues when using ubuntu distribution for Linux OS.
  * Improved Performance for [cl_dram_dma Public AFI](https://github.com/aws/aws-fpga/blob/master/hdk/cl/examples/cl_dram_dma/README.md#metadata).
  * SDAccel 3rd party examples updated to use Shell V1.4 DSA.
  * Fixed AFI Manifest generation in IPI flow.
  * HLX button fixed in IPI
  * [FPGA Library update](https://github.com/aws/aws-fpga/blob/master/sdk/userspace/README.md)
  ",72888735
301,False,False,2018-07-09T03:01:29Z,2018-07-09T03:06:01Z,"## Release 1.4.0 (See [ERRATA](https://github.com/aws/aws-fpga/blob/master/ERRATA.md) for unsupported features)
* [New Shell Stable: v04261818](https://github.com/aws/aws-fpga/blob/master/hdk/common/shell_stable).  Starting with release v1.4.0, the AWS FPGA shell stable has been updated and only supports Xilinx 2017.4 SDx/Vivado.  All previous versions of tools and shells are not supported with this developer kit shell release. 
  * [Shell Release Notes](https://github.com/aws/aws-fpga/blob/master/hdk/docs/AWS_Shell_RELEASE_NOTES.md) 

* The previous shell (v071417d3) will be supported until 09/01/2018.  Developers are required to use the [developer kit v1.3.X branch](https://github.com/aws/aws-fpga/tree/REL_v1_3_8) for all shell version v071417d3 development.  

* Release 1.4.0 greatly improves the performance of the DMA (for interrupt driven DMA on the cl\_dram\_dma example design). This is accomplished through a combination of shell changes to relax DMA timeouts and a new XDMA software driver option.  We have ported the relevant HDK examples to the XDMA driver in this release. EDMA is still supported, and developers can freely choose which DMA driver to use as part of their host application.",72888735
302,False,False,2018-06-11T15:45:12Z,2018-06-11T15:46:51Z,"## Release 1.3.8 (See [ERRATA](./ERRATA.md) for unsupported features)
* Fixed SDAccel XOCL driver compile fails that occur on linux kernels greater than 3.10.0-693.21.1.el7.x86_64 ",72888735
303,False,False,2018-05-14T02:02:17Z,2018-05-14T02:03:39Z,"## Release 1.3.7 (See [ERRATA](./ERRATA.md) for unsupported features)
* Support for Xilinx SDx/Vivado 2017.1 and Xilinx [SDx](https://www.xilinx.com/support/documentation/sw_manuals/xilinx2017_4/ug1238-sdx-rnil.pdf)/[Vivado](https://www.xilinx.com/support/documentation/sw_manuals/xilinx2017_4/ug973-vivado-release-notes-install-license.pdf) 2017.4 .    * This release supports Xilinx SDx 2017.4 and 2017.1.  The HDK and SDAccel setup scripts configure the development environment based on the tool version found in the PATH environment variable.  
   * FPGA developer kit version is listed in [hdk_version.txt](./hdk/hdk_version.txt)
   * FPGA developer kit supported tool versions are listed in [supported_vivado_versions](./supported_vivado_versions.txt)
   * The compatibility table describes the mapping of developer kit version to [FPGA developer AMI](https://aws.amazon.com/marketplace/pp/B06VVYBLZZ) version:  
   
| Developer Kit Version   | Tool Version Supported     |  Compatible FPGA developer AMI Version     |
|-----------|-----------|------|
| 1.3.0-1.3.6 | 2017.1 | v1.3.5 |
| 1.3.7-1.3.X | 2017.1 | v1.3.5-v1.3.X (Xilinx SDx 2017.1) |
| 1.3.7-1.3.X | 2017.4 | v1.4.0-v1.4.X (Xilinx SDx 2017.4) |

* OpenCL dynamic resource optimization – The developer tools automatically remove unused DDR and debug logic to free up resources and reduce compile times.  [See 2017.4 Migration Document](SDAccel/docs/SDAccel_Migrate_dynamic_DSA.md) and [SDAccel User Guide](https://www.xilinx.com/support/documentation/sw_manuals/xilinx2017_4/ug1023-sdaccel-user-guide.pdf) 
* Developers can instantiate up to 60 kernels (up from the max 16 2017.1 supported). 
* OpenCL Kernel profiling – During compile time, profiling logic can be automatically inserted to enable generation of kernel profile data.  Profile data can be viewed using the SDx IDE under profile summary report and timeline trace report. [See chapter 6 within the SDAccel Environment Profiling and Optimization Guide](https://www.xilinx.com/support/documentation/sw_manuals/xilinx2017_4/ug1207-sdaccel-optimization-guide.pdf)   
* OpenCL Hardware Emulation Debug – GDB-like debug allows developers a view into what is going on inside the kernel during hardware emulation.  Debug capabilities include start/stop at intermediate points and memory inspection.  [See chapter 6 within the SDAccel Environment Profiling and Optimization Guide](https://www.xilinx.com/support/documentation/sw_manuals/xilinx2017_4/ug1207-sdaccel-optimization-guide.pdf)
* Post-synthesis and place/route optimization is now supported in OpenCL development environment.  [New XOCC options: reuse_synth and reuse_impl](https://www.xilinx.com/html_docs/xilinx2018_1/sdsoc_doc/wfq1517252127836.html)
* Customer simulation environment improvements and bug fixes:
  * 8 Additional tests that will help developer with using the simulation environment and shell simulation model
  * Simulation model support for non DW aligned accesses
  * Co-simulation support
* EDMA Driver fixes:
  * Prevent timeouts due to scanning of the BARs for DMA hardware
  * Driver compilation support for 4.14 linux kernel
* HDK improvements and fixes: 
  * cl_dram_dma improvements to make enabling/disabling DDRs easier
  * encrypt.tcl now clears out old files
  * URAM example timing improvements
* IPI Improvements:
  * [HLS example](hdk/cl/examples/cl_hls_dds_hlx/README.md) 
  * Script based approach for running the examples",72888735
304,False,False,2018-03-27T14:32:32Z,2018-03-27T14:35:45Z,Errata updates,72888735
305,False,False,2018-03-05T13:43:21Z,2018-03-05T13:45:40Z,"## Release 1.3.6c (See [ERRATA](./ERRATA.md) for unsupported features)
   *    Fixes for SDAccel 1DDR and IPI ",72888735
306,False,False,2018-01-26T00:11:39Z,2018-01-26T00:15:42Z,"## Release 1.3.6 (See [ERRATA](./ERRATA.md) for unsupported features)
   *    Simulation model bug fix for transfer size of 64 bytes
   *    Xilinx 2017.1 Patch AR70350 - fixes report_power hangs.  Patch is automatically applied during setup scripts using MYVIVADO environment variable
   *    Updated synthesis scripts with -sv option when calling read_verilog
   *    Added documentation on us-gov-west-1 (GovCloud US)
   *    Minor EDMA driver fixes and improvements",72888735
307,False,False,2018-01-17T02:36:37Z,2018-01-17T02:38:39Z,"## Release 1.3.5 (See [ERRATA](./ERRATA.md) for unsupported features)
   *    [Amazon FPGA Images (AFIs) Tagging](hdk/docs/describe_fpga_images.md) - To help with managing AFIs, you can optionally assign your own metadata to each AFI in the form of tags. Tags are managed using the AWS EC2 CLI commands create-tags, describe-tags and delete-tags.  Tags are custom key/value pairs that can be used to identify or group EC2 resources, including AFIs.  Tags can be used as filters in the describe-fpga-images API to search and filter the AFIs based on the tags you add.
   *    [EDMA driver fixes and improvements](sdk/linux_kernel_drivers/edma/README.md), including polled DMA descriptor completion mode which improves performance on smaller IO (<1MB)
   *    [AFI Power metrics and warnings](hdk/docs/afi_power.md) – developers can avoid power violations by monitoring metrics that provide recent FPGA power, maximum FPGA power and average FPGA power. CL designs can use power state pins to help developers throttle CL to avoid power violation. 
   *    Improved IPI 3rd party simulator support
   *    Simulation model fixes
   *    SDAccel improvements - Removal of settings64 script from SDAccel setup and switching between DSAs	",72888735
308,False,False,2017-12-08T23:25:30Z,2017-12-08T23:28:31Z,"   *    EDMA/XDMA Driver improvements
   *    Additional SDAccel Platforms
         *    1DDR for faster build times and smaller expanded shell
         *    RTL Kernel Debug adds support for virtual jtag debug on RTL kernels
   *    IP Integrator GUI (HLx) improvements 
   *    CL\_DRAM\_DMA fixes and improvements
         *    Dual master support
   *    Simulation enviroment fixes and improvements
         *    AXI/AXIL Protocol checkers
         *    Shell model improvements
         *    SW co-simulation support on cl\_hello\_world
         *    DDR Model patch
   *    Updated SH\_DDR module in preparation for upcoming feature release",72888735
309,False,False,2017-09-25T03:09:42Z,2017-09-25T03:19:01Z,"New FPGA Image APIs for deleting and reading/editing attributes
",72888735
310,False,False,2017-09-13T23:01:30Z,2017-09-13T23:03:43Z,"SDAccel general availability
",72888735
311,False,False,2017-08-22T16:14:51Z,2017-09-06T03:48:42Z,"Region expansion to DUB and PDX
AFI Copy API Preview
EDMA Driver release 1.0.29 - MSI-X fixes
Improved IPI documentation
Documentation updates
Build flow fixes
Public LTX files for use with hdk examples AFIs",72888735
312,False,False,2017-07-29T12:31:38Z,2017-07-29T12:35:38Z,"
# AWS EC2 FPGA HDK+SDK Release Notes


##  AWS EC2 F1 Platform Features:
   *    1-8 Xilinx UltraScale+ VU9P based FPGA slots
   *    Per FPGA Slot, Interfaces available for Custom Logic(CL):
         *    One x16 PCIe Gen 3 Interface
         *    Four DDR4 RDIMM interfaces (with ECC)
         *    AXI4 protocol support on all interfaces
   *    User-defined clock frequency driving all CL to Shell interfaces
   *	Multiple free running auxilary clocks
   *    PCIE endpoint presentation to Custom Logic(CL)
         *    Management PF (physical function)
         *    Application PF
   *    Virtual JTAG, Virtual LED, Virtual DIP Switches
   *    PCIE interface between Shell(SH) and Custom Logic(CL).
         *    SH to CL inbound 512-bit AXI4 interface
         *    CL to SH outbound 512-bit AXI4 interface
	 *    Multiple 32-bit AXI-Lite buses for register access, mapped to different PCIe BARs
         *    Maximum payload size set by the Shell
         *    Maximum read request size set by the Shell
         *    AXI4 error handling 
    *    DDR interface between SH and CL
         *    CL to SH 512-bit AXI4 interface
         *    1 DDR controller implemented in the SH (always available)
         *    3 DDR controllers implemented in the CL (configurable number of implemented controllers allowed)

## Release 1.3.0 (See [ERRATA](./ERRATA.md) for unsupported features)
   *    FPGA initiated read/write over PCI (PCI-M)
   *    Redesigned Shell - improved the shell design to allow more complex place and route designs to meet timing
   *    Expanded DMA support
   *    Improved URAM utilization
   *    Improved AXI Interface checking
   *    New customer examples/workflows:  IP Integrator, VHDL and GUI
   *    SDAccel support - More details will be communicated on AWS forum


**During July, All AFIs created with previous HDK versions will no longer correctly load on an F1 instance**, hence a `fpga-load-local-image` command executed with an AFI created prior to 1.3.0 will return an error and not load.  Watch the forum for additional annnoucements.

## Release 1.3.0 New Features Details

The following major features are included in this HDK release: 

### 1.	New Shell, with modified Shell/CL interface. Changes are covered in: 
* The floorplan has been enhanced to enable more optimal CL designs through better timing closure and reduced congestion at the CL to Shell interface.
* [New Shell Stable: v071417d3](./hdk/common/shell_v071417d3)
* [AWS_Shell_Interface_Specification.md](./hdk/docs/AWS_Shell_Interface_Specification.md) has been updated.  See cl_ports.vh for the updated port list
* DCP for the latest shell v071417d3. AWS Shell DCP is stored in S3 and fetched/verified when `hdk_setup.sh` script is sourced.

### 2.	Integrated DMA 
* DMA functionality has been enhanced to allow DMA transactions of up to 1MB.
* Multi-queue in each direction is now supported
* The DMA bus toward the CL is multiplexed over sh_cl_dma_pcis AXI4 interface so the same address space can be accessed via DMA or directly via PCIe AppPF BAR4 
* DMA usage is covered in the new [CL_DRAM_DMA example](./hdk/cl/examples/cl_dram_dma) RTL verification/simulation and Software 
* A corresponding AWS Elastic DMA ([EDMA](./sdk/linux_kernel_drivers/edma)) driver is provided.
* [EDMA Installation Readme](./sdk/linux_kernel_drivers/edma/edma_install.md) provides installation and usage guidlines
* See [Kernel_Drivers_README](./sdk/linux_kernel_drivers/README.md) for more information on restrictions for this release


### 3.	PCI-M
* The PCI-M interface is fully supported for CL generated transactions to the Shell. 

### 4.	URAM 
* Restrictions on URAM have been updated to enable 100% of the URAM with a CL to be utilized.  See documnetation on enabling URAM utilization: [URAM_options](.hdk/docs/URAM_Options.md)

### 5.	IPI
* IPI developer flow is supported
  
### 6.	Build Flow improvments
* See [Build_Scripts](./hdk/common/shell_v071417d3/build/scripts)

### 7.	VHDL
* CL designs in VHDL are fully supported.  
See example for more details [CL_HELLO_WORLD_VHDL](./hdk/cl/examples/cl_hello_world_vhdl/README.md)

### 8.	AXI Interface Checking
* Protocol checks have been added to the CL-Shell interface to detect and report CL errors for enhanced CL debugging.
* Transaction timeout values on the CL-Shell interface have been increased to allow for longer CL response times.
* See [Shell_Interface_Specification](./hdk/docs/AWS_Shell_Interface_Specification.md)

### 9.	Support for Vivado 2017.1 SDX Build 

* The FPGA Development AMI includes Vivado 2017.1 SDX
    * Get the 1.3.0+ AMI by selecting the version from the [marketplace](https://aws.amazon.com/marketplace/pp/B06VVYBLZZ#). 
* Older Vivado versions will not be supported

### 10.	SDK changes 

* Synchronous (default) mode for fpga-load-local-image and fpga-clear-local-image.  For example, in synchronous mode (default) fpga-load-local-image will wait for the AFI to transition to the ""loaded"" state, perform a PCI device remove and recan in order to expose the unique AFI Vendor and Device Id, and display the final state for the given FPGA slot number.  Asynchronous operation is preserved with the ""-A"" option to both fpga-load-local-image and fpga-clear-local-image.
* The corresponding fpga_mgmt_load_local_image_sync and fpga_mgmt_clear_local_image_sync are provided by the fpga_mgmt library for use in C/C++ programs.

## Supported Tools and Environment

* The HDK and SDK are designed for **Linux** environment and has not been tested on other platforms
* First installation of AWS FPGA SDK requires having gcc installed in the instance server. If that's not available, try `sudo yum update && sudo yum group install ""Development Tools""`
* The HDK build step requires having Xilinx's Vivado tool and Vivado License Management running.  Tools and licenses are provided with AWS FPGA Developer AMI at no additional cost
* This release is tested and validated with Xilinx 2017.1 SDX (Vivado)
* Developers that choose to not use the developer AMI in AWS EC2, need to have Xilinx license 'EF-VIVADO-SDX-VU9P-OP' installed on premise.  For more help, please refer to [On-premise licensing help](./hdk/docs/on_premise_licensing_help.md)
* Vivado XSIM RTL simulator supported by the HDK
* MentorGraphic's Questa RTL simulator supported by the HDK (but requires a purchase of separate license from MentorGraphics)
* Synopsys' VCS RTL simulator supported by the HDK (but requires a purchase of separate license from Synopsys)

## License Requirements

The HDK and SDK in the development kit have different licenses. SDK is licensed under open source Apache license and HDK is licensed under Amazon Software License. Please refer to [HDK License](./hdk/LICENSE.txt) and [SDK License](./sdk/LICENSE.txt).

## Release Notes FAQ
 
**Q: How do I know which HDK version I have on my instance/machine? **

Look for [hdk_version](./hdk/hdk_version.txt) 

**Q: How do I know what my Shell Version is? **

The Shell Version of an instance is available through the FPGA Image Management tools.  See the description of `fpga-describe-local-image` for details on retrieving the shell version from an instance.

**Q: How do I know what version of FPGA Image management tools are running on my instance? **

The FPGA Image management tools version is reported with any command executed to those tools.  See the description of `fpga-describe-local-image` for details on the tools version identification.

**Q: How do I update my design with this release?**

1.	Start by either cloning the entire GitHub structure for the HDK release or downloading new directories that have changed.  AWS recommends an entire GitHub clone to ensure no files are missed
2.	Update the CL design to conform to the new AWS_Shell_Interface_Specification
3.	Follow the process for AFI generation outlined in aws-fpga/hdk/cl/examples/readme.md
4.	Update FPGA Image Management Tools to the version included in aws-fpga/sdk/management

**Q: How do I get support for this release?**

The AWS Forum FPGA Development provides an easy access to Developer support.  The FPGA development user forum is the first place to go to post questions, suggestions and receive important announcements. To gain access to the user forum, please go to https://forums.aws.amazon.com/index.jspa and login. To be notified on important messages, posts you will need to click the “Watch Forum” button on the right side of the screen.

**Q: How do I know which HDK release I am working with? **

See the release notes at the top of the GitHub directory to identify the version of your GitHub clone.  

## Previous release notes

### Release 1.2.4
   *    AWS SDK API `aws ec2 describe-fpga-images` released. See [describe-fpga-images](./hdk/docs/describe_fpga_images.md) document for details on how to use this API.  Requires Developer AMI 1.2.4 or awscli upgrade: `pip install --upgrade --user awscli`
   *    Fix cl_dram_dam debug probes (.ltx) generation in build scripts
   *    Fixed bugs with DMA in the simulation model and testbench

### Release 1.2.3
   *    New [Errata](./ERRATA.md) 
   *    Added debug probes (.ltx) generation to build scripts
   *    Fixed a bug with the simulation model that fixed the AXI behavior of wlast on unaligned address
   *    Added [timeout debug documentation](./hdk/docs/HOWTO_detect_shell_timeout.md)
   
### Release 1.2.2
   *    Expanded [clock recipes](./hdk/docs/clock_recipes.csv) 
   *    Virtual JTAG documentation updates
   *    Reduced DCP build times by 13% (34 mins) for cl_dram_dma example by adding an option to disable virtual jtag
   *    Included encryption of .sv files for CL examples

### Release 1.2.1
   *    Updated CL example build scripts with Prohibit URAM sites 
   *    EDMA Performance improvments 
   *    Expanded EC2 Instance type support
   *    CL Examples @250Mhz (Clock recipe A1)
   *    Option to exclude Chipscope (Virtual JTAG) from building CL examples (DISABLE_VJTAG_DEBUG)

### Release 1.2.0 Content Overview and New Features Details

The following major features are included in this HDK release: 

#### 1.	New Shell, with modified Shell/CL interface. Changes are covered in: 

* [New Shell Stable: 0x04151701](./hdk/common/shell_v04151701)
* cl_ports.vh have the updated port list 
* [AWS_Shell_Interface_Specification.md](./hdk/docs/AWS_Shell_Interface_Specification.md) has been updated
* Updated the xdc timing constrains under [constraints](./hdk/common/shell_v032117d7/build/constraints) to match the new interfaces 
* Updated [CL HELLO WORLD](./hdk/cl/examples/cl_hello_world) example to use the new cl_ports.vh
* DCP for the latest shell v04151701. AWS Shell DCP is stored in S3 and fetched/verified when `hdk_setup.sh` script is sourced.


#### 2.	Integrated DMA in Beta Release. AWS Shell now includes DMA capabilities on behalf of the CL
* The DMA bus toward the CL is multiplexed over sh_cl_dma_pcis AXI4 interface so the same address space can be accessed via DMA or directly via PCIe AppPF BAR4 
* DMA usage is covered in the new [CL_DRAM_DMA example](./hdk/cl/examples/cl_dram_dma) RTL verification/simulation and Software 
* A corresponding AWS Elastic DMA ([EDMA](./sdk/linux_kernel_drivers/edma)) driver is provided.
* [EDMA Installation Readme](./sdk/linux_kernel_drivers/edma/edma_install.md) provides installation and usage guidlines
* The initial release supports a single queue in each direction
* DMA support is in Beta stage with a known issue for DMA READ transactions that cross 4K address boundaries.  See [Kernel_Drivers_README](./sdk/linux_kernel_drivers/README.md) for more information on restrictions for this release


#### 3.	CL  User-defined interrupt events.  The CL can now request sending MSI-X to the instance CPU
* * Usage covered in new [CL_DRAM_DMA example](./hdk/cl/examples/cl_dram_dma)
* A corresponding AWS EDMA driver is provided under [/sdk/linux_kernel_drivers/edma](./sdk/linux_kernel_drivers/edma)
* [EDMA Installation](./sdk/linux_kernel_drivers/edma/edma_install.md) provides installation and usage guidlines
* The initial release supports a single user-defined interrupt 

#### 4.	Added a Mandatory Manifest.txt file submitted with each DCP via create-fpga-image API

* File content defined in [AFI Manifest](./hdk/docs/AFI_Manifest.md)
* AFI_Manifest.txt is created automatically if the developer is using the aws_build_dcp_from_cl.sh script
* PCI Vendor ID and Device ID are part of the manifest 
* Shell Version is part of the manifest 
* The Manifest.txt file is required for AFI generation
* All the examples and documentations for build include the description and dependency on the Manifest.txt

	
#### 5.	Decoupling Shell/CL interface clocking from the internal Shell Clock 

* All the Shell/CL interfaces running off clk_main_a0, and no longer required to be 250Mhz. 
* The default frequency using the HDK build flow for `clk_main_a0` is 125Mhz as specified in recipe number A0. Allowing CL designs to have flexible frequency and not be constrained to 250Mhz only. All CL designs must include the recipe number in the manifest.txt file in order to generate an AFI.
* All xdc scripts have been updated to clk_main_a0 and to reference a table with the possible clocks’ frequencies combinations
* Updated CL_HELLO_WORLD and CL_DRAM_DMA examples to use the `clk_main_a0` 

#### 6.	Additional User-defined Auxiliary Clocks
Additional tunable auxiliary clocks are generated by the Shell and fed to the CL. The clocks frequencies are set by choosing a clock recipe per group from a set of predefined frequencies combination in [clock recipes table](./hdk/docs/clock_recipes.csv)

* Clock frequency selection is set during build time, and recorded in the manifest.txt (which should include the clock_recipe_a/b/c parameters)
* Clock frequency programming in the FPGA slot itself occurs when the AFI is loaded. The list of supported frequencies is available [here](./hdk/docs/clock_recipes.csv)
* See [AWS_Shell_Interface_Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) for details on the clocking to the CL  
* See [AFI Manifest](./hdk/docs/AFI_Manifest.md) for details on the AFI manifest data
* xdc is automatically updated with the target frequency (WIP)

#### 7.	Additional PCIe BARs and update PCIe Physical Function mapping

** The AppPF now has 4 different PCIe BARs:**

* BAR0 and BAR1 support 32-bit access for different memory ranges of the CL through separate AXI-L interfaces 
* BAR2 is used exclusively for the DMA inside the Shell and MSI-X interrupt tables  
* BAR4 expanded to 128GiB to cover all external DRAM memory space


** ManagementPF added additional PCIe BARs:**

* BAR2 is used for Virtual JTAG
* BAR4 is used for SDAccel Management (WIP)
* [AWS Shell Interface Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) covers these changes in detail
* [AWS FPGA PCIe Memory Map](./hdk/docs/AWS_Fpga_Pcie_Memory_Map.md) covers the address map details
* The [FPGA PCI library](./sdk/userspace/include/fpga_pci.h) provides simple APIs to take advantage of these BARs


** MgmtPF and AppPF are now represented as different PCIe devices in F1 instances:**
* Each FPGA Slot will occupy two PCIe buses, one for AppPF and one for MgmtPF


#### 8.	Expanded AppPF BAR4 space to 128GiB 

* BAR4 addressing space enables a CL to fully map FPGA card DRAM into the AppPF address space.  AppPF BAR4 is now a 128GB BAR  
* [AWS Shell Interface Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) covers these changes in detail
* [AWS FPGA PCIe Memory Map](./hdk/docs/AWS_Fpga_Pcie_Memory_Map.md) covers the address map in detail

  
#### 9.	Added wider access on the Shell to CL AXI4 512-bit bus (sh_cl_dma_pcis)

* Wider access provides higher bandwidth DMA and host to FPGA access
* Instance CPU can now burst full 64-byte write burst to AppPF PCIe BAR4 if mapped as Burstable (a.k.a WC: WriteCombine) (WIP)
* pci_poke_burst() and pci_poke64() calls were added to [fpga_pci library](./sdk/userspace/include/fpga_pci.h) to take advantage of this
* CL_DRAM_DMA and CL_HELLO_WORLD examples support for a wider access was added


#### 10.	Support larger than 32-bit access to PCIe space

* Large inbound transaction going to AppPF PCIe BAR4 will be passed onward to the CL  
* Large inbound transactions going to the other BARs will be split by the Shell to multiple 32-bit accesses, and satisfy AXI-L protocol specification.


#### 11.	Enhanced AXI4 error handling and reporting

* Additional error conditions detected on the CL to Shell Interface and reported through fpga-describe-image tool
* See [AWS Shell Interface Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) for more details
* FPGA Management Tool [metrics output](./sdk/userspace/fpga_mgmt_tools/README.md) covers the additional error handling details

#### 12.	Expanded AXI ID space throughout the design

* The AXI buses between Shell and CL support an expanded number of AXI ID bits to allow for bits to be added by AXI fabrics  See [AWS Shell Interface Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) for more details


#### 13.	Shell to CL interface metrics.  

* New metrics for monitoring the Shell to CL are available from the AFI Management Tools. 
* See [fpga mgmt tools readme](./sdk/userspace/fpga_mgmt_tools/README.md) for more details


#### 14.	Virtual LED/DIP Switches.  

* Added CL capability to present virtual LEDs and push virtual DIP switches indications to the CL, set and read by FPGA Management Tools and without involving CL logic, providing the developer an environment similar to developing on local boards with LED and DIP switches
* See new commands in [FPGA Image Tools](./sdk/userspace/fpga_mgmt_tools/README.md) for description of the new functionality
* CL_HELLO_WORLD example includes some logic to set LED and adjust according to vDIP
* See [AWS Shell Interface Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) for more details


#### 15.	Virtual JTAG

* The Shell has the capability for supporting CL integrated Xilinx debug cores like Virtual I/O (VIO) and Integrated Logic Analyzer (ILA) and includes support for local/remote debug by running XVC  
* [Virtual_JTAG_XVC](./hdk/docs/Virtual_JTAG_XVC.md) describes how to use Virtual JTAG from linux shell
* cl_debug_bridge module was added to HDK common directory
* Support for generating .ltx files after `create-fpga-image` was added.  .ltx file is required when running interactive ILA/VIO debug (WIP)
* Build tcl and xdc includes the required changes to enable Virtual JTAG 
* See [CL_DRAM_DMA](./hdk/cl/examples/cl_dram_dma) for examples on using Virtual JTAG and XVC for debug

#### 16.	Examples summary table

* [Example Summary Table](./hdk/cl/examples/cl_examples_list.md) covers which CL capabilities is demonstrated in each example


#### 17.	Updated CL_HELLO_WORLD Example

* Matching the new Shell/CL interface 
* Add support for 32-bit peek/poke via ocl\_ AXI-L bus
* Virtual JTAG support with Xilinx ILA and VIO debug cores 
* Demonstrate the use of Virtual LED and Virtual DIPSwitch
* Runtime software examples, leveraging fpga_pci and fpga_mgmt C-libraries
* Updated PCIe Vendor ID and Device ID
* See [CL HELLO WORLD readme](./hdk/cl/examples/cl_hello_world/README.md) for more details


#### 18.	Added CL_DRAM_DMA Example

* Mapping AppPF PCIe BAR4 to DRAM
* Using DMA to access same DRAM
* Using SystemVerilog Bus constructs to simplify the code
* Demonstrate the use of User interrupts
* Demonstrate the use of bar1\_ AXI-L bus
* Includes Runtime C-code application under [CL_DRAM_DMA software](./hdk/cl/examples/cl_dram_dma/software)
* See [CL_DRAM_DMA README](./hdk/cl/examples/cl_dram_dma/README.md)


#### 19.	Software Programmer View document 

* The [Software Programmer View document](./hdk/docs/Programmer_View.md) is added to explain the various ways a linux user-space application can work with AWS FPGA Slots


#### 20.	Two C-libraries for FPGA PCIe access and for FPGA Management

* The C-libraries are simplifying and adding more protections from developer’s mistakes when writing a runtime C-application
* [Fpga_mgmt.h](./sdk/userspace/include/fpga_mgmt.h) cover the APIs for calling management functions
* [Fpga_pcie.h](./sdk/userspace/include/fpga_pci.h) covers the API for access the various PCI memory spaces of the FPGA
* CL_HELLO_WORLD and CL_DRAM_DMA examples updated to use these libraries.

#### 21.	VHDL support is added

* Included Vivado encryption key file for VHDL
* Added VHDL-specific line in `encrypt.tcl` reference files
* Developer would need to add `read_vhdl` in `create_dcp_from_cl.tcl`

#### 22.	Additional FPGA Management Tools added

*	See [FPGA Management Tools](./sdk/userspace/fpga_mgmt_tools/README.md) for more details

#### 23.	Support for Vivado 2017.1 Build 

* The FPGA Development AMI includes Vivado 2017.1
* Older Vivado versions will not be supported

#### 24.	Embed the HDK version and Shell Version as part of git tree

* [hdk_version.txt](./hdk/hdk_version.txt)
* [shell_version.txt](./hdk/common/shell_stable)

#### 25.	Initial Release of SDAccel and OpenCL Support (NA)

* Updated documentation in /sdk/SDAccel (NA)
* OpenCL runtime HAL for supporting SDAccel and OpenCL ICD in /sdk/userspace (NA)
* SDAccel build post-processing to register SDAccel xcl.bin as AFI. (NA) 

#### 26.	Simplify handling of unused Shell to CL interfaces

* Developers can simply call `include ""unused\_**BUS\_NAME**\_template.inc"" for every unused interface
* List of potential files to include is available in `$HDK_SHELL_DIR/design/interfaces/unused\*`
* cl_hello_world.sv and cl_dram_dma.sv provide examples (at the each of each file)

#### 27.	Support multiple Vivado versions

* `hdk_setup.sh` compares between the list of Vivado versions supported by the HDK and the installed vivado versions
* `hdk_setup.sh` would automatically choose the Vivado version from the available binaries in AWS FPGA Developer's AMI

#### 28.	Changes in DRAM controller setting to improve bandwidth utilization

* Change address decoding to ROW_COL_INTLV mode
* Enable auto precharge on COL A3
",72888735
313,False,False,2017-07-13T14:23:55Z,2017-07-13T14:26:18Z,"*    Improved tool checks in hdk_setup
*    Fixed simulation model and test bench bugs",72888735
314,False,False,2017-06-22T14:16:22Z,2017-06-22T14:22:56Z,"*    AWS SDK API `aws ec2 describe-fpga-images` released. See [describe-fpga-images](./hdk/docs/describe_fpga_images.md) document for details on how to use this API.  Requires Developer AMI 1.2.4 or awscli upgrade: `pip install --upgrade --user awscli`
*    Fix cl_dram_dam debug probes (.ltx) generation in build scripts
*    Fixed bugs with DMA in the simulation model and testbench",72888735
315,False,False,2017-06-15T00:04:01Z,2017-06-15T00:05:57Z,"   *    New [Errata](./ERRATA.md) 
   *    Added debug probes (.ltx) generation to build scripts
   *    Fixed a bug with the simulation model that fixed the AXI behavior of wlast on unaligned address
   *    Added [timeout debug documentation](./hdk/docs/HOWTO_detect_shell_timeout.md)",72888735
316,False,False,2017-05-31T19:51:59Z,2017-05-31T22:59:17Z,"   *    Expanded [clock recipes](./hdk/docs/clock_recipes.csv) 
   *    Reduced DCP build times by 13% (34 mins) for cl_dram_dma example by adding an option to disable virtual jtag (DISABLE_VJTAG_DEBUG)
   *    Included encryption of .sv files for CL examples
",72888735
317,False,False,2017-05-09T16:36:14Z,2017-05-09T16:39:01Z,"# Release 1.2.1
   *    Updated CL example build scripts with Prohibit URAM sites 
   *    EDMA Performance improvments 
   *    Expanded EC2 Instance type support
   *    CL Examples @250Mhz (Clock recipe A1)
   *    Option to exclude chipscope from building CL examples (DISABLE_CHIPSCOPE_DEBUG)",72888735
318,False,False,2017-04-19T19:24:16Z,2017-04-19T19:28:13Z,"# Release 1.2.0

## NOTE on Release 1.2.0
Release 1.2.0 is the first Generally Available release of the Shell, HDK, and SDK.  This release provides F1 developers with documentation and tools to start building their Custom Logic (CL) designs to work with the F1 instances.

Any items in this release marked as WIP (Work-in-progress) or NA (Not available yet) are not currently supported by the 1.2.0 release.


## Release 1.2.0 Content Overview

This is the first Generally Available release of the AWS EC2 FPGA Development Kit.  Major updates are included for both the HDK and SDK directories.  1.2.0 a required version for all Developers running on F1 instances, and prior releases of the FPGA Development Kit are not supported. 

**All AFIs created with previous HDK versions will no longer correctly load on an F1 instance**, hence a `fpga-load-local-image` command executed with an AFI created prior to 1.2.0 will return an error and not load.


## Release 1.2.0 New Features Details

The following major features are included in this HDK release: 

### 1.	New Shell, with modified Shell/CL interface. Changes are covered in: 

* [New Shell Stable: 0x04151701](./hdk/common/shell_v04151701)
* cl_ports.vh have the updated port list 
* [AWS_Shell_Interface_Specification.md](./hdk/docs/AWS_Shell_Interface_Specification.md) has been updated
* Updated the xdc timing constrains under [constraints](./hdk/common/shell_v032117d7/build/constraints) to match the new interfaces 
* Updated [CL HELLO WORLD](./hdk/cl/examples/cl_hello_world) example to use the new cl_ports.vh
* DCP for the latest shell v04151701. AWS Shell DCP is stored in S3 and fetched/verified when `hdk_setup.sh` script is sourced.


### 2.	Integrated DMA in Beta Release. AWS Shell now includes DMA capabilities on behalf of the CL
* The DMA bus toward the CL is multiplexed over sh_cl_dma_pcis AXI4 interface so the same address space can be accessed via DMA or directly via PCIe AppPF BAR4 
* DMA usage is covered in the new [CL_DRAM_DMA example](./hdk/cl/examples/cl_dram_dma) RTL verification/simulation and Software 
* A corresponding AWS Elastic DMA ([EDMA](./sdk/linux_kernel_drivers/edma)) driver is provided.
* [EDMA Installation Readme](./sdk/linux_kernel_drivers/edma/edma_install.md) provides installation and usage guidlines
* The initial release supports a single queue in each direction
* DMA support is in Beta stage with a known issue for DMA READ transactions that cross 4K address boundaries.  See [Kernel_Drivers_README](./sdk/linux_kernel_drivers/README.md) for more information on restrictions for this release


### 3.	CL  User-defined interrupt events.  The CL can now request sending MSI-X to the instance CPU
* * Usage covered in new [CL_DRAM_DMA example](./hdk/cl/examples/cl_dram_dma)
* A corresponding AWS EDMA driver is provided under [/sdk/linux_kernel_drivers/edma](./sdk/linux_kernel_drivers/edma)
* [EDMA Installation](./sdk/linux_kernel_drivers/edma/edma_install.md) provides installation and usage guidlines
* The initial release supports a single user-defined interrupt 

### 4.	Added a Mandatory Manifest.txt file submitted with each DCP via create-fpga-image API

* File content defined in [AFI Manifest](./hdk/docs/AFI_Manifest.md)
* AFI_Manifest.txt is created automatically if the developer is using the aws_build_dcp_from_cl.sh script
* PCI Vendor ID and Device ID are part of the manifest 
* Shell Version is part of the manifest 
* The Manifest.txt file is required for AFI generation
* All the examples and documentations for build include the description and dependency on the Manifest.txt

	
### 5.	Decoupling Shell/CL interface clocking from the internal Shell Clock 

* All the Shell/CL interfaces running off clk_main_a0, and no longer required to be 250Mhz. 
* The default frequency using the HDK build flow for `clk_main_a0` is 125Mhz as specified in recipe number A0. Allowing CL designs to have flexible frequency and not be constrained to 250Mhz only. All CL designs must include the recipe number in the manifest.txt file in order to generate an AFI.
* All xdc scripts have been updated to clk_main_a0 and to reference a table with the possible clocks’ frequencies combinations
* Updated CL_HELLO_WORLD and CL_DRAM_DMA examples to use the `clk_main_a0` 

### 6.	Additional User-defined Auxiliary Clocks
Additional tunable auxiliary clocks are generated by the Shell and fed to the CL. The clocks frequencies are set by choosing a clock recipe per group from a set of predefined frequencies combination in [clock recipes table](./hdk/docs/clock_recipes.csv)

* Clock frequency selection is set during build time, and recorded in the manifest.txt (which should include the clock_recipe_a/b/c parameters)
* Clock frequency programming in the FPGA slot itself occurs when the AFI is loaded. The list of supported frequencies is available [here](./hdk/docs/clock_recipes.csv)
* See [AWS_Shell_Interface_Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) for details on the clocking to the CL  
* See [AFI Manifest](./hdk/docs/AFI_Manifest.md) for details on the AFI manifest data
* xdc is automatically updated with the target frequency (WIP)

### 7.	Additional PCIe BARs and update PCIe Physical Function mapping

** The AppPF now has 4 different PCIe BARs:**

* BAR0 and BAR1 support 32-bit access for different memory ranges of the CL through separate AXI-L interfaces 
* BAR2 is used exclusively for the DMA inside the Shell and MSI-X interrupt tables  
* BAR4 expanded to 128GiB to cover all external DRAM memory space


** ManagementPF added additional PCIe BARs:**

* BAR2 is used for Virtual JTAG
* BAR4 is used for SDAccel Management (WIP)
* [AWS Shell Interface Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) covers these changes in detail
* [AWS FPGA PCIe Memory Map](./hdk/docs/AWS_Fpga_Pcie_Memory_Map.md) covers the address map details
* The [FPGA PCI library](./sdk/userspace/include/fpga_pci.h) provides simple APIs to take advantage of these BARs


** MgmtPF and AppPF are now represented as different PCIe devices in F1 instances:**
* Each FPGA Slot will occupy two PCIe buses, one for AppPF and one for MgmtPF


### 8.	Expanded AppPF BAR4 space to 128GiB 

* BAR4 addressing space enables a CL to fully map FPGA card DRAM into the AppPF address space.  AppPF BAR4 is now a 128GB BAR  
* [AWS Shell Interface Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) covers these changes in detail
* [AWS FPGA PCIe Memory Map](./hdk/docs/AWS_Fpga_Pcie_Memory_Map.md) covers the address map in detail

  
### 9.	Added wider access on the Shell to CL AXI4 512-bit bus (sh_cl_dma_pcis)

* Wider access provides higher bandwidth DMA and host to FPGA access
* Instance CPU can now burst full 64-byte write burst to AppPF PCIe BAR4 if mapped as Burstable (a.k.a WC: WriteCombine) (WIP)
* pci_poke_burst() and pci_poke64() calls were added to [fpga_pci library](./sdk/userspace/include/fpga_pci.h) to take advantage of this
* CL_DRAM_DMA and CL_HELLO_WORLD examples support for a wider access was added


### 10.	Support larger than 32-bit access to PCIe space

* Large inbound transaction going to AppPF PCIe BAR4 will be passed onward to the CL  
* Large inbound transactions going to the other BARs will be split by the Shell to multiple 32-bit accesses, and satisfy AXI-L protocol specification.


### 11.	Enhanced AXI4 error handling and reporting

* Additional error conditions detected on the CL to Shell Interface and reported through fpga-describe-image tool
* See [AWS Shell Interface Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) for more details
* FPGA Management Tool [metrics output](./sdk/userspace/fpga_mgmt_tools/README.md) covers the additional error handling details

### 12.	Expanded AXI ID space throughout the design

* The AXI buses between Shell and CL support an expanded number of AXI ID bits to allow for bits to be added by AXI fabrics  See [AWS Shell Interface Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) for more details


### 13.	Shell to CL interface metrics.  

* New metrics for monitoring the Shell to CL are available from the AFI Management Tools. 
* See [fpga mgmt tools readme](./sdk/userspace/fpga_mgmt_tools/README.md) for more details


### 14.	Virtual LED/DIP Switches.  

* Added CL capability to present virtual LEDs and push virtual DIP switches indications to the CL, set and read by FPGA Management Tools and without involving CL logic, providing the developer an environment similar to developing on local boards with LED and DIP switches
* See new commands in [FPGA Image Tools](./sdk/userspace/fpga_mgmt_tools/README.md) for description of the new functionality
* CL_HELLO_WORLD example includes some logic to set LED and adjust according to vDIP
* See [AWS Shell Interface Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) for more details


### 15.	Virtual JTAG

* The Shell has the capability for supporting CL integrated Xilinx debug cores like Virtual I/O (VIO) and Integrated Logic Analyzer (ILA) and includes support for local/remote debug by running XVC  
* [Virtual_JTAG_XVC](./hdk/docs/Virtual_JTAG_XVC.md) describes how to use Virtual JTAG from linux shell
* cl_debug_bridge module was added to HDK common directory
* Support for generating .ltx files after `create-fpga-image` was added.  .ltx file is required when running interactive ILA/VIO debug (WIP)
* Build tcl and xdc includes the required changes to enable Virtual JTAG 
* See [CL_DRAM_DMA](./hdk/cl/examples/cl_dram_dma) for examples on using Virtual JTAG and XVC for debug

### 16.	Examples summary table

* [Example Summary Table](./hdk/cl/examples/cl_examples_list.md) covers which CL capabilities is demonstrated in each example


### 17.	Updated CL_HELLO_WORLD Example

* Matching the new Shell/CL interface 
* Add support for 32-bit peek/poke via ocl\_ AXI-L bus
* Adding Virtual JTAG support with Xilinx ILA and VIO debug cores (WIP)
* Demonstrate the use of Virtual LED and Virtual DIPSwitch
* Runtime software examples, leveraging fpga_pci and fpga_mgmt C-libraries
* Updated PCIe Vendor ID and Device ID
* See [CL HELLO WORLD readme](./hdk/cl/examples/cl_hello_world/README.md) for more details


### 18.	Added CL_DRAM_DMA Example

* Mapping AppPF PCIe BAR4 to DRAM
* Using DMA to access same DRAM
* Using SystemVerilog Bus constructs to simplify the code
* Demonstrate the use of User interrupts
* Demonstrate the use of bar1\_ AXI-L bus
* Includes Runtime C-code application under [CL_DRAM_DMA software](./hdk/cl/examples/cl_dram_dma/software) (WIP)
* See [CL_DRAM_DMA README](./hdk/cl/examples/cl_dram_dma/README.md)


### 19.	Software Programmer View document 

* The [Software Programmer View document](./hdk/docs/Programmer_View.md) is added to explain the various ways a linux user-space application can work with AWS FPGA Slots


### 20.	Two C-libraries for FPGA PCIe access and for FPGA Management

* The C-libraries are simplifying and adding more protections from developer’s mistakes when writing a runtime C-application
* [Fpga_mgmt.h](./sdk/userspace/include/fpga_mgmt.h) cover the APIs for calling management functions
* [Fpga_pcie.h](./sdk/userspace/include/fpga_pci.h) covers the API for access the various PCI memory spaces of the FPGA
* CL_HELLO_WORLD and CL_DRAM_DMA examples updated to use these libraries.

### 21.	VHDL support is added

* Included Vivado encryption key file for VHDL
* Added VHDL-specific line in `encrypt.tcl` reference files
* Developer would need to add `read_vhdl` in `create_dcp_from_cl.tcl`

### 22.	Additional FPGA Management Tools added

*	See [FPGA Management Tools](./sdk/userspace/fpga_mgmt_tools/README.md) for more details

### 23.	Support for Vivado 2017.1 Build 

* The FPGA Development AMI includes Vivado 2017.1
* Older Vivado versions will not be supported

### 24.	Embed the HDK version and Shell Version as part of git tree

* [hdk_version.txt](./hdk/hdk_version.txt)
* [shell_version.txt](./hdk/common/shell_stable)

### 25.	Initial Release of SDAccel and OpenCL Support (NA)

* Updated documentation in /sdk/SDAccel (NA)
* OpenCL runtime HAL for supporting SDAccel and OpenCL ICD in /sdk/userspace (NA)
* SDAccel build post-processing to register SDAccel xcl.bin as AFI. (NA) 

### 26.	Simplify handling of unused Shell to CL interfaces

* Developers can simply call `include ""unused\_**BUS\_NAME**\_template.inc"" for every unused interface
* List of potential files to include is available in `$HDK_SHELL_DIR/design/interfaces/unused\*`
* cl_hello_world.sv and cl_dram_dma.sv provide examples (at the each of each file)

### 27.	Support multiple Vivado versions

* `hdk_setup.sh` compares between the list of Vivado versions supported by the HDK and the installed vivado versions
* `hdk_setup.sh` would automatically choose the Vivado version from the available binaries in AWS FPGA Developer's AMI

### 28.	Changes in DRAM controller setting to improve bandwidth utilization

* Change address decoding to ROW_COL_INTLV mode
* Enable auto precharge on COL A3

",72888735
319,False,True,2017-04-14T14:38:35Z,2017-04-14T14:49:56Z,"## Release 1.1.0 New Features Details

The following new features are included in this HDK release: 

### 1.	New Shell, with modified Shell/CL interface. Changes are covered in: 

* [New Shell Stable: 0x032117d7](./hdk/common/shell_v032117d7)
* cl_ports.vh have the updated port list 
* Removed all the `ifdef and `ifndef from the cl_ports.vh
* Added all the interfaces required for SDAccel platform support 
* [AWS_Shell_Interface_Specification.md](./hdk/docs/AWS_Shell_Interface_Specification.md) has been updated
* Updated the xdc timing constrains under [constraints](./hdk/common/shell_v032117d7/build/constraints) to match the new interfaces (WIP)
* Updated [CL HELLO WORLD](./hdk/cl/examples/cl_hello_world) example to use the new cl_ports.vh
* Updated clean_log.pl [scripts](./hdk/common/shell_v032117d7/build/scripts/clean_log.pl) (WIP)
* DCP for the latest shell v032117d7. AWS Shell DCP is now stored in S3 and fetched/verified when `hdk_setup.sh` script is sourced.


### 2.	New Integrated DMA. AWS Shell now includes DMA capabilities on behalf of the CL
* The DMA bus toward the CL is multiplexed over sh_cl_dma_pcis AXI4 interface so the same address space can be accessed via DMA or directly via PCIe AppPF BAR4 
* DMA usage is covered in the new [CL_DRAM_DMA example](./hdk/cl/examples/cl_dram_dma) RTL verification/simulation and Software 
* A corresponding AWS Elastic DMA ([EDMA](./sdk/linux_kernel_drivers/edma)) driver is provided.
* [EDMA Installation Readme](./sdk/linux_kernel_drivers/edma/edma_install.md) provides installation and usage guidlines
* The initial release supports a single queue in each direction
* Renamed sh_cl_pcis to sh_cl_dma_pcis

### 3.	CL  User-defined interrupt events.  The CL can now request sending MSI-X to the instance CPU
* Added new req/ack interface on Shell/CL interface
* Usage covered in new [CL_DRAM_DMA example](./hdk/cl/examples/cl_dram_dma): RTL verification/simulation and software (WIP)
* A corresponding AWS EDMA driver is provided under [/sdk/linux_kernel_drivers/edma](./sdk/linux_kernel_drivers/edma)
* [EDMA Installation](./sdk/linux_kernel_drivers/edma/edma_install.md) provides installation and usage guidlines
* The initial release supports a single user-defined interrupt 

### 4.	Added a Mandatory Manifest.txt file submitted with each DCP via create-fpga-image API

* File content defined in [AFI Manifest](./hdk/docs/AFI_Manifest.md)
* AFI_Manifest.txt is created automatically if the developer is using the aws_build_dcp_from_cl.sh script
* PCI Vendor ID and Device ID are now part of the manifest and no longer needed in `create-fpga-image`
* Shell Version is part of the manifest and no longer needed in `create-fpga-image`
* All the examples and documentations for build include the description and dependency on the Manifest.txt
	
### 5.	create-fpga-image `-shell_version` and `--pci*` arguments are obsolete 

* From this version the shell_version, pci_vendor_id, pci_device_id, pci_subsystem_id and pci_subsystem_vendor_id arguments are mandatory parameters in manifest.txt that should be submitted within the tar file

### 6.	Decoupling Shell/CL interface clocking from the internal Shell Clock 

* All the Shell/CL interfaces running off the newly introduced clk_main_a0, and no longer required to be 250Mhz. 
* The default frequency using the HDK build flow for `clk_main_a0` is 125Mhz as specified in recipe number A0. Allowing CL designs to have flexible frequency and not be constrained to 250Mhz only. All CL designs must include the recipe number in the manifest.txt file in order to generate an AFI.
* All xdc scripts have been updated to clk_main_a0 and to reference a table with the possible clocks’ frequencies combinations
* Obsolete the cl_clk interface
* Updated CL_HELLO_WORLD and CL_DRAM_DMA examples to use the `clk_main_a0` 

### 7.	Additional User-defined Auxiliary Clocks
Additional tunable auxiliary clocks are generated by the Shell and fed to the CL. The clocks frequencies are set by choosing a clock recipe per group from a set of predefined frequencies combination in [clock recipes table](./hdk/docs/clock_recipes.csv)

* Clock frequency selection is set during build time, and recorded in the manifest.txt (which should include the clock_recipe_a/b/c parameters)
* Clock frequency programming in the FPGA slot itself occurs when the AFI is loaded. The list of supported frequencies is available [here](./hdk/docs/clock_recipes.csv)
* See [AWS_Shell_Interface_Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) for details on the clocking to the CL  
* See [AFI Manifest](./hdk/docs/AFI_Manifest.md) for details on the AFI manifest data
* xdc is automatically updated with the target frequency (WIP)

### 8.	Additional PCIe BARs and update PCIe Physical Function mapping

** The AppPF now has 4 different PCIe BARs:**

* BAR0 and BAR1 have been expanded to support 32-bit access for different memory ranges of the CL through separate AXI-L interfaces 
* BAR2 is used exclusively for the DMA inside the Shell and MSI-X interrupt tables  
* BAR4 expanded to 128GiB to cover all external DRAM memory space


** ManagementPF added additional PCIe BARs:**

* BAR2 is used for Virtual JTAG
* BAR4 is used for SDAccel management 
* [AWS Shell Interface Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) covers these changes in detail
* [AWS FPGA PCIe Memory Map](./hdk/docs/AWS_Fpga_Pcie_Memory_Map.md) covers the address map details
* The [FPGA PCI library](./sdk/userspace/include/fpga_pci.h) provides simple APIs to take advantage of these BARs


** MgmtPF and AppPF are now represented as different PCIe devices in F1 instances:**
* Each FPGA Slot will now occupy two PCIe buses, one for AppPF and one for MgmtPF
* No change is required on the developer's side as long as the developer is using `fpga-image-tools` linux shell commands and/or `fpgamgmt.lib` C-APIs.


### 9.	Expanded AppPF BAR4 space to 128GiB 

* BAR4 has expanded addressing space to enable a CL to fully map FPGA card DRAM into the AppPF address space.  AppPF BAR4 is now a 128GB BAR  
* [AWS Shell Interface Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) covers these changes in detail
* [AWS FPGA PCIe Memory Map](./hdk/docs/AWS_Fpga_Pcie_Memory_Map.md) covers the address map in detail

  
### 10.	Added wider access on the Shell to CL AXI4 512-bit bus (sh_cl_dma_pcis)

* Wider access provides higher bandwidth DMA and host to FPGA access
* Instance CPU can now burst full 64-byte write burst to AppPF PCIe BAR4 if mapped as Burstable (a.k.a WC: WriteCombine) (WIP)
* pci_poke_burst() and pci_poke64() calls were added to [fpga_pci library](./sdk/userspace/include/fpga_pci.h) to take advantage of this
* CL_DRAM_DMA and CL_HELLO_WORLD examples support for a wider access was added


### 11.	Support larger than 32-bit access to PCIe space

* Large inbound transaction going to AppPF PCIe BAR4 will be passed onward to the CL  
* Large inbound transactions going to the other BARs will be split by the Shell to multiple 32-bit accesses, and satisfy AXI-L protocol specification.


### 12.	Enhanced AXI4 error handling and reporting

* Additional error conditions detected on the CL to Shell Interface and reported through fpga-describe-image tool
* See [AWS Shell Interface Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) for more details
* FPGA Management Tool [metrics output](./sdk/userspace/fpga_mgmt_tools/README.md) covers the additional error handling details

### 13.	Expanded AXI ID space throughout the design

* The AXI buses between Shell and CL support an expanded number of AXI ID bits to allow for bits to be added by AXI fabrics  See [AWS Shell Interface Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) for more details


### 14.	Shell to CL interface metrics.  

* New metrics for monitoring the Shell to CL are available from the AFI Management Tools. 
* See [fpga mgmt tools readme](./sdk/userspace/fpga_mgmt_tools/README.md) for more details


### 15.	Virtual LED/DIP Switches.  

* Added CL capability to present virtual LEDs and push virtual DIP switches indications to the CL, set and read by FPGA Management Tools and without involving CL logic, providing the developer an environment similar to developing on local boards with LED and DIP switches
* See new commands in [FPGA Image Tools](./sdk/userspace/fpga_mgmt_tools/README.md) for description of the new functionality
* CL_HELLO_WORLD example includes some logic to set LED and adjust according to vDIP
* See [AWS Shell Interface Specification](./hdk/docs/AWS_Shell_Interface_Specification.md) for more details


### 16.	Virtual JTAG

* The Shell has the capability for supporting CL integrated Xilinx debug cores like Virtual I/O (VIO) and Integrated Logic Analyzer (ILA) and includes support for local/remote debug by running XVC  
* [Virtual_JTAG_XVC](./hdk/docs/Virtual_JTAG_XVC.md) describes how to use Virtual JTAG from linux shell
* cl_debug_bridge module was added to HDK common directory
* Support for generating .ltx files after `create-fpga-image` was added.  .ltx file is required when running interactive ILA/VIO debug (WIP)
* Build tcl and xdc includes the required changes to enable Virtual JTAG 
* See [CL_DRAM_DMA](./hdk/cl/examples/cl_dram_dma) for examples on using Virtual JTAG and XVC for debug

### 17.	Examples summary table

* [Example Summary Table](./hdk/cl/examples/cl_examples_list.md) covers which CL capabilities is demonstrated in each example


### 18.	Updated CL_HELLO_WORLD Example

* Matching the new Shell/CL interface 
* Add support for 32-bit peek/poke via ocl\_ AXI-L bus
* Adding Virtual JTAG support with Xilinx ILA and VIO debug cores (WIP)
* Demonstrate the use of Virtual LED and Virtual DIPSwitch
* Runtime software examples, leveraging fpga_pci and fpga_mgmt C-libraries
* Updated PCIe Vendor ID and Device ID
* See [CL HELLO WORLD readme](./hdk/cl/examples/cl_hello_world/README.md) for more details


### 19.	Added CL_DRAM_DMA Example

* Mapping AppPF PCIe BAR4 to DRAM
* Using DMA to access same DRAM
* Using SystemVerilog Bus constructs to simplify the code
* Demonstrate the use of User interrupts
* Demonstrate the use of bar1\_ AXI-L bus
* Includes Runtime C-code application under [CL_DRAM_DMA software](./hdk/cl/examples/cl_dram_dma/software) (WIP)
* See [CL_DRAM_DMA README](./hdk/cl/examples/cl_dram_dma/README.md)


### 20.	Removed the CL_SIMPLE example

* Moved the main functionality to CL_DRAM_DMA and removed the mapping AppPF PCIe BAR4 to DRAM

### 21.	Software Programmer View document 

* The [Software Programmer View document](./hdk/docs/Programmer_View.md) is added to explain the various ways a linux user-space application can work with AWS FPGA Slots


### 22.	Two C-libraries for FPGA PCIe access and for FPGA Management

* The C-libraries are simplifying and adding more protections from developer’s mistakes when writing a runtime C-application
* [Fpga_mgmt.h](./sdk/userspace/include/fpga_mgmt.h) cover the APIs for calling management functions
* [Fpga_pcie.h](./sdk/userspace/include/fpga_pci.h) covers the API for access the various PCI memory spaces of the FPGA
* CL_HELLO_WORLD and CL_DRAM_DMA examples updated to use these libraries.

### 23.	VHDL support is added

* Included Vivado encryption key file for VHDL
* Added VHDL-specific line in `encrypt.tcl` reference files
* Developer would need to add `read_vhdl` in `create_dcp_from_cl.tcl`

### 24.	Additional FPGA Management Tools added

*	See [FPGA Management Tools](./sdk/userspace/fpga_mgmt_tools/README.md) for more details

### 25.	Upgrade to Vivado 2016.04-SDx Build 

* The FPGA Development AMI includes Vivado 2016.4-SDx
* Older Vivado versions will not be supported

### 26.	Embed the HDK version and Shell Version as part of git tree

* [hdk_version.txt](./hdk/hdk_version.txt)
* [shell_version.txt](./hdk/common/shell_stable)

### 27.	Initial Release of SDAccel and OpenCL Support (NA)

* Updated documentation in /sdk/SDAccel (NA)
* OpenCL runtime HAL for supporting SDAccel and OpenCL ICD in /sdk/userspace (NA)
* SDAccel build post-processing to register SDAccel xcl.bin as AFI. (NA) 

### 28.	Updates the `/hdk/common` Directory structures

* To identify the `shell_stable` and `shell_next` directories for stable and work-in-progress shells respectively

### 29.	Simplify `create_dcp_from_cl.tcl` and `encrypt.tcl` scripts

* Reduced script complexity by consolidating CL design files list into one script.
* The list of CL design source files would only need to be updated in `encrypt.tcl` script
* Removed pr_verify stage from `create_dcp_from_cl.tcl`.  PR (Partial Reconfiguration) verification is optional and customers

### 30.	Simplify handling of unused Shell to CL interfaces

* Developers can simply call `include ""unused\_**BUS\_NAME**\_template.inc"" for every unused interface
* List of potential files to include is available in `$HDK_SHELL_DIR/design/interfaces/unused\*`
* cl_hello_world.sv and cl_dram_dma.sv provide examples (at the each of each file)

### 31.	Support multiple Vivado versions

* `hdk_setup.sh` compares between the list of Vivado versions supported by the HDK and the installed vivado versions
* `hdk_setup.sh` would automatically choose the Vivado version from the available binaries in AWS FPGA Developer's AMI

### 32.	Changes in DRAM controller setting to improve bandwidth utilization

* Change address decoding to ROW_COL_INTLV mode
* Enable auto precharge on COL A3

",72888735
320,False,True,2016-12-23T20:31:22Z,2016-12-23T20:46:21Z,"This is a minor pre-release to mark the integration of the Xilinx SDAccel into the Developer's Kit.
",72888735
321,False,True,2016-12-15T19:41:44Z,2016-12-15T22:43:19Z,"This is the first aws-fpga release on GitHub. It includes everything from the old HDK 0.7a plus the latest items for the ""unc"" shell.
",72888735
322,False,True,2020-03-19T22:58:48Z,2020-03-19T23:01:24Z,"Changes since the release 3 March 2020:
- Update USER-COLVARS package to version 2020-02-27 (Giacomo Fiorin, Temple U) PR #1909 
- Move fix bond/react into its own package, USER-REACTION (Jake Gissinger CU Boulder) PR #1822 
- Update the molecule command to add support for setting molecule IDs and grouping atoms into fragments (Jake Gissinger CU Boulder) PR #1913
- Optimizations for the KOKKOS version of SNAP (Evan Weinberg, NVIDIA) PR #1922 
- New pair styles with smeared coulomb charge interactions (coul/slater) (Evangelos Voyiatzis,Royal DSM) PR #1883 
- New fix numdiff command to compute derivatives of per-atom data numerically from finite differences (Charles Sievers, UC Davis) PR #1891 
- Require C++11 and CMake 3.10, simplify some CMake settings and remove checks for pre-C++11 compilers (Axel Kohlmeyer and Giacomo Fiorin, Temple U) PR #1915, PR #1930 
- Improved CMake support for the ""ninja"" build tool (Christoph Junghans, LANL) PR #1940 
- Improved CMake support for cross-compiling LAMMPS for Windows on Linux (Axel Kohlmeyer, Temple U) PR #1949 , PR #1950 
- Avoid a clash between the KOKKOS and GPU package with `-DCUDPP_OPT=on` (default setting) (Axel Kohlmeyer, Temple U) PR #1918 
- Changes to the binary restart file format, so that incomplete restart files can be detected. Also an option to fix halt to monitor file systems for available free space (Axel Kohlmeyer, Temple U) PR #1862
- Validate coordinate data when reading data files (Axel Kohlmeyer, Temple U) PR #1945 
- Rename package USER-MESO to USER-MESODPD (Axel Kohlmeyer, Temple U) PR #1924 
- Major documentation cleanup that removes artifacts from txt2rst processing, updates many external URLs, improves syntax highlighting settings, and uses more consistent typesetting for examples and throughout the text. USER-ATC documentation is now in rst format, too. (Axel Kohlmeyer and Richard Berger, Temple U) PR #1926, PR #1932, PR #1936, PR #1938, PR #1939 , PR #1948, PR #1945 
- Various tweaks, bugfixes, and small updates (multiple authors) PR #1918 , PR #1923 , PR #1920 , PR #1928, PR #1929 , PR #1930, PR #1940, PR #1945  

Backward compatibility note:
- As of this release LAMMPS requires a C++11 compatible compiler
- Building LAMMPS with CMake now requires CMake version 3.10 or later
- The USER-MESO package was renamed to USER-MESODPD. All styles included in the package have retained their names
- `read_data` will now stop with an error on invalid coordinates or image flag data (instead of using a 0) and on non-zero image flags for z in 2d-systems",12007030
323,False,True,2020-03-03T15:51:36Z,2020-03-03T15:57:56Z,This patch contains only a few updates to the documentation ( PR #1910 ) and a CMake tweak ( PR #1912 ) to make it a stable release.,12007030
324,False,True,2020-02-27T19:40:27Z,2020-02-27T19:41:58Z,"This is the second release candidate for the Winter 2019/2020 stable release of LAMMPS.

Changes since the patch release 18 February 2020:
- Further refactoring of the manual with significant corrections and updates to the introductory, build, and package sections. Also, all remaining mathematical expressions typeset in LaTeX and included as pictures are now included as embedded math and will be rendered as needed during the creation of the documentation in either HTML or PDF or ePUB format. The embedded math in the HTML pages can now be viewed without internet access. Fixes to the embedded math to avoid errors with ePUB format output. Various updates and fixes to build procedures for USER-QMMM.  (Axel Kohlmeyer and Richard Berger, Temple U) PR #1888 and PR #1903 
- Updates to QM/MM compilation with Quantum Espresso version 6.3 and higher (Mariella Ippolito, CINECA) PR #1886 
- bugfix for a race condition in `temper` commands in combination with `timer timeout` (Stephen Farr, University of Cambridge) PR #1892 
- remove conditional C++11 check for stable release. will become an unconditional check after the release. (Axel Kohlmeyer, Temple U) PR #1885 
- avoid divergence and energy spikes in in pair style thole of the USER-DRUDE package (Agilio Padua and Kateryna Goloviznina, ENS de Lyon) PR #1899 
- new example in the COUPLE folder for dynamically loading LAMMPS as a plugin into a C code (Axel Kohlmeyer, Temple U) PR #1900 
- several small bugfixes and updates (various authors) PR #1897 , PR #1893 , PR #1896 , PR #1901 , PR #1894 , PR #1905 , PR #1908 

Backward compatibility note:
- No known backward compatibility issues",12007030
325,False,False,2020-03-03T15:54:00Z,2020-03-04T16:05:30Z,"**IMPORTANT NOTE**:
This is the last LAMMPS release that does NOT require a C++11 compiler for the core code and CMake version 3.10 or newer. The next patches and stable releases will require a C++11 compatible C++ compiler to compile all of LAMMPS, not just for some of the optional packages. For some older compilers (e.g. GCC 4.8.x on CentOS 7.x) a flag to enable C++11 support may be required (e.g. `-std=c++11` or `-std=gnu++11`  in the case of GCC 4.8.x).

### Below is a list of major changes since the last stable release 7 August 2019.

## General changes
* The documentation file format has been changed from the custom txt2html markup to using reStructuredText (rst). This provides several advantages to have a better looking and more functional documentation. As a first step, all externally rendered equations have been converted to embedded math and all raw HTML markup converted. Most boxes with examples, will use syntax highlighting. Further improvements of typesetting and layout are forthcoming. Additional consistency checks are now applied when processing the documentation.
* Many file read operations are now monitored for read errors and thus allowing to detect damaged or incomplete files like potential parameter files and restart files
* Updates and improvements to the CMake build system to more closely match all the functionality provided by the conventional make based build system
* Support for threaded FFTs from FFTW and MKL, support for cuFFT and KISSFFT on the GPU with KOKKOS
* Expose neighbor lists to the library interface and the Python wrapper
* Documentation of installing LAMMPS via `conda`
* Many small improvements or bugfixes

## Updates and new commands or styles
- new `dump_modify` options to embed `ITEM: UNITS` and `ITEM: TIME` with information about units and accumulated simulation time
- new pair styles `cosine/squared`, `local/density`, `mesocnt`
- new fix styles `wall/reflect/stochastic`, `propel/self`, 'npt/cauchy`
- new compute `gyration/shape/chunk`
- new compute `hma` for fast, high-precision computation of certain thermodynamic properties of solids
- new compute style `centroid/stress/atom` for computing per atom stress in a way allowing for more accurate heat flux computations with interactions involving more than two atoms
- new `third_order` command, a companion command to `dynamical_matrix`, for computing the third order force tensor from finite differences
- new options `ratio` and `subset` for `create_atoms` and similarly new options `type/ratio` and `type/subset` to the `set` command
- new tool for post-processing parallel tempering trajectories
- multiple updates, bugfixes, and improvements to `fix bond/react`
- improved implementation of minimization style `fire`
- support to run NWChem along with LAMMPS in client/server mode

## Updates for packages
- KOKKOS now supports minimization (limited to minimization styles `cg` and `quadratic`), updates to the KOKKOS library, general improvements and bugfixes, more styles ported to KOKKOS
- several new SNAP potentials
- tweaks to USER-INTEL to compile correctly with too aggressively optimizing compilers, corrections and improvements
- bugfixes and improvements for the GRANULAR package
- several new SNAP potentials and a new compute `snap` for training SNAP potentials
- bugfixes and improvements to the KIM package, new command `kim_param` for accessing KIM model parameters
- updates to the USER-COLVARS package with updates to the included Lepton library
- updates to the USER-PLUMED package with bugfixes and support for recent releases
- updates to the USER-CGDNA package including a new coarse grained RNA model (oxRNA2)
- improvements and updates to the SPIN package, L-BFGS minimizer added
- updates, extensions, and improvements to the USER-MEAMC package
- memory leaks fixed when using styles from the GPU with multiple run commands, new pair style `lj/cut/tip4p/long/gpu`
- updates to `fix rigid` variants to add gravity to rigid objects with overlapping (granular) particles
- support for `rerun` and `read_dump` with USER-ADIOS

## Backward compatibility notices
- building the USER-COLVARS package with all features enabled now requires a C++-11 compatible compiler
- due to changes in the random number generator initialization, results when using `fix pour`, `fix deposit`, `fix evaporate` or `create_atoms random` will not match with previous versions of LAMMPS. see PR #1569 
- the `gjf` keyword for `fix langevin` no longer supports the option `yes`. Instead you have to use either `vhalf` or `vfull`
- the FIRE minimizer has been replaced with an improved implementation. The previous implementation is available as `fire/old`.
- new documentation has to be written in reStructuredText format
",12007030
326,False,True,2020-02-17T19:56:09Z,2020-02-17T19:59:49Z,"This is a release candidate for the Winter 2019/2020 stable release of LAMMPS.

Changes since the patch release 4 February 2020:
- GPU kernel optimizations for pair style lj/cut/tip4p/long/gpu (Vsevolod Nikolskiy, HSE Univ. Moscow) PR #1876 
- Various small updates and bugfixes (multiple authors) PR #1875,  PR #1877, PR #1882  
- Update of USER-PLUMED to support Plumed 2.6 (Axel Kohlmeyer, Temple U) PR #1879 
- Further refactoring of the manual by converting external math expressions to be embedded math in .rst files (Axel Kohlmeyer and Richard Berger, Temple U) PR #1869 

Backward compatibility note:
- No known backward compatibility issues",12007030
327,False,True,2020-02-03T16:51:44Z,2020-02-03T16:53:06Z,"Changes since the patch release 24 January 2020:
- Improved version of the FIRE minimizer option with better convergence and more options to adapt its behavior (Julien Guénolé, RWTH Aachen and Erik Bitzek, FAU Erlangen-Nuernberg) PR #1052 
- Update Colvars library to version 2020-01-27 (Giacomo Fiorin and multiple Contributors to the Colvars project) PR #1859 
- new SNAP potential parameter files for single element systems containing Cu, Ge, Li, Mo, Ni, or Si (Yunxing Zuo, UCSD) PR #1866 
- Support threaded FFTs with MKL and refactoring of FFT support in KOKKOS (Axel Kohlmeyer, Temple U and Stan Moore, SNL) PR #1858 
- remove all legacy documentation sources. From now on writing reStructuredText is the only option. The txt2rst tool remains available, though. (Axel Kohlmeyer, Temple U), PR #1855
- add support to run NWChem along with LAMMPS in client/server mode (Jeff Boschen, Iowa State) PR #1703 
- various small changes, bugfixes and tweaks (multiple authors), PR #1857, PR #1860
- cleanup of the ReStructuredText source for the manual, convert more .tex file to embedded math, and corrections for issues due to inconsistencies in the conversion from the original txt2html markup or due to undetected errors in the original txt2html sources. (Axel Kohlmeyer, Temple U), PR #1861, PR #1864, PR #1867 

Backward compatibility notice:
- the FIRE minimizer (`min_style fire`) has been replaced with an improved version. The original implementation remains available as `fire/old`.",12007030
328,False,True,2020-01-25T02:01:46Z,2020-01-25T02:04:23Z,"Changes since the patch release 9 January 2020:
* new pair style `mesocnt` for mesoscopic modeling of (carbon) nanotubes (Philipp Kloza, U Cambridge), PR #1841 
* new `fix npt/cauchy` for improved handling of variable cells with large deformation (Ronald Miller, Carlton U, Fabio Pavia, and Subrahmanyam Pattamatta, UMN) PR #1096 
* new `fix propel/self` for self-propelling particles (Stefan Paquay, Brandeis U) PR #1847 
* new `fix wall/reflect/stochastic` for multiple variants of stochastic reflecting walls (Quy-Dong To, Université Paris Est Marne la Vallée), PR #1691 , PR #1838 
* added support for threaded FFTW3 in all versions of `pppm` and support for using cuFFT or KISSFFT on the GPU with KOKKOS when CUDA is enabled (Stan Moore (SNL), Sam Mish (U.C. Davis)), PR #1520 
* new `orient` option to fix deposit (Tongtong Shen), PR #1685 
* new `quit` option to `message` command for client/server coupling with the MESSAGE package (Steve Plimption, SNL), PR #1835 
* new examples for using `rerun` and `read_dump` (Steve Plimpton, SNL) PR #1829 
* new options `ratio` and `subset` for `create_atoms` plus `type/ratio` and `type/subset` for `set` to populate an exact ratio or exact number of lattice points of atoms when creating atoms or change the atom type with set. This also includes a significant performance improvement when creating a very large number of atoms with `create_atoms` (Jake Gissinger, UC Boulder and Steve Plimpton, SNL), PR #603 
* add support for `read_dump` and `rerun` to USER-ADIOS package (Norbert Podhorszki, ORNL) PR #1820 
* updated ILP potential files and new files for bulk systems, improve energy conservation of ILP pair styles with dangling bonds (Wengen Ouyang, Tel Aviv U) PR #1843
* disallow `pair_modify pair special` for styles from the GPU and USER-INTEL package (Axel Kohlmeyer, Temple U) PR #1834 
* fix a logic error in reading potential files for pair style bop and updates to the potential files that were missing data. (Don Ward, SNL and Axel Kohlmeyer, Temple U) PR #1831 
* added tool to check consistency of lists of command styles in documentation (Axel Kohlmeyer, Temple U) PR #1832  
* various small code updates, improvements, and bug fixes (multiple authors) PR #1811, PR #1830, PR #1833, PR #1836, PR #1837, PR #1845, PR #1848, PR #1850, PR #1852, PR #1853, PR #1857 
* various updates to documentation, examples, readme files (multiple authors) PR #1828, PR #1837 

Backward compatibility notice:
* no known backward compatibility issues",12007030
329,False,True,2020-01-09T19:21:53Z,2020-01-09T19:25:28Z,"Changes since the patch release 20 November 2019:
- More flexible handling of certificates in KIM package (Yaser Afshar, UMN) PR #1794 
- Expose LAMMPS neighbor lists to the library interface and to the Python wrapper (Richard Berger, Temple U) PR #1674 
- Addition of oxRNA2 model for RNA to the USER-CGDNA package (Oliver Henrich, Strathclyde U) PR #1772 , PR #1804 , PR #1812 
- New compute snap command to support training SNAP package potentials (Aidan Thompson, SNL) PR #1779 , PR #1796 
- New pair style lj/cut/tip4p/long/gpu for the GPU package (Vsevolod Nikolskiy, Vladimir Stegailov, Higher School of Economics, Moscow) PR #1776 
- Build the documentation directly from .rst files. Various updates to the process and integration of formula as direct rendered graphics via MathJAX (Richard Berger, Temple U) PR #1786 
- Updates, bugfixes, and new examples for the SPIN packages (Julien Tranchida, SNL) PR #1771 
- Multiple updates and bugfixes to the USER-INTEL package (Mike Brown, Intel Corp. and Axel Kohlmeyer Temple U), PR #1813 
- Detect parallel NetCDF when building with CMake (Johannes Hörmann, Uni Freiburg) PR #1819 
- Updates and fixes to the GPU package including some memory leak fixes (Trung Nguyen, Northwestern U) PR #1752 , PR #1807
- Updates to the KOKKOS package (Stan Moore, SNL) PR #1803 , PR #1816 
- Updates to fix rigid variants to support adding gravity to overlapping extended particles (Dan Bolinteanu and Steve Plimption, SNL) PR #1801 , PR #1823 
- Updates, extensions, and improvements to the USER-MEAMC package (Sebastian Huetter, Otto van Guericke U and Sungkwang Mun, MS State U) PR #1798 
- Updates and bugfixes to fix bond/react (Jake Gissinger, UC Boulder) PR #1795 
- Various small bugfixes and improvements (multiple authors) PR #1784, PR #1787, PR #1792, PR #1802, PR #1806 , PR #1783 , PR #1824 , PR #1817 , PR #1825 
- Fixes and updates to the documentation (multiple authors) PR #1789, PR #1787, PR #1800 

No known backward compatibility issues.",12007030
330,False,True,2019-11-20T17:06:44Z,2019-11-20T17:10:01Z,"Changes since the patch release 30 October 2019:
- new command `kim_param` to access KIM model parameters, (Yaser Afshar and the OpenKIM team at UMN), PR #1745
- new compute style `gyration/shape/chunk` to compute gyration tensor eigenvalues and shape parameters for chunks, (Evangelos Voiatzis, Royal DSM),PR #1739 
- new compute style `centroid/stress/atom` plus support for collecting the per atom stress in a way that leads to more accurate heat flux computations (Donatas Surblys, Tohoku University), PR #1704, PR #1782
- document installation of pre-compiled LAMMPS binaries via `conda` (Ryan Elliot, UMN), PR #1768
- Convert documentation to use .rst files as source instead of .txt. Retain .txt and tool to convert to .rst for transition period. Remove legacy documentation tools and makefile targets. (Richard Berger, Temple U and others), PR #1643, PR #1761, PR #1762, PR #1765, PR #1766, PR #1775  
- add a min and max limit to the number of particles inserted by fix gcmc (Jared Wood, U of Sydney), PR #1764
- Various small fixes and code improvements (multiple authors), PR #1756, PR #1758, PR #1759, PR #1755, PR #1766, PR #1763, PR #1767, PR #1740, PR #1769 

Backward compatibility notice:
- Documentation for the LAMMPS manual is now taken directly from .rst files and while the txt2rst converter tool is still available, .txt files will be incrementally removed as changes to the corresponding .rst files are applied that could not have done automatically via the txt2rst converter tool. Changes to the .rst files directly are encouraged and once those are done, the corresponding .txt (if it still exists) will have to be removed as those changes will not be backported.",12007030
331,False,True,2019-10-30T21:48:38Z,2019-10-30T21:49:33Z,"Changes since patch release 19 September 2019:
- new `third_order` command, a companion command to `dynamical_matrix`, that calculates the third order force constant tensor from finite differences, (Charles Sievers, UC Davis), PR #1690 
- add angle and Arrhenius constraints to fix bond/react, (Jake Gissinger, UC Boulder), PR #1697, PR #1713, PR #1734
- support quasi-unique base pairing in USER-CGDNA (Oliver Henrich, U of Strathclyde), PR #1730
- update to the Lepton library in the USER-COLVARS package, (Giacomo Fiorin, Temple U), PR #1724 
- updates to the `gjf` option in `fix langevin` to give access to either half-step or full-step velocities, (Charles Sievers, Niels Gronbech-Jensen, UC Davis), PR #1673, PR #1707, PR #1725 
- add missing option to add single impropers with the `create_bonds` command (Thomas Farmer, ISIS Neutron and Muon Source), PR #1706 
- add `max_norm` option to all minimizers and conjugate gradient and L-BFGS minimizers to the SPIN package. (Aleksei Ivanov, U of Iceland, Julien Tranchida, SNL), PR #1598 
- bugfix for pppm/tip4p when using non-orthogonal simulation cells, PR #1719 
- bugfix for restarting SPIN package runs and documentation clarification (Julien Tranchida, SNL), PR #1692 
- multiple bugfixes and documentation corrections for pair style `granular` (Jibril B. Coulibaly, Northwestern U), PR #1631 
- avoid correlations between multiple runs with random seeds incremented by 1 when using random placement of atoms (Jun-Chieh Wang (Applied Materials), PR #1569
- fix a memory leak in the GPU package when doing multiple `run` commands in the same input, (Trung Nguyen, Northwestern U), PR #1735
- Optimizations for using SNAP with KOKKOS (Stan Moore, SNL and Rahul Gayatri, NERSC), PR #1693
- new examples folder ""UNITS"" with examples highlighting how to run inputs for the same system with different unit sets and convert output between different them (Steve Plimpton, SNL), PR #1709 
- capture return value of calls to fread by using a wrapper, `utils::sfread()` and thus enable error reporting on reading restarts, (Axel Kohlmeyer, Temple U/ICTP) PR #1731
- A couple of singularity definition files to build container images for compiling/testing/debugging LAMMPS on different Linux variants, PR #1726, PR #1738
- various small changes, updates, and bugfixes (multiple authors), PR #1701, PR #1699, PR #1716, PR #1714, PR #1727, PR #1728, PR #1733, PR #1732, PR #1746, PR #1750, PR #1744, PR #1751

Backward compatibility notice:
- The `gjf` keyword for the `fix langevin` no longer supports `yes` as an option. Instead you have to use either `vhalf` or `vfull`.
- due to changes in the random number generator initializations, results when using `fix pour`, `fix deposit` or `fix evaporate` and when using `create_atoms random` will not match with previous versions of LAMMPS. see PR #1569
- Building the Colvars library with all features included now requires a C++11 compiler (see http://colvars.github.io/README-c++11.html).
",12007030
332,False,True,2019-09-19T21:19:55Z,2019-09-19T21:20:57Z,"Changes since stable release 7 August 2019:
- new pair style cosine/squared, (Eugen Rozic, UCL), PR #1626
- new pair style local/density for a generalized density dependent potential, (Tanmoy Sanyal, UCSB), PR #1666 
- support for minimization with KOKKOS (`min_style cg` with `quadratic` line search only), (Stan Moore, SNL) PR #1650
- support for dihedral style harmonic in KOKKOS, (Stan Moore, SNL) PR #1669 
- new compute hma for faster or higher precision computation of certain thermodynamic properties of solids, (A Schultz, A Purohit, D Kofke, U Buffalo), PR #1503 
- add support for setting fix external callbacks to the library interface with python interface included (Richard Berger, Temple U), PR #1641 
- add support for Morse potential to wall fixes (Eugen Rozic, UCL and Axel Kohlmeyer, Temple U), PR #1628, PR #1640 
- new tool to post process parallel tempering trajectories, (Tanmoy Sanyal, UCSB), PR #1660 
- small updates to the KIM package, (Ryan Elliot, UMN), PR #1625, PR #1632, PR #1638 
- more cmake tweaks, (Christoph Junghans, LANL, Richard Berger, Temple U), PR #1633, PR #1644, PR #1634 
- granular package bug fixes (Dan Bolinteanu, SNL), PR #1637 
- extend compute bond/local to provide access to force components, not just the total force, (Edward Smith, U of Brunel), PR #1667
- bugfix and refactoring of handling of custom computed properties in compute pair/local for hybrid pair styles, (Axel Kohlmeyer, Temple U), PR #1662 
- extend compute orientorder/atom to optionally output third order invariants, (Aidan Thompson, SNL), PR #1648, PR #1677  
- new SNAP potential for W-Be systems, (Mary Alice Cusentino, SNL), PR #1686
- add `dump_modify units yes` option to have an 'ITEM: UNITS' entry added at the beginning of LAMMPS native text mode dump files. (Axel Kohlmeyer, Temple U), PR #1672 
- small bugfix for fix bond/react and documentation updates, (Jake Gissinger, UC Boulder), PR #1645 
- more detailed error messages when using known fix, compute, or variable IDs in variable expressions, (Axel Kohlmeyer, Temple U) PR #1621 
- document example of using compute chunk/spread/atom for binning per-chunk computed data, (Steve Plimpton, SNL) PR #1642 
- updates and additions to machine specific makefiles for the conventional build system. PR #1654, PR #1661, PR #1653
- tweaks to USER-INTEL code and Makefiles for improved performance and to work around issues with some Intel compilers, (Mike Brown, Intel Corp.) PR #1683 
- support direct GPU communication for HPE MPI in KOKKOS (Gabriele Jost, NASA Ames Lab, Stan Moore, SNL), PR #1668
- include preprocessor test to detect non-C++11 compilers with support for define and CMake option to disable it. (Richard Berger, Axel Kohlmeyer, Temple U), PR #1684 
- small documentation updates. PR #1664, PR #1681 

Backward compatibility notice:
We are phasing out support for C++ compilers that do not support the C++11 standard. For older compilers (e.g. GCC 4.8.x) some flag to enable C++11 support may be required (e.g. `-std=c++11` or `-std=gnu++11`  in the case of GCC 4.8.x).",12007030
333,False,True,2019-08-06T15:20:20Z,2019-08-06T15:24:31Z,This patch has a couple of last minute changes and bugfixes included after the 6 August 2019 patch release to make the stable version. It includes the pull requests #1620 and #1622,12007030
334,False,True,2019-08-05T23:20:26Z,2019-08-05T23:21:56Z,"This patch has only minor corrections and documentation updates to update the 2 August 2019 patch release to a stable version. In particular:
- Update of the CMake documentation and some information about developer features available through CMake, Richard Berger (Temple U) PR #1613, PR #1617 
- Some tweaks to CMake and USER-INTEL code to improve Linux to Windows cross-compilation, Axel Kohlmeyer (Temple U) PR #1616 
- bugfix which updates the USER-COLVARS package to version 2019-08-05, Giacomo Fiorin (Temple U / NIH) PR #1618 
- fix for docs on `kim_query` command, Ryan Elliot (UMN) PR #1619 ",12007030
335,False,False,2019-08-06T15:21:10Z,2019-08-06T15:25:03Z,"This is a *special edition* stable release on occasion of the bi-annual LAMMPS users workshop on August 13-15 2019 in Albuquerque. Below is a list of major changes since the last stable release 5 June 2019:

General changes:
- further tweaks, refactoring, and improvements to building LAMMPS with CMake
- refactoring of header file handling for improved consistency and removal of cross dependencies
- refactoring of include keyword processing to lift some limitations and to enable KIM simulator models (see below)

No new packages

Updates for packages:
- major update of the KIM package to use KIM-API v2.1.x with support for Simulator models and new commands to generate variables for transparent unit conversion in input files
- optimizations and corrections to the KOKKOS packages, especially when used with CUDA, update of KOKKOS library included in LAMMPS to version 2.9.0
- updates and bugfixes of the USER-COLVARS package bringing it up to version 2019-08-05
- new PPPM and Ewald solvers for electric dipoles and nuclear spins
- optimizations and improvements to pair style and computes in the SNAP package
- updates, bugfixes and portability improvements for USER-PLUMED package (supports plumed 2.5.2)
- update to USER-CGDNA package in preparation of supporting an RNA coarse grain force field
- new keyword hybrid/pair for compute pressure
- new compute gyration/shape to compute eigenvalues and shape parameters from gyration radius tensor
- new compute momentum command

In addition there are many small bug fixes, corrections for memory leaks, and memory management inconsistencies, and other general improvements.

Backward compatibility notices:
- SNAP parameter files that contain the `diagonalstyle` keyword will generate an error. Solution is to remove the diagonalstyle keyword
- changes in the pair_coeff syntax breaks backward compatibility with inputs using USER-CGDNA. pair style oxdna2/stk has been removed and aliased to oxdna/stk
- restart files using bonded hybrid styles from older LAMMPS versions will not be readable
- the KOKKOS package command keyword gpu/direct was renamed to cuda/aware",12007030
336,False,True,2019-08-02T22:36:42Z,2019-08-02T22:37:52Z,"Changes since patch release 19 July 2019:
- Implement native LAMMPS support for KIM simulator models and multiple improvements in the KIM package. Update to KIM API 2.1.x, Ryan Elliot, Ellad Tadmor (UMN) Axel Kohlmeyer (Temple U), PR #1440 
- major cleanup of include file ordering and removal/cleanup of how includes are used in headers. Added a file describing the current policy. Axel Kohlmeyer (Temple U), PR #1542, plus related bugfixes PR #1599, PR #1605 
- a more robust version of handling the atom exchange data buffer size, Steve Plimpton (SNL), PR #1556 
- bugfix in restart handling of bond, angle, dihedral, improper hybrid styles to correctly restart tabulated styles. Axel Kohlmeyer (Temple U), PR #1584 
- bugfix for communication issue in a couple of interlayer potentials. reorganization of the corresponding folder with examples, Wengen Ouyang (Tel Aviv U) PR #1606 
- bugfixes for USER-COLVARS and update to version 2019-08-01, Giacomo Fiorin (NIH and Temple U) and several collaborators PR #1607 
- multiple bugfixes for USER-INTEL package, Mike Brown (Intel Corp.) PR #1610, PR #1608
- multiple bugfixes for code in the KOKKOS package, Stan Moore (SNL), Alfredo Metere (LLNL), Denis Taniguchi (Newcastle U), PR #1580, PR #1587
- various CMake bugfixes and improvements, Axel Kohlmeyer (Temple U), PR #1588, PR #1592, PR #1601 
- derive default communication cutoff from bond length based heuristics, if not pair style is active and the cutoff is not explicitly given. warn, if heuristic cutoff is larger than current or when explicitly set cutoff is overridden by pair style based cutoff (which is a hard requirement), Axel Kohlmeyer (Temple U) Steve Plimpton (SNL), PR #1581 
- new keyword `hybrid/pair` for `compute pressure`, Alain Dequidt Julien Devemy (U Clermond-Ferrand) PR #1511
- new compute `gyration/shape` to compute eigenvalues and shape parameters from gyration radius tensor. Evangelos Voyiatzis (Royal DSM), PR #1583 
- new compute `momentum` command, Rupert Nash (EPCC), PR #1529 
- add support for `timer timeout` to ""temper"" commands, Axel Kohlmeyer (Temple U) PR #1604 
- multiple minor bugfixes and code or documentation improvements, Adrian Diaz (U Florida) PR #1576 , Jake Gissinger (U Colorado), PR #1548, Michal Kansky (Jagiellonian U) PR #1512, Axel Kohlmeyer (Temple U) PR #1592 #1605, Stan Moore (SNL) PR #1597, Richard Berger (Temple U) PR #1599 Evangelos Voyiatzis (Royal DSM) PR #1611, E. Anne Gunn (Sheridan College) PR #1603

Backward compatibility notice:
- restart files using bonded hybrid styles from older LAMMPS versions will not be readable
- the KOKKOS package command keyword `gpu/direct` was renamed to `cuda/aware`
",12007030
337,False,False,2019-07-20T12:51:03Z,2019-07-25T16:09:29Z,"Changes since patch release 18 June 2019:
- optimized version of SNAP potential in KOKKOS package, Rahul Gayatri (NERSC), Stan Moore (SNL), Aidan Thompson (SNL), Sarah Anderson (Cray), Evan Weinberg (NVIDIA): PR #1571, PR #1540 
- several fixes for KOKKOS package issues, Stan Moore (SNL): PR #1555, PR #1560, PR #1563 
- update KOKKOS library included in LAMMPS to version 2.9.00, Stan Moore (SNL): PR #1546 
- change namespace scoping for some code in the GPU library to resolve issues with CLang 7.x and later, Axel Kohlmeyer (Temple U): PR #1564 
- improved error detection when parsing various kinds of files, Axel Kohlmeyer (Temple U): PR #1575, PR #1552, PR #1559 
- small refactoring for USER-MEAMC to move redundant code to an inline function, optimizations, Sebastian Hütter (OvGU): PR #1551 
- refactor handling of nested input file handling and single command execution; this allows to use the include keyword inside of if/then/else and results in the correct order of commands, when LAMMPS commands request reading of include files; limit level of include file nesting, Axel Kohlmeyer (Temple U): PR #1537 
- updates for USER-CGDNA package, Oliver Henrich (U Strathclyde): PR #1573 
- implementation of inner/middle/outer compute methods for cutoff based r-RESPA in pair style lj/class2/coul/long, Evangelos Voyatzis (Royal DSM): PR #1535 
- lots of small bugfixes and improvements to code, docs and cmake configuration scripts, various contributors: PR #1553, PR #1558, PR #1561, PR #1562, PR #1567, PR #1570, PR #1544, PR #1550, PR #1538, PR #1547, PR #1539, PR #1525, PR #1534, PR #1531, PR #1530

Backward compatibility notice:
- changes in the pair_coeff syntax breaks backward compatibility with inputs using USER-CGDNA. pair style oxdna2/stk has been removed and aliased to oxdna/stk.",12007030
338,False,True,2019-06-19T02:04:57Z,2019-06-19T02:06:23Z,"Changes since patch release 5 June 2019:
- using PLUMED to compute committor with LAMMPS, PR #1516, Gareth Tribello, Queen's U Belfast)
- correctly support hybrid pair styles with computes from the USER-TALLY package, PR #1513 (Axel Kohlmeyer)
- flag computes in USER-TALLY package as not compatible with dynamic groups, PR #1518 (Axel Kohlmeyer)
- performance and reduced memory consumption improvements for pair style snap and related tools, PR #1507 (Aidan Thompson, SNL)
- added `logfreq3()` function for another variant of generating logarithmic spaced output, PR #1476 (Vishnu V. Krishnan, Tata Institute of Fundamental Research)
- add support for building neighbor lists on the GPU with hybrid pair styles containing some '/gpu' styles, PR #1430 (Trung Nguyen, Northwestern U)
- add PPPM and Ewald solvers for electric dipoles and spins, PR #1469 (Stan Moore & Julien Tranchida, SNL)
- use `memmove()` instead of `memcpy()` in some cases where both pointers may be overlapping or identical, PR #1485 (Adrian Diaz, UFL)
- update syntax file and installation instructions for vim, PR #1501 (Vishnu V. Krishnan, Tata Institute of Fundamental Research)
- refactoring of CMake configuration to reduce the size of the master CMakeLists.txt file, PR #1502 (Richard Berger, Temple U)
- optimizations for qeq/reax with KOKKOS on CUDA, PR #1496 (Kamesh Arumugam, NVIDIA)
- add full support for use in hybrid pair styles to pair style extep, PR #1494 (Michał Kański, Jagiellonian U)
- improve warning messages for fix bond/react, PR #1517, (Jake Gissinger, Colorado U, Bolder)
- optimizations of KOKKOS styles for small systems, PR #1422 (Stan Moore, SNL)
- turn off optimization for functions that build ""style factories"", also turns of variable tracking for GCC 4.4 and later, PR #1492 (Axel Kohlmeyer)
- teach cmake to check for immintrin.h, which is required for USER-INTEL (and thus makes it x86-only), PR #1497 (Christoph Junghans LANL)
- advance message about taking some time to gather package information, so that it does get printed before any time consuming i/o happens, PR #1492 (Axel Kohlmeyer)
- bugfix in variable expansion where new/delete was mixed with malloc()/free(), PR #1504 (Axel Kohlmeyer)
- update to `info variable` command to support ""internal"" style variables, PR #1504 (Axel Kohlmeyer)
- small MPI bugfix in bond style table, PR #1506 (Sam Niblett, LBNL)
- sanitize settings for Kspace meshes consistently, PR #1492 (Axel Kohlmeyer)
- documentation typesetting improvements, PR #1492 (Axel Kohlmeyer)
- improve support for Ninja build tool, PR #1518 (Axel Kohlmeyer)
- workaround for ICE with GCC 4.8, PR #1518 (Stan Moore)

Backward compatibility notice:
-SNAP param files that contain the diagonalstyle keyword will generate an error. Solution is to remove the diagonalstyle keyword.",12007030
339,False,True,2019-06-04T19:25:52Z,2019-06-04T19:36:14Z,"Changes since patch release 31 May 2019:
- recover compatibility with CMake version 2.8.12 in CMakeLists.txt. PR #1489 (Axel Kohlmeyer, Temple U)
- topology overflow checks added in fix bond/react. PR #1477 (Jake Gissinger, U Colorado)
- document removed features in the manual. PR #1488 (Axel Kohlmeyer, Temple U)
- corrections for documentation of pair style eb3. PR #1486 (Steven Strong, U Chicago)",12007030
340,False,False,2019-06-04T19:27:20Z,2019-06-04T19:36:57Z,"Here is a list of major changes since the last stable release 12 December 2018:

General changes:
- further tweaks and improvements to building LAMMPS with CMake.
- improved error messages, e.g. when reading data files or when using optional styles, that are not installed
- generation of the PDF version of the LAMMPS manual with Sphinx and pdflatex instead of txt2html and htmldoc (Evgenii Fetisov, PNNL).
- refactoring of `Install.py` scripts in the lib folders to use the argparse module
- better checking for style compatibility with suffixed styles

New packages:
- USER-YAFF providing styles for force fields using QuickFF used for simulation of MOFs (Steven Vandenbrande, Ghent University)
- USER-ADIOS package to provide Exascale compatible I/O support for dump files through the ADIOS v2.x library (Norbert Podhorszki, ORNL)

Updates for packages:
- consolidation of ""soft"" pair styles in USER-FEP package and addition of CLASS2 pair style variants.
- KOKKOS package bugfixes and enhancements (Stan Moore, SNL)
- new generalized pair style `granular` (Dan S. Bolintineanu, Ishan Srivastava, Jeremy B. Lechman, SNL)
- new pair style drip for dihedral-angle-corrected registry-dependent interlayer potential (DRIP) (Mingjian Wen, U Minnesota)
- new pair style e3b for adding option to model the E3B water potential (Steven E. Strong, U Chicago)
- new fix style electron/stopping for modeling energy loss through interactions high speed atoms with electrons (K. Avchaciov (Tartu U and U Helsinki) Risto Toijala (University of Helsinki) and others)
- update to USER-COLVARS package to version 2019-04-26
- update of the KIM package to use KIM-API v2.0 (Ryan Elliot, UMN)
- update to USER-INTEL package to enable use of the package with -DLAMMPS_BIGBIG and some other small updates and corrections: (W. Michael Brown, Intel Corp.)
- update to USER-PTM package. examples added, license info updated, documentation updates (Peter Larsen, MIT)
- updates and additions to the SPIN package (Julien Tranchida, SNL)
- updates to hyper-dynamics support (Steve Plimpton, SNL)
- updates, improvements, and bugfixes to fix bond/react (Jake Gissinger, U Colorado)
- bugfix/refactoring of REBO pair style to correctly implement what is advertised in the documentation. Added consistency check on potential files for AIREBO, REBO, AIREBO-M (Cyril Falvo Université Paris Sud)

In addition there are many small bug fixes, corrections for memory leaks, and memory management inconsistencies and general improvements.

Backward compatibility notices:
- as announced with the last stable release, the packages REAX and MEAM are no longer included.
- fixes `atom/swap`, `deposit`, and `gcmc` had incompatible changes to the restart handling, so those fixes cannot be restarted from restart files written by older versions of LAMMPS. If those fixes are not included or not restarted, restart files should remain backward compatible.
- the syntax for pair style kim is changed with the update to KIM-API v2.0
- the syntax of the pair_style snap command has changed by removing a redundant element specifier
- pair style `rebo` no longer is compatible with the `CH.airebo` potential file, but now requires its own potential file `CH.rebo`. Tests are added to all AIREBO derived pair styles, that only compatible potential files are read in.
- the moltemplate package is no longer bundled with LAMMPS. it can be installed with pip or downloaded from www.moltemplate.org
",12007030
341,False,True,2019-05-31T18:47:00Z,2019-05-31T19:14:49Z,"Changes since patch release 15 May 2019:

- More meaningful error messages when a style is not found. Now LAMMPS will report, which package an unrecognized style belongs to, and will also notify if a package has been installed, but the style is missing because it depends on another package, which is not installed. PR #1419 (Axel Kohlmeyer)
- Add option to `compute coord/atom` to restrict the coordination number by allowing only members of a specific group to be counted. PR #1464 (Axel Kohlmeyer, Temple U)
- Do not enable OpenMP (i.e. `BUILD_OMP`) by default with gcc 9.x due to incompatibilities in the OpenMP directive semantics. PR #1483 (Axel Kohlmeyer, Temple U)
- Updates for restart file processing of fixes `atom/swap`, `deposit`, and `gcmc`. Now it is checked that the time step was not reset and the number of total MC attempts and successful MC attempts are restarted, too. PR #1484 (Axel Kohlmeyer, Temple U)
- Properly and cleanly support pair style hybrid and hybrid/overlay for `pair_style quip`. PR #1479 (Axel Kohlmeyer)
- Make sure that format style variables (and format suffixes in immediate variables) only use valid conversions. PR #1475 (Axel Kohlmeyer, Temple U)
- Bugfix for KOKKOS pair styles `eam/alloy/kk` and `eam/fs/kk`. PR #1467 (Stan Moore, SNL)
- Fix for memory leak in KOKKOS neighbor list creation; PR #1474 (Stan Moore, SNL)
- Update list of examples in manual and `examples/README`. PR #1465 (Axel Kohlmeyer, Temple U)
- Documentation updates, remove some obsolete content, re-enable Sphinx 2.x for processing of the documentation, and correct some links to packages. PR #1475, PR #1465 (Axel Kohlmeyer, Temple U)
- Avoid segmentation fault on unexpected empty lines in Coeff sections of data files. PR #1465 (Axel Kohlmeyer, Temple U)

Backward compatibility notices:
- Restart files for simulations using `fix atom/swap`, `fix deposit`, or `fix gcmc` are not backward compatible due to changes in the processing of restart files for them. You can still restart the simulation, but you cannot correctly restart the fixes from restart files created with older versions of LAMMPS",12007030
342,False,True,2019-05-15T01:32:47Z,2019-05-15T01:33:50Z,"Changes since patch release 30 April 2019:
- New pair style `drip` for dihedral-angle-corrected registry-dependent interlayer potential (DRIP): PR #1453 (Mingjian Wen, U Minnesota)
- New pair style `e3b` for adding option to model the E3B water potential: PR #1428 (Steven E. Strong, U Chicago)
- Update to USER-COLVARS package to version 2019-04-26: PR #1438 (Giacomo Fiorin on behalf of the colvars project and their contributors)
- correct restart settings, coeff requirements, and element map process for several interlayer potentials so that segmentation faults and incorrect input are avoided: PR #1456 (Axel Kohlmeyer, Temple U)
- bugfix/refactoring of REBO pair style to correctly implement what is advertised in the documentation. Added consistency check on potential files for AIREBO, REBO, AIREBO-M: PR #986, (Cyril Falvo Université Paris Sud)  PR #1452 (Axel Kohlmeyer, Temple U)
- update to SPIN package to add cubic anisotropy to fix precession/spin and some documentation cleanups: PR #1457 (Julien Tranchida, SNL)
- update to USER-INTEL package to enable use of the package with -DLAMMPS_BIGBIG and some other small updates and corrections: PR #1458 (W. Michael Brown, Intel Corp.)
- small improvements to cmake for added consistency: PR #1450, PR #1444 (Axel Kohlmeyer, Temple U)
- KOKKOS improvements and fixes: PR #1451, PR #1364 (Stan Moore SNL, Richard Berger U Temple)
- allow to switch thermo output back from variable computed time step to evenly spaced: PR #1446 (Eugen Rožić, UCL)
- add option to use variable computed time steps for `fix print`: PR #1449 (Axel Kohlmeyer, Temple U)
- documentation updates: PR #1455 (Steve Plimpton, SNL), #1448 (Axel Kohlmeyer, Temple U)

Backward compatibility notices:
- Pair style `rebo` no longer is compatible with the `CH.airebo` potential file, but now requires its own potential file `CH.rebo`. Tests are added to all AIREBO derived pair styles, that only compatible potential files are read in.
- most of the interlayer potential pair styles have now stricter checks as for what `pair_coeff` syntax and settings are allowed. ",12007030
343,False,True,2019-04-30T23:55:12Z,2019-04-30T23:57:59Z,"Changes since patch release 29 March 2019:
- new fix style `electron/stopping` for modeling energy loss through interactions high speed atoms with electrons: PR #1399 (K. Avchaciov (Tartu U and U Helsinki) Risto Toijala (University of Helsinki) and others)
-  GNEB implementation, fix setforce/spin, and various updates and fixes for SPIN package: PR #1421 PR #1424 (Julien Tranchida, SNL)
- various code maintenance and testing support changes: PR #1400, PR #1402, PR #1435 (Axel Kohlmeyer, Temple U)
  - refactoring of USER-INTEL support in CMake to make it work properly and also with other compilers 
  - update of provided CMake presets removal of those trying to mimic the conventional build and instead provide a ""minimal"" and ""most"" choice
  - corrections/cleanups for MESSAGE package and support libs to cleanly support a second stub library when not building for MPI
  - improved support for building LAMMPS for windows with MinGW64 cross-compilers
  - removal of `using` in several header files
  - change to micelle examples for better reproducibility
  - updated .gitignore
  - cleanups for fewer compiler warnings
- new examples, doc updates and bugfixes for GRANULAR package: PR #1420 (Dan S. Bolintineanu, SNL)
- bugfix for compiling KIM with pre-installed KIM-API: PR #1397 (Ryan Elliot, UMN)
- bugfixes for GPU package compiled with OpenCL and CMake: PR #1436, PR #1437 (Richard Berger, Temple U)
- bugfixes for reax/c pair styles for using multiple instances with pair style hybrid: PR #1434 (Ryan Elliot, UMN)
- bugfix for neighborlist access in selected cases in pair style kim: #1413 via #1409 (Ryan Elliot, UMN)
- replace calls to MPI_Abort() in USER-REAXC (and derived classes in KOKKOS and USER-OMP) with calls to `error->one()` or `error->all()`, so they can be intercepted, when LAMMPS is compiled with exception handling support: PR #1367 (Michal Kanski, Jagiellonian U)
- cleanups and corrections for compiling LAMMPS with -DLAMMPS_BIGBIG: PR #1406 (Axel Kohlmeyer, Temple U)
- support for Plumed 2.5.1 and some bugfixes in Install.py script: PR #1409 
- address some 64-bit issues: PR #1405 #1406 
- add discussion of COMPASS to BioFF howto: PR #1412 via #1409 (Evangelos Voyiatzis)
- a bunch of changes to make matching of styles more accurate via using `utils::strmatch()`: #1409 

Backward compatibility notices:
No known backward compatibility issues.",12007030
344,False,True,2019-03-29T18:31:59Z,2019-03-29T18:37:52Z,"Changes since patch release 28 February 2019:
- new generalized granular pair style `granular`, that allows much more flexible parameter settings: #1342 (Dan S. Bolintineanu, Ishan Srivastava, Jeremy B. Lechman, SNL)
- use rendezvous protocol instead of ring communication for some-to-some data exchange: #1384 (Steve Plimption, SNL, Chris Knight, ANL)
- update to hyper-dynamics support: PR #1379 (Steve Plimpton, SNL)
- consolidate clearing of eflag/vflag and related settings in new `ev_init()` function: #1365 (Sebastian Huetter, OvGU)
- finalize support for `write_data` in several dihedral styles: PR #1370 (Axel Kohlmeyer, Temple U)
- removal of deprecated KOKKOS code #1363 (Stan Moore, SNL)
- new `kim-query` command and small corrections in KIM package: PR #1358, PR #1371, PR #1392 (Axel Kohlmeyer, Temple U, Ryan Elliot, UMN)
- embed git branch and revision info for output with '-h' flag and the info command: PR #1357, PR #1376 (Axel Kohlmeyer, Temple U, and Christoph Junghans, LANL)
- bugfixes and extensions (spin minimizer) to the SPIN package: PR #1355,  PR #1372, PR #1380 (Julien Tranchida, SNL)
- replace non C++ standard compliant variable length arrays in USER-SMTBQ with compliant code: PR #1356 (Axel Kohlmeyer, Temple U)
- add support for `make install-python` to CMake and consolidate and clean up several python module installation and documentation related issues: #1375 (Axel Kohlmeyer, Temple U)
- many small bugfixes and updates: PR #1354, PR #1352, PR #1361, PR #1366, PR #1359, PR #1374, PR #1383, PR #1390, PR #1391, PR #1388, PR #1395, PR #1393 (too many people to mention here)

Backward compatibility notices:
- The command line flags for `python/install.py` have changed, but `make install-python` works as before
- The KIM package now supports version 2.0.2 of the KIM API library, which uses paths and names incompatible with previous versions. Thus when updating LAMMPS, also the KIM API needs to be updated and LAMMPS newly configured from scratch.",12007030
345,False,True,2019-02-28T23:56:14Z,2019-02-28T23:57:39Z,"Changes since patch release 8 February 2019:
- Update of the KIM package to use KIM-API v2.0: PR #1011 and PR #1351 (Ryan Elliot, UMN)
- Update to USER-PTM package. examples added, license info updated, documentation updates: #1339 (Peter Larsen, MIT)
- New USER-ADIOS package to provide Exascale compatible I/O support for dump files through the ADIOS v2.x library: PR #1317 (Norbert Podhorszki, ORNL)
- New `dynamical_matrix` command added to the USER-PHONON package, that computes the dynamical matrix from finite differences: PR #1314 (Charles Sievers, UC Davis)
- Added consistency checks when reading data files containing ""bonus"" data like ellipsoids, lines, triangles or bodies: PR #1340 (Axel Kohlmeyer, Temple U)
- re-introduction of the `create_atoms` optimization for small regions in large boxes. this time hopefully without bug: PR #1348 (Axel Kohlmeyer, Temple U)
- Handle .dylib extensions in LAMMPS python module installation, as it would happen when compiling with CMake on MacOSX. PR #1315 (Jan Janssen, MPIE Duesseldorf)
- Bugfix for `lammps_scatter_atoms_subset()` in library interface for integer data. PR #1344 (Eugen Rožić, UCL)
- PDF version of the manual is now created via Sphinx and pdflatex. PR #1320 (Evgenii Fetisov, PNNL)
- Better detection of changes to style headers requiring a re-run of cmake. PR #1341 (Richard Berger, Temple U)
- Correct the energy tally for fix langevin with `zero yes`. PR #1335 (Donatas Surblys, Tohoku U)
- Add library of utility functions to simplify and abstract repeated operations. PR #1272. bugfix for compute reduce introduced by PR #1272: PR 
- various small changes and bugfixes. Fixes issues #1346, #1337, add detection of OpenMP version support to info and help message. Document script to change OpenMP default clause from `none` to `shared` (needed by GCC 9.x and later). minor corrections to documentation. PR #1331 and PR #1347 (Axel Kohlmeyer, Temple U)
- bugfix for reading data files with shrinkwrap boundary conditions and tiled communication: PR #1325 (Adrian Diaz, UFL).
- C++ standard compliance fixes and update to bond forming reaction behavior in fix bond/react: PR #1332 and PR #1333 (Jacob Gissinger, U Colorado)


Backward compatibility notices:
- the syntax for pair style kim is changed with the update to KIM API v2.0
- the behavior of fix bond/react is changed as to which bond is formed among multiple candidates",12007030
346,False,True,2019-02-14T13:18:42Z,2019-02-08T20:44:32Z,"This patch corrects a **serious** bug that was introduced in the previous patch release 1 February 2019:
The use of the `create_atoms` command with the `region` option while using a rotated lattice will result in creating fewer atoms than expected, and thus incorrect behavior. The offending code has been removed in #1321, which also contains several minor cleanups and bugfixes.

Beyond this important bugfix the patch includes an update of the Kokkos library to version 2.8.00 ( #1312 ),
a new KOKKOS angle style `cosine` (#1306), and a rename of the python package base source files to avoid conflicts on OSs with case insensitive file systems (e.g. MacOS and Windows) #1316 

Also included are updates to the appearance and management of processing pull requests and issues on GitHub (#1318 , #1319, #1322)",12007030
347,False,True,2019-02-01T19:22:18Z,2019-02-01T19:42:47Z,"Changes since patch release 4 January 2019:
- new package USER-YAFF providing styles for force fields using QuickFF used for simulation of MOFs (Steven Vandenbrande, Ghent University): PR #1297 and PR #1301 
- removal of moltemplate distribution from LAMMPS. Instead detailed installation instructions are provided to install via pip or through download of the up-to-date version from moltemplate.org (Andew Jewett, Axel Kohlmeyer): PR #1270 
- added soft versions of CLASS2 pair style to USER-FEP, consolidation of documentation of all such pair styles, improved documentation of approximations for tail collection (Evangelos Voyatsis, Agilio Padua, Axel Kohlmeyer): PR #1302 (combines closed PRs #1300 #1293 #1289 and addresses issue #1269)
- support writing data of computes and fixes with arbitrary number of columns to NetCDF format dump files (Lars Pastewka, University of Freiburg): PR #1303 
- add support for using `fix qeq/shielded` with `pair_style reax/c` (Axel Kohlmeyer, Temple U): PR #1310 
- fix bond/react bugfixes and enhancements: reaction limit and reaction constraints (Jacob Gissinger, U Colorado): PR #1298, PR #1292, PR #1288, PR #1286, PR #1275
- bugfixes for issues #1294, #1284, #1283 (Axel Kohlmeyer, Temple U):  PR #1282 
- bugfixes for extraneous or missing callbacks to the Atom class (Axel Kohlmeyer, Temple U): PR #1311 
- bugfixes for virial calculation of improper styles fourier and umbrella (Steven Vandenbrande, Ghent University), PR #1291 
- bugfix for wrong dimension setting in the extract function for USER-DRUDE pair styles (Agilio Padua, ENS de Lyon): PR #1308 
- KOKKOS package bugfixes and enhancements (Stan Moore, SNL): PR #1277 , PR #1263 
- documentation updates (various): PR #1282, PR #1299, PR #1274
- rename pair style lebedeva/z sources to be consistent with style name: PR #1276 
- optimization/enhancement for compute entropy/atom for certain settings (Pablo Piaggi, EPFL): PR #1309 
- optimization of the create_atoms command for small regions in large boxes (Axel Kohlmeyer, ICTP): PR #1279 
- support `memory->grow()` for 4d-arrays (Adrian Diaz, U Florida): PR #1285 
- refactoring of Install.py scripts in lib folders to use the python argparse module and replace calls to subshells with packages, `os`, `shutil`, `tarfile` and others. This makes those scripts independent of local tools. (Axel Kohlmeyer, Temple U): PR #1290 
- documentation updates, many small bugfixes (Axel Kohlmeyer, Temple U): PR #1282  


Backward compatibility notices:
- moltemplate is no longer bundled with LAMMPS
- the meaning of arguments for `Install.py` in `lib/kim` is slightly changed for complex usage cases",12007030
348,False,True,2019-01-04T03:28:55Z,2019-01-04T03:50:45Z,"Changes since stable release 12 December 2018:
- small CMake cleanups and related docs improvements: PR #1266, PR #1268 (Christoph Junghans, LANL)
- various small LAMMPS manual updates: PR #1265 
- packages MEAM and REAX have been removed: PR #1254 (Axel Kohlmeyer, Temple U)
- issues with incorrect volume fluctuation for Nose-Hoover barostat fixes have been resolved: PR #1259  (Aidan Thompson, SNL)
- correctly detect suffixed versions of `fix deform` in `fix nvt/sllod`: PR #1255 (Stan Moore, SNL)
- Improvements and corrections for CLASS2 pair styles: PR #1267, PR #1262 (Evangelos Voyatzis)
- remove redundant element list arguments from pair style snap: PR #1243 (Aidan Thompson, SNL)
- add option to delete atoms with `fix bond/react`: PR #1239 (Jake Gissinger, U Colorado)
- first part of refactoring of Install.py scripts in the `lib` folder to move redundant code into a module and make scripts more portable. PR #1233 (Axel Kohlmeyer, Temple U)
- enable `read_dump` to parallel process dump files written in parallel: PR #1179 (Steve Plimpton, SNL)
- new `lebedeva/z` interlayer potential: PR #1230  (Zbigniew Kozioł, National Center for Nuclear Research, Otwock-Świerk, Poland), PR #1273 
- collected small bugfixes and improvements: PR #1258 


Backward compatibility notices:
- the syntax of the `pair_style snap` command has simplified by removing a redundant element specifier.
- the REAX and MEAM packages and their (fortran) library code have been removed. For ReaxFF calculations, there are the pair styles `reax/c`, `reax/c/kk`, and `reax/c/omp` (USER-REAXC, KOKKOS, and USER-OMP package, respectively), and for MEAM calculations there is the USER-MEAMC package, which is fully compatible, and thus pair style `meam` remains available as an alias to `meam/c`.",12007030
349,False,True,2018-12-11T21:24:54Z,2018-12-11T21:32:46Z,"Only minor and mostly cosmetic changes to documentation, source code management support and build system are included in this patch, which upgrades the 7Dec2018 patch release to the stable release 12Dec2018",12007030
350,False,True,2018-12-07T19:15:12Z,2018-12-07T19:19:04Z,"Changes since patch release 27 November 2018:

- bugfix for lib/plumed/Install.py, PR #1228 and plugged memory leak in `fix plumed`, PR #1229 
- Various small fixes and cleanups. Fixes for memory leaks in POEMS and atom-style variables. Corrections for inconsistent data allocation, initialization, and deallocation for those two cases. PR #1232 
- small updates to inconsistent memory allocation and fixes for memory leaks in USER-DIFFRACTION, USER-PLUMED, and USER-SCAFACOS packages.
- more thorough checks and abends for configurations supported by `fix tune/kspace`, PR #1240 
- bugfix for read_dump with `keep` flag, PR #1234 
- make compute stress/mop and stress/mop/profile compatible with per-atom masses, PR #1237 
- general update of many log files in the examples folder, PR #1231, PR #1241 
- small updates for USER-PLUMED docs. remove hard dependency on LAPACK, PR #1247, PR #1248 

Backward compatibility notice:
No backward compatibility issues are currently known.

This is the hopefully final candidate for the upcoming stable release.",12007030
351,False,False,2018-12-11T17:39:04Z,2018-12-11T20:20:14Z,"Here are a list of the major changes since the last stable release 22 August 2018:

general:
- major improvements to building LAMMPS with CMake. Almost all functionality of the conventional build is available and some build features now exist only with CMake builds
- significant consolidation and improved consistency of the manual after the refactoring for the last stable release, option to build a .mobi version (for Kindle readers) of the manual from .epub files (many other e-book readers but not Kindle). The manual checks out clean when running `make spelling` in the doc folder. from now on, all new contributions to LAMMPS will be automatically spellchecked before inclusion.
- reduced risk of memory/buffer overflows by replacing most uses of `sprintf()` by `snprintf()`

new packages:
- USER-PLUMED package with a native interface (no more patching) for more options to do free energy calculations beyond existing features in LAMMPS. Similar to the colvars library of USER-COLVARS, the Plumed2 library interfaced by USER-PLUMED is supported by multiple MD codes.
- USER-SDPD package for smoothed dissipative particle dynamics (SDPD)
- USER-PTM package for polyhedral template matching analysis to characterize local structure
- new kspace style scafacos, which interfaces to the ScaFaCoS library of long-range coulomb solvers.

updates for packages:
- USER-COLVARS: updates and bugfixes
- REPLICA: added support for (local and global) hyperdynamics
- KOKKOS: updated Kokkos library, added several KOKKOS versions of styles from the GRANULAR package, support for data duplication when using threading (more efficient with few threads)/
- USER-INTEL: updates, bugfixes and improved support for using 
- USER-MISC: new styles, compute pressure/cylinder, fix ffl (fast forward langevin), bugfixes and improvements to fix bond/react, compute stress/mop and compute stress/mop/profile using the method of planes, Axilrod-Teller-Muto potential (pair_style atm)

Many small bugfixes, corrections for memory leaks and memory management inconsistencies and general improvements.

IMPORTANT NOTE: this is going to be the last LAMMPS version containing the REAX and MEAM packages. They have been essentially unmaintained and thus deprecated for a long time and are superseded by the USER-REAXC (with accelerator support in KOKKOS and USER-OMP) and the USER-MEAMC package.

Backward compatibility notices:
- the command line flags -restart and -r are no longer available. They have been replaced by -restart2data and -r2data, respectively.
- the naming conventions for the group name of groups maintained by fix bond/react have changed. Documentation and examples have been updated accordingly.
- pair styles in the USER-SPH package no longer support Pair::single(). The existing functions reported always energy and forces 0, and thus have been removed.
- the meaning of the sign of mu in fix atom/swap has been reversed to be consistent with usual conventions. Thus behavior is changed significantly. The old, incorrect behavior can be recovered by reversing the sign of mu.
- the default installation prefix for CMake based compilation has been changed from /usr/local to $HOME/.local, so that people can safely do make install with default settings and without root access or sudo.",12007030
352,False,True,2018-11-27T21:38:44Z,2018-11-27T21:40:06Z,"Changes since patch release 15 November 2018:

- update to USER-COLVARS package to version 2018-11-16 with multiple bugfixes (Giacomo Fiorin, Temple U), PR #1210 
- documentation tweaks, PR #1211, PR #1212, PR #1215, PR #1217 
- support building ""fat"" CUDA binaries when compiling with CMake, point to equivalent setup in Makefile.linux_multi, PR #1226 
- cmake tweaks and consistency improvement, PR #1209, PR #1214, PR #1226  
- charmm2lammps.pl tweak to be more resilient in topology parsing, PR #1216
- major spellchecking review of the manual, PR #1214 
- bugfix for `write_coeff` with class2 style angle, dihedral, or improper styles, PR #1219, PR #1225 
- various small and mostly cosmetic code changes, PR #1217, PR #1225 

Backward compatibility notice:
The default installation prefix for CMake based compilation has been changed from /usr/local to $HOME/.local, so that people can safely do `make install` with default settings and without root access or sudo.

This is the second release candidate for the upcoming stable release.",12007030
353,False,True,2018-11-16T00:36:59Z,2018-11-16T00:40:30Z,"Changes since patch release 9 November 2018:

- Update of Kokkos library to version 2.7.24 (Stan Moore, SNL), PR #1203 
- Implementation of Hyperdynamics added to the REPLICA package (Steve Plimpton, SNL), PR #1202 
- Update of USER-PLUMED package to support all three linkage modes, full documentation of build process, PR #1204 
- Bugfix for bond style hybrid to support bond style quartic as a sub-style (Axel Kohlmeyer, Temple U), PR #1197 
- outline of github development workflow, PR #1206
- Collected small changes, PR #1197, PR #1206, PR #1201  

Backward compatibility notice:
There are no known compatibility issues.

This is the first release candidate for the upcoming stable release.",12007030
354,False,True,2018-11-09T01:53:19Z,2018-11-09T03:16:53Z,"Changes since patch release 24 October 2018:
- new USER-PLUMED package with native LAMMPS interface to Plumed 2.4, PR #1180 
- new USER-SDPD package for smoothed dissipative particle dynamics (SDPD), PR #1184 
- update Colvars library to version 2018-10-16, PR #1190 
- allow limiting which atoms `fix bond/react` considers with the stabilization option active to a custom group; allow custom update of charges on edges, PR #1189, PR #1195
- switch order of initialization for fixes and computes, so that computes that create and delete fixes internally, do not mess up the lists selecting which fix to run at what stage. PR #1177 
- update github contributing guidelines for recent changes to the manual and development workflow. PR #1181 
- apply bugfix for sorted dumps from Jeffrey Frey, PR #1170 
- bugfix for msi2lmp tool which stops it from emitting illegal dihedral definitions, e.g. for 3-membered rings. PR #1191 
- various small changes, PR #1182, PR #1183, PR #1185, PR #1186, PR #1192, PR #1194 

Backward compatibility notice:
The naming conventions for the group name of groups maintained by `fix bond/react` have changed. Documentation and examples have been updated accordingly.
Pair styles in the USER-SPH package no longer support `Pair::single()`. The existing functions reported always energy and forces 0, and thus have been removed.",12007030
355,False,True,2018-10-23T22:47:19Z,2018-10-23T22:49:53Z,"Changes since patch release 10 October 2018
- new `compute adf` style for computing angular distribution functions (like rdf but over atom triple angles), plus simple example for water showcasing use of both, rdf and adf, PR #1168 
- port of styles `pair gran/hooke/history`, `fix freeze`, `fix gravity`, and `fix nve/sphere` from the GRANULAR package to KOKKOS, PR #988 
- updates and bugfixes for USER-INTEL as well as support for use with pair style hybrid, PR #1156 , PR #1157 
- multiple minor updates and bugfixes, PR #1155 
- improved checks for using USER-INTEL styles with hybrid pair styles, PR #1159
- make USER-PTM package compile on Windows with MinGW64, PR #1160 
- try to prevent cmake builds inside the source tree, PR #1136, PR #1166
- avoid failed atom creation due to rounding issues when creating individual atoms in triclinic cells with periodic boundaries and active remap flag, PR #1158, PR #1167
- change `-restart` flag into `-restart2data` and add `-restart2dump`, PR #1162 
- workaround for compilation errors of fix `momentum/kk` with newer GNU compilers for `parallel_for()` constructs, #PR1169. this addresses the problem raised in issue #1045 
- add code to fix halt, so it can be used with minimizations, PR #1164 
- refactor KSpace classes, so they have a `settings()` like all other ""force"" styles, PR #1165, PR #1174
- add ""DEPRECATED"" styles for all add-on classes, so there can be a meaningful error message when features are removed from LAMMPS, PR #1148
- more documentation updates and fixes, PR #1152 

Backward compatibility notice:
The command line flags `-restart` and `-r` are no longer available. They have been replaced by `-restart2data` and `-r2data`, respectively.


",12007030
356,False,True,2018-10-10T00:26:40Z,2018-10-10T00:28:04Z,"Changes since patch release 18 September 2018
- new `USER-PTM` package providing the `compute ptm/atom` command for performing a polyhedral template matching analysis to characterize local structure. PR #1120 
- updates to inter-layer potentials from PR #839. PR #1122
- Fast-Forward Langevin thermostat fix added to USER-MISC. PR #1137
- compute pressure/cylinder added to USER-MISC. PR #1131 
- increase visibility of warning for pending removal of REAX and MEAM packages after the next stable release. PR #1128 
- updates to the documentation to make documentation more consistent. remove dead undocumented code and remove documentation for non-existing features. fix some typos. PR #1133, PR #1149, Issue #1141 
- diverse small changes: PR #1132, PR #1143, PR #1146, PR #1150, PR #1151 

Backward compatibility: The change in PR #1143 fixes an issue discussed in #1139 which reverses the meaning of the sign of mu in fix atom/swap. Thus behavior is changed significantly. The old, incorrect behavior can be recovered by reversing the sign of mu.",12007030
357,False,True,2018-08-31T15:49:35Z,2018-09-19T19:01:59Z,"Significant changes since stable release 22 August 2018

- CMake improvements and bug fixes that didn't make it into the stable release
- New Axilrod-Teller-Muto potential
- Avoid many compiler warnings, especially for unused parameters
- Add support for creating .mobi format e-books of the LAMMPS manual (e.g. for Kindle readers)
- various updates, link corrections, spelling errors in the manual
- bundle a minimal man page (adapted from debian) for packaging",12007030
358,False,True,2018-09-05T17:39:18Z,2018-09-19T18:51:56Z,"Significant changes since patch release 31 August 2018

- CMake improvements and bug fixes
- add data duplication option to KOKKOS for more efficient threading with few threads
- new MESSAGE package for coupling LAMMPS to codes via a client-server message library over MPI or TCP Sockets
- new kspace style `scafacos`, which is a wrapper around the ScaFaCoS Coulomb solver library which provides a variety of long-range coulomb solver methods",12007030
359,False,True,2018-09-19T01:52:07Z,2018-09-19T02:03:17Z,"Significant changes since patch release 5 September 2018
- more CMake improvements and bug fixes
- avoid buffer overflows and segmentation faults through using `snprintf()` instead of `sprintf()`
- new computes stress/mop and stress/mop/profile
- memory leak fixes in compute sna*/atom
- documentation improvements and cleanups
- important bugfix in pair style `morse/smooth/linear`
- performance improvement for fix `bond/react` with brick communication style
- variable option for compute bond/angle/dihedral local
- new computes `chunk/reduce` and `chunk/spread/atom`
",12007030
360,False,False,2018-08-22T16:44:14Z,2018-08-22T18:40:41Z,"Notable new features in this release are:
* New CMake option for building LAMMPS and all of its packages, as an alternative to traditional make
* Restructured documentation
* DEM polygonal and polyhedron particles
* new compute entropy/atom command
* New SPIN package for modeling the dynamics of magnetic atomic spins, coupled to the usual MD motion of atoms. See details here.
* New fix bond/react command to enable simulation of one or more complex heuristic reactions that rearrange molecular topology.
* New USER-BOCS package
* Fixes memory leaks caused when using the GPU package and OpenCL
* 3 new registry dependent interlayer potentials
* dump_modify refresh and delay and maxfiles options
* new reset_ids command
* set velocity option
* Various other small updates and bugfixes",12007030
361,False,False,2017-08-15T21:05:20Z,2018-03-24T16:50:04Z,"Notable new features in this release are:
- New tutorial for enabling BASH on Windows 10 to build and use LAMMPS in a Linux environment on Windows
- simplified and more flexible python scripts to download and install external libraries. obsoletes and replaces `Make.py`
- make bundled python scripts compatible with python 2.7 and python 3
- bugfixes and improvements for AIREBO and REBO pair styles
- new fortran wrapper for use with coupling LAMMPS to DFTB+
- new USER-MEAMC package which is a reimplementation of MEAM in C++. now supports hybrid pair styles and provides better performance
- updates to KOKKOS, USER-MANIFOLD, USER-CGDNA, USER-COLVARS, SNAP packages
- USER-OMP support for USER-REAXC
- refactoring and improvements to `neb` and `fix neb`.
- new pair style python for writing custom pairwise additive pair styles in python
- many little cleanups, bug fixes and removal of dead or obsolete code",12007030
362,False,False,2018-03-19T14:26:58Z,2018-03-24T16:32:41Z,"Notable new features in this release are:
- many small bugfixes and small cleanups
- improved formatting of the PDF manual. corrected links in USER-ATC documentation
- improved performance when setting up simulations with a large number of MPI ranks
- new USER-UEF package for simulating extensional flow
- new USER-MOFF package with metal oxide force field
- new LATTE package for coupling to LATTE tight-binding code
- new USER-MESO package
- new registry-dependent inter-layer potentials for graphitic and equivalent systems
- important bugfix for `reax/c` and its accelerated version for specific systems like BaTiO3
- updates for KOKKOS, KIM, USER-INTEL, USER-COLVARS, USER-CGDNA, USER-REAXC, and USER-OMP packages
- dump style xdr made independent of deprecated RPC header files
- consistency check on atom IDs for bonds/angles/dihedrals/impropers. No definition may contain the same atom ID twice.
- improved error messages when using variables
- new ExTeP and UFM pair styles, new Gromos bond style
- performance improvement for certain manybody GPU styles through a short range neighbor list
- new temper/npt command",12007030
363,False,False,2017-03-30T16:07:27Z,2017-03-30T18:01:50Z,"Notable new features in this release are:
- refactoring of the neighbor list construction to be more modular and extensible from packages. active neighbor list modules are reported in the output
- updates, performance improvements and new styles for the `KOKKOS` and `USER-INTEL` packages
- bugfixes and refactoring of parts of `AIREBO` and `AIREBO-M` addressing some of the occasionally observed instabilities with the LAMMPS implementation
- new interface to Multi-Scale Coarse-Graining tools of the Voth group via new `MSCG` package with `fix mscg`
- new pair styles `lj/charmmfsw/coul/charmmfsh` and `lj/charmmfsw/coul/long` and dihedral style `charmmfsh` for improved compatibility with the CHARMM code using recent versions of the CHARMM force field
- several new styles in the `USER-MISC` package
- improved compatibility with Python 3 (now only the `PYTHON` package is still Python 2 only), improvements to `PyLammps` and its documentation
- various updates and performance improvements for `USER-DPD` package
- updates and bugfixes to `USER-COLVARS`
- new package `USER-CGDNA` for coarse grained DNA simulations
- new support for generalized replica exchange (gREM) via `temper/grem` and `fix grem` commands
- support for treating spherical particles as 2d discs
- improvements for load balancing via recursive bisectioning
- new SNAP potential for tungsten and tungsten/helium systems
- updated version of the bundled `moltemplate` tool
- updated tutorial for submitting additions and changes to LAMMPS via GitHub
- improvements to the documentation build tools
- ambiguous hyperlinks in documentation are made unique
- spellchecked documentation and comments
- removed the obsolete `xmovie` software
- many little cleanups, bug fixes and removal of dead or obsolete code, including in the tools folder
",12007030
364,False,False,2016-11-18T01:42:40Z,2016-11-18T01:56:16Z,"Notable new features in this release are:
- fixed several problems with KOKKOS styles that didn't make it into the 5 Nov 2016 release
- new pair styles: agni, tersoff/mod/c, born/coul/dsf, born/coul/dsf/cs, vashishta/kk
- some improvements for compilation with Intel compilers and for the USER-INTEL package. 
- `lmp_<machine> -h` will use a pager if used on the console
- default pointer initialization for many fix and compute styles to better recover from crashes in the library interface
",12007030
365,False,False,2016-11-08T17:30:50Z,2016-11-08T17:34:41Z,"Notable new features in this release are:
- Enhanced syntax for many commands to allow multiple selected values from a compute or fix vector, or multiple columns from a compute or fix array, to be specified with a single argument, using a wildcard asterisk syntax
- New fix controller providing a control loop feedback mechanism known as a proportional-integral-derivative (PID) controller
- New fix flow/gauss command which uses Gaussian Dynamics (GD) to model fulid flow through pores, pipes, and channels
- Additions to the KOKKOS package: pppm/kk, fix reaxc/species/kk, many performance enhancements for several manybody styles
- Performance enhancements for manybody styles sw, tersoff, vashishta through dual neighbor lists and tabulation (vashishta only).
- Added weight factors for improved loadbalancing that can be assigned or determined in a number of ways
- Added fix cmap to include CMAP corrections for CHARMM force field calculations of proteins
- Restrictions for PRD and NEB lifted
- Added fix gran/region which allows to use regions as boundaries on granular particles
- Support for energy conserving DPD in USER-DPD
- New package USER-NC-DUMP providing portable NetCDF format dumps following the Amber conventions with a few additions
- Added a fix halt command which allows for checking a condition every N steps to halt a running simulation
- Support for generating the LAMMPS manual in ePUB format for e-book readers
- Many corrections for broken references, typos and formatting issues in the manual
- Many bugfixes and corrections from user reports and various code analysis tools.
",12007030
366,False,True,2016-11-07T16:33:41Z,2016-11-07T18:43:01Z,"Notable new features in this release are:
- Enhanced syntax for many commands to allow multiple selected values from a compute or fix vector, or multiple columns from a compute or fix array, to be specified with a single argument, using a wildcard asterisk syntax
- New fix controller providing a control loop feedback mechanism known as a proportional-integral-derivative (PID) controller
- New fix flow/gauss command which uses Gaussian Dynamics (GD) to model fulid flow through pores, pipes, and channels
- Additions to the KOKKOS package: pppm/kk, fix reaxc/species/kk, many performance enhancements for several manybody styles
- Performance enhancements for manybody styles sw, tersoff, vashishta through dual neighbor lists and tabulation (vashishta only).
- Added weight factors for improved loadbalancing that can be assigned or determined in a number of ways
- Added fix cmap to include CMAP corrections for CHARMM force field calculations of proteins
- Restrictions for PRD and NEB lifted
- Added fix gran/region which allows to use regions as boundaries on granular particles
- Support for energy conserving DPD in USER-DPD
- New package USER-NC-DUMP providing portable NetCDF format dumps following the Amber conventions with a few additions
- Added a fix halt command which allows for checking a condition every N steps to halt a running simulation
- Support for generating the LAMMPS manual in ePUB format for e-book readers
- Many corrections for broken references, typos and formatting issues in the manual
- Many bugfixes and corrections from user reports and various code analysis tools.
",12007030
367,False,False,2016-07-31T11:04:53Z,2016-07-31T11:23:13Z,"Notable new features in this release are:
- KOKKOS version of pair style reax/c
- Deprecated USER-CUDA package is removed
- Deprecated fix ave/spatial command is removed
- Support for reactive models added to USER-DPD
- Support for selecting r-RESPA level for fixes that support it
- Long Range Thread mode integrator with the USER-INTEL package
- Gaussian distribution option to the fix deposit command.
- New dihderal_style spherical command
- New fix orient/bcc command
- New fix spring/chunk command
- New fix ehex command as alternative to fix heat with better energy conservation
- Dullweber-Leimkuhler-McLachlan (DLM) integration method for n*/sphere integrators.
- Timer timeout option to stop simulations after a given time
- The lammps python module is Python 3 compatible
- Upgrades to USER-DPD, USER-INTEL, GPU, USER-QMMM, and USER-COLVARS packages
- Many small bugfixes and other improvements and corrections
",12007030
368,False,False,2016-06-01T00:42:52Z,2016-06-01T00:58:55Z,"Notable new features in this release are:
- new USER-MANIFOLD package which allows particles to move while constrained to a manifold (2d surface)
- tools and configuration files to build the online html documentation are included
- new USER-VTK package which allows writing dump files directly in VTK format
- pair, bond, angle, dihedral and improper style ""zero"" for providing style related information without doing any force computation
- new vector style variables, which can contain global vectors as produced from several computes or fixes and that can be used as input to several computes and fixes for further post-processing. these variables work similar to equal and atom style variables
- documentation contains a tutorial for submitting contributed code to LAMMPS via pull requests on github 
- much faster generation of makefile dependencies using a custom tool instead of the compiler.
- new pair styles airebo/morse and most/smooth/linear
- compute_bond, compute_angle, compute_dihedral, compute_improper for accessing substyle energy contributions of the corresponding hybrid styles
- Many small bugfixes and other improvements and corrections
",12007030
369,False,False,2016-02-16T11:57:39Z,2016-02-27T13:22:38Z,"Notable new features in this release are:
- New USER-DPD package
- Several new bond, angle, dihedral and improper styles for USER-INTEL, optimized tersoff and buckingham styles for USER-INTEL
- An updated USER-SMTBQ package with support for parallel runs
- An updated USER-PHONON package with more examples
- Nose-Hoover integrators for atom style body
- Updated list of error messages and explanations, updated reference outputs for examples
- Many small bugfixes and other adjustments and corrections
",12007030
370,False,False,2015-12-09T13:10:46Z,2015-12-09T13:26:37Z,"Notable new features in this release are:
- refactored Timer class and new **timer** command, which controls the level of internal profiling. improved Timing output.
- new USER-MGPT, USER-SMTBQ, USER-TALLY, USER-H5MD, and COMPRESS packages
- several styles ported to KOKKOS
- the REAX package is marked obsolescent and will be removed soon
- vashishta manybody pair style
- fix **ave/correlate/long** for efficiently computing correlations with very long time windows
- some formatting updates to the sources and naming conventions for #include directives
- many small bugfixes, cleanups and updates to the code. Many of those detected by static code analysis
",12007030
371,False,False,2015-08-17T22:16:53Z,2015-08-17T23:06:20Z,"Notable new features in this release are
- New contributed USER-SMD package to support _Smooth Mach Dynamics_ for liquids and solids.
- New contributed USER-DRUDE package for Drude oscillator based polarizability support (e.g. for CHARMM).
- New contributed USER-QTB package for modeling quantum nuclear effects in MD.
- New contributed USER-DIFFRACTION package for calculating virtual X-ray or electron diffraction images.
- Improvements and bugfixes for **fix gcmc**.
- Polymorphic manybody pair style.
- Support for different **special_bond** settings for different sub-styles in pair_style hybrid and hybrid/overlay.
- Support for using **read_data** multiple times in the same simulation.
  ...and - as usual - lots of updates and bugfixes to existing features.
",12007030
372,False,False,2015-05-16T15:01:35Z,2015-08-15T01:44:28Z,"Notable new features in this release are:
- support for python style variables and embedded python functions
- core-shell model
- improved SHAKE variant with RATTLE (fix rattle)
- ""chunk"" computes and fixes for improved on-the-fly analysis

In addition many bugfixes and small improvements.
",12007030
373,False,False,2020-03-21T13:55:20Z,2020-03-21T13:59:07Z,"### Fixed

- Fixed an incorrect return value in `unit->walktobl()` causing mobs to get stuck when they try to loot. (#2664)",7551429
374,False,False,2020-03-14T18:16:33Z,2020-03-14T18:17:46Z,"### Fixed

- Fixed an incorrect return value in `unit->walktobl()` causing mobs to be unable to walk to their target. (#2659)",7551429
375,False,False,2020-03-09T11:43:43Z,2020-03-09T11:49:12Z,"### Added

- Added/updated packets, encryption keys and message tables for clients up to 2020-03-04. (#2645)
- Exposed the item bound type (`IBT_*`) constants to the script engine. (#2650)
- Added item scripts for item IDs 12459 through 12465 and corrected their name in the pre-renewal DB. (#2634, issue #1196)
- Added the `unitiswalking()` script command, to check whether an unit is walking at a given time. (#2628)

### Changed

- Changed the default `PACKETVER` to 2019-05-30. (part of #2645)
- Major refactoring of the functions in `unit.c`, adding code documentation and following the code style guidelines. Functions have been renamed when backward compatible changes to the arguments or return values were made. (#2546)
  - A new header `unitdefines.h` has been added.
  - `enum unit_dir` is now provided, to standardize handling of facing/walking directions.
  - The macros `unit_get_opposite_dir()`, `unit_is_diagonal_dir()`, `unit_is_dir_or_opposite()`, `unit_get_ccw90_dir()`, `unit_get_rnd_diagonal_dir()` have been added.
  - `unit->walktoxy_timer()` has been renamed to `unit->walk_toxy_timer()` and its return values have been changed and documented.
  - `unit->walktoxy_sub()` has been renamed to `unit->walk_toxy_sub()` and its return values have been changed and documented.
  - `unit->delay_walktoxy_timer()` has been renamed to `unit->delay_walk_toxy_timer()` and its return values have been changed and documented.
  - `unit->walktoxy()` has been renamed to `unit->walk_toxy()` and its return values have been changed and documented.
  - `unit->walktobl_sub()` has been renamed to `unit->walk_tobl_timer()` and its return values have been changed and documented.
  - `unit->setdir()` has been renamed to `unit->set_dir()` and its return value and arguments have been changed and documented.
  - `unit->getdir()` has been renamed to `unit->get_dir()` and its return type and constness of the arguments have been changed.
  - `unit->warpto_master()` has been added.
  - `unit->sleep_timer()` has been renamed to `unit->sleeptimer()` and its return values have been changed and documented.
  - `unit->calc_pos()` now accepts `enum unit_dir`.
  - `map->check_dir()` now accepts `enum unit_dir`.
  - `map->calc_dir()` now returns `enum unit_dir` and accepts a const bl.
  - `npc->create_npc()` now accepts `enum unit_dir`.
  - `skill->blown()` now accepts `enum unit_dir`.
  - `skill->brandishspear_first()` now accepts `enum unit_dir`.
  - `skill->brandishspear_dir()` now accepts `enum unit_dir`.
  - `skill->attack_blow_unknown()` now accepts `enum unit_dir`.
  - The remaining unit functions have been documented.
- New return values have been added to `pc->setpos()`, for better error handling. (#2633, issue #2632)
- Increased the `MAX_MOB_LIST_PER_MAP` value to 115 in pre-renewal builds, to fit all the default spawns. (#2638, issue #1915)
- Extended the `getiteminfo()` command to also accept item names, and added the types `ITEMINFO_ID`, `ITEMINFO_AEGISNAME`, `ITEMINFO_NAME`. (#2639)
- Changed `itemskill()` to ignore conditions by default. The `ISF_CHECKCONDITIONS` needs to be explicitly passed if conditions should be checked/consumed. (part of #2648)
- Changed the NPC shop behavior to prevent selling items from the favorites tab of the inventory. (#2651)
- Updated Doxygen configuration to speed up generation and fix compatibility warnings. (0d747896e0)
- Updated the Travis-CI configuration file according to the validation warnings and notices. (eb97973e68)

### Fixed

- Fixed a missing `get_index()` call in `Skill2SCTable`, causing some skills to activate the wrong status. (#2643, issue #2636)
- Fixed a compilation error C2233 in Visual Studio. (part of #2645)
- Fixed Basilica unintentionally restraining boss mobs. (#2612, issue #1276, related to issue #2420)
- Fixed the handling of unequip scripts in zones where an item is restricted. The `OnUnequip` script is now never executed when unequipping in a restricted zone, but it is always executed when entering such zones, regardless of the `unequip_restricted_equipment` battle flag. (#2642, issue #2180)
- Fixed the handling of skill requirements and conditions by the `itemskill()` command. (#2648, issue #2646)
- Added missing requirements to `CASH_INCAGI` and `RK_CRUSHSTRIKE`. (part of #2648)

### Removed

- Removed the `ISF_IGNORECONDITIONS` flag previously used by `itemskill()`, now the default behavior. (#2648)
",7551429
376,False,False,2020-02-10T07:58:21Z,2020-02-10T07:59:56Z,"### Added

- Added/updated packets, encryption keys and message tables for clients up to 2020-02-06. (#2625)
- Added support for the expanded barter shop, see example script in `npc/custom/expandedbartershop.txt` and the related script commands `sellitem()`, `startsellitem()`, `sellitemcurrency()`, `endsellitem()`. Note: this includes a database migration. (part of #2625)
- Added the new script commands `cloakonnpc()` and `cloakoffnpc()`. (part of #2615)
- Added the new script command `achievement_iscompleted()` to check for achievement completion. (part of #2615)
- Added Exploration Achievement NPCs. (#2615)
- Added support for an `OnNPCUnload` label, where a script can perform its cleanup before being unloaded (such as removing mapflags, etc). (part of #2590)
- Added the Rebellion jobchange quest and its related mobs and items. (#2621)
- Added support for switching madogear type. See the documentation for `setmount()` and the related `MADO_ROBOT` and `MADO_SUITE` constants. (#2586)

### Changed

- Changed the logic of `skill_get_index` to make it easier to add new skills, custom or official. (#2596)
- Refactored `int_party` code related to exp sharing calculations. (part of #2601)
- Updated the Duel system cooldown to be configurable with seconds granularity. The `duel_time_interval` setting can be safely updated and with `@reloadbattleconf`, applying to any existing cooldowns. (#1495)
- Converted `PACKET_ZC_STATE_CHANGE` to use its struct format and added a function to send it to a single target. (part of #2615)
- Changed the behavior of `@unloadnpc`, `@reloadnpc`, `@unloadnpcfile` to kill the monsters that were spawned by the unloaded script (non-permanent spawns). (#2590, issue #2530)
- Updated the `mobdbconverter.py` tool to support Race, Size and Element constants. The script now requires Python 3. (#2620)
- Cleaned up a duplicate definition of `SP_VARCASTRATE` in `pc_readparam()`. (#2624, issue #1311)
- Extended `itemskill()` with a new `ISF_INSTANTCAST` flag to be able to cast a skill without cast time. (part of #2616)
- Extended `itemskill()` with a new `ISF_CASTONSELF` flag to be able to forcefully cast a skill on the invoking character. (part of #2616)
- Converted `ZC_AUTORUN_SKILL` to use its struct format. (part of #2616)

### Fixed

- Fixed some signed/unsigned mismatch compiler warnings. (#2601, issue #1434)
- Fixed some cases where the family exp sharing state wasn't correctly detected. (part of #2601)
- Fixed a duplicate ""Skill Failed"" message when using Asura Strike. (part of #2248, issue #1239)
- Fixed an issue that made a character turn to face its target after casting Asura Strike. (#2248, issue #1239)
- Fixed the position of a character after a failed Asura Strike cast, to be 3 cells from its original position instead of 2. (part of #2248, issue #1239)
- Fixed the status icon from the Elemental Resistance Potions and the Undead Element Scroll not disappearing when the status changes end. (#2614, issue #2593)
- Fixed a crash when using `@loadnpc`, `@reloadnpc` or `@unloadnpcfile` on a directory. (part of #2590, issue #1279)
- Fixed `PR_STRECOVERY` to only cure status effects if the target's element isn't Undead. (#2618, issue #2558)
- Fixed the mobs spawned by `mob_clone_spawn()` (`clone()`, `@evilclone`) being invulnerable because of an uninitialized `dmg_taken_rate` taking the value of 0. (#2617, issue #2607)
- Fixed a crash when the script function `getunits()` was called with an invalid mapindex. Now an error message is added when the mapindex validation fails. (#2619)
- Fixed a crash when `map_forcountinmap()` was called with an invalid mapindex. Now the function will return 0 instead. (part of #2619)
- Fixed clientside errors when using a `ViewData` block in the mob database without specifying a `HairStyleId`. The hair style will now default to 1 when a `ViewData` block is specified. (#2622)
- Fixed the damage calculation being too low when using weapons of type `W_RIFLE` (in pre-renewal). (#2623)
- Fixed an issue that could cause homunculi to be in an unexpected partially-vaporized state (i.e. when a Vanilmirth kills its own master through `HVAN_EXPLOSION`). (#2626)
- Fixed NPC ID validation when `SECURE_NPCTIMEOUT` is defined, causing scripts to abort with an ""Unknown NPC"" error on the console. (#2627, issue #2073)
- Fixed the skill condition checks and the `flag` parameter of `itemskill()`. The constants `ISF_NONE` and `ISF_IGNORECONDITIONS` are now available. (part of #2616)
- Fixed the `itemskill()` items to provide their proper Aegis behavior, in their requirement checks, self-targeting and item consumption.  (#2616, issue #819)
- Fixed the Earth Spike Scroll to consume 10 SP when `SC_EARTHSCROLL` is active. (part of #2616)
- Fixed warnings in the HPMHookGenerator. (1000b10026)

",7551429
377,False,False,2020-01-13T07:42:16Z,2020-01-13T07:44:13Z,"### Added

- Added/updated packets, encryption keys and message tables for clients up to 2020-01-08. (#2599)
- Added support for auto exp insurance items. (#2603)
- Added the script commands `resetfeel()` and `resethate()`. (#2285)
- Added the atcommand `@hatereset`. (part of #2285)

### Changed

- Extracted packet `ZC_SE_CASHSHOP_OPEN` to a separate function. (part of #2599)
- Renamed the functions `clif_parse_CashShop*` into `clif_parse_cashShop*`. (part of #2599)
- Converted `clif_partytickack()` to use the struct version of packet `ZC_PARTY_CONFIG`. (part of #2599)
- Extended `setpcblock()` with a new `PCBLOCK_NPC` functionality to prevent players interacting with NPCs (e.g. During some npctalk dialogue). (#2606)
- Extended `warpparty()` and `warpguild()` with an option to disregard the `nowarp` and `nowarpto` mapflags. (#2604, issue #1861)
- Updated copyright header for year 2020.

### Fixed

- Fixed reading water level from RSW version 2.2 and newer. (part of #2599)
- Fixed `pc_have_item_chain()` to retrieve the chain ID from the chain cache. (part of #2603)
- Fixed an overflow in a zeny check condition in RODEX, causing code to never be executed. (#2266)
- Fixed a re-definition of HPM related symbols in plugins with multiple compilation units. (#2608)
",7551429
378,False,False,2019-12-16T00:46:07Z,2019-12-16T00:47:53Z,"### Added

- Added/updated packets, encryption keys and message tables for clients up to 2019-12-11. (#2585)
- Added new version of packet `ZC_NOTIFY_EFFECT3`. (part of #2583)
- Added script function `specialeffectnum()`. (part of #2583)

### Changed

- Reduced the IP ban column length to 13 characters, matching the length of the inserted data. A database migration is required. (#2583, issue #2349)
- Converted packet `CZ_SE_CASHSHOP_OPEN` into a struct. (part of #2583)
- Replaced the old MySQL Connector with MariaDB C Connector 3.1.5 / Client Lib 10.4.3, for the Windows VS builds. (#2580)
- Moved the functionalities of `mob_avail.txt` to the mob database, expanding it with more fields (see the `mob_db` documentation for details). (#2572)

### Fixed

- Fixed incompatibilities with MySQL 8. (part of #2580)
- Fixed errors when `guild_skill_relog_delay` is set to 1 (reset on relog). (#2592, issue #2591)
- Fixed Tarot Card equipment breaking behavior to match the official, targeting only Left Hand (Shield), Armor and Helm. (#2589)
- Fixed racial crit bonuses not being affected by katar crit bonus. (#2588)
- Fixed interaction between Lex Aetherna and Stone/Freezing, now mutually exclusive. (#2598, issue #2559)

### Removed

- Removed `mob_avail.txt`, since its functionality has been moved to the mob database. (part of #2572)
",7551429
379,False,False,2019-11-18T20:10:29Z,2019-11-18T20:11:48Z,"### Added

- Added an SQL linter. The `./tools/checksql.sh` script can be used to automatically validate the syntax of every file in the `sql-files` folder (note: dependencies might need to be installed through composer). The script is also executed in the Travis builds. (#2582)

### Fixed

- Fixed a syntax error in the `2019-10-12--14-21.sql` migration file. (part of #2582)
",7551429
380,False,False,2019-11-18T02:40:11Z,2019-11-18T02:42:59Z,"### Added

- Added/updated packets, encryption keys and message tables for clients up to 2019-11-13. (#2568)
- Added support for packet `CZ_REQ_MOUNTOFF`. (part of #2568)
- Added a missing building entrance portal in Juno and in Lighthalzen. (#2542)
- Added the script command `getguildinfo()` and its related constants `GUILDINFO_*`, to lookup information about a guild. (#2566)
- Added a separate configuration flag in `map_log.enable` to control the logging of `LOG_TYPE_LOOT`. (part of #2560, issue #2414)
- Added a new log type, `LOG_TYPE_ACHIEVEMENT` and its configuration flag, to control the logging of achievement-granted items. A database migration is required. (#2560, issue #2414)
- De-hardcoded the boss monsters' resistance to some status effects. It's now controlled by a new `NoBoss` flag in `sc_config`. (#2570)
- De-hardcoded the combo skills chaining check. It's now controlled by a new `IsCombo` flag in `skill_db`. (#2573)
- De-hardcoded the status icons. They are now defined through a new `Icon` field in `sc_config`. (#2577)

### Changed

- Added error details to the python converter tools when a libconfig parsing error is encountered. (part of #2568)
- Converted packet `CZ_LAPINEDDUKDDAK_CLOSE` into a struct. (part of #2568)
- Updated the location of various NPCs: portals in Juno, sign post in Brasilis, Young Man in Payon (pre-renewal). (part of #2542)
- Reordered the loading of the stylist DB to be before the loading of NPC scripts, for consistence with the other DB files. (#2571)

### Fixed

- Fixed an incorrect nullpo check when slave monsters are summoned by an alchemist. (#2574, issue #2576)
- Fixed the Steal skill not showing the HP bar of the targeted monster right away but only when leaving and re-entering sight range. (part of #2567)
- Fixed a regression in the Steal skill that caused it to allow stealing of some cards. Card stealing prevention is now enforced by item type rather than by position in the drop list. (#2567)
- Fixed the `@fakename` to display the overridden name regardless of whether the character is disguised. (#2548, issue #2539)
- Fixed the `target_to` field not being cleared appropriately, causing monsters to get stuck in a loop walking to their previous target that has died, and causing hunters with auto-attack to be unable to walk away from their target and cancel their attack action. (#2564)
- Fixed the handling of HULD .po translations that contain the `\r` escape sequence. (#2569)
- Fixed the unintended clearing of status changes granted by passive guild skills, via `sc_end(SC_ALL)`. (#2575, issue #1147)

### Deprecated

- Deprecated the script command `getguildname()`, use `getguildinfo(GUILDINFO_NAME, <guild id>)` instead. (part of #2566)
- Deprecated the script command `getguildmaster()`, use `getguildinfo(GUILDINFO_MASTER_NAME, <guild id>)` instead. (part of #2566)
- Deprecated the script command `getguildmasterid()`, use `getguildinfo(GUILDINFO_MASTER_CID, <guild id>)` instead. (part of #2566)

### Removed

- Removed the `SI_*` constants from the source code, now available through `constants.conf`. (part of #2577)",7551429
381,False,False,2019-10-21T06:37:04Z,2019-10-21T06:39:52Z,"### Added

- Added/updated packets, encryption keys and message tables for clients up to 2019-10-02. (#2537)
- Added a new config file `conf/common/map-index.conf` to customize the location of the `map_index.txt` file. (part of #2547)

### Changed

- Moved several hardcoded messages to `messages.conf`. (#2152, issue #1282)
- Updated the `@dropall` command to correctly show the amount of dropped (and skipped) items. (#2545)
- Split the HULD generated translations into smaller (and easier to manage) files. A translation will now consist of a folder, with one .po (.pot) file per script. Third party translations may need to be updated to match this change. (#2492)
- Changed the slave monsters' behavior to react to chase the same target as their master, to match the official behavior. A configuration setting `slave_chase_masters_chasetarget` has been provided in `battle/monster.conf` for those that wish to keep using the old custom behavior. (#2561)
- De-hardcoded the path to the `db` folder, now using `map_configuration.database.db_path` and `char_configuration.database.db_path` in the map and char server respectively. This allows the user to customize the location of the db folder. (#2547)

### Fixed

- Fixed an exploitable issue in the Izlude Arena party mode script. (#2538)
- Fixed a buffer overflow in the `buildin_npcshopdelitem()`. (#2540)
- Fixed a potentially exploitable issue in the Ore Downgrade script. (#1935, issue #1934)
- Corrected the item bonus for `Drooping_Kitty_C`. (#2543)
- Corrected the display of the Sense skill to cap to 0 the negative resistance values instead of underflowing them. (#2544)
- Fixed compilation warning with gcc-9. (part of #2537)
- Fixed the HP bar of party members not showing when they unhide. (#2549)
- Fixed the status change timers not showing the correct values in the client, after relogging. This requires a database migration. (#2551, issue #2018)
- Corrected Magnum Break's 2 second delay to be an after-cast delay (reducible by Bragi's Poem) instead of a cooldown. (#2553)
- Fixed an issue that prevented players from closing their own vending shop. (#2555, issue #2554)
- Fixed the Homunculus skill requirements being applied to the master as well. (#2556)
- Fixed the Homunculus skill failure message not displaying any required items (part of #2556)
- Fixed the Chaotic Blessings skill from Vanilmirth never picking the enemy as its random target to heal. (part of #2556)
- Fixed an issue that caused the saved character data to retain the old party ID after leaving or getting kicked. (#2562)
- Fixed some possible crashes or memory corruption caused by dangling pointers to guilds in the character data. (part of #2562, related to issue #1266)
- Fixed the party name not getting removed from all affected characters (clientside) when a party is disbanded. (part of #2562)
- Fixed a crash in the console command parser when a line consisting only of spaces is executed. (#2563)
- Fixed the argument string passed to console commands when the input starts with multiple adjacent spaces. (part of #2563)
- Fixed the mapindex value not getting updated in the `gm:info` console command. (part of #2563)
- Fixed an issue that caused aggressive monsters with ranged attack to be unable to attack from above a cliff. (#2550)

### Removed

- Removed the legacy, unused, `castle_defense_rate` option from `battle/guild.conf`. (#2552)
",7551429
382,False,False,2019-09-23T06:56:32Z,2019-09-23T06:58:32Z,"### Added

- Added/updated packets, encryption keys and message tables for clients up to 2019-09-18. (#2528)
- Added the `@changecharsex` command, to change a character's sex. (part of #2528)
- Added support for clan names in the name packets. (part of #2528)
- Added support for multiple Token of Siegfried item IDs. (#2515)
- Added support for the new guild UI features in the client. (#2519)
- Added per-item scriptable start/end rental functions, replacing the previous hardcoded functionality. See the new item DB fields `OnRentalStartScript` and `OnRentalEndScript`. (#2462, issue #140)
- Added the `getfont()` script command, to check the player's current chat font. (part of #2462)
- Added support for gcc-9 by disabling the array bound checks until the `ZEROED_BLOCK` related code will be fully compatible (#2536)
- Implemented the LapineDdukDdak System. (#2336)
- Implemented the Library Mistake Quest, allowing players to bypass the rebirth costs. (#2532)

### Changed

- Converted `sc_config` to libconfig. A tool to convert from the old format has been provided in `tools/scconfigconverter.py`. (#2526)
- Converted packet `ZC_TALKBOX_CHATCONTENTS` into a struct. (part of #2528)
- Extracted homunculus experience gain message code to a separate function. (part of #2528)
- Changed function arguments to type `enum battle_dmg_type` where applicable. (part of #2528)
- Changed pets, homunculi, etc. not to be loaded when autotrading. (part of #2524)
- Changed the guild castle IDs order to match the client's. (#part of #2519)
- Converted the item combo DB to libconfig. A tool to convert from the old format has been provided in `tools/itemcombodbconverter.py`. (#2529)
- Changed some remaining symbols to `static`. (part of #2536)
- Updated the gitlab-ci builds to reflect the release of Debian 10 buster. Gcc-8 is now the primary compiler used for the gcov, asan and i386 builds. (part of #2536)
- Increased the maximum allowed item ID to int32 max, for clients supporting it. (part of #2336)

### Fixed

- Fixed packet `ZC_ACK_RANKING` on old (2013 and earlier) clients. (part of #2528)
- Fixed an issue preventing homunculus auto-vaporize on death or skill reset, when the 80% HP condition isn't met. (#2524)
- Fixed a bug that caused homunculi's HP and SP to be refilled on every login instead of just on creation. (part of #2524)
- Fixed the intimacy requirement check for the homunculus ultimate skills. (part of #2524)
- Fixed the MVP tombstones causing players to get stuck if they were reading their message when the MVP respawns. (#2525)
- Fixed the MVP tombstones showing their message multiple times when clicked. (part of #2525)
- Fixed some incorrect examples of use of `while (select(...))` in the script documentation. (#2533)
- Corrected the item ID used by the KVM Logistic Officer. (#2527, issue #2404)
- Fixed several subtle issues caused by the nick partial match feature, when enabled. Now the partial match is only performed for lookups requested by atcommands and client features, while a full match is used for source and script lookups. (#2523)
- Rewritten the `itemdb_searchname_array` function, now properly supporting the items with IDs greater than 65535. (#2535)
- Fixed support for items with IDs greater than 65535 in the constdb2doc plugin. (part of #2535)
- Fixed a minor C standard compliance error, mixing function pointers and non-function pointers. (part of #2536)
- Fixed the (commented out by default) custom Venom Splasher countdown timer code. (part of #2536)",7551429
383,False,False,2019-08-26T06:01:22Z,2019-08-26T06:04:48Z,"### Added

- Added/updated packets, encryption keys and message tables for clients up to 2019-08-21. (#2517)
- Added icons for the elemental resistance status changes (`SC_ARMORPROPERTY`). (#2516)
- Added Visual Studio 2019 solution. (#2520)
- Added new NPC ID constants. (#2521)

### Changed

- Converted various packets (`ZC_ADD_SKILL`, `ZC_SKILLINFO_LIST`, `ZC_SKILLINFO_UPDATE2`) into structs and added a new version for `ZC_NPC_MARKET_PURCHASE_RESULT`. (part of #2517)
- Added missing sanity checks into many clif functions. (#2501)
- Extended the `getequiprefinerycnt()` command to accept multiple equipment slots at the same time, returning the total refine of them. (#2512)
- Added the path (relative to the Hercules root) to various database reading status messages. (#2513)
- Extended `setiteminfo()` and `getiteminfo()` with additional options: `ITEMINFO_ELV_MAX`, `ITEMINFO_DELAY`, `ITEMINFO_DROPEFFECT_MODE`, `ITEMINFO_CLASS_*`, `ITEMINFO_FLAG_*`, `ITEMINFO_STACK_*`, `ITEMINFO_ITEM_USAGE_*`, `ITEMINFO_GM_LV_TRADE_OVERRIDE`. (#2518)

### Fixed

- Fixed packets `ZC_BROADCASTING_SPECIAL_ITEM_OBTAIN` and `ZC_MAKINGITEM_LIST`. (part of #2517)
- Fixed an overflow in the auto bonus processing function, that made it unable to handle costume/shadow gears. (#2514, issues #1355, #1190, #2451)

### Removed

- Removed Visual Studio 2013 solution. (part of #2520)
- Removed round-trips to the inter-server for packets related to whisper messages, reports to GMs, GM broadcasts, party, guild and main chat, previously needed for, now unsupported, multi-zone setups. (#2522)",7551429
384,False,False,2019-07-28T23:51:08Z,2019-07-28T23:53:11Z,"### Added

- Added/updated packets, encryption keys and message tables for clients up to 2019-07-24. (#2498)
- Added a setting to have `@autoloot` take player drop penalties/bonuses into account. See `autoloot_adjust` in `drops.conf` for details. (#2505)
- Added a mob DB field `DamageTakenRate` to change the rate of the damage received by each monster. (#2510)
- Added a setting to allow homunculi to obtain a portion of the EXP gained by their master. See `hom_bonus_exp_from_master` in `homunc.conf`. Note: in order to restore the previous behavior, the setting can be changed to `0`. (#2507, issue #2313)

### Changed

- Converted various packets (`ZC_ACK_RANKING`, `ZC_STATUS_CHANGE_ACK`, `ZC_HAT_EFFECT`) into structs. (part of #2498)
- Changed `pc_statusup()` to send the actual stat value back to the client in case of error. (part of #2498)
- Disabled the `@refresh` and `@refreshall` commands during NPC conversations, causing the character to be stuck on an invisible NPC dialog until relogging. (#2499)
- Extended `@reloadmobdb` to update the currently spawned monsters. (#2500)
- Changed the party sharing checks to avoid unnecessary SQL queries. (part of #2502)
- Extended the `@refine` command with shortcuts to refine every normal equipment (-1), every costume equipment (-2) or every shadow equipment (-3). (#2504)
- Extended the `@refine` command to list the costume and shadow equipments. (#part of #2504)
- Increased the stack limit of Turisus, Asir and Pertz to unlimited and the other runestones to 60. (#2509)
- Extended the commands `getmonsterinfo()` and `setunitdata()` / `getunitdata()` with accessors for the new `DamageTakenRate` mob DB field, using, respectively, `MOB_DMG_TAKEN_RATE` and `UDT_DAMAGE_TAKEN_RATE`. (part of #2510)
- Converted the Guild Castle database to the libconfig format, in preparation for future updates. (#2506)

### Fixed

- Sanitized the use of `input()` in all the scripts to work correctly if the minimum accepted value is changed to less than zero in the configuration. It's recommended that third party scripts get updated not to assume a positive value, since the default setting may change in the future. (#2494)
- Fixed an issue in the Sealed Shrine script, allowing to unseal multiple Baphomets under certain conditions. (#2332)
- Fixed an issue that allowed an appropriately created party to enable experience sharing even if outside the sharing range. (#2502)
- Corrected the cooldown after killing Wounded Morroc. (#2503)
- Corrected `isequipped()` and `isequippedcnt()` to correctly handle costume equipment. (#2508)",7551429
385,False,False,2019-07-01T00:22:37Z,2019-07-01T00:25:29Z,"### Added

- Added/updated packets, encryption keys and message tables for clients up to 2019-06-05. (#2491)
- Added support for the new shortcuts packets in the Zero clients. (part of #2491)
- Added support for the Summoner class in `stylist.txt`. (part of #2357, issue #2356)
- Implemented the new `setfavoriteitemidx()` and `autofavoriteitem()` script commands. (#2427)
- Implemented the new `@reloadnpc` atcommand, to reload a single script file. (#2476)
- Implemented the new `identify()` and `identifyidx()` script commands and `@identifyall` atcommand. (#2487)

### Changed

- Suppressed unnecessary ShowWarning messages related to the `nosave`, `adjust_unit_duration` and `adjust_skill_damage` mapflags when using `@reloadscript`. (#2410, issue #2347)
- Updated the Rune Knight, Guillotine Cross and Ranger shops with missing items. (#2343)

### Fixed

- Fixed monster spawns disregarding the custom names specified. (#2496, #2491, issue #2495)
- Fixed the style range in `stylist.txt`, now starting from 1 instead of 0. (part of #2357, issue #2356)
",7551429
386,False,False,2019-06-03T00:08:41Z,2019-06-03T00:10:12Z,"### Added

- Added Stat Reduction Potions to the Renewal item DB. (#2483)
- Added the constant `MAX_NPC_PER_MAP` to the script engine. (part of #2474)
- Added the `cap_value()` script command, to cap a value between a minimum and maximum. (#2472)
- Added the `mesclear()` script command, to clean an NPC message dialog without user interaction. (#2471)
- Added a script for simplified installation on Windows development machines. (#2222)
- Added/updated packets, encryption keys and message tables for clients up to 2019-05-30. (#2468, #2490)
- Added support for multiple hotkeys sets (two 'tabs' on the RE clients). The constant `MAX_HOTKEYS_DB` represents the maximum amount of hotkeys saved to the database. This requires a database migration. (part of #2468)
- Added the `delitemidx()` script command, to delete an item by its inventory index. (#2394)
- Added the `getguildonline()` script command, to return the amount of online guild members. (#2290)
- Added the `nostorage` and `nogstorage` mapflags, disallowing storage usage on the affected maps. The `bypass_nostorage` permission is also provided, to bypass those mapflags. (#2221)

### Changed

- Moved the questinfo data from map to npc data, allowing the use of multiple `questinfo()` blocks. (#2433, issue #2431)
- Removed code duplication from the map data cleanup functions. (part of #2433)
- Allow to read negative values from `input()`. The minimum value is still set to 0 in the default configuration, but it can be overridden globally by editing `input_min_value` or locally by specifying the `min` and `max` arguments to `input()`. (#2375)
- Extended the `getmapinfo()` command to return the total number of NPCs in a map (`MAPINFO_NPC_COUNT`). (#2474)
- Updated the pre-renewal Byorgue summon slave delay to match the official value, increased before renewal to prevent farming exploits. (#2456)
- Changed the `""all""` special value used by `killmonster()` to be lowercase and case sensitive, for consistency with other script commands. (#2380)
- Updated and simplified the Windows installation instructions. (part of #2222)
- Updated some NPC/name translations to match the official ones or the official intent. Cougar -> Kuuga Gai, Gaebolg -> Geoborg, Family -> Clan, Magic Gear -> Mado Gear (#2457)
- Updated the Mado Gear rental NPC to sell Mado Gear Box and Cooling Device. (part of #2457)
- Changed the `expandinventoryack()`, `expandinventoryresult()`, `expandinventory()` and `getinventorysize()` script commands to be lowercase, for consistency. (#2374)

### Fixed

- Fixed the `failedremovecards()` command, to only remove the carts when `type` is set to 1, as described in its documentation. (#2477, issue #2469)
- Fixed a crash when using `npcspeed()`, `npcwalkto()`, `npcstop()`, `unitwalk()`, `unitwarp()`, `unitstop()` on a floating NPC without a sprite. (#2430)
- Fixed a stats calculation regression. (#2482)
- Fixed a version check for the `ZC_PING` packet. (part of #2468)
- Fixed errors caused by missing Option DB and Option Drop Groups DB data when the map server loads the mob database in minimal mode. (#2486, related to issue #2484)

### Deprecated

- Deprecated use of `""All""` with `killmonster()`. Use `""all""` instead. (part of #2380)
- Deprecated the mixed case version of the `expandInventoryAck()`, `expandInventoryResult()`, `expandInventory()` and `getInventorySize()` script commands. Use the lowercase variants instead. (part of #2374)
",7551429
387,False,False,2019-05-22T21:24:37Z,2019-05-22T22:34:21Z,"### Fixed

- Fixed a reading error in refine database caused refine chances to be incorrectly read. (#2481)
",7551429
388,False,False,2019-05-09T00:13:55Z,2019-05-09T00:16:21Z,"### Fixed

- Fixed a calculation error in the ASPD (and/or other substats) when the maximum stats have values higher than default. (#2419)
- Fixed a parsing error in the HPM Hooks Generator. (#2467)",7551429
389,False,False,2019-05-07T22:59:28Z,2019-05-07T23:01:53Z,"### Fixed

- Fixed a packet generation issue that caused the Guild Storage to appear empty. (#2464, issue #2463)
- Fixed use of `ZC_SE_PC_BUY_CASHITEM_RESULT` on old packet versions that didn't support it. (#2465)
",7551429
390,False,False,2019-05-07T00:26:43Z,2019-05-07T00:28:17Z,"### Fixed

- Fixed an issue in the player name packet causing names not to be sent correctly. (#2460, issue #2459)
- Fixed a null pointer error on MVP drops. (#2461)
",7551429
391,False,False,2019-05-06T02:28:32Z,2019-05-06T02:31:15Z,"### Added

- Added `consolemes()` script function which allow the script engine to print error, warning, status, debug and info messages to the console. (part of #2440)
- Added the item combo effect for Geffenia Tomb of Water (2161) and La'cryma Stick (1646). (#2441, issue #1982)
- Added support for mobs to drop items with Random Options. See the new database file `db/option_drop_group.conf` and the new optional syntax in the drop entries of `mob_db.conf`. (#2309)
- Added a global function `F_MesItemInfo()`, to print an item name with description link, formatted for the current client version. (#2068)
- Added/updated packets, encryption keys and message tables for clients up to 2019-05-02. (#2432)
- Added a new function `clif_selforarea()` to send packets to self, falling back to area when no target is specified. (part of #2432)
- Added script commands `getunittitle()` and `setunittitle()`, and the related information in the `unit_data` structure. (part of #2432)
- Added support for players to automatically reject party invites through the party options. (part of #2432)
- Added an option to automatically drop the connection on the server side when a character is kicked. See `drop_connection_on_quit` in `client.conf` (note: the previous behavior was equivalent to `true`). (part of #2432)
- Added an option to force character save when the party options are changed. See `save_settings` in `map-server.conf`. (part of #2432)
- Added the script command `closeroulette()` and the related packet `ZC_ACK_CLOSE_ROULETTE` to close the roulette window. (part of #2432)
- Added a missing `CSBR_BUSY` value to `enum CASH_SHOP_BUY_RESULT`. (part of #2432)
- Added support for the refinery UI. See the new `refine_db.conf` changes and the settings `enable_refinery_ui` and `replace_refine_npcs` in `features.conf` to toggle between the new UI and the previous scripted refiner. (#2446)
- Added a new `SkillInfo` flag `HiddenTrap`, to make certain traps invisible, according to the `trap_options` configuration flag. The default settings have changed to match Renewal. Pre-renewal users might want to review `trap_options` and the now superseded `traps_setting`. (#2232, issues #1927 and #1928)

### Changed

- Extended `@dropall` to accept an optional argument for item type (#2439).
- Updated copyright header in the configuration files for year 2019. (part of #2452)
- Extended the `getinventorylist()` script command to return an array `@inventorylist_favorite`, set to true when the item is located in the favorite tab. (#2426)
- Split the function `clif_blname_ack()` into bl type-specific functions. (part of #2432)
- Extended `getunitdata()` and `setunitdata()` with support for the group ID (`UDT_GROUP`), and added the related information in the `unit_data` structure. (part of #2432)
- Moved the `UDT_*` constants from `constants.conf` to `script.c`. (part of #2432)
- Extended the guild expulsion information to include the character ID for supported client versions. This includes a database migration. (part of #2432)
- Disabled packet validation in `socket_datasync()`. (part of #2432)
- Moved the refine database and refine related functions to a new `refine.c` file. A public and private interface is provided, with public database accessors `refine->get_bonus()` and `refine->get_randombonus_max()`. (part of #2446)
- Changed several battle calculation limits to be configurable through `battle/limits.conf` and no longer hardcoded. Several `status_data` fields and battle functions now use `int` instead of `short` to accommodate this change. (#2419)
- Changed the `unitwarp()` script command to allow NPCs to be relocated to non-walkable cells (like `movenpc()`). (#2453)

### Fixed

- Corrected MSVC version naming in console (#2450).
- Corrected an example using a sprite number instead of a constant in README.md. (#2449)
- Fixed an issue in a monster death label callback in `npc/custom/events/mushroom_event.txt` when the monster is killed without an attached player. (#2442, issue #1955)
- Fixed an issue where when a chat room handler leaves, the following leader won't be checked for `cell_chknochat` and will bypass it. (#2443, issue #1569)
- Corrected the documentation for `pincode.enabled` in the char-server configuration. (part of #2452)
- Fixed an incorrectly displayed ITEMLINK entry in the OldGlastHeim script. (part of #2068)
- Fixed a packet size underflow in the storage packet for certain client versions. (#2424)
- Fixed an issue that caused named/brewed/forged items to be saved to database with the wrong character ID. Database migrations are provided, to update the existing data. (#2425, issue #2409)
- Fixed a truncated title in the inventory window. (part of #2432)
- Fixed a possible overflow in the guild member login field (only supporting timestamps until 2036-12-31). (part of #2432)
- Fixed a compile error with old packet versions. (part of #2432, issue #2438)
- Fixed a potential exploit related to the vending skill, by adding stricter validation on the vending status flags. (part of #2432)
- Fixed a regression, restoring the ability for HPM Hooks to hook into private interfaces, through the new macros `addHookPrePriv()` and `addHookPostPriv()`. (#2447)
- Fixed a zeny loss caused by the inter-server deleting zeny from messages when the user only requests to take items. (#2455)
- Fixed a compatibility issue with Perl 5.26 in the item converter script. (#2444)
- Fixed various gitlab-ci build failures, by removing some no longer supported debian versions and packages. The gcc-4.6, gcc-4.7 and gcc-5 builds have been removed. (#2458)

### Deprecated

- Deprecated the script command `debugmes()`, superseded by `consolemes()`. (part of #2440)

### Removed

- Removed the superseded `traps_setting` configuration flag, replaced by `trap_options`. (part of #2232)
",7551429
392,False,False,2019-04-17T04:10:45Z,2019-04-17T04:12:47Z,"### Fixed

- Fixed some race conditions and missing validation in the item and zeny handling code for RODEX. (#2437)
- Fixed pet eggs getting lost for pets that were hatched before the pet evolution system. Pets are now automatically migrated to the new system that keeps eggs in the user's inventory. (#2428)
",7551429
393,False,False,2019-04-07T23:45:47Z,2019-04-07T23:49:07Z,"### Added

- Added a configuration flag to disable the achievement system even then it's supported by the current client version. See `features/enable_achievement_system` in `battle/feature.conf`. (#2170)
- Added the `PETINFO_*` constants, to be used with `getpetinfo()`. (part of #2398)
- Added/updated packets, encryption keys and message tables for clients up to 2019-04-03. (#2406)
- Added support for the `ZC_PING` and `CZ_PING` packets. (part of #2406)
- Added support for the `CZ_COOLDOWN_RESET` packet and the related `/resetcooltime` client command. (part of #2406)
- Added support for the ""allow call"" player configuration option. (part of #2406)
- Added support to open the macro UI in the client. (part of #2406)
- Added support for the `CZ_STYLE_CLOSE` packet. (part of #2406)
- Exposed the `MAX_ITEM_ID` constant to the script engine. (#2367)

### Changed

- Extended `getinventorylist()` to return the item's inventory index in the `@inventorylist_idx[]` array. (#2401)
- Extended `gettimestr()` to accept an optional argument providing a UNIX timestamp, as returned for example by `getcalendartime()`. (#2388)
- Extended `getpetinfo()` to include information previously returned by `petstat()`. (#2398)
- Renamed `clif_charnameack()` to the more accurate `clif_blname_ack()`. (part of #2406)
- Extended `showscript()` to accept an optional argument to specify the send target. (#2415)
- Updated `README.md` to include links to the sections. (#2354)

### Fixed

- Fixed a compilation error in the sample plugin, on systems where `rand()` is not available. (#2403)
- Fixed a visual glitch caused by `setunitdata(UDT_LEVEL, ...)` not updating the monster level, when `show_mob_info` is configured to display it. (#2408)
- Fixed the `features/enable_pet_autofeed` configuration value that was ignored and `features/enable_homunculus_autofeed` was used instead. (#2417)
- Fixed an unescaped string in the db2sql generated data for the mob skill database. (#2416, related to #2407)
- Fixed some possible null pointer warnings reported by gcc. (part of #2406)
- Fixed a client crash with `@bodystyle` and `Job_Super_Novice_E`. (part of #2402, related to #2383)
- Fixed a client crash when using `@jobchange` to a class that doesn't support alternate body styles while a body style is applied. (#2402)

### Deprecated

- Deprecated the command `petstat()`, superseded by `getpetinfo()`. (part of #2398)
- Deprecated the `PET_*` constants, used by the `petstat()` command. (part of #2398)
",7551429
394,False,False,2019-03-11T03:31:11Z,2019-03-11T03:32:44Z,"## Added

- Added `MOB_CLONE_START` and `MOB_CLONE_END` to the constants available to the script engine. (#2390)
- Added crash dumps to the Travis-CI output in case one of the servers crashes during the tests. (#2385)
- Added gcc-7 and gcc-8 builds to Travis-CI. (part of #2385)
- Added a configuration setting `magicrod_type` (`skill.conf`) to restore the old eAthena behavior for the Magic Rod skill. (#2034)
- Added some missing information to the documentation for `bg_create_team()` and `waitingroom2bg()`, to remove the automatic respawn. (#2381)
- Added the `MERCINFO_*` constants to the script engine, for `getmercinfo()`. (#2397)
- Added support for `MERCINFO_GID` to `getmercinfo()`. (#2397)
- Added the script commands `mobattached()` and `killmonstergid()`. (#2396)
- Added/updated packets, encryption keys and message tables for clients up to 2019-03-06. (#2377)
- Added a missing value into enum `BATTLEGROUNDS_QUEUE_ACK`. (part of #2377)

## Changed

- Changed the Windows SDK from version 10.0.15063.0 into 10.0.17763.0 for Visual Studio 2017. (#2368)
- Changed the return value of `getunitdata()` from `0` to `-1` in case the requested value couldn't be retrieved, in order to differentiate between a zero and an invalid value. Note: this may break existing scripts. (#2392)
- Updated the `getunitdata()` and `setunitdata()` documentation to clarify that the command only handles integer values. (#2391)
- Added the function `connect_client()` into the socket interface. (#2378)
- Moved the variable `SOCKET_CONF_FILENAME` to the socket interface. (#2378)
- Moved local variables from `atcommand.c` to the interface. (#2378)
- Moved defines from `map.h` to `mapdefines.h` to remove an inclusion loop. (#2378)
- Moved the stylist-related functions to their own interface. (#2400)

## Fixed

- Fixed some typos in the item bonus documentation. (#2376)
- Fixed a typo in the `setpcblock()` documentation. (c9bab97108)
- Fixed a missing return value in `F_GetTradeRestriction()`. (#2360)
- Fixed the return value of `bg_create_team()` to be -1 in case of failure, as described in the documentation. (part of #2381)
- Fixed the date field in the member list packet. (part of #2377)
- Fixed the documentation for `needed_status_point()`, not supporting the `char_id` argument. (#2399)

## Deprecated

- Deprecated the `UDT_MAPIDXY` constant. Its use in `setunitdata()` is replaced by `unitwarp()` and its use in `getunitdata()` is replaced by `getmapxy()`. (#2391)
- Deprecated the `UDT_WALKTOXY` constant. Its use in `setunitdata()` is replaced by `unitwalk()`. (#2391)
",7551429
395,False,False,2019-02-11T19:01:52Z,2019-02-11T19:20:35Z,"### Fixed

- Fixed a buffer size issue in inter server packets (#2370, issue #2369)
",7551429
396,False,False,2019-02-11T04:15:38Z,2019-02-11T04:18:47Z,"### Added

- Added/updated packets, encryption keys and message tables for clients up to 2019-01-09. (#2339)
- Added support for the barter type shops. See `sellitem()`, `NST_BARTER` and the demo scripts in `doc/sample/npc_trader_sample.txt` and `npc/custom/bartershop.txt`. (part of #2339)
- Added the `countnameditem()` script command. (#2307)
- Added/updated packets, encryption keys and message tables for clients up to 2019-01-30. (#2353)

### Changed

- Improved the response codes and error messages related to the login/char server authentication. (#2151, issue #737)
- Changed the character creation to use `FIXED_INVENTORY_SIZE` as default inventory size instead of relying on the SQL table default value. (part of #2353)
- Changed the type of several variables from `short` to `int`. (#2364)

### Fixed

- Fixed a bug that caused the custom disguise event to run indefinitely. (#2351)
- Fixed issues (item db loading, item search by name) for item IDs higher than 65535. (#2337)
- Fixed an issue while sending the last page of `HC_ACK_CHARINFO_PER_PAGE`. (part of #2339)
- Fixed the minimum duration of Voice of Siren. (#1631)
- Fixed the Sura Job Change Quest getting stuck after the first attempt. (#1656, issue #1655)
- Added support for recent MySQL versions that don't define the `my_bool` type. (#2365, issue #2363)",7551429
397,False,False,2019-02-04T22:12:41Z,2019-02-04T22:14:43Z,"### Fixed

- Added a missing check in `run_script_main()`. (#2362)
",7551429
398,False,False,2018-12-17T01:46:41Z,2018-12-17T02:21:00Z,"### Added
- Added/updated packets, encryption keys and message tables for clients up to 2018-12-12. (#2324)
- Added support for the `AC_LOGIN_OTP` packets. (part of #2324)
- Added script command `enchantitem()` and related packet `ZC_ENCHANT_EQUIPMENT`. (part of #2324)
- Added script command `servicemessage()` and related packet `ZC_SERVICE_MESSAGE_COLOR`. (part of #2324)
- Split packets struct definitions out from lclif into separate files for AC and CA packets. (part of #2324)
- Added struct definitions header for HC packets. (part of #2324)
- Added support for expandable inventory size, including database persistence, inventory expansion packets, the script commands `expandInventoryAck()`, `expandInventoryResult()`, `expandInventory()`, `getInventorySize()`, the item `Inventory_Extension_Coupon` and the script `npc/other/inventory_expansion.txt`. (part of #2324)
- Added support for the client commands `/viewpointvalue` and `/setcamera` (like `@camerainfo`). The atcommand aliases `@setcamera` and `@viewpointvalue` are also provided. (part of #2324)
- Added `needed_status_point()` script function and the global function `F_CashReduceStat()`, for permanent status point reduction. (#2246)
- Added an option to include script interaction into the idle criteria, disabled by default. See `idletime_criteria` in `conf/map/battle/player.conf` and `BCIDLE_SCRIPT`. (#2244)

### Changed

- Extended support for 32 bit item IDs to the Zero and Main clients that support them. (part of #2324)
- Renamed packet identifier macros from `PACKET_ID_*` to `HEADER_*`. (part of #2324)
- Renamed packet struct definitions from `packet_*` to `PACKET_*`. (part of #2324)
- Increased `MAX_PACKET_LOGIN_DB` to `0x0AD0` to match the existing packets. (part of #2324)
- Added buffer size validation for `char_mmo_char_tobuf`. (part of #2324)
- Updated `npc/woe-se` files to modern standards, including `mes()` and `mesf()`. (#2261)
- Changed HPMDataCheck to exclude packetver-specific packet structs that would cause compile-time errors. (794ce3c89497a17bd64eacbc82bce22f07f00acb)

### Fixed

- Fixed `getunits()` returning the wrong value if no area size is passed. (41d370cd3308be48b4ce00a50ee46515742978b0, issue #2330)
- Fixed support for old (2010 and older) clients in packet `ZC_PROPERTY_HOMUN`. (part of #2324)
- Fixed Gaia Sword not granting any bonus drops. This reworks the way `s_add_drop` differentiates between items and groups and the parameters passed to `pc_bonus_item_drop()`. Custom code may need to be updated to match. (#2327)
- Fixed a 'Gungslinger' typo in `item_db2`. (#2335)
- Fixed delay-consumed items missing consumption after using Abracadabra/Improvised Song (#2298, issue #1169)

### Removed

- Removed unnecessary typedef from `clr_type`. The type is now only available as `enum clr_type`. (part of #2324)
",7551429
399,False,False,2018-11-21T03:57:52Z,2018-11-21T03:59:43Z,"### Fixed

- Fixed a regression in #1215 that prevented characters from being resurrected. (c34871cb3f65412db663a4793df6f055663e16fa)
",7551429
400,False,False,2018-11-19T02:15:50Z,2018-11-19T02:17:41Z,"### Added

- Added an option to prevent character renames when in a guild or a party. This is the official behavior, but disabled by default since it's unnecessary in Hercules. To enable, `char_configuration/use_aegis_rename` can be set to `true` in `char-server.conf`. (#1866, issue #1805)
- Added the script command `data_to_string()`, to return the string representation of the given data (counterpart to `getd()`). (#2304)
- Added/updated packets, encryption keys and message tables for clients up to 2018-11-14. (#2310, #2321)
- Added a configuration option for the maximum delay allowed by `@channel setopt MessageDelay` command, see `chsys/channel_opt_msg_delay` in `channels.conf`. (#2287)
- Added a configuration option for more accurate emulation of the HP display on dead characters. This setting is enabled by default, but the old, less confusing, behavior is available by setting `display_fake_hp_when_dead` to `false` in `client.conf`. (#1215, issues #889 and #840)
- Added `common/packets`, to provide a common interface to the packet DB, shared by all three servers. (#2321)
- Added proof of concept of compile time validation of packet struct definition against the packet lengths DB (currently only for `ZC_ITEM_PREVIEW`). (part of #2321)
- Added runtime client-server packet length validation in `RFIFOSKIP()` and `WFIFOSET()`. An unchecked `WFIFOSET2()` alternative is still provided, for packets that lack a db entry. (part of #2321)
- Added runtime validation for the size of `WIFOHEAD()` buffer allocations. (part of #2321)

### Changed

- Made `getunits()` stop unnecessarily iterating when the maximum specified amount of units is reached. (#2105)
- Updated the item bonus documentation, converted to the Markdown format in `doc/item_bonus.md`. (#2259)
- Improved the channel delay message to include the remaining time before a new message can be sent. (#2286)
- Removed the unused `type` argument from `getnpcid()`. All the shipped scripts have been updated. (#2289)
- Improved the `charlog` to include the stats, class, hair color and style whenever available. This affects the character selection and rename log entries, that had most fields zeroed before. (#2320)
- Updated the quest variables documentation, converted to the Markdown format in `doc/quest_variables.md`. (#2256)
- Updated the monster modes documentation, converted to the Markdown format in `doc/mob_db_mode_list.md`. (#2255)
- Documented `flag` of the `status->heal()` function through the `enum status_heal_flag`. (part of #1215)
- Added packet versions for all server types to the socket datasync validation. (part of #2321)

### Fixed

- Fixed packet `ZC_FORMATSTRING_MSG_COLOR` for clients older than 20160406. (part of #2310)
- Fixed the output formatting in the unhandled packet reporter. (part of #2310)
- Improved grammar in the `CONTRIBUTING.md` document. (#2303)
- Fixed some logically dead code in `status.c`. (#2265)
- Fixed some alerts reported by LGTM for the python scripts. (#2268)
- Fixed some typos in the `README.md` document. (#2283)
- Fixed a crash and/or mapflag inconsistency when reloading scripts, especially in PK servers. Map zones are now removed correctly during a reload. (#2247, issue #2242)
- Fixed an overflow in the defense calculation when fighting more than 22 enemies. (#1233, issue #1201)
- Fixed the gitlab-ci builds with clang-4.0, which was removed from Debian testing/unstable. (#2323)
- Fixed an issue that caused a character leaving their guild to still receive some `#ally` messages from certain allied guilds. (#2322)
- Fixed an issue that caused a character joining a guild not to join its `#ally` channel group. (part of #2322)
- Fixed a duplicated line in the `@channel` help output. (part of #2322)
- Fixed some code that assumed a character to be already on a map and attempt to leave an invalid `#map` channel when logging in. (part of #2322)

### Removed

- Removed support for the `MINICORE` libraries, which were unused but needlessly built since the new mapcache system was implemented in #1552. (#2319)
- Removed the unused `src/tool` directory. (part of #2319)
",7551429
401,False,False,2018-10-22T14:09:09Z,2018-10-22T14:15:18Z,"### Added

- Unknown packets are now printed to the console, when the option to dump them to disk (`DUMP_UNKNOWN_PACKET`) is disabled. (part of #2226)
- Added/updated packets, encryption keys and message tables for clients up to 2018-10-02 (#2226)
- Implemented the script command `removespecialeffect()`. (part of #2226)
- Implemented the atcommand `@camerainfo` and the script commands `camerainfo()` and `changecamera()`. (part of #2226)
- Added options to enforce a minimum buy/sell price for NPC items, defaulting to the official values of 1 and 0, respectively. (#2208, issue #2177)
- Added documentation for the script command `achievement_progress()`. (#2249)
- Added/updated packets, encryption keys and message tables for clients up to 2018-10-17 (#2278)
- Implemented script command `itempreview()`. (part of #2278)
- Added placeholders for 493 items from kRO. (#2280)

### Changed

- Converted the effect list documentation to Markdown (`effect_list.md`). (#2230, issue #2215)
- Improved the GitHub pull request and issue templates. (#2237)
- Allowed `getd()` to work with constants and params (although this is a discouraged practice). (#2240)
- Converted the permissions documentation to Markdown (`permissions.md`). (#2253)
- Extended `getiteminfo()` and `setitmeinfo()` with the trade restriction information (`ITEMINFO_TRADE`). The `ITR_*` constants are made available to the script engine, and the global function `F_GetTradeRestriction()` has been provided, for convenience. (#2172)
- Converted the global configuration documentation to Markdown (`global_configuration.md`). (#2229, issue #2216)
- Removed duplicated code from the `showevent()` icon validation. (#2250)
- Extended `setquestinfo()` with a mercenary class option (`QINFO_MERCENARY_CLASS`). (#2251)
- Removed duplicated/diverging code from the `@bodystyle` command. (#2264)
- Removed duplicated code for `prompt()`, now sharing the same function as `select()`. The new constants `MAX_MENU_OPTIONS` and `MAX_MENU_LENGTH` have been provided. (#2279)

### Fixed

- Fixed an assertion failure in the zeny achievement, when the amount of zeny is zero. (#2227)
- Fixed issues when setting a char or account variable of another player. (#2238, issue #2212)
- Fixed a failed assertion when a character is invited to and joins a guild. (#2235, issue #2210)
- Fixed a failed assertion when `sc_end()` is called for `SC_BERSERK`. (#2239, issue #1388)
- Fixed display issues with homunculus in old clients. (#2252)
- Fixed damage reflection (through Reflect Shield, High Orc Card, etc) to work on traps. The old, unofficial, behavior can be restored through the battle configuration flag `trap_reflect`. (#2182, issue #1926)
- Fixed Blast Mine and Claymore Trap damage, that wasn't getting split by the number of targets. (#2182, issue #1900)
- Fixed an assertion failure when refining an item fails. (#2234, issue #2217)
- Fixed the gitlab-ci builds with clang-5.0, which was removed from Debian testing/unstable. (58afe047cd)",7551429
402,False,False,2018-09-24T00:55:03Z,2018-09-24T00:58:00Z,"### Added

- Added LGTM.com code quality badges to the README. (#2202)
- Added maps and constants related to episode 17.1 to the map database and constants list. (#2203)
- Added/updated packets, encryption keys and message tables for clients up to 2018-09-19 (#2199)
- Added `-Wvla` to the compiler flags, to prevent accidental usage of variable length arrays. (#2199)
- Implemented `PACKET_CZ_MEMORIALDUNGEON_COMMAND`. (#2195)
- Extended `setquestinfo()` with support for item amount ranges. (#2218)
- Implemented the Mob Skill DB generator into the `db2sql` plugin. (#2149)

### Changed

- Changed the Travis build to use the maximum available PACKETVER, so that the recent code is tested. (#2199)
- Added a shortand to call `mes()` without arguments to mean `mes("""")`. (#2193)

### Fixed

- Added a missing `IF NOT EXISTS` clause in the `char_achievements` table creation query. (e71e41b36b)
- Fixed an issue in packet `ZC_INVENTIRY_MOVE_FAILED` (#2199, issue #2213)
- Fixed a validation error in `setquestinfo()`. (#2218)
- Fixed an error in the achievement system, when killing a cloned mob. (#2204, issue #2201)
- Fixed a trucation issue in the card columns of the database. (#2205, issue #2187)
- Fixed a crash when a character is removed from the `char` table but not from the `guild_member`. (#2209, issue #2173)
",7551429
403,False,False,2018-08-30T03:45:07Z,2018-08-30T03:48:51Z,"### Fixed
- Fixed a bug which prevented the script engine from updating params. (#2200, e554c1c9c)",7551429
404,False,False,2018-08-26T23:44:48Z,2018-08-27T00:30:33Z,"### Added
- Added the `@setzone` command, which allows changing the zone of the current map on the fly. (#2162)
- Added/updated packets, encryption keys, and message tables for clients up to 2018-08-08. (#2176)
- Added support for `sak` and `ad` clients. (#2185)
- Made the server display the client type (`main`, `RE`, `zero`, `sak`, `ad`) on startup. (#2185)
- Added const-correct wrappers for `strchr()`, `strrchr()`, `strstr()`, when building with C11-compatible compilers. (#2189)

### Changed
- Made the map zone db also reload when `@reloadscript` is used. (#2162)
- Updated the `is_function` script command to support built-in commands, local functions, and local subroutines. (#2154)
- Updated the `debugmes` script command to support printf format strings. (#2146)
- Changed the language specification to `C11` in autoconf builds. (#2189)

### Deprecated
- `script->add_str()` should no longer be used by plugins to inject variables, as `script->add_variable()` supersedes it. (#2164)

### Fixed
- Fixed the `@mapflag` command not working with the `town` mapflag. (#2133, #2162)
- Fixed some issues with the banking and roulette packets. (#2190)
- Fixed the compiler throwing a warning when `MAGIC_REFLECTION_TYPE` is set to `0`. (#1920, 2175)
- Fixed some vague item bonus documentation for `bHealPower` and `bHealPower2`. (#2125)
- Fixed some issues in the GitLab CI CentOS builds that prevented the pipelines from succeeding. (#2191)
- Reverted [v2018.07.29+1] and fixed the underlying issue, which caused some script variables to end up with an incorrect type. (#2164)
- Fixed some constants that had an invalid type, which caused undefined behaviour with `getdatatype`. (#1801, #2164)
- Fixed zeny spending achievements recording the zeny amount in negative values. (#2171)",7551429
405,False,False,2018-08-01T15:21:01Z,2018-08-01T15:23:14Z,"### Fixed
- Fixed a wrong preprocessor directive that prevented some clients from connecting. (#2165, #2166)",7551429
406,False,False,2018-07-30T16:44:05Z,2018-07-30T16:47:38Z,"### Fixed
- Added a temporary patch for getd when variable types are C_NOP. (#2163)",7551429
407,False,False,2018-07-30T01:37:54Z,2018-07-30T01:40:07Z,"### Added
- Added support for the Achievements system and the Titles system. (#2067, #2157, #2161)
- Added a stylist db option to restrict some hairstyles for the Doram race. (#2155)
- Added/updated packets, encryption keys, and message tables for clients up to 2018-07-18. (#2139, #2126, #2132)
- Added support for the overweight percentage packet for clients older than 2017-10-25. (#2139)
- Added support for the chat commands `/changedress` and `/nocosplay`. (#2139)
- Added support for the party member death notification packet for clients older than 2017-05-02. (#2139)
- Added support for body style to the stylist. (#2138)
- Added a `dead_area_size` battle config option to configure the area to which player death packets are sent. (#2088)
- Added project files for Microsoft Visual Studio 2017 (#2131)

### Changed
- Updated the warp list packet for clients older than 2017-04-19. (#2139)
- Simplified the `questinfo()` script command and added `setquestinfo()`. This may break some scripts, but is easily fixable with a regular expression search/replace. (#2107)
- The constants database will now also be reloaded when calling `@reloadscript`. (#2130)
- The maximum item ID for the item database is now `65535` for clients older than 2018-07-04, and `131072` for newer clients. It may be increased up to a maximum of `2147483648` in the future, as needed. (#2134)
- Added the missing `pos` parameter to `skill_init_unit_layout_unknown()`. (#2143)

### Deprecated
- Microsoft Visual Studio 2012 is no longer officially supported. (#2131)

### Removed
- Removed the `EF_ANGEL3` effect from the novice academy, as it is now triggered by the Achievements system. (#2156)

### Fixed
- Fixed a bug which made the `Venom Splasher` skill consume gemstones twice. (#2148)
- Fixed a bug that could make skill cooldowns never expire, rendering the skill unusable. (#2147)
- Fixed the maximum array size being higher than the maximum integer (uint32 vs int32), which could cause integer overflows in scripts. (#2093)
- Fixed a wrongly named constant, which made `Sea-Otter Card` not increase the `Sushi` heal rate. (#2117)
- Fixed misc bugs related to pet evolution. (#2136, #2153)
- Fixed a bug that sent an attendance system message without the attendence ui being opened. (#2129)
- Corrected several outdated documentation references to db/constants.conf, to point to doc/constants.md. (#2090)
- Fixed an issue in the script command `getd()` that wouldn't properly initialize the type of newly created variables through `set(getd(...), ...)` (#2158)
- Fixed a missing memory initialization in several dummy `struct block_list` entries created as local variables. (#2159)
",7551429
408,False,False,2018-07-07T18:02:16Z,2018-07-07T18:03:45Z,"### Fixed
- Fixed a regression that made it impossible to invite guild members. (#2124, issue #2122)
",7551429
409,False,False,2018-07-01T23:37:53Z,2018-07-01T23:39:13Z,"### Added
- Added/updated packets and message tables for clients from 2018-05-30 to 2018-06-12. (#2064)
- Added/updated a pair of enums (`cz_ui_types`, `zc_ui_types`) for the values used by packets 0xa68 and 0x0ae2, fixed compatibility with older clients. (part of #2064)
- Added the possibility for a plugin to abort the skill currently being cast by returning true from `skill_check_condition_castend_unknown()`. (#2076)
- Implemented Pet Evolution. This adds a new `Evolve` field to the Pet DB, and a generator script is provided, to automatically create entries from the pet evolution lua. (#2063)
- Implemented Pet Autofeeding. This adds a new `AutoFeed` field to the Pet DB, and can be completely disabled through the `enabe_pet_autofeed` flag in `feature.conf`. (#2063)
- Added the script command `setparam()`, the setter counterpart of `readparam()`, accepting an optional account id argument. (#2081)
- Updated maps database/mapcache with new maps (part of #2098)
- Added/updated packets and message tables for clients from 2018-06-20 to 2018-06-27. (#2095)
- Added new map/mapserver-change packets for the airship system. (part of #2095)
- Added new (unused) 'dns host' field in `char_send_map_info()`, compatible with clients newer than 2017-03-29. (part of #2095)
- Added an option to hide names in the script commands `unittalk()` and `npctalk()` (#1831, formerly #1571, issue #1523)

### Changed
- Updated README with more info about the development dependencies. (b57232ac29)
- Updated `instance_create()` when trying to create an already existing instance, to match the official behavior. (#1924, issue #1651)
- Removed the `RTLD_DEEPBIND` flag from the plugin-loading functions, for compatibility with asan in gcc-8. (#2079)
- Standardized the function call syntax in the script command documentation. (#2084)
- Changed the way pet eggs are handles in the inventory (they don't get deleted when hatched), for compatibility with the pet evolution system. (part of #2063)
- Extended the script command `readparam()` with the ability to receive an account id as optional argument, as an alternative to the character name. (#part of 2081)
- Updated the Private Airship map list to match the main kRO servers, and enabled the functionality on the main packetvers. (#2098)
- Updated pin code status packets for the 2018 clients. (part of #2095)
- Updated the authentication error packets in the map server to use the most recent version for the current packetver. (part of #2095)
- Updated the roulette packets for the 2018 clients. (part of #2095)
- Updated GitLab-CI builds to include more recent compilers and platforms: clang-5.0, clang-6.0, clang-7, gcc-7, gcc-8 ubuntu 18.04, MariaDB 10.1 are now tested. (part of #2111)
- Updated GitLab-CI builds to include builds with a recent Zero packetver, to ensure that recent code is compiled/tested. (part of #2111)
- Split the function `clif_disp_overhead` into two and converted its packet handling into the struct format. (part of #1831)
- Cleaned up the mapif-related code, splitting `mapif` packet processing from `inter` logic and moving the `mapif` functions to `mapif.c`. (#2108)
- Changed all the functions (where possible) to have static linking, in order to prevent incorrect symbols to be used by plugins, as a safer alternative to `RTLD_DEEPBIND`. Plugin authors are still advised to avoid naming their local symbols with the same name as non-static symbols exported by the code. (#2112)
- Prevented compilation of the non-memmgr memory management function wrappers when the memory manager is enabled. (part of #2112)

### Fixed
- Fixed a crash when entries from the `job_db` are removed. (#2071, issue #2070)
- Fixed `getunits()` to always return a value, even in case of error. (d2c0e453fc)
- Fixed an incorrect response message in the stylist shop. (#2066, issue #2065)
- Fixed an issue in the `clif_parse_OpenVending()` processing when the item list is empty. (#2072)
- Fixed various typos in code documentation/comments. (#2069)
- Fixed a field size in the character creation packet. (part of #2064)
- Added some missing fields in the `AC_ACCEPT_LOGIN` packet structure. (part of #2064)
- Fixed compilation with packetvers older than 20090805. (part of #2064)
- Fixed the `rodex_sendmail_acc()` command to correctly use the `account_id` field as stated in the documentation. (#2075, issue #2024)
- Fixed the shutdown callback calls, that weren't getting called any longer since core.c was interfaced. (#2106)
- Fixed a parsing error when the pre-increment/pre-decrement operator is used in a conditional's body without braces. (#2077, issues #705, #912, #1553, #1710)
- Fixed `SC_NOEQUIPWEAPON`/`RG_STRIPWEAPON` (Renewal only) and `SC_INCATKRATE`/`NPC_POWERUP` whose ATK increment/reduction were ineffective on monsters. (#2097)
- Fixed an error when a player's PIN code is set for the first time. (#2100, issue #2046)
- Fixed the searchstore packet for compatibility with item options. (part of #2095)
- Fixed GitLab-CI build failures caused by MySQL client versions incompatible with the updated docker images. (#2111)
- Fixed the novending map/cell flag that would cause players to get stuck. (#2091, issue #662)
- Fixed the documentation for the `queueopt()` script command. (#2086)
- Fixed documentation comments related to the `exp_group_db` (#2114, #2115)
- Fixed an issue in the travis builds when the console error output is too long. (part of #2112)
",7551429
410,False,False,2018-06-03T23:51:45Z,2018-06-03T23:54:07Z,"### Added
- Added/updated packets support for clients from 2018-05-09 to 2018-05-23. (#2043)
- Added client/version-specific `enum clif_messages` values for msgstringtable message IDs. All the related functions have been updated. (#2038)
- Added the script commands `setpcblock()` and `checkpcblock()`, to prevent various character actions - see the script command docs for details. (#842)
- Implemented the Stylist UI, available in clients starting from 2015. Configurable in `stylist_db.conf`, accessible to scripts through `openstylist()`. (#2004)

### Changed
- Extended the script command `getunits()` with support to look up units globally, making the map argument optional. (#1851)
- Updated copyright headers to year 2018. (#2054)
- Converted `exp.txt` (now `exp_group_db.conf`) to the libconfig format, now better integrated with `job_db.conf`. (#2036, originally #1944)

### Fixed
- Fixed an issue in the mob skill db parser that limited the mob skills to a maximum of 5 (#2042, issue #2044)
- Fixed some incorrect msgstringtable IDs. (part of #2038)
- Fixed inheritance in the mob DB, no longer overwriting the Range field with a default value. (#2055)
- Fixed the skill element getter for levels above `MAX_SKILL_LEVEL`. (#2059)
- Fixed interaction between the `pvp_nocalcrank` mapflag and the script/atcommands to toggle PvP. (#2057, issue #2056)

### Deprecated
- While not officially deprecated yet, use of `maprespawnguildid()` and `playbgmall()` has been superseded by `getunits()`. (part of #1851)
- Deprecated the `pcblockmove()` script command. Use the more flexible `setpcblock()` instead. (part of #842)
",7551429
411,False,False,2018-05-06T23:01:42Z,2018-05-06T23:04:06Z,"### Added
- Added a configurable PIN code blacklist, to prevent use of certain codes. (#2007 and #2029, issue #769)
- Added/updated packets support for clients from 2018-04-11 to 2018-05-02. (#2021, #2030)
- Implemented option to allow guild skill cooldowns to continue when the leader is logged out. Enabled by default and controlled by the `guild_skill_relog_delay` flag in guild.conf. (#2005, issue #1774)
- Implemented the Private Airship system, currently using the list of maps from the Zero server. (#1998)
- Added the constants `DEFAULT_MOB_JNAME` and `DEFAULT_MOB_NAME` (source only) to replace hardcoded use of `""--ja--""` and `""--en--""` respectively. (part of #2027)

### Changed
- Replaced custom messages related to the PIN code system with the official ones. (part of #2007)
- Updated the minimum client version that enables certain features: new drop packet now in `PACKETVER >= 20180418`, attendance system now in `PACKETVER_ZERO_NUM >= 20180411`. (#2020)
- Introduced a friendly error message when the `delwall()` script command fails due to a non-existent wall. (#2017)
- Refactored some code to move `MAPID_*` related code into separate functions. (#2022)
- Changed the plugins Makefile to honor the `$MYPLUGIN` variable passed through the environment, to make it easier to compile specific plugins without editing files. (#2025)
- Converted the Mob Skill DB to the libconfig format. A converter script (`mobskilldbconverter.py`) has been provided for convenience. (#2019)

### Fixed
- Fixed interaction between Curse and Blessing. When under Curse or Stone Curse, Blessing will only remove the negative statuses and will need to be cast again to obtain the buff. (#1706, issue #680)
- Added support for `time_t` as return type in the HPMHookGen. (bb0e228bd29dd689ca76f64578de8759415a763b)
- Fixed some possible buffer overflows. (#2028)
- Fixed the return value of `BUILDIN(getunitdata)`. (d6785d389cbee4f34078f6762626ca61b2d6cc25)
- Improved support for clients version 2018-02-07 and Zero 2018-01-31. (part of #2030)
- Fixed the clan names in some clan-related NPC dialogs. (#2032)
- Fixed the display name of monster summoned through the `SA_SUMMONMONSTER` skill. (#2027)

### Removed
- Removed all the code related to the anonymous-stat-reporting system. (#2023)

",7551429
412,False,False,2018-04-08T23:36:27Z,2018-04-08T23:39:26Z,"### Added
- Added/updated packets support for clients from 2018-03-14 to 2018-04-04. (#1994 and #2014)
- Introduced macros `PACKETVER_RE_NUM`, `PACKETVER_ZERO_NUM` and `PACKETVER_MAIN_NUM` to simplify client type-specific version checks.
  These macros are defined to `PACKETVER` only if, respectively, `PACKETVER_RE`, `PACKETVER_ZERO` or neither are defined. (part of #1994)
- Implemented Hat Effects, available in clients starting from 2015-04-22. (#1965)
  - The `hateffect()` script command has been implemented.
  - The related constants (with prefix `HAT_EF_*`) have been added and made available to the script engine.
- Added the 2015 variant of the quest-related packets. (#1111)
- Added login date information for guild members, on clients starting from 2016-10-26. The message format can be customized on the client side, by editing line 3012 of msgstringtable.txt. (#1986)
- Added support for the `ZC_FORMATSTRING_MSG` and `ZC_MSG_COLOR` packets, handling msgstringtable messages. (#2012)
- Added a setting (`storage_use_item` in `items.conf`) to control the use of items (usable/consumable/boxes) when the storage is open. (#1868, issue #1806)
- Implemented the Attendance System, requiring client 2018-03-07bRagexeRE or newer. Configuration is available in `feature.conf` and `db/attendance_db.conf`. (#1990)
- Added a configurable delay to the MVP Tombstone. The delay can be configured through the `mvp_tomb_spawn_delay` setting in `monster.conf`. (#2001, issue #1980)

### Changed
- Updated the functions handling quest-related packets to use the struct-based form. (part of #1111)
- Converted the Pet DB to the libconfig format. A converter script (`petdbconverter.py) has been provided for convenience. (#2000)
- The `noteleport` mapflag has been added to the Archer Village (`pay_arche`), to match official servers. (part of #2006)
- The `script->sprintf()` function has been renamed to `script->sprintf_helper()`. (part of #2009)

### Fixed
- Removed a duplicated line in the login server VS project that would prevent Visual Studio from loading it. (#1992)
- Prevented a console warning when a nonexistent map is passed to the `getmapinfo()` script command. (584e8de35)
- Fixed a RODEX loading data problem when a message's expiration date was manually edited. (#1995)
- Corrected the error messages displayed when using various restricted items to match the official servers. (#2006)
- Added a missing status refresh for the Homunculus Autofeed system when changing maps. (#2002)
- Fixed a NULL pointer check failure when `TK_JUMPKICK` is used by a non-player. (#2015, issue #1875)
- Fixed compilation of the HPMHooking plugin on systems where `sprintf()` is a macro. (#2009, issue #2003)
",7551429
413,False,False,2018-03-12T01:45:31Z,2018-03-12T01:48:02Z,"### Added
- Added a new `mapcache` plugin to convert, update or recreate mapcache files in the new format. (part of #1552)
- Added appveyor configuration to the repository. (part of #1552)
- Exposed `script->sprintf()` to plugins. (#1976)
- Added/updated packets support for clients from 2018-02-21 to 2018-03-09. (#1983)

### Changed
- Updated the mapcache to a new, git-friendly, format having one file per map. (#1552, #1981)
  - For info on how to convert or recreate mapcache entries, see the mapcache plugin (`./map-server --load-plugin mapcache --help`)
- Removed the display of PIN codes and passwords from the `@accinfo` GM command. Old code is kept commented out for those that may wish to re-enable it. (#1975)
- Updated README.md with some clarifications and corrections. (#1985)

### Fixed
- Updated the VS project files with the recently added .h files, for better intellisense/search. (#1970)
- Fixed a NULL pointer in `login->accounts`, only affecting plugins. (part of #1979)
- Fixed a case of use after free in the `@reloadatcommand` GM command. (part of #1979)
- Added several missing checks in various `clif_parse_*` functions. (part of #1979)
- Fixed various PIN code related exploits. (part of #1979)
- Fixed a case of use after free when the option `delay_battle_damage` is set to false. (part of #1979)
- Fixed a segmentation fault in clan-related code when using the `db2sql` plugin. (#1989, issue #1984)
- Fixed an incorrect behavior in RODEX returned messages. (part of #1987)
- Fixed an error that made RODEX mails impossible to delete in some cases. (part of #1987)
- Fixed a NULL pointer in RODEX when the user tried to perform actions on unloaded mails. (part of #1987, issue #1977)
- Fixed an incorrect interaction between RODEX and NPCs. (#1936)
- Fixed an incorrect Kafra Points / Cash Points calculation. (#1541, issue #1540)

### Removed
- Removed the old `mapcache` executable, superseded by the new plugin. (part of #1552)
",7551429
414,False,False,2018-02-13T01:25:18Z,2018-02-13T01:27:35Z,"### Fixed
- Fixed a possible crash in `@cvcon` (and possibly other functions) when a referenced map zone doesn't exist. (#1972, issue #1971)
- Fixed the messages displayed when enabling or disabling CvC. (part of #1972)
- Extended the `bg_message` string termination fix to all the clients. (#1973)
",7551429
415,False,False,2018-02-11T19:55:28Z,2018-02-11T19:59:14Z,"### Added
- Added/updated packets support for clients from 2017-12-13 to 2018-01-24. (part of #1957)
- Implemented the official Clan System, including the possibility of customization and a Clan vs Clan versus mode. (#1718, #1964, #1968, related to issue #241)
  - New GM commands: `@claninfo`, `@joinclan`, `@leaveclan`, `@reloadclans`, `@cvcon` and `@cvcoff`.
  - New script commands: `clan_join()`, `clan_leave()` and `clan_master()`; extended `strcharinfo()` and `getcharid()`.
  - Configuration changes: see `conf/clans.conf`, `conf/map/logs.conf`, `db/clans.conf`, `db/*/map_zone_db.conf`.
  - Note: This requires the SQL migrations `2017-06-04--15-04.sql` and `2017-06-04--15-05.sql`.
  - Note: The `npc/re/other/clans.txt` script is now loaded by default in renewal mode.
- Added several (status-icon related) constants to the script engine (through the new `constants.inc` file). (part of #1718)
- Implemented the missing HPM interfaces in the login server (account, ipban, lchrif), added the missing variables into the login interfaces. (#1963, issue #1908)
  - The `_sql` suffix has been removed from the source files in the login server.
  - Functions in `account.c` and `loginlog.c` have been prefixed with `account_` and `loginlog_` respectively.
  - The `chrif_` functions of the login server have been renamed to `lchrif_`.
  - The `server[]` array has been moved to `login->dbs->server[]`.
  - The `account` (account.h), `ipban` (ipban.h), `lchrif` (login.h), `loginlog` (loginlog.h)
  - Several `log_*` global variables have been moved to the loginlog interface, with their respective names.
  - The `account_engine[0]` variable has been moved to `login->dbs->account_engine` (note: this is not an array!)
- Added/updated packets support for clients from 2018-01-31 to 2018-02-07. (#1969)

### Changed
- Applied script standardization to the Bakonawa Lake instance script. (#1874)
- Applied script standardization to the Buwaya Cave instance script. (#1877)
- Applied script standardization to the Eclage Interior instance script. (#1878)
- Applied script standardization to the Hazy Forest instance script. (#1880)
- Applied script standardization to the Malangdo Culvert instance script. (#1881)

### Fixed
- Fixed compatibility issues with the 2013-12-23 client. (part of #1957, issue #1956)
- Prevented the leak of a hidden GM's presence through area packets. (#1200)
- Fixed an unterminated string in the `bg_message()` related packets, with certain client versions. (#1890)
",7551429
416,False,False,2018-01-15T00:43:50Z,2018-01-15T00:46:37Z,"### Added
- Added support for the `AllowReproduce` flag in the skill DB. This supersedes the skill_reproduce_db. (#1943)
- Added support for the `ZC_PROGRESS_ACTOR` packet. The packet is exposed to the script engine through the `progressbar_unit()` command (available on PACKETVER 20130821 and newer). (#1929)
- Added support for the new item drop packet for the Zero clients. The packet is controlled by the `ShowDropEffect` and `DropEffectMode` item DB flags and ignored by non-Zero clients. (#1939)
- Added support for the new Map Server Change packet 0x0ac7. (part of #1948)

### Changed
- Always enabled assertions and null pointer checks. In order to disable them (very discouraged, as it may lead to security issues), it is now necessary to edit `nullpo.h`. (#1937)
- Disabled the address sanitizer's memory leak detector in the travis builds, since it produced failures in third libraries. (#1949, #1952)
- Applied script standardization to the Nydhogg's Nest instance script. (#1871)
- Split packet_keys.h into separate files for main clients and zero clients. (part of #1948)
- Split packets_shuffle.h into separate files for main clients and zero clients. (part of #1948)
- Replaced the custom bank unavailable error message with the actual bank check error packet. (part of #1948)
- Updated and corrected the party member and party info packets. (part of #1948)
- Updated README.md with more relevant badges and links (added Discord, removed Waffle, added more GitHub information). (#1951)

### Fixed
- Updated Xcode project to include the RODEX related files. (#1942)
- Fixed RODEX loading mails when it requires multiple packets. (#1945, issue #1933)

### Removed
- Removed the skill_reproduce_db, now superseded by the `AllowReproduce` skill flag. (part of #1943)
",7551429
417,False,False,2017-12-17T23:39:41Z,2017-12-17T23:41:52Z,"### Added
- Implemented Homunculus Autofeeding, available on the 2017 clients. The feature can be disabled by flipping `features.enable_homun_autofeed` in feature.conf. (#1898)
- Added support for the newly released Ragnarok Zero clients. The client type is controlled with the `--enable-packetver-zero` configure-time flag (disabled by default). (#1923)

### Changed
- Applied script standardization to the Old Glast Heim instance script. (#1883)
- Split packets.h into two files: packets.h and packets_shuffle.h. (part of #1923)

### Fixed
- Corrected a wrong path displayed in an error message pointing to the map-server configuration. (#1913)
- Fixed the natural expiration of the Poison status when under the effect of Slow Poison. (#1925)",7551429
418,False,False,2017-11-28T14:34:41Z,2017-11-28T14:54:08Z,"### Fixed
- Fixed an item loading failure in RODEX. (#1917, issue #1912)
- Fixed invisible NPCs (such as `FAKE_NPC`) being displayed as novices. (#1918, issue #1916)",7551429
419,False,False,2017-11-24T19:18:32Z,2017-11-24T19:21:54Z,"### Fixed
- Suppressed assertions in the Skill DB accessors when called with `skill_id = 0` (normal attacks). (#1910, issue #1909)

[v2017.11.19-1]: https://github.com/HerculesWS/Hercules/compare/v2017.11.19...v2017.11.19-1
",7551429
420,False,False,2017-11-19T19:37:50Z,2017-11-19T20:09:29Z,"### Added
- Added several missing members to the login interface. (Part of #1891)
- Added support for colored character server population counter in the service selection list. Configurable through `users_count` in login-server.conf. (#1891)
- Added top-level command `miniboss_monster` to label monsters as minibosses, and to send them as such to the client. (part of #1889)
- Added support for 2017-10-25 - 2017-11-01 clients. (#1889)
- Added support to display NPCs with player classes, including equipment and styles (best with clients starting from 20170726). This extends `getunitdata()` and `setunitdata()` with support for `UDT_SEX`, `UDT_HAIRSTYLE`, `UDT_HAIRCOLOR`, `UDT_HEADBOTTOM`, `UDT_HEADMIDDLE`, `UDT_HEADTOP`, `UDT_CLOTHCOLOR`, `UDT_SHIELD`, `UDT_WEAPON`, `UDT_ROBE`, `UDT_BODY2`. (#1893)
- Added type constants for the `getiteminfo()` and `setiteminfo()` script commands. Existing third party code must be updated to use the new constants (see the pull request description and the command documentation for details). (#1902)
- Added global function `F_GetAmmoType()`, counterpart to `F_GetWeaponType()` for ammunitions. Both functions have now been updated to only check the subtype if the item type is correct (`IT_AMMO` and `IT_WEAPON` respectively). (part of #1902)
- Added support for the Skill Scale packet, available in client versions 20151223 and newer. (#1903)

### Changed
- Applied script standardization to the Octopus Cave instance script. (#1882)
- Applied script standardization to the Ghost Palace instance script. (#1879)
- Applied script standardization to the Sara's Memory instance script. (#1884)
- Extended the script command `setequipoption()` with the possibility to remove item options from an equipment piece. (#1865)
- Updated the `QTYPE_*` constants (`questinfo()`, `showevent()`) to support the new 2017 client icons. (#1894)
- Applied script standardization to the Orc's Memory instance script. (#1872)
- Applied script standardization to the Sealed Shrine instance script. (#1873)
- Extended the global function `F_GetArmorType()` to support costumes and shadow equipment. (#1836)
- Extended the script commands `has_instance()` and `has_instance2()` with suport to search instances of type `IOT_NONE`. (#1397)
- Applied script standardization and improvements to the Endless Tower instance script. (#1862)
- Cleared some confusion between skill IDs and indexes through the codebase. Rewritten Skill DB accessors in a safer, more readable way. (part of #1896)

### Deprecated
- The use of numeric type constants with `getiteminfo()` and `setiteminfo()` is deprecated. For technical reasons, no deprecation notice is displayed. (part of #1902)

### Removed
- The `MAX_SKILL` constant has been removed, in favor of the more clear `MAX_SKILL_DB`, to be used in all places that use the compacted Skill DB array. For use with the non-compacted clientside Skill IDs, the `MAX_SKILL_ID` constant is still available. (part of #1896)

### Fixed
- Fixed compilation warnings when compiling with gcc-7. (#1887)
- Fixed the display flag for monsters labeled as `boss_monster` to be that of MVP monsters instead of miniboss monsters. (part of #1889)
- Fixed a subtle error in case `skill->unit_group_newid` overflows, causing certain skill unit entries to get stuck and never get deleted correctly. This can manifest itself with some monster spawns becoming immune to certain AoE spells having the `UF_NOOVERLAP` flag (Storm Gust, Lord of Vermillion, etc). (#1896)
- Implemented MATK support in the `getiteminfo()` and `setiteminfo()`. This functionality was previously advertised as availble in the command documentation, but was not implemented. (part of #1902)
- Restored View Sprite support in the `getiteminfo()` and `setiteminfo()`. This functionality was lost with #1828. (part of #1902, issue #1895)
- Reimplemented the global function `F_GetArmorType()` to reflect the fact that  `ITEMINFO_LOC` returns a bitmask. The function now handles multi-slot headgears and other uncommon cases better. (part of #1902)
- Corrected some incorrect data types passed to the SQL `StmtBind` functions, causing query errors and data loss. Said functions will now have a runtime assertion to ensure the right data type is passed. Third party code needs to be updated to reflect this stricter requirement. (#1901, issue #1531)
- Corrected some RODEX related queries in case `MAX_SLOTS` or `MAX_ITEM_OPTIONS` are set to custom values. (part of #1901)
",7551429
421,False,False,2017-10-22T16:21:20Z,2017-10-22T16:25:39Z,"### Fixed
- Fixed a wrong null pointer check in `logmes()`, which caused the command to never log and instead print debug information.",7551429
422,False,False,2017-10-22T02:27:22Z,2017-10-22T02:32:38Z,"### Added
- Added the script command `getmapinfo()`, which allows to obtain misc information about a map. (#1852)
- Added an option to restrict party leader changes to characters on the same map. Controlled by the setting `party_change_leader_same_map` (defaults to true). (#1812)
- Added initial support (shuffle packets, obfuscation keys) for clients 2017-09-27, 2017-10-02, 2017-10-11, 2017-10-18. (#1859)
- Added the `noautoloot` mapflag, allowing to disable the `@autoloot` functionality on a map by map basis. (#1833)

### Changed
- Extended the script command `logmes()` with an option to log to the `atcommandlog` table. (#1843)
- Updated RoDEX, with support for packetver `20170419` and newer. (#1859)
- Updated Exp-related packets and handling functions to support values larger than 2 billions (as seen in packetver `20170830` and newer). (#1859)
- Changed the diagnostic message in `skill_init_unit_layout()` to report the skill ID instead of its index. (#1854)

### Fixed
- Corrected the Kafra dialog in case a Doram without the Summoner's Basic Skill attempts to open the Storage. (#1864)
- Changed the cell stack counting algorithm to ignore invisible NPCs, improving the Dancer Quest experience as well as other cases of hidden NPCs blocking off certain cells. (#1827)
- Improved the handling of the `cardfix` value to make it more resistant to overflows, especially in renewal mode. Simplified the related renewal/pre-renewal conditional code. (#1825)
- Fixed some compilation warnings occurring in VS2017. (#1870)

### Other
- New versioning scheme and project changelogs/release notes (#1853)",7551429
423,False,False,2020-02-13T23:30:06Z,2020-02-13T23:47:26Z,"## Version 1.6.12

### New features and APIs
* Added Bearer token support using Splunk Token in v7.3
* Made modinput text consistent

### Bug fixes
* Changed permissions from 755 to 644 for python files to pass appinspect checks
* Removed version check on ssl verify toggle",1504670
424,False,False,2019-10-08T20:07:14Z,2019-10-08T20:08:50Z,"## Version 1.6.11

### Bug Fix

* Fix custom search command V2 failures on Windows for Python3 
",1504670
425,False,False,2019-10-02T17:51:25Z,2019-10-02T18:31:59Z,"## Version 1.6.10

### Bug Fix

* Fix long type gets wrong values on windows for python 2 

",1504670
426,False,False,2019-09-21T00:06:54Z,2019-09-21T00:09:10Z,"## Version 1.6.9

### Bug Fix

* Fix buffered input in python 3 
",1504670
427,False,False,2019-09-16T18:05:52Z,2019-09-16T19:22:55Z,"## Version 1.6.8

### Bug Fix

* Fix custom search command on python 3 on windows 
",1504670
428,False,False,2019-09-12T17:22:20Z,2019-09-12T17:29:04Z,"## Version 1.6.7

### Changes

* Updated the Splunk SDK for Python to work with the Python 3 version of Splunk Enterprise on Windows
* Improved the performance of deleting/updating an input
* Added logging to custom search commands app to showcase how to do logging in custom search commands by using the Splunk SDK for Python
",1504670
429,False,False,2018-12-05T22:37:15Z,2018-12-05T22:40:09Z,"### Bug fixes

* Fix ssl verify to require certs when true

### Minor changes

* Make the explorer example compatible w/ Python 3
* Add full support for unicode in SearchCommands
* Add return code for invalid_args block",1504670
430,False,False,2017-11-03T01:07:37Z,2017-11-03T01:10:42Z,"Release 2.1.0

Implemented Angular 2+ SDK
Implemented ReactJS SDK
Implemented NGRX / ORM
Implemented FireLoop SDK For Angular

Thanks a lot to all the contributors for making this possible, special tanks goes to @JonnyBGod and @kattsushi for React and NgRX Implementations.",60712558
431,False,True,2017-01-06T23:16:11Z,2017-01-06T23:16:34Z,"- Milestone Details: https://github.com/mean-expert-official/loopback-sdk-builder/milestone/30?closed=1
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/297
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/296
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/295
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/292
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/290
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/288
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/285
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/284
",60712558
432,False,True,2016-12-22T17:13:43Z,2017-01-02T17:29:15Z,,60712558
433,False,True,2016-12-21T00:40:41Z,2016-12-22T16:35:33Z,,60712558
434,False,True,2016-12-20T13:42:11Z,2016-12-21T00:37:15Z,"- Milestone Details: https://github.com/mean-expert-official/loopback-sdk-builder/milestone/27?closed=1
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/257
",60712558
435,False,True,2016-12-01T19:19:33Z,2016-12-02T15:40:59Z,,60712558
436,False,True,2016-12-01T17:08:40Z,2016-12-01T19:01:42Z,,60712558
437,False,True,2016-10-18T21:20:24Z,2016-10-19T15:57:45Z,"- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/157
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/155
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/154
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/153
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/152
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/151
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/148
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/147
",60712558
438,False,True,2016-10-18T14:20:11Z,2016-10-18T19:05:51Z,"- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/142
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/143
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/144
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/145
",60712558
439,False,True,2016-10-05T17:25:16Z,2016-10-05T21:00:50Z,,60712558
440,False,True,2016-10-03T18:11:29Z,2016-10-03T19:01:00Z,"- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/137
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/136
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/135
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/134
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/125
",60712558
441,False,True,2016-09-30T21:41:47Z,2016-09-30T21:42:41Z,"- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/131
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/130
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/129
",60712558
442,False,True,2016-09-30T16:53:25Z,2016-09-30T17:39:57Z,"- Hot Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/128
",60712558
443,False,True,2016-09-30T16:44:05Z,2016-09-30T16:49:52Z,"- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/127
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/124
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/122
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/112
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/31
",60712558
444,False,False,2016-09-08T17:22:44Z,2016-09-19T22:23:11Z,"- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/114
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/88
",60712558
445,False,False,2016-09-06T14:46:36Z,2016-09-06T15:41:26Z,,60712558
446,False,False,2016-09-05T15:01:20Z,2016-09-06T14:46:49Z,,60712558
447,False,False,2016-09-03T15:37:15Z,2016-09-05T14:43:44Z,,60712558
448,False,False,2016-08-26T20:42:54Z,2016-08-26T20:45:09Z,"Implemented EventSource Support for ChangeStreams
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/84
",60712558
449,False,False,2016-08-26T17:26:54Z,2016-08-26T17:30:16Z,"- Fixed Lint issues
- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/99
",60712558
450,False,False,2016-08-23T22:38:32Z,2016-08-23T22:39:22Z,"- Fix: https://github.com/mean-expert-official/loopback-sdk-builder/issues/96
",60712558
451,False,False,2016-08-22T18:24:37Z,2016-08-22T18:30:57Z,"[LINK TO WIKI DOCUMENTATION](https://github.com/mean-expert-official/loopback-sdk-builder/wiki)
- Support for Angular 2 (Final API w/ NgModules & Backwards compatibility < RC5).
- Support for TypeScript (Fully Typed).
- Built in Interfaces and Models.
- Extendable Models for custom logic.
- Enables Support for Real-Time Applications [loopback-component-pubsub](https://www.npmjs.com/package/loopback-component-pubsub)
- Built in LoopBack Authentication.
- Built in Support for LoopBack Query Language [Querying Data](https://docs.strongloop.com/display/public/LB/Querying+data)
- Built in API Servics.
- Built in Platform Specific Drivers (Angular2 for web, NativeScript2, ~~Angular Universal~~).
- Built in CLI Tool for builder.
- Built in Logger Service.
- Blacklist mechanism to select which models or methods generate.
- Ability to point models to different url domains (not global baseUrl)
- IO Heartbeating to avoid disconnections.
- Small foot print 100k per generated SDK (Will increase depending on number of models).
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/92
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/91
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/87
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/86
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/45
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/38
",60712558
452,False,True,2016-08-17T22:24:50Z,2016-08-17T22:26:01Z,"- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/90
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/89
",60712558
453,False,True,2016-08-17T14:37:42Z,2016-08-17T14:47:23Z,"- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/88
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/87
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/85
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/83
",60712558
454,False,True,2016-08-08T18:17:07Z,2016-08-08T18:18:52Z,"- Hot Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/82
",60712558
455,False,True,2016-08-06T16:30:58Z,2016-08-06T16:58:08Z,"- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/81
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/80
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/79
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/78
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/77
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/76
",60712558
456,False,True,2016-08-02T21:00:51Z,2016-08-02T22:19:28Z,"- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/74
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/73
",60712558
457,False,True,2016-08-02T17:35:28Z,2016-08-02T17:38:14Z,"- Enhance: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/72
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/71
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/70
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/69
- Enhance: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/59
- Enhance: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/57
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/51
",60712558
458,False,True,2016-07-30T18:34:13Z,2016-07-30T18:37:09Z,"- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/68
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/67
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/66
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/63
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/62
- Enhance: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/60
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/58
",60712558
459,False,True,2016-07-26T21:29:54Z,2016-07-26T21:31:05Z,"- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/50
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/52
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/53
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/54
- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/55
- Added new unit tests for custom get and post remote methods
",60712558
460,False,True,2016-07-25T21:47:30Z,2016-07-25T21:48:11Z,"- Fix: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/49
- Fix Private Models not being exposed: https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/47
",60712558
461,False,True,2016-07-21T17:23:47Z,2016-07-21T17:24:31Z,"- HOT FIX: binary reference
",60712558
462,False,True,2016-07-21T17:10:20Z,2016-07-21T17:23:28Z,"- Implemented enhancement https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/44
- Fixed bug https://github.com/jonathan-casarrubias/loopback-sdk-builder/issues/43
",60712558
463,False,True,2016-07-16T18:19:02Z,2016-07-16T19:22:49Z,"- Refactor SDK Structure (Internal Breaking Change - External istransparent)
- First refactor draft for generator logic
- Fixed bug #41
- Fixed bug #42
- Upgrade Angular 2 test app to RC4
",60712558
464,False,False,2020-02-21T19:59:59Z,2020-02-21T20:02:19Z,"Improvements
------------

- InternedString : Added `__len__` python binding (#1041).
- IECoreMaya LiveScene : Added `toMayaAttributeName()`, `fromMayaAttributeName()`, and `visibilityOverrideName` (#1041).

Fixes
-----

- IECoreMaya SceneShape (#1041) :
  - Fixed bug which had been causing Maya shape visibility to affect LiveScene location visibility.
  - Fixed radial DAG menu positions for the Swap Expand options.
",10654465
465,False,False,2020-02-21T15:51:32Z,2020-02-21T15:52:29Z,"Features
--------

- StringAlgo : Added string substitution functionality (#1039).

Improvements
------------

- InternedString : Added constructor taking a `boost::string_view` (#1039).
- CompoundData : Added default template type for `member()` methods (#1039).
",10654465
466,False,False,2020-02-10T21:51:39Z,2020-02-10T21:54:36Z,"Improvements
------------

- IECoreUSD : Updated USDScene to perform naive loading of USD instances (#1036).
- IECoreHoudini : Houdini 18 compatibility (#1035).

Fixes
-----

- IECoreScene ShaderNetworkAlgo : Adapt `convertOSLComponentConnections()` for OSL 1.10 (#1031).
- IECoreMaya :
  - SceneShape VP2 : Fixed marquee selection for component locations (#1038).
  - SceneShapeInterface : Fixed bugs in `selectionIndex()` and `glGroup()` and removed `buildComponentIndexMap()` (#1038).
- IECoreNuke SceneCacheReader : Fixed selection issues for Scene View knob when using motion blur (#1037).",10654465
467,False,False,2020-01-30T20:43:30Z,2020-01-30T20:45:53Z,"Fixes
-----

- IECore::Enum : Fixed comparison of different Enum types (#1032).
  We're now closer to matching Python 3 `enum.Enum` behaviour.
- IECoreMaya::ToMayaMeshConverter : Fixed a bug converting indexed normals (#1033).
",10654465
468,False,False,2020-01-29T00:24:40Z,2020-01-29T00:29:22Z,"Improvements
------------

- IECore :
  - Refactored `Enum`, `MenuDefinition`, `MenuItemDefinition` to new style Python classes (#1012).
  - MenuDefinition : Added `size`, `item` and `update` methods (#1012, #1013).
  - Canceller : Added `cancelled` method (#1019).
- IECoreImage : Added OIIO 2 support (#1011).
- IECoreMaya :
  - FnSceneShape : Added ability to promote scene attributes so they can be overriden in Maya (#1029).
  - Added `UndoFlush` and updated other Context Managers to be used as decorators (#1029).
- IECoreAlembic : Added support for the `width` primitive variable when reading curves and points (#1017).
- IECoreUSD : Added support for the `UsdGeomSphere` primitive (#1023).

Fixes
-----

- IECoreAppleseed :
  - Added support for Appleseed 2.1 (#1011).
  - Added numerous stability enhancements (#1011).
- IECoreMaya :
  - SceneShape VP2 :
    - Fixed disappearing geometry in Flat Shaded mode (#1016).
    - Fixed partial evaluation of invisible SceneShapes. This is particularly relvant for animation rigs driven by SceneShape output plugs (#1018).
    - Fixed internal memory consumption. We now use `IECORE_MAYA_VP2_MEMORY` to track all VP2 related caching (#1018, #1021).
    - Fixed several draw errors for expanded shapes, including extra geometry, doubling transformations, and incorrect root bounds (#1024).
    - Fixed single component selection for expanded shapes, recently collapsed shapes, and scenes with link locations (ie. instances). Note marquee selection is not yet supported (#1026).
    - Fixed crash when switching from VP2 back to VP1 (#1026).
  - SceneShape UX :
    - Changed radial DAG menu to use `IECoreMaya.Menu` rather than a native Maya menu (#1013).
    - Fixed a bug in `FnSceneShape.selectComponentNames()` which broke the radial DAG menu (#1029).
    - Fixed a bug that prevented a SceneShape from correctly expanding by tag (#1029).
    - Fixed crashes when undoing FnSceneShape operations (#1029).
  - LiveScene : Fixed a bug in `hasAttribute()` related to `ieAttr_` attributes (#1029).
  - FromMayaEnumPlugConverter : Fixed RunTimeTyped registration (#1030).
- IECoreHoudini :
  - Improved error reporting for the SceneCache ROP when exporting mixed curves and free points (#1025).
  - Fixed ieMeshInterpolation conversion for mixed poly/subdiv SOPs (#1028).

Breaking Changes
----------------

- IECoreMaya::SceneShapeUI : Changed signature for callbacks registered via `addDagMenuCallback` to take an `IECore.MenuDefinition` rather than a Maya Menu (#1013).

Build
-----

- cmake : General improvements (#1022).
",10654465
469,False,False,2020-01-02T19:50:01Z,2020-01-02T19:53:01Z,"Fixes
-----

- IECoreMaya : Maya 2019 Compatibility (#1007)
- IECoreMaya : FnSceneShape: Fixed shape drawing on expansion (#1010).

Breaking Changes
----------------

- IECoreMaya (#1007):
  - Removed several (but not all) VP1 codepaths.
  - Removed Box3Manipulator, TransformationMatrixManipulator, & ViewportPostProcessCallback.

Build
-----

- CXX : Added `-D_GLIBCXX_USE_CXX11_ABI=0` when building with GCC 5.1+ (#1014).
- Azure : Fixed Windows CI (#1015).
",10654465
470,False,False,2019-12-13T00:10:22Z,2019-12-13T00:10:56Z,"Fixes
-----

- IECoreScene::PrimitiveAlgoUtils : Fixed GeoemtricData bug in AverageValueFromVector (#1003).
- IECoreMaya::FnSceneShape : Fixed intermediateObject bug with `recursiveExpandAsGeometry()` (#1004).
- IECoreHoudini::FromHoudiniPolygonConverter : Fixed crash with corrupt ieMeshInterpolation attribs (#1006).

Build
-----

- IECoreImage : Workaround env issue when building for certain DCCs (eg Houdini 17.5) (#1005).
",10654465
471,False,False,2019-11-15T18:14:43Z,2019-11-15T18:15:37Z,"Improvements
------------

- `IECoreScene::MeshAlgo` : Added `calculateNormals()` and deprecated `MeshNormalsOp` (#1002).
",10654465
472,False,False,2019-11-08T18:18:22Z,2019-11-08T18:18:55Z,"Fixes
-----

- IECoreMaya SceneShape : Fixed shape evaluation / dirty issue on file load (#1001).

Build
-----

- Run Linux, MacOS, and Windows CI on Azure (#1000).
- Publish MacOS and Linux builds of Cortex via Azure (#1000).
",10654465
473,False,False,2019-10-22T21:30:36Z,2019-10-22T21:35:20Z,"Fixes
-----

- CurvesAlgo : Fixed `updateEndpointMultiplicity()` for bSpline and catmullRom curves (#997).
- IECoreArnold : Automatically resample Vertex primvars to Varying on cubic Curves (#998).
",10654465
474,False,False,2019-10-15T18:43:07Z,2019-10-15T18:44:01Z,"Fixes
-----

- IECoreNuke : Fixed uv coordinate conversion (#999).
",10654465
475,False,False,2019-09-18T23:57:08Z,2019-09-18T23:58:23Z,"Fixes
-----

- IECoreScene : Ensure ShaderNetwork connections are loaded from scc caches (#992).
- IECoreHoudini : Fixed LiveScene PrimGroup to Tag conversion in H17.5 (#993).",10654465
476,False,False,2019-09-03T23:33:12Z,2019-09-03T23:34:18Z,"Improvements
------------

- IECoreMaya : Added `dagPath()` to `LiveScene` (#991).

Fixes
-----

- IECoreMaya : Fixed bug which enforced a particular rotation order when exporting tranformations (#984).

Build
-----

- SConstruct : Fixed Mac builds (#990).
",10654465
477,False,False,2019-08-27T11:48:51Z,2019-08-27T11:50:27Z,"Improvements
------------

- IECoreMaya : Added ""Expand by Tag as Geo..."" item to radial menu (#989).
- ToGLStateConverter : Added support for ""gl:depthTest"" attribute (#985).

Fixes
-----

- Fixed errors when building with the Clang version packaged with XCode 10.2 (#986).",10654465
478,False,False,2019-08-12T19:11:05Z,2019-08-12T19:14:01Z,"This is the first official release with Windows support. Big thanks to Eric Mehl and Alex Fuller
for their hard work getting the codebase ready for Windows.

Improvements
------------

- IECoreHoudini
  - SceneCache ROP, LiveScene, and DetailSplitter now respect Output SOPs with a fallback to the previous behaviour (SOP render flag) (#978).
  - SceneCache OBJs and SOP now provide a visibilityFilter which can be used to prune invisible shapes. Animated visibility is supported, as is inherited visibility (provided the scene hasn't been re-rooted or merged into another context). It defaults off for backwards compatibility (#982).

Build
-----

> **Warning** : The default paths for the build options have been removed.
> You will need to specify them on the commandline or via a config file.

- SConstruct now supports Windows (#937).
- Appveyor testing ensures consistent CI on Windows (#937).
",10654465
479,False,False,2019-08-07T00:19:31Z,2019-08-07T00:22:39Z,"Improvements
------------

- ShaderNetwork : Added attribute substitution methods (#971).
- IEDisplay : Added support for PRMan's incremental mode (#973).
- ROP_SceneCacheWriter: Added support for relative node path for rootObject parameter (#976)",10654465
480,False,False,2019-07-24T21:56:55Z,2019-07-24T21:58:22Z,"Improvements
------------

IECoreNuke :
  - Added support for nuke icon, using new icon for nuke menu (#967).

Fixes
-----

- DataAlgo : Fixed `const` form of `dispatch()` (#970).


Build
-----

- Declared Scene test dependency on IECore module (#968).",10654465
481,False,False,2019-07-26T17:52:32Z,2019-07-18T09:45:54Z,"Improvements
------------

- IECoreHoudini::SOP_SceneCacheSource : Added support for visibility culling (#963).
- IECoreImage::ImageReader : Added support for reading specific mip-map levels (#961).
- IECoreGL::TextureLoader : Added `maximumResolution` argument to `load()` (#961).
- IECoreGL::ShaderStateComponent : Added support for specifying maximum resolution
  for texture parameters (#961).
- IECoreAppleseed::EntityPtr : Added smart pointer for handling entities (#903).
- ExceptionBinding (#962) : Added ExceptionClass binding utility. This allows bind C++
  exceptions to be bound to Python more fully, so that :
    - They can be constructed and raised from Python.
    - Type is preserved when translating them into Python, and again when
      translating them back outinto C++.

Build
-----

- Fixed problem with undeclared dependency which could cause the IECoreAppleseed tests
  to fail (#964).",10654465
482,False,False,2019-06-19T22:44:47Z,2019-06-19T22:46:05Z,"Improvements
------------

- IECoreHoudini :
  - Support for Houdini 17.5 (#958).
  - Enable symbol visibility management (#957).
  - IE Config : Remove Op wrapppers from the Houdini node menu (#960).
",10654465
483,False,False,2019-06-12T23:03:38Z,2019-06-12T23:05:13Z,"Improvements
------------

- IECoreMaya::LiveScene (#956) :
  - `attributeNames` and `readAttribute` now translate double underscore (`__`)
    to colon (`:`) when reading ""ieAttr_"" MPlugs.
  - Optionally decoupled Maya visibility from the ""scene:visible"" attribute.
    `readAttribute` will now use a MPlug called ""ieVisibility"" if it exists,
    and otherwise fallback to Maya visibility.
- IECoreMaya : Added FromMayaEnumPlugConverter which can convert to either
  ShortData or StringData, using the MPlug category to determine which type
  should be returned (#959).

Fixes
-----

- DataTraits : Fixed bug in `dataTypeFromElement()` when using dict elements (#955).
",10654465
484,False,False,2019-05-27T19:54:41Z,2019-05-27T19:56:43Z,"Fixes
-----

- Houdini LiveScene : Fixed potential deadlock when using python expressions with wrangle SOPs (#953).",10654465
485,False,False,2019-05-17T13:05:12Z,2019-05-17T13:07:03Z,"Improvements
------------

- IECoreArnold::CameraAlgo : Arnold cameras now have a useable field of view value,
  and a fixed screen window. This makes them compatible with the standard UV remap
  workflow (#952).
- IECoreNuke::SceneCacheReader : Added option for respecting object visibility (#950).

Fixes
-----

- IECoreMaya::SceneShapes : Fixed bug which meant that Viewport 2 isolate select
  was not respected (#951).
",10654465
486,False,False,2019-04-24T08:37:49Z,2019-04-24T08:38:47Z,"Build
-----

- Added INSTALL_COREIMAGE_POST_COMMAND and INSTALL_CORESCENE_POST_COMMAND
  build options (#949).
- Fixed compilation error on MacOS (#948).
",10654465
487,False,False,2019-04-23T19:06:00Z,2019-04-22T19:21:04Z,"Improvements
------------

- SharedSceneInterfaces : Add methods for controlling cache size (#946).
",10654465
488,False,False,2019-04-04T20:19:08Z,2019-04-04T20:20:43Z,"Fixes
-----

- IECoreScene `deleteFaces/deleteCurves/deletePoints` : Prevent crashes caused by
  invalid primitive variables (#942).
- IECoreArnold : Fixed bug when rendering indexed normals (#943).

Build
-----

- Added support for ASAN when using gcc
",10654465
489,False,False,2019-04-02T18:35:33Z,2019-04-02T17:01:24Z,"Improvements
------------

- IECoreScene::MeshAlgo : Added several conectivity based tangent calculations (#925) :
  - Calculate tangents based on the first neighbor edge.
  - Calculate tangents based on the first two adjacent edges.
  - Calculate tangents based on face centroids.
- OpenImageIOAlgo : Added support for Rational V2i in image metadata (#939).
  - This fixes a bug when processing images with rational framesPerSecond data which
    are exported from Cortex (or Gaffer), then loaded and re-exported through Nuke.

API
---

- IECoreScene::MeshAlgo : Updated original tangent calculation (#925) :
  - Renamed `calculateTangents` to `calculateTangentsFromUV` to avoid confusion with
    the new methods. The former is kept for backwards compatibility, but is deprecated.
",10654465
490,False,False,2019-03-20T23:22:51Z,2019-03-20T23:26:47Z,"Features
--------

- IECoreScene::MeshAlgo : Added `merge` to combine a list of meshes (#936).
  - This was ported from `MeshMergeOp` and updated to maintain corners and creases.
    The op is deprecated and has been reimplemented to use the new algo.

Improvements
------------

- MeshPrimitive::createPlane : Added normals (#933).
- MeshPrimitive::createBox : Added normals and UVs (#933).
- MeshAlgo::distributePoints : Updated to support Vertex interpolated UVs (#934).
- MeshAlgo::deleteFaces : Updated to maintain the corners and creases (#936).
- MeshAlgo::triangulate : Updated to maintain the corners and creases (#936).
- MeshAlgo::reorderVertices : Updated to maintain the corners and creases (#936).
- Alembic Writer : Added support for exorting indexed normals (#933).
- IECoreHoudini : Added import/export for corners and creases on polygons (#936).

Fixes
-----

- Canceller : Export symbols for Cancelled class (#932).
- IECoreHoudini : Fixed a bug in the mesh interpolation export for polygons (#936).

API
---

- TBBBinding : Bind `tbb::global_control` (#931).

Breaking Changes
----------------

- IECorePython : Consolidate TBB bindings into one file (#931).",10654465
491,False,False,2019-03-04T18:59:44Z,2019-03-04T19:54:22Z,"Features
--------

- MeshPrimitive : Added support for subdivision corners and creases (#927).
  - Updated SceneCache, IECoreAlembic, and IECoreUSD to read and write corners and creases.
  - Updated IECoreMaya to import and export corners and creases.
  - Updated IECoreArnold to translate corners and creases for the renderer.
  - Noteable missing features are import/export in IECoreHoudini, rendering support in
    3delight and Appleseed, as well as some geometry processing via IECoreScene
    (eg `triangulate`, `deleteFaces`).

Fixes
-----

- OpenImageIOAlgo : Fix DataView copy constructor and copy assignment (#923).
- Font classes : Support newlines (#928).
- LRUCache : Fix double-release in serial policy (#926).
- ImageReader :
  - Hardcode PNG color conversion as sRGB->Linear (#913).
  - Support completeness checks on tiled deeps (#929).

Build
-----

- Windows builds are now supported (via MSVC 2017) (#916).

Breaking Changes
----------------

- MeshPrimitive : New members for crease data (#927).
- Windows : There are several symbol visibility changes to allow for the Windows builds (#916).
",10654465
492,False,True,2019-02-14T20:18:11Z,2019-02-14T20:20:12Z,"Improvements
------------

- Houdini SceneCache ROP : Optimized cache times for a variety of real world production scenes (#920).

Fixes
-----

- Houdini SceneCache ROP : Fixed a bug with time-varying hierarchy (#918).
- Houdini LiveScene : Fixed a bug with tag translation (#920).",10654465
493,False,False,2019-02-14T20:03:58Z,2019-02-14T20:05:27Z,"Improvements
------------

- Houdini SceneCache ROP : Optimized cache times for a variety of real world production scenes (#920).

Fixes
-----

- Houdini SceneCache ROP : Fixed a bug with time-varying hierarchy (#918).
- Houdini LiveScene : Fixed a bug with tag translation (#920).",10654465
494,False,True,2019-02-13T20:07:25Z,2019-02-13T20:10:32Z,"Fixes
-----

- Fix Maya Arnold build
",10654465
495,False,True,2019-01-29T23:50:40Z,2019-01-29T23:55:09Z,"Features
--------

- MeshAlgo : Added MeshAlgoConnectedVertices (#900).

Fixes
-----

- Houdini SceneCacheSource SOP : Fixed ""convert tag to groups"" toggle (#915).
  - When creating primGroups from tags on each location, we don't want the tagFilter parm
    to influence which groups are created. The tagFilters is just about pruning locations.
- Maya Config : Don't load the IE menu when in a batch session (#912).
",10654465
496,False,False,2019-01-29T22:24:17Z,2019-01-29T17:38:08Z,"Features
--------

- MeshAlgo : Added MeshAlgoConnectedVertices (#900).

Fixes
-----

- Houdini SceneCacheSource SOP : Fixed ""convert tag to groups"" toggle (#915).
  - When creating primGroups from tags on each location, we don't want the tagFilter parm
    to influence which groups are created. The tagFilters is just about pruning locations.
- Maya Config : Don't load the IE menu when in a batch session (#912).
",10654465
497,False,False,2019-01-16T16:09:17Z,2019-01-16T16:10:11Z,"Features
--------

- StringAlgo : Added path matching functions. These provides equivalent matching to `IECore::PathMatcher`, for use when constructing a `PathMatcher` would be overkill (typically when you only want to match against one path) (#898).

Improvements
------------

- ToHoudiniConverter : Added support for uniform UVs (#907).

Fixes
-----

- VDBObject : Calling `memoryUsage()` no longer forces loading (#901).
- SceneCache : Legacy shader networks stored as `ObjectVectors` are now converted to
  `ShaderNetworks` during loading (#905).",10654465
498,False,True,2019-01-15T18:50:38Z,2019-01-15T18:52:13Z,"Fixes
-----

IECoreVDB : prevent VDB read in memory calculation ( #910 )",10654465
499,False,True,2019-01-14T18:44:47Z,2019-01-14T18:46:08Z,"Fixes
-----

- IECoreHoudini : ToHoudiniConverter - support uniform UVs ( #908 )",10654465
500,False,True,2019-01-02T18:53:52Z,2019-01-02T18:56:28Z,"Fixes
-----

- Canceller : Fixed Python->C++ conversion for `IECore.Cancelled`. This was broken in
  10.0.0-a42 (#896).
- IECoreArnold::CameraAlgo : Fixed bug that tried to set ""mesh"" camera parameter, even
  though it requires special handling outside the converter (#895).
",10654465
501,False,True,2018-11-30T18:51:53Z,2018-11-30T18:25:42Z,"Fixes
-----

- Canceller : Fixed Python binding for Cancelled exception class (#886, #896).
- Primitive interpolator : Fixed interpolation of primitive variables with mismatched
  indices. Interpolation is now skipped in these cases (#892).

Build
-----

- Added VDB_PYTHON_PATH build option which is used for the IECoreVDB tests (#882).
",10654465
502,False,False,2018-11-30T09:13:22Z,2018-11-30T09:15:58Z,"Fixes
-----

- Canceller : Fixed Python->C++ conversion for `IECore.Cancelled`. This was broken in
  10.0.0-a42 (#896).
- IECoreArnold::CameraAlgo : Fixed bug that tried to set ""mesh"" camera parameter, even
  though it requires special handling outside the converter (#895).
",10654465
503,False,False,2018-11-29T15:18:11Z,2018-11-29T15:19:00Z,"Features
--------

- IECoreScene : Added ShaderNetwork class and ShaderNetworkAlgo namespace with associated
  utility functions (#890).

Breaking Changes
----------------

- IECoreAppleseed : Replaced ShaderAlgo with ShaderNetworkAlgo and removed handle
  parameter from `ParameterAlgo::convertShaderParameters()` (#890).
- ToGLStateConverter : Removed support for specifying shaders as ObjectVectors, requiring
  ShaderNetworks instead (#890).
",10654465
504,False,False,2018-11-29T11:33:28Z,2018-11-29T11:34:50Z,"Improvements
------------

- PrimitiveVariable::IndexedView : Added assignment operator and default
  constructor (#893, #894).

Fixes
-----

- SceneInterface : Fixed bug where upper-case file extensions were not recognised (#891).
- Canceller : Fixed Python binding for Cancelled exception class (#886).
- Primitive interpolator : Fixed interpolation of primitive variables with mismatched
  indices. Interpolation is now skipped in these cases (#892).

Breaking Changes
----------------

- IECoreArnold : Removed InstancingConverter (#888).

Build
-----

- Added BUILD_TYPE option, with supported values of RELEASE, DEBUG, and
  RELWITHDEBUGINFO. This replaces the DEBUG and DEBUGINFO options (#887).
",10654465
505,False,True,2018-11-13T20:50:22Z,2018-11-13T20:51:27Z,"Features
--------

- CurvesAlgo : Added `updateEndpointMultiplicity`, which can be used to add or remove
  replicated end points when setting a basis (#877).
- IECoreHoudini : Added export/import between Houdini poly lines (non-closed polygons)
  and Cortex CurvesPrimitives with a linear basis (#877).

Improvements
------------

- CubicBasis : Added enum for standard curve cubic bases (#877).
- MeshAlgo::calculateTangents : Added support for vertex interpolated UVs (#879).
- IECoreArnold : Export face varying indices for indexed Vertex varying UVs (#880).
- IECoreMaya : Split skinCluster weights into its own set of converters, with
  optional compression to unsigned short data (#883).

Fixes
-----

- MeshMergeOp : Fixed merging of indexed primitive variables (#879).
- VectorTypedData : Fixed bugs with Short and UShortVectorData serialization (#878).
- ToGLCurvesConverter : Fixed crash with indexed uniform primitive variables (#881).
",10654465
506,False,False,2018-11-13T20:28:36Z,2018-11-13T20:29:48Z,"Features
--------

- CurvesAlgo : Added `updateEndpointMultiplicity`, which can be used to add or remove
  replicated end points when setting a basis (#877).
- IECoreHoudini : Added export/import between Houdini poly lines (non-closed polygons)
  and Cortex CurvesPrimitives with a linear basis (#877).

Improvements
------------

- CubicBasis : Added enum for standard curve cubic bases (#877).
- MeshAlgo::calculateTangents : Added support for vertex interpolated UVs (#879).
- IECoreArnold : Export face varying indices for indexed Vertex varying UVs (#880).
- IECoreMaya : Split skinCluster weights into its own set of converters, with
  optional compression to unsigned short data (#883).

Fixes
-----

- MeshMergeOp : Fixed merging of indexed primitive variables (#879).
- VectorTypedData : Fixed bugs with Short and UShortVectorData serialization (#878).
- ToGLCurvesConverter : Fixed crash with indexed uniform primitive variables (#881).

Build
-----

- Added VDB_PYTHON_PATH build option which is used for the IECoreVDB tests (#882).
",10654465
507,False,True,2018-11-01T20:33:18Z,2018-11-01T20:34:53Z,"Improvements
------------

- IECoreMaya : FromMayaParticleConverter : read additional particle attribute names from ieParticleAttributes attribute (#874)

Fixes
-----

- IECoreHoudini : Fixed potential crash in Houdini 17.",10654465
508,False,False,2018-10-30T01:00:14Z,2018-10-30T01:02:21Z,"Improvements
------------

- IECoreMaya : FromMayaParticleConverter : read additional particle attribute names from ieParticleAttributes attribute ( #874 )",10654465
509,False,False,2018-10-26T18:19:27Z,2018-10-26T18:22:59Z,"Fixes
-----

- IECoreHoudini : Fixed potential crash in Houdini 17.",10654465
510,False,False,2018-10-19T11:04:03Z,2018-10-19T11:04:59Z,"Fixes
-----

- IECoreHoudini::FromHoudiniGeometryConverter : Fixed GIL management (#862).
- IECore::ToCoreConverter : Fixed GIL management (#862).
- IECoreScene : Reverted parallelisation of mesh triangulation, as it could lead
  to deadlock in IECoreGL (#868).
- IECoreMaya : Fixed build for Maya 2018 (#866).
- IECoreMaya::SceneShape : Fixed various VP2.0 bugs (#865)
  - Fixed rendering of objects as the SceneShape is transformed
  - Fixed root bound highlight rendering
  - Optimised rendering when only rendering bounds
  - Fixed to respect Maya visibility
",10654465
511,False,True,2018-10-18T21:18:18Z,2018-10-18T21:19:41Z,"Fixes
-----

- IECoreScene : Fix deadlock if Triangulating a mesh from another tbb task (#867)
- IECoreMaya : SceneShape VP2.0 fixes (#869)
  - Fixed rendering of objects as the SceneShape is transformed
  - Fixed root bound highlight rendering
  - Optimise rendering if only rendering bounds",10654465
512,False,True,2018-10-16T23:48:40Z,2018-10-16T23:52:38Z,"Note : This is a backport of critical fixes already available on master. If you're comfortable with the Camera changes, you'll want an upcoming a38 release instead.

Fixes
-----

- IECorePython : Fixed potential deadlocks when converting data from DCCs (#862)
- IECoreHoudini : Fixed potential deadlocks when converting geometry from Houdini (#862)

Build
-----

- IE Config : Add support for variable CXXSTD (#864)",10654465
513,False,False,2018-10-12T08:51:37Z,2018-10-12T08:52:25Z,"Improvements
------------

- IECoreScene::Camera : Improved camera definition for better compatibility
  with USD and Alembic, and to improve the user experience. In particular, cameras no longer hold a screenWindow parameter directly, instead defining an aperture and focal length. See API documentation for the Camera class for more
  details (#850).
- USDScene : Added support for writing cameras (#850).

Breaking Changes
----------------

- IECoreScene::Camera (#850) :
  - Removed `addStandardParameters()` method.
  - Removed transform property.
  - Removed name property.
- IECoreGL : Removed PerspectiveCamera and OrthographicCamera classes.
  Use Camera directly instead (#850).",10654465
514,False,False,2018-10-12T00:52:34Z,2018-10-12T01:17:43Z,"Improvements
------------

- IECoreMaya : SceneCache Viewport 2.0 rendering improvements (#857)
  - Reduced memory usage by caching maya index & vertex buffers
  - Prepare Viewport 2.0 vertex data in parallel and only update topology if required
  - Reduced queries to maya for shader information
- IECoreScene : Triangulation improvements (#853)
  - Parallel implementation of FaceVarying primitive variable expansion
  - Parallel MeshPrimitive::setTopology implementation
  - TriangulateOp forwards to new MeshAlgo::triangulate function

Fixes
-----

- IECoreScene : Suppress private linkLocation attribute ( #849 )

Build
-----

- Houdini 17.0 Support (#854)",10654465
515,False,False,2018-09-21T21:27:18Z,2018-09-21T21:29:31Z,"Improvements
-------------

- Houdini LiveScene : Improved performance of Houdini scene publisher callbacks ( #847 )",10654465
516,False,False,2018-09-18T22:22:01Z,2018-09-18T22:24:02Z,"Improvements
-------------

- Maya SceneShape : Initial support for Viewport 2.0 (#805)
  - Note that VP1 support is both deprecated and disabled. It can be re-enabled
    by setting CORTEX_SCENESHAPE_MAYA_VP1_SUPPORT prior to Maya startup.
  - Note that Instancers (eg MASH) do not work yet.
  - Note that SceneShapes far from origin may have selection issues in Maya 2017.
    This is resolved in Maya 2018.4
- Houdini LiveScene (#845)
  - Support string array detail attributes.
  - Issue Error if different prim types have the same name.

Build
-----

- Requires USD 18.09",10654465
517,False,False,2018-09-13T18:41:28Z,2018-09-13T18:43:35Z,"Improvements
------------------

- Houdini LiveScene : Improved performance of reading houdini scenes ( #843 )",10654465
518,False,False,2018-09-11T13:39:23Z,2018-09-11T13:40:16Z,"Improvements
------------

- StreamIndexedIO (#813) :
  - Indices are now compressed using Blosc.
  - Reduced memory allocations used for Directory nodes.
- Maya menus : Added a mechanism to create and access site-specific menus (#839).
- Houdini LiveScene : Reduced overhead of python attribute and tag readers (#841).

Fixes
-----

- FromHoudiniGeometryConverter : The ""uv"" attribute is now always converted to an
  indexed PrimitiveVariable (#838).
- AlembicScene : Fixed crashes caused by concurrent calls to `child()` (#840).
",10654465
519,False,False,2018-09-04T23:21:47Z,2018-09-04T23:35:12Z,"
Improvements
------------

- IECoreMaya : Minor changes so we can compile and run against Maya 2018 u4 ( #832 )
- OpenImageIOAlgo::DataView : Support Color4fData and Color4fVectorData ( #833 )
- IECoreHoudini : Remove StringVector binding ( #834 )
- IECoreMaya : removed SystemExitCmd command ( #828 )

Fixes
-----

- VDBObject : support querying float and double metadata ( #835 )
- IECoreScene : isolate tbb parallel task execution in distributePoints ( #831 )
- IECoreHoudini : LiveScene fixes ( #836 )
  - Prevent tag groups appearing as primvars
  - segfaults when splitting geometry with name primitive attribute.",10654465
520,False,False,2018-08-22T17:30:35Z,2018-08-22T17:37:55Z,"Improvements
------------

- IECoreScene : non-triangle mesh tangent calculation & support indexed UVs (#817)

Fixes
-----

- IECoreAlembic : Warn rather than raising exception if attempting to write an attribute on the root (#825)
- VDBObject : fix crash when instancing VDBObjects (#826)
- IECoreImage : fix crash when writing formats without data window support (#827)
",10654465
521,False,False,2018-08-07T19:34:17Z,2018-08-07T19:41:50Z,"Improvements
------------

- IECoreAlembic : Added support for scalar attribute read and write (#822).
- IECoreAlembic : Added support for Quaternion primitive variables (#816).

Fixes
-----

- IECoreHoudini : Ensure exported indexed StringVector attributes contain no unreferenced data. (#821)",10654465
522,False,False,2019-07-26T17:51:20Z,2018-08-01T13:34:38Z,"Improvements
------------

- DataAlgo : Added additional `Args&&...` arguments to `dispatch()` (#815).
- IECoreArnold::CurvesAlgo : Added conversion from the Cortex standard ""uv"" primitive
  variable to the Arnold ""curves.uvs"" parameter (#818).
- FromMayaInstancerConverter : Now always returns a PointsPrimitive with a ""P"" primitive
  variable, whereas before it could return NullObject or a PointsPrimitive without ""P"" (#814).
- AlembicScene : Added support for TransformationMatrixdData in `writeTransform()` (#812).
",10654465
523,False,False,2018-07-05T00:39:07Z,2018-07-05T00:40:16Z,"Fixes
-----

- GeometricTypedData: Fixed repr to include interpretation (#806).
- IECoreScene : Maintain intepretation when resampling primitive variables (#808).
- IECoreVDB : Fixed threading bug for deferred reads of VDB files (#809).
- IECoreGL::CachedConverter : Fixed threading bug when `clearUnused()` is used concurrently with `convert()` (#811).",10654465
524,False,False,2018-06-18T21:23:26Z,2018-06-18T21:26:14Z,"Improvements
-----------

Fixes
-----

- USDScene : Read tags from the set defined on the default prim (#804)
- IECoreHoudini : Convert arbitrarily named UVs to and from Cortex primitives (#803)
- IECore / IECoreScene / IECoreGL / IECorePython : Isolate TBB parallel execution from parent TBB parallel tasks (#801. #802)

Build
-----

- Update IE config to build specific appleseed versions (#807)",10654465
525,False,False,2018-06-05T16:00:34Z,2018-06-05T16:01:30Z,"Fixes
-----
 
- Fixed compilation on OSX (#800).",10654465
526,False,False,2018-06-02T17:52:25Z,2018-06-02T17:53:35Z,"Improvements
------------

- IECoreAppleseed : Updated for Appleseed 1.9.
- IECore : IndexedIO - Optional Blosc compression
    - header version number updated to 6
    - ```IECORE_STREAMINDEXEDIO_COMPRESSION``` environment variable added to specify compression method and settings
    -  IndexedIO can be created using an additional *options* parameter to specify compression method and settings.
",10654465
527,False,False,2018-06-01T22:59:09Z,2018-06-01T23:02:21Z,"Experimental Branch

Improvements
------------

- IECoreMaya : PlugConverter (#794)
    - MTime, MAngle & MDistance converted as doubles
    - Support for short & enum conversion added.",10654465
528,False,False,2018-06-01T22:44:48Z,2018-06-01T22:49:24Z,"Improvements
------------

- IECore : DataAlgo - Improved exception message (#793)
- IECoreScene : MeshAlgoWinding - refactored to use new data dispatch. (#792)
- IECoreMaya : PlugConverter (#799)
    - MTime, MAngle & MDistance converted as doubles
    - Support for short & enum conversion added.

Fixes
-----

- IECoreGL : CachedConverter - Fixed thread safety of deferredRemovals (#798)
- SConstruct : Added dependency of alembic python module on Scene python module. Fixes automated build failures. (#795)",10654465
529,False,False,2018-05-16T19:30:01Z,2018-05-16T19:30:49Z,"Features
--------

- IECore : Added IndexedIOAlgo, which contains utility functions for performance testing
  of IndexedIO streams (#766).
- IECoreScene : Added SceneAlgo, which contains utility functions for performance testing
  of SceneInterfaces (#767).
- MeshAlgo : Ported `MeshVertexReorderOp` to `reorderVertices()` (#787).
  - The op still exists, but is now deprecated. Use the algo instead.
  - Also fixed crash when reordering indexed primitive variables.

Improvements
------------

- MeshAlgo::segment : Improved performance by multithreading (#789).
- CurvesAlgo::segment : Improved performance by multithreading (#789).
- PointsAlgo::segment : Improved performance by multithreading (#789).

Fixes
-----

- MeshAlgo::deleteFaces : Fixed deletion of indexed primitive variables (#779).
- CurvesAlgo::deleteCurves : Fixed deletion of indexed primitive variables (#779).
- PointsAlgo::deletePoints : Fixed deletion of indexed primitive variables (#779).
- MeshPrimitive : Fixed problems with `createSphere()` (#785).
- ImageWriter : Fixed crash when writing JPGs with offet data windows (#791).",10654465
530,False,False,2018-05-09T22:42:06Z,2018-05-09T22:42:46Z,"Features
--------

- PrimitiveVariable (#783) :
  - Added `IndexedView` utility class. This provides transparent
    iteration of the data field via the indices field.
  - Added `__repr__` to python bindings.
- DataAlgo (#780) :
  - Added `dispatch()` method as a replacement for DespatchTypedData. Several
    call sites have been updated to use it and DespatchTypedData has been deprecated.
  - Added `size()`, `address()`, `trait()` methods.

Improvements
------------

- MeshPrimitive : Create indexed uvs in `createPlane()` (#783).
- IECoreAlembic : Added Cortex version to the header when writing ABCs (#784).

Fixes
-----

- IECoreScene::LinkedScene : Fixed crash when destructing LinkedScenes which link
  to IECoreMaya::LiveScenes (#782).
- PrimitiveVariable : Fixed bug where `expandedData()` lost the GeometricInterpretation (#783).
- MeshPrimitiveEvaluator : Fixed evaluation of indexed variables (#783).
- MeshAlgo : Fixed indexed-UV bug in `calculateDistortions()` (#783).
- IECoreArnold::ShapeAlgo : Fixed indexed PrimitiveVariable bug (#783).
- IECoreAlembic : Fixed bug which prevented ABCs writen from Cortex to load in Houdini (#784).
",10654465
531,False,False,2018-05-03T09:54:43Z,2018-05-03T09:56:15Z,"Fixes
-----

- Canceller : Exported symbols for `Cancelled` exception.",10654465
532,False,False,2018-05-01T18:30:09Z,2018-05-01T18:30:55Z,"Features
--------

- IECore : Added Canceller class, which can be used to cancel long-running
  background operations. Note this isn't being used as of yet, but we intend
  to use this in various IECoreScene Algos in the near future (#773).
- IECorePython : Added python wrapper for TBB thread scheduler init (#776).

Improvements
------------

- StreamIndexedIO : Improved read performance via platform specific offset reading (#769).
  - Use the IECORE_OFFSETREAD_DISABLED environment variable to disable this feature.
- IECoreHoudini::FromHoudiniGeometryConverter : Faster UV welding (#772).

Fixes
-----

- IECore::ConfigLoader : Isolate config files from one another (#770).
  - Previously the contextDict allowed variables to leak between configs.
- IECoreMaya::LiveScene : Maya attributes named ""ieAttr_*"" take precedance
  over registered custom attribute functors (#771).",10654465
533,False,False,2018-04-20T01:18:23Z,2018-04-20T01:21:36Z,"Experimental Branch 

Fixes
-----

- IECoreMaya : LiveScene - Allow maya defined **ieAttr_** attributes to be read on SceneShapes",10654465
534,False,False,2018-04-17T18:18:37Z,2018-04-17T18:19:31Z,"Features
--------

- Added Sets to SceneInterface.
  - Reading and writing Sets are currently supported for SceneCache, LinkedScene,
    USD (via UsdCollectionAPI), and Alembic (via AbcCollection).
  - IECoreMaya, IECoreHoudini, and IECoreVDB do not yet support the new Sets API.
  - The aim is for this to replace Tags at some point in the future. For now,
    we will support both mechanisms for gathering locations.      
- IECoreMaya : LiveScene conversion of Maya Instancers.
  - Converts from a Maya Instancer to a Cortex PointsPrimitive.
  - Converts primvar names and types to match Cortex conventions.
    - Automatically converts id, instanceType, and visibility from double to int.
  - Supports Maya 2017 MASH in instancing mode.

Improvements
------------

- IECoreVDB::VDBObject : Introduced lazy loading of VDB grids.
- IECoreGL::Shader : Improve `defaultVertexSource()` for missing N.
  - This improves the rendering of PointsPrimitives in GL_POINTS mode.
- PathMatcher :
  - Added `size()` method and made `intersection()` method const.
- Timer :
  - Updated to the latest boost timer library.
  - Added Timer.Mode so wall clock, user cpu or system cpu time can be timed.
  - Added ScopedTimer to help with debugging performance issues.

Fixes
-----

- IECoreGL : Fixed wireframe drawing of points and curves.
  - This fixes the selection visualisation in Gaffer's viewport when
    points are rendered as GL_POINTS and curves are rendered as GL_LINES.
- IECoreImage::ImageWriter : Fixed bug when writing JPGs with a dataWindow
  that is larger than the displayWindow.
- MeshPrimitive::createSphere() : Fixed rounding bug for the number of segments.
- MurmurHash : Fixed symbol export for ostream operator
- StringAlgo : Fixed symbol export for `numericSuffix()`

Build
-----

- CMake (experimental) :
  - Updated Readme
  - Removed requirement for CMakeLists.txt to in root dir
  - Added module to locate Blosc
  - Added module to locate OpenVDB
  - Explicitly set C++11
  - Disable unused-local-typedefs warning in debug builds",10654465
535,False,False,2018-04-12T18:54:26Z,2018-04-12T18:55:42Z,"Experimental Branch

Fixes
-----

- IECoreMaya : InstancerConverter - convert id type from double to int
",10654465
536,False,False,2018-04-06T21:04:38Z,2018-04-06T21:07:35Z," Experimental Branch
 
 Fixes
 -----
 
 - IECoreMaya : Use rotation units in Instancer conversion
     - Automatic attribute type conversions:
         - *instanceType* from double to int
         - *visibility* from double to int",10654465
537,False,False,2018-04-04T21:22:00Z,2018-04-04T21:23:30Z,"Experimental Branch

Features
--------

- IECoreMaya : LiveScene conversion of Maya Instancers
    - Converts from a Maya Instancer to a Cortex PointsPrimitive
    - Converts primvar names and types to match Cortex conventions
    - Supports Maya 2017 MASH in instancing mode.

Improvements
------------

- IECoreGL::Shader : Improve `defaultVertexSource()` for missing N
  - This improves the rendering of PointsPrimitives in GL_POINTS mode.

Fixes
-----

- IECoreGL : Fixed wireframe drawing of points and curves
  - This fixes the selection visualisation in Gaffer's viewport when
    points are rendered as GL_POINTS and curves are rendered as GL_LINES.
",10654465
538,False,False,2018-03-21T18:33:31Z,2018-03-21T18:34:24Z,"Improvements
------------

- IECoreScene : Added SceneInterface::Path stream insertion << operator

Fixes
-----

- Build :
  - IECoreMaya depends on IECoreScene.
  - Update IE config to build with RV specific dependencies.",10654465
539,False,False,2018-03-14T21:13:59Z,2018-03-14T21:16:34Z,"Improvements
------------

- IECoreHoudini : Dramatically improved performance for SOPs containing large hierarchy
  of named primitives (#729) :
  - LiveScene : Optimized querying of names with a SOP.
  - FromHoudiniGeometryConverter : Added ""preserveName"" and ""convertGroupsAsPrimvars"" parameters.
  - FromHoudiniPointsConverter : Tighten requirements for converting to a PointsPrimitive.
  - DetailSplitter : Added option to segment SOP hierarchy using Cortex rather than HDK.
  - Removed support for IECore Group conversion.

Fixes
-----

- IECoreUSD : Fixed crash when a USD file fails to load (#742).
- IECoreHoudini : Fixed OpenGL Context issue for Houdini 16.0 & 16.5 Qt5 builds (#741).
- IECoreAppleseed : Use safe_normalize instead of normalize (#739).
",10654465
540,False,False,2018-03-14T20:15:34Z,2018-03-14T20:16:28Z,"Experimental Branch

Fixes
-----

- IECoreHoudini : Fixed OpenGL Context issue for Houdini 16.0 & 16.5 Qt5 builds.
",10654465
541,False,False,2018-03-02T10:40:42Z,2018-03-02T10:42:53Z,"Features
--------

- Added mechanism for loading config files during Cortex module startup. Configs
  are python files located on paths specified by the CORTEX_STARTUP_PATHS
  environment variable (#716).
- IECoreMaya : Added support for multi-attributes in plug converters (#719).

Improvements
------------

- Improved debugging support (#726).
- ImageReader : Added support for deep images in `isComplete()` method (#717).
- ConfigLoader : Made `contextDict` argument optional. This makes it possible to
  isolate config files from one another (#722).
- IECoreScene :
  - Output : Added const version of `parametersData()` method (#715).
  - PrimitiveVariable : Added `throwIfInvalid` argument to `expandedVariableData()`
    (#720).
  - Primitive Algo : Parallelised segmentation functions (#727).

Fixes
-----

- GLSL FilterAlgo : Fixed filtering of `filteredPulse()` (#737).
- IECoreAppleseed :
  - Fixed compilation in debug mode (#725).
  - MeshAlgo : Fixed errors caused by 0 length normals in DEBUG builds (#732).
- IECoreMaya : Fixed ""Redeclaration of variable"" warning in ParameterisedHolderUI
  in Maya 2017 (#735).
- IECoreUSD : Fixed writing of bool attributes (#734).
- PrimitiveAlgo : Fixed bug when segmenting on indexed primitive variable (#727).
- MeshAlgo : Fixed crash if `distributePoints()` is called with non-facevarying
  UVs. An exception as now thrown instead (#720).
- IECorePython : Fixed handling of Python exceptions in all wrapper classes (#721).

Breaking Changes
----------------

- FromMayaShapeConverter : Removed primVarAttrPrefix parameter. Always use the
  ""iePrimVar"" prefix (#736).
- Removed IECoreMaya::GeometryCombiner (#736).
- Renamed IECoreScene::Display to IECoreScene::Output (#715).
- PrimitiveVariable : Changed signature of `expandedVariableData()`. Source
  compatibility is maintained (#720).
- Removed ieMarschnerHair GLSL shader. This was only usable with the
  MarschnerLookupTableOp which was removed in Cortex 9 (#714).",10654465
542,False,False,2018-02-22T21:38:16Z,2018-02-22T21:39:43Z,"Experimental Branch

Improvements
------------

- IECoreMaya : Added Multi plug support for To/FromMayaPlugConverters
",10654465
543,False,False,2018-02-14T23:28:35Z,2018-02-14T12:53:03Z,"Features
--------

- IECoreVDB : Added new library providing interoperability with OpenVDB (#708)
  - VDBObject allows VDB grids to be passed around as `IECore::Object`.
  - VDBScene provides reading of VDB files via `IECoreScene::SceneInterface`.

Improvements
------------

- SearchPath : Added plaform-agnostic constructor which chooses the correct
  separator based on the current platform (';' for Windows, ':' for Linux
  and MacOS). Also deprecated all methods which take an explicit separator,
  as they are a cross-platform-compatibility trap (#704).
- PrimitiveAlgo : Improved `segment()` methods to take an optional
 `segmentValues` argument (#698).
- IECoreAlembic : Added support for velocity on meshes and curves (#706).
- IECoreArnold : Added support for Color4fVectorData primitive variables (#707).

Fixes
-----

- Symbol visibility :
  - Removed public headers from IECoreUSD. We were not exporting the symbols
    from these because we didn't intend them to be public anyway (#699).
  - Exported `convert()` functions from IECoreNuke (#703).
  - Exported `convert()` functions from IECoreMaya (#710).
- IECoreNuke : Fixed `import IECoreNuke` so that it doesn't require IECore
  to have been imported already (#703).
- Windows : Fixed miscellaneous build problems (#705).
- ImageWriter : Auto-expand the data window when required (#713).

Build
-----

- Added ASAN option for use with Clang (#700).
",10654465
544,False,False,2018-02-02T10:50:09Z,2018-02-02T10:51:23Z,"Improvements
------------

- Appleseed : Added bindings for TransformAlgo and ObjectAlgo (#696).
- Object (#694) :
  - CopyContext/SaveContext/LoadContext
    - Hid internal implementation so it can be improved in
      future.
    - Derived from boost::noncopyable.
  - Simplified registration of abstract types. They now use
    the same mechanism as regular types.
  - Changed CreatorFn to be a `std::function`, which is more
    flexible than the previous function pointer.
  - Optimised `copy()` method.
- OpenImageIOAlgo : Added support for string arrays in DataView class
  and `data()` function. This allows string array metadata to be
  round-tripped properly through the ImageReader and ImageWriter (#691).
- Build : Hid symbols that do not need to be exported (#695).

Fixes
-----

- Fixed build errors with GCC 6 (#697).

Breaking Changes
----------------

- Removed legacy Appleseed renderer backend. This is superceded by the new backend
  incubating in the Gaffer project (#696).
- Object : Removed abstract type registration mechanism (#694).
",10654465
545,False,False,2018-01-26T22:53:20Z,2018-01-25T10:19:48Z,"Features
--------

- Added PathMatcher and PathMatcherData classes (#686).
- Added support for IECORE_DEBUG_WAIT environment variable. Setting this allows you
  to attach a debugger during Cortex startup (#687).
- StringAlgo : Added addition methods ported from Gaffer (#686).
- PrimitiveAlgo : Added `segment()` methods for segmenting primitives (#689).

Fixes
-----

- PointDistribution : Fixed bug whereby points could be emitted in areas of zero density (#693).
- Primitive Algo : Fixed resampling of constant string primitive variables (#688).
- StringVectorData : Fixed `baseReadable()` and `baseWritable()` methods (#690).

Breaking Changes
----------------

- Removed AlembicInput. Use AlembicScene instead (#684).
- Removed the following unused Data and Parameter classes : (#692)
  - TimeCodeParameter
  - TimeDurationData and TimeDurationParameter
  - TimePeriod, TimePeriodData and TimePeriodParameter
- StringAlgo : Moved to IECore::StringAlgo namespace (#686).",10654465
546,False,False,2018-01-18T00:33:30Z,2018-01-18T00:34:10Z,"Fixes
-----

- USDScene : Fixed quaternion converter (#683).
- IECoreMaya : Restored registration of ParameterisedHolderSurfaceShape (#685).
",10654465
547,False,False,2018-01-09T12:30:21Z,2018-01-09T11:13:16Z,"Features
--------

- IECoreUSD (#678) :
  - Added support for writing USD files via USDScene API.
  - Added support for tags in USDScene API.
  - Added support for writing and reading bounds.
  - Added support for more primitive variable types.

Improvements
------------

- FromMayaMeshConverter : Reintroduced normals and uv parameters (#677).

Breaking Changes
----------------

- IECoreArnold : Removed legacy renderer class (#676).
- IECoreScene : Remove CapturingRenderer class (#680).",10654465
548,False,False,2018-01-03T11:01:46Z,2018-01-03T11:03:34Z,"Improvements
------------

- Added support for Appleseed 1.8.1 (#670)",10654465
549,False,False,2017-12-22T20:24:00Z,2017-12-22T15:23:08Z,"Breaking Changes
----------------

- Removed Imath types from Python bindings. Use the standard imath module instead. See #672 for details of the relevant syntax changes required.
- Removed IECoreRI, in favour of future support for 3delight/prman using dedicated modules. The two renderers have deviated so far from the RenderMan ""standard"" that a single module cannot effectively cover them both. 3delight support via the new NSI API is currently provided in Gaffer, PRMan support is planned for the future (#667).
- Removed CameraController - this has moved to Gaffer's internals (#666).
- Removed ParameterisedProcedural and all procedural support from hosts (#668). Procedurals have been unused in the Image Engine pipeline for several years now, in favour of Gaffer graphs.
- BoxAlgo : Moved functionality to nested IECore::BoxAlgo namespace (#672).
- Random : Moved to RandomAlgo and added namespace (#672).
- Removed data types based on Imath::Color3d and Imath::Color4d (#672).
- Removed DataTraits.isMatrixTypeData (#672).
- Removed PointsExpressionOp (#672).

Fixes
-----

- CurvesAlgo : Removed debug output (#665).
- AlembicScene : Fixed writing of points without IDs (#671).",10654465
550,False,False,2017-12-14T18:07:54Z,2017-12-14T18:08:46Z,"Experimental Branch

Improvements
------------

- IECoreScene : Forward compatibility module for cortex 10 (#664)
- Support for Houdini 16.5 (#669)
",10654465
551,False,False,2017-12-01T11:31:39Z,2017-12-01T11:32:47Z,"Breaking Changes
----------------

- IECoreScene : Moved all scene description components into a new IECoreScene module (#660).
  The contrib/scripts directory contains some scripts to aid in porting code, and the Cortex 9
  branch has been updated with a forwards compatibility module to ease migration.
- IECore : Removed FileSequenceAnalyzerOps (#660).
- IECoreImage : Removed CurveTracer (#660).
- ObjectInterpolator : Removed cubic interpolation (#660).
- ObjectWriter : Removed writing of ""bound"" header data for VisibleRenderables (#660).
- DespatchTypedData : Removed TypedDataInterpolation (#660).
- Removed IECoreMantra (#660).

Improvements
------------

- ImageReader : Added support for reading headers from deep images (the deep data itself remains
  unsupported) (#654).
- ObjectInterpolator : Added support for registering interpolators for custom object types (#660).
- CurveAlgo/MeshAlgo/PointsAlgo : Added invert parameter to component deletion functions (#651).

Fixes
-----

- HalfData : Fixed zero initialisation bug (#662).
- IECoreImage : Fixed bug which prevented module being imported without importing IECore first (#653).
- IECoreMaya : Fixed bugs with MEL evaluation (#657).",10654465
552,False,True,2017-11-24T20:33:29Z,2017-11-24T20:35:46Z,Fixes from 9.23.3 and 9.23.4 applied to the Arnold 5 experimental branch.,10654465
553,False,False,2017-11-15T00:21:35Z,2017-11-15T00:24:03Z,"API
---

- IECoreImage : Forward compatibility module for cortex 10
",10654465
554,False,False,2017-11-03T23:00:09Z,2017-11-03T23:02:57Z,"Fixes
-----

- Fixed crash when resampling empty points vertex interpolated primitive variables to uniform.
",10654465
555,False,True,2017-11-02T09:27:22Z,2017-11-02T09:28:12Z,"Breaking Changes
----------------

- Requires Arnold 5 (#637).

Features
--------

- Support for Arnold 5 (#637).

Improvements
------------

- RenderMan display driver : Added support for ""layername"" parameter. This is used by 3Delight 13.x (#648).
- IECoreArnold::ParameterAlgo (#637) :
  - Added support for UInt parameters.
  - Added support for converting V3i and V2i parameters to floats vectors.
- IECoreAlembic : Added support for reading and writing indexed primvars (#642).

Fixes
-----

- IECore::Font : Fixed thread safety bugs (#649).
- PointsAlgo : Fixed vertex -> uniform resample with an empty points prim (#647).
",10654465
556,False,True,2017-10-25T10:29:42Z,2017-10-25T10:30:52Z,"Fixes
-----

- IECoreAppleseed::MeshAlgo : Fixed conversion of indexed UVs (#639).
",10654465
557,False,True,2017-10-24T11:33:30Z,2017-10-24T11:34:51Z,"Features
--------

- USDScene : Added a prototype SceneInterface for reading USD scenes (#634).

Improvements
------------

- Replaced `NULL/0` with `nullptr`, and added `override` to all virtual overrides (#629).

Fixes
-----

- IECoreGL::ColorTexture : Fixed bug in conversion of RGBA textures to ImagePrimitive (#635).
- IECoreGL : Fixed crashes when rendering indexed primitive variables (#631).

Build
-----

- Added script to prep for run-clang-tidy.py (#629).
",10654465
558,False,True,2017-10-05T09:30:49Z,2017-10-05T09:32:21Z,"Breaking Changes
----------------

- Switched UVs to be represented as a single ""uv"" V2fVectorData PrimitiveVariable with optional
  indices. Old caches are converted automatically on loading but code which deals with UVs directly
  will need to be updated (#621).
- IECoreRI :
  - Removed Dspy.h. The ieDisplay.so RenderMan display driver is now independent
    of libIECoreRI, making it suitable for use in 3delight NSI renders (#622).
  - Removed GXEvaluator (#621).
- Houdini cache loaders : Changed filtering (#616).
- Removed MeshFaceFilterOp. Use `MeshAlgo::deleteFaces()` instead (#621).
- Removed MeshTangentsOp. Use `MeshAlgo::calculateTangents()` instead (#621).
- Removed FaceAreaOp. Use `MeshAlgo::calculateFaceArea()` and `MeshAlgo::calculateFaceTextureArea()`
  instead (#621).
- Removed PointDistributionOp. Use `MeshAlgo::distributePoints()` instead (#621).
- Removed MeshDistortionsOp. Use `MeshAlgo::calculateDistortion()` instead (#621).
- FromMayaMeshConverter (#621) :
  - Removed unused parameters.
  - Made some methods private.

Features
--------

- PointsAlgo : Added `mergePoints()` function (#616).
- MeshAlgo (#621) :
  - Added `calculateFaceArea()` function
  - Added `calculateFaceTextureArea()` function
  - Added `distributePoints()` function
  - Added `calculateDistortion()` function

Improvements
------------

- PrimitiveVariable (#621) :
  - Added optional IntVectorData indices. This allows a compact representation
    to be stored in PrimitiveVariable::data, with the indices being used to map
    to the full Vertex/Uniform/FaceVarying size requirement.
  - Added `expandedData()` method to convert data from indexed to non-indexed
    form.
  - Added `Primitive::expandedVariableData()` method to simplify access to
    indexed data.
- Improved UV representation :
  - UVs are specified as a single V2fVectorData PrimitiveVariable
  - Connectivity of UVs is preserved using the optional
    PrimitiveVariable::indices field
  - The default UV set is now called ""uv"" rather than the previous
    pair of ""s"" and ""t""
  - Additional UV sets are identified unambiguously using the GeometricData::UV
    interpretation.
- Houdini cache loaders : Improved filtering (#616).
- PrimitiveEvaluator : Added Result::vec2PrimVar() accessor (#621).
- OpenImageIO::DataView : Added support for V2[if]VectorData (#621).
- LRUCache : Reduced overhead of `setMaxCost()` when the limit is not being reduced (#617).
- Python Wrapper classes : Added support for arbitrary numbers of constructor parameters (#618).

Fixes
-----

- ToGLMeshConverter : Fixed orientation of UV cooordinates (#624).
- IECoreNuke::CurveLookup : Fixed memory corruption (#616).
- MurmurHash : Fixed bug when appending arrays larger than `sizeof( int )` (#620).

Build
-----

- Added DEBUGINFO build option, for including debug symbols in release builds (#616).
- Improved Travis test output.",10654465
559,False,True,2017-09-30T02:04:10Z,2017-09-30T02:05:27Z,"9.23.2-arnold5
=========

Experimental Branch

Improvements
------------

- IECoreArnold now compatible with Arnold 5, and not Arnold 4",10654465
560,False,False,2017-09-27T00:38:21Z,2017-09-27T00:43:00Z,"9.23.2
======

Fixes
-----

- Fixed uninitialized memory bug in MeshAlgo resample primitive variables.
",10654465
561,False,False,2017-09-14T17:13:40Z,2017-09-14T17:15:15Z,"Fixes
-----

- Fixed signed integer overflow in MurmurHash
",10654465
562,False,False,2017-09-05T21:53:12Z,2017-09-05T21:54:06Z,"Features
--------

- PointsAlgo : Added mergePoints to combine a series of PointsPrimitives.

Improvements
------------

- IECoreHoudini : SceneCache nodes use the full path in the shapeFilter
    - Note that this change will break existing Houdini setups which were
      using shapeFilters targetting path basenames.

Fixes
-----

- IECoreNuke : CurveLookup: Fixed memory corruption.

Build
-----

- Added DEBUGINFO option to make debug info for release builds.
",10654465
563,False,True,2017-09-05T11:00:34Z,2017-09-05T11:02:47Z,"Breaking Changes
----------------

- Flipped interpretation of UVs, so that increasing values of V are up, not down #611.
- Refactored image and colour functionality significantly (#605)
  - ImageReader and ImageWriter are now implemented via OpenImageIO behind the scenes.
    There are no longer any format-specific derived classes. As a consequence many more
    file formats are now supported.
  - Colour management is deferred to OpenColorIO.
  - Many classes are now unnecessary and have been removed.
  - All image related functionality has been moved to a new IECoreImage module.
  - ImagePrimitive is no longer directly renderable via IECore::Renderer.
  - Image related functionality of IECore::Font is now moved to IECoreImage::Font.
  - Removed unnecessary functionality. We recommend using Gaffer or OpenImageIO instead :
    - ImagePrimitiveEvaluator
    - PointRepulsionOp
    - CheckImagesOp
    - ImagePrimitiveOp
    - CompositeAlgo/ImageCompositeOp/ImageSequenceCompositeOp
    - ImagePremultiplyOp
    - ImageUnpremultiplyOp
    - UVDistortOp
    - DeepPixel/DeepImageReader/DeepImageWriter
    - Grade
    - ColorSpaceTransformOp, CubeColorLookup and all color transforms

Features
---------

- Added IECoreImage::OpenImageIOAlgo namespace, with various support for interoperability
  with OpenImageIO (#605).
- Added IECoreImage::ColorAlgo namespace for applying colour transforms.

Improvements
------------

- Flipped interpretation of UVs, so that increasing values of V are up, not down (#611).
  This provides improved interoperability with Maya and Houdini when UVs are subsequently
  edited in Cortex (for instance, in Gaffer). This also simplifies UDIM management.

Fixes
-----

- Fixed RenderMan display driver for breaking changes introduced between 3delight
  versions 12.0.88 and 12.0.113 (#612).
- UVs loaded from Alembic files now have the correct orientation. Note that this is
  because Cortex's interpretation of V direction has changed, rather than because
  IECoreAlembic::MeshReader has changed (#611).

Build
-----

- Fixed compilation with GCC 4.8.3 (#607, #610)
- Fixed missing include in IECorePython/ExceptionAlgo.h (#608)
- Boost asio, signals and factorial libraries are now required
  dependencies (#605).
- OpenImageIO is now a required dependencies (#605).
- IECoreHoudini can now be built without IECoreGL (#605).
- Removed direct dependencies on libTIFF, libJPEG and libPNG (#605).",10654465
564,False,True,2017-08-22T10:04:35Z,2017-08-22T10:09:56Z,"Breaking Changes
----------------

- Data : Removed support for loading old obsolete LongData and LongVectorData objects (#582).
- Parameter : Removed deprecated `presets()` accessor. Use `getPresets()` instead (#582).
- IECorePython : Removed deprecated Wrapper class. Use RefCountedWrapper or
  RunTimeTypedWrapper instead (#582).
- IECoreGL::MeshPrimitive : Removed deprecated constructor (#581).
- RSL ArrayAlgo.h : Removed deprecated functions (#581).
- IECoreRI::Renderer : Removed deprecated attributes and commands (#581).
- IECoreArnold::UniverseBlock : Removed deprecated constructor (#581).
- IECoreMaya :
  - Menu : Removed useInterToUI arg and deprecated createMenu() method (#581).
  - Removed MayaPythonUtil (#581).
  - Removed deprecated TransientParameterisedHolderNode (#581).
  - PathParameterUI : Removed deprecated openDialog() method (#581).
- PrimitiveEvaluator : Added Result argument to `signedDistance()` method (#581).
- Removed IECoreTruelight #586.
- IECoreAlembic :
  - Removed ABCToMDC (#591).
  - Removed FromAlembicConverter classes. Use AlembicReader classes instead (#591).
- MeshPrimitive : Made `setTopology()` non-virtual (#598).

Features
--------

- IECoreHoudini::LiveScene : Allowed the creation of derived classes (#552).
- IECorePython :
  - Added ParameterClass and ParameterWrapper binding utilities (#583).
  - Added OpClass and OpWrapper binding utilities (#583).
  - Added ReaderClass and ReaderWrapper binding utilities (#583).
  - Added ExceptionAlgo utilities (#604).
- IECoreAlembic :
  - Added AlembicScene class. This replaces the AlembicInput class,
    and provides both read and write support via the SceneInterface
    API. It is also significantly faster (#598, #606).
  - Added support for curves geometry (#591).
  - Added support for points geometry (#591).
  - Added support for BoolGeomParams (#591).
  - Added ObjectReader and ObjectWriter classes
- LRUCache #596 :
  - Added Policy template argument, with Serial and Parallel policies
    optimised for single and multithreaded operation.
  - Added optional GetterKey template argument. This allows additional
    information to be passed to the getter, without it being stored in
    the cache.
  - Improved error handling. The original exception is now rethrown on
    a second failed call to `get()`.
  - Added support for reentrant getters which call back into the cache.
  - Improved performance.
- MeshAlgo : Added `reverseWinding()` function (#598).

Improvements
------------

- SceneInterface : Added `hasBound()` method (#598).
- SampledSceneInterface : Implemented read methods using readAtSample
  methods. This avoids all the derived classes having to implement the
  same boilerplate (#598).
- SceneCache : Made hash() stable across processes where possible (#598).
- InternedString : Added specialisation for `std::hash` (#606).
- Appleseed DisplayTileCallback : Added support for arbitrary display
  parameters (#600).

Fixes
-----

- IECoreArnold::ParameterAlgo (#579) :
  - Fixed string array conversion for standard libraries where `std::string`
    does not have equivalent layout to `const char *`.
  - Fixed bug in `dataToArray()` boolean conversion.
- Spline (#593) :
  - Removed intermediate cast to float that could reduce precision of
    double splines.
  - Added support for the final segment of curves requiring less than 4
    control points.
  - Improved handling of curves where the X axis curve is non-monotonic.
- MatrixMotionTransform : Fixed crash in `transform()` method (#597).
- IECoreAlembic : Fixed mesh winding order (#598).
- Fixed Houdini 16 issues (#587).

Build
-----

- Fixed check for glew.h (#590).
- Added WARNINGS_AS_ERRORS build argument (#590).
- Minimum C++ standard is now C++11 (#588).
- DEBUG option now sets optimisation level to O0 (#588).
- Removed TESTCXXFLAGS option.
",10654465
565,False,False,2017-08-01T23:52:33Z,2017-08-01T23:50:00Z,"Improvements
------------

- IECore::Spline (#592) :
  - Added support for the final segment of curves that require less than 4 control points.
  - Simplified segment selection in solve() to handle the last segment better.
  - Improved handling of curve cutoff where the control point curve is non-monotonic.
  - Fixed intermediate cast to float that could have affected double computation.",10654465
566,False,False,2017-06-12T20:54:33Z,2017-06-12T20:55:43Z,"Fixes
-----

- IECoreMantra : Fixed procedural issues in Houdini 16 (#580).
- IECoreArnold : ParameterAlgo : Fix `dataToArray()` boolean and string array conversion.
",10654465
567,False,False,2017-06-01T19:45:24Z,2017-06-01T19:46:02Z,"Features
--------

- PointsAlgo :
  - Added `deletePoints()` (#576).

Fixes
-----

- MeshAlgo & CurvesAlgo :
  - Improved argument names (#578).

Build
-----

- Fixed gcc 4.1 builds",10654465
568,False,False,2017-05-30T18:19:37Z,2017-05-30T18:20:36Z,"Features
--------

- MeshAlgo :
  - Added `deleteFaces()` (#575).
- CurvesAlgo :
  - Added `resamplePrimitiveVariables()` (#566).
  - Added `deleteCurves()` (#575).
- PointsAlgo :
  - Added `resamplePrimitiveVariables()` (#575).

Improvements
------------

- IECoreHoudini : Added support for Houdini 16 (#569).
- IECoreArnold::OutputDriver :
  - Using output layerName to set channel names (#573).
  - Improved performance (#574).
- ClientDisplayDriver (#574) :
  - Improved performance.
  - Better error handling.",10654465
569,False,False,2017-05-18T00:05:41Z,2017-05-18T00:14:16Z,"Features
--------

- MeshAlgo : Added function to resample primitive variables (#565)

Improvements
------------

- Arnold output driver : Added pixel aspect ratio to driver parameters (#564)

Fixes
-----

- Maya : Fixed deadlock issues with LiveScene (#562).
- Houdini : Fixed crash when the library was loaded without the plugin (#570).
- Nuke : Fixed debug builds (#567).",10654465
570,False,False,2017-04-19T22:51:27Z,2017-04-19T22:52:12Z,"Features
--------

- IECore::MeshAlgo : Added calculateTangents() function.
  - MeshAlgo is a new namespace for functions which operate on MeshPrimitives.
  - MeshTangentOp has been updated to use `MeshAlgo::calculateTangents()` internally.
- IECoreMaya:LiveScene : Convert Maya Sets to Scene Tags.
  - Sets will be converted if they have a dynmaic bool attribute called ""ieExport"" which is set True.
- IECoreHoudini SceneNodes : Added an option to load Scene Tags as Houdini PrimGroups.

Improvements
------------

- IECoreArnold::ParameterAlgo : Avoid warnings when redeclaring attributes.
- IECoreHoudini Op SOPs : Added ""ie"" prefix to the tab menu for Cortex Ops loaded as Houdini SOPs.
  - This affects Image Engine only.

Fixes
-----

- IECoreMaya::LiveScene : Ignore non-serializable objects introduced by Maya 2016 hypershade.

Build
-----

- Removed stale asserts.
- Removed references to dead test cases.",10654465
571,False,False,2017-02-21T00:40:35Z,2017-02-21T00:42:17Z,"# Improvements
- `IECoreMaya::SceneShape` :
  - Added tagName argument to `FnSceneShape.expandAll()`
  - Added ""Expand by Tag"" option to SceneShape context menu.
- `IECoreArnold::ParameterAlgo`: Support `AI_TYPE_RGB`, `AI_TYPE_RGBA`, and `AI_TYPE_VECTOR`.
- `ImageDisplayDriver`: Support ""header:"" metadata convention
- `EXRImageWriter`: Added DreamWorks compression options (if compiled with OpenExr 2.2+).
- `OStreamMessageHandler`: Made m_stream protected to allow access from subclasses.
",10654465
572,False,False,2017-02-02T11:44:22Z,2017-02-21T00:41:53Z,"- Build
  - Added CXXSTD build argument.
  - Made compatible with recent FreeType versions.
  - Fixed C++11 incompatibilities.
  - Fixed debug builds.
  - Fixed linking for single-lib Alembic.
",10654465
573,False,False,2017-01-11T22:27:20Z,2017-01-11T22:28:09Z,"## Fixes
- `IECoreMaya::SceneShape` :
  - Fixed redraw issue in Maya 2016 parallel mode.
  - Fixes computation for expanded SceneShapes in Maya 2016 parallel mode.
",10654465
574,False,False,2017-01-06T00:00:39Z,2017-01-06T00:01:48Z,"## Improvements
- IECoreAppleseed : Added support for int[] and float[] OSL shader parameters.
- Build :
  - Added support for Alembic 1.6.
  - Added support for Boost 1.61
  - Added support for macOS Sierra
",10654465
575,False,False,2016-12-17T01:12:40Z,2016-12-17T01:13:25Z,"## Improvements
- IECoreArnold::ParameterAlgo :
  - Added support for point parameters.
  - Added support for DoubleData and M44dData
  - Added node name to warnings.
- IECoreRI : Added support for render:sampleMotion option.
- IECoreMaya :
  - Added UndoChunk `with` statement.
  - Added RefreshDisabled `with` statement.
",10654465
576,False,False,2016-10-24T17:18:09Z,2016-10-24T17:19:03Z,"## Fixes
- Arnold `UniverseBlock`
  - Shutdown lazily to improve read-only access (e.g. shader loading on script open).
  - Fixed threadsafety issues with construction/destruction.
  - Fixed writability issues in `Renderer` and tests.
- `IECoreGL::Selector`: Fixed leak of `glClearColor` and `glClearDepth`.
",10654465
577,False,False,2016-10-11T18:19:27Z,2016-10-11T18:20:19Z,"#### IECore
- ParameterAlgo
  - Added manual conversion from BoolVectorData to AtArray.
- DisplayDriverServer
  - Supporting automatic selection of a free port.

#### IECoreMaya
- SceneShape
  - Added preserveNamespace argument to convertAllToGeometry().
  - Recursive expandAsGeometry() now preserves namespace.
  - Fixed bug converting multiple curves to geometry.
  - Fixed naming backward compatibility when converting and connecting to curves.
",10654465
578,False,False,2016-09-26T17:36:26Z,2016-09-26T17:37:02Z,"#### IECore
- Added 'tx' support for TIFFImageReader
",10654465
579,False,False,2016-09-19T16:46:37Z,2016-09-19T16:47:25Z,"#### IECoreArnold
- CurvesAlgo : Convert ""N"" to orientations.
",10654465
580,False,False,2016-09-13T11:01:03Z,2016-09-13T11:03:04Z,"#### IECoreMaya
- Fixed LiveScene object merging bug (#524).

#### IECoreAppleseed
- Added support code and improvements for new renderer backend in Gaffer (#520).
",10654465
581,False,False,2016-09-07T22:53:03Z,2016-09-07T22:53:41Z,"#### IECore
- Camera
  - Added support for negative clipping planes ( useful on ortho cams )

#### IECoreHoudini
- Fixed CurvesPrimitive duplication in Houdini SceneCacheSource SOP
",10654465
582,False,False,2016-08-31T18:25:29Z,2016-08-31T18:26:38Z,"#### IECoreArnold
- Added read/write access concept to UniverseBlock (#514).
- Added automatic loading of metadata files to UniverseBlock (#514).
- Stopped adding ""user:"" prefix to arbitrary primitive variables. Instead
  variables which clash with built in parameters are ignored instead (#519).
- Added support for GeometricTypedData interpretation in primitive variables (#519).
- Support setting enum parameters using integer index

#### IECoreMaya
- LiveScene
  - Added support for multiple shapes under a transform, by merging them
    into a single Cortex object (#516).
- SceneShapes
  - Added support for converting CurvesPrimitives to multiple maya curves
    under the same transform (#516).
",10654465
583,False,False,2016-08-04T23:36:05Z,2016-08-04T23:36:48Z,"#### IECore
- Removed code that discarded Camera crop windows outside 0-1

#### IECoreMaya
- Fixed crash in ToMayaSkinClusterConverter when updating topology

#### IECoreArnold
- Added support for arbitrary camera parameters

#### Build
- Added DEBUG option and fixed debug build errors
",10654465
584,False,False,2016-06-30T19:03:24Z,2016-06-30T19:04:00Z,"#### IECoreArnold
- MeshAlgo : Fix iterator invalidation bug.
",10654465
585,False,False,2016-06-27T16:51:05Z,2016-06-27T16:52:00Z,"#### Build
- Fixed linking of IECoreAppleseed on OS X.
",10654465
586,False,False,2016-06-21T17:08:41Z,2016-06-21T17:09:20Z,"#### IECoreArnold
- Improved UV set support.
- Support for FaceVarying primitive variables.
- Support for Constant V3f primitive variables.
- Support for Vertex primitive variables on PointsPrimitives.
- Fixed incorrect output of Vertex primitive variables on CurvesPrimitives (these are not yet valid in Arnold)

#### IECoreAppleseed
- Made LogTarget class public.
- Added dataToString overload accepting a const Data*.
- Refactored transform conversion code out of TransformStack.
",10654465
587,False,False,2016-06-06T18:34:56Z,2016-06-06T18:35:38Z,"#### IECoreArnold
- Added support for AI_TYPE_VECTOR in `ParameterAlgo::setParameter()`.
- Stopped making unnecessary copies of mesh topology in `MeshAlgo::convert()`.
- Added support for point arrays in `ParameterAlgo::setParameter()`.
",10654465
588,False,False,2016-05-30T16:13:13Z,2016-05-30T16:13:55Z,"#### IECoreArnold
- Added support for matrix parameters

#### IECoreAppleseed
- Fliped t coordinate for mesh UVs.
- Removed ToAppleseed converters. Moved code to Algo files.
- Fixed compile issues for IECoreAppleseed on gcc 4.1.2
- Fixing SConstruct configuration for Appleseed

#### Build
- Exposing OSL and OIIO build options
",10654465
589,False,False,2016-05-16T16:48:40Z,2016-05-16T16:50:16Z,"#### IECoreArnold
- Remove support for Arnold < 4.1.
- Support for progressive renders.
- ParameterAlgo
  - Support for arrays in getParameter().
  - Support for RGBA and Point2 parameters.
  - Support for V3fVectorData.
- Flipped t coordinate for mesh uvs.
- Suppressed conversion of stIndices primvar.
",10654465
590,False,False,2016-05-03T07:51:48Z,2016-05-03T07:53:08Z,"#### Build
- Added INSTALL_ARNOLDPYTHON_DIR build option, to specify an independent location
  for the installation of the IECoreArnold python module.
- Fixed linking of IECoreArnold.
",10654465
591,False,False,2016-04-25T18:25:59Z,2016-04-25T18:26:44Z,"#### IECore
- Python Module
  - Use RTLD_GLOBAL to load C++ modules.

#### IECoreMaya
- Added a MightHaveFn to IECoreMaya::LiveScene::registerCustomAttributes().
  - If MightHaveFn is specified, it will be called before NamesFn to allow a cheap early out.

#### IECoreHoudini
- Implemented Cob GEOIO_Translator::fileStat to return the bounding box from the cob header.

#### IECoreArnold
- Renderer
  - Apply name to camera nodes.
  - Support ""ai:shape:"" attribute prefix.
  - Add support for creating Arnold volume nodes.
- Add SphereAlgo with conversion from IECore::SpherePrimitive.

#### Build
- Fixed PYTHONPATH for IECoreArnold tests
- Updated SConstruct and tests for Arnold 4.2
",10654465
592,False,False,2016-04-04T17:04:23Z,2016-04-04T17:05:18Z,"#### IECoreMaya
- Added plug conversion for MPointArray to IECore::Vector3f/3d (3d default) with Point interpretation.
- Updated plug conversion for VectorArray to use Vector interpretation (rather than Numeric).
- Preventing primary UV Set from being exported twice.
- ieSceneShape expansion functions can optionally preserve the original namespace of the parent.

#### IECoreRI
- Added initial support for 3delight OSL via NSI

#### IECoreAppleseed
- Renamed volume priority attribute to medium priority.
",10654465
593,False,False,2016-02-24T20:31:04Z,2016-02-24T20:31:54Z,"#### IECore
- LinkedScene : The message for linked ancestor tags is now Debug level instead of Warning.

#### IECoreHoudini
- Fixed ""name"" attribute bug in IECoreHoudini::LiveScene, which was triggered by using an attribwrangle on the name attribute.
",10654465
594,False,False,2016-02-12T09:50:42Z,2016-02-12T09:52:11Z,"#### IECore
- Fixed potential crash in MeshPrimitiveEvaluator::barycentricPosition() (#475).
- Fixed ConfigLoader to ignore duplicate paths. Note that this may change configuration
  behaviour for malformed paths with duplicates (#474).

#### IECoreArnold
- Added support for both deformation and transform blur (#473).
- Refactored all Cortex->Arnold conversion functionality into new Algo.h headers,
  removing the old FromCoreConverter based classes. This does represent a compatibilit
  break, but IECoreArnold is in contrib, where no compatibility guarantees exist.
- Fixed warnings relating to the data type of Arnold's visibility parameter, which
  has been changed to AtByte from AtInt.
",10654465
595,False,False,2016-01-27T21:11:12Z,2016-01-27T21:12:03Z,"#### IECore
- MessageHandler handles python exceptions before they get to c++

#### IECoreMaya
- Sorting childNames during ieSceneShape expansion

#### IECoreAppleseed
- Added nested volume priority attribute
",10654465
596,False,False,2016-01-18T20:25:54Z,2016-01-18T20:27:11Z,"#### IECore
- Added support for procedurals without bounds
- Fixed time remapping for old style link attributes in LinkedScenes

#### IECoreHoudini
- Fixed crash when converting integer and float list attributes in Houdini

#### IECoreAppleseed
- Fixed attribute stack bug

#### IECoreRI
- Added support for procedurals without bounds

#### IECoreGL
- Added support for procedurals without bounds

#### IECoreArnold
- Added support for procedurals without bounds

#### IECoreMaya
- Optimized IECoreMaya SceneShape expansion
",10654465
597,False,False,2015-12-04T20:00:22Z,2015-12-04T20:01:30Z,"#### IECoreNuke
- Adding support for PointsPrimitives in Nuke scene reader
",10654465
598,False,False,2015-11-26T01:32:21Z,2015-11-26T01:33:10Z,"#### IECore
- Added unit tests for IECore.M33f/M44f indexing

#### IECoreHoudini
- Houdini can now round trip M33f and M44f primvars, including detail attributes/constant primvars.
",10654465
599,False,False,2015-11-18T19:02:48Z,2015-11-18T19:03:40Z,"#### IECore
- Added const parameterData method to IECore::Light
- Added alternate AreaLight shader control parameter named ""__areaLight""

#### IECoreHoudini
- String tables for converted string primitive variables are now sorted alphabetically
- Houdini geo converters now support M44f primvars
",10654465
600,False,False,2015-09-21T20:59:55Z,2015-09-21T21:00:37Z,"#### IECoreGL
- Added ShaderStateComponent::hash() method.
- Fixed wireframe rendering with user vertex shaders.
- Fixed IDRender selection with user vertex shaders.
- Fixed selection with custom vertex shaders on OSX.

#### IECoreAppleseed
- Added default render params needed by interactive final rendering.
- Fix display when used with the ImageDisplayDriver driver type.

#### IECoreHoudini
- Removed deep RAT support for Houdini 15 (it is still there for older Houdini versions)

#### Build
- Houdini 15 compatibility
- Fixed build issue for running 3delight inside Maya at IE
",10654465
601,False,False,2015-08-25T18:08:23Z,2015-08-25T18:09:50Z,"#### IECoreAppleseed
- Support renderer type prefixes in Renderer::light().

#### IECoreArnold
- Support renderer type prefixes in Renderer::light().

#### IECoreRI
- Support renderer type prefixes in Renderer::light().

#### IECoreMaya
- Fixed crash when zooming in on coordinate systems in scene shapes

#### Build
- 3delight display drivers and procedurals now installed to compiler specific locations at IE
",10654465
602,False,False,2015-07-20T18:59:32Z,2015-07-20T19:01:47Z,"# Full change list for 9.0.0

#### IECore
- Renamed GeometricData::Interpretation::Numeric to GeometricData::Interpretation::None, so that it makes sense as a deafult for non-numeric types.
  - GeometricData::Interpretation::Numeric still exists for compatibility.
- Added DataAlgo.h with setDataInterpretation() and getDataInterpretation().
- Fixed shutdown crashes with ScopedGILLock (as seen in Gaffer 0.14.0.0)
- Added a new magic number for JPG compatibility
- Storing the bounding box in .cob headers if the object is a VisibleRenderable.
- TransformOp now takes a copy of the data before altering it.
- GCC 4.8 compatibility.
- Boost 1.55.0 compatibility.
- TBB 4.3 compatibility.
- Fixed thread safety bug in BlindDataHolder::blindData()
- Fixed PointsPrimitive::bound() to account the width or aspect ratio of the points.
- Made MurmurHash::append() an inline function
- Added IECore::ClippingPlane object
- Set `__file__` when loading configs
- Emitting a debug message for each config file loaded
- Added implicit conversion from python datetime to DateTimeData.
- Linked scenes no longer return duplicate tags
- Removed SimpleSubsurface
- Removed Marschner code
- Removed HitMissTransform
- Removed TypeInfoCmp
- Removed UniformRandomPointDistributionOp
- Removed MappedRandomPointDistributionOp
- Removed AttributeCache
- Removed InterpolatedCache
- Removed spherical harmonics code
- Removed FileExampiners
- Improved MurmurHash performance
- Fixed GILReleasePtr crash.
- Adding the export macros for proper exporting of symbols.
- Optimised Object::memoryUsage() 
- Fixed GIL bug in python Object creation
- Added implementation of tbb_hasher for boost::intrusive_ptr
- TIFFImageReader now checks if the tif is tagged as coming from tdlmake, and if so, sets the sourceColorSpace from the image description set by tdlmake.
- Reduced overhead of calling memoryUsage() on SimpleTypedData.
- Added pixelAspectRatio to list of standard camera parameters.
- Added InternedString( const char *, size_t length ) constructor.
- Multithreaded PointSmoothSkinningOp
- Added ExternalProcedural object type
- Added HasBaseType type trait
- Added boost::hash compatibility for MurmurHash
- LinkedScene::hash now takes extra children at links into account
- Bug fix in StreamIndexedIO that was causing sporadic crashes when loading SceneCaches during procedural expansion.
- Fixed some minor bounding box bugs in IECore.SceneCache
- Child bounds can now dilate bounds explicitly specified using IECore.SceneCache.writeBound()
- IECore.LinkedScene now supports extra children at link locations
- Fixed TransformOp double transform bug
- Added SceneInterface::hash() method.
- Improved ConfigLoader.
  - Now executes files within the same directory in alphabetical order.
  - Added subdirectory argument.
  - Env var accepted in place of search path.
- Made RefCounted bindings release the GIL during C++ destruction.
- Changed RefCounted base class binding to use GILReleasePtr too.
- Replaced IECore::IntrusivePtr with boost::intrusive_ptr.
- Removed staticPointerCast, constPointerCast and dynamicPointerCast.
- Fixed crash in MeshMergeOp.
- Fixed mutex acquisition in LRUCache::updateListPosition().
- PointSmoothSkinningOp handles faceVarying normals and added refIndices parameter
- Changed DespatchedTypedData DataPtr & argument to Data *
- Fixed LRUCache hangs.
- Simplified RefCounted bindings.
- Fixed LRUCache crashes where clear() was called concurrently with get().
- Added IECorePython::CastToIntrusivePtr.
- Added from-python conversion of RunTimeTypedClass to IECore::TypeId
- Removed implicit surface functionality
- Removed BGEO and BIN readers/writers. 
- Removed IFFHairReader.
- Fixed EXRImageReader canRead to accept scanline images.
- Improved speed of InternedString( int64_t ).
- Tidied up LRUCache

#### IECoreMaya
- FromMayaCameraConverter now accounts for pixelAspectRatio.
- Maya 2016 compile fixes for gcc 4.8
- Fixed FromMayaCameraConverter to account for non-zero film offsets.
- ToMayaCameraConverter now supports setting the film offset using blindData on the Camera.
- Maya 2016 compatibility.
- SceneShapeUI::select now returns false when polygons aren't being displayed in the viewport.
- Added a mutex inside IECoreMaya::LiveScene::hasAttribute()
- Only allow selection using the bounding box if the box is visible
- Latest registered custom attribute reader now takes precedence in IECoreMaya.LiveScene
- On transform nodes, plugs with names prefixed by ""ieAttr_"" are now translated into ""user:"" attributes by the IECoreMaya.LiveScene
- String attributes called ""ieTags"" on transform nodes now interpreted as a space separated list of tags
- Fixed ieSceneShape component selection bug.
- Fixed crash when expanding ieSceneShapes containing coordinate systems.
- Fixed coordinate system->maya locator converter crash for coordinate system with no transform
- Fixed crash in SceneShape::hasSceneShapeObject for invalid scene
- Stopped IECoreMaya::LiveScene::readObject() returning null pointers.
- Stopped IECoreMaya::LiveScene::readAttribute() returning null pointers.
- Renamed IECoreMaya::MayaScene to IECoreMaya::LiveScene
- MayaScene bindings now catch boost python exceptions
- Fixed MayaScene for reading scene:visible and custom attributes at the root

#### IECoreHoudini
- Fixed issue exporting string attributes when Houdini reports an extra null string in the detail.
- Added support for converting quaternions to and from Houdini.
- Houdini 14 compatibility.
- SceneCacheNodes have a new ""Full Path Name"" parm which creates an attrib for the full path for each shape (default is off).
- Latest registered custom attribute reader now takes precedence in IECoreHoudini.LiveScene
- ToHoudiniGeometryConverter marks Pref and rest as non-transforming
- Preventing SceneCache Source from transforming rest/Pref
- Renamed IECoreHoudini::HoudiniScene to IECoreHoudini::LiveScene

#### IECoreAlembic
- Fixed bug where face sets were treated as children.
- Adding the export macros for proper exporting of symbols.
- Added support for the Ogawa backend into IECoreAlembic.

#### IECoreGL
- Fixed radius of spheres rendered by IECoreGL::PointsPrimitive.
- Wireframe shading uses Cs instead of vertexCs
- Added mip mapping to ColorTexture.
- Added ToGLSphereConverter.
- Adding the export macros for proper exporting of symbols.
- Added support for setting array uniforms in shader parameters
- Added State::ScopedBinding overload, allowing a binding to be ignored
- Changed IECoreGL::HitRecord::name field from InternedString to GLuint
- Added IECoreGL::Selector::loadName() overload to auto-generates names
- Removed TextureUnits.h
- Added python bindings for CurvesPrimitive
- Added python bindings for smoothing state components
- Added ToGLStateConverter for converting attributes to State objects
- Fixed crash in ShaderStateComponent::addParametersToShaderSetup()
- Switched glsl diffuse and specular functions to match 3delight's properly normalized BRDFS
- Removed deprecated IECoreGL::Selector::loadIDShader() method.
- Added IECoreGL::Selector::postProjectionMatrix() method.

#### IECoreRI
- Primitive variable types in RI now set from the prim var interpretation.  Type hints now ignored.
- Changed SXExecutor parameter interpretation.
- SLOReader sets geometric interpretation on parameters.
- ParameterList makes use of geometric interpretation when available.
- Several IECoreRI::shader() optimizations
- Added clipping plane support to IECoreRI::Renderer
- Added IECoreRI support for DoubleData, V3dData and Color3dData attributes
- Adding the export macros for proper exporting of symbols.
- Automatic instancing now defaults to on
- Fixed precision issue with computing the projection matrix for dsm depth remapping, which was causing deep holdout problems.
- Fixed bug when editing cameras when dealing with multiple cameras.
- Added pixel aspect ratio support to IECoreRI::Renderer.
- Fixed argument passing for RiProcDynamicLoad.
- Added support for DynamicLoad and DelayedReadArchive procedurals
- Added support for RiFrame blocks in IECoreRI::Renderer.
- Added support for camera edits to IECoreRI::Renderer.
- Added support for motion blurred cameras to IECoreRI::Renderer.
- Added support for multiple cameras to IECoreRI::Renderer.
- Removed ""transform"" parameter from IECoreRI::Renderer::camera().
- Removed support for hider parameters in IECoreRI::Renderer::camera(). â¦
- IECoreRI now built for all python versions 
- added M44dData attribute support to IECoreRI::Renderer

#### IECoreArnold
- Adding the export macros for proper exporting of symbols.
- Added pixel aspect ratio support to IECoreArnold::Renderer.
- Added support for delayed load DSO and .ass procedurals

#### IECoreAppleseed
- Added support for shading overrides.
- Added mesh tangents and motion normals.
  - Mesh tangents (primitive variable uTangent) are now exported to appleseed meshes.
  - Time varying tangents and normals for primitives with deformation blur are now exported if appleseed supports them (since version 1.2.0).
- Fixed a warning message in ToAppleseedMeshConverter.
- Added support for interactive non-editable final rendering.
- Fixed appleseed error while binding inputs of object instances.
- Various options changes:
  - Set decorrelate_pixels automatically depending on render passes.
  - If the rendering_threads option is zero, use all CPU cores for rendering.
  - If the as:cfg:pt:max_ray_intensity is zero, disable max intensity clamping.
  - Disable max number of bounces for max_path_length options set to zero.
  - Check the type of the Data passed to setOption before accessing it.
- Camera, transformation, deformation motion blur support.
- Lights can now be turned on and off.
- Interactive rendering support.
- Added support for the photon target attribute.
- Added support for orthographic cameras.
- Added an appleseed log handler that uses MessageHandler to log messages.
- Refactored IECore primitive to appleseed entities conversions code.
- Simplified IECoreAppleseed::RendererImplementation.
- Use appleseed object alpha maps instead of material alpha maps.
- Fixed a bug when trying to render a scene without cameras.
- Use the names set with setAttribute to name the appleseed entities in generated appleseed scene files.
- Highlight regions being rendered in the interactive display driver. Useful when doing multipass rendering.
- Small refactors in the display driver code.
- Removed some unused headers and other formatting changes.
- Camera and transformation motion blur support
- Added as:automatic_instancing option to enable / disable auto-instancing.
- Better error handling for as:mesh_file_format option
- Better error handling for searchpath option. Added automatic_instancing option
- Support for appleseed 1.1.2
- Fixed bug when connecting members of stuct parameters in OSL shaders.
- Added photon target attribute for objects
- PrimitiveConverter interface changes. Changed the way hashes are computed in IECoreAppleseed.
- Fixed assembly instance names when generating appleseed projects.
- Added visibility attributes support.
- Fixed bug converting OSL int shader parameters.
- Added initial support for Appleseed.
- Added crop window support.
- Fixed OSX compilation and linking issues.
- Added initial support for Appleseed

#### Build
- Travis : Updated to container-based build infrastructure.
- Travis : Skipped some threading tests on Travis.
- Windows build fixes.
- Updated default build arguments to work with standard packages on Ubuntu 12.04.
- Configured Travis automated testing.
- Fixed compilation for GCC 4.2 on OS X

# Changes from 9.0.0-b9

#### IECore
- Renamed GeometricData::Interpretation::Numeric to GeometricData::Interpretation::None, so that it makes sense as a deafult for non-numeric types.
  - GeometricData::Interpretation::Numeric still exists for compatibility.
- Added DataAlgo.h with setDataInterpretation() and getDataInterpretation().

#### IECoreMaya
- FromMayaCameraConverter now accounts for pixelAspectRatio.

#### IECoreRI
- Primitive variable types in RI now set from the prim var interpretation.  Type hints now ignored.

#### IECoreAppleseed
- Added support for shading overrides.
- Added mesh tangents and motion normals.
  - Mesh tangents (primitive variable uTangent) are now exported to appleseed meshes.
  - Time varying tangents and normals for primitives with deformation blur are now exported if appleseed supports them (since version 1.2.0).
- Fixed a warning message in ToAppleseedMeshConverter.

#### Build
- Travis : Updated to container-based build infrastructure.
- Travis : Skipped some threading tests on Travis.
",10654465
603,False,True,2015-07-03T18:56:13Z,2015-07-03T18:57:23Z,"#### IECore
- Fixed shutdown crashes with ScopedGILLock (as seen in Gaffer 0.14.0.0)
",10654465
604,False,True,2015-06-18T19:11:11Z,2015-06-18T19:12:19Z,"#### IECore
- Added a new magic number for JPG compatibility

#### IECoreMaya
- Maya 2016 compile fixes for gcc 4.8

#### IECoreAlembic
- Fixed bug where face sets were treated as children.

#### IECoreRI
- Changed SXExecutor parameter interpretation.

#### IECoreAppleseed
- Added support for interactive non-editable final rendering.
",10654465
605,False,True,2015-06-02T16:59:16Z,2015-06-01T19:22:15Z,"#### IECore
- Storing the bounding box in .cob headers if the object is a VisibleRenderable.
- TransformOp now takes a copy of the data before altering it.
- GCC 4.8 compatibility.
- Boost 1.55.0 compatibility.
- TBB 4.3 compatibility.

#### IECoreMaya
- Fixed FromMayaCameraConverter to account for non-zero film offsets.
- ToMayaCameraConverter now supports setting the film offset using blindData on the Camera.
- Maya 2016 compatibility.

#### IECoreHoudini
- Fixed issue exporting string attributes when Houdini reports an extra null string in the detail.
- Added support for converting quaternions to and from Houdini.
- Houdini 14 compatibility.

#### IECoreRI
- SLOReader sets geometric interpretation on parameters.
- ParameterList makes use of geometric interpretation when available.

#### IECoreAppleseed
- Fixed appleseed error while binding inputs of object instances.
- Various options changes:
  - Set decorrelate_pixels automatically depending on render passes.
  - If the rendering_threads option is zero, use all CPU cores for rendering.
  - If the as:cfg:pt:max_ray_intensity is zero, disable max intensity clamping.
  - Disable max number of bounces for max_path_length options set to zero.
  - Check the type of the Data passed to setOption before accessing it.
",10654465
606,False,True,2015-04-15T16:44:26Z,2015-04-15T16:45:25Z,"#### IECore
- Fixed thread safety bug in BlindDataHolder::blindData()
",10654465
607,False,True,2015-04-06T17:52:13Z,2015-04-06T17:53:58Z,"#### IECore
- Fixed PointsPrimitive::bound() to account the width or aspect ratio of the points.
- Made MurmurHash::append() an inline function

#### IECoreMaya
- SceneShapeUI::select now returns false when polygons aren't being displayed in the viewport.

#### IECoreHoudini
- SceneCacheNodes have a new ""Full Path Name"" parm which creates an attrib for the full path for each shape (default is off).

#### IECoreGL
- Fixed radius of spheres rendered by IECoreGL::PointsPrimitive.

#### IECoreAppleseed
- Camera, transformation, deformation motion blur support.
- Lights can now be turned on and off.
- Interactive rendering support.
- Added support for the photon target attribute.
- Added support for orthographic cameras.
- Added an appleseed log handler that uses MessageHandler to log messages.
",10654465
608,False,True,2015-03-04T18:25:47Z,2015-03-04T18:27:10Z,"#### IECore
- Added IECore::ClippingPlane object
- Set `__file__` when loading configs
- Emitting a debug message for each config file loaded

#### IECoreMaya
- Added a mutex inside `IECoreMaya::LiveScene::hasAttribute()`

#### IECoreGL
- Wireframe shading uses Cs instead of vertexCs

#### IECoreRI
- Several `IECoreRI::shader()` optimizations
- Added clipping plane support to IECoreRI::Renderer

#### IECoreAppleseed
- Refactored IECore primitive to appleseed entities conversions code.
- Simplified `IECoreAppleseed::RendererImplementation`.
- Use appleseed object alpha maps instead of material alpha maps.
- Fixed a bug when trying to render a scene without cameras.
- Use the names set with setAttribute to name the appleseed entities in generated appleseed scene files.
- Highlight regions being rendered in the interactive display driver. Useful when doing multipass rendering.
- Small refactors in the display driver code.
- Removed some unused headers and other formatting changes.
- Camera and transformation motion blur support
- Added as:automatic_instancing option to enable / disable auto-instancing.
- Better error handling for as:mesh_file_format option
- Better error handling for searchpath option. Added automatic_instancing option
- Support for appleseed 1.1.2
- Fixed bug when connecting members of stuct parameters in OSL shaders.
- Added photon target attribute for objects
- PrimitiveConverter interface changes. Changed the way hashes are computed in IECoreAppleseed.
- Fixed assembly instance names when generating appleseed projects.
",10654465
609,False,True,2015-02-10T23:27:12Z,2015-02-10T23:28:34Z,"#### IECore
- Added implicit conversion from python datetime to DateTimeData.
- Linked scenes no longer return duplicate tags

#### IECoreMaya
- Only allow selection using the bounding box if the box is visible
- Latest registered custom attribute reader now takes precedence in IECoreMaya.LiveScene
- On transform nodes, plugs with names prefixed by ""ieAttr_"" are now translated into ""user:"" attributes by the IECoreMaya.LiveScene
- String attributes called ""ieTags"" on transform nodes now interpreted as a space separated list of tags

#### IECoreHoudini
- Latest registered custom attribute reader now takes precedence in IECoreHoudini.LiveScene

#### IECoreRI
- added IECoreRI support for DoubleData, V3dData and Color3dData attributes
",10654465
610,False,True,2015-01-19T10:04:33Z,2015-01-19T10:06:27Z,"#### IECore
- Removed SimpleSubsurface
- Removed Marschner code
- Removed HitMissTransform
- Removed TypeInfoCmp
- Removed UniformRandomPointDistributionOp
- Removed MappedRandomPointDistributionOp
- Removed AttributeCache
- Removed InterpolatedCache
- Removed spherical harmonics code
- Removed FileExaminers
- Improved MurmurHash performance

#### IECoreGL
- Added mip mapping to ColorTexture.

#### IECoreAppleseed
- Added visibility attributes support.
- Fixed bug converting OSL int shader parameters.

#### Build
- Windows build fixes.
- Updated default build arguments to work with standard packages on Ubuntu 12.04.
- Configured Travis automated testing.
",10654465
611,False,True,2014-12-16T20:21:49Z,2014-12-16T20:22:44Z,"#### IECore
- Fixed GILReleasePtr crash.
- Adding the export macros for proper exporting of symbols.

#### IECoreMaya
- Fixed ieSceneShape component selection bug.
- Fixed crash when expanding ieSceneShapes containing coordinate systems.

#### IECoreGL
- Added ToGLSphereConverter.
- Adding the export macros for proper exporting of symbols.

#### IECoreRI
- Adding the export macros for proper exporting of symbols.

#### IECoreArnold
- Adding the export macros for proper exporting of symbols.

#### IECoreAppleseed
- Added initial support for Appleseed.
- Added crop window support.
- Fixed OSX compilation and linking issues.

#### IECoreAlembic
- Adding the export macros for proper exporting of symbols.
",10654465
612,False,True,2014-11-28T19:57:35Z,2014-11-28T19:59:17Z,"#### IECore
- Optimised Object::memoryUsage()

#### IECoreGL
- Added support for setting array uniforms in shader parameters
",10654465
613,False,True,2014-11-24T09:36:54Z,2014-11-24T09:20:40Z,"#### IECore
- Fixed GIL bug in python Object creation
- Added implementation of tbb_hasher for boost::intrusive_ptr

#### IECoreGL
- Added State::ScopedBinding overload, allowing a binding to be ignored
- Changed IECoreGL::HitRecord::name field from InternedString to GLuint
- Added IECoreGL::Selector::loadName() overload to auto-generates names
- Removed TextureUnits.h
- Added python bindings for CurvesPrimitive
- Added python bindings for smoothing state components
- Added ToGLStateConverter for converting attributes to State objects
- Fixed crash in ShaderStateComponent::addParametersToShaderSetup()

#### Incompatibilities
- Changed IECoreGL::HitRecord members
- Removed IECoreGL/TextureUnits.h

#### Build
- Fixed compilation for GCC 4.2 on OS X
",10654465
614,False,True,2014-11-17T18:45:46Z,2014-11-17T18:47:58Z,"#### IECore
- TIFFImageReader now checks if the tif is tagged as coming from tdlmake, and if so, sets the sourceColorSpace from the image description set by tdlmake.

#### IECoreGL
-  Switched glsl diffuse and specular functions to match 3delight's properly normalized BRDFS

#### IECoreMaya
- Fixed coordinate system->maya locator converter crash for coordinate system with no transform
- Fixed crash in SceneShape::hasSceneShapeObject for invalid scene

#### IECoreRI
- Automatic instancing now defaults to on
",10654465
615,False,True,2014-10-29T22:46:03Z,2014-10-29T22:46:51Z,"#### IECoreMaya
- Stopped IECoreMaya::LiveScene::readObject() returning null pointers.
- Stopped IECoreMaya::LiveScene::readAttribute() returning null pointers.

#### IECoreRI
- Fixed precision issue with computing the projection matrix for dsm depth remapping, which was causing deep holdout problems.
- Fixed bug when editing cameras when dealing with multiple cameras.
",10654465
616,False,False,2014-10-16T21:28:05Z,2014-10-16T21:28:58Z,"#### IECoreRI
- Fixed precision issue with computing the projection matrix for SHW depth remapping.
",10654465
617,False,True,2014-10-14T18:16:49Z,2014-10-14T18:18:01Z,"#### IECore
- Reduced overhead of calling memoryUsage() on SimpleTypedData.
- Added pixelAspectRatio to list of standard camera parameters.
- Added InternedString( const char *, size_t length ) constructor.

#### IECoreRI
- Added pixel aspect ratio support to IECoreRI::Renderer.
- Fixed argument passing for RiProcDynamicLoad.

#### IECoreArnold
- Added pixel aspect ratio support to IECoreArnold::Renderer.

#### IECoreHoudini
- ToHoudiniGeometryConverter marks Pref and rest as non-transforming
- Preventing SceneCache Source from transforming rest/Pref
",10654465
618,False,False,2014-09-29T17:51:10Z,2014-09-29T17:52:50Z,"#### IECore
- Bug fix in StreamIndexedIO that was causing sporadic crashes when loading SceneCaches during procedural expansion.

#### IECoreHoudini
- ToHoudiniGeometryConverter marks Pref/rest as non-transforming
- Preventing SceneCache Source from transforming Pref/rest
",10654465
619,False,True,2014-09-15T08:33:23Z,2014-09-15T16:37:55Z,"#### IECore
- Multithreaded PointSmoothSkinningOp
- Added ExternalProcedural object type
- Added HasBaseType type trait
- Added boost::hash compatibility for MurmurHash

#### IECoreRI
- Added support for DynamicLoad and DelayedReadArchive procedurals

#### IECoreArnold
- Added support for delayed load DSO and .ass procedurals
",10654465
620,False,True,2014-09-02T21:58:36Z,2014-09-02T21:59:16Z,"#### IECore
- LinkedScene::hash now takes extra children at links into account

#### IECoreRI
- Added support for RiFrame blocks in IECoreRI::Renderer.

#### IECoreMaya
- Renamed IECoreMaya::MayaScene to IECoreMaya::LiveScene

#### IECoreHoudini
- Renamed IECoreHoudini::HoudiniScene to IECoreHoudini::LiveScene
",10654465
621,False,True,2014-08-25T17:46:26Z,2014-08-25T17:47:22Z,"#### IECore
- Bug fix in StreamIndexedIO that was causing sporadic crashes when loading SceneCaches during procedural expansion.
- Fixed some minor bounding box bugs in IECore.SceneCache
- Child bounds can now dilate bounds explicitly specified using IECore.SceneCache.writeBound()
- IECore.LinkedScene now supports extra children at link locations
- Fixed TransformOp double transform bug
",10654465
622,False,False,2014-08-18T16:05:24Z,2014-08-18T15:45:55Z,"#### IECore
- Prevented TransformOp from double transforming data (when 2 PrimitiveVariables point to the same data).
",10654465
623,False,True,2014-08-08T20:24:56Z,2014-08-08T20:25:58Z,"#### IECore
- Added SceneInterface::hash() method.
- Improved ConfigLoader.
  - Now executes files within the same directory in alphabetical order.
  - Added subdirectory argument.
  - Env var accepted in place of search path.
",10654465
624,False,True,2014-07-22T22:38:24Z,2014-07-22T22:39:21Z,"#### IECore
- Made RefCounted bindings release the GIL during C++ destruction.
- Changed RefCounted base class binding to use GILReleasePtr too.
- Replaced IECore::IntrusivePtr with boost::intrusive_ptr.
- Removed staticPointerCast, constPointerCast and dynamicPointerCast.
- Fixed crash in MeshMergeOp.
- Fixed mutex acquisition in LRUCache::updateListPosition().
- PointSmoothSkinningOp handles faceVarying normals and added refIndices parameter
- Changed DespatchedTypedData DataPtr & argument to Data *
- Fixed LRUCache hangs.
- Simplified RefCounted bindings.
- Fixed LRUCache crashes where clear() was called concurrently with get().

#### IECorePython
- Added IECorePython::CastToIntrusivePtr.

#### IECoreMaya
- MayaScene bindings now catch boost python exceptions

#### IECoreGL
- Removed deprecated IECoreGL::Selector::loadIDShader() method.
- Added IECoreGL::Selector::postProjectionMatrix() method.

#### IECoreRI
- Added support for camera edits to IECoreRI::Renderer.
- Added support for motion blurred cameras to IECoreRI::Renderer.
- Added support for multiple cameras to IECoreRI::Renderer.
- Removed ""transform"" parameter from IECoreRI::Renderer::camera().
- Removed support for hider parameters in IECoreRI::Renderer::camera(). …
- IECoreRI now built for all python versions
- added M44dData attribute support to IECoreRI::Renderer

#### IECoreAlembic
- Added support for the Ogawa backend into IECoreAlembic.
",10654465
625,False,False,2014-07-16T19:58:07Z,2014-07-16T19:59:05Z,"#### IECore
- PointSmoothSkinningOp handles faceVarying normals and added refIndics parameter
- FromMayaMeshConverter checks if we need to convert st and extraST before doing it.

#### IECoreRI
- IECoreRI::Renderer supports M44d attributes
",10654465
626,False,True,2014-06-24T16:50:11Z,2014-06-24T16:50:47Z,"#### IECore
- Added from-python conversion of RunTimeTypedClass to IECore::TypeId
- Removed implicit surface functionality
- Removed BGEO and BIN readers/writers.
- Removed IFFHairReader.
- Fixed EXRImageReader canRead to accept scanline images.
- Improved speed of InternedString( int64_t ).
- Significantly optimised LRUCache performance.

#### IECoreMaya
- Fixed MayaScene for reading scene:visible and custom attributes at the root
",10654465
627,False,False,2014-06-06T22:37:06Z,2014-06-06T23:16:10Z,"#### IECore
- Added python binding for RefCounted::refCount()
- Fixed default ObjectPool for larger sizes

#### IECoreRI
- Changed SHWDeepImageReader to convert depth to standard Z (distance from eye plane), instead of spherical distance from the near clip.
- Changed SHWDeepImageWriter to convert back to spherical distance from the near clip, assuming the incoming DeepPixels represent distance from eye plane.

#### IECoreHoudini
- Fixed bug in SceneCache ROP when re-rooting flattened geo with errors
",10654465
628,False,False,2014-05-23T20:08:28Z,2014-05-23T20:09:57Z,"#### IECore
- IECore.ls supports ambiguous padding when the sequence is not a regular frame range.
- IECore::frameListFromList correctly handles reverse order lists.
",10654465
629,False,False,2014-05-22T15:44:19Z,2014-05-22T15:46:37Z,"#### IECore
- Removed unnecessary overhead from Object::copy().

#### IECoreHoudini
- Fixing crash in SceneCache ROP todo with ""scene:visible"" attribute.
",10654465
630,False,False,2014-05-20T19:14:47Z,2014-05-20T19:15:59Z,"#### IECore
- Fixing seg fault when attempting to read a non-existant attribute several times.
- Minor fixes for issues highlighted by Coverity.

#### IECoreRI
- Added support for string array options in SXRenderer.

#### IECoreMaya
- MayaScene now outputs the ""scene:visible"" attribute based on Maya visibility.
- SceneShapeInterface::componentNames() and selectionName() now work even if the Maya viewport hasn't refreshed.

#### IECoreNuke
- Added support in DeepImageReader for ZBack channels.
",10654465
631,False,False,2014-05-14T18:08:07Z,2014-05-14T18:10:08Z,"#### IECore
- Fixed StringData repr() to support newlines and quotes.
",10654465
632,False,False,2014-05-14T18:05:22Z,2014-05-14T18:09:52Z,"#### IECore
- Improved precision of Imath Vec and Color repr() and str().
- Using mutex on all access to the internal directory nodes in StreamIndexedIO.
- SceneCache attribute read is now thread-safe.

#### IECoreMaya
- Working around a bug in Maya for meshes with 6 or more UV sets.
- Fixed precision issue in failing test case.

#### IECoreHoudini
- Improved Exception handling in Houdini SceneCache nodes.
- Improved UI for Expand/Collapse buttons.
- Fixed bug in CortexConverter SOP todo with multiple CortexObject primitives with the same name.

#### IECoreNuke
- Fixed a bug in the SceneCacheReader that was preventing animated scene caches from displaying properly.
",10654465
633,False,False,2014-04-22T20:52:35Z,2014-04-22T20:55:36Z,"#### IECoreNuke
- Redesigning SceneCacheReader and fixing it for several known bugs (bug in 8.4.1, flickering, selection reset after file change, no TCL expressions)
",10654465
634,False,False,2014-04-16T16:34:49Z,2014-04-16T16:35:50Z,"#### IECore
- Compilation patches for Ubuntu 13 and Mint 16

#### IECoreMaya
- Fixed ToMayaCurveConverter for cubic non periodic curves (it was previously not possible to roundtrip such a curve using the To/From converters).

#### IECoreHoudini
- Fixed SceneCache ROP crash when a name attr existed, but the name was blank.

#### IECoreNuke
- Fixed a bug with SceneCacheReader where it wouldn't update correctly when wrapped by a python node.
- Fixed a bug with SceneCacheReader that was causing flickering artifacts when using animated geo.
- Fixed a bug with SceneCacheReader for infinite instantiation of Ops due to knob changes during the validate method.
",10654465
635,False,False,2014-04-01T23:37:35Z,2014-04-01T21:31:56Z,"#### IECore
- Fixed a bug where the EXRImageReader would interpret Deep EXRs as valid.
- Added IECore::EXRDeepImageReader (only when building with OpenEXR 2)
- Added IECore::EXRDeepImageWriter (only when building with OpenEXR 2)

#### IECoreRI
- Added support for coordinate systems and a world transform in SXRenderer

#### IECoreHoudini
- Fixed crash when merging CortexPrimitives in Houdini 13.

#### IECoreNuke
- Fixed a bug with IECoreNuke::SceneCacheReader that was causing hanging and crashing.
- Fixed linking of IECoreNuke for Nuke 8.
",10654465
636,False,False,2014-03-18T17:02:14Z,2014-03-18T17:03:19Z,"#### IECore
- Refactored StandardRadialLensModel to match 3dequalizer

#### IECoreRI
- Added support for user options in SXRenderer
- Added support for multiple repeated shading grids in SXRenderer
- Removed conflicting parameter type warning for coshaders
",10654465
637,False,False,2014-03-11T11:23:34Z,2014-03-11T11:24:30Z,"#### IECore
- Fixed potential platform independence problem when writing unsigned ints in StreamIndexedIO.
- Optimised StreamIndexedIO memory usage. Reductions range between 20% and 70% for a selection of production assets.
- Fixed an off-by-one error in DeepImageConverter.

#### IECorePython
- Introduced an improved wrapping mechanism with reduced overhead for non-subclassed instances. Deprecated existing wrapping mechanism.
- Added RefCounted equality, inequality and `__hash__` bindings based on the address of the underlying C++ object. Previously these methods were implemented with respect to the address of the python object, but several python objects could refer to the same C++ object.

#### IECoreHoudini
- Fixed problems initialising defaultObjectPoolCache during plugin load.
- Fixed bug in HoudiniScene with flat geo but no / prefix.

#### IECoreMaya
- Switching to component mode on scene shapes now behaves the same as procedural holders.
- The create locator functions in FnSceneShape now return the locators they created.

#### Build
- Fixed compilation errors on Linux Mint 16.
",10654465
638,False,False,2014-02-24T18:48:32Z,2014-02-24T18:49:30Z,"#### IECore
- Fixed cropping bug in CameraController::setResolution
- Fixed bug with SceneCache animated object topology.

#### IECoreMaya
- Added create locator functionality to SceneShapes
- Moved create locator methods from ProceduralHolderUI to FnProceduralHolder
- SceneShapes support queries to double attributes
",10654465
639,False,False,2014-01-29T19:23:52Z,2014-01-29T19:24:56Z,"#### IECore
- Added screen window modes to CameraController::setResolution.
- Fixed multiplication issue in MatrixInterpolator

#### IECoreMaya
- SceneShape GL Preview responds to the ""scene:visible"" attribute

#### IECoreHoudini
- SceneCache ROP marks visiblity using ""scene:visible"" rather than ""visible""
- Preventing crashes in HoudiniScene when OBJ networks contain non-OBJ nodes
",10654465
640,False,True,2014-01-21T16:58:13Z,2014-01-21T17:02:28Z,"#### IECore
- Fixed boost::format() exception in CompoundData::member()

#### IECoreGL
- Fixed ""gl:primitive:selectable"" attribute (#46)
- Fixed ID selection in wireframe, outline, and points styles (https://github.com/ImageEngine/gaffer/issues/53, https://github.com/ImageEngine/gaffer/issues/160)

#### IECoreMaya
- Setting gl:curvesPrimitive:useGLLines for SceneShape drawing
- Minor bug fixes to SceneShapeUI for tag menu and expandToSelected
- Fixed crash when reading MayaScene attributes that don't exist on the SceneShape
- Fixed stale window bug in SplineParameterUI

#### IECoreHoudini
- SceneCache ROP marks locations which appear and disappear over time
- Added standard ROP script parms (pre/post render and frame)

#### IECoreNuke
- Changed SceneCacheReader to only display MeshPrimitives
",10654465
641,False,True,2013-12-20T18:55:22Z,2013-12-20T18:56:10Z,"#### IECore
- Clang compatibility

#### IECoreGL
- Clang compatibility
",10654465
642,False,True,2013-12-20T18:14:39Z,2013-12-20T18:15:52Z,"#### IECore
- Added TransferSmoothSkinningWeightsOp
- Added GIL release for DisplayDriver imageData and imageClose binding

#### IECoreMaya
- Added ToMayaCurveConverter

#### IECoreHoudini
- Houdini 13 Compatibility (requires H13.0.267 to pass tests)
- Fixed HoudiniScene custom attribute bug when two callbacks define the same attribute
- Fixed exception when reading HoudiniScene custom attributes that didn't exist in the underlying scene
- Using handles instead of strings when validating the DetailSplitter
",10654465
643,False,True,2013-12-16T19:40:33Z,2013-12-16T19:34:18Z,"#### IECore
- LinkedScene( SceneInterfacePtr ) supports writable scenes
- Fixed SceneCache from IndexedIO bug
- Fixed linking issues with IECore::CamelCase

#### IECoreHoudini
- SceneCache SOP transforms all Point, Normal, and Vector primitive variables (previously it only transformed P and N)
- Preventing double cooking in HoudiniScene::scene( path )
",10654465
644,False,True,2013-12-09T12:08:16Z,2013-12-09T12:09:31Z,"#### IECore
- Improved error reporting in LinkedScene - the main filename is now available in error messages.
- Made RunTimeTyped baseTypeIds() and derivedTypeIds() methods thread safe.

#### IECoreGL
- Added IECoreGL::Selector::push/popIDShader() methods. These replace the now deprecated loadIDShader() method.
- Fixed crashes when selecting curves.

#### IECoreHoudini
- Added SceneCache Transform SOP. This node applies transformations from a SceneCache file directly on the points and primitives at the SOP level.
- FromHoudiniPolygon converter now automatically removes normal primvars when extracting a subdivision mesh.

#### IECoreNuke
- Added DeepImageReader - this allows any deep image type supported by Cortex to be read in Nuke.
",10654465
645,False,True,2013-11-27T15:26:16Z,2013-11-27T15:27:41Z,"#### IECore
- Optimised polygonNormal and polygonWinding in PolygonAlgo.h.
- Added face normals mode to MeshNormalsOp.

#### IECoreGL
- Fixed shading of polygon meshes with no ""N"" primitive variable (#118).

#### IECoreArnold
- Added support for Arnold parameters of type AI_TYPE_BYTE.
- Added compatibility with Arnold 4.1.
- Fixed hangs in procedurals.
",10654465
646,False,True,2013-11-22T22:59:54Z,2013-11-22T23:01:26Z,"#### IECore
- Fixed compile issue on Ubuntu

#### IECoreHoudini
- Improving performance of SceneCache SOP. This brings the animated performance back inline with 8.0.0-b1, while maintaining (if not improving) the on-load performance from 8.0.0-b2.
- Guaranteed SceneCache SOP shape/point order by sorting children by name before loading.
- Preventing crash in SceneCache ROP when cooking inside an invisible OBJ subnet.
",10654465
647,False,True,2013-11-09T00:28:03Z,2013-11-09T00:29:36Z,"#### IECore
- WarpOp has a new BoundMode parameter, options are Clamp (previous behaviour) or SetToBlack.
- ImageDiffOp has a new option to offset display windows of the same size to be aligned before comparison.
- Added support to the LensDistortOp for images with offset display window.
- Fixed LensDistortOp bug with non-symmetric distortions.

#### IECoreHoudini
- Added BoundingBox and PointCloud GeometryType options to SceneCache nodes
- Added AttributeCopy parm to SceneCache SOP. This is used to duplicate attributes before loading to Houdini.
- Exposed SceneCache OBJ parameters to override the transform values coming from disk (Transform tab)
- Moved SceneCache OBJ Push button along with all geometry loading parms to the new Options tab
- Improved performance of SceneCache SOP (Up to 5x faster on a 1500 shapes, 3 million polys asset)
",10654465
648,False,True,2013-11-07T02:11:33Z,2013-11-07T02:12:39Z,"#### IECore
- SceneInterface tags now support upstream/local/downstream tags (using a bit mask filter to query)
- Various fixes for OSX builds

### IECoreHoudini
- Fixed multiple transform bug in HoudiniScene
",10654465
649,False,True,2013-11-01T21:46:12Z,2013-11-01T21:47:36Z,"#### IECore
- Added new logos!

#### IECoreGL
- Added IECoreGL::glslVersion() function and python binding
- Added IECoreGL::FrameBuffer::frameBuffer() method
- OpenGL 2.1 compatibility fixes

#### IECoreHoudini
- Added bindings for SceneCacheNode which give access to the SceneInterface directly (or None if invalid)
- HoudiniScene provides python access to registering custom attribute and tag readers
- HoudiniScene now provides access to the world space transformation matrix of the held OBJ node
- Fixing crashes in HoudiniScene when pointing to broken SOPs
- Fixing crashes in SceneCacheWriter when given null attribute data
- Replaced some (but not all) of the misc cow logos with the new Cortex mini-logo
",10654465
650,False,True,2013-10-23T00:50:54Z,2013-10-23T00:52:11Z,"#### IECoreHoudini
- ParameterisedHolder SOPs have a nameFilter parm (w/ disable toggle)
  - These are used to pre-filter each input geometry (or not if toggled off)
- ProceduralHolder outputs a single CortexObject holding its procedural
- OpHolder operates several times per cook, once for each named input shape
  - Shapes matching the filter are operated on, and returned as CortexObjects, maintaining their name
  - Shapes not matching are passed through unchanged, whether they were normal geo or CortexObjects
  - It can be forced to operate only once by disabling the nameFilter or by passing a single named shape
- CortexConverter SOP now operates in both directions (converting between CortexObjects and native geo)
  - It also has a nameFilter, with similar pass-through behaviour as the OpHolder
- Changed interface for HoudiniScene custom attribute callbacks
  - SceneCache OBJs pass attributes through to HoudiniScene (and therefor SceneCache ROP)
- Added IECoreHoudini.makeMainGLContextCurrent() which is needed for sharing the GL Context with other applications (like Gaffer)
- Fixed bug in HoudiniScene which was creating phony children when FlatGeometry names were similar, but not exact
- Fixed bug in SceneCache SOP when loading Groups or CoordinateSystems without a transform
- Preventing segmentation faults when reading a corrupt SceneCache file

#### IECoreGL
- Fixed GLSL shaders to work with GLSL version 120 (OpenGL 2.1)
",10654465
651,False,True,2013-10-21T17:41:14Z,2013-10-21T17:44:25Z,"#### IECoreMaya
- Changing base class for DrawableHolder (from MPxLocatorNode to MPxSurfaceShape ) to solve a selection bug.
  Warning: This breaks binary compatibility with any DrawableHolder derived class.
",10654465
652,False,True,2013-10-18T23:50:58Z,2013-10-18T23:53:46Z,"#### IECore
- Fixed IECore::Lookup for OS X.
- Fixed SceneCache build problem on OS X.
- Fixed unit test in LinkedSceneTest.py ( testLinkBoundTransformMismatch )

#### IECoreGL
- Fixed IECoreGL::PointsPrimitive crash on OS X.
- Removed IECoreGL/Lights.h.
- Removed IECoreGL/GLUT.h

#### IECoreHoudini
- SceneCache OBJ Parameter Reorganization (will cause warnings in existing scenes. these can be ignored)
- Added functions to HoudiniScene: node() and embedded()
- Added click Selection of GR_CortexPrimitives

#### IECoreMaya
- Added FnSceneShape createChild, extracted from expandOnce.
- Changed interface for MayaScene custom attribute callbacks and added bindings for Python.

#### IECoreNuke
- Fixed bug #4837: ""Knobs not found"" warning messages.
- Fixed artefacts in LensDistort
",10654465
653,False,True,2013-10-07T22:37:15Z,2013-10-07T23:13:14Z,"#### IECore
- Removed incorrect assertions from StreamIndexedIO - they were causing crashes in debug builds.
- ComputationCache is more robust in situations where a call to get() yields a different object than was passed to set().

#### IECoreHoudini
- GEO_CortexPrimitives are now correctly copied and transformed during ObjectMerges.
- TagFilter now prevents unnecessary expansion of SceneCache nodes. In SubNetwork/AllDescendants mode, the tagFilter is used to prevent expansion into branches of the hierarchy that were not requested. For a heavy asset, filtering by a ""Proxy"" tag was expanding in 25 seconds and creating 22000 nodes. It is now expanding in 3 seconds and creating 3000 nodes.
- SceneCache Xform and Geo nodes now have a tagFilter, and pass it through to matching children during expansion and push. Xfrom still uses it to limit expansion and control visibility. Geo just passes it on to the SOP, which uses it to limit objects loaded.
- Promoted shapeFilter to all SceneCache nodes. SceneCache Xform and Geo just pass it through to the SOP, as with the attributeFilter.
- Added support for reading and writing tags in SceneCaches.
- Optimised SceneCache OBJ expansion time. On a heavy asset, this reduces expansion time from 442.3s (7.38m) to 17.12s.
- Fixed time offset issues caused by Houdini time 0 being at frame 1, whereas it is at frame 0 in Maya, and in SceneInterfaces.

#### IECoreMaya
- Added a flag to the FnSceneShape create so we can directly create a new sceneShape and transform under a given parent. Used when expanding.

#### IECoreNuke
- Fixed a bug in LensDistort that was causing the cache to hold incorrect image data.

#### IECoreGL
- Added ShaderLoader::clear() method, which allows the reloading of GLSL shaders on the fly.
- Added ""gl:primitive:selectable"" attribute to Renderer.

#### IECoreRI
- Fixed automatic instancing bug caused by having multiple procedurals in the same RIB file.
- Added workaround for 3delight 11.0 in IECoreRI::Renderer::worldEnd - this allows rerendering to work again.
",10654465
654,False,True,2013-09-26T18:07:08Z,2013-09-26T18:08:54Z,"#### IECore
- Fixed sample time ordering bug in SceneCache.
- Fixed transform matrix order in Group.globalTransformMatrix().
- Added a new setTopologyUnchecked method to MeshPrimitive, plus lazy computation of min/maxVerticesPerFace.

#### IECoreGL
-  Fixed bugs in interpretation of ""color"" attribute in IECoreGL.

#### IECoreMaya
- Fixed a segfault which occured when selecting multiple components of a sceneShape in Maya.
- Fixed maya procedural selection highlighting.

#### IECoreHoudini
- Optimised SceneCache caching time significantly.
- Simplified FromHoudiniGeometryConverter factory functions.
- Added name parameter to ToHoudiniGeometryConverter.
- FromHoudiniGeometryConverters no longer add the name blindData.
- Added nameFilter to FromHoudiniGeometryConverter python factory function.
- HoudiniGeometryConverters now use Objects rather than VisibleRenderables.
- Added FromHoudiniCortexObjectConverter for converting single GU_CortexPrimitives.
- Added ToHoudiniCortexObjectConverter for creating GU_CortexPrimitives.
- Fixed ToHoudiniGeometryConverter bug where it didn't call incrementMetaCacheCount().
- Added FromHoudiniCompoundObjectConverter. This converts multiple GU_CortexPrimitives, maintaining the naming by storing each one in a CompoundObject.
- Added ToHoudiniCompoundObjectConverter.
- Added non-const access to the object in a Geo_CortexPrimitive.
- Removed unecessary Object copy in SceneCache SOP.
- Removed HoudiniScene::readObject hack for CortexObject prims.
- Updated cob/pdv IO to allow conversion of general Objects and not just VisibleRenderables.
- Fixed ToHoudiniGeometryConverter factory function search order.
- Fixed bug when caching hidden OBJs.
- Added interruptibility to SceneCache ROP.
- Added DetailSplitter class for efficiently extracting select bits of geometry from a GU_Detail.
- Reenabled the loading of multiple ieCoreHoudini plugins.

#### IECoreRI
- Added ""ri:textureCoordinates"" attribute to IECoreRI::Renderer. This maps to a call to RiTextureCoordinates.
- Fixed specification of multiple displays via IECoreRI::Renderer::display().
- Added automatic instancing capabilities to IECoreRI::Renderer.

#### IECoreNuke
- Added support for expressions in LensDistort.

#### IECoreAlembic
- Fixed IECoreAlembic to use GeometricTypedData appropriately (#28).
",10654465
655,False,True,2013-09-09T19:14:50Z,2013-09-09T19:20:33Z,"IECoreRI
- Added support for ri:areaLight parameter to IECoreRI

IECoreHoudini
- Fixed bug when loading CoordinateSystems in Houdini
",10654465
656,False,True,2013-09-04T18:57:18Z,2013-09-04T18:59:19Z,"IECoreMaya
- Fixed bug in SceneShape compute which prevented drawing on file open/import

IECoreHoudini
- Added ForceObjects parameter to SceneCache ROP (to force what is expanded and what is a link)
- Added a ParticleSystem when converting PointsPrimitives to Houdini
- Fixed point doubling bug with SceneCache SOP loading a PointsPrimitive
- Fixed bug when writing multiple frames of re-rooted scenes
- Fixed HoudiniScene bugs for flattened geometry (SOPs with gaps in the geo hierarchy can now be cached)
- SceneCache tagFilter supports SceneInterfaces with no tags
",10654465
657,False,True,2013-08-26T22:44:09Z,2013-08-26T21:59:27Z,"IECore
- Added Parameter::setPresets and getPresets.
- Improved precision of CameraController operations
- Default ParticleReader uses floats (#69)
- Fixed MurmurHash bug where empty strings had no effect on a hash

IECoreGL
- Added Shader::csParameter() for constant time access to ""Cs""
- Fixed bug with superimposed instances
- Fixed potential bug in Selector::loadIDShader()
- Fixed state leak for immediate renders
- Fixed PointsPrimitive selection and coloring
- Implemented per-vertex Cs for PointsPrimitive.

IECoreMaya
- Fixed erroneous compute on SceneShape outputObjects
- Fixed tests for Maya 2014

IECoreHoudini
- Added a Cache Manager for the Cortex ObjectPool (#40)
- SceneCache ROP allows caching of un-named top level geo (uses the OBJ node name)
- Fixed time dependency issues with SceneCache SOP and OBJs
- OBJ SceneCache nodes expose their transform via expressions (see Output tab)
- Expanding and SOP cooking are now interrupt-able using the escape key
- Improvements for expanding SceneCaches in Houdini
  - Expanded nodes are now connected to the subnet indirect inputs
  - Expanded nodes are placed using Houdini's layout automation
  - File parms channel reference their parent
  - Path parms channel reference their parent (when appropriate)
  - New Push Parms button updates the filters and geometry type throughout the expanded hierarchy (no need to collapse). Note that this does not take hierarchy changes into account, just parameter values.
- FromHoudiniGroupConverter ignores internal groups
- Fixed compatibility issues with Houdini 12.1 (introduced in a14)
- Declared TypeId range

IECoreNuke
- Added support for TCL expressions on SceneCacheReader
- Fixed a few bugs with SceneCacheReader

IECoreArnold
- Fixed TypeId range so it doesn't conflict with IECoreHoudini

IECoreMantra
- Houdini 12.5 compatibility
",10654465
658,False,True,2013-08-15T18:45:43Z,2013-08-15T18:47:56Z,"- IECore :
  - Modified BasicPreset so it works with parameters derived from CompoundParameter
  - Added ObjectPool and ComputationCache classes for providing a unified cache mechanism for cortex objects (used in SceneCache and CachedReader).
  - Removed ModelCache class (SceneInterface and SceneCache replaces that entirely).
- IECoreMaya :
  - Using the newly added GL lambert shader in the maya GL preview.
  - Added geometry snapping to the SceneShape
  - Optimization on the SceneShape by copying previously rendered GL groups at link locations.
- IECoreHoudini :
  - Added support for Cortex loaded geometry in the SceneCache reader.
- IECoreGL :
  - IECoreGL::ToGLTextureConverter option to add missing channels.
  - Removed IECoreGL dependency on GLUT
  - Replaced OpenGL 3 function calls with their 2.1 extensions
  - Added a standard lambert shader to IECoreGL::Shader
  - Fixes in Selector object and making it revert state when destroyed.
- IECoreRI :
  - Deprecated 3delight hack
",10654465
659,False,True,2013-07-31T21:52:12Z,2013-07-31T21:56:42Z,"- General :
  - Ubuntu compilation issues.
- IECore :
  - SceneCache changed to store samples index as a IndexedIO::Directory which is loaded once as opposed to a integer value. Improved performance on large environments.
  - Improvements and bug fixes in LinkedScene associated to the usage of tags and the link attribute. The link attributes are now separated and can be queried in readers such as SceneShape to obtain the actual file,location and the time.
  - Adding constructor for InternedString that accepts a signed 64bit integer for quick conversion from numbers to strings. Used in SceneCache.
- IECoreMaya :
  - Several improvements on the SceneShape node (SceneShapeInterface) and bug fixes.
- IECoreGL :
  - Reverting some optimizations done in the convertion of Meshes to IECoreGL which were not really effective.
",10654465
660,False,False,2019-08-08T14:25:44Z,2019-08-08T14:30:23Z,"Version 2.3.0.0 adds a few rules targeting .NET Core APIs:

NuGet package enhancement only. The core rules engine remains the same. This release upgrades the parser utility for stopping automated builds. See details below.

## Framework Enhancements

- Parser utility shipped with the NuGet package was upgraded with a new `--errors` switch that takes a list of rule ids. If a rule id is found in the results, the parser returns an exit code of 1. This exit code can be used to stop a build if offending rules are found.

## System Requirements
- .NET Compiler API version 2.9
- Puma Scan Visual Studio extension requires Visual Studio v15.8 or higher",71406410
661,False,False,2019-07-19T14:31:44Z,2019-07-19T15:00:09Z,"Version 2.2.0.0 adds a few rules targeting .NET Core APIs:

## Framework Enhancements

- [SEC0120: Missing Authorize Attribute](https://www.pumascan.com/rules/#sec0120-missing-authorize-attribute)
- [SEC0121: CORS ACAO Wildcard](https://www.pumascan.com/rules/#sec0121-cors-any-origin-wildcard)
- [SEC0122: JWT Signature Validation Disabled](https://www.pumascan.com/rules/#sec0122-jwt-signature-validation-disabled)

## System Requirements
- .NET Compiler API version 2.9
- Puma Scan Visual Studio extension requires Visual Studio v15.8 or higher
",71406410
662,False,False,2019-03-29T17:56:15Z,2019-03-29T17:58:23Z,"The version 2.1.0.0 is a release enhances the overall scanning framework with the following:

- Puma.Security.Rules converted to netstandard2.0, which paves the way for us to run the analyzers in VSCode and inside a Docker container

- Visual Studio Extension support for VS2019

### System Requirements

- .NET Compiler API version 2.9
- Puma Scan Visual Studio extension requires Visual Studio v15.8 or higher",71406410
663,False,True,2019-03-28T19:21:36Z,2019-03-28T21:30:13Z,"# v2.1.0.0 Preview

Version 2.1.0.0 is a preview release that enhances the overall scanning framework with the following:

- Puma.Security.Rules converted to netstandard2.0, which paves the way for us to run the analyzers in VSCode and inside a Docker container

- Visual Studio Extension support for VS2019

The NuGet package is not ready for preview, as we are still encountering issues referencing dependencies. That will be released in a coming version.

### System Requirements

- .NET Compiler API version 2.9
- Puma Scan Visual Studio extension requires Visual Studio v15.8 or higher",71406410
664,False,False,2018-08-10T04:16:02Z,2018-08-10T04:33:46Z,"## v2.0.0.1

Version 2.00.1 uses the .NET Compiler API version 2.9. To use this version, you must be running at least Visual Studio 2017 v15.8. For more details, see the Roslyn NuGet Packages Wiki.

Patch release to:
- correctly limit the extension package to Visual Studio 15.7+.
- fix bug in the Code Block Analyzer to handle a more robust set of scenarios.

### System Requirements

- .NET Compiler API version 2.9
- Puma Scan Visual Studio extension requires Visual Studio v15.8 or higher",71406410
665,False,False,2018-08-08T19:20:58Z,2018-08-08T19:23:40Z,"## v.1.0.7

Puma Scan v1.0.7 runs the Roslyn API version 1.3.2, which is supported by Visual Studio 2015 Update 2+ and all Visual Studio 2017 versions. This is the last Puma Scan version that supports Visual Studio 2015. For more details, see the [Roslyn NuGet Packages Wiki](https://github.com/dotnet/roslyn/wiki/NuGet-packages).

Bug fix to improve performance issues that caused Visual Studio builds to hang when encountering unexpected syntax nodes in SEC0025, SEC0026, and SEC0028.

Git Issues Closed:

- [Issue 40](https://github.com/pumasecurity/puma-scan/issues/40)

### System Requirements

- .NET Compiler API version 2.3
- Puma Scan Visual Studio extension requires Visual Studio 2015 Update 3 or higher",71406410
666,False,False,2018-08-07T23:50:56Z,2018-08-08T00:35:37Z,"## v.2.0

Version 2.0 upgrades the Puma Scan analyzers to the current Roslyn API version 2.8.2. To use this version, you must be running at least Visual Studio 2017 v15.7. For more details, see the [Roslyn NuGet Packages Wiki](https://github.com/dotnet/roslyn/wiki/NuGet-packages).

Framework enhancements
 - New code block analyzer base class
 - Consolidation of analyzers

New rules
- SEC0115 - Insecure Random Number Generator
- SEC0116 - Path Tampering: Unvalidated File Path
- SEC0117 - LDAP Injection Path Assignment
- SEC0118 - LDAP Injection Directory Searcher
- SEC0119 - LDAP Injection Filter Assignment
- SEC0031 - Command Injection: Process.Start
- SEC0032 - Command Injection: ProcessStartInfo",71406410
667,False,False,2020-03-25T15:18:50Z,2020-03-11T19:57:37Z,"Enhancements:

* Adds sra.info command to download and extract samples from NCBI using prefetch and fasterq-dump written by NCBI. #27 
* Adds make.clr command. #695 
* Adds clr file type to metastats command. #695 
* Expands batch files. #601 #658
* Adds environment variables to mothur. #601 
* Adds MOTHUR_TOOLS option to allow you to set the location of mothur's external tools at compile time or through the set.dir command at run time. #682
* Adds uchime parameter to chimera.uchime. #682 
* Adds vsearch parameter to chimera.vsearch, cluster, cluster.split commands. #682
* Improves mothur's checkorient option in make.contigs. Also sets checkorient=t by default.
* split.abund command 's cutoff parameter can now be a percentage. Removes fasta file requirement. #263 
* Adds contigsreport to get.seqs and remove.seqs commands. #660 
* Adds processors option to split.groups. #685 
* Adds sets to remove.groups and get.groups commands. #277 
* Adds parallelization to chimera.vsearch when using denovo method. #700 
* Changes filter.seqs fasta file delimantor from '-' to '|' to allow for '-''s in filenames.
* Adds list file output for make.shared with count table.

Bugs:

* Fixes tree.shared distance being used instead of similarity.
* Fixes bug with remove.seqs not removing empty groups from the count table. #675 
* Fixes bug with trim.seqs if no name file is given and allfiles=T. #696 
* Fixes corr.axes bug when metadata files contain zeroed columns.

Binaries:

* Mac Version requires OSX 10.14 or higher
* Windows 10 or higher
* RHEL 7 or greater / Ubuntu 18. 

Binaries include:

* Mac version - includes boost, readline, gsl, hdf5 
* Windows - includes boost
* Ubuntu - includes boost, readline (version 7), gsl
* Linux - includes boost, readline (version 6), hdf5

NOTE: Mothur's external tools (blast, vsearch, uchime, prefetch and fasterq-dump) are included with mothur's binary. They are also available separately for our users who build from source in the Mothur.tools* files.
",3305584
668,False,False,2019-06-24T15:12:27Z,2019-06-24T17:06:50Z,* BUG FIX: Issues with count files,3305584
669,False,False,2019-06-19T13:10:43Z,2019-06-19T16:55:25Z,"* Fixes bug in count table removeGroups functions #626 
* Fixes definitions #633",3305584
670,False,False,2019-05-13T15:34:51Z,2019-05-13T16:57:11Z,"* Updates vsearch version to resolve Windows output format bug. 
* Improves removeOTU functions to increase processing speed. ",3305584
671,False,False,2019-10-17T13:52:06Z,2019-10-21T16:01:52Z,"* Adds list to split.groups #624
* Adds estimator.single command. #164 
* Passes CXX variables to uchime makefile. #614 
* Modifies output files from dist.shared, summary.single and summary.shared. You may run with or without rareification, but not both. #607 
* Improves speed and resource management for align.seqs command. #647
* Improves mothur's logging features.
* Adds qfile option to make.contigs. #650 
* Adds auto decompress feature to make.contigs if gz read fails. #634 
* Improves speed of dist.seqs and pairwise.seqs. #653 
* Adds 2 column pacbio file option to fastq.info. #649 
* Windows users can now run make.contigs with *.gz files.

Bugs:
* Removes empty groups before printing count table. #641 
* Changes datatype for opti method to correct overflow.
* Makes current file class thread safe. Caused random crashes in pre.cluster. #643 
* get.oturep command wasn't handling multiple labels. Removed labels parameter and modifies cutoff to act like cluster commands. ie. cutoff=0.01-0.03. Also failing with abundance method using count file without group information #656 #575  
* Trim.seqs was not removing paired primers. #667 
* get/remove.lineage not producing a accnos file.

Binaries:

* Mac Version requires OSX 10.14 or higher
* Windows 10 or higher
* RHEL 7 or greater / Ubuntu 18. 

Binaries include:

* Mac version - includes boost, readline, gsl, hdf5 
* Windows - includes boost
* Ubuntu - includes boost, readline (version 7), gsl
* Linux - includes boost, readline (version 6), hdf5

NOTE: Mothur's external tools (blast, vsearch and uchime) are included with mothur's binary. They are also available separately for our users who build from source in the Mothur.tools* files.
",3305584
672,False,False,2019-04-29T13:39:34Z,2019-04-29T17:32:20Z,"Enhancements:
* Sets random seed to 19760620 at start of mothur. #600 
* Adds constaxonomy file to list.otus command. #581 
* Adds rename option to the get.oturep command. #555 
* Adds ability to comment out lines in the file file. #560 
* Adds merge.otus command. #558 
* Adds processors option to rarefaction.single and rarefaction.shared. #544 
* Expands make.shared to allow for count files with no groups. #563 
* Adds fastq to split.groups command. #499 
* Adds Oligos class and split.groups commands fastq.info. #499 
* Merge.count command ignores duplicate names. #259 
* Removes catchall dependency. #164 
* Improves help command. #183 
* Adds tree parameter to sub.sample command.
* Adds withreplacement parameter to sub.sample command. #262 
* Adds withreplacement parameter to get.communitytype, dist.shared, rarefaction.shared, summary.single, summary.shared, tree.shared, unifrac.unweighted, unifrac.weighted. #262 
* Adds map file to make.shared output from count file. This mapping file can then be used with the rename.seqs command to modify the associated files. #583 
* Adds taxonomy parameter to rename.seqs.
* Removes multiple inputs from mothur. #379 
* Reduces memory needed for pre.cluster #589 
* Adds count parameter to count.seqs to inflate or deflate count tables. 
* Updates vsearch version to 2.11.1 #585
* Adds vsearch parameter to chimera.vsearch so that you can specify location of vsearch executable. #586
* Adds constaxonomy file to subsample command. #582

Bug Fixes:
* Adds isEqual functions for floats and doubles. Fixes Ubuntu error with filter.shared (-0.01 != -0.01) returned true.
* Fixes file extensions of output files in pcr.seqs.
* Fixes sub.sample with multiple labels bug. #559 
* Fixes bug with otu.association metadata file.
* Fixes pcr.seqs end issue with keepdots=f.
* Fixes bug in remove.lineage with cons.taxonomy and shared files. #580 
* Removes extra space from output. #603 
* Fixes output filename for make.group. #602 
",3305584
673,False,False,2019-01-30T14:03:11Z,2019-01-30T15:14:19Z,"Enhancements
* Adds timing to pre.cluster deconvolute steps.

Bug Fixes
* classify.seqs and filter.seqs command may eliminate reads causing file mismatches. 
* get.oturep bug with abundance method.",3305584
674,False,False,2019-01-22T17:45:31Z,2019-01-23T18:48:51Z,"* Updated on 1.23.19 to include get.oturep fix

Enhancements:
* Adds rename option to the get.oturep command. #555 
* Adds ability to comment out lines in the file file. #560 
* Adds merge.otus command. #558 
* Adds processors option to rarefaction.single and rarefaction.shared. #544 
* Expands make.shared to allow for count files with no groups. #563 
* Adds fastq to split.groups command. #499 
* Adds Oligos class and split.groups commands fastq.info. #499 
* Merge.count command ignores duplicate names. #259 
* Removes catchall dependency. #164 
* Improves help command. #183 

Bug Fixes:
* Adds isEqual functions for floats and doubles. Fixes Ubuntu error with filter.shared.
* Fixes file extensions of output files in pcr.seqs.
* Fixes sub.sample with multiple labels bug. #559 
* Fixes bug with otu.association metadata file.
* Fixes pcr.seqs end issue with keepdots=f.
* Fixes get.oturep crash with abundance method. #575 ",3305584
675,False,False,2018-11-26T15:44:31Z,2018-11-26T15:45:10Z,"Bug Fix:
* Fixes file mismatch caused by pre.cluster command run with a count file. #556 ",3305584
676,False,True,2019-04-02T14:16:23Z,2019-04-02T18:16:57Z,"Enhancements:
* Adds rename option to the get.oturep command. #555 
* Adds ability to comment out lines in the file file. #560 
* Adds merge.otus command. #558 
* Adds processors option to rarefaction.single and rarefaction.shared. #544 
* Expands make.shared to allow for count files with no groups. #563 
* Adds fastq to split.groups command. #499 
* Adds Oligos class and split.groups commands fastq.info. #499 
* Merge.count command ignores duplicate names. #259 
* Removes catchall dependency. #164 
* Improves help command. #183 
* Adds tree parameter to sub.sample command.
* Adds withreplacement parameter to sub.sample command. #262 
* Adds withreplacement parameter to get.communitytype, dist.shared, rarefaction.shared, summary.single, summary.shared, tree.shared, unifrac.unweighted, unifrac.weighted. #262 
* Adds map file to make.shared output from count file. This mapping file can then be used with the rename.seqs command to modify the associated files. #583 
* Adds taxonomy parameter to rename.seqs.
* Removes multiple inputs from mothur. #379 
* Reduces memory needed for pre.cluster #589 
* Adds count parameter to count.seqs to inflate or deflate count tables. 
* Updates vsearch version to 2.11.1 #585
* Adds vsearch parameter to chimera.vsearch so that you can specify location of vsearch executable. #586
* Adds constaxonomy file to subsample command. #582

Bug Fixes:
* Adds isEqual functions for floats and doubles. Fixes Ubuntu error with filter.shared (-0.01 != -0.01) returned true.
* Fixes file extensions of output files in pcr.seqs.
* Fixes sub.sample with multiple labels bug. #559 
* Fixes bug with otu.association metadata file.
* Fixes pcr.seqs end issue with keepdots=f.
* Fixes bug in remove.lineage with cons.taxonomy and shared files. #580 ",3305584
677,False,False,2018-11-09T14:35:41Z,2018-11-09T15:12:16Z,"* Add sample info to tax.summary in biom.info command. #531 
* Updates biom.info to read hdf5 biom files. #178 
* make.contigs change to quality score calculation. #468 
* Adds oldfasta and column parameters to pairwise.seqs command.
* Adds testing features
* Adds count file to shared file option in make.shared command. #519
* Updates boost version to 1.68.0.
* Adds fasta, taxonomy, name and count options to merge.files. #506
* Updates get.oturep command to use optiMatrix. Reduces time and memory needed. #465
* Prevent excessive log file size by limiting errors and warnings for commands to 10. #420
* Adds relabund to create.database command. #478
* Adds multiple cutoffs to cluster command for opti, agc and dgc. #305
* Adds accnos parameter to filter.shared. #293
* Adds shared and groups parameters to get.rabund command. #325
* Adds unoise, tree, deblur methods to pre.cluster command.

Bugs
* unifrac command crashes with subsample option.
* cluster command nearest neighbor bug fix
* collect.shared ""[ERROR]: requesting groups not present in files, aborting."" error #497
* Removes extra ""quit()"" output. #464
* Fixes make.contigs group file issue with *.gz files. #480
* Fixes pcr.seqs file mismatch. #522
* Tree.shared command results with shared file. #535 
* Make.contigs group names. https://forum.mothur.org/t/make-contigs-with-oligo-creating-new-names/3542
* Fixed 1.40.1 - Mothur's logfile created in mothur's executable location, instead of current working directory. #436
* Fixed 1.40.1 - Smart distancing hangs if label not found in file. #441 
* Fixed 1.40.2 - Fixes *contigs.report file append issue that resulted in reads missing from report.
* Fixed 1.40.3 - get.coremicrobiome command segfault with shared option. #445
* Fixed 1.40.3 - merge.files not finding input files. #438
* Fixed 1.40.3 - sparcc improves speed with threaded code and corrects small bug.
* Fixed 1.40.4 - Cluster commands printing of list file. #454
* Fixed 1.40.4 - Cluster.split merge of list files bug #460
* Fixed 1.40.4 - Cluster commands - method agc and dgc do not require distance matrix. #456
* Fixed 1.40.4 - Trim.seqs multiple matches error. #427
* Fixed 1.40.4 - Pre.cluster name / group error. #461
* Fixed 1.40.4 - Pre.cluster single sample crash. #451
* Fixed 1.40.4 - pcr.seqs and screen.seqs (with no bad reads detected), causing accnos file issue.
* Fixed 1.40.5 - get.lineage failing to find taxons. #477
* Fixed 1.40.5 - screen.seqs not making *good.groups or *good.count_table files. #476
* Fixed 1.40.5 - get.communitytype crash. #472
* Fixed 1.40.5 - Fixes make.contigs gz file read issues. #471
* Fixed 1.40.5 - Solves seq.error crash #463
* Fixed 1.40.5 - Resolves trim.seqs ""could not open"" error. #444",3305584
678,False,False,2018-06-19T14:16:02Z,2018-06-19T18:12:29Z,"
Enhancements
* [make.contigs](https://www.mothur.org/wiki/make.contigs) change to quality score calculation.   #468 

Bug Fixes

* [get.lineage](https://www.mothur.org/wiki/get.lineage) failing to find taxons. #477 
* [screen.seqs](https://www.mothur.org/wiki/screen.seqs) not making *good.groups or *good.count_table files. #476 
* [get.communitytype](https://www.mothur.org/wiki/get.communitytype) crash. #472 
* Fixes [make.contigs](https://www.mothur.org/wiki/make.contigs) gz file read issues. #471 
* Solves [seq.error](https://www.mothur.org/wiki/seq.error) crash #463 
* Resolves [trim.seqs](https://www.mothur.org/wiki/trim.seqs) ""could not open"" error. #444 

Binaries

Mac Version requires OSX 10.13 or higher
Windows 10 or higher
All linux versions contain the same files with the exception of the mothur executable. The Mothur.linux_64.zip contains a dynamically linked copy of mothur. The Mothur.linux_64.noReadLine.zip contains a dynamically linked copy of mothur built without the readline library. The readline library allows you to use the arrow keys to scroll through previous commands within mothur in interactive mode. To use the regular linux version you must have the readline libraries installed. A few of our mothur enthusiasts do not have readline and don’t want to install it so we made a version without that feature.

",3305584
679,False,False,2018-05-31T14:18:46Z,2018-05-31T16:12:32Z,"Bug Fixes:

* Cluster commands printing of list file. #454 
* Cluster.split merge of list files bug #460 
* Cluster commands - method agc and dgc do not require distance matrix. #456 
* Trim.seqs multiple matches error. #427 
* Pre.cluster name / group error. #461
* Pre.cluster single sample crash. #451 
* pcr.seqs and screen.seqs (with no bad reads detected), causing accnos file issue.

Binaries
* Mac Version requires OSX 10.13 or higher
* Windows 10 or higher
* All linux versions contain the same files with the exception of the mothur executable. The Mothur.linux_64.zip contains a dynamically linked copy of mothur.  The Mothur.linux_64.noReadLine.zip contains a dynamically linked copy of mothur built without the readline library. The readline library allows you to use the arrow keys to scroll through previous commands within mothur in interactive mode. To use the regular linux version you must have the readline libraries installed. A few of our mothur enthusiasts do not have readline and don’t want to install it so we made a version without that feature.

",3305584
680,False,False,2018-04-30T15:47:39Z,2018-04-30T17:39:55Z,"Bug Fixes:
* get.coremicrobiome command segfault with shared option. #445 
* merge.files not finding input files. #438 
* sparcc improves speed with threaded code and corrects small bug.",3305584
681,False,True,2018-09-25T19:33:24Z,2018-09-27T16:11:14Z,"Feature Updates
* Adds oldfasta and column parameters to pairwise.seqs command.
* Adds testing features
* Adds count file to shared file option in make.shared command. #519 
* Updates boost version to 1.68.0. 
* Adds fasta, taxonomy, name and count options to merge.files. #506 
* Updates get.oturep command to use optiMatrix. Reduces time and memory needed. #465 
* Prevent excessive log file size by limiting errors and warnings for commands to 10. #420 
* Adds relabund to create.database command. #478 
* Adds multiple cutoffs to cluster command for opti, agc and dgc. #305 
* Adds accnos parameter to filter.shared. #293 
* Adds shared and groups parameters to get.rabund command. #325 

Bug Fixes
* unifrac command crashes with subsample option.
* cluster command nearest neighbor bug fix
* collect.shared ""[ERROR]: requesting groups not present in files, aborting."" error #497 
* Adds location to merge.files. #438 
* Removes extra ""quit()"" output. #464
* Fixes make.contigs group file issue with *.gz files. #480 
* Fixes pcr.seqs file mismatch. #522

Binaries
* Mac Version requires OSX 10.13 or higher
* Windows 10 or higher
* All linux versions contain the same files with the exception of the mothur executable. The Mothur.linux_64.zip contains a dynamically linked copy of mothur.  The Mothur.linux_64.noReadLine.zip contains a dynamically linked copy of mothur built without the readline library. The readline library allows you to use the arrow keys to scroll through previous commands within mothur in interactive mode. To use the regular linux version you must have the readline libraries installed. A few of our mothur enthusiasts do not have readline and don’t want to install it so we made a version without that feature.

AMI
* You can run mothur 1.41.0 on Amazon with the following instructions, [Mothur_AMI](https://mothur.org/wiki/Mothur_AMI)",3305584
682,False,False,2018-04-23T13:15:44Z,2018-04-23T14:02:15Z,"Bug Fixes
* Fixes *contigs.report file append issue that resulted in reads missing from report.",3305584
683,False,False,2018-04-16T15:47:09Z,2018-04-16T18:14:04Z,"Bug Fixes
* Mothur's logfile created in mothur's executable location, instead of current working directory. #436 
* Smart distancing hangs if label not found in file. #441
",3305584
684,False,False,2018-04-10T11:52:08Z,2018-04-06T16:52:16Z,"Feature Updates
* Adds summary, contigsreport, alignreport  parameters to [summary.seqs](https://www.mothur.org/wiki/Summary.seqs) command. #319
* Reduces memory usage for [screen.seqs](https://www.mothur.org/wiki/Screen.seqs) #319 
* Changes [align.seqs](https://www.mothur.org/wiki/align.seqs) flip parameter default to true.  This means if you sequence produces a poor alignment in the forward direction, mothur will align the reverse compliment and choose the better alignment. 
* Adds unique method to [cluster](https://www.mothur.org/wiki/cluster) command. #340 
* Adds opti method to [mgcluster](https://www.mothur.org/wiki/mgcluster) command. #342 
* Speed and memory improvements for commands that use shared files. #357 #347 
* Allow for () characters in taxonomy definitions. #350 
* Autodetect number of available processors and use all available.
* Removes processors parameter from [chimera.bellerophon](https://www.mothur.org/wiki/chimera.bellerophon)
* Updates to mothur's log file management. #377 
* Improves randomization in unifrac commands.
* Rewrite of all of mothur's threaded code.
* Adds flow parameter to [split.groups](https://www.mothur.org/wiki/split.groups) command.
* Fixes blast path issue in classify.seqs. #403 
* Adds additional format checks for [make.sra](https://www.mothur.org/wiki/Make.sra) command inputs. #410 

Bug Fixes
* [make.file](https://www.mothur.org/wiki/Make.file) group names incorrect when full path names are in file file.
* [pcr.seqs](https://www.mothur.org/wiki/pcr.seqs) command was trimming extra base when using the start and end parameters. #348 
* [pcr.seqs](https://www.mothur.org/wiki/pcr.seqs) command ""name mismatch"" error when using paired primers and keepdots=f. 
* Fixes segfault error for commands that use subsampling. #357 #347 
* Fixes [chimera.vsearch](https://www.mothur.org/wiki/chimera.vsearch) screen output. #309 
* Fixes out of bounds error in heatmap commands. #363 
* Missing '/' and '\\' dividing filename and directory in default places to look for files.  This caused files not to be found. #364 
* Fixes [seq.error](https://www.mothur.org/wiki/seq.error) seg fault. #280 
* Adds deliminator to make.groups output file for multiple groups. mergegroups -> merge.groups. #384 
* Fixes seeded random issue with [classify.seqs](https://www.mothur.org/wiki/classify.seqs) and [lefse](https://www.mothur.org/wiki/lefse). #416 
* Fixes get.lineage and remove.lineage partial match bug. #399 
* Fixes pvalue bug in homova command for Windows. #408 
* Updates help and fixes redirect bug. #387 


Binaries
* Mac Version requires OSX 10.13 or higher
* Windows 10 or higher
* All linux versions contain the same files with the exception of the mothur executable. The Mothur.linux_64.zip contains a dynamically linked copy of mothur.  The Mothur.linux_64.noReadLine.zip contains a dynamically linked copy of mothur built without the readline library. The readline library allows you to use the arrow keys to scroll through previous commands within mothur in interactive mode. To use the regular linux version you must have the readline libraries installed. A few of our mothur enthusiasts do not have readline and don’t want to install it so we made a version without that feature.

AMI
* You can run mothur 1.40.0 on Amazon with the following instructions, [Mothur_AMI](https://mothur.org/wiki/Mothur_AMI)",3305584
685,False,False,2017-03-06T21:39:18Z,2017-03-06T21:45:57Z,"Feature Updates
- Updates mothur to use seeded mersenne_twister_engine to randomize.  This improves random distribution and resolves the Windows subsampling discrepancies. #311 

Binaries
- Mac Version requires OSX 10.12 or higher
- Windows 10 or higher
- Both linux versions contain the same files with the exception of the mothur executable.  The Mothur.linux_64.noReadLine.zip contains a copy of mothur built without the readline library.  The readline library allows you to use the arrow keys to scroll through previous commands within mothur in interactive mode.  To use the regular linux version you must have the readline libraries installed. A few of our mothur enthusiasts do not have readline and don’t want to install it so we made a version without that feature.
",3305584
686,False,False,2017-02-27T16:06:04Z,2017-02-23T21:29:47Z,"Feature Updates
- Adds contigsreport to current files saved by mothur. #291 

Bug Fixes
- Fixes bug with shortcut files in [classify.seqs](http://www.mothur.org/wiki/classify.seqs) command. #307 

Binaries
- Mac Version requires OSX 10.12 or higher
- Windows 10 or higher
- Both linux versions contain the same files with the exception of the mothur executable.  The Mothur.linux_64.noReadLine.zip contains a copy of mothur built without the readline library.  The readline library allows you to use the arrow keys to scroll through previous commands within mothur in interactive mode.  To use the regular linux version you must have the readline libraries installed. A few of our mothur enthusiasts do not have readline and don’t want to install it so we made a version without that feature.
",3305584
687,False,False,2017-02-17T00:32:45Z,2017-02-17T15:35:57Z,"Feature Updates:
- Adds file mismatch check to [summary.seqs](http://www.mothur.org/wiki/summary.seqs)

Bug Fixes:
- [chimera.vsearch](http://www.mothur.org/wiki/chimera.vsearch) removing last character of sequence names when processing with a reference.  Not an issue with denovo method.  #306  
- Fixes [summary.tax](http://www.mothur.org/wiki/summary.tax) summary file printing issue. 
- Fixes bug on start ""[ERROR]: basic_string::substr: __pos (which is 18446744073709551615) > this->size()...""
- Fixes bug with the [rename.file](http://www.mothur.org/wiki/rename.file) command that occurs if outputdir is used and multiple files are provided.
- Fixes ls bug for Windows users in [make.file](http://www.mothur.org/wiki/make.file) command.

Binaries
- Mac Version requires OSX 10.12 or higher
- Windows 10 or higher
- Both linux versions contain the same files with the exception of the mothur executable.  The Mothur.linux_64.noReadLine.zip contains a copy of mothur built without the readline library.  The readline library allows you to use the arrow keys to scroll through previous commands within mothur in interactive mode.  To use the regular linux version you must have the readline libraries installed. A few of our mothur enthusiasts do not have readline and don’t want to install it so we made a version without that feature.
",3305584
688,False,False,2017-02-03T16:48:47Z,2017-02-06T15:00:51Z,"Feature Updates:
- Adds runsensspec parameter to [cluster.split](http://www.mothur.org/wiki/cluster.split). Default=T.

Bug Fixes:
- [pre.cluster](http://www.mothur.org/wiki/pre.cluster) (without groups) not clustering properly. #301 
- [make.contigs](http://www.mothur.org/wiki/make.contigs) fixes ""off by one"" name mismatch error. #303 
- [rename.file](http://www.mothur.org/wiki/rename.file) unable to automatically rename with output directory specified.
- [cluster](http://www.mothur.org/wiki/cluster) and [cluster.split](http://www.mothur.org/wiki/cluster.split) improper printing of list file when using name file option.  Does not effect printing of the list file when clustered with count file.
- [cluster](http://www.mothur.org/wiki/cluster) and [cluster.split](http://www.mothur.org/wiki/cluster.split) improper printing of list file when using phylip file option.  Does not effect printing of the list file when clustered with column file.
- Incorrect taxlevel printed in *.tax.summary file.

Binaries
- Mac Version requires OSX 10.12 or higher
- Windows 10 or higher
",3305584
689,False,False,2017-03-20T18:24:08Z,2017-03-20T20:05:56Z,"Feature Updates
* Adds contigsreport to current files saved by mothur. #291 
* Improves randomization functions
* Sets method driven cutoffs in cluster commands. For methods opti, agc and dgc (cutoff=0.03) which will create OTU for distance 0.03.  For methods average, nearest, furthest and weighted (cutoff=0.15) which may be adjusted down due to the sparse matrix, [Why does the cutoff change?](https://mothur.org/wiki/Frequently_asked_questions#Why_does_the_cutoff_change_when_I_cluster_with_average_neighbor.3F)

Bug Fixes
* Fixes [make.lefse](https://mothur.org/wiki/Make.lefse) output. #314 
* Fixes [make.file](https://mothur.org/wiki/Make.file) segfault.  #316 
* Fixes ""couldn't find OTUID"" [make.biom](https://mothur.org/wiki/Make.biom) error.
* Fixes Windows subsampling issue. #317 

Binaries
* Mac Version requires OSX 10.12 or higher
* Windows 10 or higher
* All linux versions contain the same files with the exception of the mothur executable. The Mothur.linux_64_static.zip contains a statically linked copy of mothur.  The Mothur.linux_64.zip contains a dynamically linked copy of mothur.  The Mothur.linux_64.noReadLine.zip contains a dynamically linked copy of mothur built without the readline library. The readline library allows you to use the arrow keys to scroll through previous commands within mothur in interactive mode. To use the regular linux version you must have the readline libraries installed. A few of our mothur enthusiasts do not have readline and don’t want to install it so we made a version without that feature.",3305584
690,False,False,2017-01-24T17:15:27Z,2017-01-24T21:13:38Z,"New Commands

Feature Updates
- Changes default clustering method to opti.
- Adds agc and dgc vsearch clustering methods for Windows users. #215 
- Adds [chimera.vsearch](http://www.mothur.org/wiki/chimera.vsearch) command for Windows users. #215
- Major speed improvement for [pre.cluster](http://www.mothur.org/wiki/pre.cluster) command with aligned files.  #220 
- Major memory requirement reduction for [pre.cluster](http://www.mothur.org/wiki/pre.cluster) command with by group option.  #220  
- Adds constaxonomy file to current files saved by mothur.
- Control-C handling: In script or batch mode exit mothur. In interactive mode exit command. #212 http://www.mothur.org/forum/viewtopic.php?f=5&t=4102&p=12431#p12431
- Adds blastdir parameter to [set.dir](http://www.mothur.org/wiki/set.dir) command. #223 
- Taxonomy files can now contain spaces in the taxon names. #265 
- Makes refasta and repnames parameters optional for [create.database](http://www.mothur.org/wiki/create.database) command. #32 
- Removes cutoff adjust in [dist.seqs](http://www.mothur.org/wiki/dist.seqs) command.  #274 
- Adds trim parameter to [make.sra](http://www.mothur.org/wiki/make.sra) command for use with sff files.

Bug Fixes
- Fixes Windows multiple processors with groups crash - [chimera.uchime](http://www.mothur.org/wiki/chimera.uchime) command.
- Fixes Windows bug with [make.file](http://www.mothur.org/wiki/make.file) command. #255 
- Creates unique group names for 3 column format [make.file](http://www.mothur.org/wiki/make.file) command. #270 
- Fixes bug with number of ""taxon""_unclassifeds appended to taxonomy in [classify.seqs](http://www.mothur.org/wiki/classify.seqs).
- Eliminates zero abundance OTUs created by some floating point biom files converted to shared files [make.shared](http://www.mothur.org/wiki/make.shared).
- Floating point exception in [sparcc](http://www.mothur.org/wiki/sparcc) command.
- Fixes bug where mothur was not finding matches for sequence names ""off by one character"" in the name. [make.contigs](http://www.mothur.org/wiki/make.contigs)
- Fixes bug with ""find"" command for Linux user in [make.file](http://www.mothur.org/wiki/make.file)
- Fixes bug with optimize parameter using alignreport file in [screen.seqs](http://www.mothur.org/wiki/screen.seqs) command. #288 

Download

Registered Users

Binaries
- Mac Version requires OSX 10.12 or higher",3305584
691,False,False,2016-08-09T16:44:08Z,2016-08-09T18:12:33Z,"New Commands
- [merge.count](http://www.mothur.org/wiki/merge.count) command combines count files. #259 

Feature Updates
- Removes hard parameter from [cluster](http://www.mothur.org/wiki/cluster), [cluster.classic](http://www.mothur.org/wiki/cluster.classic) and [cluster.split](http://www.mothur.org/wiki/cluster.split) commands.  All commands now use hard=T.
- Improved [help](http://www.mothur.org/wiki/help) command. #257 
-  [Make.file](http://www.mothur.org/wiki/make.file) command is more flexible with filenames. #243 
- Adds prefix parameter to [Make.file](http://www.mothur.org/wiki/make.file) command. #251 
- Changes bad character in group names error to warning. Modifies group names with '-' characters in output filenames to avoid downstream issues.

Bug Fixes
- Fixes bug with output directory in [make.group](http://www.mothur.org/wiki/make.group) command.
- Fixes filename expansion issue [make.contigs](http://www.mothur.org/wiki/make.contigs). http://www.mothur.org/forum/viewtopic.php?f=3&t=5869&p=14857#p14857
- Fixes group name issue with oligos file option in [get.mimarkspackage](http://www.mothur.org/wiki/get.mimarkspackage) command.

Download

Registered Users

Binaries
- Mac Version requires OSX 10.11 or higher
",3305584
692,False,False,2016-06-20T17:45:18Z,2016-06-20T18:45:32Z,"- Fixes make.contigs gz file error - http://www.mothur.org/forum/viewtopic.php?f=4&t=4210&sid=8303c7614b85114d0587fc03fa3fefce
",3305584
693,False,False,2016-06-09T16:36:46Z,2016-06-09T19:36:01Z,"Fixes file divide bug with make.contigs for certain sequence name types.
",3305584
694,False,False,2016-05-11T15:40:31Z,2016-05-11T15:41:32Z,"- Fixes chimera.uchime size= instead of ab= for datasets run without references or groups. #236 
",3305584
695,False,False,2016-05-03T13:45:28Z,2016-05-03T19:07:34Z,"- Fixes bug with agc and dgc methods in the [cluster.split](http://www.mothur.org/wiki/cluster.split) and [cluster](http://www.mothur.org/wiki/cluster) commands that added one duplicate names to OTUs.  
",3305584
696,False,False,2016-04-18T18:36:51Z,2016-04-18T19:31:18Z,"Bug Fixes 
- Stops sort of user created list file.
- Fixes bug introduced in 1.37 that removed barcodes and primers from fastq files instead of simply identifying samples for make.sra command.
- Fixes bug with merge.groups initialization of the shared file.
- Cleans up makefile.
- Removes extra unclassified level from taxonomy files
- Fixes make.contigs gz file error - http://www.mothur.org/forum/viewtopic.php?f=4&t=4210&sid=8303c7614b85114d0587fc03fa3fefce
",3305584
697,False,False,2016-07-20T18:04:56Z,2016-07-20T18:49:46Z,"Hey mothur users,

We’re happy to announce the release of v.1.38.0! This release primarily has a bunch of random bug fixes that we were anxious to get out to you. Two new commands should strike your interest. First, we have introduced [rename.file](http://www.mothur.org/wiki/rename.file), which renames files so that you don't have to worry about using your system commands and updates the ""current"" files. Second, building off the introduction of VSEARCH functionality in the last release, we've created [chimera.vsearch](http://www.mothur.org/wiki/chimera.vsearch) to detect chimeras using VSEARCH. Their benchmarking indicates that it performs similar to UCHIME, which is available as [chimera.uchime](http://www.mothur.org/wiki/chimera.uchime).

In addition to improvements to mothur, since the last release we've also published several papers and blog posts that you should definitely check out.

_Blog:_
- [The mothur AMI for work on Amazon's Web Server](http://blog.mothur.org/2016/07/12/mothur-AMI/)
- [How to customize your reference alignment for non-V4 data](http://blog.mothur.org/2016/07/07/Customization-for-your-region/)

_New Commands_
- [rename.file](http://www.mothur.org/wiki/rename.file) - renames file and updates current files saved by mothur.
- [chimera.vsearch](http://www.mothur.org/wiki/chimera.vsearch) - detects chimeras using vsearch software package. #239 

_Feature Updates_
- Removes [hcluster](http://www.mothur.org/wiki/Hcluster) command. It is really really slow and we don't recommend it. #208 
- Removes save option which kept references in memory.  #208 
- Removes [clear.memory](http://www.mothur.org/wiki/clear.memory) command which worked with the save option. #208 
- Removes [pds.pipeline](http://www.mothur.org/wiki/pds.pipeline) command. #208 
- Command line mode returns exit-code to indicate failure. #151 
- Removes reftaxonomy parameter from [classify.otu](http://www.mothur.org/wiki/classify.otu) and [summary.tax](http://www.mothur.org/wiki/summary.tax). #241 
- Removes large parameter from [count.seqs](http://www.mothur.org/wiki/count.seqs) command. #203 
- Allows [make.biom](http://www.mothur.org/wiki/make.biom) with picrust option to handle mothur's new parentTaxon_unclassified format. #241 
- Adds mothur's location as a default file location to check. Reduces unable to open file errors. #231 
- Adds count parameter to [sens.spec](http://www.mothur.org/wiki/sens.spec) command. #225 
- Clarifies [seq.error](http://www.mothur.org/wiki/seq.error) command output. #175 
- Adds sets parameter to [lefse](http://www.mothur.org/wiki/lefse) command. #234 
- Removes indexFile requirement for using NONE option in oligos file.  [make.contigs](http://www.mothur.org/wiki/make.contigs). #193 
- [make.contigs](http://www.mothur.org/wiki/make.contigs) command will skip blank file pairs. #233 
- Warn about illegal characters in group names to prevent downstream analysis issues. #37 
- Adds rdiffs to [pcr.seqs](http://www.mothur.org/wiki/pcr.seqs) command to allow for setting different diffs for the forward and reverse primers. #244 

_Bug Fixes_
- Mothur can handle whitespace in command lines. #191 
- Fixes gradient bar on [heatmap.sim](http://www.mothur.org/wiki/heatmap.sim) command. #237  
- Fixes bug with [classify.otu](http://www.mothur.org/wiki/classify.otu) persample option.
- Fixes bug with agc method in [cluster](http://www.mothur.org/wiki/cluster) and [cluster.split](http://www.mothur.org/wiki/cluster.split)
- Fixes bug with [summary.tax](http://www.mothur.org/wiki/summary.tax) command not including name file counts in *tax.summary.
- Fixes RAM output for linux [get.current](http://www.mothur.org/wiki/get.current). #232 
- Error generated when filenames are too long for uchime program. #226 
- Fixes cutoff adjust for agc and dgc clustering methods. #254 

Binaries
- Mac Version requires OSX 10.11 or higher
",3305584
698,False,False,2015-07-27T14:18:26Z,2016-01-29T14:34:24Z,"Version 1.36.0 with 2 Bug Fixes
- [make.file](http://www.mothur.org/wiki/Make.file) - Linux version only bug. Caused error messages about find command -maxdepth parameter.
- [classify.rf](http://www.mothur.org/wiki/Classify.rf) - Design file change caused results to be all zeros.
",3305584
699,False,False,2016-04-05T15:40:01Z,2016-04-05T21:59:22Z,"Hey mothur users,

We’re happy to announce the long awaited v.1.37.0! There are some pretty sweet features in the new release that I’d like to highlight for you. _First_, for the mac and unix users, we’ve added two methods to [cluster](http://www.mothur.org/wiki/cluster) and [cluster.split](http://www.mothur.org/wiki/cluster.split) to allow you to use abundance and distance-based greedy clustering using the free and open source VSEARCH program. This release was a bit delayed because we’ve been trying to get the windows version to work, but haven’t gotten as far as we’d like. The next release should include it. I would point out that if you are doing 16S rRNA gene sequencing you want to stick with the defaults - this is mostly for those doing ITS. You can see two of our recent papers published in [PeerJ](https://peerj.com/articles/1487/) and [mSystems](http://biorxiv.org/content/biorxiv/early/2016/03/26/042812.full.pdf) for more discussion of this. _Second_, we’ve added a [make.file](http://www.mothur.org/wiki/make.file) command that will allow you to generate a files file for use in make.contigs. This command should significantly simplify the process of generating the file. _Third_, we've created a [biom.info](http://www.mothur.org/wiki/Biom.info) command that will convert a biom formatted file to mothur-formatted shared and assorted taxonomy files. There have also been a number of other new features and bug fixes that you should check out on the [release page](https://github.com/mothur/mothur/releases/tag/v1.37.0).

In addition to improvements to mothur, since the last release we've also published several papers and blog posts that you should definitely check out.

_Blog:_
- [mothur and QIIME](http://blog.mothur.org/2016/01/12/mothur-and-qiime/)
- [No, greengenes' reference alignment hasn't improved](http://blog.mothur.org/2015/08/04/No-greengenes-hasnt-improved/)
- [README for SILVA v123 reference files](http://blog.mothur.org/2015/12/03/SILVA-v123-reference-files/)
- [Suck until you don't](http://blog.mothur.org/2016/01/04/Suck-until-you-dont/)

_Papers:_
- [Application of database-independent approach to assess the quality of OTU picking methods](http://biorxiv.org/content/biorxiv/early/2016/03/26/042812.full.pdf)
- [De novo clustering methods outperform reference-based methods for assigning 16S rRNA gene sequences to operational taxonomic units](De novo clustering methods outperform reference-based methods for assigning 16S rRNA gene sequences to operational taxonomic units)
- [Sequencing 16S rRNA gene fragments using the PacBio SMRT DNA sequencing system](https://peerj.com/articles/1869/)

That's all until next time, enjoy! As always, feel free to let us know what you think or if there are additional features you'd like to see in mothur...

## New Commands
- [biom.info](http://www.mothur.org/wiki/Biom.info) - reads biom file and creates shared, taxonomy, constaxonomy and tax.summary files. #82 

## Feature Updates
- Adds agc and dgc methods to the [cluster.split](http://www.mothur.org/wiki/cluster.split) and [cluster](http://www.mothur.org/wiki/cluster) commands from the vsearch software package.  Not available for Windows. #169 
- [merge.groups](http://www.mothur.org/wiki/Merge.groups) - adds count option.  http://www.mothur.org/forum/viewtopic.php?f=5&t=3698 #88.  Adds method and fasta parameter. Method options are sum, average and median.  Default=sum. #105 
- [get.groups](http://www.mothur.org/wiki/Get.groups) / [remove.groups](http://www.mothur.org/wiki/Remove.groups)  - adds phylip and column options. #79 
- [get.seqs](http://www.mothur.org/wiki/Get.seqs) / [remove.seqs](http://www.mothur.org/wiki/Remove.seqs) - Checks for repeat sequences names and eliminates them.  Allows users creating their own templates to easily remove duplicate sequences from their reference files. #159 
- Remove MPI source code - MPI version is slower than non-MPI version. No advantage to using it. #144 
- [unique.seqs](http://www.mothur.org/wiki/Unique.seqs) - adds format parameter. Options are name and count. #125 
- Simplify makefile #157 
- [make.file](http://www.mothur.org/wiki/Make.file) - adds numcols parameter. Options 2 or 3. Default=3, meaning groupName forwardFastq reverseFastq. The groupName is made from the beginning part of the forwardFastq file. Everything up to the first '_' or if no '_' is found then the root of the forwardFastq filename. #162 
- Output number of warning and errors detected.
- [rename.seqs](http://www.mothur.org/wiki/Rename.seqs) - adds file, map, qfile and contigsreport parameters.  The map file allows you to revert sequence names back to original. Works with make.contigs to automatically rename sequences. #132 
- [make.contigs](http://www.mothur.org/wiki/Make.contigs) - adds rename parameter, default=t.  Renames sequences to reduce file sizes and greatly reduce the size of the column formatted distance matrix downstream.  Uses the [rename.seqs](http://www.mothur.org/wiki/Rename.seqs) command to rename which creates a map file so you can revert to original names at any time. #132 
- [classify.seqs](http://www.mothur.org/wiki/Classify.seqs) -  Changes cutoff parameter default to 80.  This change in the bootstrap threshold reflects the default values in the 454 and MiSeq SOPs. #192 
- [get.current](http://www.mothur.org/wiki/get.current) -  Adds current RAM usage and total RAM available.
- Replaces '-' characters in sequences names with '_' characters to avoid downstream issues. #205
- Changes default on minlength to 10 for the [screen.seqs](http://www.mothur.org/wiki/Screen.seqs) command. #160 
- Removed load.logfile command. Added output file to [get.current](http://www.mothur.org/wiki/get.current) and input/output file to [set.current](http://www.mothur.org/wiki/set.current) . These changes allow the commands to work together to keep track of current files between instances of mothur in a more direct and easy to edit manner.  You can input the output file of the get.current command into the set.current command using the new current parameter.
- Adds includescrap parameter to the [make.sra](http://www.mothur.org/wiki/Make.sra) command. Default=True. http://www.mothur.org/forum/viewtopic.php?f=3&t=3750&p=11122#p11122
- [get.otulabels](http://www.mothur.org/wiki/get.otulabels) removed. Functions added to [get.otus](http://www.mothur.org/wiki/get.otus) command.
- [remove.otulabels](http://www.mothur.org/wiki/remove.otulabels) removed.  Functions added to [remove.otus](http://www.mothur.org/wiki/get.otus) command.
- Adds output and printlevel parameters to [classify.seqs](http://www.mothur.org/wiki/classify.seqs), [classify.otu](http://www.mothur.org/wiki/classify.otu), [biom.info](http://www.mothur.org/wiki/biom.info) and [summary.tax](http://www.mothur.org/wiki/summary.tax) commands. Output options simple and detail. Default=detail. #204 #158  
- Adds relabund parameter to [classify.otu](http://www.mothur.org/wiki/classify.otu) command. #101 
- Adds threshold parameter to [summary.tax](http://www.mothur.org/wiki/summary.tax) command. #31 
- Adds parent taxons to unclassified taxons for outputs of [classify.seqs](http://www.mothur.org/wiki/classify.seqs), [classify.otu](http://www.mothur.org/wiki/classify.otu), [biom.info](http://www.mothur.org/wiki/biom.info) commands. http://www.mothur.org/forum/viewtopic.php?f=3&t=3183&p=9003#p9003 #29 
- Adds count parameter to [get.sharedseqs](http://www.mothur.org/wiki/get.sharedseqs) #133 

## Bug Fixes
- [filter.shared](http://www.mothur.org/wiki/Filter.shared) - modifies rareOtus label to prevent mothurConvert error. #137 
- [make.contigs](http://www.mothur.org/wiki/Make.contigs) -  File mismatch error with certain sequence name formats and multiple processors. Three column format gz file not producing group file.
- Fixes mothurConvert error if ""seed"" was part of filename.
- Removes OS limit on open files for cluster.split #142 
- [make.sra](http://www.mothur.org/wiki/Make.sra) -  Fastq.info error about no inputs selected when running make.sra with single fastq file and oligos file.
- [cluster.split](http://www.mothur.org/wiki/Cluster.split) - removes limit on number of files that can be split by cluster.split.  Limit caused ""[ERROR]: Cannot open yourFasta.xxx.temp"" file error.
- ""Illegal Instruction"" error on Linux machines. Fixed in 1.29.16 release. #179 
- Updates Xcode project file to fix collaboration issues.
- Fixes [filter.seqs](http://www.mothur.org/wiki/filter.seqs) issue where sequences are not the same length by setting default minlength to 10 in the [screen.seqs](http://www.mothur.org/wiki/Screen.seqs) command. #160 
- Windows version - if files were used with less sequences than processors specified then empty file error. #195
- Fixes [make.contigs](http://www.mothur.org/wiki/make.contigs) name mismatch bug and gives a slight speed boost. #167 
- Fixes [lefse](http://www.mothur.org/wiki/Lefse) ""Skipping x iter..."" warning.

## Registered Users

3663
",3305584
700,False,False,2015-07-23T15:09:34Z,2015-07-23T18:16:04Z,"New commands
- [set.seed](http://www.mothur.org/wiki/Set.seed) - allows you to seed random.
- [make.file](http://www.mothur.org/wiki/Make.file)\- creates a file containing list of fastq or gz files for input to make.contigs.

Feature updates
- [pre.cluster](http://www.mothur.org/wiki/Pre.cluster) - added cluster method for unaligned sequences. Added align, mismatch, match, gapopen, gapextend parameters.
- [set.dir](http://www.mothur.org/wiki/Set.dir) - if output directory does not exist mothur will create it for you.
- [chimera.uchime](http://www.mothur.org/wiki/Chimera.uchime) - adds method tag to output files. - http://www.mothur.org/forum/viewtopic.php?f=5&t=3636&p=10748#p10748
- [chop.seqs](http://www.mothur.org/wiki/Chop.seqs) - adds qfile option to allows for chopping quality files.
- [classify.otu](http://www.mothur.org/wiki/Classify.otu) - adds threshold parameter. The threshold parameter allows you to specify a cutoff for the taxonomy file that is being inputted.
- [rename.seqs](http://www.mothur.org/wiki/Rename.seqs) - adds count, delim, and placement parameters.
- seed parameter added to all commands to allow you to easily seed random while running commands.
- [make.shared](http://www.mothur.org/wiki/Make.shared) - mothur no longer checks for biom matrix type to allow for more flexibility.
- [make.shared](http://www.mothur.org/wiki/Make.shared) - rabund files are no longer outputted.  Mothur will create a rabund file with the [[get.rabund]] command.
- [set.dir](http://www.mothur.org/wiki/Set.dir) - if output directory does not exist it will be created.
- no longer create a log file simple command line option runs of mothur
- [make.sra](http://www.mothur.org/wiki/Make.sra) - allow for assigning multiple sets of files to the same group in 3 column format.
- [make.contigs](http://www.mothur.org/wiki/Make.contigs) - allow for missing reads in files.
- [metastats](http://www.mothur.org/wiki/Metastats) - remove qvalues.  Also removes fortran source from mothur.
- automatically adjust number of processors when fork() fails
- Removes extra white spaces from mothur's print to make output files more compatible with other software packages. - http://www.mothur.org/forum/viewtopic.php?f=4&t=3703
- [degap.seqs](http://www.mothur.org/wiki/Degap.seqs) - adds the processors option.
- Adds column headers to [Design File](http://www.mothur.org/wiki/Design_File)
- [phylo.diversity](http://www.mothur.org/wiki/Phylo.diversity) - adds sampledepth parameter. - http://www.mothur.org/forum/viewtopic.php?f=3&t=3320
- [set.dir](http://www.mothur.org/wiki/Set.dir) - Sets tempdefault location to mothur's executable location to help reduce ""unable to find file"" errors.
- [make.contigs](http://www.mothur.org/wiki/Make.contigs) - allow for gzipped version for fastq files as inputs.
- Added file parameter to saved files by mothur.  file=current can now be used.

Bug fixes
- [metastats](http://www.mothur.org/wiki/Metastats) - infinite loop with certain datasets - http://www.mothur.org/forum/viewtopic.php?f=3&t=3701
- [cluster.split](http://www.mothur.org/wiki/Cluster.split) - did not allow you to use the classic option with the file option.
- [make.biom](http://www.mothur.org/wiki/Make.biom) - repeat labels when combining mothur OTU labels with non mothur OTU labels, this can results in a duplicate ""simple"" label. This causes an incorrect taxonomy to be assigned to the OTU.
- [remove.groups](http://www.mothur.org/wiki/Remove.groups) - not creating a list file for each label.
- [make.biom](http://www.mothur.org/wiki/Make.biom) - remove paths from filenames to make compliant with qiime parser. - http://www.mothur.org/forum/viewtopic.php?f=3&t=3781&p=11241#p11241
- [sffinfo](http://www.mothur.org/wiki/Sffinfo) - off by one in right side trimming. http://www.mothur.org/forum/viewtopic.php?f=4&t=3764
- [make.contigs](http://www.mothur.org/wiki/Make.contigs) - Bug Fix - when using index files in version 1.35 quality data was over trimmed by the length of the barcode.
",3305584
701,False,False,2015-03-31T18:04:41Z,2015-03-31T19:21:55Z,"Fixes mismatch name issue with make.contigs in v1.35.0
",3305584
702,False,False,2015-03-23T16:24:28Z,2015-03-23T16:36:07Z,"http://www.mothur.org/wiki/Mothur_v.1.35.0
",3305584
703,False,False,2018-04-02T21:20:37Z,2018-04-02T21:21:16Z,"<a name=""v2.9.0""></a>
# v2.9.0 (2018-04-02)


* Update documentation for Users api ([50a15ee](https://github.com/AltspaceVR/AltspaceSDK/commit/50a15ee))
* Version bump 2.9.0 ([1ac1929](https://github.com/AltspaceVR/AltspaceSDK/commit/1ac1929))",33642201
704,False,False,2018-02-28T23:46:15Z,2018-02-28T23:47:00Z,"<a name=""v2.8.2""></a>
## v2.8.2 (2018-02-28)


* Update dependency hashes ([be5b5c5](https://github.com/AltspaceVR/AltspaceSDK/commit/be5b5c5))
* Update dependency hashes ([bbe5554](https://github.com/AltspaceVR/AltspaceSDK/commit/bbe5554))
* Version bump 2.8.2 ([94edb28](https://github.com/AltspaceVR/AltspaceSDK/commit/94edb28))",33642201
705,False,False,2018-02-15T22:29:23Z,2018-02-15T22:30:30Z,"<a name=""v2.8.1""></a>
## v2.8.1 (2018-02-15)


* Add n-gltf loaded event, bounding box ([53df5eb](https://github.com/AltspaceVR/AltspaceSDK/commit/53df5eb))
* Cache getBounds result, add spec-gloss to example ([9ad8b7f](https://github.com/AltspaceVR/AltspaceSDK/commit/9ad8b7f))
* Merge branch 'feature/native-gltf-component' ([654429d](https://github.com/AltspaceVR/AltspaceSDK/commit/654429d))
* Updated in light of native components update ([9517e78](https://github.com/AltspaceVR/AltspaceSDK/commit/9517e78))
* Version bump 2.8.1 ([b89eb72](https://github.com/AltspaceVR/AltspaceSDK/commit/b89eb72))",33642201
706,False,False,2018-02-08T21:32:51Z,2018-02-08T21:33:23Z,"<a name=""v2.8.0""></a>
# v2.8.0 (2018-02-08)


* Add documentation, trigger testing ([c99c75d](https://github.com/AltspaceVR/AltspaceSDK/commit/c99c75d))
* Add gltf example ([5f484fb](https://github.com/AltspaceVR/AltspaceSDK/commit/5f484fb))
* Add gltf example to index ([209b979](https://github.com/AltspaceVR/AltspaceSDK/commit/209b979))
* Add native gltf demo to examples index ([d5b89e7](https://github.com/AltspaceVR/AltspaceSDK/commit/d5b89e7))
* Add warning to n-gltf documentation ([8aceda0](https://github.com/AltspaceVR/AltspaceSDK/commit/8aceda0))
* Added NGLTF Component ([3d159ab](https://github.com/AltspaceVR/AltspaceSDK/commit/3d159ab))
* Attempt fix for mobile bug ([86c3ac6](https://github.com/AltspaceVR/AltspaceSDK/commit/86c3ac6))
* Fix n-gltf documentation ([7262c83](https://github.com/AltspaceVR/AltspaceSDK/commit/7262c83))
* Improve documentation ([2529fc2](https://github.com/AltspaceVR/AltspaceSDK/commit/2529fc2))
* Merge branch 'master' into feature/native-gltf-component ([57cc13e](https://github.com/AltspaceVR/AltspaceSDK/commit/57cc13e))
* Merge branch 'master' into feature/native-gltf-component ([9a1b66d](https://github.com/AltspaceVR/AltspaceSDK/commit/9a1b66d))
* Merge pull request #213 from AltspaceVR/feature/native-gltf-component ([53b4221](https://github.com/AltspaceVR/AltspaceSDK/commit/53b4221))
* Merge remote-tracking branch 'origin/master' into feature/native-gltf-component ([5c63e6b](https://github.com/AltspaceVR/AltspaceSDK/commit/5c63e6b))
* Merge remote-tracking branch 'origin/master' into feature/native-gltf-component ([535444a](https://github.com/AltspaceVR/AltspaceSDK/commit/535444a))
* Remove sample model in favor of cdn version ([7b09851](https://github.com/AltspaceVR/AltspaceSDK/commit/7b09851))
* Update example model ([8b6cf05](https://github.com/AltspaceVR/AltspaceSDK/commit/8b6cf05))
* Update to latest api ([22f37ab](https://github.com/AltspaceVR/AltspaceSDK/commit/22f37ab))
* Version bump 2.8.0 ([23dbbb1](https://github.com/AltspaceVR/AltspaceSDK/commit/23dbbb1))",33642201
707,False,False,2018-02-01T19:40:28Z,2018-02-01T19:41:13Z,"<a name=""v2.7.4""></a>
## v2.7.4 (2018-02-01)


* Fix 2.7 SDK for mobile ([a3fc305](https://github.com/AltspaceVR/AltspaceSDK/commit/a3fc305))
* Version bump 2.7.4 ([cb87f1e](https://github.com/AltspaceVR/AltspaceSDK/commit/cb87f1e))",33642201
708,False,False,2018-01-20T01:53:12Z,2018-01-20T01:54:05Z,"<a name=""v2.7.3""></a>
## v2.7.3 (2018-01-20)


* Fix typo ([3cd50af](https://github.com/AltspaceVR/AltspaceSDK/commit/3cd50af))
* Version bump 2.7.3 ([1fedf41](https://github.com/AltspaceVR/AltspaceSDK/commit/1fedf41))",33642201
709,False,False,2018-01-19T23:51:50Z,2018-01-19T23:52:25Z,"<a name=""v2.7.2""></a>
## v2.7.2 (2018-01-19)


* Fix sync-* hooks ([8e07084](https://github.com/AltspaceVR/AltspaceSDK/commit/8e07084))
* Merge branch 'master' of github.com:AltspaceVR/AltspaceSDK ([71ecb9d](https://github.com/AltspaceVR/AltspaceSDK/commit/71ecb9d))
* Merge pull request #212 from AltspaceVR/fix/aframe-sync ([e2acc6c](https://github.com/AltspaceVR/AltspaceSDK/commit/e2acc6c))
* Regenerate docs post-readme change ([5630a38](https://github.com/AltspaceVR/AltspaceSDK/commit/5630a38))
* Replace models with self-authored ones ([e414ab0](https://github.com/AltspaceVR/AltspaceSDK/commit/e414ab0))
* Update dependencies ([53d9b22](https://github.com/AltspaceVR/AltspaceSDK/commit/53d9b22))
* Update in light of Poly API announcement ([5c99568](https://github.com/AltspaceVR/AltspaceSDK/commit/5c99568))
* Version bump 2.7.2 ([d31651d](https://github.com/AltspaceVR/AltspaceSDK/commit/d31651d))",33642201
710,False,False,2017-11-30T18:20:27Z,2017-11-30T18:21:00Z,"<a name=""v2.7.1""></a>
## v2.7.1 (2017-11-30)


* Fix A-Frame requirement ([e042453](https://github.com/AltspaceVR/AltspaceSDK/commit/e042453))
* Version bump 2.7.1 ([40effb6](https://github.com/AltspaceVR/AltspaceSDK/commit/40effb6))",33642201
711,False,False,2017-11-29T23:35:01Z,2017-11-29T23:35:34Z,"<a name=""v2.7.0""></a>
# v2.7.0 (2017-11-29)


* Add collapse-model utility component ([2f55654](https://github.com/AltspaceVR/AltspaceSDK/commit/2f55654))
* Add model repos example ([4e5813a](https://github.com/AltspaceVR/AltspaceSDK/commit/4e5813a))
* Add visible polyfill, collapse-model ([fb3d303](https://github.com/AltspaceVR/AltspaceSDK/commit/fb3d303))
* Added polyfills for unused functions ([58ae469](https://github.com/AltspaceVR/AltspaceSDK/commit/58ae469))
* Fix visible component ([70fd2d5](https://github.com/AltspaceVR/AltspaceSDK/commit/70fd2d5))
* Fix visible polyfill, start converting examples ([51dbf20](https://github.com/AltspaceVR/AltspaceSDK/commit/51dbf20))
* Merge branch 'feature/aframe-0.7.0-compat' ([d7eceda](https://github.com/AltspaceVR/AltspaceSDK/commit/d7eceda))
* More doc updates ([e9c3529](https://github.com/AltspaceVR/AltspaceSDK/commit/e9c3529))
* Start updating doc styles ([b5bef1d](https://github.com/AltspaceVR/AltspaceSDK/commit/b5bef1d))
* Update documentation with examples, fix typos ([e7b098c](https://github.com/AltspaceVR/AltspaceSDK/commit/e7b098c))
* Update examples for new aframe version ([19afe0d](https://github.com/AltspaceVR/AltspaceSDK/commit/19afe0d))
* Version bump 2.7.0 ([3aa0931](https://github.com/AltspaceVR/AltspaceSDK/commit/3aa0931))",33642201
712,False,False,2017-11-20T21:57:39Z,2017-11-20T21:58:06Z,"<a name=""v2.6.2""></a>
## v2.6.2 (2017-11-20)


* Add files via upload ([c1e365b](https://github.com/AltspaceVR/AltspaceSDK/commit/c1e365b))
* Add links to external examples ([9b622f2](https://github.com/AltspaceVR/AltspaceSDK/commit/9b622f2))
* Add node modules attribution ([162e5dd](https://github.com/AltspaceVR/AltspaceSDK/commit/162e5dd))
* Create index.html ([f4bb18d](https://github.com/AltspaceVR/AltspaceSDK/commit/f4bb18d))
* Create index.html ([64a0b59](https://github.com/AltspaceVR/AltspaceSDK/commit/64a0b59))
* Create navigate.js ([a5d084c](https://github.com/AltspaceVR/AltspaceSDK/commit/a5d084c))
* Delete index.html ([cdcf90e](https://github.com/AltspaceVR/AltspaceSDK/commit/cdcf90e))
* Merge pull request #210 from philipnavidad/master ([04ba7f2](https://github.com/AltspaceVR/AltspaceSDK/commit/04ba7f2))
* Remove unlicensed models ([f66c857](https://github.com/AltspaceVR/AltspaceSDK/commit/f66c857))
* Update index.html ([f93b81a](https://github.com/AltspaceVR/AltspaceSDK/commit/f93b81a))
* Update index.html ([701599a](https://github.com/AltspaceVR/AltspaceSDK/commit/701599a))
* Version bump 2.6.2 ([ddc3633](https://github.com/AltspaceVR/AltspaceSDK/commit/ddc3633))",33642201
713,False,False,2017-07-10T16:36:25Z,2017-07-10T16:37:03Z,"<a name=""v2.6.1""></a>
## v2.6.1 (2017-07-10)


* Merge pull request #209 from AltspaceVR/bug/sync-init-timing ([f42557d](https://github.com/AltspaceVR/AltspaceSDK/commit/f42557d))
* Move clientId initialization to init instead of on connect ([0e92027](https://github.com/AltspaceVR/AltspaceSDK/commit/0e92027))
* Version bump 2.6.1 ([c4a8527](https://github.com/AltspaceVR/AltspaceSDK/commit/c4a8527))",33642201
714,False,False,2017-06-27T20:53:03Z,2017-06-27T20:53:23Z,"<a name=""v2.6.0""></a>
# v2.6.0 (2017-06-27)


* Add benchmarking test ([25c38af](https://github.com/AltspaceVR/AltspaceSDK/commit/25c38af))
* Add targetEvent property to n-portal ([1250569](https://github.com/AltspaceVR/AltspaceSDK/commit/1250569))
* Add test for material visibility on scene removal ([af4f858](https://github.com/AltspaceVR/AltspaceSDK/commit/af4f858))
* Add test to check renderer determinisim ([a634d0a](https://github.com/AltspaceVR/AltspaceSDK/commit/a634d0a))
* Merge branch 'master' of github.com:AltspaceVR/AltspaceSDK ([807b10e](https://github.com/AltspaceVR/AltspaceSDK/commit/807b10e))
* Merge pull request #207 from AltspaceVR/other/deterministic-render-test ([86fb348](https://github.com/AltspaceVR/AltspaceSDK/commit/86fb348))
* Merge pull request #208 from AltspaceVR/feature/event-portal ([d013299](https://github.com/AltspaceVR/AltspaceSDK/commit/d013299))
* remove dev initiative ([7477f33](https://github.com/AltspaceVR/AltspaceSDK/commit/7477f33))
* revert space sid ([80abd36](https://github.com/AltspaceVR/AltspaceSDK/commit/80abd36))
* Version bump 2.6.0 ([0f9e002](https://github.com/AltspaceVR/AltspaceSDK/commit/0f9e002))",33642201
715,False,False,2017-06-06T22:00:52Z,2017-06-06T22:01:13Z,"<a name=""v2.5.1""></a>
## v2.5.1 (2017-06-06)


* Merge pull request #206 from AltspaceVR/other/scene-removal ([1b57169](https://github.com/AltspaceVR/AltspaceSDK/commit/1b57169))
* other/parenting-test ([ef69a78](https://github.com/AltspaceVR/AltspaceSDK/commit/ef69a78))
* test for removing and adding objects to the scene ([5127e51](https://github.com/AltspaceVR/AltspaceSDK/commit/5127e51))
* Version bump 2.5.1 ([32c03f0](https://github.com/AltspaceVR/AltspaceSDK/commit/32c03f0))",33642201
716,False,False,2017-06-06T03:20:30Z,2017-06-06T03:20:52Z,"<a name=""v2.5.0""></a>
# v2.5.0 (2017-06-06)


* Document inputEnabled ([446f5b6](https://github.com/AltspaceVR/AltspaceSDK/commit/446f5b6))
* Merge pull request #205 from AltspaceVR/other/document-input-enabled ([94ace28](https://github.com/AltspaceVR/AltspaceSDK/commit/94ace28))
* Version bump 2.5.0 ([a941dd1](https://github.com/AltspaceVR/AltspaceSDK/commit/a941dd1))",33642201
717,False,False,2017-05-15T19:36:28Z,2017-05-15T19:36:48Z,"<a name=""v2.4.5""></a>
## v2.4.5 (2017-05-15)


* Add link to the developer access request form ([82a47d2](https://github.com/AltspaceVR/AltspaceSDK/commit/82a47d2))
* Disable poster images ([7df3d17](https://github.com/AltspaceVR/AltspaceSDK/commit/7df3d17))
* Merge pull request #202 from AltspaceVR/other/sdk-245 ([134a129](https://github.com/AltspaceVR/AltspaceSDK/commit/134a129))
* Merge pull request #203 from AltspaceVR/feature/dev-flag-link ([7347a7d](https://github.com/AltspaceVR/AltspaceSDK/commit/7347a7d))
* Remove reference to playground beta, add svvr poster ([9b394d0](https://github.com/AltspaceVR/AltspaceSDK/commit/9b394d0))
* Rephrase to indicate flag is optional ([e52aace](https://github.com/AltspaceVR/AltspaceSDK/commit/e52aace))
* Version bump 2.4.5 ([392051d](https://github.com/AltspaceVR/AltspaceSDK/commit/392051d))",33642201
718,False,False,2017-05-05T20:45:36Z,2017-05-05T20:45:56Z,"<a name=""v2.4.4""></a>
## v2.4.4 (2017-05-05)


* Activate fullspace mode ([87f7a31](https://github.com/AltspaceVR/AltspaceSDK/commit/87f7a31))
* add and tweak texture tests ([e5d8318](https://github.com/AltspaceVR/AltspaceSDK/commit/e5d8318))
* Add comment, fix lib reference ([c06d932](https://github.com/AltspaceVR/AltspaceSDK/commit/c06d932))
* Add comments, screenshot ([d68355b](https://github.com/AltspaceVR/AltspaceSDK/commit/d68355b))
* Add documentation about debugging options ([7427c49](https://github.com/AltspaceVR/AltspaceSDK/commit/7427c49))
* Add lightmap atlas example ([2e6d73b](https://github.com/AltspaceVR/AltspaceSDK/commit/2e6d73b))
* add new examples to indices ([994779c](https://github.com/AltspaceVR/AltspaceSDK/commit/994779c))
* Merge branch 'debugging-documentation' ([9b36bd4](https://github.com/AltspaceVR/AltspaceSDK/commit/9b36bd4))
* Merge pull request #200 from AltspaceVR/other/texture-tests ([626df37](https://github.com/AltspaceVR/AltspaceSDK/commit/626df37))
* Merge pull request #201 from AltspaceVR/other/new-examples ([f70c364](https://github.com/AltspaceVR/AltspaceSDK/commit/f70c364))
* Merge remote-tracking branch 'origin/feature/lightmap-atlas' into other/new-examples ([ebe729b](https://github.com/AltspaceVR/AltspaceSDK/commit/ebe729b))
* Merge remote-tracking branch 'origin/other/texture-tests' into other/new-examples ([1d7b193](https://github.com/AltspaceVR/AltspaceSDK/commit/1d7b193))
* repro black cubes ([f135aab](https://github.com/AltspaceVR/AltspaceSDK/commit/f135aab))
* tweak test ([fcaad50](https://github.com/AltspaceVR/AltspaceSDK/commit/fcaad50))
* Update colors to be more obvious ([3fe48f8](https://github.com/AltspaceVR/AltspaceSDK/commit/3fe48f8))
* Version bump 2.4.4 ([8ea0681](https://github.com/AltspaceVR/AltspaceSDK/commit/8ea0681))",33642201
719,False,False,2017-05-02T00:05:23Z,2017-05-02T00:05:46Z,"<a name=""v2.4.3""></a>
## v2.4.3 (2017-05-02)


* Link to WindowsDebugger.exe instead of the zip file ([e75b674](https://github.com/AltspaceVR/AltspaceSDK/commit/e75b674))
* Merge pull request #198 from AltspaceVR/KiChjang-patch-1 ([7c3a50c](https://github.com/AltspaceVR/AltspaceSDK/commit/7c3a50c))
* Version bump 2.4.3 ([f9b9c26](https://github.com/AltspaceVR/AltspaceSDK/commit/f9b9c26))",33642201
720,False,False,2017-04-20T18:19:59Z,2017-04-20T18:20:13Z,"<a name=""v2.4.2""></a>
## v2.4.2 (2017-04-20)


* Add test for multimaterial fallback ([59246c2](https://github.com/AltspaceVR/AltspaceSDK/commit/59246c2))
* Merge pull request #196 from AltspaceVR/other/multimaterial-fallback-test ([00e7c5a](https://github.com/AltspaceVR/AltspaceSDK/commit/00e7c5a))
* Version bump 2.4.2 ([340d54f](https://github.com/AltspaceVR/AltspaceSDK/commit/340d54f))",33642201
721,False,False,2017-04-18T17:41:09Z,2017-04-18T17:41:29Z,"<a name=""v2.4.1""></a>
## v2.4.1 (2017-04-18)


* Add geo framerate tests ([50b2b0a](https://github.com/AltspaceVR/AltspaceSDK/commit/50b2b0a))
* Add new test to index ([74178d1](https://github.com/AltspaceVR/AltspaceSDK/commit/74178d1))
* Clean up geo stress test ([4f65eda](https://github.com/AltspaceVR/AltspaceSDK/commit/4f65eda))
* Clean up model callback ([84072e4](https://github.com/AltspaceVR/AltspaceSDK/commit/84072e4))
* Cleaned up test code ([1a58650](https://github.com/AltspaceVR/AltspaceSDK/commit/1a58650))
* Combined high and low poly, added texture scrolling ([bfe00bf](https://github.com/AltspaceVR/AltspaceSDK/commit/bfe00bf))
* Fix UI for gear ([323e7a7](https://github.com/AltspaceVR/AltspaceSDK/commit/323e7a7))
* Make low poly lower poly ([b6502e0](https://github.com/AltspaceVR/AltspaceSDK/commit/b6502e0))
* Merge branch 'master' into feature/geo-stress-test ([3c68f59](https://github.com/AltspaceVR/AltspaceSDK/commit/3c68f59))
* Merge pull request #183 from AltspaceVR/feature/geo-stress-test ([f1cc3b3](https://github.com/AltspaceVR/AltspaceSDK/commit/f1cc3b3))
* Set lightmap intensity value ([5cfd616](https://github.com/AltspaceVR/AltspaceSDK/commit/5cfd616))
* Tweak some formatting ([7610672](https://github.com/AltspaceVR/AltspaceSDK/commit/7610672))
* Tweaks to the model ([b2f5329](https://github.com/AltspaceVR/AltspaceSDK/commit/b2f5329))
* Version bump 2.4.1 ([866a6ab](https://github.com/AltspaceVR/AltspaceSDK/commit/866a6ab))",33642201
722,False,False,2017-04-07T00:57:25Z,2017-04-07T01:01:38Z,,33642201
723,False,False,2017-04-04T23:33:23Z,2017-04-04T23:33:54Z,"<a name=""v2.2.2""></a>
## v2.2.2 (2017-04-04)


* Fix strange strict syntax bug ([62e10d7](https://github.com/AltspaceVR/AltspaceSDK/commit/62e10d7))
* Merge branch 'master' of github.com:AltspaceVR/AltspaceSDK ([a33f34b](https://github.com/AltspaceVR/AltspaceSDK/commit/a33f34b))
* Version bump 2.2.2 ([8e448da](https://github.com/AltspaceVR/AltspaceSDK/commit/8e448da))",33642201
724,False,False,2017-04-04T23:16:17Z,2017-04-04T23:16:40Z,"<a name=""v2.2.1""></a>
## v2.2.1 (2017-04-04)


* Fix packaging so polyfills don't conflict ([614f2c1](https://github.com/AltspaceVR/AltspaceSDK/commit/614f2c1))
* Update examples ([63be5b8](https://github.com/AltspaceVR/AltspaceSDK/commit/63be5b8))
* Version bump 2.2.1 ([ffc3b6d](https://github.com/AltspaceVR/AltspaceSDK/commit/ffc3b6d))",33642201
725,False,False,2017-03-30T01:54:07Z,2017-03-30T01:54:22Z,"<a name=""v2.2.0""></a>
# v2.2.0 (2017-03-30)

* The A-Frame `n-layout-browser` component allows you to spawn a browser. Note that browsers are only spawned if your app is loaded by default in that space. E.g. Create a event with the ""Public Enclosure URL"" set to https://altspacevr.github.io/AltspaceSDK/examples/aframe/native-layout-browsers.html, and the space will contain an enclosure with the chess app and a web browser.
* The A-Frame `n-portal` component allows you to spawn a portal that can teleport players to other spaces or to a different location in the current space. E.g. https://altspacevr.github.io/AltspaceSDK/examples/aframe/native-portals.html",33642201
726,False,False,2017-03-29T07:48:43Z,2017-03-29T07:49:00Z,"<a name=""v2.1.0""></a>
# v2.1.0 (2017-03-29)

* Make selectors dynamic on the `wire` component. `target` selectors will now be re-evaluated when the wire is triggered.
* Add a class name to instantiated entities (i.e. those instantiated by the `instantiator` and `one-per-user` components), so that you can use selectors to identify ones that belong to the current user
",33642201
727,False,False,2017-03-27T20:21:39Z,2017-03-27T20:21:58Z,"<a name=""v2.0.4""></a>
## v2.0.4 (2017-03-27)


### fix

* fix(js): fix undefined values in JointCollision behavior ([518f3d2](https://github.com/AltspaceVR/AltspaceSDK/commit/518f3d2))

* Merge pull request #189 from AltspaceVR/fix/joint-collider ([0ccb102](https://github.com/AltspaceVR/AltspaceSDK/commit/0ccb102))
* Version bump 2.0.4 ([609bd76](https://github.com/AltspaceVR/AltspaceSDK/commit/609bd76))",33642201
728,False,False,2017-03-09T17:48:38Z,2017-03-09T17:48:51Z,"<a name=""v2.0.3""></a>
## v2.0.3 (2017-03-09)

### A-Frame SDK: 
* Fix native components so that they don't update themselves twice on initializations
* Fix sync-n-sound so that it doesn't playback a sound event on initial app load",33642201
729,False,False,2017-03-06T22:50:25Z,2017-03-06T22:50:43Z,"<a name=""v2.0.2""></a>
This is a big one! These are the most significant changes:

* Combined the AltspaceSDK and aframe-altspace-component repositories into one.
* Ported the entire SDK codebase to the new ECMAScript 2015 syntax.
* New package build system based on ES2015 modules.
* Reformatted, cleaned, and improved documentation for both APIs.
* All JS behaviors are now classes, so the new keyword is required when instantiating them. This is reflected in the examples.
* All A-Frame components are classes in addition to registered components. They are accessible through the `altspace.components` namespace. They are not usable in JS as-is, but might be useful for third parties to replicate the functionality.
* Updated the official Three.js version recommendation to r84.",33642201
730,False,False,2017-02-10T20:51:55Z,2017-02-10T20:51:56Z,"<a name=""v1.0.0""></a>

# v1.0.0 (2017-02-10)
- Add clarifying documentation ([9cb2936](https://github.com/altspacevr/AltspaceSDK/commit/9cb2936))
- Bump release v1.0.0 ([16fe55f](https://github.com/altspacevr/AltspaceSDK/commit/16fe55f))
- cleanup ([5d0d09f](https://github.com/altspacevr/AltspaceSDK/commit/5d0d09f))
- Fix double-reload ([0c60edd](https://github.com/altspacevr/AltspaceSDK/commit/0c60edd))
- Merge pull request #185 from AltspaceVR/bug/sync-reload ([9002e93](https://github.com/altspacevr/AltspaceSDK/commit/9002e93))
- refactor ([6ee62fd](https://github.com/altspacevr/AltspaceSDK/commit/6ee62fd))
- remove old workaround ([63680f0](https://github.com/altspacevr/AltspaceSDK/commit/63680f0))
- revert generated files ([2dcba1c](https://github.com/altspacevr/AltspaceSDK/commit/2dcba1c))
- switch back to min.js ([f7361d6](https://github.com/altspacevr/AltspaceSDK/commit/f7361d6))
- update examples to establish sync first ([29854db](https://github.com/altspacevr/AltspaceSDK/commit/29854db))
- Update README.md ([582b0ef](https://github.com/altspacevr/AltspaceSDK/commit/582b0ef))
",33642201
731,False,False,2016-12-28T02:40:30Z,2016-12-28T02:40:36Z,"<a name=""v0.28.1""></a>

## v0.28.1 (2016-12-28)
- Bump release v0.28.1 ([effbbba](https://github.com/altspacevr/AltspaceSDK/commit/effbbba))
- Merge pull request #182 from AltspaceVR/other/rename-neartouch ([1f0d4be](https://github.com/altspacevr/AltspaceSDK/commit/1f0d4be))
- rename nearTouch to nearlyTouched ([86dc443](https://github.com/altspacevr/AltspaceSDK/commit/86dc443))
",33642201
732,False,False,2016-12-28T00:55:55Z,2016-12-28T00:55:59Z,"<a name=""v0.28.0""></a>

# v0.28.0 (2016-12-28)
- Bump release v0.28.0 ([e9d230d](https://github.com/altspacevr/AltspaceSDK/commit/e9d230d))
- Merge pull request #181 from AltspaceVR/feature/touch-gamepad-info ([64b82ca](https://github.com/altspacevr/AltspaceSDK/commit/64b82ca))
- Show more info for gamepad buttons, now that we support touch ([9e7e883](https://github.com/altspacevr/AltspaceSDK/commit/9e7e883))
",33642201
733,False,False,2016-12-20T21:35:34Z,2016-12-20T21:35:33Z,"<a name=""v0.27.0""></a>

# v0.27.0 (2016-12-20)
- Added dragstart and dragend events to the Drag behavior (thanks to @Enderthexen). ([15bca32](https://github.com/altspacevr/AltspaceSDK/commit/15bca32))
",33642201
734,False,False,2016-12-16T01:08:04Z,2016-12-16T01:08:13Z,"<a name=""v0.26.3""></a>

## v0.26.3 (2016-12-16)
- Add aframe example to examples index ([001c8de](https://github.com/altspacevr/AltspaceSDK/commit/001c8de))
- Add aframe support to utilities.Simulation ([677c9a0](https://github.com/altspacevr/AltspaceSDK/commit/677c9a0))
- Bump release v0.26.3 ([49179cf](https://github.com/altspacevr/AltspaceSDK/commit/49179cf))
- Merge pull request #179 from AltspaceVR/feature/aframe-support ([3a0d25a](https://github.com/altspacevr/AltspaceSDK/commit/3a0d25a))
",33642201
735,False,False,2016-12-12T18:46:52Z,2016-12-12T18:46:47Z,"<a name=""v0.26.2""></a>

## v0.26.2 (2016-12-12)
- Corrected issue with altspace.utilities.shims.OBJMTLLoader not propagating crossOrigin property to MTLLoader from NGenesis/bugfix/objmtlloader-crossorigin ([8de9d24](https://github.com/altspacevr/AltspaceSDK/commit/8de9d24))
",33642201
736,False,False,2016-12-08T01:54:11Z,2016-12-08T01:54:16Z,"<a name=""v0.26.1""></a>

## v0.26.1 (2016-12-08)
- Bump release v0.26.1 ([3e745e2](https://github.com/altspacevr/AltspaceSDK/commit/3e745e2))
- Merge pull request #173 from AltspaceVR/bug/cursor-shim ([de63362](https://github.com/altspacevr/AltspaceSDK/commit/de63362))
- Update cursor shim to respect disabled colliders ([c2c3d37](https://github.com/altspacevr/AltspaceSDK/commit/c2c3d37))
",33642201
737,False,False,2016-12-06T22:24:31Z,2016-12-06T22:24:37Z,"<a name=""v0.26.0""></a>

# v0.26.0 (2016-12-06)
- Bump release v0.26.0 ([8a17bf8](https://github.com/altspacevr/AltspaceSDK/commit/8a17bf8))
- Cleanup docs ([45dea85](https://github.com/altspacevr/AltspaceSDK/commit/45dea85))
- Corrected code indentation. ([587b66e](https://github.com/altspacevr/AltspaceSDK/commit/587b66e))
- Corrected documentation indentation. ([b5eb464](https://github.com/altspacevr/AltspaceSDK/commit/b5eb464))
- Corrected issue tracking previous joint intersection union. ([efdcb9f](https://github.com/altspacevr/AltspaceSDK/commit/efdcb9f))
- Corrected issue with collision events not being dispatched with target and currentTarget properties. ([2142952](https://github.com/altspacevr/AltspaceSDK/commit/2142952))
- Corrected issue with JointCollisionEvents behavior firing events on invisible objects. ([0253f5e](https://github.com/altspacevr/AltspaceSDK/commit/0253f5e))
- headbutt cube ([bfaa85c](https://github.com/altspacevr/AltspaceSDK/commit/bfaa85c))
- Merge pull request #1 from AltspaceVR/master ([ab5813b](https://github.com/altspacevr/AltspaceSDK/commit/ab5813b))
- Merge pull request #168 from NGenesis/feature/behavior-jointcollisionevents ([7f17ad2](https://github.com/altspacevr/AltspaceSDK/commit/7f17ad2))
- Merge pull request #171 from AltspaceVR/feature/behavior-jointcollisionevents-cleanup ([15e869e](https://github.com/altspacevr/AltspaceSDK/commit/15e869e))
- Merge pull request #172 from AltspaceVR/feature/headbutt-cube ([a72fdf2](https://github.com/altspacevr/AltspaceSDK/commit/a72fdf2))
- Updated JointCollisionEvents behavior documentation. ([c2989e2](https://github.com/altspacevr/AltspaceSDK/commit/c2989e2))
- Updated JointCollisionEvents behavior documentation. ([55c38cf](https://github.com/altspacevr/AltspaceSDK/commit/55c38cf))
- Updated JointCollisionEvents behavior: ([bba2b54](https://github.com/altspacevr/AltspaceSDK/commit/bba2b54))
- Updated jointcollisionleave event to include details of the last intersection union and set of joint ([6ad1636](https://github.com/altspacevr/AltspaceSDK/commit/6ad1636))
",33642201
738,False,False,2016-12-01T09:16:59Z,2016-12-01T09:16:45Z,"<a name=""v0.25.0""></a>

# v0.25.0 (2016-12-01)
- add examples to index ([f3f18ac](https://github.com/altspacevr/AltspaceSDK/commit/f3f18ac))
- Adding joint collision examples, with and without config options. ([c3bfc68](https://github.com/altspacevr/AltspaceSDK/commit/c3bfc68))
- Adding joint selection to the config. ([337e755](https://github.com/altspacevr/AltspaceSDK/commit/337e755))
- Adding jointCubeSize option and adding behavior to gulpfile. ([2b46074](https://github.com/altspacevr/AltspaceSDK/commit/2b46074))
- Bump release v0.25.0 ([bf06e76](https://github.com/altspacevr/AltspaceSDK/commit/bf06e76))
- Changing signature for better legibility. ([cba957b](https://github.com/altspacevr/AltspaceSDK/commit/cba957b))
- Editing signature for doc generation. ([32b9050](https://github.com/altspacevr/AltspaceSDK/commit/32b9050))
- Fix example titles ([02abc6b](https://github.com/altspacevr/AltspaceSDK/commit/02abc6b))
- Fix examples ([e334278](https://github.com/altspacevr/AltspaceSDK/commit/e334278))
- fix indentation ([c8cdc3b](https://github.com/altspacevr/AltspaceSDK/commit/c8cdc3b))
- Fix lib reference ([a958c41](https://github.com/altspacevr/AltspaceSDK/commit/a958c41))
- Fixing a comment. ([9b1ba6c](https://github.com/altspacevr/AltspaceSDK/commit/9b1ba6c))
- Fixing another comment. ([cc99070](https://github.com/altspacevr/AltspaceSDK/commit/cc99070))
- Fixing documentation comment. ([f82ff80](https://github.com/altspacevr/AltspaceSDK/commit/f82ff80))
- Fixing spaces/tabs. ([cf7ff9a](https://github.com/altspacevr/AltspaceSDK/commit/cf7ff9a))
- Format docs ([a70d603](https://github.com/altspacevr/AltspaceSDK/commit/a70d603))
- Initial commit of TrackJoints behavior to request feedback and guidance. ([3dd46fa](https://github.com/altspacevr/AltspaceSDK/commit/3dd46fa))
- Merge pull request #163 from evhan55/master ([86c6c1a](https://github.com/altspacevr/AltspaceSDK/commit/86c6c1a))
- Merge pull request #167 from AltspaceVR/bug/joint-collision-fixes.html ([246b676](https://github.com/altspacevr/AltspaceSDK/commit/246b676))
- minor cleanup ([8e4316d](https://github.com/altspacevr/AltspaceSDK/commit/8e4316d))
- Removing unnecessary semicolon. ([b89d0a3](https://github.com/altspacevr/AltspaceSDK/commit/b89d0a3))
- Renaming behavior to 'JointCollisionEvents'. ([3393fdc](https://github.com/altspacevr/AltspaceSDK/commit/3393fdc))
- Revert joint ([24aa2af](https://github.com/altspacevr/AltspaceSDK/commit/24aa2af))
",33642201
739,False,False,2016-11-28T20:07:26Z,2016-11-28T20:07:19Z,"<a name=""v0.24.4""></a>

## v0.24.4 (2016-11-28)
- Add improved error handling to removeBehavior ([3591853](https://github.com/altspacevr/AltspaceSDK/commit/3591853))
- Bump release v0.24.4 ([58d6db9](https://github.com/altspacevr/AltspaceSDK/commit/58d6db9))
- Merge pull request #166 from AltspaceVR/bug/removeBehavior ([58b0a69](https://github.com/altspacevr/AltspaceSDK/commit/58b0a69))
",33642201
740,False,False,2016-11-24T20:39:26Z,2016-11-24T20:39:25Z,"<a name=""v0.24.3""></a>

## v0.24.3 (2016-11-24)
- Bump release v0.24.3 ([1861d2a](https://github.com/altspacevr/AltspaceSDK/commit/1861d2a))
- fix indentation ([736f25a](https://github.com/altspacevr/AltspaceSDK/commit/736f25a))
- fullspace hats app ([89f3831](https://github.com/altspacevr/AltspaceSDK/commit/89f3831))
- Merge pull request #165 from AltspaceVR/bug/fullspace-callbacks ([481d8c4](https://github.com/altspacevr/AltspaceSDK/commit/481d8c4))
- Stick to the origin ([6fe54be](https://github.com/altspacevr/AltspaceSDK/commit/6fe54be))
- Test promise resolution and event ([d4714a9](https://github.com/altspacevr/AltspaceSDK/commit/d4714a9))
",33642201
741,False,False,2016-11-23T22:07:56Z,2016-11-23T22:07:58Z,"<a name=""v0.24.2""></a>

## v0.24.2 (2016-11-23)
- Add click me graphic to test button ([dc65320](https://github.com/altspacevr/AltspaceSDK/commit/dc65320))
- Add new resources ([8a52089](https://github.com/altspacevr/AltspaceSDK/commit/8a52089))
- add sky-sphere example to index ([2c2a61d](https://github.com/altspacevr/AltspaceSDK/commit/2c2a61d))
- Bump release v0.24.2 ([80b9dc8](https://github.com/altspacevr/AltspaceSDK/commit/80b9dc8))
- Cleanup fullspace example and start adding skyphere example ([54887c5](https://github.com/altspacevr/AltspaceSDK/commit/54887c5))
- Implement sky sphere example ([49dbb15](https://github.com/altspacevr/AltspaceSDK/commit/49dbb15))
- Merge branch 'master' of github.com:AltspaceVR/AltspaceSDK into feature/better-fullspace-examples ([618c0fc](https://github.com/altspacevr/AltspaceSDK/commit/618c0fc))
- Merge pull request #164 from AltspaceVR/feature/better-fullspace-examples ([3b8fad9](https://github.com/altspacevr/AltspaceSDK/commit/3b8fad9))
",33642201
742,False,False,2016-11-22T21:44:23Z,2016-11-22T21:44:26Z,"<a name=""v0.24.1""></a>

## v0.24.1 (2016-11-22)
- Bump release v0.24.1 ([a4116ae](https://github.com/altspacevr/AltspaceSDK/commit/a4116ae))
- Merge pull request #162 from AltspaceVR/bug/support-update ([a08315a](https://github.com/altspacevr/AltspaceSDK/commit/a08315a))
- Update support section of readme ([3e129f3](https://github.com/altspacevr/AltspaceSDK/commit/3e129f3))
",33642201
743,False,False,2016-11-22T01:53:45Z,2016-11-22T01:53:50Z,"<a name=""v0.24.0""></a>

# v0.24.0 (2016-11-22)
- Fix readme link formatting ([1763e94](https://github.com/altspacevr/AltspaceSDK/commit/1763e94))
- Fix the popup example to adjust to its enclosure ([c27ea0c](https://github.com/altspacevr/AltspaceSDK/commit/c27ea0c))
- Add a test for the fullspace API ([a85a1c5](https://github.com/altspacevr/AltspaceSDK/commit/a85a1c5))
",33642201
744,False,False,2016-11-18T13:36:20Z,2016-11-18T13:36:18Z,"<a name=""v0.23.2""></a>

## v0.23.2 (2016-11-18)
- Adding a hint/message to all examples that require you to be inside Altspace to see the example code ([eecf750](https://github.com/altspacevr/AltspaceSDK/commit/eecf750))
- Bump release v0.23.2 ([e300438](https://github.com/altspacevr/AltspaceSDK/commit/e300438))
- Merge pull request #159 from Fasani/master ([8a581db](https://github.com/altspacevr/AltspaceSDK/commit/8a581db))
",33642201
745,False,False,2016-11-15T10:58:41Z,2016-11-15T10:58:45Z,"<a name=""v0.23.1""></a>

## v0.23.1 (2016-11-15)
- Bump release v0.23.1 ([2a5a01e](https://github.com/altspacevr/AltspaceSDK/commit/2a5a01e))
- Merge pull request #157 from Fasani/master ([5ed3307](https://github.com/altspacevr/AltspaceSDK/commit/5ed3307))
- Merging with master ([e6dfd72](https://github.com/altspacevr/AltspaceSDK/commit/e6dfd72))
- Spelling Fixes. ([aa73378](https://github.com/altspacevr/AltspaceSDK/commit/aa73378))
",33642201
746,False,False,2016-11-15T10:38:30Z,2016-11-15T10:38:33Z,"<a name=""v0.23.0""></a>

# v0.23.0 (2016-11-15)
- Account for parent scale and rotation in Drag behavior ([63d3778](https://github.com/altspacevr/AltspaceSDK/commit/63d3778))
- Actually remove behaviors in removeAllBehaviors ([c75a544](https://github.com/altspacevr/AltspaceSDK/commit/c75a544))
- Add behaviors test to index ([65c480d](https://github.com/altspacevr/AltspaceSDK/commit/65c480d))
- Add config options to Bob behavior ([b8aa4fa](https://github.com/altspacevr/AltspaceSDK/commit/b8aa4fa))
- Add functional test for behaviors ([d6e2d38](https://github.com/altspacevr/AltspaceSDK/commit/d6e2d38))
- Add npm scripts ([6d316c9](https://github.com/altspacevr/AltspaceSDK/commit/6d316c9))
- Add type properties to all behaviors ([4bd7ffa](https://github.com/altspacevr/AltspaceSDK/commit/4bd7ffa))
- Add unit tests for behaviors ([32625c9](https://github.com/altspacevr/AltspaceSDK/commit/32625c9))
- Bump release v0.23.0 ([d309391](https://github.com/altspacevr/AltspaceSDK/commit/d309391))
- Fix default config in HoverScale ([a989ae7](https://github.com/altspacevr/AltspaceSDK/commit/a989ae7))
- Fix indentation ([9d5bf51](https://github.com/altspacevr/AltspaceSDK/commit/9d5bf51))
- fix leaked variable ([7cf5449](https://github.com/altspacevr/AltspaceSDK/commit/7cf5449))
- Merge pull request #158 from AltspaceVR/bug/behaviors ([545d879](https://github.com/altspacevr/AltspaceSDK/commit/545d879))
- Properly dispose Drag and HoverColor behaviors ([2863233](https://github.com/altspacevr/AltspaceSDK/commit/2863233))
- Remove debug logs ([a8bca42](https://github.com/altspacevr/AltspaceSDK/commit/a8bca42))
- Strip trailing spaces ([b673b83](https://github.com/altspacevr/AltspaceSDK/commit/b673b83))
",33642201
747,False,False,2016-11-11T23:49:43Z,2016-11-11T23:49:39Z,"<a name=""v0.22.1""></a>

## v0.22.1 (2016-11-11)
- Improved test for collider flag updates ([c0afd0f](https://github.com/altspacevr/AltspaceSDK/commit/c0afd0f))
",33642201
748,False,False,2016-11-06T20:09:37Z,2016-11-06T20:09:43Z,"<a name=""v0.22.0""></a>

# v0.22.0 (2016-11-06)
- Added HoverScale behavior: ([4847822](https://github.com/altspacevr/AltspaceSDK/commit/4847822))
- Merge pull request #155 from NGenesis/feature/behavior-hoverscale ([3c461f2](https://github.com/altspacevr/AltspaceSDK/commit/3c461f2))
",33642201
749,False,False,2016-11-06T03:52:27Z,2016-11-06T03:52:34Z,"<a name=""v0.21.0""></a>

# v0.21.0 (2016-11-06)
- Added option to enable or disable console log output in SteamVRInput during input device detection. ([0971076](https://github.com/altspacevr/AltspaceSDK/commit/0971076))
- Merge pull request #154 from AltspaceVR/steamvrinput-logging ([0d72980](https://github.com/altspacevr/AltspaceSDK/commit/0d72980))
- update steamvr example ([57977eb](https://github.com/altspacevr/AltspaceSDK/commit/57977eb))
",33642201
750,False,False,2016-11-06T01:14:12Z,2016-11-06T01:14:18Z,"<a name=""v0.20.0""></a>

# v0.20.0 (2016-11-06)
- Adding the first THREE.js tutorial to the Altspace examples ([31917ca](https://github.com/altspacevr/AltspaceSDK/commit/31917ca))
- Merge pull request #152 from AltspaceVR/basic-cube ([e03418c](https://github.com/altspacevr/AltspaceSDK/commit/e03418c))
- Rename example ([a3280a8](https://github.com/altspacevr/AltspaceSDK/commit/a3280a8))
",33642201
751,False,False,2016-11-05T18:30:31Z,2016-11-05T18:30:37Z,"<a name=""v0.19.3""></a>

## v0.19.3 (2016-11-05)
- Merge pull request #150 from Fasani/patch-2 ([68f2b03](https://github.com/altspacevr/AltspaceSDK/commit/68f2b03))
- Remove Answers link ([aea3366](https://github.com/altspacevr/AltspaceSDK/commit/aea3366))
- Removing the link to ""Developer Answers"" from the README.md ([8132b0e](https://github.com/altspacevr/AltspaceSDK/commit/8132b0e))
",33642201
752,False,False,2016-10-14T23:27:26Z,2016-10-14T23:27:20Z,"<a name=""v0.19.2""></a>

## v0.19.2 (2016-10-14)
- dont load chess until we have a sync id ([7f59899](https://github.com/altspacevr/AltspaceSDK/commit/7f59899))
- Merge pull request #148 from AltspaceVR/other/chess-optimization ([e2b0378](https://github.com/altspacevr/AltspaceSDK/commit/e2b0378))
",33642201
753,False,False,2016-10-14T23:08:19Z,2016-10-14T23:08:14Z,"<a name=""v0.19.1""></a>

## v0.19.1 (2016-10-14)
- Force gzip on github pages ([a376195](https://github.com/altspacevr/AltspaceSDK/commit/a376195))
- Merge pull request #147 from AltspaceVR/bug/chess-fixes ([8ff2888](https://github.com/altspacevr/AltspaceSDK/commit/8ff2888))
- Swap king and queen in chess example ([c7d512c](https://github.com/altspacevr/AltspaceSDK/commit/c7d512c))
",33642201
754,False,False,2016-09-28T03:26:04Z,2016-09-28T03:26:08Z,"<a name=""v0.19.0""></a>

# v0.19.0 (2016-09-28)
- Eslint and build updates ([7d2e67e](https://github.com/altspacevr/AltspaceSDK/commit/7d2e67e))
",33642201
755,False,False,2016-09-01T05:00:50Z,2016-09-01T05:00:50Z,"<a name=""v0.18.2""></a>

## v0.18.2 (2016-09-01)
- Fix doc generation ([97e55d9](https://github.com/altspacevr/AltspaceSDK/commit/97e55d9))
- Merge pull request #145 from AltspaceVR/other/build-fix ([903690b](https://github.com/altspacevr/AltspaceSDK/commit/903690b))
",33642201
756,False,False,2016-09-01T04:54:19Z,2016-09-01T04:54:19Z,"<a name=""v0.18.1""></a>

## v0.18.1 (2016-09-01)
- Delete npm-debug.log ([6c5bbb7](https://github.com/altspacevr/AltspaceSDK/commit/6c5bbb7))
",33642201
757,False,False,2016-09-01T04:25:45Z,2016-09-01T04:25:45Z,"<a name=""v0.18.0""></a>

# v0.18.0 (2016-09-01)
- Add tests for gamepad and focus fixes ([c280e1d](https://github.com/altspacevr/AltspaceSDK/commit/c280e1d))
- Merge pull request #143 from AltspaceVR/feature/gamepad-and-focus ([384b2e2](https://github.com/altspacevr/AltspaceSDK/commit/384b2e2))
- Merge pull request #144 from AltspaceVR/other/doc-update ([fb78dff](https://github.com/altspacevr/AltspaceSDK/commit/fb78dff))
",33642201
758,False,False,2016-08-31T18:10:49Z,2016-08-31T18:10:49Z,"<a name=""v0.17.0""></a>

# v0.17.0 (2016-08-31)
- Add test for disabling hitbox collider ([ecdd3b6](https://github.com/altspacevr/AltspaceSDK/commit/ecdd3b6))
- Bump release v0.17.0 ([b080a37](https://github.com/altspacevr/AltspaceSDK/commit/b080a37))
- Fix collider flag. Tweak test ([6f67484](https://github.com/altspacevr/AltspaceSDK/commit/6f67484))
- Merge pull request #142 from AltspaceVR/feature/disable-hitbox ([f6edce5](https://github.com/altspacevr/AltspaceSDK/commit/f6edce5))
- Tweak to test for initial state ([886bd34](https://github.com/altspacevr/AltspaceSDK/commit/886bd34))
- Wait for texture to load ([09ad9e1](https://github.com/altspacevr/AltspaceSDK/commit/09ad9e1))
",33642201
759,False,False,2016-08-08T23:18:45Z,2016-08-08T23:18:50Z,"<a name=""v0.16.3""></a>

## v0.16.3 (2016-08-08)
- Bump release v0.16.3 ([7c989c7](https://github.com/altspacevr/AltspaceSDK/commit/7c989c7))
- Fix paths in test examples ([e8db69b](https://github.com/altspacevr/AltspaceSDK/commit/e8db69b))
- Merge pull request #141 from AltspaceVR/bug/test-paths ([d023c1a](https://github.com/altspacevr/AltspaceSDK/commit/d023c1a))
",33642201
760,False,False,2016-08-08T22:29:13Z,2016-08-08T22:29:32Z,"<a name=""v0.16.2""></a>

## v0.16.2 (2016-08-08)
- Add test for canvas texture reuse ([3e7eb2c](https://github.com/altspacevr/AltspaceSDK/commit/3e7eb2c))
- Bump release v0.16.2 ([e9f043d](https://github.com/altspacevr/AltspaceSDK/commit/e9f043d))
- Merge branch 'master' of github.com:AltspaceVR/AltspaceSDK into bug/texture-reuse ([b7dfb99](https://github.com/altspacevr/AltspaceSDK/commit/b7dfb99))
- Merge pull request #140 from AltspaceVR/bug/texture-reuse ([d1a6be1](https://github.com/altspacevr/AltspaceSDK/commit/d1a6be1))
- Trying to repro texture glitch ([752c315](https://github.com/altspacevr/AltspaceSDK/commit/752c315))
- Update tests and add batching test ([e86e544](https://github.com/altspacevr/AltspaceSDK/commit/e86e544))
",33642201
761,False,False,2016-07-28T00:24:46Z,2016-07-28T00:24:45Z,"<a name=""v0.16.1""></a>

## v0.16.1 (2016-07-28)
- Bump release v0.16.1 ([00132a6](https://github.com/altspacevr/AltspaceSDK/commit/00132a6))
- Fix Hello Hands example to handle hands entering and leaving the frame ([6838e00](https://github.com/altspacevr/AltspaceSDK/commit/6838e00))
- Merge pull request #139 from AltspaceVR/bug/leap-hands-example ([911ed4c](https://github.com/altspacevr/AltspaceSDK/commit/911ed4c))
",33642201
762,False,False,2016-07-27T00:53:15Z,2016-07-27T00:53:16Z,"<a name=""v0.16.0""></a>

# v0.16.0 (2016-07-27)
- Add templateSid to getSpace ([aef1c47](https://github.com/altspacevr/AltspaceSDK/commit/aef1c47))
- Bump release v0.16.0 ([d7bc8b3](https://github.com/altspacevr/AltspaceSDK/commit/d7bc8b3))
",33642201
763,False,False,2016-07-19T22:55:47Z,2016-07-19T22:56:00Z,"<a name=""v0.15.0""></a>

# v0.15.0 (2016-07-19)
- Bump for internal do updates ([6dedd85](https://github.com/altspacevr/AltspaceSDK/commit/6dedd85))
- Bump release v0.15.0 ([eac25c1](https://github.com/altspacevr/AltspaceSDK/commit/eac25c1))
",33642201
764,False,False,2016-07-14T18:26:43Z,2016-07-14T18:26:39Z,"<a name=""v0.14.1""></a>

## v0.14.1 (2016-07-14)
- Bump release v0.14.1 ([da7bf8b](https://github.com/altspacevr/AltspaceSDK/commit/da7bf8b))
- Fix relative paths in popup example ([4de79d5](https://github.com/altspacevr/AltspaceSDK/commit/4de79d5))
- Merge pull request #138 from AltspaceVR/feature/experience-ui ([bcc4dcb](https://github.com/altspacevr/AltspaceSDK/commit/bcc4dcb))
",33642201
765,False,False,2016-07-14T17:56:53Z,2016-07-14T17:56:49Z,"<a name=""v0.14.0""></a>

# v0.14.0 (2016-07-14)
- Add example for popup API ([a9c6e40](https://github.com/altspacevr/AltspaceSDK/commit/a9c6e40))
- Add new examples to index ([7a712c9](https://github.com/altspacevr/AltspaceSDK/commit/7a712c9))
- Bump release v0.14.0 ([035b86f](https://github.com/altspacevr/AltspaceSDK/commit/035b86f))
- Merge pull request #137 from AltspaceVR/feature/experience-ui ([8481f0a](https://github.com/altspacevr/AltspaceSDK/commit/8481f0a))
",33642201
766,False,False,2016-06-29T22:29:53Z,2016-06-29T22:29:51Z,"<a name=""v0.13.2""></a>

## v0.13.2 (2016-06-29)
- Bump release v0.13.2 ([2deae48](https://github.com/altspacevr/AltspaceSDK/commit/2deae48))
- Merge pull request #136 from AltspaceVR/bugfix/disable-firebase-auth ([51fba8a](https://github.com/altspacevr/AltspaceSDK/commit/51fba8a))
- Temporarily disable firebase auth ([4913053](https://github.com/altspacevr/AltspaceSDK/commit/4913053))
",33642201
767,False,False,2016-06-03T08:31:51Z,2016-06-03T08:31:48Z,"<a name=""v0.13.1""></a>

## v0.13.1 (2016-06-03)
- Bump release v0.13.1 ([dd26ee8](https://github.com/altspacevr/AltspaceSDK/commit/dd26ee8))
- Merge pull request #135 from AltspaceVR/bugfix/remove-redundand-tracking-api ([3528097](https://github.com/altspacevr/AltspaceSDK/commit/3528097))
- Remove redudnant tracking API call. Was just causing wasted allocations in the client ([51f9c53](https://github.com/altspacevr/AltspaceSDK/commit/51f9c53))
",33642201
768,False,False,2016-06-02T01:23:10Z,2016-06-02T01:23:11Z,"<a name=""v0.13.0""></a>

# v0.13.0 (2016-06-02)
- Add synced dice example ([6b74d2c](https://github.com/altspacevr/AltspaceSDK/commit/6b74d2c))
- Bump release v0.13.0 ([a83ecf8](https://github.com/altspacevr/AltspaceSDK/commit/a83ecf8))
- Merge pull request #134 from AltspaceVR/feature/synced-dice ([f6f5d2f](https://github.com/altspacevr/AltspaceSDK/commit/f6f5d2f))
",33642201
769,False,False,2016-05-19T18:17:03Z,2016-05-19T18:16:59Z,"<a name=""v0.12.1""></a>

## v0.12.1 (2016-05-19)
- Fixes to steamvr input example
",33642201
770,False,False,2016-04-30T07:24:48Z,2016-04-30T07:24:42Z,"<a name=""v0.12.0""></a>

# v0.12.0 (2016-04-30)
- . ([6e25af3](https://github.com/altspacevr/AltspaceSDK/commit/6e25af3))
- Add test for texture repeat and offset ([afa7a2a](https://github.com/altspacevr/AltspaceSDK/commit/afa7a2a))
- Bump release v0.12.0 ([d6033d3](https://github.com/altspacevr/AltspaceSDK/commit/d6033d3))
- Merge branch 'master' of github.com:AltspaceVR/AltspaceSDK into feature/texture-repeat-offset ([1fafc2f](https://github.com/altspacevr/AltspaceSDK/commit/1fafc2f))
- Merge pull request #132 from AltspaceVR/feature/texture-repeat-offset ([e0229bf](https://github.com/altspacevr/AltspaceSDK/commit/e0229bf))
- Remove mirrored repeat support. Tweak test ([6fa2892](https://github.com/altspacevr/AltspaceSDK/commit/6fa2892))
- Sync text animation ([427337a](https://github.com/altspacevr/AltspaceSDK/commit/427337a))
- Update feature support notes ([050198a](https://github.com/altspacevr/AltspaceSDK/commit/050198a))
",33642201
771,False,False,2016-04-28T05:08:03Z,2016-04-28T05:08:02Z,"<a name=""v0.11.2""></a>

## v0.11.2 (2016-04-28)
- Allow apps to catch sync errors ([86fdb44](https://github.com/altspacevr/AltspaceSDK/commit/86fdb44))
- Add missing documentation for cursorenter and cursorleave events
- Bump release v0.11.2 ([5f2e08f](https://github.com/altspacevr/AltspaceSDK/commit/5f2e08f))
- Merge pull request #131 from AltspaceVR/bugfix/sync-error-propagation ([c4c5e5b](https://github.com/altspacevr/AltspaceSDK/commit/c4c5e5b))
",33642201
772,False,False,2016-04-26T08:18:31Z,2016-04-26T08:18:33Z,"<a name=""v0.11.1""></a>

## v0.11.1 (2016-04-26)
- Bump release v0.11.1 ([50c23c4](https://github.com/altspacevr/AltspaceSDK/commit/50c23c4))
- Merge pull request #130 from AltspaceVR/other/cleanup-docs ([be48ba0](https://github.com/altspacevr/AltspaceSDK/commit/be48ba0))
- Update supported material properties ([a6184cc](https://github.com/altspacevr/AltspaceSDK/commit/a6184cc))
",33642201
773,False,False,2016-04-26T04:30:34Z,2016-04-26T04:30:37Z,"<a name=""v0.11.0""></a>

# v0.11.0 (2016-04-26)
- Add stress test for transparency ([a9a54ae](https://github.com/altspacevr/AltspaceSDK/commit/a9a54ae))
- Add transparency best practice ([8f83fb4](https://github.com/altspacevr/AltspaceSDK/commit/8f83fb4))
- Bump release v0.11.0 ([6627a60](https://github.com/altspacevr/AltspaceSDK/commit/6627a60))
- Fix test ([a51735b](https://github.com/altspacevr/AltspaceSDK/commit/a51735b))
- Merge pull request #129 from AltspaceVR/feature/transparency ([c25cc07](https://github.com/altspacevr/AltspaceSDK/commit/c25cc07))
- Transparency test tweaks ([8972a72](https://github.com/altspacevr/AltspaceSDK/commit/8972a72))
- Tweak test ([25db936](https://github.com/altspacevr/AltspaceSDK/commit/25db936))
- Tweak transparency tests ([631edd1](https://github.com/altspacevr/AltspaceSDK/commit/631edd1))
",33642201
774,False,False,2016-04-19T18:08:49Z,2016-04-19T18:08:53Z,"<a name=""v0.10.0""></a>

# v0.10.0 (2016-04-19)
- Bump release v0.10.0 ([a8b1204](https://github.com/altspacevr/AltspaceSDK/commit/a8b1204))
- Touch file to force a push ([2671695](https://github.com/altspacevr/AltspaceSDK/commit/2671695))
",33642201
775,False,False,2016-04-19T18:04:11Z,2016-04-19T18:04:15Z,"<a name=""v0.9.1""></a>

## v0.9.1 (2016-04-19)
- Add index of examples ([e992dd2](https://github.com/altspacevr/AltspaceSDK/commit/e992dd2))
- Add new test to index ([7af637b](https://github.com/altspacevr/AltspaceSDK/commit/7af637b))
- Add test for dynamic mirroring changes ([54e2398](https://github.com/altspacevr/AltspaceSDK/commit/54e2398))
- Add tests for mirrored objects ([ad6ac22](https://github.com/altspacevr/AltspaceSDK/commit/ad6ac22))
- Bump release v0.9.1 ([6ad2d27](https://github.com/altspacevr/AltspaceSDK/commit/6ad2d27))
- fix compact mode ([a1e1856](https://github.com/altspacevr/AltspaceSDK/commit/a1e1856))
- Fixed dynamic sidedness in client ([c246e20](https://github.com/altspacevr/AltspaceSDK/commit/c246e20))
- Initial pass at r74 support ([7d632ac](https://github.com/altspacevr/AltspaceSDK/commit/7d632ac))
- Merge branch 'master' of github.com:AltspaceVR/AltspaceSDK into feature/three-r74 ([a3a6a2e](https://github.com/altspacevr/AltspaceSDK/commit/a3a6a2e))
- Merge branch 'master' of github.com:AltspaceVR/AltspaceSDK into feature/three-r74 ([16f2b32](https://github.com/altspacevr/AltspaceSDK/commit/16f2b32))
- Merge pull request #127 from AltspaceVR/feature/three-r74 ([7a00765](https://github.com/altspacevr/AltspaceSDK/commit/7a00765))
- Remove extra meshes in planets ([452b46e](https://github.com/altspacevr/AltspaceSDK/commit/452b46e))
- Restore perf test ([b3ca0b6](https://github.com/altspacevr/AltspaceSDK/commit/b3ca0b6))
- Set planets to full brightness ([9b6ff2e](https://github.com/altspacevr/AltspaceSDK/commit/9b6ff2e))
- switch all examples to r74 ([832e651](https://github.com/altspacevr/AltspaceSDK/commit/832e651))
- Test for sided-materials ([fd774bb](https://github.com/altspacevr/AltspaceSDK/commit/fd774bb))
- Tweak renderer tests ([f7251df](https://github.com/altspacevr/AltspaceSDK/commit/f7251df))
- Use minified versions of scripts ([2c19ec7](https://github.com/altspacevr/AltspaceSDK/commit/2c19ec7))
- Use OBJMTLLoader shim ([9e2a0aa](https://github.com/altspacevr/AltspaceSDK/commit/9e2a0aa))
",33642201
776,False,False,2016-04-18T23:57:59Z,2016-04-18T23:58:07Z,"<a name=""v0.9.0""></a>

# v0.9.0 (2016-04-18)
- Bump release v0.9.0 ([c2660ca](https://github.com/altspacevr/AltspaceSDK/commit/c2660ca))
- Merge pull request #126 from AltspaceVR/feature/upgrade-spinning-cube ([fcfaf90](https://github.com/altspacevr/AltspaceSDK/commit/fcfaf90))
- Scale cube to be 1 meter in altspace ([e08238a](https://github.com/altspacevr/AltspaceSDK/commit/e08238a))
",33642201
777,False,False,2016-04-16T01:45:36Z,2016-04-16T01:45:40Z,"<a name=""v0.8.0""></a>

# v0.8.0 (2016-04-16)
- Add support for SteamVR input devices via `altspace.getGamepads()`
",33642201
778,False,False,2016-04-07T19:18:00Z,2016-04-14T19:37:52Z,"<a name=""v0.6.2""></a>

# v0.6.2 (2016-04-07)
- Lint code in Travis CI with ESLint
- Use consistent indentation
",33642201
779,False,False,2016-04-14T19:30:03Z,2016-04-14T19:30:13Z,"<a name=""v0.7.0""></a>

# v0.7.0 (2016-04-14)
- Add cursor shim support for non-fullscreen windows ([a7b0c67](https://github.com/altspacevr/AltspaceSDK/commit/a7b0c67))
",33642201
780,False,False,2016-04-07T08:36:28Z,2016-04-07T08:36:25Z,"<a name=""v0.6.1""></a>

## v0.6.1 (2016-04-07)
- Bump release v0.6.1 ([a7c03b6](https://github.com/altspacevr/AltspaceSDK/commit/a7c03b6))
- Merge pull request #119 from AltspaceVR/bugfix/faster-gearvr-sync ([ea96f8f](https://github.com/altspacevr/AltspaceSDK/commit/ea96f8f))
- Optimize Object3DSync on GearVR ([faf33e1](https://github.com/altspacevr/AltspaceSDK/commit/faf33e1))
",33642201
781,False,False,2016-04-02T01:39:28Z,2016-04-02T01:39:28Z,"<a name=""v0.6.0""></a>

# v0.6.0 (2016-04-02)
- Bump release v0.6.0 ([ae35b63](https://github.com/altspacevr/AltspaceSDK/commit/ae35b63))
- Merge pull request #118 from AltspaceVR/feature/better-npm ([100ecf3](https://github.com/altspacevr/AltspaceSDK/commit/100ecf3))
- Use a UMD wrapper and fix package.json issues ([c8d8806](https://github.com/altspacevr/AltspaceSDK/commit/c8d8806))
",33642201
782,False,False,2016-03-07T14:00:18Z,2016-03-07T14:00:24Z,"<a name=""v0.5.3""></a>

## v0.5.3 (2016-03-07)

### Doc
- Doc: HoverColor config.color property is actually a THREE.Color ([2eaff14](https://github.com/altspacevr/AltspaceSDK/commit/2eaff14))
- Doc: Improve docs for Drag, Object3DSync and feature support ([90a1dc3](https://github.com/altspacevr/AltspaceSDK/commit/90a1dc3))

### Stability
- Stability: Added a test to catch regressions when rendering clones. ([89aaa00](https://github.com/altspacevr/AltspaceSDK/commit/89aaa00))
- Bump release v0.5.3 ([a40bd31](https://github.com/altspacevr/AltspaceSDK/commit/a40bd31))
- Merge pull request #116 from AltspaceVR/other/doc-fixes ([5e9e8d9](https://github.com/altspacevr/AltspaceSDK/commit/5e9e8d9))
- Merge pull request #117 from AltspaceVR/other/cloning-test ([7d299c2](https://github.com/altspacevr/AltspaceSDK/commit/7d299c2))
",33642201
783,False,False,2016-03-06T23:37:29Z,2016-03-06T23:37:35Z,"<a name=""v0.5.2""></a>

## v0.5.2 (2016-03-06)
- Actually update URL after generating instanceId ([e614b4f](https://github.com/altspacevr/AltspaceSDK/commit/e614b4f))
- Bump release v0.5.2 ([f035de6](https://github.com/altspacevr/AltspaceSDK/commit/f035de6))
- Merge pull request #115 from AltspaceVR/bugfix/sync-instanceid-url ([0ddc579](https://github.com/altspacevr/AltspaceSDK/commit/0ddc579))
",33642201
784,False,False,2016-03-05T02:39:11Z,2016-03-05T02:59:45Z,"<a name=""v0.5.1""></a>

## v0.5.1 (2016-03-05)
- Bump release v0.5.1 ([ee61779](https://github.com/altspacevr/AltspaceSDK/commit/ee61779))
- Make sync optional in the Drag behavior ([d9d83b6](https://github.com/altspacevr/AltspaceSDK/commit/d9d83b6))
- Merge pull request #114 from AltspaceVR/bugfix/syncless-drag ([59b8aa1](https://github.com/altspacevr/AltspaceSDK/commit/59b8aa1))
",33642201
785,False,False,2016-02-29T21:09:55Z,2016-02-29T21:10:08Z,"- Sync Utility Improvements
  - added [`connect`](http://altspacevr.github.io/AltspaceSDK/doc/sync.html#connect) function
    -The [`Connection`](http://altspacevr.github.io/AltspaceSDK/doc/sync-Connection.html) that is returned now contains references to more Firebase endpoints to allow easier storage of state per-user, per-space, or globally for the app.
  - Depreciated `getInstance` method as this functionality has been merged into `connect`. The function will be removed in the next minor version bump.
",33642201
786,False,False,2016-02-22T01:26:58Z,2016-02-22T01:27:05Z,"<a name=""v0.4.2""></a>

## v0.4.2 (2016-02-22)
- Add note about visibility issue ([ce4cd0b](https://github.com/altspacevr/AltspaceSDK/commit/ce4cd0b))
- Bump release v0.4.2 ([de712ad](https://github.com/altspacevr/AltspaceSDK/commit/de712ad))
",33642201
787,False,False,2016-02-22T00:43:44Z,2016-02-22T00:43:50Z,"<a name=""v0.4.1""></a>

## v0.4.1 (2016-02-22)
- Add links to local dev setup and app guidelines ([7e515dd](https://github.com/altspacevr/AltspaceSDK/commit/7e515dd))
- Add links to local dev setup and app guidelines ([dcdf1cf](https://github.com/altspacevr/AltspaceSDK/commit/dcdf1cf))
- Bump release v0.4.1 ([ae26279](https://github.com/altspacevr/AltspaceSDK/commit/ae26279))
- POT texture clarification ([983f525](https://github.com/altspacevr/AltspaceSDK/commit/983f525))
- POT texture clarification ([e8db852](https://github.com/altspacevr/AltspaceSDK/commit/e8db852))
- Remove codepen ([4bfc1e0](https://github.com/altspacevr/AltspaceSDK/commit/4bfc1e0))
- Remove codepen ([7eea46d](https://github.com/altspacevr/AltspaceSDK/commit/7eea46d))
- Remove interactive prompt for automated publish ([094114b](https://github.com/altspacevr/AltspaceSDK/commit/094114b))
",33642201
788,False,False,2016-02-04T22:17:32Z,2016-02-04T22:17:39Z,"> _Some of these changes have existed in master for a few weeks without being part of an official release_  
- General
  - We are now have a [package](https://www.npmjs.com/package/altspace) on NPM!
  - Compatible with three.js r73
  - The `/latest/` CDN location has been depreciated and we are switching to only supporting specific versions on our CDN. This will allow us to ship non-backwards compatible changes without breaking live apps
  - Error logging from behaviors has been improved
  - CodePen examples should no longer run when they are viewed as tiles in AltspaceVR
- Synchronization Improvements
  - `Object3DSync` now uses an ownership based model
    - `enqueSend` or the `auto` flag is no longer needed, as updates will now be sent automatically by the owner
    - Ownership can checked using `isMine` and be changed using `takeOwnership()`
  - A `clientsRef` property is exposed that will contain a list of connected clients. This can be used to listen for joining / leaving clients.
  - A `isMasterClient` is now present on `SceneSync`. This can be used to do an action on only a single connected client. It is guaranteed that only one client will have this flag turned on (usually the last to join).
  - Replaced `syncData` with `dataRef`, which is an actual Firebase object which allow for more powerful sync logic (such as being alerted when certain data changes on an object)
  - Examples and behaviors have been updated to use the new ownership model
- New APIs
  - Touchpad API
    - Control your application using the GearVR touchpad
  - Gamepad API
    - Control your application using a gamepad. Currently only Xbox 360 controllers on desktop are officially supported, but we hope to expand this soon.
- New Examples
  - Gamepad Cube
    - Using Gamepad Controls behavior to manipulate a cube
  - Telekinetic Cubes
    - Manipulate cubes using Gear VR touchpad
  - Hats
    - Demonstrates using tracking skeleton API to put hat on avatar head
  - Examples can now be run from GitHub Pages (http://altspacevr.github.io/AltspaceSDK/examples/chess.html for example)
- New Behaviors
  - HoverColor
    - Change the color of object when the cursor is over it
  - TouchpadRotate
    - Rotate an object using the GearVR touchpad
  - GamepadControls
    - Uses the Gamepad API to move/rotate/scale an object using a controller
- New Utilities
  - Mutiloader
    - Easily load multiple .obj / .mtl files
- Renderer Improvements
  - Performance improvements, enabling apps to work on Gear VR
    - Material batching. Improved performance for apps that use multiple instances of materials
    - Increased app framerates
    - Reduced frame locking
    - Reduced memory usage
  - Support for THREE.BufferedGeometry
  - Improved logging for vertex count limits and performance warnings
  - Increased texture sharpness and readability
  - Improvements for parity with Three.js capabilities
  - Minor fix to make textures consistent across platforms
",33642201
789,False,False,2015-10-29T00:22:18Z,2015-10-29T00:35:25Z,"- Added Examples
  -  Placing Cubes
    - Demonstrates SceneSync destroyers and dragging of objects in a plane
- Updated Behaviors
  - SceneSync
    - Changed destructors -> destroyers to align naming
    - Enabled the use of a default destroyer alongside a custom one by returning true from the custom destroyer
    - Made default destroyer actually dispose memory
  - Object3DSync
  - Bob
    - Can now enable position bobbing while still manually changing the position of objects
  - ButtonStateStyle
    - Made much more resilient to edge cases, should no longer get stuck in an incorrect state
- Updated Utilities
  - Behaviors
    - Now passes a reference to the Scene in Awake as the second paramater
",33642201
790,False,False,2015-10-24T01:38:00Z,2015-10-24T02:54:08Z,"- Improved Renderer
  - Improved performance for loading static textures
  - Renderer can now report back debug info about the scene (getThreeJSDebugInfo)
  - Improved support for various model formats (Collada, FBX)
  - Support for Three.js r72 and r73
  - Significant performance improvements for large scenes and scene updates
- [New Documentation Site](http://altspacevr.github.io/AltspaceSDK/doc/)
- Added Behavior System
  - Create scripts that have Awake, Start, and Update functions similar to modern game engines.
  - Enables better code sharing and reuse between projects
- Added Behaviors
  - SceneSync & Object3DSync
    - Instantiate, destroy, and update Object3Ds in your scene
    - Can use with altspace.utilities.sync in place of FirebaseSync
  - Layout
    - Easily position objects relative to the enclosure bounds or the bounds of other objects
- Added Simulation Utility
  - Easily setup a three.js app with AltspaceVR and behavior support
  - If you keep all of your update code in behaviors, you do not need to use additional intervals or requestAnimationFrame
- Added Examples
  - Living Room - Layout behavior
  - Adding Cubes - SceneSync behavior
- Reorganized Repository
  - Full source and build scripts for altspace.js
  - Core API tests (only runnable in the AltspaceVR browser)
- Upgraded to ES6 (ES2015)
  - We have upgraded a number of our source files to use ES6 and are using Babel for compilation
  - Use of ES6 is not required, but if you would like to do so feel free to use our (or your own) gulp system or switch your code pen to use Babel
- Added Source Maps for altspace.min.js  
",33642201
791,False,False,2015-09-17T02:54:46Z,2015-09-17T04:52:42Z,,33642201
792,False,False,2020-02-24T11:04:48Z,2020-02-24T11:07:01Z,"This release includes code changes to make building pointclouds and projecting laser into camera compatible with RTK reference data.

For more information, see https://robotcar-dataset.robots.ox.ac.uk/ground_truth/.",71480611
793,False,False,2019-09-04T11:07:20Z,2019-09-04T11:10:43Z,"This release includes the new data loaders for the extension dataset: the [Oxford Radar RobotCar dataset](https://ori.ox.ac.uk/datasets/radar-robotcar-dataset).

Also included are some minor fixes, most notably for the load image returned pixel type.",71480611
794,False,False,2019-04-14T15:59:22Z,2019-04-14T16:01:13Z,"Includes some fixes for file parsing, virtual environment helpers, and more python3 compatibility fixes",71480611
795,False,False,2017-04-07T09:16:56Z,2017-04-07T09:20:12Z,Includes some fixes for python 3 compatibility. Source code downloads now include camera models.,71480611
796,False,False,2017-02-10T12:00:16Z,2017-02-10T12:02:16Z,"Faster image undistortion in the python tools
",71480611
797,False,False,2017-02-01T12:14:53Z,2017-02-01T17:49:27Z,"This release includes new Python tools, which mirror the existing MATLAB tools.

The camera models, previously a separate download, are now also included.
",71480611
798,False,False,2016-10-20T16:05:49Z,2016-10-20T16:08:52Z,,71480611
799,False,False,2018-02-01T15:33:42Z,2018-02-01T15:35:57Z,"Version 2.0 of ICAROUS, a.k.a., ICAROUS-2
* ICAROUS-2 stands for Independent Configurable Architecture for Reliable Operations of Unmanned Systems with Distributed On-Board Services (DOS).
* ICAROUS-2 is a software architecture intended to be independent from the middleware. It is currently instantiated with cFS, but it supports SHREC*'s SBD (cFS with DDS bus). More middleware may be supported in the future. [* SHREC is the University of Pittsburgh NSF Center for Space, High-performance, Resilient Computing] 
* ICAROUS-2 modules, e.g., monitoring, detect and avoid, geo-fencing are distributed cFS applications.
* ICAROUS-2 includes a PLEXIL executive cFS application.
* ICAROUS-2 decision-making is implemented in PLEXIL.
* Support for Java is removed.",66090748
800,False,False,2017-10-17T19:11:51Z,2018-01-25T21:04:41Z,"This is the final version in the 1.x family. Code-wise, this version is equivalent to v1.2.2.",66090748
801,False,False,2017-07-28T18:43:27Z,2017-07-28T18:45:28Z,Includes fixes to C++ code and configuration parameters for ICAROUS Sense and Avoid Characterization (ISAAC) study. ,66090748
802,False,False,2017-07-24T20:39:55Z,2017-07-24T20:45:53Z,"* Minor tweaks to mostly ICAROUS-Safeguard interface.
* Fixed issue with gitignore file and added missing CFS files",66090748
803,False,False,2017-07-05T17:46:03Z,2017-07-05T17:48:57Z,This version of ICAROUS includes interface application to Core Flight System (CFS). ,66090748
804,False,False,2017-03-22T19:43:31Z,2017-03-22T20:47:03Z,"- Includes DAIDALUS 1.0.1.
- ICAROUS has been extensively tested using the Ardupilot flight stack. Several minor bugs have been addressed.
- C++ interface has been debugged and added to the code.
- Baseline ICAROUS functionalities for simple waypoint missions:
  - Prevent keep-in geofence violation (Bounce back and continue to next feasible waypoint).
  - Prevent keep-out geofence violation (Replan flight plan to avoid keep-out fence).
  - Detect and Avoid functionality (Autonomously avoid traffic and geofences).
  - Flight plan deviation monitoring (Autonomously returns back to nearest point on flightplan).
- Track a user defined object.
",66090748
805,False,True,2016-11-23T20:56:09Z,2016-11-23T20:48:58Z,"The Java version of this release includes Mavlink communication module and basic decision making capabilities.
",66090748
806,False,False,2020-01-30T21:02:59Z,2020-01-30T21:36:26Z,"* Hotfix containing only stability improvements over v3.6.1
* Analysis of feature models only performed if automatic analysis is enabled in the menu (#942, #944)
* Migrated FeatureIDE library examples to the API of v3.6.x (#918)
* Stability of feature model editor improved (#896, #929, #924, #937, #948, #945, #927, #925, #940)
* Automated collapsing of feature models depending on the viewer size is fixed (#938)
* Deletion of multiple features or constraints simultaneously is fixed (#935, #957)
* Fixed problem with missing default configuration when loading FeatureIDE examples (#911)
* Compatibility problems with Eclipse 2019-09 or newer fixed (#908)
* Usability of creation wizard for configurations improved (#926)
* Export of feature dependency information fixed (#931)
* Computation of implicit constraints for submodels fixed (#920)
* Sampling algorithms now support also feature names with special chars (#880)
* Usage of random seeds for certain analyses (#915)
* JavaDoc problems fixed and now checked in CI (#952)",13869700
807,False,False,2019-10-31T21:16:39Z,2019-10-31T21:24:10Z,"* Hotfix containing only stability improvements over v3.6.0
* Configuration editor required minutes after every click (#907)
* Random configurations differ in each run now (before the same seed has been used, see #915)
* Missing default configuration caused numerous problems (#911)
* Feature attributes can be updated again (#903)
* Wrong explanations for feature-model defects fixed (#905, #906, #897)
* Problems when importing feature models fixed (#793)
* Incompatibilities with Eclipse 2019-X fixed (#901)
* Feature-model slicing fixed (#900)
* Usability of feature attributes view improved (#862)
* Support for colors in attributes view (#857)

Critical and major bugs known but _not yet fixed_
* Random configurations are identical for a fixed feature model (#915, introduced in v3.6.0)
",13869700
808,False,False,2019-08-30T20:37:41Z,2019-08-30T20:55:37Z,"* Increased required Java version to 1.8
* New constraint view added listing cross-tree constraints
  * Filter of constraints based on selection in feature diagram
  * Filter based on keyword search
  * Pro tip: use hashtags in the constraint description to filter groups of constraints
* Improved feature diagram editor
  * Improved constraint editor functionality
  * Added additional tree layouts for feature diagram editor
  * Added TikZ (Latex) export for feature diagrams
  * Improved legend behavior (#603)
  * Improved/Fixed UI (#787, #802, #804 #806, #809, #821, #827, #845, #884)
* Improved configuration editor
  * Added proper error page
  * Improved handling for conflicting configurations due to feature model changes (#678)
  * Revised internal job handling
* Revised feature model format
  * Integrated graphical information for feature model
  * Removed separated file for storing graphical information of feature model
* Improved ant build scripts for fm.core and fm.attributes library and added readme.md files.
  * Added support for building fm.core library with maven (experimental)
* Improved configuration generators
  * Moved configuration generators to fm.core plug-in (also available in fm.core library)
  * Added new t-wise configuration generator (experimental)
  * Added new uniform random configuration generator (experimental)
  * Added testing and statistic tool for configuration generators (experimental)
* Revised/Refactored several classes
  * Added new framework for handling SAT problems and SAT solvers 
  * Revised feature model analyses and configuration analyses
  * Revised internal file handling for feature models and configurations
  * Revised handling and loading of extension (e.g. file formats)
  * Replaced some interfaces with standard functional interfaces of Java 1.8
  * Removed several deprecated classes and methods
* Fixed several issues regarding:
  * Configuration editor (#882)
  * Feature model edits view (#408)
  * Feature attribute view (#863)
  * Configuration map (#867)
  * Obfuscated feature model export (#877)
  * Editing color scheme (#890)
  * Configuration format (#764, #783)
  * DIMACS format (#764, #868, #869)
  * GUIDSL format (#871)
  * Extended feature model format (feature model attributes) (#855, #876)
* Critical and major bugs _introduced_ with this version
  * Feature attributes cannot be updated (#903)
  * Configuration editor requires minutes after every click (#907)
  * Wrong explanations for feature-model defects (#905, #906)
  * No default configuration selected when loading FeatureIDE example (#911)
  * Random configurations are identical for a fixed feature model (#915)
",13869700
809,False,False,2019-06-28T21:53:21Z,2019-06-28T21:59:31Z,"* Hotfix containing only stability improvements over v3.5.4
* Added example called FeatureModelAnalysis to illustrate how to analyze a feature model with the FeatureIDE library
* Numerous fixes for the framework composer (#779)
* Non-terminating builds prevented for AspectJ and framework projects (#826)
* Wrong number of false-optional features fixed in the statistics view (#832)
* Warning added to indicate that the calculated number of program variants in the statistics view could be incorrect in the presence of indeterminate hidden features (#741)
* Examples illustrating extended feature models have been improved (#866)
* Horizontal scrollbars added for the configuration map (#861)
* Action in feature diagram restored: Show Hidden Dependencies of Submodel (#875)
* Performance when editing extended feature models improved (#837)
* Fixed incompatibility with Eclipse 2018-12 and newer versions (#852)",13869700
810,False,False,2019-02-19T04:54:55Z,2019-02-19T05:27:36Z,"* Hotfix containing only stability improvements over v3.5.3
* Usability and stability of the feature attributes view improved (#847, #853, #856)
* Performance and appearance of the feature diagram improved (#785, #831)
* Fixed a bug due to which feature models have not been cloned properly (#859)
* Fixed compilation problems with JavaDoc (#748)
* Removed instable editing functionality in the feature model outline (#760)",13869700
811,False,False,2018-11-13T18:09:27Z,2018-11-13T18:34:53Z,"* Hotfix containing only stability improvements over v3.5.2
* Numerous issues with the FeatureHouse composer (#794)
* Improvements for execution of JUnit tests (#814, #819)
* Illegal feature names in extended feature models after Eclipse restart (#833)
* Removal of attributes when features are moved in the diagram (#829)
* Improved layouting of feature models (#825)
* Accidential change of siblings order (#803)
* All kinds of void feature models supported when editing constraints (#823)",13869700
812,False,False,2018-09-05T18:34:55Z,2018-09-05T18:50:47Z,"* Hotfix containing only stability improvements over v3.5.1
* Improved loading and saving of feature models (#759, #761, #771, #773, #776, #799)
* Better performance for feature models with large contraints (#780)
* Configuration only marked as invalid if the feature model is not void (#797)
* FeatureIDE library improved (#807)
* Mac users find a README in the prepackaged Eclipse when having trouble running unsigned code (#801)
* Numerous further issues fixed: https://github.com/FeatureIDE/FeatureIDE/milestone/26?closed=1",13869700
813,False,False,2018-06-30T21:14:10Z,2018-06-30T22:07:42Z,"* Hotfix containing only stability improvements over v3.5.0
* Better performance for analyses in constraint dialog (#736)
* Unused and false-optional features renamed to never-selected and always-selected features to avoid confusion (#705)
* Example projects added for extended feature models (#756)
* Numerous further issues fixed: https://github.com/FeatureIDE/FeatureIDE/milestone/25?closed=1
",13869700
814,False,False,2018-04-06T09:24:27Z,2018-04-06T09:53:06Z,"* Feature attributes can be defined with new view and stored in new format for extended feature models (#255, #650)
* New library without Eclipse dependencies for extended feature models (#714)
* New tool bar and revised context menu for feature diagrams (#648, #651, #672, #720)
* New notation for dead and false-optional features to avoid confusion with feature coloring (#649)
* Descriptions for cross-tree constraints (#648)
* Obfuscator for names in feature models (#667)
* Added examples with real-world configurations, namely Agrib and Profile (#606)
* Added examples for the FeatureIDE library (#664)
* Wizards for feature models and constraints available when installing only feature modeling (#649)
* Feature order can be changed by drag and drop (#649)
* Improved performance of readers and writers for XML and DIMACS formats (#695)
* Unified dialogs for importing and exporting feature models from/to different formats
* Fixed problems:
  * saving of feature models (#537, #591, #662, #677, #700)
  * layouting after renaming features (#604, #612)
  * wrong number of variants (#722)
  * impossible feature coloring (#708)
  * editing of redundant constraints (#622)",13869700
815,False,False,2018-02-12T15:02:17Z,2018-02-12T16:22:24Z,"* Hotfix containing only stability improvements over v3.4.2
* Void feature model detected in constraint dialog (#704) and correctly visualized in feature diagram (#681, #687, #484)
* Project explorer shows traces to all features (#593) and is refreshed if color scheme is deactived (#592)
* Renaming of features in configurations is fixed (#685) and tool tips disappear on Mac (#701)
* New configuration format more concise (does not store undefined features anymore) (#683)
* Markers for inconsistent mappings in Antenna projects fixed (#673)
* Feature interaction when collapsing explanations in feature diagram fixed (#682)
* Exceptions for feature diagrams (#703) and FeatureHouse projects (#680) fixed",13869700
816,False,False,2017-12-27T09:36:08Z,2017-12-27T10:22:52Z,"* Hotfix containing only stability improvements over v3.4.1
* Feature models created with v3.3.0 and v3.3.1 are correctly loaded (some or-groups were automatically transformed into mandatory features)
* Fixed problems: missing markers for invalid configurations, opening multiple configurations in project explorer
* Usability of feature diagram improved",13869700
817,False,False,2017-10-25T17:44:33Z,2017-10-25T17:48:46Z,"* Hotfix containing only stability improvements over v3.4.0
* Removed dependency from feature modeling to FeatureIDE
* Numerous fixes with respect to new configuration format
* Improvements for feature-model editor, configuration editor, explanations, and product generation",13869700
818,False,False,2017-09-19T13:47:42Z,2017-09-19T13:53:07Z,"* All feature diagram anomalies can be explained now (based on SAT4J's minimal unsatisfiable subset computation) 
* Visual explanations for feature diagrams improved
* XML format is used as default for new configurations (storing manual and automatic selection and deselection of concrete and abstract features)
* Configuration editor restores unchanged selection state when opened if configuration is saved in XML format
* Outline view for feature models available if only feature modeling is installed
* Numerous stability and performance improvements",13869700
819,False,False,2017-07-19T15:51:08Z,2017-07-19T16:18:04Z,"* Hotfix containing merely stability improvements over v3.3.1
* Improvements for FeatureIDE examples, feature-model editor, configuration editor, feature coloring, black-box frameworks, configuration map
",13869700
820,False,False,2017-05-05T11:50:16Z,2017-05-05T11:53:45Z,"* Hotfix containing only stability improvements over v3.3.0
* Improvements for configuration editor, feature-model editor, configuration map, random and t-wise configuration generation",13869700
821,False,False,2017-04-07T20:53:07Z,2017-04-07T21:00:06Z,"* Feature subtrees in feature diagram can be folded manually and automatically
* Visual explanations for feature-model defects (e.g., dead features)
* New view Configuration Map added for an overview on all user-defined configurations
* New visualizations on feature usage in configurations added (e.g., feature relations graph)
* Added new XML format to store configurations (including selection states of abstract features)
* New short cuts added for feature diagrams
* Improved usability of collaboration diagram, statistics view and colors in all views
* Improved performance for explanations on feature-diagram defects
* Improved feature-model slicing
* Improved FeatureIDE library and its build scripts",13869700
822,False,False,2016-12-21T07:35:55Z,2016-12-21T09:31:20Z,"- FeatureIDE Library: refactored main FeatureIDE functionality into Jar without dependencies to Eclipse
- New visualizations on the selection of features across configurations
- Improved performance for analysis of dead and false-optional features
- Improved warnings for unused and false-optional features and quick fix to create configurations automatically
- Content assist for annotations improved for preprocessor Antenna
- Improvements for product generation (to create and build products in batch mode)
",13869700
823,False,False,2016-10-04T17:10:28Z,2016-10-04T17:20:32Z,"- (Release used for FeatureIDE tutorial at SPLC in Beijing, China)
- Hotfix for product generation under Unix operating systems
",13869700
824,False,False,2016-09-16T12:31:12Z,2016-09-16T12:32:25Z,"- Several hotfixes regarding:
  - Example wizard and example projects (#393, #399)
  - Feature model editor and constraint dialog (#383, #389, #404, #406, #409, #420, #422)
  - Source code editor (#397, #402, #410)
  - Collaboration diagram (#395, #397)
  - Product generation (#384, #385, #413, #416)
- Added warnings in ""New Source File"" Dialog (#256)
- Added Automotive examples (large-scale feature models)
- Further stability improvements
",13869700
825,False,False,2016-07-21T09:13:24Z,2016-07-21T09:18:24Z,"- New extension point to exchange classes for features, constraints, and feature models with the factory pattern
- Explanations for anomalies in feature models
- Support to compute implicit constraints for subtrees of the feature model
- Export for feature models to the FAMA format
- Algorithm to refactor complex constraints (e.g., A or B) into simple requires and excludes constraints
- Several fixes for feature-model analysis, configuration checking, and legend of feature diagrams
- Improved tool support for multi-product lines
- Example wizard revised and new examples added
",13869700
826,False,False,2016-05-11T15:33:04Z,2016-05-11T15:37:11Z,"- Several Hotfixes:
  - Configuration is updated when opening configuration editor (Fix #345).
  - Feature model layout is saved properly (Fix #346).
  - Changes in feature model editor trigger outline refresh.
  - Feature models from outside the workspace can be saved properly.
- Further stability improvements
",13869700
827,False,False,2016-04-20T13:54:08Z,2016-04-20T13:55:30Z,"- Three new generators added for black-box frameworks, runtime parameters, and images
- New interfaces for feature model, features, and constraints to improve extensibility (new extension points are planned for 3.1.0)
- Improved performance for feature-model analyses and example wizard
- Statistics on feature models added in statistics view
- Usability improvements in feature-model editor
- Usability improvements in configuration editor (e.g., search, folding, revised highlighting)
- Feature-model slicing available
",13869700
828,False,False,2015-12-21T16:35:23Z,2015-12-02T16:50:59Z,"- Support for coloring features in project explorer, feature diagram, configuration, outline, collaboration diagram, and for generated files
- Fixed wrong statistics for preprocessors
- New functionality in outline for preprocessor Munge
- Improved consistency of nomenclature used in menus
- Improved short cuts of feature model editor
- Fixed several bugs and null pointers
",13869700
829,False,False,2015-06-17T14:18:13Z,2015-06-17T14:19:02Z,"- Improved outline with support for further langauges (Haskell, C#), nested classes, and with new filters
- Improved collaboration diagram with support for nested classes, new filters, and toolbar buttons
- Improved statistics view with LOC, support for nested classes, and jump-to-file actions
- Performance of automated analyses in the feature model editor improved (e.g., new calculation of dead and core features)
- Update problem with feature-model legend and constraints fixed (e.g., wrong highlighting of redundant constraints)
- Feature model outline revised
",13869700
830,False,False,2015-03-02T17:47:51Z,2015-03-02T17:48:18Z,"- Performance and appearance of constraint dialog for large feature models improved (automated analyses run asynchronously)
- Performance of configuration editor for large feature models improved (automated analyses run asynchronously)
- Improved support for multi product lines
- Error propagation when generating multiple products (e.g., all products, all user-defined configurations, t-wise sampling)
- Improved support for undo and redo in feature model editor
- Added more restrictions to feature names in favor of stability (please report to us, if legacy FeatureIDE projects can no longer be built)
- Deprecated action framework of Eclipse replaced
- FeatureIDE requires Java 1.7 (was Java 1.6 before)
",13869700
831,False,False,2009-05-12T14:46:23Z,2014-10-20T16:36:47Z,"- Welcome screen
- FeatureIDE perspective
- Edit view enhanced (shows added and removed products)
",13869700
832,False,False,2010-04-20T09:30:04Z,2014-10-20T16:36:06Z,"Release 2.4.1 (March 2010)
- Configuration editor synchronized with feature model editor (you do not need
  to close and reopen the configuration editor when changing the feature model)

Release 2.4.0 (February 2010)
- Collaboration diagram added as a new view

Release 2.3.5 (November 2009)
- Keyboard shortcuts for the feature model editor

Release 2.3.4 (September 2009)

Release 2.3.3 (August 2009)
- Editor for feature order as part of the feature model editor

Release 2.3.2 (July 2009)
- Feature order can be specified

Release 2.3.1 (June 2009)
",13869700
833,False,False,2010-11-03T16:43:02Z,2014-10-20T16:33:57Z,"Release 2.4.4 (September 2010)
- Features can be marked as hidden at the feature model (indicating that they
  are not visible at the configuration editor)

Release 2.4.3 (August 2010)
- Editor to create cross-tree constraints improved
- New XML format to store feature models with support for abstract features
- Editor for configurations is now a multi-page editor (including a source page
  and a simple editor)
- Features in the configuration editor are highlighted if their selection or
  elimination leads to a valid configuration
- Collaboration diagram shows method and fields

Release 2.4.2 (May 2010)
- Clean build is supported for FeatureIDE projects
",13869700
834,False,False,2011-01-23T19:01:05Z,2014-10-20T16:32:23Z,"- Any Eclipse project can be converted to a FeatureIDE project (right click on
  a project that is not a FeatureIDE project -> Add FeatureIDE nature)
- FeatureIDE projects can be run using ""Run as"" of the host language (e.g., as 
  ""Java application"")
- A generic wizard to create new FeatureIDE source files (New -> FeatureIDE
  file)
- A generic composer encapsulating composer-specific code into plug-ins
  (composer integration is easier and does not involve redundant effort)
- Munge preprocessor integrated as a new generator
",13869700
835,False,False,2011-03-28T08:28:11Z,2014-10-20T16:23:29Z,"- Warnings at feature folders indicating whether a feature is not implemented 
  (potentially abstract feature) or does not exist
- DeltaJ integrated as a new generator
- AspectJ integrated as a new generator
- Legend added at the feature model editor
- Simple implementation of a collaboration diagram for preprocessors
- Methods and fields are shown at collaboration diagram for FeatureHouse and FeatureC++
",13869700
836,False,False,2011-07-06T06:20:41Z,2014-10-20T16:23:02Z,"- Collaboration diagram supports further languages in FeatureHouse
",13869700
837,False,False,2011-08-19T13:13:10Z,2014-10-20T16:22:25Z,"- Support for redo and undo at the feature model editor
- Option to generate all products (right click on a FeatureIDE project ->
  Variant Builder)
- Error propagation for some languages of FeatureHouse
",13869700
838,False,False,2012-03-20T18:30:08Z,2014-10-20T16:21:58Z,"- New layout algorithms and manual layout at the feature model editor (right
  click at the feature diagram -> Set Layout)
- Automated analysis at the feature model editor (highlighting of dead and
  false-optional features)
- Preprocessor Antenna integrated as a new generator
- FeatureIDE outline as a new view showing also the methods of other roles
- Outline view for the feature model (better scalability for large models)
- Automatic conversion of FeatureIDE projects from AHEAD to FeatureHouse (right
  click on a FeatureIDE/AHEAD project -> Change composer to FeatureHouse) 
- Property page for feature model editor to change appearance of the feature
  diagram (right click on a FeatureIDE project -> Properties -> FeatureIDE -> 
  Feature Model Editor)
- Property page for FeatureIDE projects to change directories or the generator
  (right click on a FeatureIDE project -> Properties -> FeatureIDE -> Feature
  Project)
- A new option to create FeatureIDE projects without generator for feature
  modeling only
",13869700
839,False,False,2012-07-23T11:13:03Z,2014-10-20T16:21:27Z,"- Jak editor for AHEAD replaced with default Java editor
",13869700
840,False,False,2012-10-09T15:53:00Z,2014-10-20T16:21:00Z,"- Support for arbitrary feature names in feature diagram and constraint dialog
  (features containing whitespace must be placed within quotation marks in the
  constraint dialog; works only when no generator is selected for this project)
- Enhanced removal of features that occur in cross-tree constraints (feature
  references in constraints are replaced by other features if possible)
- Warnings for indeterminate hidden features (a hidden feature H is
  indeterminate if there is no constraint A <=> H, where A is a conjunction of
  non-hidden features and there is no logically equivalent non-hidden feature
  that can be used to determine the selection of H)
- Enhanced collaboration diagram with support for printing, showing 
  methods/fields
- Support for colors in Antenna and Munge projects as known from
  FeatureCommander
- Detection of contradictions and tautologies in preprocessor directives for
  Antenna and Munge
- Efficiency of feature diagram drawing improved
",13869700
841,False,False,2013-10-25T19:05:01Z,2014-10-20T16:20:34Z,"- Support for JML in FeatureHouse (contract composition can be configured using
  right click on a FeatureIDE project -> Properties -> FeatureIDE -> Feature
  Project -> Contract composition)
- Syntax errors for JML in FeatureHouse projects
",13869700
842,False,False,2013-10-25T19:08:40Z,2014-10-20T16:20:06Z,"- New AHEAD version integrated
- AHEAD projects can be composed with Jampack or Mixin (based on the settings
  in the project properties)
- New DeltaJ version integrated (now available for Eclipse 3.7 and 4.2, was
  only available for 3.6 before)
- Support for metaproduct generation for FeatureHouse projects
- Support for JML-based verification with KeY and JavaPathFinder
- JML contracts added to the collaboration diagram for FeatureHouse projects
",13869700
843,False,False,2013-10-25T19:10:29Z,2014-10-20T16:19:26Z,"- Family-based type checks of FeatureHouse projects fith fuji
- T-wise product generation with splcatool
",13869700
844,False,False,2014-04-30T14:20:40Z,2014-10-20T16:18:54Z,"- Advanced support for contracts in FeatureHouse projects (e.g., collaboration diagram and outline, error markers, statistics on contracts, improved variability encoding)
- Performance of feature-model editor and analyses improved
- New support for prioritizing products in t-wise generation
",13869700
845,False,False,2014-07-30T14:55:17Z,2014-10-20T16:18:24Z,"- Example wizard improved by hierarchical structure and keyword search
- Removed redundant calculations in composers that caused inconsistencies in threads
- Performance of configuration editor improved
",13869700
846,False,False,2014-10-20T15:40:19Z,2014-10-20T15:47:52Z,"- Support for Android projects with preprocessor Munge
- Family-based type checks with Fuji can be activated on demand (to overcome performance problems with large projects)
- Feature-model import from S.P.L.O.T. improved (can deal with several group types)
- Problems with preprocessor Antenna fixed
- Manual layout of and search for features in feature diagram with keyboard
- Graphical export of feature diagrams to SVG
",13869700
847,False,False,2013-10-28T15:30:20Z,2013-10-28T15:37:47Z,"- New view calculating statistics on FeatureIDE projects
- New outline and content assist for FeatureHouse projects added
- Colligens supports development with CPP (integrates TypeChef)
- Feature model editor improved
  - Feature descriptions can be edited using a new dialog
  - Automated analyses optimized
- Configuration editor improved
  - Icons and tool tips added giving relevant information on the feature model
",13869700
