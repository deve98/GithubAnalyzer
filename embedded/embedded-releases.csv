,Draft,Prerelease,Created_at,Published_at,Details,Id
0,False,False,2019-11-19T19:15:16Z,2019-11-20T15:42:14Z,"### Bug fixes

- Fixed Node 4 support, which broke in v2.7.3 (https://github.com/mde/ejs/commit/5e42d6cef15ae6f2c7d29ef55a455e8e49b5e76e, @mde)",28671602
1,False,False,2019-11-19T01:59:52Z,2019-11-20T15:39:53Z,"### Bug fixes

- Made the post-install message more discreet by following the example of [opencollective-postinstall](https://github.com/opencollective/opencollective-postinstall) (https://github.com/mde/ejs/commit/228d8e45b7ced2afd3e596c13d44aed464e57e43, @mde)",28671602
2,False,False,2019-11-13T20:52:11Z,2019-11-20T15:38:01Z,"### Features

- Added support for destructuring locals (#452, @ExE-Boss)
- Added support for disabling legacy `include` directives (#458, #459, @ExE-Boss)
- Compiled functions are now shown in the debugger (#456, @S2-)
- `function.name` is now set to the file base name in environments that support this (#466, @ExE-Boss)

### Bug Fixes

- The error message when `async != true` now correctly mention the existence of the `async` option (#460, @ExE-Boss)
- Improved performance of HTML output generation (#470, @nwoltman)",28671602
3,False,False,2019-09-02T19:31:11Z,2019-11-20T15:29:24Z,"### Deprecated:
- Added deprecation notice for use of `require.extensions` (@mde)
",28671602
4,False,False,2019-06-15T15:26:33Z,2019-06-15T15:30:26Z,"  * Correctly pass custom escape function to includes (@alecgibson)
  * Fixes for rmWhitespace (@nwoltman)
  + Examples for client-side EJS compiled with Express middleware (@mjgs)
  + Make Template constructor public (@ThisNameWasTaken)
  + Added `remove` function to cache (@S2-)
  * Recognize both 'Nix and Windows absolute paths (@mde)",28671602
5,False,False,2018-03-26T00:17:15Z,2018-03-26T00:41:11Z," + Add filename to error when include file cannot be found (@Leon)
 + Node v9 in CI (@Thomas)
 * Fixed special case for Express caching (@mde)
 + Added Promise/async-await support to `renderFile` (@mde)
 + Added notes on IDE support to README (@Betanu701)",28671602
6,False,False,2017-07-30T03:29:59Z,2017-07-30T03:34:48Z," * Pass configured escape function to `rethrow` (@straker)
 + Added vulnerabilities info into README (@mde)
 * Avoid creating function object in hot execution path (@User4martin)
 + Added benchmark (@User4martin)
 + Tests for looped includes (@User4martin)



",28671602
7,False,False,2017-02-16T20:42:57Z,2017-02-25T20:50:20Z,"- Use configured escape function for filenames in errors (@mde)
- Make file-loader configurable to allow template pre-processing (@hacke2)
- Improved `renderFile` performance (@nwoltman)
",28671602
8,False,False,2016-12-06T08:05:27Z,2016-12-06T08:09:32Z,"- Allow 'filename' for opts-in-data, but sanitize when rendered (@mde)
",28671602
9,False,False,2016-12-05T22:08:59Z,2016-12-05T22:12:27Z,"- Blackist more options from opts-in-data (@mde)
- Allow trailing comments in output modes (@mde)
- Added 'name' attribute for easy identification (@designfrontier)
",28671602
10,False,False,2016-11-28T21:18:16Z,2016-11-28T21:21:21Z,"- Blackist 'root' option from opts-in-data (@mde)
",28671602
11,False,False,2016-09-07T14:46:15Z,2016-09-07T14:54:22Z,"- Added link to EJS Playground (@RyanZim)
- Revert express auto 'root' option (@RyanZim)
",28671602
12,False,False,2016-07-25T17:13:51Z,2016-07-25T17:23:39Z,"- Output literal `%>` with `%%>` (Roy Miloh)
- Allow setting project root for includes (@cnwhy)
- UMD support for the browser (@RyanZim)
- Exported `escapeXML` method to allow manual escaping of output
- Tests for strict mode (@RyanZim, @mde)
- Added ESLint for project source code (@mde)
- Whitespace slurp in preprocessor include (@mmis1000)
- Improved line-number handling in errors (@Spikef)
- Various doc improvements (@RyanZim, Ionică Bizău)
",28671602
13,False,False,2016-05-24T19:20:31Z,2016-05-24T19:22:22Z,"- Added LICENSE file to release package
- Various documentation improvements (@RyanZim)
- Better line-numbers in errors (@dgofman)
",28671602
14,False,False,2016-01-24T05:07:19Z,2016-03-31T16:07:33Z,"- Strict-mode support (@mde)
- Express 4 support (@mde)
- Configurable localsName option (@mde)
",28671602
15,False,False,2015-09-07T04:06:07Z,2015-09-07T04:14:20Z,"- Whitespace slurp tag syntax -- `<%_  _%>` (@andidev)
",28671602
16,False,False,2015-07-11T20:10:33Z,2015-07-11T20:12:17Z,,28671602
17,False,False,2015-06-29T00:23:52Z,2015-06-29T00:24:31Z,,28671602
18,False,False,2015-02-23T01:25:47Z,2015-02-23T01:28:58Z,,28671602
19,False,False,2015-02-01T18:28:35Z,2015-02-01T18:30:32Z,"- Ability to customize name of the locals object with `ejs.localsName` (@mde)
- Ability to override `resolveInclude` for include-path lookup (@olivierkaisin)
- Only bundle rethrow() in client scripts when compileDebug is enabled (@TimothyGu)
- Copy `_with` from locals object to options object (@TimothyGu)
- Removed deprecation warnings (@mde)
- Significantly increased performance (@TimothyGu)
- Defer execution for `renderFile` callback, ensure async (@TimothyGu)
",28671602
20,False,False,2015-01-23T23:49:12Z,2015-01-23T23:52:49Z,"- Better filtering for deprecation notice when called from Express (@mde)
",28671602
21,False,False,2015-01-21T22:24:23Z,2015-01-21T22:29:45Z,"- Fix handling of variable output containing semicolons (@TimothyGu)
- Fix included files caching (@TimothyGu)
- Simplified caching routine (@TimothyGu)
- Filter out deprecation warning for `renderFile` when called from Express (@mde)
",28671602
22,False,False,2015-01-20T06:08:12Z,2015-01-20T06:09:04Z,"- 4x faster HTML escaping function, especially beneficial if you use lots of escaped locals (@TimothyGu)
- Up to 4x faster compiled functions in addition to above (@TimothyGu)
- Fix `//` in an expanded string (@TimothyGu)
- Fix literal mode without an end tag (@TimothyGu)
- Fix setting options to renderFile() through the legacy 3-argument interface (as is the case for Express.js) (@TimothyGu)
- Added version string to exported object for use in browsers (@mde)
",28671602
23,False,False,2015-01-12T19:06:16Z,2015-01-12T19:08:07Z,"- Fix harmony mode (@mde)
",28671602
24,False,False,2015-01-12T03:08:15Z,2015-01-12T03:09:31Z,"- Fix `debug` option (@TimothyGu)
- Fix two consecutive tags together (@TimothyGu)
",28671602
25,False,False,2015-01-11T20:14:19Z,2015-01-11T20:16:40Z,"- Fix `scope` option handling
- Improve testing coverage (@TimothyGu)
",28671602
26,False,False,2015-01-11T17:53:07Z,2015-01-11T17:57:34Z,"- Add `_with` option to control whether or not to use `with() {}` constructs
  (@TimothyGu)
- Revert hack for Etherpad Lite (@TimothyGu)
- Do not claim node < 0.10.0 support (@TimothyGu)
- Pin dependencies more loosely (@TimothyGu)
- Fix client function generation without using locals (@TimothyGu)
- Fix error case where the callback be called twice (@TimothyGu)
- Improve test coverage (@mde & @TimothyGu)
- Add `""use strict"";` to all JS files (@TimothyGu)
- Add a few more metadata fields to `package.json` (@TimothyGu)
- Fix absolute path inclusion (@TimothyGu) (#11)
",28671602
27,False,False,2015-01-06T21:01:24Z,2015-01-11T17:29:14Z,"- Fix crash on missing file
",28671602
28,False,False,2015-01-05T20:49:59Z,2015-01-05T22:13:08Z,,28671602
29,False,False,2015-01-04T23:20:19Z,2015-01-04T23:32:46Z,,28671602
30,False,False,2015-01-04T18:48:15Z,2015-01-04T18:49:36Z,,28671602
31,False,False,2016-11-30T22:15:42Z,2016-11-30T22:16:22Z,"This is the public source release of JW Player 7.8.0. 

The commercial release has been tagged 7.8.1 and contains additional features and fixes not present in this project. Create an account at https://dashboard.jwplayer.com/ to gain access to our video platform and commercial player.

Follow our product release notes here https://developer.jwplayer.com/jw-player/docs/developer-guide/release_notes/release_notes_7/#version78
",18307175
32,False,False,2016-05-24T17:45:35Z,2016-05-26T20:28:01Z,,18307175
33,False,False,2016-05-11T15:53:09Z,2016-05-13T14:01:06Z,,18307175
34,False,False,2016-02-24T22:16:29Z,2016-02-24T23:27:42Z,,18307175
35,False,False,2016-02-22T21:19:03Z,2016-02-22T22:06:49Z,"This is the open-source release of JW Player 7.3.2. To find out more about the commercial release and features see http://support.jwplayer.com/customer/portal/articles/1403726-jw-player-7-release-notes

Items addressed in this release:
https://github.com/jwplayer/jwplayer/issues?utf8=%E2%9C%93&q=milestone%3Av7.3.2
",18307175
36,False,False,2016-02-19T21:50:52Z,2016-02-19T22:27:17Z,"This is the open-source release of JW Player 7.3.1. To find out more about the commercial release and features see http://support.jwplayer.com/customer/portal/articles/1403726-jw-player-7-release-notes
",18307175
37,False,False,2016-02-01T21:14:58Z,2016-02-01T22:35:13Z,"This is the open-source release of JW Player 7.3.0. To find out more about the commercial release and features see http://support.jwplayer.com/customer/portal/articles/1403726-jw-player-7-release-notes
",18307175
38,False,False,2015-11-17T15:04:32Z,2015-11-17T16:49:03Z,"This is the open-source release of JW Player 7.2.1. To find out more about the commercial release and features see http://support.jwplayer.com/customer/portal/articles/1403726-jw-player-7-release-notes

### Changes since 7.2.0

The default preload setting in now unset. If preload is not defined in the setup options, a preload attribute will not be added to video tags, and no preloading will occur in the Flash player. Preload must explicitly be set to ""auto"", ""metadata"" or ""none"". ""metadata"" is also disabled in Flash for progressive downloads because it could lead to the entire mp4 being downloaded.

### CDN Hosted Player

The commercial build is versioned at 7.2.2 and depends on this build. It is available at these locations:
http://ssl.p.jwpcdn.com/player/v/7.2.2/jwplayer.js
https://ssl.p.jwpcdn.com/player/v/7.2.2/jwplayer.js
",18307175
39,False,False,2015-11-12T22:55:33Z,2015-11-15T23:18:11Z,"This is the open-source release of JW Player 7.2.0. To find out more about the commercial release and features see http://support.jwplayer.com/customer/portal/articles/1403726-jw-player-7-release-notes

### Features

Content Preload - Provides faster video startup by preloading media metadata, and/or starting to download the actual media. This is configured by setting a ""preload"" value of ""metadata"", ""auto"" or ""none"" in the setup options. If no value is set, the player will default to ""meta"". For html5 playback this maps to the video tag's preload attribute.

```
jwplayer('player-container').setup({
    file: 'video.mp4',
    preload: 'auto'
});
```

### CDN Hosted Player

The commercial build is available at these locations. This release also includes updates to the sharing and related video plugins:
http://ssl.p.jwpcdn.com/player/v/7.2.1/jwplayer.js
https://ssl.p.jwpcdn.com/player/v/7.2.1/jwplayer.js
",18307175
40,False,False,2015-10-06T18:09:47Z,2015-10-07T15:59:45Z,"This is the open-source release of JW Player 7.1.4. To find out more about the commercial release and features see http://support.jwplayer.com/customer/portal/articles/1403726-jw-player-7-release-notes#version714

### Fixes

This patch deals specifically with Flash playback issues caused by Chrome's Power Save feature. The player UI now hides when in a throttled state, displaying only the swf object element. Clicking on the throttled ""play"" button or right clicking and selecting ""Run Flash"" resumes playback from where it left off.

### Known Issues

We have not yet dealt with handing Chrome's Power Saving impact on audio only players (https://github.com/jwplayer/jwplayer/issues/679). Two work-arounds are available - self host the jwplayer.flash.swf on the same origin or query the object tag and set it's width and height to less than 5 pixels. The latter will be the default behavior for audio only players in 7.2.

### CDN Hosted Player

The commercial build is available at these locations:
http://ssl.p.jwpcdn.com/player/v/7.1.4/jwplayer.js
https://ssl.p.jwpcdn.com/player/v/7.1.4/jwplayer.js
",18307175
41,False,False,2015-09-22T20:57:20Z,2015-09-22T22:31:00Z,"This is the open-source release of JW Player 7.1.1. To find out more about the commercial release and features see http://support.jwplayer.com/customer/portal/articles/1403726-jw-player-7-release-notes

### Fixes
- Controls will not fade when autostarted unless player is moused over or touched (#704)
- Unkown CC track is appearing in captions menu with 608 captions (#720)
- getVisualQuality() broken as of 7.0.2 (#723)
- Handle Flash setup error (#736)
- Player buffers indefinitely when Flash plugin is blocked (#750)
- Can't play using Flash in Chrome with Power Save throttling (#751)

### CDN Hosted Player

The commercial build is available at these locations:
http://ssl.p.jwpcdn.com/player/v/7.1.1/jwplayer.js
https://ssl.p.jwpcdn.com/player/v/7.1.1/jwplayer.js
",18307175
42,False,False,2015-09-15T21:57:53Z,2015-09-18T16:04:31Z,"This is the open-source release of JW Player 7.1.0. To find out more about the commercial release and features see http://support.jwplayer.com/customer/portal/articles/1403726-jw-player-7-release-notes#version710

### Features

#### Small Player UI/UX

Devices with a smaller viewing area will now see a more mobile-friendly control bar UI. Font size has been increased and secondary control bar elements have been relocated to an overflow menu.

### Changes
- Legacy event listener has been removed. Backbone Events module is exposed in player instances as `jwplayer().Events`.
- `jwplayer().getWidth()` and `getHeight()` now always returns pixel dimensions.
- `jwplayer.utils.flashVersion()` now properly parses major and minor plugin version and returns a float (thanks @phdm!)
- Available providers is surfaced via `jwplayer.api.availableProviders`

### Fixes
- Improved menu visibility behavior when options are selected.
- Long lists of captions will now be properly selectable in overlay menu.
- Custom color config options
- Youtube videos will now correctly begin when our play button is touched on mobile devices.
- jwplayer.flash.swf url will be forced to http when the page is not secure 
- Handle apostrophe in poster image urls
- Fixed file naming of webpack chunks in build

Complete change list https://github.com/jwplayer/jwplayer/compare/v7.0.3...v7.1.0
",18307175
43,False,False,2015-08-31T19:56:37Z,2015-09-01T21:49:20Z,"This is the open-source release of JW Player 7.0.3. To find out more about the commercial release and features see http://support.jwplayer.com/customer/portal/articles/1403726-jw-player-7-release-notes#version703

### Changes

Prioritize fallback based on playlist item sources (m3u8, rtmp, mp4, webm...) rather than providers (html5, flash).

### Fixes
- Fixed touch events on Windows 10 devices to show controls appropriately.
- Fixed a display issue with poster images in audio only players.
",18307175
44,False,False,2015-08-17T14:25:44Z,2015-08-17T21:03:07Z,"This is the open-source release of JW Player 7.0.2. To find out more about the commercial release and features see http://support.jwplayer.com/customer/portal/articles/1403726-jw-player-7-release-notes#version702
- Add polyfill loading to setup steps
- Add btoa/atob base64 polyfills (<=IE9)
- Youtube provider is only loaded when needed
- Fixed seek and volume keyboard shortcuts
- Fixed Flash RTMP configuration options ignored
- Fixed handling of relative paths in Flash
- Fixed various UI and skin layout issues
- Flash stage video rendering has been removed
",18307175
45,False,False,2015-07-28T21:36:06Z,2015-08-17T18:59:50Z,"This is the open-source release of JW Player 7.0.1. To find out more about the commercial release and features see http://support.jwplayer.com/customer/portal/articles/1403726-jw-player-7-release-notes#version701

### Features
- `displaytitle` has been re-added as a configuration option
- `displaydescription` can be used to toggle the display of a file’s description field
- `visualplaylist` has been add as a configuration option. The default value is true, setting this to false will remove the visual playlist from the controlbar

### Changes
- Improved replay icon appearance in seven skin

### Fixes
- Hovering over the player in HTML5 shows mouseover cursor
- Removed unstyled icon appearances during player setup
",18307175
46,False,False,2015-07-07T20:55:40Z,2015-08-17T18:56:56Z,"This is the open-source release of JW Player 7.0.0. To find out more about the commercial release and features see http://support.jwplayer.com/customer/portal/articles/1403726-jw-player-7-release-notes#version700

### General Updates and enhancements
- All interface elements are rendered in HTML regardless of media provider. Flash media playback will get HTML controls
- JW Player will dynamically change media providers between playlist items for optimal video playback
- You can disable all cookies by setting cookies:”false” in player embed settings
- Flash cookies are no longer set by the player for storing any player states between sessions
- The player will timeout and fire a setup error if it takes longer than 10 seconds to load
- Download fallback has been removed
- Minimum version of Adobe Flash Player is 11.2
- YouTube will only render in HTML5
- Semantic naming of player versions

### API Updates
- New on('event') method to attach event handlers to a player instance
- New off('event') method to remove event handlers that are attached to a player instance
- New once('event') method to add one or more event handlers to a selected player instance. This handler can only be triggered once per element
- New trigger('event') method to trigger all events bound to the selected player instance
- New on('all') as an argument to listen to all events triggered
- New getProvider() method to find out which media provider is currently being used to render video
- All time events are reported to the full precision available and are no longer trimmed to three decimal places

### Quality of Experience API
- New event called firstFrame triggered when the first frame of a video is played
- New event called seeked triggered when playback resumes after seeking
- Built in Quality of Experience API that contains firstFrame, the total time for a player to set up, as well as the total time spent loading, paused, playing and idle
- New on('visualQuality') event triggered when the visual quality of a video changes during playback. This only works for HLS media files and contains the bitrate, width of the player, and the reason why the quality change happened
- Use getVisualQuality() to get the quality of the video currently playing

### Additional API Enhancements
- play events only fire once
- Original DOM container will be restored when removing player

### Updated CSS Skinning Model
- All JW Player 6 skins have been rebuilt in CSS and are included within the player
- Set the name of the your custom skin within JW Player embed configuration to apply custom styles to the player
- Use inactive, active, and background configuration options to quickly set the color styles to any skin
- All icons in JW7 are built using a font. See docs on creating fonts

### Known Issues and Upcoming Features
- Due to JW7's new skinning model, IE8 is not officially supported with JW7
- Logo can only be positioned in the top right corner
",18307175
47,False,False,2015-04-14T17:03:54Z,2015-04-14T17:05:05Z,"Read the [official JW Player 6.12 commercial release notes](http://support.jwplayer.com/customer/portal/articles/1403726-what-s-new-in-jw-player-6-x-#version612) on our website.
",18307175
48,False,False,2019-08-14T23:22:20Z,2019-08-14T23:27:04Z,,46462030
49,False,False,2019-07-10T03:16:40Z,2019-07-10T22:04:23Z,,46462030
50,False,False,2019-01-27T06:17:39Z,2019-01-27T06:20:31Z,,46462030
51,False,False,2018-11-21T21:04:18Z,2018-11-21T21:06:57Z,,46462030
52,False,False,2018-10-01T19:42:54Z,2018-10-01T19:45:29Z,,46462030
53,False,False,2018-08-15T18:59:50Z,2018-08-16T16:22:29Z,,46462030
54,False,False,2020-03-19T21:19:41Z,2020-03-19T21:20:43Z,"* Enhancements
  * Updated documentation to reflect changes in [`nerves_bootstrap 1.8`](https://github.com/nerves-project/nerves_bootstrap/releases/tag/v1.8.0)
    Updates references to `nerves_init_gadget` and replace with `nerves_pack`.
    This change shifts new projects and main documentation to promote the use of
    [`vintage_net`](https://github.com/nerves-networking/vintage_net) for device networking.
  * Bump the host installed `fwup` version requirement to `~> 1.5`.",50259821
55,False,False,2020-03-10T20:45:25Z,2020-03-10T20:47:23Z,"Nerves 1.6.0 adds support for Elixir 1.10.

As part of the update to Elixir 1.10, it became more difficult to support old
Elixir and Erlang versions. Therefore, Nerves 1.6.0 requires at least Elixir
v1.7.0 and Erlang/OTP 21. If your project requires an older version of Elixir or
Erlang/OTP you can pin the version of `nerves` to an older version.

For example, set your nerves dependency in your mix.exs to:

    {:nerves, ""~> 1.5.0"", runtime: false},

* Enhancements
  * Add support for aarch64 host architecture.
  * Add `mix firmware.metadata` for listing firmware metadata values.",50259821
56,False,False,2020-01-23T14:20:37Z,2020-01-23T14:21:29Z,"* Enhancements
  * Add `mix firmware.unpack` to unpack generated `.fw` files. This is useful
    to inspect the contents of the target root filesystem and other .fw info
    on the host.
  * Update `mix burn` to accept the path to a `.fw` file with `--firmware | -i`.

* Bug fixes
  * Invoke `mix firmware` when calling `mix firmware.image`. This matches the
    behavior of `mix firmware.burn`.
  * Fix issue with artifact base_dir expansion. This fixes an issue where mix
    would attempt to resolve the nerves dependency artifacts even though they
    have already been downloaded.
  * Always generate `erlinit.config`, even if there are no config override in
    mix config. This fixes an issue where removing overrides from mix config
    would not update the erlinit.config.",50259821
57,False,False,2019-12-09T16:43:46Z,2020-01-23T14:21:12Z,"* Bug fixes
  * Fix various erlinit option parsing/formatting issues.",50259821
58,False,False,2019-11-19T15:57:47Z,2019-11-19T15:58:18Z,"* Enhancements
  * erlinit.config options can be overridden using the application config now.
    For example, in your config.exs you can now add:

    ```elixir
    config :nerves, :erlinit,
      ctty: ""ttyAMA0""
    ```
  * Nerves tooling now supports setting the `SOURCE_DATE_EPOCH` environment
    variable for reproducible builds during compilation via `:source_date_epoch`
    in your application config. This removes timestamp differences between
    builds. See [reproducible-builds.org](https://reproducible-builds.org/) for more information.
  * Windows Subsystem for Linux improvements
  * Support `XDG_DATA_HOME`. If `XDG_DATA_HOME` is set, Nerves will now store its
    data under that directory.

* Bug fixes
  * Do not require sudo on `mix burn` if already privileged.
  * Keep all boot scripts. Previously, extraneous boot scripts from the OTP
    release process were removed. Keeping them makes it possible to start
    Erlang slave nodes and support use cases where triggers at device boot
    time launch different scripts.",50259821
59,False,False,2019-07-15T22:55:48Z,2019-07-15T22:56:10Z,"* Bug fixes
  * Update compiler check on `mix firmware` to use the system OTP version
    when recommending an Elixir install.
  * Check if using Distillery when calling `mix nerves.release.init`.
    This is no longer required for Elixir 1.9+ releases.",50259821
60,False,False,2019-07-11T13:14:30Z,2019-07-11T13:15:00Z,"**Updating to Nerves v1.5.0 requires modifications to your project**
See the [project update guide](https://hexdocs.pm/nerves/updating-projects.html#updating-from-v1-4-to-v1-5) to learn how to migrate your project.

* Enhancements
  * Added support for Elixir 1.9+ releases.

* Bug fixes
  * Do not include empty priv directories when constructing rootfs
    priorities.",50259821
61,False,False,2019-06-25T00:44:01Z,2019-06-25T00:45:44Z,"* Enhancements
  * Updated docs.

* Bug fixes
  * Updated the requirement for `distillery` to `~> 2.0.12`. This fixes an issue
    where `nerves` would downgrade to `1.4.0` when updating `shoehorn`.
  * Empty `priv` directories are not added to the squashfs sort ordering list.",50259821
62,False,False,2019-05-06T14:25:55Z,2019-05-06T14:28:20Z,"* Bug fixes
  * This improves the path fix in v1.4.3 (see
    https://github.com/nerves-project/nerves/issues/389) to cover the local
    build runner as well.
",50259821
63,False,False,2019-04-26T18:51:15Z,2019-04-26T18:53:42Z,"* Bug fixes
  * Raise an exception if the artifact cache fails to create a directory
  * Fixes `ArgumentError` when using OTP >= 21.3.0 and calling `mix nerves.system.shell`
  * Fixes issue with `mix nerves.system.shell` using `asdf` >= 0.7.0 where the
    path would contain `::` and Buildroot would raise the error:

    ```text
    You seem to have the current working directory in your
    PATH environment variable. This doesn't work.
    support/dependencies/dependencies.mk:21: recipe for target 'dependencies' failed
    ```",50259821
64,False,False,2019-04-01T21:27:47Z,2019-04-01T21:28:13Z,"* Improvements
  * Generate rootfs.priorities file. This is used internally when constructing
    the squashfs filesystem to arrange the contents in the order the files are
    loaded at runtime which improves boot performance.",50259821
65,False,False,2019-03-12T15:54:34Z,2019-03-12T15:55:32Z,"* Improvements
  * Improve error message when artifacts can't be found",50259821
66,False,False,2019-01-25T16:47:37Z,2019-01-25T16:48:24Z,"Version v1.4.0 adds support for Elixir 1.8's new built-in support for mix
targets. In Nerves, the `MIX_TARGET` was used to select the appropriate set of
dependencies for a device. This lets you switch between building for different
boards and your host. Elixir 1.8 pulls this support into `mix` and lets you
annotate dependencies for which targets they should be used.

See the [project update guide](https://hexdocs.pm/nerves/updating-projects.html#updating-from-v1-3-x-to-v1-4-x) to learn how to migrate your project.",50259821
67,False,False,2018-11-19T15:01:48Z,2018-11-19T15:02:14Z,"* Bug fixes
  * Fixed issue where specifying `build_runner_opts` without `build_runner`
    would prevent `build_runner_opts` from being set.
  * Allow `http_opts` to be merged in from the artifact site opts. This fixes
    an issue with downloading artifacts from github enterprise by specifying
    `[autoredirect: true]` in the artifact site opts.",50259821
68,False,False,2018-11-05T20:21:11Z,2018-11-05T20:22:50Z,"* Bug fixes
  * Lock dependency on distillery to `2.0.10` to work around:
    https://github.com/bitwalker/distillery/issues/585",50259821
69,False,False,2018-10-24T14:00:46Z,2018-10-24T14:04:52Z,"* Bug fixes
  * Improved handling for burning firmware with Windows Subsystem for Linux.
  * `mix nerves.deps.get` will raise if a download was incomplete or corrupt
    after trying all resolvers.
  * `mix firmware.burn` will call `mix firmware` to ensure the firmware is the
    latest.
  * `mix burn` was added to allow for burning the latest built firmware without
    calling `mix firmware`.",50259821
70,False,False,2018-08-21T11:50:37Z,2018-08-21T11:51:40Z,"This version adds support for Elixir ~> 1.7 which requires updates to your
Mix project.


**Modify the release config**

It is required to modify the `rel/config.exs` file.

Change this:

```
release :my_app do
  set version: current_version(:my_app)
  plugin Shoehorn
  if System.get_env(""NERVES_SYSTEM"") do
    set dev_mode: false
    set include_src: false
    set include_erts: System.get_env(""ERL_LIB_DIR"")
    set include_system_libs: System.get_env(""ERL_SYSTEM_LIB_DIR"")
    set vm_args: ""rel/vm.args""
  end
end
```

To this:

```
release :my_app do
  set version: current_version(:my_app)
  plugin Shoehorn
  plugin Nerves
end
```

**Update shoehorn**

You will need to update your version of shoehorn to `{:shoehorn, ""~> 0.4""}`.",50259821
71,False,False,2018-08-17T12:45:08Z,2018-08-21T11:51:17Z,"* Enhancements
  * Update minimum required version for fwup to at least 1.2.5",50259821
72,False,False,2018-08-15T16:06:35Z,2018-08-15T16:06:59Z,"* Enhancements
  * Added ability to override provisioning.conf in the project mix config.
    This can be done by setting the key `provisioning`.

    Example:

      ```
      config :nerves, :firmware,
        provisioning: ""config/provisioning.conf""

      # or delgate it to an app that sets nerves_provisioning: ""path/to/file""

      config :nerves, :firmware,
        provisioning: :nerves_hub
      ```
  * Bug Fixes
    * Fix issue with setting provisioning environment vairables when calling
      `mix firmware.burn` on Linux systems. Environment variables prefixed with
      `NERVES_` and the variable `SERIAL_NUMBER` will be copied into the environment.",50259821
73,False,False,2018-08-08T14:03:52Z,2018-08-08T14:15:28Z,"* Enhancements
  * Updated docs to bump required versions of tools.

* Bug Fixes
  * Docker build runner
    * Use the version of the `nerves_system_br` as the tag for the docker image
      to pull by default.
    * Create and set the user id and group id in the docker entrypoint.
      This fixes issues with building buildroot packages that require
      access to the users home folder.",50259821
74,False,False,2018-07-07T18:55:04Z,2018-07-07T18:55:57Z,"* Enhancements
  * `mix firmware.burn` can run within Windows Subsystem for Linux
  * Added `make_args` to `build_runner_opts`

  For example:
    
    You can configure the number of parallel jobs that buildroot
    can use for execution. This is useful for situations where you may
    have a machine with a lot of CPUs but not enough ram.
    
      # mix.exs
      defp nerves_package do
        [
          # ...
          build_runner_opts: [make_args: [""PARALLEL_JOBS=8""]],
        ]
      end",50259821
75,False,False,2018-06-07T14:44:54Z,2018-06-07T14:45:20Z,"* Enhancements
  * General documentation updates.
* Bug fixes
  * Do not fetch artifacts on deps.get if they are overridden using environment 
    variables like `NERVES_SYSTEM=/path/to/system`.",50259821
76,False,False,2018-05-01T20:21:09Z,2018-05-01T20:21:38Z,"* Bug Fixes
  * `Nerves.Artifact.BuildRunners.Docker` was running as root and caused file
    permission issues with the `deps` directory of the root `mix` project.
    The `Docker` build runner now executes as the same user id and group id as
    the host.

To fix docker permissions you will need to pull the latest docker image
`docker pull nervesproject/nerves_system_br:latest`",50259821
77,False,False,2018-04-30T18:32:49Z,2018-04-30T18:34:32Z,"This version renames the module `Nerves.Artifact.Provider` to
`Nerves.Artifact.BuildRunner`. This change should only affect custom systems
and host tools that override the defaults in `nerves_package` config.

* Enhancements
  * Allow specifying multiple rootfs_overlay directories in the config.
  * Automatically remove corrupt files from the download directory.
  * Updated System documentation.
* Bug Fixes
  * Check the download directory before attempting to download the artifact.
  * Changed the host tool check to use `System.find_executable(""command"")` instead of 
    calling out to `System.cmd(""which"", [""command""])`. This addressed an issue with 
    NodeJS breaking anything that called into `which` resulting in an obscure error.",50259821
78,False,False,2018-03-19T19:34:02Z,2018-03-19T19:34:29Z,"This rc contains documentation cleanup and updates through out.

* Enhancements
  * Support forwarding the ssh-agent through Docker for the Nerves system shell.
  * Allow headers and query params to be passed to the `:prefix` `artifact_sites`
    helper. 
    
    Example:
    `{:prefix, ""https://my_server.com/"", headers: [{""Authorization"", ""Basic 1234""}]}`
    `{:prefix, ""https://my_server.com/"", query_params: %{""id"" => ""1234""}}`

  * Added `github_api`to `artifact_sites` for accessing release artifacts on private
    github repositories.

    Example: 
    `{:github_api, ""owner/repo"", username: ""skroob"", token: ""1234567"", tag: ""v0.1.0""}`

* Bug Fixes
  * Disable the nerves_package compiler if the `NERVES_ENV_DISABLED` is set.
    This makes it easier to execute `mix` tasks without building the system.
    
    Example: 
    `NERVES_ENV_DISABLED=1 mix docs`",50259821
79,False,False,2018-02-22T15:28:31Z,2018-02-22T16:02:08Z,"[Update Guide](https://hexdocs.pm/nerves/1.0.0-rc.0/updating-projects.html#updating-from-v0-9-to-v1-0-0-rc-0)

Nerves no longer automatically compiles any `nerves_package` that is missing its
pre-compiled artifact. This turned out to rarely be desired and caused
unexpectedly long compilation times when things like the Linux kernel or gcc got
compiled.

When a pre-compiled artifact is missing, Nerves will now tell you what your
options are to resolve this. It could be retrying `mix deps.get` to download it
again. If you want to force compilation to happen, add a `:nerves` option for
the desired package in your top level project:

  ```elixir
    {:nerves_system_rpi0, ""~> 1.0-rc"", nerves: [compile: true]}
  ```

  * Bug Fixes
    * Mix raises a more informative error if the `nerves_package` compiler
      attempts to run and the `nerves_bootstrap` application has not been
      started.  This also produces more informative errors when trying to
      compile from the top of an umbrella.",50259821
80,False,False,2018-02-20T20:13:49Z,2018-02-20T20:22:20Z,"* Bug Fixes
    * Including the entire artifact checksum in artifact download file name was causing issues with
      file encryption libraries. Fixed by changing the artifact download name to only
      use the first 7 of the artifact checksum.",50259821
81,False,False,2018-02-16T21:19:38Z,2018-02-16T21:20:05Z,"* Bug Fixes
    * Ensure the artifact cache dir is clean and created before putting artifacts.",50259821
82,False,False,2018-02-13T00:16:53Z,2018-02-13T00:17:50Z,"  * Enhancements
    * Call `bootstrap/1` on any package that defines a platform
    * Added Nerves.Utils.File.tar helper for creating archives
    * Only apply the host tuple `portable` to packages with type `system`
    * Packages other then toolchains and systems can override their artifact
      paths using an env var of ther app name. For example. a package called
      `:host_tool` would be able to override the artifact path by setting
      `HOST_TOOL` in the environment.
    * Allow any package that declares a provider to create an artifact.
    * Fixed up test fixtures and added integration test.

  * Bug Fixes
    * Do not raise when trying to make a directory when putting an artifact in
      the global cache.
    * Ensure the Nerves environment has been started when calling `nerves
      artifact`",50259821
83,False,False,2018-02-04T02:30:06Z,2018-02-04T02:32:06Z,"* Bug Fixes
    * Fix artifact archiver to use `Artifact.download_name/1` instead of 
      `Artifact.name/1`. Fixes issues with the Docker provider and
      `mix nerves.artifact`
    * Fix issue with `nerves.system.shell` not rendering properly",50259821
84,False,False,2018-01-31T01:24:56Z,2018-01-31T01:25:58Z,"* Bug Fixes
    * Artifact download_path should use download_name. This was causing a 
      mismatch between dl files from buildroot and the resolver causing it to 
      have to download them twice
    * Fixed issue with compiling certain nerves packages when calling
      `mix deps.compile`",50259821
85,False,False,2018-01-30T14:13:52Z,2018-01-30T17:18:04Z,"  * Bug Fixes
    * Fixed issue where env var artifact path overides were being calculated
      instead of honored.
",50259821
86,False,False,2018-01-26T23:43:44Z,2018-01-26T23:49:13Z,"  * Bug Fixes 
    * Fixed issue with artifact default path containing duplicate names
    * `Nerves.Env.host_os` can be set from `$HOST_OS` for use with canadian
      cross compile
    * `Nerves.Env.host_arch` can be set from `$HOST_ARCH` for use with canadian
      cross compile
    * mkdir -p on `Artifact.base_dir` before trying to link to build path artifacts
    * raise if artifact_urls are not binaries.",50259821
87,False,False,2018-01-24T20:26:23Z,2018-01-24T20:27:06Z,"* Update Notes

[Upgrade guide](https://hexdocs.pm/nerves/updating-projects.html#content)

Starting in Nerves v0.9.0, artifacts will no longer be fetched during
`mix compile`. Artifact archives are intended to be fetched following `mix deps.get`.
To handle this, you will need to update your installed version of `nerves_bootstrap` by
calling `mix local.nerves`. After updating `nerves_bootstrap`, you should update 
your `mix.exs` file to add the new required mix aliases found there. A helper 
function is available named `Nerves.Bootstrap.add_aliases` that you can pipe your 
existing aliases to like this:

```elixir
  defp aliases(_target) do
    [
      # Add custom mix aliases here
    ]
    |> Nerves.Bootstrap.add_aliases()
  end
```

Also, update your nerves dependency to:

`{:nerves, ""~> 0.9"", runtime: false}`

* API Changes
  * Moved `Nerves.Package.Providers` to `Nerves.Artifact.Providers`
  * Moved `Nerves.Package.Providers.HTTP` to `Nerves.Artifact.Resolver`
  * `Nerves.Artifact.Resolver` no longer implements the 
    `Nerves.Artifact.Provider` behaviour.

* Enhancements
  * Added Mix task `nerves.artifact.get`. Use to fetch the artifact archive from an
    `artifact_url` location. Once downloaded its checksum will be checked against
    `artifact_checksum` from the `nerves_package` config in `mix.exs`. The Mix task
    `nerves.deps.get` will recursively call `nerves.artifact.get` to fetch archives.
  * Added Mix task `nerves.artifact.archive`. This task will produce the 
    artifact archive and artifact checksum file which are used when calling
    `nerves.artifact.get`.
  * Nerves packages can override the Provider in the `nerves_package` config
    in `mix.exs` using the keys `provider` and `provider_opts`. This is
    useful to force a package to build using a specific provider like 
    `Nerves.Artifact.Providers.Docker`. See the [package configuration docs](https://hexdocs.pm/nerves/systems.html#package-configuration) 
    for more information.
  * Added `artifact_sites` to the `nerves_package` config. Artifact sites
    are helpers that are useful for cleanly specifying locations where artifacts
    can be fetched. If you are hosting your artifacts using Github relases
    you can specify it like this:
    ```elixir
    artifact_sites: [
      {:github_releases, ""orginization/project""}
    ]
    ```

    You can also specify your own custom server location by using the `:prefix`
    helper by passing a url or file path:
    ```elixir
    artifact_sites: [
      {:prefix, ""/path/to/artifacts""},
      {:prefix, ""https://my_bucket.s3-east.amazonaws.com/artifacts""}
    ]
    ```
    Artifact sites will be tried in order until one successfully downloads the
    artifact.
* Bug Fixes
  * Fixed issue with `Nerves.Utils.HTTPResolver` crashing when missing the 
    `content-disposition` and `content-length` headers.
  * Run integrity check on tar files to validate they are not corrupted on 
    download.",50259821
88,False,False,2017-11-23T11:38:47Z,2017-11-23T11:40:56Z,"* Bug Fixes
  * Revert plugin Nerves in new project generator until
    the fix can be made in distillery.
    This issue was causing the release to contain compiled
    libraries from the host instead of the target.
    The error would look similar to this
    ```
    Got:
    ELF 64-bit LSB relocatable, x86-64, version 1

    If binary, expecting:
    ELF 32-bit LSB executable, ARM, EABI5 version 1, interpreter /lib/ld-linux.so.3, for GNU/Linux 4.1.39
    ```
    You can fix this by updating and regenerating the new project.",50259821
89,False,False,2017-11-23T11:29:42Z,2017-11-23T11:40:40Z,"* Bug Fixes
  * Fixed an error in the `Nerves` Distillery plugin that was causing the following error message:
    ```
    Plugin failed: no function clause matching in IO.chardata_to_string/1
  * Don't override the output_dir in the Distillery Plugin.
* Enhancements
  * Added [contributing guide](https://github.com/nerves-project/nerves/blob/master/docs/CONTRIBUTING.md)
  * Improved error messages when `NERVES_SYSTEM` or `NERVES_TOOLCHAIN` are unset.

",50259821
90,False,False,2017-11-15T15:58:42Z,2017-11-23T11:39:50Z,"* Enhancements
  * Removed legacy compiler key from the package struct. The `nerves_package` compiler will be chosen by default.
  * Simplified the distillery relase config by making Nerves a distillery plugin
  * Skip archival phase when making firmware.
  * Allow the progress bar to be disabled for use in CI systems by setting `NERVES_LOG_DISABLE_PROGRESS_BAR=1`
  * Deprecate nerves.exs. The contents of nerves.exs files have been moved into mix.exs under the project key `nerves_package`

* Bug Fixes
  * raise an exception when the artifact build encounters an error",50259821
91,False,False,2017-08-26T16:19:16Z,2017-08-27T19:52:17Z,"* Bug Fixes
  * Make sure the path NERVES_DL_DIR exists before writing artifacts to it.",50259821
92,False,False,2017-08-25T19:32:19Z,2017-08-27T19:52:05Z,"* Enhancements
  * [mix firmware.image] remove the need to pass an image name. Default to the app name.
  * [mix] added shortdocs to all mix tasks.
  * [fwup] bumped requirement to ~> 0.15 and support 1.0.0 pre release.
  * Cache downloads to ~/.nerves/dl or $NERVES_DL_DIR if defined. ",50259821
93,False,False,2017-08-27T19:49:51Z,2017-08-27T19:51:50Z,"* Enhancements
  * Docker
    * Reduced the image size by optimizing docker file.
    * Images are pulled from Docker Hub instead of building locally.
    * Containers are transient and build files are stored in docker volumes.
    * NERVES_BR_DL_DIR is mounted as a host volume instead of a docker volume.

* Bug Fixes
  * Docker
    * Fixed issue where moving the project location on the host would require
      the container to be force deleted.",50259821
94,False,False,2017-08-08T21:45:58Z,2017-08-08T22:02:27Z,"## Nerves v0.7.2
* Bug Fixes
  * Fixed issue where `nerves.system.shell` would hang and load improperly.
* Enhancements
  * Deprecated the `rootfs_additions` configuration option, to be superseded by
    the `rootfs_overlay` option, which matches the convention used by the
    Buildroot community.",50259821
95,False,False,2017-08-04T14:03:45Z,2017-08-04T14:05:44Z,"
## Nerves v0.7.1
* Bug Fixes
  * The `nerves.system.shell` Mix task should not do `make clean` by default.
* Enhancements
  * The ""Customizing Your Own Nerves System"" documentation has been updated to
    include the `mix nerves.system.shell` functionality, including a blurb to
    recommend running a clean build any time it's not working as expected.

## Nerves.Bootstrap v0.6.1
* Enhancements
  * Improved error messages in `nerves.system.shell` Mix task. In particular,
    it now reminds you to set `MIX_TARGET`.
* Bug Fixes
  * The `nerves.env` Mix task (used internally by Nerves) now checks that your
    deps have been fetched before trying to load.
  * Fix extraneous whitespace in `mix.exs` generated by `mix nerves.new`",50259821
96,False,False,2017-07-27T14:07:28Z,2017-07-27T14:14:42Z,"## Nerves v0.7.0
* Bug Fixes
  * Try to include the parent project when loading Nerves packages
  * Better error message from the Docker provider when Docker is not installed
  * Delete system artifact directories only when instructed by `mix nerves.clean` on Linux. 
    This prevents triggering a full rebuild for every change made to a custom system.
* Enhancements
  * Added support for the new `nerves.system.shell` task, provided by
    `nerves_bootstrap`, to `Nerves.Package.Providers.Docker` and
    `Nerves.Package.Providers.Local`, which provides a consistent way to
    configure a Buildroot-based Nerves system on both OSX and Linux. This
    replaces the `nerves.shell` Mix task, which had not been fully implemented.
  * `mix firmware.burn` no longer asks for your password if using Linux and have 
     read/write permissions on the SD card device.
## Nerves.Bootstrap v0.6.0
* Enhancements
  * New `nerves.system.shell` Mix task, which provides a consistent way to
    configure a Buildroot-based Nerves system on both OSX and Linux. This
    replaces the `nerves.shell` Mix task that was provided by the `nerves`
    dependency, which had not been fully implemented.
  * Add an optional `--disabled` flag to the `nerves.env` Mix task, which allows
    the Nerves environment to be compiled and loaded in a disabled state so that
    it doesn't try to actually cross-compile all the dependencies at load time.
    This is primarily used so that Mix tasks like `nerves.system.shell` can run
    on the host without having to wait for dependencies to compile when they
    won't even be used.
  * Related to the previous change, the `nerves.precompile` task does not try to
    compile the toolchain and system when `Nerves.Env` is loaded in a disabled
    state.",50259821
97,False,False,2017-06-28T13:18:01Z,2017-06-28T13:18:34Z,"## Nerves 0.6.1
* Bug Fixes
  * Docker Provider: Fix version parsing issue when major, minor, or patch contains leading zeros.",50259821
98,False,False,2017-05-21T00:58:05Z,2017-06-24T17:04:51Z,"* BugFixes
  * Handle redirects manually as a fix to OTP 19.3 caused by https://bugs.erlang.org/browse/ERL-316",50259821
99,False,False,2017-06-24T17:00:10Z,2017-06-24T17:04:22Z,"## Nerves v0.6.0

* Bug Fixes
  * Require Nerves Packages to have a version
* Enhancements
  * Propagate Mix.Project.config settings into the firmware metadata
  * Removed checksum from docker container name. Docker provider now only builds changes
  * Added Nerves.Env.clean for cleaning package providers

## Nerves Bootstrap v0.4.0

* Enhancements
  * nerves.new
    * lock files are split by target
    * Target dependencies are explicitly broken out in mix.exs through passing
      `--target` to the generator. Defaults to declaring all officially supported
      Nerves Targets.
    * A default cookie is generated and placed in the vm.args. the cookie can
      be set by passing `--cookie` ",50259821
100,False,False,2017-03-17T12:29:47Z,2017-03-17T12:30:36Z,"## Nerves 0.5.1
* BugFixes
  * Handle redirects manually as a fix to OTP 19.3 caused by https://bugs.erlang.org/browse/ERL-316",50259821
101,False,False,2017-03-07T16:13:33Z,2017-03-17T12:30:11Z,"
## Nerves v0.5.0

* Bug Fixes
  * `:nocache` the HTTP provider if the download list is empty
  * return an error when tar is unsuccessful at decompressing an artifact
  * return `:error` for any error in downloading artifacts
  * clean up temp files after downloading artifacts
  * expand path before comparing for dep type: Fixes path deps in umbrella
  * clean up artifact dir before copying new artifact
* Enhancements
  * changed console output for higher visibility Nerves compiler messages
  * added ability to specify the images_path in the Mix.Project config
  * changed default images_path to `#{build_path}/nerves/images`
  * updated docs to reflect changes made to project structure
  * added `mix nerves.info` task. Can be used to gain information about the Nerves env

## Nerves.Bootstrap v0.3.0

* Enhancements
  * nerves.new
    * defaults to Host target env
    * includes nerves_runtime
    * prompt to install deps and run nerves.release.init
    * unset MIX_TARGET when generating a new project
* Bug Fixes
  * removed rel/.gitignore from new project generator",50259821
102,False,False,2017-02-28T15:13:01Z,2017-02-28T15:15:11Z,"## Nerves 0.4.8
- Bug Fixes
  - removed `--silent` from `mix release.clean` for compatibility with `:distillery ~> 1.2.0`
",50259821
103,False,False,2017-01-30T18:33:49Z,2017-02-28T15:14:55Z,"## Nerves 0.4.7
- Bug Fixes
  - [Providers.Local] Fix return error on non zero exit status code
  - Fixed IO stream split to handle ANSI code case regression
",50259821
104,False,False,2016-11-17T21:31:22Z,2017-01-26T15:03:30Z,"## Nerves 0.4.0-rc.0
- Enhancements
  - Consolidated compilers into `nerves_package`.
  - Removed dependency for `nerves_system`
  - Removed dependency for `nerves_toolchain`
  - Added Docker provider for building custom systems on machines other than linux
",50259821
105,False,False,2016-12-13T13:47:18Z,2017-01-26T15:03:13Z,"## Nerves 0.4.0
- Enhancements
  - Improved test suite
  - Added documentation for modules
  - Consolidated the Nerves Environment to the Nerves package
",50259821
106,False,False,2016-12-14T17:31:15Z,2017-01-26T15:02:39Z,"## Nerves 0.4.1
- Bug Fixes
  - Do not stop the Nerves.Env at the end of the package compiler. This would cause the packages to resolve the wrong dep type.
  - Fixed issue where remote artifacts would not be globally cached
  - Fixed issue with package compiler where it would always force systems to be built
",50259821
107,False,False,2016-12-17T03:17:06Z,2017-01-26T15:02:23Z,"## Nerves 0.4.2
- Bug Fixes
  - Fixed issue where artifact paths could not be set by system env var
  - Mix Task `nerves.release.init` was failing due to missing template. Include priv in hex package files.
",50259821
108,False,False,2017-01-26T15:01:27Z,2017-01-26T15:02:00Z,"## Nerves 0.4.6
- Bug Fixes
  - fix artifact http download manager to take as long as it needs unless idle for more than 2 minutes.
  - [Providers.Docker] Fixed IO stream parsing to handle occasions where ANSI codes are not being passed.
  - loosened dependency on distillery
",50259821
109,False,False,2017-01-07T16:54:37Z,2017-01-26T15:01:47Z,"## Nerves 0.4.5
- Bug Fixes
  - catch exits from mix release.clean when calling mix firmware
",50259821
110,False,False,2017-01-05T20:51:10Z,2017-01-26T15:01:20Z,"## Nerves 0.4.4
- Bug Fixes
  - return an `{:error, message}` response from the http provider when a resource is not found
",50259821
111,False,False,2017-01-05T18:28:52Z,2017-01-05T18:38:02Z,"## Nerves 0.4.3
- Enhancements
  - Mix will display a progress bar, percentage, and total / expected bytes when downloading artifacts.
  - Added task `mix firmware.image my_app.img` for producing images for use with applications like dd
  - Silenced output from distillery which would contain misleading information for the nerves project
- Bug Fixes
  - Docker provider could potentially produce application id's that were invalid
",50259821
112,False,False,2016-07-11T17:22:02Z,2016-07-11T17:22:44Z,"- Bug Fixes
  - Updated nerves.precompile / loadpaths to support Elixir 1.3.x aliases.
- Enhancements
  - Removed dependency on porcelain
",50259821
113,False,False,2016-03-03T17:21:51Z,2016-06-27T14:41:25Z,"- Enhancements
  - Added support for 0.4.0 system paths
",50259821
114,False,False,2016-05-30T00:20:31Z,2016-06-27T14:40:39Z,"- Bug Fixes
  - Support for elixir 1.3.0-dev
  - Invoke `nerves.loadpaths` on preflight of `mix firmware` and `mix firmware.burn`. Fixes `ERROR: It looks like the system hasn't been built!`
",50259821
115,False,False,2020-02-26T22:35:12Z,2020-02-26T22:36:20Z,,60667730
116,False,False,2019-12-06T13:45:39Z,2019-12-06T13:11:22Z,"Fix warnings and minor issues.
",60667730
117,False,False,2019-11-26T06:02:30Z,2019-11-25T13:48:29Z,"
## Compatibility
It's a minor release so it's compatible with v6.0. You can simply replace the lvgl folder with the new version. 

You should update your `lv_conf.h` from `lv_conf_templ.h` to see the new config options.

## Main new features

### Bidirections support
Add support to Right-to-Left and mixed writing directions. Learn more [here](https://docs.littlevgl.com/en/html/overview/font.html#bidirectional-support).

### Subpixel rendering
Make font rendering on lower resolution displays smoother. Learn more [here](https://docs.littlevgl.com/en/html/overview/font.html#subpixel-rendering)

### Font compression
Store the bitmaps of the fonts in a compressed way. Learn more [here](https://docs.littlevgl.com/en/html/overview/font.html#compress-fonts).

### Higher quality fonts
The algorithm of the font converter is updated to produce better quality fonts.

### New symbols
The following symbols are added to the built fonts:
See all the symbols [here](https://docs.littlevgl.com/en/html/overview/font.html#built-in-fonts).

## Asserts in API functions
Add sanity check to the API functions. They can be configured in [lv_conf.h](https://github.com/littlevgl/lvgl/blob/8bb67c0303e44315aa73348ce4f15b3204f4863e/lv_conf_template.h#L243-L277). You can use a different configuration for development and for production.

### Color picker object
A color picker object type is added.
See it [here](https://docs.littlevgl.com/en/html/object-types/cpicker.html).

## Other updates
- Horizontal list: #1138 (implemented in #1140)
- Add `lv_slider_set_sym`
- Add `lv_lmeter_set_angle` #1262
- Add `lv_printf` and `lv_label_set_text_fmt` for efficiently putting formatted text on labels


## Credits
- @amirgon for BiDirectinal support
- @puzrin for font compression and subpixel rendering
- @paulpv and @AloyseTech for the color picker object type
- @embeddedt for support, development, comments and reviews 

",60667730
118,False,False,2019-08-06T13:34:37Z,2019-08-06T13:35:09Z,"This release adds a few more bugfixes, plus another tag for PlatformIO.",60667730
119,False,False,2019-08-01T12:53:12Z,2019-08-01T12:55:05Z,Various bugfixes after v6.0,60667730
120,False,False,2019-06-30T04:02:14Z,2019-06-30T04:43:01Z,"## Improvements

### General events
In v5.3 you could add actions to only a few object types (like a button). In v6.0 you can do it for an object type using *Events*.   

Use `lv_obj_set_event_cb(obj, event_handler)` to set an event callback for an object.
In `event_handler` you will get the caller object and the event like `LV_EVENT_CLICKED/PRESSED/VALUE_CHANGED` etc.   

Learn more [here](https://docs.littlevgl.com/en/html/overview/event.html). 

### Better fonts
A new font converter is created which supports kerning and some other features. It is written in Node.JS so it should be easy to use offline.

You can choose more fonts and ranges to include them in the final font file.

The new Online font converter: https://littlevgl.com/ttf-font-to-c-array
The source code of the Font converter:  https://github.com/littlevgl/lv_font_conv

### Multi-display support
In `v6.0` you can have multiple displays each with its own drivers and objects. 

To learn more about multi-display support visit https://docs.littlevgl.com/en/html/overview/display.html

### MicroPython
A lot of improvements happened to smoothly support MicroPython. 
Click here to learn more about it [MicroPython with LittlevGL](https://docs.littlevgl.com/en/html/get-started/micropython.html)

### New forum
Not really a LittlevGL feature but it happens along with v6.0.  We have launched a new, more modern forum: https://forum.littlevgl.com/

You can easily log in with your GitHub or Google account. 

The old forum will be moved to http://forumold.littlevgl.com

## Migrating from v5.3 to v6.0
v6.0 is not fully compatible with v5.3 because some API and even conceptual changes have happened:

### The most important things 
- Update your `lv_conf.h` from `lv_conf_template.h`
- Generate your fonts again with the new converter: https://littlevgl.com/ttf-font-to-c-array
- Read the new documentation: https://docs.littlevgl.com

### Actions vs Events
- `lv_obj_set_event_cb(obj, callback)` is used instead of `lv_btn_set_action(btn, LV_BTN_ACTION_..., callback)`. Event callbacks are used to handle all the former actions (i.e. long pressed, released are handled by a single function).
- Objects now automatically detect if they've been deleted, no need for returning `LV_RES_OK/LV_RES_INV` in your `lv_event_cb_t`. For this reason, `lv_event_cb_t` functions return `void`.

### Driver level
- **Driver function signatures now take an initial first parameter, the driver objects itself. This allows your driver functions to work with more than one physical device without requiring two separate drivers to be written.**
- (i.e. `indev` callbacks now take an initial first parameter of `lv_indev_t *`)
- `disp_flush` is now `flush_cb`. Instead of directly taking x/y coordinates, it takes in an `lv_area_t` which has x1, y1, x2, y2 fields
- The `mem_fill` (called `gpu_fill_cb` in v6.0) fills an area instead of a line
-  Dynamically changeable display config. Instead of hardcoded in `lv_conf.h`.
- Need to explicitly initialize your display buffer and add it to your display driver. It replaces the VDB in v5.3. so there is no `LV_VDB_SIZE` in v6.0 but you should use this display buffers. 
- `LV_HOR_RES` and `LV_VER_RES` are replaced with `LV_HOR_RES_MAX` and `LV_VER_RES_MAX`, which define the maximum horizontal and vertical resolution of your display, respectively. `LV_HOR_RES` and `LV_VER_RES` still work but always reflects the resolution of the lastly created display. (No difference with only one display).

### Renames
- All the macros like `USE_LV_BTN` now are like `LV_USE_BTN`.
- Rename symbols: `SYMBOL_HOME` --> `LV_SYMBOL_HOME`
- Rename `LV_GROUP_KEY_...` to `LV_KEY_...`
- Several minor function API changes. Nearly all features are still present so you should find every v5.3 function but maybe with a slightly different name or usage

### Animations
- Renames in `lv_anim_t`. The `ready_cb` get's `lv_anim_t *` as argument.
- `lv_anim_set_...(&a)` function are added to replace manual initialization of ```lv_anim_t`
- `lv_style_anim_t` is removed. Use `lv_anim_t a;` and `lv_style_anim_set_...(&a, ...)` instead.

### Objects and Styles
- `lv_obj_get_free_ptr` and `lv_obj_get_free_num` are replaced `lv_obj_get_user_data`. The type of the user data can be changed in `lv_conf.h`
- All padding and fits are left, right, top, bottom instead of ver and hor.
- lv_canvas: use `lv_draw_...` functions

### Fonts
- Font system is updated and now supports kerning. You can generate your fonts again with the [new converter](https://littlevgl.com/font_conv_new). 
- Use the new Online font converter to generate new fonts
- Built-in fonts have changed

### Others
- User data is now available for some other structures as well, like driver objects.
- Callbacks of `lv_task` now receive a pointer to the task itself instead of the user data. The user data can be accessed as `task->user_data`
- The `img_decoder` is improved to cache the opened images. So e.g. PNG images are not decoded all the time but left open. Learn more [here](https://docs.littlevgl.com/en/html/overview/image.html)

## Credits
@embeddedt for tirelessly supporting users and professional help in the development
@amirgon for creating and maintaining the MicroPython binding
@puzrin for creating the new font converter

And for every contributor who helped with pull requests, ideas and suggestion, testing and feedback,

Thank you very much for all of you!  ",60667730
121,False,False,2019-02-01T04:09:43Z,2019-02-01T04:30:13Z,"## Micropython support
Thanks to @amirgon,  from mow you can use LittlevGL with [Micropython](http://micropython.org/) (a Python implementation for embedded systems). Read more [here](https://blog.littlevgl.com/2019-02-20/micropython-bindings). You can try it on Linux and or with ESP32 using this [ready to use repository](https://github.com/littlevgl/lv_micropython).

## New objects:
- **lv_tileview** container for smartwatch like designs
- **lv_spinbox** set numeric value with `+` and `-` buttons or keys
- **lv_table** create lightweight tables
- **lv_canvas** draw to a buffer and display it as an image

## New object features
- **lv_obj** add realign feature (save the last `lv_obj_align` data and re-apply)
- **lv_obj** add `lv_obj_align_origo` to align the center of the object (work with realign)
- **lv_chart** `LV_CHART_TYPE_VERTICAL_LINE` when the point count is equal to the chart width to draw only vertical lines
- **lv_chart**  lv_chart: add `LV_CHART_POINT_DEF` special value to not draw a point
- **lv_sw** animated move (`lv_sw_set_anim_time()`, `lv_sw_on/off_anim()`)
- **lv_btnm** add `lv_btnm_get_pressed()`
- **lv_btnm** add recolor feature with `lv_btnm_set_recolor` 
- **lv_ta** support `LV_GROUP_KEY_BACKSPACE`
- **lv_ddlist** add down arrow symbol option with  `lv_ddlist_set_draw_arrow`
- **lv_ddlist** add ability to set label alignment 
- **lv_list** remeber the last seleceted button (only if the list is in a group)
- **lv_list** allow single button selection mode
- **lv_list, lv_ta, lv_page** scroll propagation feature to scroll the parent on ""overscrolling""
- **lv_list, lv_ta, lv_page** edge flash effect to show circle on the edge on  ""overscrolling""
- **lv_preload** add `lv_preload_set_animation_type()` and `LV_PRELOAD_TYPE_FILLSPIN_ARC`
- **lv_imgbtn** add tiled option to set width dynamically by repeating the middle part
- **lv_calendar** add `lv_calendar_get_pressed_date`
- **lv_tabview** add `lv_tabview_set_hidden` to hidet tab buttons

## New other features
- **lv_lang** multi-langue interface to change UI's language run-time
- **lv_group** add `LV_GROUP_KEY_BACKSPACE`
- **lv_anim** add overshoot and bounce path
- **lv_anim** add `add lv_anim_count_running`
- **lv_anim** lv_anim: add lv_anim_count_running
- **lv_indev** add `lv_indev_set_feeback` to add callback when something happened with an object
- **lv_vdb** add true double bufferig feature to work woth only frame buffer address swapping
- **lv_style** add `LV_BORDER_INTERNAL` to remove the borders on teh edges
- **lv_porting** add display, indev, file siystem porting skeleton function
 ",60667730
122,False,False,2018-11-14T23:29:58Z,2018-11-14T23:45:08Z,"Bugfixes to [v5.2-rc](https://github.com/littlevgl/lvgl/releases/tag/v5.2-rc)
",60667730
123,False,False,2018-10-05T15:32:30Z,2018-10-09T05:10:01Z,"## New objects
- Image button
- Calendar
- Arc
- Preloader

![untitled](https://user-images.githubusercontent.com/7599318/45851820-0fc4a380-bd3d-11e8-8dab-c7d98b12879e.png)

## Draw and rendering
- **Line draw** algorithm is improved to support perpendicular line endings
- **Arc drawing**
- **Shadow drawing** improvements
- **Custom VDB write** function can be registered in the display driver to support non-standard color formats. This the VDB content can be directly flushed to the display. 
- **RGB565 swap** to swap the two bytes of RGB565 colors. It makes possible to simply send the pixel's data via a 8-bit serial interface (e.g. SPI). It can be enabled in *lv_conf.h* by setting `LV_COLOR_16_SWAP`.
- **VDB address** can be set in runtime with `lv_vdb_set_adr()`. Useful if you want to use DMA in the `disp_flush` function but the VDB need to be allocated in a specific way.
- **New image formats** supporting **Indexed** and **Grayscale** formats too to save memory
- **Image decoder interface** to add support to any image format like PNG
- **Dithering** support in Online image converter

## New object features
- **lv_obj** opa scale attribute added to scale the current opacity of an object and its children (useful to fade in/out a group of objects) 
- **lv_label** LV_LABEL_ALIGN_RIGHT added to enable right alignmenet of texts.
- **lv_label** LV_LABEL_LONG_CROP long mode to simply crop the text out of the label's size. 
- **lv_btn** Ink effect feature added to play an animation effect when a button is clicked and released. Can be enabled with `lv_btn_set_ink_in_time()`, `lv_btn_set_ink_wait_time()`, `lv_btn_set_ink_out_time()` and LV_BTN_INK_EFFECT` need to be enabled in *lv_conf.h*.
- **lv_page, lv_win, lv_ta** scrolling is added on `LV_GROUP_KEY_UP/DOWN/LEFT/RIGHT`
- **lv_page** temporal scrollbar hide option is added (`LV_SB_MODE_HIDE`)
- **lv_ta** `max_length` and `accepted_chars` attributes are added.d to be enabled in *lv_conf.h*.
- **lv_ta** action can be added with `lv_ta_set_action()`

## Other new features:
- SYMBOL_DUMMY: If added before string then `lv_img` will display the text. This way where icons need and an image a text can be set as well.
- Monospace font support (set the width in the [Online converter](https://littlevgl.com/ttf-font-to-c-array))
- LV_FONT_CUSTOM define added in lv_conf.h where you can enumerate you custom fonts to make them global
- LV_CONF_INCLUDE_SIMPLE: define it as a compiler symbol to include lv_conf.h like `include ""lv_conf.h""` instead of using its relative path.
- Click focus: you can enable focusing on an object in a group when it is clicked by a pointer an input device (mouse or touchpad)
- Add LV_GROUP_KEY_DEL
- Log system added to print useful debug info
- Uniscii monospace font is added as built-in font
- Edit/Navigate mode can be enabled for objects in a group. Useful for encoder based navigation.
- Adding a new character encoding interface (other than the built-in UTF-8) made easy
- LV_INDEV_TYPE_ENCODER: Encoder input device type (Left/Right/Push)
- Opportunity to use your existing tick handler instead of `lv_tick_inc`. See `lv_conf_templ.h`
- Themes can be changed in runtime (set `LV_THEME_LIVE_UPDATE` in lv_conf.h)
- A new theme called: Nemo
- lv_fs_trunc and lv_fs_rename added
",60667730
124,False,False,2018-05-20T19:50:09Z,2018-05-20T19:54:49Z,"## Bug fixes
 - lv_line: set line.width ext. size to not trim parts on x = 0, y = 0 coordinates
 - lv_conf.h: add LV_COMPILER_VLA_SUPPORTED
 - lv_group_create: init focus_cb
 - fix of 16 bit image drawing with alpha bytes
 - fix text opacity
 - lv_mbox: enable navigation with LV_GROUP_KEY_DOWN/UP too
 - lv_conf.h: add LV_COMPILER_VLA_SUPPORTED
 - lv_slider: inicator draw bugfix
 - lv_slider: draw greater background on negative padding if knob_in == 1
 - mono theme: fix typo
 -  style animations: add opacity handling to image, text and line
 - lv_kb: before ok/close action don't deassign the lv_ta if there is user defined action
 - in lv_objx_set_... functions apply the new value only if it's different from the current
 - don't invalide hidden objects
 - lv_group_del: remove the objects from the groups too",60667730
125,False,False,2018-03-09T13:15:00Z,2018-03-09T13:15:52Z,"**Here is the new v5.1 release of LittelvGL with a lot of updates including 4x faster anti-aliasing, sparse font support to save ROM for Asian fonts, scalable and beautiful font anti-aliasing, pixel level opacity on images, easy to use online font and image converters and significant code size reduction.**

## 4x faster anti-aliasing
Due to a massive rework in the anti-aliasing system it become 4 times faster then it was in v5.0. It means practically no performance loss for anti-aliasing! In v5.1 anti-aliasing is calculated during the rendering process hence the old ""draw everything in double size and downscale"" is not required anymore. This way only few pixel will be put to the appropriate position to make lines or curves smooth and even.

The diagram below shows some measurement  with v5.0 and v5.1 using the [benchmark](https://github.com/littlevgl/lv_examples/tree/master/lv_apps/benchmark) application. The results are expressed in FPS.
![untitled](https://user-images.githubusercontent.com/7599318/37088493-d77c9d28-21fd-11e8-99ff-121316b5a51e.png)

|Setting | v5.0 no AA | v5.0 AA | v5.1 no AA | v5.1 AA|
|-- | -- | -- | -- | --|
|Plain | 101 | 23 | 125 | 91|
|Wallpaper | 53 | 12 | 91 | 71|
|Wp. recolor | 30 | 5 | 25 | 23|
|Opacity | 84 | 16 | 83 | 83|
|Shadows | 38 | 4 | 39 | 34|
|All enabled | 19 | 2 | 16 | 15|

## Sparse font support and new font-anti aliasing system   
To generate fonts for v5.1 you can use a brand new online TTF font converter tool. Available here: https://littlevgl.com/ttf-font-to-c-array
With this tool you can specify a range of character to convert and optionally you can list the characters to include in the font. It is very useful Asian fonts where only a few characters are used from a big Unicode range.

The former `LV_FONT_ANTIALIAS` option is removed from lv_conf.h. Instead you can specify a bpp (bit-per-pixel) value for each font (1, 2, 4 or 8 bpp are supported). It result better customization to save memory (high bpp for small fonts, low bpp for larger fonts) and in general gives better result with same font memory footprint. You can enable the  built-in fonts with 1, 2, 4 or 8 values to specify their bpp.

## Updates on image handling
 The old chrma keying (LV_COLOR_TRANSP pixels are transparent) is still available but there is a new feature too: you can assign an Alpha byte to every pixel to realize pixel level opacity. The images with pixel level opacity can have really smooth edges compared to Chroma keying. 
To convert images for LittlevGL and other online tool is created: https://littlevgl.com/image-to-c-array

In v5.0 you needed to create a file from image data in the RAMFS and then use the file's path in `lv_img_set_file()`. Now - in v5.1 - a more general and resource friendly way is introduced. You can use the `lv_img_set_src()` function to set a new source for an image object. There are 3 image sources:
- C array compiled in the code. E.g. `lv_img_set_src(img1, &wallpaper_img)`. In the example *wallpaper_img* is generated by the online converter.
- Externally stored binary file. E.g. `lv_img_set_src(img1, ""S:/path/to/image.bin"")`. *image.bin* is also created with the online tool and stored for example on an SD card. 
- Symbols (as text): E.g.  `lv_img_set_src(img1, SYMBOL_CLOSE)`. 

To learn more check the tutorial about the images: https://github.com/littlevgl/lv_examples/tree/master/lv_tutorial/6_images

## Code size reduction 
The v5.1 can be compiled in less then 50kB with 10 kB RAM usage. In such a configuration you can use a few object types (a new object type needs ~3kB ROM) and buffer drawing (LV_VDB_SIZE   2048). It makes LittlevGL capable to run on simple cheap devices with only 64kB ROM like [STM32F103C8](http://www.st.com/en/microcontrollers/stm32f103c8.html)

## Migrating from v5.0 to v5.1
However its a minor release you need to do a few things when updating to v5.1:
- Refresh your lv_conf.h from lv_conf_templ.h 
- Regenerate your images and fonts using the online converters 

## All new features
-  lv_refr_set_roundig_cb(): set a function to modify the invalidated area for special display controllers
-  lv_group_set_focus_cb(): set function to call when a new object is focused #94
-  lv_obj_get_type() return string, e.g. ""lv_slider"", ""lv_btn"" etc #91
-  Font handling extension for effective Chiese font handling (cutsom read functions)
-  Remove LV_FONT_ANTIALIAS and add fonts with BPP (bit-per-pixel): 1, 2, 4 and 8
-  lv_img: add pixel level opacity option (ARGB8888 or ARGB8565) (make image upscale pointless)
-  LV_ANTIALIAS rework: meaning anti-alias lines and curves
-  Merge symbol fonts (basic, file and feedback) into one font 
-  lv_group: different default style_mod function with LV_COLOR_DEPTH   1
-  lv_img_set_src() to handle file path, symbols and const variables with one function
-  LV_PROTECT_PRESS_LOST: prevent the input devices to NOT find new object when the object's pressing is lost
-  lv_label: draw style.body.padding.hor/ver greater body if body_draw is enabled 
-  LV_LAYOUT_PRETTY: in one row align obeóject vertically to middle
-  Add user data option to lv_indev_drv_t and pass it with lv_indev_data_t to the read function. #115
-  LV_GROUP_KEY_ENTER_LONG: sent by the library on long press of LV_GROUP_KEY_ENTER to trigger long press of the object #113
-  LV_INDEV_TYPE_BUTTON: for a hatdware buttons which press a point on a screen

## Bugfixes
-  lv_chart: Fix the use of point_num more then 256 
-  lv_label: anim. time wasn't applyed for LV_LABEL_LONG_ROLL
-  lv_txt_utf8_size fix for 4 byte characters
-  lv_slider: fix knob_in with not zero min value
-  lv_area_is_on: handled some cases wrong
-  lv_indev: buffered indevs (return *true* in indev_read) was handled as non-buffered
-  drag: don't invalidate if the object wasn't moved

",60667730
126,False,False,2018-01-19T14:46:44Z,2018-01-19T14:58:01Z,"**Bug fixes added. The new v5.0.2 is fully backward compatible with v5.0.1**

## Changes
-  Fix dependencied (Thanks to Zaltora)
-  lv_group: fix memory leak (Thanks to BenQoo)
-  LV_INDEV_READ_PERIOD 0 build bugfix
-  lv_roller: lv_roller_get_selected_str: bugfix (was recursive call)
-  lv_obj_get_style: with NULL style check if the parent is focused and use the focused style
-  lv_roller: add missing action handling
-  Set 24 bit colors upper byte (alpha) to 0xFF ",60667730
127,False,False,2018-01-02T12:00:00Z,2018-01-02T12:01:17Z,"**Bug fixes added. The new v5.0.1 is fully backward compatible with v5.0.0**

## Changes
* lv_list: fixed when mouse and keyboard used together
* lv_btnm: fix bottom border visibility
* theme updates
* line width fix width anti-aliasing
* lv_conf_templ.h add more info",60667730
128,False,False,2017-12-21T02:10:52Z,2017-12-21T02:34:00Z,"**Here is the v5.0.0 release with a much simpler architecture. Now the graphics library means only the lvgl repository. Besides the architectural changes Unicode support, style themes, new smart phone-like object types are added. To make easier to get started a tutorial is released  in lv_examples repository**

**Note that it's major release so it's not backward compatible.**

**To learn the new features its highly recommended to read the basics in the [Documentation](http://www.gl.littlev.hu/porting)**


## Architectural changes
- Integrate misc into lvlg
- Integrate hal** into lvlg
- Convert Applications into simple examples
- Rename repository from proj_pc to pc_simulator
- Create a new independent repository for examples (lv_examples)
- Create a new independent repository for development boards (lv_boards)
- Create a new independent repository for drivers (lv_drivers)

## System level changes
- Object type inheritance is hidden. Every object have its own API (except `lv_obj_set/get_...` functions)
- Rework lv_style_t to be more versatile
- Rename (and slightly rework) some function, defines and enums to be more descriptive
- Make styles to global variable for less typing
- Make fonts to global variables for less typing and easy user-font adding
- Join symbol fonts into normal built-in fonts (use normal fonts, and lvlg will find symbol fonts too)
- rename lv_dispi_... to lv_indev_...
- Simplified action functions: `lv_res_t action (lv_obj_t * obj)` use `lv_indev_act()`if required

## New features
- Unicode support with UTF-8 decode
- Themes with predefined styles
- lv_tabview: new object type to organize content with tabs
- lv_sw: new object type, switch, turn on/off by tap (a little slider)
- lv_roller: new object type, a roller to select a value (like on smartphones)
- lv_kb: new object type, Keyboard
- lv_btnm: lv_btnm_set_toggle() to toggle last button
- lv_btnm: rework width control. Now a control byte is used for width, hide and no long press settings.
- lv_ta: cursor types
-  lv_gauge_ rework to make it more like line meter (remove background but add scale lines)
- partial border draw in styles
- Hide anti-aliasing upscale (no x * LV_DOWSCALE is required)

## Bugfixes
Due to [lv_tests](https://github.com/littlevgl/lv_examples/tree/master/lv_tests) massive number of bug fixes happened.
",60667730
129,False,False,2017-08-17T09:07:00Z,2017-08-17T09:26:14Z,"**Here is the new release with cool new features like support of double VDB (to copy pixels to display while rendering to an other buffer), style animations, object groups to control without touchpad only with buttons and some minor object level features. See the full list below! In addition a tutorial from examples has begun.**

## Improvements
- Double VDB support: one for rendering, another to transfer former rendered image to frame buffer in the background (e.g. with DMA) [#15](https://github.com/littlevgl/lvgl/issues/15)
- Style animations
- lv_examples: thematic examples (not finished yet)
- lv_group: to control without touch pad. Issue [#14](https://github.com/littlevgl/lvgl/issues/14)
- lv_page: scrl. default fit modification: hor: false, ver: true, and always set its width to parent width
- lv_btn: add *lv_btn_get_..._action* functions
- lv_list: add *lv_list_get_element_label/img*
- lv_ta: *lv_ta_set_one_line* to configure the Text area to one lined input field
- lv_btnm: besides 0. byte (width dsc) 1. byte: hidden (\177, 0x7F, delete)

## Bugfixes
-  lv_slider: don't let indicator or bar to disappear because of hpad/vpad
- lv_ta: memory leak if deleted in password mode
- lv_ddlist: copy 'num_opt' attribute too
- lv_obj_set_parent: send CHILD_CHG signal to the old parent too

## Feature plans
In the next release you will get a lot of new *smart phone like * objects. 
See them in [TODO_MINOR.md](https://github.com/littlevgl/lvgl/blob/master/docs/TODO_MINOR.md) or suggest new ones!
 ",60667730
130,False,False,2017-07-12T12:33:42Z,2017-07-19T21:55:46Z,"Bug fixes for the new applications Wifi, GSM and Benchmark
WiFi and GSM now support save/load configuration from SD card",60667730
131,False,False,2017-07-09T13:44:51Z,2017-07-19T21:48:34Z,"**The  v4.1.0 version is here! The main new feature is the supporting of graphical hardware accelerator (GPU) besides the already existing software rendering. In addition new applications, object functions and bug fixes are added. This version fully backward compatible with v4.0.0.**

# Hardware accelerator support
Mixing two buffers with a given  opacity typically can be realized by MCUs where GPU is presented. Now  you can add the `disp_color_cpy(dest_buf, src_buf, length, opa)` to in *hal/disp.c* to copy pixels from a buffer to an other with a given opacity. In *hal/disp.h* you need to: `#define DISP_HW_ACC   1`

# New applications
GSM, WiFi and Benchmark applications are added.

## GSM and WiFi
You can specify a network (SSID + password/APN) and the IP address + port of a TSP server.The application will try to connect to this network. It buffers the latest message and tries to send it until get an answer. If no answer then it reconnects to the network and resend the message.

## Benchmark
In the window of the application you can enable/disable graphical features and measure the screen load time.

## Object API changes
- **lv_label** New long mode: *LV_LABEL_LONG_ROLL* to move the long text and not the object
- **lv_list** The default label long mode is: *LV_LABEL_LONG_ROLL*. Turn off with: `lv_list_set_element_text_roll(element, false)`
- **lv_ta** Password mode (like on smart phones):`lv_ta_set_pwd_mode(ta, true)` and `lv_ta_get_label(ta)` added

",60667730
132,False,False,2017-05-17T13:46:33Z,2017-05-19T06:34:54Z,"**A new major version is released with a lot new functions and improvements. The Littlev Graphics Library follows the rules of [Semantic versioning](http://semver.org/). According to it a major release has to be done if the API is changed. Now the API of the graphics library  is really changed to achieve a clearer and more effective architecture.**

# New website
A brand new website is created besides the new release. Please check it out: www.gl.littlev.hu

# Draw Speed Optimizations
Optimization of Low Level drawing functions:
* Faster rectangle fill
* Faster letter draw
* Faster image draw
* Faster image draw with anti-aliasing
* Faster filtering during anti-aliasing

# Font Anti-aliasing
Font anti-aliasing is introduced for microcontrollers with moderate resources and/or GUIs with a lot of animations, movements. It uses much less CPU power then the already existing Full screen anti-aliasing.

The good thing is font anti-aliasing can be used with [Real drawing](http://www.gl.littlev.hu/overview#drawing) as well. It means you need only a simple frame buffer to use anti-aliased letters. Keep in mind the Littlev Graphics Library doesn't need to use double buffering to deal with animations, transparency or anti-aliasing. It uses only optionally few kB work memory for every high level effects.

# Simplified Style System
Formerly all object type was a unique style type (e.g. lv_labels_t). Now a common style type **lv_style_t** is used. It describes style properties for:
* Backgrounds 
* Letters, 
* Images
* Lines

at once.

It highly simplifies of using styles because you can use the same style for example a  rectangle and a label. All object types will uses the style properties which are relevant for itself.

The new style system gives the opportunity to inherit styles from parents by settings the object's style to NULL. 
In other words if you specify the style of a container object and create labels and/or images on it with NULL (inherited) styles the objects will use the parent's style. Why is it useful? Because you only have to create one style with great colors (background color, gradient color, text color, image recolor etc.), set is or container and just create objects on it without thinking about styles.

Learn more about the style here: http://www.gl.littlev.hu/objects#style

#Applications
To make Applications more flexible and useful the **Phantom application** is created. It is able to send/ receive data to/from the Applications. 

It creates the opportunity to use Applications individually. For example if you need a terminal you can run a full featured Terminal application and send/receive adta with a Phantom application.

Click here to learn more about the applications: http://www.gl.littlev.hu/applications

# Architectural Updates, Object Type Updates, Bug Fixes
* Simplified HAL (Hardware Abstraction Layer)
* New repository with an example HAL: https://github.com/littlevgl/hal
* Instead of built-in icons Symbol fonts are added. The uses much less memory
* Object dependencies are decreased hence the modularity is increased
* Simplified object type inheritance because of the simplified style system
* Function and object attribute renames happend to increase consistency
* lv_misc moved to the [Misc. Library](https://github.com/littlevgl/misc) as *gfx*
* New object functionalities thanks to the new style system
* Bug Fixes

# Migrating LittlevGL v3.x to v4.0
1. Rewrite your styles to *lv_style_t* variables
2. Solve the minor issues because of renamed functions
3. Test your GUI.

# Feature Plans
* External GUI control via serial port
* New applications: WiFi, Music player etc
* New object types according needs
",60667730
133,False,False,2017-01-16T11:41:59Z,2017-01-16T12:01:33Z,"New object: gauge
Message box: New styles and bugfixes
New fonts: SYMBOL_30, SYMBOL_60
Image: Upscale added as object attribute, draw symbols if not a file provided
Some styles are updated
Some minor bugfixes
Unified function documentation in header files
",60667730
134,False,False,2017-01-08T15:01:07Z,2017-01-08T15:09:31Z,,60667730
135,False,False,2017-01-08T15:01:07Z,2017-01-08T15:08:57Z,,60667730
136,False,False,2020-02-17T19:17:10Z,2020-02-17T19:18:48Z,"- fix: fixed travis issues  a1183d9

https://github.com/forwardemail/email-templates/compare/v7.0.3...v7.0.4",4676086
137,False,False,2020-02-17T19:14:13Z,2020-02-17T19:15:10Z,"- chore: bump deps  da4a28d

https://github.com/forwardemail/email-templates/compare/v7.0.2...v7.0.3",4676086
138,False,False,2020-01-22T12:33:31Z,2020-01-22T12:34:37Z,"- chore: bump deps  3e65e3b

https://github.com/forwardemail/email-templates/compare/v7.0.1...v7.0.2",4676086
139,False,False,2020-01-20T10:32:21Z,2020-01-20T10:32:48Z,"- docs: fixed README and added v7.0.0 changes  f60d9c6

https://github.com/forwardemail/email-templates/compare/v7.0.0...v7.0.1",4676086
140,False,False,2020-01-20T10:26:28Z,2020-01-20T10:27:00Z,"- chore: bump deps (preview-email now works with stream attachments)  920aaec

https://github.com/niftylettuce/email-templates/compare/v6.1.1...v7.0.0",4676086
141,False,False,2019-12-19T02:11:21Z,2019-12-19T02:11:59Z,"- fix: fixed v5 vs v6 breaking issue with subject line not allowing override from message object  f6c3826

https://github.com/niftylettuce/email-templates/compare/v6.1.0...v6.1.1",4676086
142,False,False,2019-12-16T06:06:42Z,2019-12-16T06:09:05Z,"- feat: added custom path format for template files (closes #377)  639c0b3

https://github.com/niftylettuce/email-templates/compare/v6.0.6...v6.1.0",4676086
143,False,False,2019-12-05T19:50:48Z,2019-12-05T19:51:11Z,"- docs: fixed badge  f351132
- docs: fixed badge  ff8fe70

https://github.com/niftylettuce/email-templates/compare/v6.0.5...v6.0.6",4676086
144,False,False,2019-12-05T19:42:07Z,2019-12-05T19:48:29Z,"- docs: fixed badge  fdf71ff

https://github.com/niftylettuce/email-templates/compare/v6.0.4...v6.0.5",4676086
145,False,False,2019-11-27T03:04:00Z,2019-11-27T03:04:53Z,"- chore: bump deps and removed auto-bind, core bug with juice and web-resource-inliner has been resolved  da1f184

https://github.com/niftylettuce/email-templates/compare/v6.0.3...v6.0.4",4676086
146,False,False,2019-10-10T18:05:37Z,2019-10-10T18:06:08Z,"- chore: dropped moment and use dayjs, bump deps  6426ede

https://github.com/niftylettuce/email-templates/compare/v6.0.2...v6.0.3",4676086
147,False,False,2019-09-06T20:15:52Z,2019-09-06T20:20:34Z,"- feat: added support for lastLocaleField  b003237

https://github.com/niftylettuce/email-templates/compare/v6.0.1...v6.0.2",4676086
148,False,False,2019-09-06T14:50:07Z,2019-09-06T14:54:00Z,"- chore: bump deps  38febd9

https://github.com/niftylettuce/email-templates/compare/v6.0.0...v6.0.1",4676086
149,False,False,2019-06-23T18:05:33Z,2019-06-23T18:05:55Z,"- feat: performance improvement with asynchronous parallel rendering, removed bluebird, support Node v8.x+ only, preview-email new configuration (ability to use custom stylesheets)  dcc42e8

https://github.com/niftylettuce/email-templates/compare/v5.1.0...v6.0.0",4676086
150,False,False,2019-05-28T19:27:36Z,2019-05-28T19:27:55Z,"- feat: enable caching by default  c5cd34b
- docs: fixed typo  2dafe97

https://github.com/niftylettuce/email-templates/compare/v5.0.6...v5.1.0",4676086
151,False,False,2019-05-28T17:04:20Z,2019-05-28T17:05:06Z,"- fix: bumped deps, updated docs for complete Options object  36ff418

https://github.com/niftylettuce/email-templates/compare/v5.0.5...v5.0.6",4676086
152,False,False,2019-04-28T18:46:07Z,2019-04-28T18:48:07Z,"- fix: drop v6 test in travis  b758282
- fix: bump deps  9d6bcf6
- Merge pull request #357 from luisFilipePT/patch-1  6dda0a2
- Fix code block example in  README.md  7654aad

https://github.com/niftylettuce/email-templates/compare/v5.0.4...v5.0.5",4676086
153,False,False,2019-02-20T22:44:29Z,2019-02-20T22:57:24Z,"- docs: fixed spacing  dbd62a8
- docs: fixed typo  4135654
- fix: upgraded deps, fixed i18n docs (closes #350)  3d339e5

https://github.com/niftylettuce/email-templates/compare/v5.0.3...v5.0.4",4676086
154,False,False,2018-10-25T12:03:22Z,2018-10-25T12:04:36Z,"### Patches 

- Fix: send should not work if required props missing or blank: 3fa3cb0e4fd03b8fa3b92f227cf0b162742a0345",4676086
155,False,False,2018-10-05T09:17:52Z,2018-10-05T09:23:14Z,"### Patches 

- Added breaking change note for v5.x to top of README: 556b7be249b43e4c2773f0775dbfdac35c611f35
- Fixed typo in link to v5 breaking changes in README: a6c8009d3f0a05f145d7886bf11a0be9eea31665
- Fixed remark lint issues: a296f10818295353e9b34a196340338ac3fe406c
- Allow absolute template paths: 1b279e834e731f2485308d6c18d414f0f7ff6601
- Feat: allow-absolute-template-paths (closes #320, ref #329): d798e679969924a7df78b558fa522b73876a5acc
- Chore: upgraded deps, implement new lass setup: c80bac3c2240741dc4043e1a304f22fef537478a",4676086
156,False,False,2019-12-01T22:32:01Z,2019-12-02T01:09:04Z,"ce2c01f Fixed lfs_dir_fetchmatch not understanding overwritten tags
0197b18 Fixed issue with superblock breaking lfs_dir_seek
d6dc728 Fixed some issues in lfs_migrate
aeff2a2 Stop wear-leveling during migration
aae22c8 Fixed issue with directories falling out of date after block relocation
60e67ae Fixed implicit change-of-sign warning in lfs_dir_fetch
64dedee prepare upstream bugfix of lfs
5925db4 Fix some LFS_TRACE format specifiers
ab56dc5 README: fix incorrect description
",83160811
157,False,False,2019-10-15T15:36:42Z,2019-10-15T16:52:48Z,"4d068a1 Update README example code in accordance to the block_cycles change
ba088aa lfs_dir_*: Cast error return codes to int.
955b296 lfs_file_rewind: Cast error return codes to int.
241dbc6 lfs_stat: Cast error return codes to int.
8cca58f lfs_file_truncate: ensure lfs_file_seek return code is lsf_soff_t and cast error returns
97f86af lfs_remove: Cast tag/error return codes to int.
d40302c lfs_rename: Cast error return codes to int.
0b5a78e Adjust lfs_dir_find return code to ensure 32 bit value.
27b6cc8 Fixed off-by-one null terminator in tests
",83160811
158,False,False,2019-09-19T15:02:54Z,2019-09-19T16:38:45Z,"965d29b build: Fix warnings about shift count width difference for 16 bit compiler
f7fd7d9 Corrections for typos and grammar
d5aba27 Fix for issue #260
0c77123 lfs: Validate lfs-cfg sizes before performing arithmetic logics with them
",83160811
159,False,False,2019-08-08T23:50:40Z,2019-08-09T01:20:12Z,"151104c Changed CI to create release note for patches
303ffb2 Fix build with -Wundef
5bf71fa lfs: do not reposition seek pointer on truncate
55fb141 lfs: initialize file offs field
dc031ce lfs: use meaningful names for magic block identifiers
f85ff1d lfs: correct alignment restriction on lookahead buffer
",83160811
160,False,False,2019-07-29T06:42:28Z,2019-07-29T07:53:53Z,"### Note!

The behavior of the config option `block_cycles` has changed in this release. Before, `block_cycles = 0` would disable wear-leveling. This was a mistake as it made it easy to accidentally disable wear-leveling.

This has been changed so that `block_cycles = -1` disables wear-leveling. `block_cycles = 0` is now illegal and will trigger an assert.

```
lfs.c:3381: lfs_init: Assertion `lfs->cfg->block_cycles != 0' failed.
```

If you get this assert, you will need to change your `block_cycles` configuration. Suggested values are in the range 100-1000, with large values having better performance at the cost of less consistent wear distribution. -1 will keep the previous behavior by disabling wear-leveling.

``` c
// Number of erase cycles before littlefs evicts metadata logs and moves 
// the metadata to another block. Suggested values are in the
// range 100-1000, with large values having better performance at the cost
// of less consistent wear distribution.
//
// Set to -1 to disable block-level wear-leveling.
int32_t block_cycles;
```

More info here: https://github.com/ARMmbed/littlefs/pull/233

### What's new?

Debugging improvements!
- Thanks to @Ar2rL, we now have asserts against operations on closed files
- RDONLY/WRONLY mistakes are now asserts instead of errors
- Added LFS_TRACE statements that can be turned on by defining LFS_YES_TRACE at build time:

  ``` bash
   $ make CFLAGS+=-DLFS_YES_TRACE=1 test_attrs
   ./tests/test_attrs.sh
   === Attr tests ===
   lfs_trace:66: lfs_emubd_create(0x40cee0 {.context=0x610ae0, .read=0x40c0a7, .prog=0x40c34c, .erase=0x40c6e7, .sync=0x40c9b7, .read_size=16, .prog_size=16, .block_size=512, .block_count=1024
   }, ""blocks"")
   lfs_trace:139: lfs_emubd_create -> 0
   lfs_trace:3461: lfs_format(0x610140, 0x40cee0 {.context=0x610ae0, .read=0x40c0a7, .prog=0x40c34c, .erase=0x40c6e7, .sync=0x40c9b7, .read_size=16, .prog_size=16, .block_size=512, .block_count=1024, .block_cycles=1024, .cache_size=64, .lookahead_size=16, .read_buffer=(nil), .prog_buffer=(nil), .lookahead_buffer=(nil), .name_max=0, .file_max=0, .attr_max=0})
   lfs_trace:155: lfs_emubd_read(0x40cee0, 0x1, 0, 0x1553130, 16)
   lfs_trace:201: lfs_emubd_read -> 0
   lfs_trace:279: lfs_emubd_erase(0x40cee0, 0x0)
   lfs_trace:321: lfs_emubd_erase -> 0
   lfs_trace:155: lfs_emubd_read(0x40cee0, 0x0, 64, 0x1553130, 16)
   lfs_trace:201: lfs_emubd_read -> 0
   lfs_trace:208: lfs_emubd_prog(0x40cee0, 0x0, 0, 0x1553180, 64)
   lfs_trace:274: lfs_emubd_prog -> 0
   lfs_trace:326: lfs_emubd_sync(0x40cee0)
   lfs_trace:402: lfs_emubd_sync -> 0
   lfs_trace:155: lfs_emubd_read(0x40cee0, 0x0, 0, 0x1553130, 48)
   lfs_trace:201: lfs_emubd_read -> 0
   ~ snip ~
   ```
- Added asserts help stop positive error codes from block devices from causing the filesystem to break, this has been a reoccurring issue https://github.com/ARMmbed/littlefs/issues/215, https://github.com/ARMmbed/littlefs/issues/169
- Several tweaks to debug output and test framework
- Significantly improved handling of devices with large prog sizes (prog_size >1KiB)
- Changed `block_cycles = 0` to assert, replaced with `block_cycles = -1` (see above)

### Changes

db05468 Bump version to v2.1
7872918 Fixed issue where lfs_migrate would relocate root and corrupt superblock
e249854 Removed dependency on uninitialized value in lfs_file_t struct
0d4c0b1 Fixed issue where inline files were not cleaned up
4850e01 Changed rdonly/wronly mistakes to assert
4ec4425 Fixed overlapping memcpy in emubd
3806d88 Fixed seek-related typos in lfs.h
de59726 Fixed license header in lfs.c
e8c023a Changed FUSE branch to v2 (previously v2-alpha)
38a2a8d Minor improvement to documentation over block_cycles
51fabc6 Switched to using hex for blocks and ids in debug output
1983837 Fixed issue where sed buffering (QUIET=1) caused Travis timeout
312326c Added a better solution for large prog sizes
ef1c926 Increased testing to include geometries that can't be fully tested
72e3bb4 Refactored a handful of things in tests
649640c Fixed workaround for erase sizes >1024 B
eb013e6 lfs: correct documentation on lookahead-related values
7e1bad3 Set LFS_F_OPENED flag at places required by lfs internal logic.
72a3758 Use LFS_F_OPENED flag to protect against use of not opened or closed file.
df2e676 Add necessary flag to mark file as being opened.
53a6e04 Changed block_cycles disable from 0 to -1
1aaf1cb Minor improvements to testing framework
52a90b8 Added asserts on positive return values from block device functions
e279c8f Tweaked debug output
6a1ee91 Added trace statements through LFS_YES_TRACE
2e92f7a actually removed <dirent.h>
2588948 removed <dirent.h> preventing compile on some archs
abd90cb Fixed 32-bit/64-bit Ubuntu multilib issue in Travis
b73ac59 Fixed issues with reading and caching inline files
614f7b1 Fixed accidental truncate after seek on inline files
a9a61a3 Added redundant compaction to lfs_format/lfs_migrate
36973d8 Fixed missing cache flush in lfs_migrate
3fb242f Mark all Python 2 scripts as Python 2
ef77195 Fixed limit of inline files based on LFS_ATTR_MAX
12e464e Fixed issue with writes following a truncate
9899c7f Fixed read cache amount based on hint and offset
2533a0f Make lfs1_crc static so it doesn't conflict with prefixed LFS1 code
2a7f0ed Fix compilation with -Wundef
f35fb8c Fixed migration test condition for prefix branches
fdd239f Don't bypass cache in `lfs_cache_prog()` and `lfs_cache_read()`
780ef2f Fixed buffer overflow due to mistaking prog_size for cache_size
25a843a Fixed .travis.yml to use explicit branch names for migration testing
905727b Fix: length more than LFS_FILE_MAX should return error
26d2560 Fixed documentation for return lfs_dir_read return value.
",83160811
161,False,False,2019-04-11T01:49:34Z,2019-04-11T06:05:39Z,"### What's new?

#### Big things

1. **Metadata logging**

   Metadata pairs now act as small two block logs. This allows incremental updates without erasing metadata blocks, which is a significant performance improvement. Additionally, this enables dynamically sized entries, which is necessary for the two following features.

1. **Custom attributes**

   It's now possible to get and set [custom attributes](https://github.com/ARMmbed/littlefs/blob/master/lfs.h#L440-L470) on files, directories, and the even the filesystem itself. Custom attributes use a byte as an identifier and can be up to 1022 bytes large. This is useful for things such as timestamps, permissions, hashes, or other attributes.

1. **Inline files**

   Files can now be inlined directly in the directory block. This allows multiple small files to be coalesced into a single block instead of wasting an entire block for each file. This opens up the possibility for littlefs to be used on NAND flash and MCU internal flash, both which often have block sizes >16KiB. Note that inline files are limited by the cache size.

1. **Independent cache sizes**

   littlefs now has a separate [cache_size](https://github.com/ARMmbed/littlefs/blob/0907ba7813173901bc9a7689e8781434629a3696/lfs.h#L197-L202) config option. This config option determines the size of the read cache, prog cache, and file caches independently of the storage's physical read/prog size. This allows more granular reads and writes without artificially limiting the cache, improving performance and log utilization.

1. **XOR global state, no more move problem**

   XOR global state is a mechanism that allows littlefs to store a small amount of global state distributed across the filesystem. This global state is now used internal to fix moves in _O(1)_, a significant improvement over the previous _O(n)_ search. Additionally XOR global state may be useful for future improvements.

1. **True dynamic wear-leveling**

   littlefs now proactively levels wear over dynamic blocks instead of reacting only to bad blocks. This offers better protection against wear that causes stored data to deteriorate.

   Dynamic wear-leveling is provided by evicting blocks after a bounded number of writes determined by the [block_cycles](https://github.com/ARMmbed/littlefs/blob/0907ba7813173901bc9a7689e8781434629a3696/lfs.h#L193-L195) config option. A combination of random offset and incremental allocation of blocks provide a uniform distribution of wear over the storage.

1. **Expanding superblocks**

   The superblock no longer has a flat cost of 2 blocks. Instead, the superblock doubles as the root directory until [block_cycles](https://github.com/ARMmbed/littlefs/blob/0907ba7813173901bc9a7689e8781434629a3696/lfs.h#L193-L195) are passed. After every [block_cycles](https://github.com/ARMmbed/littlefs/blob/0907ba7813173901bc9a7689e8781434629a3696/lfs.h#L193-L195) number of erases, the superblock is expanded to include another metadata pair if space is available. This allows littlefs to use as few superblocks as is needed to avoid an early death.
   
   At the smallest, littlefs can now fit in only 2 blocks.

#### Small things

1. **Configurable name max, file max, and attr max**

   These limits can now be set during format and should be respected on other devices. This means that the RAM cost of stat can be reduced without losing portability.

1. **Added lfs_fs_size**

   A function to get a count of the used blocks on the filesystem. Likely easier to use than lfs_fs_traverse.

1. **Better update tracking**

   Metadata logging, with resizable entries, means that there's a lot of state changes flying around. This required a review and ultimately a rewrite of the way littlefs manages open files and dirs. This should be much more robust moving forward and also has a small performance improvement.

### Important changes

1. Must set [cache_size](https://github.com/ARMmbed/littlefs/blob/0907ba7813173901bc9a7689e8781434629a3696/lfs.h#L197-L202). If read_buffer or prog_buffer are provided manually, these must be cache_size.
1. Highly suggested to set [block_cycles](https://github.com/ARMmbed/littlefs/blob/0907ba7813173901bc9a7689e8781434629a3696/lfs.h#L193-L195) in the range of 100-1000. This enables wear leveling.
1. Change lookahead -> [lookahead_size](https://github.com/ARMmbed/littlefs/blob/0907ba7813173901bc9a7689e8781434629a3696/lfs.h#L204-L208). The lookahead buffer must now be aligned to a 64-bit boundary.
1. Drop file_buffer in favor of [per-file buffers](https://github.com/ARMmbed/littlefs/blob/0907ba7813173901bc9a7689e8781434629a3696/lfs.h#L271-L273).
1. Renamed lfs_traverse -> [lfs_fs_traverse](https://github.com/ARMmbed/littlefs/blob/0907ba7813173901bc9a7689e8781434629a3696/lfs.h#L271-L273). Note the addition of [lfs_fs_size](https://github.com/ARMmbed/littlefs/blob/0907ba7813173901bc9a7689e8781434629a3696/lfs.h#L271-L273) can replace the most common use of lfs_traverse.
1. Change [lfs_crc](https://github.com/ARMmbed/littlefs/blob/0907ba7813173901bc9a7689e8781434629a3696/lfs_util.h#L191-L192) to not use a pointer if it was overridden.

### Migration

Following the discussion on #127, releases now have three special branch/tags that are generated as a part of&nbsp;CI:
- A patch-specific tag ([`v1.7.2`](https://github.com/ARMmbed/littlefs/tree/v1.7.2)), immutable
- A major version branch ([`v1`](https://github.com/ARMmbed/littlefs/tree/v1)), automatically updated every patch release
- A major version prefix branch ([`v1-prefix`](https://github.com/ARMmbed/littlefs/tree/v1-prefix)) aromatically generated every patch release. Note that this is generated as a merge commit, making it easy to update code that needs to avoid name conflicts between multiple versions of littlefs.

To help adoption with the breaking disk changes, this version includes a migration function designed to help migrate v1 filesystems to v2.

Note that this migration is best-effort, if it fails, an error is returned and the v1 filesystem is left unmodified.

Enabling the migration requires two steps:
1. Defining LFS_MIGRATE
2. Call [lfs_migrate](https://github.com/ARMmbed/littlefs/blob/0907ba7813173901bc9a7689e8781434629a3696/lfs.h#L626-L637) (only available with the above macro)

More info about this [here](https://github.com/ARMmbed/littlefs/pull/85/commits/4ad09d6c4ec95c126909b905900237cdc829c6b0).

### Documentation

Documentation has been brought up to date with the changes. More info on how littlefs v2 works can be found in the updated [DESIGN.md](https://github.com/ARMmbed/littlefs/blob/v2/DESIGN.md) and [SPEC.md](https://github.com/ARMmbed/littlefs/blob/v2/SPEC.md).

### Performance comparison of v1 and v2

Calculated by simulating v1 and v2 with various file counts and file sizes. Results are divided by the count\*size of the files to get an easier-to-compare multiplicative cost. Note that these results are still on the smaller scale for storage. Smaller numbers are better.

As expected, the performance does not change much for reading (and even gets worse on NAND). However, the prog/erase performance is much better. This is desired as erasing has a much higher runtime penalty than reading, 

There's also a moderate improvement to storage consumption thanks to inline files, though note that the storage consumption converges as the file size increases.

---

![nor-flash-comparison](https://raw.githubusercontent.com/geky/littlefs-test-repo/gh-images/nor.svg?sanitize=true)

---

![nand-flash-comparison](https://raw.githubusercontent.com/geky/littlefs-test-repo/gh-images/nand.svg?sanitize=true)

---

![internal-flash-comparison](https://raw.githubusercontent.com/geky/littlefs-test-repo/gh-images/internal.svg?sanitize=true)

---

![sd-comparison](https://raw.githubusercontent.com/geky/littlefs-test-repo/gh-images/sd.svg?sanitize=true)",83160811
162,False,True,2019-01-23T03:02:46Z,2019-01-25T02:04:07Z,"### Note!

This is the alpha release of littlefs v2. There are still a handful of tasks that need to be completed before completing the work around v2, most notably 1. implement a migration function from v1 and 2. update documentation. But at the moment littlefs v2 is code complete and passing all the tests I've been able to throw at it.

If you any issues with v2-alpha, please raise them on GitHub as that will help make the v2 release that much more stable.

More info about v2.0 progress can be found here: https://github.com/ARMmbed/littlefs/pull/85

### What's new?

#### Big things
- Metadata logging - this is a constant-time improvement to write efficiency and wear distribution
- Custom attributes - a much requested feature for attaching small attributes to files (such as timestamps)
- Inline files - significantly improved handling of small files which can now have multiple in a single block
- XOR global state - moves and deletes should now be much faster
- Independent cache sizes - better handling of the RAM you give littlefs
- Expanding superblocks - no longer a flat cost of 2 blocks for the superblock
- True dynamic wear-leveling - no longer relies on reporting of block errors

#### Small things
- Configurable name/file/attr maximums - reduces RAM consumption and is still portable
- Added lfs_fs_size - no need for the extra code with lfs_fs_traverse
- Dropped global file buffer - now buffers are provided on a per-file basis
- Better update tracking - minor miscellaneous improvements

Detailed info in the PR: https://github.com/ARMmbed/littlefs/pull/85

### Changes

Right now the best source of info regarding the low-level changes can be found in the commit history, which contains a detailed log of all of the changes and reasoning behind different decisions:

https://github.com/ARMmbed/littlefs/commits/v2-alpha",83160811
163,False,False,2018-10-20T17:34:41Z,2019-01-25T01:16:45Z,"### Note!

littlefs v2.0 is almost here! This will be the last minor release for littlefs v1. I'll still be making patch releases as necessary, but any new features will be moved to littlefs v2.

More info about v2.0 progress can be found here: https://github.com/ARMmbed/littlefs/pull/85

### What's new?

- Added 2GiB file size limit and proper reporting of EFBIG errors.

### Changes

ec4d8b6 Changed release script to generate drafts
c7894a6 Added a handful of links to related projects
1950758 Added 2GiB file size limit and EFBIG reporting
97d8d5e Fixed issue where a rename causes a split and pushes dir out of sync
0bb1f7a Modified release script to create notes only on minor releases
28d2d96 Fix -Wsign-compare error
cb62bf2 Fixed release script issue with fetching recent tags
646b1b5 Added -Wjump-misses-init and fixed uninitialized warnings
e5a6938 Fixed possible infinite loop in deorphan step
6ad544f If stats file doesn't exist lfs_emubd_create will fail.
3419284 Fixed issue with corruption due to different cache sizes
",83160811
164,False,False,2018-07-27T20:59:18Z,2018-07-27T21:35:36Z,"### What's new?

- Improved release process. No more mutable versions. See https://github.com/ARMmbed/littlefs/pull/81 for more info.

### Changes

510cd13 Bumped minor version to v1.6
f5e0539 Fixed issue with release script non-standard version tags
0664480 Moved SPDX and license info into README
0234c77 Simplified release process based on feedback
",83160811
165,False,False,2018-07-19T22:30:48Z,2018-07-18T01:52:21Z,"### What's new?

- Added possibility to open multiple files with LFS_NO_MALLOC enabled
- Added file config structure and lfs_file_opencfg
- Added support for corrupt as initial state of blocks

### Changes

0422c55 Fix memory leaks in lfs_mount and lfs_format
961fab7 Added file config structure and lfs_file_opencfg
041e90a Added handling for corrupt as initial state of blocks
",83160811
166,False,False,2018-07-13T15:55:16Z,2018-06-21T18:31:18Z,"### What's new?

- Relicensed to BSD-3-Clause

### Changes

577d777 Add C++ guards to public headers
7e67f93 Use PRIu32 and PRIx32 format specifiers to fix warnings
5a17fa4 Fixed script issue with bash expansion inside makefile parameter
eed1eec Fixed information leaks through reused caches
4a86370 Added quality of life improvements for main.c/test.c issues
51346b8 Fixed shadowed variable warnings
6beff50 Changed license to BSD-3-Clause
",83160811
167,False,False,2018-04-30T08:37:10Z,2018-02-19T23:33:32Z,"### What's new?

- Support for big-endian machines
- Software-only implementations of intrinsics (LFS_NO_INTRINSICS)
- Wrappers for malloc/free/assert
- Conditional debug and assert statements

### Changes

c5e2b33 Added error when opening multiple files with a statically allocated buffer
015b86b Fixed issue with trailing dots in file paths
9637b96 Fixed lookahead overflow and removed unbounded lookahead pointers
89a7630 Fixed issue with lookahead trusting old lookahead blocks
43eac30 Renamed test_parallel tests to test_interespersed
dbc3cb1 Fixed Travis rate-limit issue with Github requests
93ece2e Removed outdated note about moves and powerloss
d9c076d Removed the uninitialized read for invalid superblocks
f72f6d6 Removed out of date note about endianness
5c4ee21 Added a note about the callback functions
1552246 Fixed Travis issue with deploy stage in PRs
9ee112a Fixed issue updating dir struct when extended dir chain
d9c3637 Fixed handling of root as target for create operations
1476181 Added LFS_CONFIG for user provided configuration of the utils
b2124a5 Fixed multiple deploy steps in Travis
67daf9e Added cross-compile targets for testing
a3fd2d4 Added more configurable utils
a0a55fb Added conversion to/from little-endian on disk
4f08424 Added software implementations of bitwise instructions
",83160811
168,False,False,2018-02-09T05:28:55Z,2018-02-02T08:43:30Z,"### What's new?

- Added lfs_file_truncate
- Versioning!

### Changes

2f8ae34 Added a git ignore file with .o .d blocks dir and lfs bin
e611cf5 Fix incorrect lookahead population before ack
a25743a Fixed some minor error code differences
6716b55 Fixed error check when truncating files to larger size
dc513b1 Silenced more of aldot's warnings
aa50e03 Commentary typo fix
6d55755 tests: Silence warnings in template
029361e Silence shadow warnings
fd04ed4 Added autogenerated release notes from commits
3101bc9 Do not print command invocation if QUIET
436707c doc: Editorial tweaks
3457252 doc: Spelling fixes
6d8e0e2 Moved -Werror flag to CI only
88f678f Fixed self-assign warning in tests
3ef4847 Added remove step in tests to force rebuild
5a38d00 Added deploy step in Travis to push new version as tags
035552a Add version info for software library and on-disk structures
997c2e5 Fixed incorrect reliance on errno in emubd
d88f0ac Added lfs_file_truncate
",83160811
169,False,False,2018-01-21T01:22:38Z,2018-02-02T08:18:37Z,"### What's new?

- Atomic moves
- Significant amount of bug fixes
- A lot of tweaks based on initial feedback

### Changes

2ad435e Added files test to littlefs-fuse tests in Travis
1fb6a19 Reduced ctz traverse runtime by 2x
db88727 Added error code LFS_ERR_NOTEMPTY
c2fab8f Added asserts on geometry and updated config documentation
472ccc4 Fixed file truncation without writes
aea3d3d Fixed positive seek bounds checking
be22d34 Updated links to Mbed OS
425aa3c Fixed issue with immediate exhaustion and small unaligned storage
5ee20e8 Fixed pipefail issue that was preventing CI from reporting errors
bf78b09 Added directory list for synchronizing in flight directories
e169d06 Removed vestigial function declaration
996cd8a Revisited documentation
78c79ec Added QUIET flag to tests so CI is readable
f9f4f5c Fixed standard name mismatch LFS_ERR_EXISTS -> LFS_ERR_EXIST
843e3c6 Added sticky-bit for preventing file syncs after write errors
2612e1b Modified lfs_ctz_extend to be a little bit safer
6664723 Fixed issue with committing directories to bad-blocks that are stuck
3f31c8c Fixed corner case with immediate exhaustion and lookahead==block_count
f4aeb83 Fixed issue with aggressively rounding down lookahead configuration
db51a39 Removed stray newline in LFS_ERROR for version
2ab150c Removed toolchain specific warnings
0825d34 Adopted alternative implementation for lfs_ctz_index
46e22b2 Adopted lfs_ctz_index implementation using popcount
4fdca15 Slight name change with ctz skip-list functions
454b588 Updated SPEC.md and DESIGN.md based on recent changes
f3578e3 Removed clamping to block size in ctz linked-list
83d4c61 Updated copyright
539409e Refactored deduplicate/deorphan step to single deorphan step
2936514 Added atomic move using dirty tag in entry type
ac9766e Added self-hosting fuzz test using littlefs-fuse
9db1a86 Added specification document
9843402 Fixed incorrect return value from lfs_file_seek
273cb7c Fixed problem with lookaheads larger than block device
d9367e0 Fixed collection of multiblock directories
a83b2fe Added checks for out-of-bound seeks
a8fa5e6 Fixed some corner cases with paths
26dd49a Fixed issue with negative modulo with unaligned lookaheads
0982020 Fixed issue with cold-write after seek to block boundary",83160811
170,False,False,2017-07-18T07:09:35Z,2018-02-02T08:05:57Z,"### Initial release

littlefs is a little fail-safe filesystem designed for embedded systems.

### More information

- [README.md](https://github.com/geky/littlefs/blob/c2283a2753619d82a1fdf27d799cd53f2eef9a80/README.md) - Landing page and introduction of littlefs
- [DESIGN.md](https://github.com/geky/littlefs/blob/c2283a2753619d82a1fdf27d799cd53f2eef9a80/DESIGN.md) - High-level design overview of littlefs",83160811
171,False,False,2020-02-11T12:11:10Z,2020-02-11T12:17:48Z,"# Bug fixes

- An integer overflow bug in `parse_mqtt()`, CVE-2019-19307
- MQTT ping logic improved
- Leak fix for invalid CA
- Make SSL and non-SSL build binary compatible
- Make 30x replies keep opened HTTP/1.1 connection",5414488
172,False,False,2019-09-30T06:46:39Z,2019-09-30T07:08:19Z,"## Bug fixes

- A critical issue in mg_http_parse() is fixed. Associated fuzzer test added.
This is a fix for the CVE-2019-13503 in the Common Vulnerability and Exposure database: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-13503",5414488
173,False,False,2019-06-13T08:50:09Z,2019-06-13T08:54:57Z,"## Bug fixes

- A critical MQTT heap-based overflow in `parse_mqtt()` fixed - credit goes to Yakun Zhang and Zheng Huang of Baidu Security Labs for discovering and reporting the issue
- `mg_resolve2()` incorrect memory init fixed
- Fixed locking in `lwip_net_if`
- Fixed callback invocation in `mg_net_if_lwip`

##  Features

- Added new platform rs14100, a [multi-protocol wireless chip from Redpine Signals](https://www.redpinesignals.com/Products/wireless_secure_MCU/Multi-Protocol_Wireless_Secure_MCU_SoCs_&_Modules/RS14100_SoCs_&_Modules/)
- Deliver EV_CLOSE to the last endpoint handler
- Allow NULL handler for mg_bind and mg_connect",5414488
174,False,False,2019-03-04T15:19:32Z,2019-03-04T15:25:51Z,"## API changes
* Added `MG_MK_STR_N()`, `mg_str_starts_with()`, `mg_strfree()`
* Added `mbuf_clear()`, `mbuf_append_and_free()`, `mbuf_move()`
* Added ability for multipart data handler to provide pushback
* Made `MG_CTL_MSG_MESSAGE_SIZE` overridable

## Bug fixes
* Fixed digest auth result comparison
* Read all available data during recv poll
* Ensure that user sees all the data before connection is closed
* Check for NULL in `tcp_recved_tcpip()`
* Send extra options with OPTIONS
* Properly support MQTT wildcards when matching topics
* Fix handling of WS handshake error response

## Other changes

* Log file:line instead of function; add cs_log_set_file_level()
",5414488
175,False,False,2018-10-08T13:06:45Z,2018-10-08T13:12:03Z,"* When processing chunked response, make sure chunk size is reasonable
* Open uploaded file in binary mode (Windows)
* Refactored polling, cleaned up net_if interface somewhat
* LwIP: Trim recv_mbuf when we know the size of the data
* Fix unused variable warnings when build w/o logging
* Added net_if_null
* Minor doc updates",5414488
176,False,False,2018-08-13T16:30:06Z,2018-08-13T16:39:16Z,"## Security fix

This release fixes a security issue, reported at https://www.cvedetails.com/cve/CVE-2018-10945/

( Fix body length calculation in `mg_handle_cgi`)

## Change List:
* Add `mg_url_encode_opt()` - a parametrized version of `mg_url_encode()`
* Add `MG_HIDE_SERVER_INFO`
* mg_file_upload_handler: Support multiple files
* Add host name verification for OpenSSL
* Add `mg_strstrip`: trims whitespace at both ends of a string

* Fix http pipelining
* Fix buffer size passed to inet_ntop()
* Fix an edge case in multipart HTTP upload parsing
* Fix `mg_http_parse_header` (treat `;` as a delimiter)
* mg_lwip: Fix race during clean connection teardown
* Fix a bug in mg_mgr_init_opt with opts.num_ifaces
* Fix build with `CS_ENABLE_STDIO=0`
* Fix warnings on newer versions of GCC
* Fix body length calculation in `mg_handle_cgi`
* Don't touch send_mbuf when sending MQTT messages",5414488
177,False,False,2018-02-08T16:51:43Z,2018-02-08T18:38:45Z,"- Fix socket leak when there are too many open file descriptors
- Fix publish-subscribe example
- Fix mg_parse_multipart in case of malformed request
- Websocket: Respond to Ping with Pong
- Websocket: Properly close a connection with Close frame (in response to a client's close and when protocol failure is detected)
- Websocket: Fix support of fragmented messages
- Websocket: Add support for control frames interjected in the middle of a fragmented message
- Digest authentication: Fix nonce validity check (expired nonce or nonce from the future did not cause the the check to fail)
- Digest authentication: Fix nonce request value; it worked before because nonce validity check was broken as well
- Digest authentication: Add `nonce` argument to `mg_http_create_digest_auth_header()`: clients should use the value received from the server's authentication request.
- Fail if passed a NULL handler to `mg_bind` or `mg_bind_opt`.
- Publish sources and tests
- Remove tunneling functionality which was used by nobody
- Add UDP client example
- Don't use user_data in mqtt server
- Deprecate `mg_http_parse_header()` and implement `mg_http_parse_header2()` instead, which allocates a new buffer if the client-provided one is not large enough (similarly to `asprintf`).
- Fix limitations of header value lengths, e.g. when parsing authentication headers such as nonce, etc.
",5414488
178,False,False,2017-10-31T10:01:27Z,2017-10-31T10:49:07Z,"API changes
 * [SOCKS5](https://en.wikipedia.org/wiki/SOCKS) client and server support
 * Timer value is no longer cleared after `MG_EV_TIMER` event if it was not changed. User's handler must set it to 0 explicitly to avoid repeated invocation.

FIxes
 * SSL/TLS listener fix for TI SimpleLink networking interface
 * Double-counting of recved bytes in LWIP interface caused issues
 * MQTT SUBSCRIBE command parsing in the broker code could cause crashes
 * FIxed CGI script connection lifetime management",5414488
179,False,False,2017-09-13T11:57:33Z,2017-09-13T12:01:12Z,"API changes:
 * `MG_ENABLE_CALLBACK_USERDATA` - if set, changes signature of event handler function to include user_data argument. Disabled by default for now, in the future this will become the default.
 *  `mg_set_nameserver()` - specify DNS server to use
 * `mg_assemble_uri()` - assemble a URI from parts
 *  `mg_connect_ws()` now accepts `http://` URLs

Bug fixes:
 * Fix parsing of MQTT QoS > 0 PUBLISH messages
 * Fix MQTT PUB{ACK,REC,REL,COMP} and UNSUBACK flags
 * Properly shut down the SSL connection (send ""close notify"" TLS message)
 * Fix `mg_get_http_var()` return value
 * Fix MQTT handshake; change client protocol to version 3.1.1
 * Fix Handling of multiple MQTT messages per RECV event
 * Update to make lwip_net_if thread-safe
 * Use DhcpNameServer on Windows
 * Fix MQTT message parsing issues
 * Fix DNS name uncompression that could lead to infinite loop
 * Fix WS frame reassembly issues

https://github.com/cesanta/mongoose/pull/855",5414488
180,False,False,2017-05-11T10:07:09Z,2017-05-19T09:41:56Z,"- Client support for TLS PSK
- Multipart handling fixes
- LWIP driver fixes
- UDP crashes on LWIP fixes
- Removed mg_enable_multithreading. Added example for multithreaded usage, https://github.com/cesanta/mongoose/tree/dev/examples/multithreaded
",5414488
181,False,False,2017-01-17T09:08:53Z,2017-01-16T15:09:47Z,"# New platforms supported

A bunch of new platforms are now supported by Mongoose:
- **Windows CE 6.0**: See [example](https://github.com/cesanta/mongoose/tree/master/examples/WinCE/http_server);
- **TI Tiva TM4C129**: See [example](https://github.com/cesanta/mongoose/tree/master/examples/TM4C129/ccs);
- **PIC32 Harmony TCP/IP**:  In addition to ""bare metal"", Mongoose is now able to use PIC32 Harmony TCP/IP Stack. Checkout example [here](https://github.com/cesanta/mongoose/tree/master/examples/PIC32/http_server/firmware);
- **nRF 51/52**: Find example for nRF 51 [here](https://github.com/cesanta/mongoose/tree/master/examples/nRF51) and for nRF52 [here](https://github.com/cesanta/mongoose/tree/master/examples/nRF52);
- **mbed**: Mongoose is now can be a part of a project based on mbed. Checkout example [here](https://github.com/cesanta/mongoose/tree/master/examples/mbed);
- **ESP32**: Mongoose 6.7 can be compiled for ESP32 platform.

# Other new features
- **NXP Kinetis K64** support improved: New example is [here](https://github.com/cesanta/mongoose/tree/master/examples/NXP_K64);
- **mbedTLS** native support: In addition to OpenSSL, Mongoose 6.7 can use mbedTLS;
- **SNTP client added**: Mongoose 6.7 for working with Internet time servers.

# A lot of improvements and bugfixes

See a list of closed issues [here](https://github.com/cesanta/mongoose/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20).
",5414488
182,False,False,2016-10-12T10:06:27Z,2016-10-12T08:18:53Z,"# Changes

## STM32 support added

Mongoose 6.6 can be built and run on STM32 microcontrollers. Check out the new example [here](https://github.com/cesanta/mongoose/tree/master/examples/STM32F4_CC3100) for an MQTT Client for STM32. The example runs through how to build an MQTT client for STM32 with TI CC3100 WIFI as network module.

## PIC32 support added

We’ve also added PIC32 support to Mongoose. And just as for STM32, we have a new example [here](https://github.com/cesanta/mongoose/tree/master/examples/PIC32/) for you to follow here. It runs through how an MQTT Client is intended for running on PIC32 (MX series with TI CC3100 as a network module).

## TI CC3200 support improved

We have improved the already support TI CC3200. Here, the TI Compiler on docker image was updated to version 5.8.2. 

## New API introductions

We want to make Mongoose as simple as possible to use. Check out the new API we’ve added in 6.6: 
- `mg_http_send_redirect` -  sends a redirect response 
- `mg_http_serve_file` - serves a specific file with a given MIME type and optional extra headers.
- `MG_F_ENABLE_BROADCAST` - new flag, allows to send broadcast messages
- `MG_EV_SSI_CALL_CTX` - new event, the variant of MG_EV_SSI_CALL with context of the SSI call being processed in addition to the tag argument.

## New Examples

We mentioned the STM32 an PIC32 examples already, but they are not all! Check out these additional examples to help you get started with your embedded project: 
- [DLL/SO building example](https://github.com/cesanta/mongoose/tree/master/examples/dll) 
- [Simple SSL Web Server: shows how to build a http server with SSL support](https://github.com/cesanta/mongoose/tree/master/examples/simplest_web_server_ssl)
- [A cookie auth and session management example](https://github.com/cesanta/mongoose/tree/master/examples/cookie_auth) 
- [Multicast server demo](https://github.com/cesanta/mongoose/tree/master/examples/mcast_udp_server) 

## Bugfixes

We always improve bugs along the way between releases. If you come across anything, let us know in our forum. 
- Use gethostbyname to resolve `hocalhost` if resolving via /etc/hosts failed. (especially useful for Windows users)
- Fixed a lot of errors and warning in MSVC compilation
- Fixed bug in multithreaded mode support:
  - Copy flags for accepted connection
  - Use user timeout in multithreading polling
- Smaller bug fixes

## Documentation

We want you to be able to find all the answers you need in our documentation. That’s why we try to improve it as best we can. So you’ll see that we have more clear and structured documentation available as well as explanations for each example added directly in our documentation section. 

# Binaries

Windows and Mac binaries are available for download from the [website](https://www.cesanta.com/products/binary).

# Licensing

Mongoose is available under GPLv2. Commercial use requires a license, please [contact us](https://www.cesanta.com/contact) for terms.

# Support

Community support can be found on [our forum](https://forum.cesanta.com). Commercial support options are available separately by contacting us.
",5414488
183,False,False,2016-07-12T13:20:04Z,2016-07-12T13:50:40Z,"# Changes
- Improved TI CC3200 support
  - Newly-rewritten SimpleLink socket handler
  - Added support for SSL
  - NWP restart hook: sl_restart_cb should be invoked by the user to re-init listeners after NWP restart
- Dedicated JSON Library 
  - Support for JSON serialisation/deserialisation has been moved back to a dedicated library ([Frozen](https://github.com/cesanta/frozen)). It has seen major improvements - printf/scanf like API has been implemented, making parsing and emitting JSON easy and convenient. Users that need JSON functionality are encouraged to check out Frozen.
  - JSON-RPC support is no longer available as part of Mongoose
- CGI: REMOTE_ADDR and SERVER_PORT variables are now passed to the scripts
- Fixed a memory leak in mg_connect_ws_opt
- Fixed issues with HTTP keep-alive connections
- Other minor fixes

# Binaries

Windows and Mac binaries are available for download from the [website](https://www.cesanta.com/products/binary).

# Licensing

Mongoose is available under GPLv2. Commercial use requires a license, please [contact us](https://www.cesanta.com/contact) for terms.

# Support

Community support can be found on [our forum](https://forum.cesanta.com). Commercial support options are available separately by contacting us.
",5414488
184,False,False,2016-04-12T13:21:12Z,2016-04-12T14:14:30Z,"# New features and API changes
- [Multipart upload streaming](https://blog.cesanta.com/big-upload-example-mongoose-more-than-an-embedded-web-server) - a way to process multipart requests (like file uploads) without fully buffering them
- [mg_register_http_endpoint](https://docs.cesanta.com/mongoose/dev/#/c-api/http.h/mg_register_http_endpoint/) - an easy to use way to handle requests to specific URIs
- [mg_parse_uri](https://docs.cesanta.com/mongoose/dev/#/c-api/http.h/mg_parse_uri/) - a new function to parse URIs, used internally and available publicly
- [mg_bind_opt](https://docs.cesanta.com/mongoose/dev/#/c-api/http.h/mg_bind_opt/) and [mg_connect_opt](https://docs.cesanta.com/mongoose/dev/#/c-api/http.h/mg_connect_opt/) now take SSL-related options
- [mg_connect_http_opt](https://docs.cesanta.com/mongoose/dev/#/c-api/http.h/mg_connect_http_opt/) and [mg_connect_ws_opt](https://docs.cesanta.com/mongoose/dev/#/c-api/http.h/mg_connect_ws_opt/) API calls have been added, with SSL-related options initially
- Support for [TI CC3200](http://www.ti.com/product/CC3200) and [MSP432](http://www.ti.com/lsds/ti/microcontrollers_16-bit_32-bit/msp/low_power_performance/msp432p4x/overview.page); For both Mongoose now has example CCS projects that can be imported and used right away ([CC3200](https://github.com/cesanta/mongoose/tree/master/examples/CC3200/ccs), [MSP432](https://github.com/cesanta/mongoose/tree/master/examples/MSP432/ccs)).

# Bug fixes and improvements
- A number of fixes in handling of UDP, added [an example](https://github.com/cesanta/mongoose/tree/master/examples/udp_echo_server).
- Fix MQTT parsing of nullary commands.
- Adjust poll timeout if there are pending timers.

# Licensing

Mongoose is available under GPLv2. Commercial use requires a license, please [contact us](https://www.cesanta.com/contact) for terms.

# Support

Community support can be found on [our forum](https://forum.cesanta.com). Commercial support options are available separately by contacting us.
",5414488
185,False,False,2016-03-08T07:44:23Z,2016-03-10T10:29:27Z,"This release concerns commercial users only. From this release on, there are no separation for lite/standard/premium version.

Technical changes (bugfixes, new features) are scheduled for the next 6.4 release in mid-April.
",5414488
186,False,False,2016-01-11T09:27:55Z,2016-01-12T08:58:09Z,"# What's new in the Mongoose Library
- WebDAV support improvements. With a just a couple of lines of code your web server is ready to serve WebDAV and can be mounted as a network drive in very different clients, like Finder on MacOS, Explorer on Windows and Nemo, Nautilus (and others) on Linux. Just add `dav_document_root` to initialization parameters and your are ready to go. See [simplest_web_server example](https://github.com/cesanta/mongoose/blob/master/examples/simplest_web_server/simplest_web_server.c).
- Timer support. Mongoose 6.2 introduces new event - `MG_EV_TIMER`. With event and new API function `mg_set_timer` things like connection timeout (and a lot of another timeout-related features) can be easily implemented. Call `mg_set_timer(my_connection, time(NULL) + N)` and my_connection will receive MG_EV_TIMER once N seconds is elapsed. Sub-second precision is also supported, and the `mg_time` function which returns current time as a fraction floating point value has been added.
  See [API documentation](https://www.cesanta.com/developer/mongoose#_mg_set_timer) for more details.

Other changes:
- `MG_EV_CLOSE` is now always delivered before connection is destroyed. This should simplify cleanup.
- New API function: `mg_url_decode` to decode URL-encoded string.
- g++ and Microsoft Visual Studio support was improved
",5414488
187,False,False,2015-11-30T12:27:59Z,2015-11-30T12:30:43Z,"# What's new in the Mongoose Library
- Native support for [PicoTCP embedded TCP/IP stack](http://www.picotcp.com) 
- Native support for [LWIP embedded TCP/IP stack](https://en.wikipedia.org/wiki/LwIP)
- Native support for ESP8266 SDK (see [example](https://github.com/cesanta/mongoose/tree/master/examples/ESP8266_RTOS))
- Native support for CC3200 FreeRTOS SDK
- Added ability to specify extra headers for `mg_serve_http()` - that implements e.g. [CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing) on server side
- Added ability for automatic port-based redirects, for HTTP->HTTPS redirects
- Multiple bigfixes

# Mongoose editions

For commercial use, Mongoose is available in three editions:
- Mongoose Lite: Cross platform integration, SSL/TLS, HTTP support
- Mongoose: Mongoose Lite + HTTP CGI, HTTP SSI, HTTP Digest Auth, WebSocket support
- Mongoose Premium: Mongoose + Plain TCP, UDP, JSON-RPC, MQTT, DNS, CoAP support
",5414488
188,False,False,2013-01-18T10:43:52Z,2015-11-29T10:26:58Z,"- Fixed source code archive (main.c was missing)
- Extended Windows GUI functionality:
- Added ""Start browser"" systray popup menu item
- Enhanced configuration editor
- Renamed config options:
  - `put_delete_passwords_file` -> `put_delete_auth_file`
  - `global_passwords_file` -> `global_auth_file`
  -  `select()` changed to `poll()`, to avoid big file descriptor `FD_SET` problem on UNIX
- Couple of bugfixes, thanks to contributors
",5414488
189,False,False,2013-02-05T18:00:49Z,2015-11-29T10:26:07Z,"- Added ""redirect to SSL port"" functionality, e.g. if you specify
    `-listening_ports 8080r,8043s`
    then all requests to HTTP port 8080 will be redirected to HTTPS port 8043
- Added `mg_download()` API, an HTTP client interface!
- Lua server pages now must output HTTP headers -- full control for Lua
- Added pre-built binary for MacOS, with initial GUI support
- API change: got rid of events, moved to struct `mg_callbacks`
- Bugfixes, thanks to contributors
",5414488
190,False,False,2014-01-06T14:58:21Z,2015-11-29T10:25:29Z,"- Internal core has been changed from blocking, thread-per-connection to
    non-blocking, asynchronous, one thread for all.
- API modification for server creation and response creation. That allowed
   keep-alive support for dynamic requests, boosting the embedded performance
   to 100+ thousands requests per second on a single core
   (as measured on my development MacBook laptop)
- Unified handling of POST requests and Websocket requests by putting a
  payload into `conn->content`, `conn->content_len` attributes.
  That simplified user code and eliminated the need of `mg_read()`,
  since mongoose buffers all data prior to calling the callback
- Keep-alive support is the default
- Dropped SSI support and throttling support
- Several configuraition parameters are gone:
  -  `cgi_environment` (replaced with MONGOOSE_CGI),
  -  `protect_uri` (not useful)
  -  `ssi_pattern` (SSI support is gone)
  -  `throttle` (throttling support is gone)
  -  `error_log_file` (not used)
  -   `enable_keep_alive` (enabled by default)
  -   `listening_ports` (renamed to listening_port)
  -   `num_threads` (core has changed to single thread)
  -   `put_delete_auth_file` (renamed to dav_auth_file)
  -   `authentication_domain` (renamed to auth_domain)
- Due to the async, non-blocking nature of the core, few restrictions
    are now in place:
  - user callbacks must not block
  - POST and Websocket data are now buffered, and cannot be huge
- mongoose is now capable on listening on only one port
",5414488
191,False,False,2014-01-10T22:37:26Z,2015-11-29T10:24:30Z,"- CGI-related bugs where fixed, primarily for Windows platform
- Bugs on Windows related to UNICODE support were fixed
- Added a feature to support ""error pages"" through redirect.
    Done using `-url_redirects` option, details are on
    http://cesanta.com/docs/Options.shtml
",5414488
192,False,False,2014-02-01T15:17:13Z,2015-11-29T10:23:58Z,"- Windows binary made fully UNICODE aware. In previous versions,
    the presence of non-ASCII chars in document root, CGI script name,
    or directory name might have broken Mongoose as stand-alone
    or as Windows service. Now Mongoose works with non-ASCII paths properly.
    Internally, Mongoose uses UTF8 encoding. When making WinAPI calls,
    mongoose converts UTF8 strings to wide chars and calls UNICODE API.
- Enhanced authorization API by providing `mg_set_auth_handler()` and
    `mg_authorize_digest()`
- Removed `mg_add_uri_handler()`, added `mg_set_request_handler()`.
    There is only oneURI handler that handles all requests, just like in 4.x.
    The reason for this change is to provide an ability to catch all URIs,
    and at the same time signal Mongoose to continue handling specific URIs.
- Added `mg_parse_multipart()` API for file uploads.
    Note that the restriction on uploading huge files still exists,
    and will be eliminated in the next release.
- Allowing mongoose to bind to port 0, in which case it'll bind to any
    random unused port.
- Moved `idle_timeout_ms` run-time option to compile-time flag
- Added asynchronous HTTP client, not documented yet. Documentation and
    examples are coming in the next couple of weeks. Async Websocket client
    is scheduled for the next release. See usage examples at `unit_test.c`
- Windows and MacOS pre-built binaries are now split to free and paid ones,
  paid binaries include CGI, SSL, Lua, Sqlite, support and updates.
  Linux pre-built binary includes all functionality and is free, and will
  continue to be free.  Source code for Windows and MacOS GUI is closed.
  Disclaimer: source code for the command line stand-alone server,
  as well as Mongoose library itself, will never be closed.
- Multiple bug fixes and minor enhancements
",5414488
193,False,False,2014-03-10T11:21:52Z,2015-11-29T10:22:48Z,"## Changes in Libmongoose library:
- Moved to the evented API. Updated API documentation is at
     http://cesanta.com/docs/Embed.shtml
     http://cesanta.com/docs/API.shtml
-  Added `MG_LUA` event for exporting custom variables to the Lua environment
-  Added virtual hosts capability, see `url_rewrites` option description at
     http://cesanta.com/docs/Options.shtml
-  Added mjpg serving example
-  Cleaned up and documented HTTP client API, with unit tests
-  Added `mg_wakeup_server()` to awaken `mg_poll_server()`
    from another thread
-  Moved Mongoose IO core to [https://github.com/cesanta/net_skeleton](Net Skeleton)
-  Added connection hexdump functionality for developers
-  Bug fixes

## Changes in pre-compiled binaries:
-  New awesome Mongoose logos by our designer Katrin - thanks Katrin!
      Check them out at http://cesanta.com/products.shtml
-  Added Lua Server Pages support to the free version, quick intro is at
      http://cesanta.com/docs/Lua.shtml
-  Added quick ""Set shared directory"" menu item to set `document_root`
-  Added SSI support to the Pro version
-  Removed SSL support from the Pro version
",5414488
194,False,False,2014-07-28T11:19:00Z,2015-11-29T10:22:06Z,"## Changes in Libmongoose library:
- Added `hexdump_file` option for low-level request/reply debugging
- Added `mg_template()` API function for generating HTML pages from
  templates with expansions
- Fixed `struct mg_connection::local_ip` handling, `mg_set_option()`
  behavior with NULL values
- Added `mg_send_file()` call to send arbitrary file to the client
- Added `mg_terminate_ssl()` for SSL termination functionality
- Added HTTP proxy support, `enable_proxy` config option
- Added `mg_next()` for iterating over existing active connections
- Added client-side SSL auth, `ssl_ca_certificate` option
- Added `mg_wakeup_server_ex()` for pushing messages to existing connections
- Added `MG_WS_HANDSHAKE` and `MG_WS_CONNECT` events that are sent on
   Websocket handshake is connection establishment, respectively
- Removed server-side Lua support
- Filesystem access, reading from socket/SSL performance improvements
- DAV PROPFIND memory leak fixed
- Added `big_upload.c` and enhanced `upload.c` example
- Added `proxy.c` example that demonstrates proxy functionality and SSE pushes
- Added `websocket2.c` example that shows simple web chat implementation
  over websockets
- Various minor fixes

## Changes in pre-compiled binaries:
- Created HTML administration console
- When server is started, browser is started automatically
- Fixed directory listing bug when directory contains `#` character
- Removed built-in Lua Server Pages in the binary, and instead
  added Mongoose + Lua developer bundle which has Lua Server Pages support.
  That also solves external Lua modules loading problem.
",5414488
195,False,False,2014-10-28T11:42:47Z,2015-11-29T10:21:25Z,"## Changes in Libmongoose library:
- Added new API function: `mg_forward()` for proxying functionality
- Added new API function: `mg_send_file_data()` for sending file data
- Added new utility API functions: `mg_mmap() and mg_munmap()`
- Changed the way SSL settings are handled: removed `ssl_certificate` and
  `ssl_ca_certificate` options, and instead made `listening_port` accept
  `ssl://PORT:SSL_CERT:CA_CERT` notation
- Added ability to listen on multiple ports, see `listening_port` documentation
- Added `enable_proxy` option
- Added [cookie_authentication](https://github.com/cesanta/mongoose/tree/master/examples/cookie_authentication) example
- Added [websocket_ssl_proxy](https://github.com/cesanta/mongoose/tree/master/examples/websocket_ssl_proxy) example
- Added [http_client](https://github.com/cesanta/mongoose/tree/master/examples/http_client) example
- Increased default 'idle connection' timeout from 30 to 300 seconds
- Fixed MinGW build
- Refactored all examples, put each in it's own directory with dedicated build
- Many smaller bugfixed, including SSL, CGI, API, proxy, etc

## Changes in pre-compiled binaries:
- Support for multiple listening ports
- Fixed CGI handling for scripts that specify interpreter in the hashbang line
",5414488
196,False,False,2015-03-18T17:25:46Z,2015-11-29T10:20:26Z,"## Changes in Libmongoose library:
- Added `-dav_root` configuration option that gives an ability to mount
  a different root directory (not document_root)
- Fixes for build under Win23 and MinGW
- Bugfix: Double dots removal
- Bugfix: final chunked response double-send
- Fixed compilation in 64-bit environments
- Added OS/2 compatibility
- Added `getaddrinfo()` call and `NS_ENABLE_GETADDRINFO`
- Various SSL-related fixes
- Added integer overflow protection in `iobuf_append()` and `deliver_websocket_frame()`
- Fixed NetBSD build
- Enabled `NS_ENABLE_IPV6` build for Visual Studio 2008+
- Enhanced comma detection in `parse_header()`
- Fixed unchanged memory accesses on ARM
- Added ability to use custom memory allocator through NS_MALLOC, NS_FREE, NS_REALLOC

## Changes in Mongoose binary:
- Added `-start_browser` option to disable automatic browser launch
- Added experimental SSL support. To listen on HTTPS port, use `ssl://PORT:SSL_CERT` format. For example, to listen on HTTP port 8080 and HTTPS port 8043, use `-listening_port 8080,ssl://8043:ssl_cert.pem`
",5414488
197,False,False,2015-09-21T14:29:28Z,2015-09-21T10:01:40Z,"# Overview

This is a major release of Mongoose. It brings new capabilities, making Mongoose a multi-protocol network library rather then only HTTP/Websocket. That means more flexible and rich API. New Mongoose API is not backward-compatible with pre-6.0 versions.

# What's New
- Support for plain TCP, plain UDP
- Support for Websocket client 
- JSON-RPC client, JSON-RPC server
- MQTT client, MQTT broker
- CoAP client, CoAP server
- DNS client, DNS server, async DNS resolver
- SSL layer improvements, including modern cryptography support
- New API

# Architecture notes

Pre-6.0 Mongoose was hiding the implementation from the user. Like, internal connection structures, sockets, etc. Mongoose 6.0 opens everything to the user. This has it's pro and cons. The decision to open the guts of the library is to provide power users to take full control over the IO engine. Basic use cases are well covered by the example that are provided in abundance.

# Mongoose Editions

Mongoose is available in three editions to suit your integration needs: 
- Mongoose Lite:        Cross platform integration, SSL/TLS, HTTP support 
- Mongoose:         Mongoose Lite + HTTP CGI, HTTP SSI, HTTP Digest Auth, WebSocket support 
- Mongoose Premium: Mongoose + Plain TCP, UDP, JSON-RPC, MQTT, DNS, CoAP support
",5414488
198,False,False,2020-02-03T17:21:37Z,2020-02-03T17:22:46Z,"This release is just intended to keep a tag of raylib 2.6 state before moving to the upcoming raylib 3.0 release.

On raylib 3.0 all modules globals have been moved to a global context state, using the name of the module (in capitals) as the object instance. It implied a very big refactoring of all the code, renaming ALL the global variables used in every module... but new code is more readable and global variables around the code are easily detected.

raylib 3.0 develop branch was used on GGJ2020 to develop a game and compile it for Desktop and HTML5 platforms, it worked very good. raylib 3.0 has also been tested on RaspberryPi and compiled with no errors for all CI available platforms. At this point raylib 3.0 should be stable.

From now on master branch will include this new design, a 2.6 branch will be kept for reference.",13836499
199,False,False,2019-05-31T08:03:44Z,2019-05-31T09:07:27Z,"After almost one years since latest raylib installment, here it is **raylib 2.5**. A lot of work has been put on this new version and consequently I decided to bump versioning several digits. The complete list of changes and additions is humungous, details can be found in the [CHANGELOG](CHANGELOG), and here it is a short recap with the highlight improvements.

 - New **window management and filesystem functions** to query monitor information, deal with clipboard, check directory files info and even launch a URL with default system web browser. Experimental **High-DPI monitor support** has also been added through a compile flag.

 - **Redesigned Gamepad mechanism**, now generic for all platforms and gamepads, no more specific gamepad configurations.
**Redesigned UWP input system**, now raylib supports UWP seamlessly, previous implementation required a custom input system implemented in user code.

 - `rlgl` module has been redesigned to **support a unique buffer for shapes drawing batching**, including LINES, TRIANGLES, QUADS in the same indexed buffer, also added support for multi-buffering if required. Additionally, `rlPushMatrix()`/`rlPopMatrix()` functionality has been reviewed to behave exactly like OpenGL 1.1, `models_rlgl_solar_system` example has been added to illustrate this behaviour.

 - **VR simulator** has been reviewed to **allow custom configuration of Head-Mounted-Device parameters and distortion shader**, `core_vr_simulator` has been properly adapted to showcase this new functionality, now the VR simulator is a generic configurable stereo rendering system that allows any VR device simulation with just a few lines of code or even dynamic tweaking of HMD parameters.

 - Support for **Unicode text drawing**; now raylib processes UTF8 strings on drawing, supporting Unicode codepoints, allowing rendering mostly any existent language (as long as the font with the glyphs is provided). An amazing example showing this feature has also been added: `text_unicode`.

 - Brand **new text management API**, with the addition of multiple functions to deal with string data, including functionality like replace, insert, join, split, append, to uppercase, to lower... Note that most of those functions are intended for text management on rendering, using pre-loaded internal buffers, avoiding new memory allocation that user should free manually.

 - Multiple **new shapes and textures drawing functions** to support rings (`DrawRing()`, `DrawRingLines()`), circle sectors (`DrawCircleSector()`, `DrawCircleSectorLines()`), rounded rectangles (`DrawRectangleRounded()`, `DrawRectangleRoundedLines()`) and also n-patch textures (`DrawTextureNPatch()`), detailed examples have been added to illustrate all this new functionality. 

 - Experimental **cubemap support**, to automatically load multiple cubemap layouts (`LoadTextureCubemap()`). It required some internal `rlgl` redesign to allow cubemap textures.

 - **Skeletal animation support for 3d models**, this addition implied a redesign of `Model` data structure to accomodate multiple mesh/multiple materials support and bones information. Multiple models functions have been reviewed and added on this process, also **glTF models loading support** has been added.

This is a just a brief list with some of the changes of the new **raylib 2.5** but there is way more, about **70 new functions** have been added and several subsystems have been redesigned. More than **30 new examples** have been created to show the new functionalities and better illustrate already available ones.

It has been a long year of hard work to make raylib a solid technology to develop new products over it.",13836499
200,False,False,2018-07-21T17:42:23Z,2018-07-21T20:10:02Z,"After **9 month** of hard work, here it is a new version of raylib!

In **raylib 2.0** the full API has been carefully reviewed for better consistency, some new functionality has been added and the overall raylib experience has been greatly improved... The key features of new version are:

 - **Complete removal of external dependencies.** Finally, raylib does not require external libraries to be installed and linked along with raylib, all required libraries are contained and compiled within raylib. Obviously some external libraries are required but only the strictly platform-dependant ones, that come installed with the OS. So, raylib becomes a self-contained platform-independent games development library. 

 - **Full redesign of audio module to use the amazing mini_al audio library**, along with external dependencies removal, OpenAL library has been replaced by mini_al, this brand new library offers automatic dynamic linking with default OS audio systems. Undoubtly, the perfect low-level companion for raylib audio module!

 - **Support for continuous integration building** through AppVeyor and Travis CI. As a consequence, raylib GitHub develop branch has been completely removed simplyfing the code-base to a single master branch, always stable. Every time a new commit is deployed, library is compiled for **up-to 12 different configurations**, including multiple platforms, 32bit/64bit and multiple compiler options! All those binaries are automatically attached to any new release!

 - **More platforms supported and tested**, including BSD family (FreeBSD, openBSD, NetBSD, DragonFly) and Linux-based family platforms (openSUSE, Debian, Ubuntu, Arch, NixOS...). raylib has already been added to some package managers! Oh, and last but not less important, **Android 64bit** is already supported by raylib!

 - **Support for TCC compiler!** Thanks to the lack of external dependencies, raylib can now be easily compiled with a **minimal toolchain**, like the one provide by Tiny C Compiler. It opens the door to an amazing future, allowing, for example, static linkage of libtcc for **runtime compilation of raylib-based code**... and the library itself if required! Moreover, TCC is blazing fast, it can compile all raylib in just a few seconds!

 - Refactored all raylib configuration #defines into a **centralized `config.h` header**, with more than **40 possible configuration options** to compile a totally customizable raylib version including only desired options like supported file-formats or specific functionality support. It allows generating a trully ligth-weight version of the library if desired!

 - A part of that, lots of new features, like a brand **new font rendering and packaging system** for TTF fonts with **SDF support** (thanks to the amazing STB headers), new functions for **CPU image data manipulation**, new orthographic 3d camera mode, a complete review of `raymath.h` single-file header-only library for better consistency and performance, new examples and way, [way more](https://github.com/raysan5/raylib/blob/master/CHANGELOG).

As always, examples and templates have been reviewed to work with new version (some new examples added), all included external libraries have been updated to latest stable version and latest Notepad++ and MinGW have been configured to work with new **raylib 2.0**.

raylib Windows Installer package includes the following:

 - **Notepad++ 7.5.7 (32bit)**: Code editor preconfigured for raylib, including code compilation scripts.
 - **MinGW-w64 32bit (GCC 7.2.0)**: C/C++ Compiler including precompiled raylib library.
 - **raylib Content**: Code examples, Game samples, Project templates.

Enjoy the brand new **raylib 2.0**!",13836499
201,False,False,2018-04-10T08:37:48Z,2018-04-10T08:38:40Z,raylib develop release including latest library features and intended for testing.,13836499
202,False,False,2018-02-04T12:47:42Z,2018-02-04T12:48:39Z,raylib develop release including latest library features and intended for testing.,13836499
203,False,False,2017-10-22T18:43:57Z,2017-10-22T18:46:50Z,"Another raylib release is published: **raylib 1.8**. Again, several modules of the library have been reviewed and some new functionality added. Main changes of this new release are:

 - **Procedural image generation functions**, a set of new functions have been added to generate gradients, checked, noise and cellular images from scratch. Image generation could be useful for certain textures or learning pourpouses.

 - **Parametric mesh generation functions**, create 3d meshes from scratch just defining a set of parameters, meshes like cube, sphere, cylinder, torus, knot and more can be very useful for prototyping or for lighting and texture testing.

 - **PBR Materials support**, a completely redesigned shaders and material system allows advance materials definition and usage, with fully customizable shaders. Some new functions have been added to generate the environment textures required for PBR shading and a [new complete PBR material example](https://github.com/raysan5/raylib/blob/master/examples/models/models_material_pbr.c) is also provided for reference.

 - **Custom Android APK build pipeline** with simple Makefile. Actually, full code building mechanism based on plain Makefile has been [completely reviewed](https://github.com/raysan5/raylib/blob/master/templates/advance_game/Makefile) and [Android building has been added](https://github.com/raysan5/raylib/blob/master/templates/advance_game/Makefile.Android) for sources and also for templates building into final APK package. This way, raylib Android building has been greatly simplified and integrated seamlessly into standard build scripts.

 - [rlgl module](https://github.com/raysan5/raylib/blob/master/src/rlgl.c) has been completely reviewed and most of the functions renamed for consistency. This way, standalone usage of rlgl is promoted, with a complete [example provided](https://github.com/raysan5/raylib/blob/master/examples/others/rlgl_standalone.c). rlgl offers a pseudo-OpenGL 1.1 immediate-mode programming-style layer, with backends to multiple OpenGL versions.

 - [raymath library](https://github.com/raysan5/raylib/blob/master/src/raymath.h) has been also reviewed to align with other advance math libraries like GLM. Matrix math has been improved and simplified, some new Quaternion functions have been added and Vector3 functions have been renamed all around the library for consistency with new Vector2 functionality.

As always, [examples](https://github.com/raysan5/raylib/tree/master/examples) and [templates](https://github.com/raysan5/raylib/tree/master/templates) have been reviewed to work with new version (some new examples have been added), all external libraries have been updated to latest stable version and latest Notepad++ and MinGW have been configured to work with **new raylib v1.8**.

For a detailed list of changes, check [CHANGELOG](https://github.com/raysan5/raylib/blob/master/CHANGELOG).

raylib Windows Installer package includes the following:

 - **Notepad++ 7.5.1 (32bit)**: Code editor preconfigured for raylib, including code compilation scripts.
 - **MinGW (GCC 5.3.0)**: C Compiler including raylib libraries and dependencies.
 - **raylib Content**: Code examples, Game samples, Project templates.

Just enjoy learning with raylib 1.8!",13836499
204,False,False,2017-05-18T23:02:01Z,2017-05-18T23:08:28Z,"New raylib version 1.7 arrives with lots of improvements. Some highlights of this new version are:

 - More than 30 new functions added to the library, functions to control Window, utils to work with filenames and extensions, functions to draw lines with custom thick, mesh loading, functions for 3d ray collisions detailed detection, funtions for VR simulation and much more!
 - Support of configuration flags on every raylib module. Advance users can customize raylib just choosing desired features, defining some configuration flags on modules compilation. That way users can control library size and available functionality.
 - Improved build system for all supported platforms (Windows, Linux, OSX, RPI, Android, HTML5) with a unique Makefile to compile sources. Added support for Android compilation with a custom standalone toolchain and also multiple build compliation flags.
 - New examples and sample games added. All samples material has been reviewed, removing useless examples and adding more comprehensive ones; all material has been ported to latest raylib version and tested in multiple platforms. Examples folder structure has been improved and also build systems.
 - Improved library consistency and organization in general. Functions and parameters have been renamed, some parts of the library have been cleaned and simplyfied, some functions has been moved to examples (lighting, Oculus Rift CV1 support) towards a more generic library implementation.
 - Some other features: Gamepad support on HTML5, RPI touch screen support, 32bit audio support, frames timming improvements, public log system, rres file format support, automatic GIF recording...

For a detailed list of changes, check [CHANGELOG](https://github.com/raysan5/raylib/blob/master/CHANGELOG).

raylib Windows Installer package includes the following:

 - **Notepad++ 7.4.1 (32bit)**: Code editor preconfigured for raylib, including code compilation scripts.
 - **MinGW (GCC 5.3.0)**: C Compiler including raylib libraries and dependencies.
 - **raylib Content**: Code examples, Game samples, Project templates.

Just enjoy learning with raylib 1.7!",13836499
205,False,False,2016-11-24T16:26:07Z,2016-11-24T16:44:53Z,"New raylib version 1.6 to commemorate raylib 3rd anniversary! Main features:
- Complete raylib LUA binding. All raylib functions plus the +60 code examples have been ported to LUA, now LUA users can enjoy coding videogames in LUA while using all the internal power of raylib.
- Completely redesigned audio module. Based on the new direction taken in raylib 1.5, it has been further improved and more functionality added (+20 new functions) to allow raw audio processing and streaming.
- Physac module has been moved to its own repository and it has been improved A LOT, actually, library has been completely rewritten from scratch by @victorfisac, multiple samples have been added together with countless new features to match current standard 2D physic libraries. Results are amazing!
- Camera and gestures modules have been reviewed, highly simplified and ported to single-file header-only libraries for easier portability and usage flexibility.
- Improved Gamepad support on Windows and Raspberry Pi with the addition of new functions for custom gamepad configurations but supporting by default PS3 and Xbox-based gamepads.
- Improved textures and text functionality, adding new functions for texture filtering control and better TTF/AngelCode fonts loading and generation support.
- Build system improvement. Added support for raylib dynamic library generation (raylib.dll) for users that prefer dynamic library linking. Also added a pre-configured Visual Studio C++ 2015 solution with raylib project and C/C++ examples for users that prefer that professional IDE and compiler.

For a detailed list of changes, check [CHANGELOG](https://github.com/raysan5/raylib/blob/master/CHANGELOG).

raylib Windows Installer package includes the following:
- **Notepad++ 7.2 (32bit)**: Code editor preconfigured for raylib, including code compilation scripts.
- **MinGW (GCC 5.3.0)**: C Compiler including raylib libraries and dependencies.
- **raylib Useful Content**: Code examples, Game samples, Project templates, fonts, shaders, etc.

Just enjoy learning with raylib 1.6!
",13836499
206,False,False,2016-07-19T10:48:55Z,2016-07-19T11:04:06Z,"New raylib version 1.5! Main features:
- VR support: raylib supports Oculus Rift CV1 and, additionally, supports simulated VR stereo rendering, independent of the VR device.
- New materials system: now raylib supports standard material properties for 3D models, including diffuse-ambient-specular colors and diffuse-normal-specular textures.
- New lighting system with support for up to 8 configurable lights of 3 types: point, directional and spot lights.
- Complete gamepad support on Raspberry Pi: Now multiple gamepads can be easily configured and used; gamepad data is read and processed in raw mode in a second thread.
- Redesigned physics module: physac module has been converted to header only and usage has been simplified. Performance has also been significantly improved.
- Audio chiptunes support and mixing channels; added support for module audio music (.xm, .mod).
- Other additions include a 2D camera system, render textures (for offline render) and support for legacy OpenGL 2.1 on desktop platforms.

For a detailed list of changes, check [CHANGELOG](https://github.com/raysan5/raylib/blob/master/CHANGELOG).

raylib Windows Installer package includes the following:
- **Notepad++ 6.9.2**: Code editor preconfigured for raylib, including code compilation scripts.
- **MinGW (GCC 4.7.2)**: C Compiler including raylib libraries and dependencies.
- **raylib Useful Content**: Code examples, Game samples, Project templates, fonts, shaders, etc.

Just enjoy learning with raylib 1.5!
",13836499
207,False,False,2016-02-21T15:51:14Z,2016-02-21T16:14:28Z,"New raylib version 1.4! Main features:
- New set of Image manipulation functions to crop, resize, colorize, flip, dither and even draw image-to-image or text-to-image.
- Improved SpriteFonts system with support for AngelCode fonts (.fnt) and TrueType Fonts (using stb_truetype helper library).
- New physac physics module for basic 2D physics support.
- raymath module reviewed and converted to a header-only file for easier portability.
- gestures module redesigned and simplified, now it can process touch events from any source, including mouse.
- Raspberry Pi input system redesigned to better read raw inputs using generic Linux event handlers.
- Other important improvements: raycast system for 3D picking, two simple functions for persistent data storage and an easings module for values animation.
- **Up to 8 new code examples and +10 complete game samples including some classic games like Arkanoid, Asteroids, Missile Commander, Snake or Tetris.**

Lots of changes and improvements (view [CHANGELOG](https://github.com/raysan5/raylib/blob/master/CHANGELOG) for a detailed list of changes).

raylib Windows Installer package includes the following:
- **Notepad++ 6.8.8**: Code editor preconfigured for raylib, including code compilation scripts.
- **MinGW (GCC 4.7.2)**: C Compiler including raylib libraries and dependencies.
- **raylib Useful Content**: Code examples, Game Samples, Project Templates, fonts, shaders, etc.

Just enjoy learning with raylib!
",13836499
208,False,False,2015-09-02T23:49:58Z,2015-09-03T00:09:16Z,"Next big raylib release! Main features of this new release:

Shaders support: Apply shaders to your 3d models or enable postprocessing screen effects, use any of the postprocessing shaders collection included with this release or create your own (templates also included)

Textures formats support improved: Load any kind of file and any kind of internal color format, including compressed formats (DXT, ETC, ASTC, PVRT)!

New camera module: Ready to use camera; just enable your desired camera mode (FREE, ORBITAL, FIRST_PERSON, THIRD_PERSON).

New gestures module: Enable gestures detection on Android an HTML5!

raygui: A new IMGUI module intended for rapid-multisystem tools development. Still experimental but fully functional! 

Lots of changes and improvements (view [CHANGELOG](https://github.com/raysan5/raylib/blob/master/CHANGELOG) for a detailed list of changes).

raylib Windows Installer package includes the following tools:
- **Notepad++ 6.8.2**: Code editor preconfigured for raylib, including code compilation scripts.
- **MinGW (GCC 4.7.2)**: C Compiler including raylib libraries and dependencies.
- **raylib Useful Content**: Code examples, Game templates, rBMF fonts, Postpro shaders, etc.

Just enjoy learning with raylib!
",13836499
209,False,False,2015-01-04T17:05:50Z,2015-01-04T17:20:40Z,"Next big raylib release! Added support for multiple platforms! Now raylib C code can be compiled to Windows, Linux, OSX, RaspberryPi, Android and HTML5 (emscripten).

raylib v1.2.0 was published in September but this new v1.2.2 release corrects some bugs, improves support for multiple platforms and adds some new features (view [CHANGELOG](https://github.com/raysan5/raylib/blob/master/CHANGELOG) for a detailed list of changes).

raylib Windows Installer package includes the following tools:
- **Notepad++ 6.7.2**: Code editor preconfigured for raylib, including code compilation scripts.
- **MinGW (GCC 4.7.2)**: C Compiler including raylib libraries and dependencies.
- **raylib Useful Content**: Code examples, Game templates, rBMF fonts, etc.

Just enjoy learning with raylib!
",13836499
210,False,False,2014-07-25T08:50:51Z,2014-08-02T12:45:50Z,"Complete internal redesign of the library to support OpenGL 3.3+ and OpenGL ES 2.0.

New big module [rlgl](https://github.com/raysan5/raylib/blob/master/src/rlgl.h) has been added to 'translate' immediate mode style functions (i.e. rlBegin(), rlVertex3f()) to GL 1.1, 3.3+ or ES2. Another new module [raymath](https://github.com/raysan5/raylib/blob/master/src/raymath.h) has also been added with lot of useful 3D math vector-matrix-quaternion functions.

raylib v1.1.0 was published in April but this new v1.1.1 release implements multiple bugs corrections  and some new features (view [CHANGELOG](https://github.com/raysan5/raylib/blob/master/CHANGELOG) for a detailed list of changes).

One complete game has been included for reference: [Dr. Turtle and Mr. Gamera](https://github.com/raysan5/raylib/tree/master/games/drturtle).
",13836499
211,False,False,2014-03-16T19:59:02Z,2014-03-16T20:02:43Z,"New raylib release! Some bugs fixed and multiple functions added (or reviewed).

This will probably be the last release before the upcoming raylib v1.1 (that will be amazing :P).

Check CHANGELOG to see how this version has evolved with bug fixes and new functions.
",13836499
212,False,False,2014-01-23T11:36:18Z,2014-03-16T18:06:34Z,"This version has been used to teach videogames programming to my students during the course 2013-2014. Some games developed with this version can be seen on [raylib facebook page.](https://www.facebook.com/raylibgames)

Along the course, raylib has been reviewed several times (since v1.0.0) to produce v1.0.4, check CHANGELOG to see how this version has evolved with bug fixes and new functions.

Enjoy! :)
",13836499
213,False,False,2018-08-27T17:32:35Z,2018-08-27T18:20:56Z,"## A special release for legacy systems

This is a special release only for Windows for legacy systems such as Windows XP and Vista. This release includes Chromium 49.0.2623.110 which is the latest Chromium version that supports WinXP/Vista.


## Installation

You can install [pypi/cefpython3](https://pypi.python.org/pypi/cefpython3) package using pip tool. You can also download packages for offline installation available on this GitHub Release page. Command to install with pip:

```
pip --no-cache-dir install cefpython3==49.0
```

Please note that if you were previously installing cefpython3 package it is required to use the `--no-cache-dir` flag, otherwise pip will end up with error message `No matching distribution found for cefpython3==49.0`. This happens because 49.0 release occured after 57.0 and 66.0 releases.


## Support matrix

OS | Py2 | Py3 | 32bit | 64bit | Requirements
--- | --- | --- | --- | --- | ---
Windows | 2.7 | 3.4 | Yes | Yes | Windows XP+


## Thanks to the sponsor

Thanks to Fivestars Loyalty, Inc. for sponsoring this release. Please visit its website: https://www.fivestars.com/ .

[![fivestars360](https://raw.githubusercontent.com/wiki/cztomczak/cefpython/images/fivestars360.png)](https://www.fivestars.com/)


## Changes and notes for this release

- Update to Chromium 49.0.2623.110 (#460)
- Support for Windows XP SP3 or later (Vista, 7, 8, 10). Chromium requires at least SP3 on WinXP.
- Support for Python 2.7 and 3.4. Python 3.4 is the last version of Python that supports Windows XP.
- There were multiple changes in upstream CEF that are backward incompatible and thus require modifications in your app code. See the [Migration Guide](https://github.com/cztomczak/cefpython/blob/cefpython49-winxp/docs/Migration-guide.md) document for details.
- Documentation is available in the [docs/](https://github.com/cztomczak/cefpython/tree/cefpython49-winxp/docs) directory in the `cefpython49-winxp` branch
- API reference is available in the [api/](https://github.com/cztomczak/cefpython/tree/cefpython49-winxp/api) directory in the `cefpython49-winxp` branch
- Examples that were tested and do work fine: `hello_world.py`, `gtk2.py`, `qt.py pyqt4`, `qt.py pyside`, `tutorial.py`, `screenshot.py`, `tkinter_.py` and `wxpython.py` (all except `gtk3.py` which wasn't tested)
- Add snippets in the [examples/snippets/](https://github.com/cztomczak/cefpython/tree/cefpython49-winxp/examples/snippets) directory
- Update `screenshot.py` example to pass switches to disable GPU acceleration which is not supported in OSR mode and can cause issues if enabled. Also pass additional Chromium switches to enhance performance. (#463)
- Do not call `WindowUtils`.[OnSize](https://github.com/cztomczak/cefpython/blob/cefpython49-winxp/api/WindowUtils.md#onsize-win) function which can sometimes cause app hanging during window resize event. Call instead the new `WindowUtils`.[UpdateBrowserSize](https://github.com/cztomczak/cefpython/blob/cefpython49-winxp/api/WindowUtils.md#updatebrowsersize-win) function. Except when you use the `pywin32.py` example, in such case `WindowUtils.OnSize` must be called. (#463)
- Known issue: `qt.py pyqt4` and `gtk2.py` examples can sometimes hang app during window resize (rare, but happens from time to time)
- Update unit tests and add OSR unit test
- The `cefpython57` branch was used as a base for the `cefpython49-winxp` branch and thus it comes with all the new build tools, fixes and new examples
- Upstream CEF prebuilt binaries for this release are available in release tagged [v49-upstream](https://github.com/cztomczak/cefpython/releases/tag/v49-upstream).

## Known issues

- Enter key doesn't work in Developer Tools window in the `wxpython.py` example. Enter key works fine when running the `hello_world.py` example, so this is only an issue with wxPython. To resolve it create either a `devtools.py` script or use remote debugging and open DevTools in a Google Chrome browser. The `devtools.py` script is basically a `hello_world.py` example with one change to url, set it to `http://127.0.0.1:1234/`. In your wxpython app set `ApplicationSettings.remote_debugging_port` to `1234` and open DevTools popup by executing `subprocess.Popen([sys.executable, ""devtools.py""])`. The ""Developer Tools"" from mouse context menu won't work, however you can implement a custom context menu in javascript.",41542522
214,False,False,2018-08-26T21:18:11Z,2018-08-27T17:02:40Z,"With these upstream CEF prebuilt binaries and libraries you can build CEF Python from sources in less than 10 minutes. See the [Build instructions](https://github.com/cztomczak/cefpython/blob/cefpython49-winxp/docs/Build-instructions.md) document for details.

Prebult binaries and libraries were created according to build instructions with the [automate.py](https://github.com/cztomczak/cefpython/blob/cefpython49-winxp/tools/automate.py) script by running the `automate.py --prebuilt-cef` command.

Notes:
- The `cefclient` and `cefsimple` sample applications require Vista or later. It should be possible to build these to support XP as well, but it would require modifications to CEF's cmake/ninja configuration in the `cef_binary` archives. If there are still issues on XP then see upstream [Issue #1787](https://bitbucket.org/chromiumembedded/cef/issues/1787/2526-branch-crash-on-windows-xp).
- The `cef_binary` archives contain only Release mode binaries
- CEF binaries for v49 (branch 2623) are not available anymore in upstream CEF (neither cefbuilds nor Spotify), as this is an old unsuported branch",41542522
215,False,False,2018-08-20T17:51:17Z,2018-08-20T18:17:05Z,"## Installation

You can install [pypi/cefpython3](https://pypi.org/project/cefpython3/) package using pip tool. On Linux pip 8.1+ is required. You can also download packages for offline installation that are attached to this GitHub release. Command to install with pip: 

```
pip install cefpython3==66.0
```

## Support matrix

OS | Py2 | Py3 | 32bit | 64bit | Requirements
--- | --- | --- | --- | --- | ---
Windows | 2.7 | 3.4 / 3.5 / 3.6 / 3.7 | Yes | Yes | Windows 7+
Linux | 2.7 | 3.4 / 3.5 / 3.6 / 3.7 | Yes | Yes | Debian 8+, Ubuntu 14.04+,<br> Fedora 24+, openSUSE 13.3+
Mac | 2.7 | 3.4 / 3.5 / 3.6 / 3.7 | No | Yes | MacOS 10.9+


## Thanks to the sponsor

Many thanks to Lampix for sponsoring this release. Lampix is the first hardware and software solution that turns any surface into a smart, augmented reality or interactive surface. Please visit its website here: https://lampix.com/

[![lampix360](https://raw.githubusercontent.com/wiki/cztomczak/cefpython/images/lampix360.png)](https://lampix.com/)


## Changes and notes for this release

- Update to CEF/Chromium 66.0.3359.181. (#403) See also the ""Notable changes in upstream CEF"" section further down on this release page.
- Support for Python 3.7 (#433)
- Debian 7 and Ubuntu 12/13 are no more supported due to upstream Chromium/CEF no more supporting these  (#401)
- Add Fedora 24+ and openSUSE 13.3+ to officially supported OSes (#466)
- Bundle MSVCP dependencies on Windows [msvcp140.dll, msvcp100.dll, msvcp90.dll]. Previously these were not included and it was required for Visual C++ redistributables to be already installed on a system. (#359)
- Add easy to understand code snippets in the ""examples/snippets/"" directory. These snippets show how to use various CEF features:
   - [javascript_bindings.py](https://github.com/cztomczak/cefpython/blob/master/examples/snippets/javascript_bindings.py) - Communicate between Python and Javascript asynchronously using inter-process messaging with the use of Javascript Bindings.
   - [javascript_errors.py](https://github.com/cztomczak/cefpython/blob/master/examples/snippets/javascript_errors.py) - Two ways for intercepting Javascript errors.
   - [mouse_clicks.py](https://github.com/cztomczak/cefpython/blob/master/examples/snippets/mouse_clicks.py) - Perform mouse clicks and mouse movements programmatically.
   - [network_cookies.py](https://github.com/cztomczak/cefpython/blob/master/examples/snippets/network_cookies.py) - Implement interfaces to block or allow cookies over network requests.
   - [onbeforeclose.py](https://github.com/cztomczak/cefpython/blob/master/examples/snippets/onbeforeclose.py) - Implement interface to execute custom code before browser window closes.
   - [ondomready.py](https://github.com/cztomczak/cefpython/blob/master/examples/snippets/ondomready.py) - Execute custom Python code on a web page as soon as DOM is ready.
   - [onpagecomplete.py](https://github.com/cztomczak/cefpython/blob/master/examples/snippets/onpagecomplete.py) - Execute custom Python code on a web page when page loading is complete.
- There were multiple changes in upstream CEF that are backward incompatible and thus require modifications to your code. See the [Migration Guide](https://github.com/cztomczak/cefpython/blob/master/docs/Migration-guide.md) document or see the ""Breaking changes.."" section further down on this release page.
- A known issue: qt.py PyQt4 and PySide examples crash during browser creation on Linux. This is an upstream CEF issue and needs to be resolved in upstream first. (#452) PyQt5 example works fine on Linux.
- A known issue: tkinter.py example hangs on exit and during window resize with Tk 8.5 on Windows (#441)
- A known issue: ""blob_storage/"" and ""webrtc_event_logs/"" directories are created in current working directory when using in-memory cache (#432)
- Add accessibility support. See `Browser`.[SetAccessibilityState](https://github.com/cztomczak/cefpython/blob/master/api/Browser.md#setaccessibilitystate) for both windowed and OSR browsers. See [AccessibilityHandler](https://github.com/cztomczak/cefpython/blob/master/api/AccessibilityHandler.md) for OSR browsers. (#449)
- Add `DisplayHandler`.[OnLoadingProgressChange](https://github.com/cztomczak/cefpython/blob/master/api/DisplayHandler.md#onloadingprogresschange)
- Support for loading certificate revocation lists. See `cefpython`.[LoadCrlSetsFile](https://github.com/cztomczak/cefpython/blob/master/api/cefpython.md#loadcrlsetsfile) for loading the existing ""Certificate Revocation Lists"" file that is managed by Google Chrome
- Add `RequestHandler`.[CanGetCookies](https://github.com/cztomczak/cefpython/blob/master/api/RequestHandler.md#cangetcookies) and [CanSetCookie](https://github.com/cztomczak/cefpython/blob/master/api/RequestHandler.md#cansetcookie) to allow or block cookies over network requests
- Add `Browser`.[GetImage](https://github.com/cztomczak/cefpython/blob/master/api/Browser.md#getimage) method to get browser visible contents as image. Available only on Linux. (#427)
- Add `Browser`.[Invalidate](https://github.com/cztomczak/cefpython/blob/master/api/Browser.md#invalidate) to force frame to be painted in OSR mode
- Add `CookieManager`.[GetBlockingManager](https://github.com/cztomczak/cefpython/blob/master/api/CookieManager.md#getblockingmanager)
- Add `CookieManager`.[FlushStore](https://github.com/cztomczak/cefpython/blob/master/api/CookieManager.md#flushstore) to flush cookies to disk manually
- Add `BrowserSettings`.[inherit_client_handlers_for_popups](https://github.com/cztomczak/cefpython/blob/master/api/BrowserSettings.md#inherit_client_handlers_for_popups) option. This is enabled by default and makes client handlers/callbacks to be inherited by popup browsers created implicitilly e.g. via ""window.open"" in js
- Handle more keyboard shortcuts on Mac and fix double Paste bug (#161)
- Fix cookies not flushed to disk when closing app immediately (#365)
- Fix High DPI support on Windows. Support High DPI in the wxpython.py example (#399)
- Add `DpiAware`.[Scale](https://github.com/cztomczak/cefpython/blob/master/api/DpiAware.md#scale) which is reliable with any DPI settings.  The `DpiAware.CalculateWindowSize` method is deprecated. Fix `DpiAware.GetSystemDpi`. (#398)
- Add [DragData](https://github.com/cztomczak/cefpython/blob/master/api/DragData.md) Image APIs on Windows and Mac (Linux was already supported): `GetImage`, `GetImageHotspot`, `HasImage` (#251)
- Fix crashes on websites with multiple frames when closing app during loading (#431)
- Fix two crashes when closing app immediately during initial loading (#454, #455)
- Fix `Request.SetPostData` and `GetPostData` not working. All strings are expected to be byte strings. (#228)
- Fix window glitchiness during initial loading on Mac by setting `setWantsLayer:YES` in the wxpython.py example (#371)
- Fix process sometimes hanging when exiting app in the qt.py PySide example (#360)
- Fix exception message sometimes not printed on Mac, an issue with `cef.ExceptHook` (#382)
- Fix crash when closing print dialog on Linux (#435)
- Fix creation of ""GPUCache/"" directory when using in-memory cache (#419)
- Add `RenderHandler`.[OnTextSelectionChanged](https://github.com/cztomczak/cefpython/blob/master/api/RenderHandler.md#ontextselectionchanged)
- Add `Browser`.[SetAutoResizeEnabled](https://github.com/cztomczak/cefpython/blob/master/api/Browser.md#setautoresizeenabled)
- Add `DisplayHandler`.[OnAutoResize](https://github.com/cztomczak/cefpython/blob/master/api/DisplayHandler.md#onautoresize)
- Support linking to GTK 3 when building CEF from sources and when building cefpython module. Patch is available in comments in Issue #446.
- Add `--enable-profiling` and `--enable-linetracing` flags to `build.py` tool to allow for profiling cefpython code with cProfile module (#424)
- Add `--no-depot-tools` update flag to `automate.py` to allow of building old unsupported versions of Chromium. Update build instructions, see for more details. (#428)
- Add `Browser`.[GetSetting](https://github.com/cztomczak/cefpython/blob/master/api/Browser.md#getsetting)
- Add `Browser`.[HasDevTools](https://github.com/cztomczak/cefpython/blob/master/api/Browser.md#hasdevtools)
- Add `cefpython`.[SetGlobalClientHandler](https://github.com/cztomczak/cefpython/blob/master/api/cefpython.md#setglobalclienthandler)
- Add `cefpython`.[GetBrowserByIdentifier](https://github.com/cztomczak/cefpython/blob/master/api/cefpython.md#getbrowserbyidentifier)
- Add `cefpython`.[GetDataUrl](https://github.com/cztomczak/cefpython/blob/master/api/cefpython.md#getdataurl)
- Linux patch that fixed HTTPS cache problems on pages with certificate errors was disabled, see [here](https://github.com/cztomczak/cefpython/blob/master/docs/Migration-guide.md#v66-linux-patch-that-fixed-https-cache-problems-on-pages-with-certificate-errors-was-disabled)
- Add unit tests for off-screen rendering mode, see [osr_test.py](https://github.com/cztomczak/cefpython/blob/master/unittests/osr_test.py) (#59)
- See [Milestone v66](https://github.com/cztomczak/cefpython/milestone/13) for all issues related with this release
- Upstream CEF prebuilt binaries for this release are available in release tagged [v66-upstream](https://github.com/cztomczak/cefpython/releases/tag/v66-upstream).


## Breaking changes that are described in details in Migration Guide document

- Changes to Mac apps that integrate into existing message loop (Qt, wxPython), see [here](https://github.com/cztomczak/cefpython/blob/master/docs/Migration-guide.md#v66-changes-to-mac-apps-that-integrate-into-existing-message-loop-qt-wxpython)
- `RequestHandler.OnBeforeBrowse` has a new param 'user_gesture', see [here](https://github.com/cztomczak/cefpython/blob/master/docs/Migration-guide.md#v66-requesthandleronbeforebrowse-has-a-new-param-user_gesture)
- `LifespanHandler.OnBeforePopup` is now called on UI thread, see [here](https://github.com/cztomczak/cefpython/blob/master/docs/Migration-guide.md#v66-lifespanhandleronbeforepopup-is-now-called-on-ui-thread)
- `DisplayHandler.OnConsoleMessage` has a new param 'level', see [here](https://github.com/cztomczak/cefpython/blob/master/docs/Migration-guide.md#v66-displayhandleronconsolemessage-has-a-new-param-level)
- `RequestHandler.GetCookieManager` not getting called in some cases, see [here](https://github.com/cztomczak/cefpython/blob/master/docs/Migration-guide.md#v66-requesthandlergetcookiemanager-not-getting-called-in-some-cases)
- `cef.Request.Flags` changed, `AllowCachedCredentials` was removed and others were added, see [here](https://github.com/cztomczak/cefpython/blob/master/docs/Migration-guide.md#v66-cefrequestflags-changed)
- Window transparency changes, see [here](https://github.com/cztomczak/cefpython/blob/master/docs/Migration-guide.md#v66-window-transparency-changes)
- Threads removed: `TID_DB`, `TID_PROCESS_LAUNCHER`, `TID_CACHE`, see [here](https://github.com/cztomczak/cefpython/blob/master/docs/Migration-guide.md#v66-threads-removed-tid_db-tid_process_launcher-tid_cache)
- `BrowserSettings.javascript_open_windows_disallowed` option was removed, see [here](https://github.com/cztomczak/cefpython/blob/master/docs/Migration-guide.md#v66-browsersettingsjavascript_open_windows_disallowed-option-was-removed)


## Notable changes in upstream CEF
- Windows: Add per monitor DPI support (upstream [#2313](https://bitbucket.org/chromiumembedded/cef/issues/2313/windows-add-per-monitor-dpi-support))
- Add support for WebRTC screen sharing (upstream [#1065](https://bitbucket.org/chromiumembedded/cef/issues/1065/add-support-for-webrtc-based-screen))
- Fix IndexedDB quota (upstream [#2070](https://bitbucket.org/chromiumembedded/cef/issues/2070/3029-indexeddb-doesnt-work))
- OSR: Fix GPU->CPU readback performance issues (upstream [#2046](https://bitbucket.org/chromiumembedded/cef/issues/2046/improve-gpu-readback-performance-for-osr))
- Enable Brotli encoding (upstream [#2303](https://bitbucket.org/chromiumembedded/cef/issues/2303/support-brotli-as-a-content-encoding))
- Support for SwiftShader, a high-performance CPU-based implementation of the OpenGL ES and Direct3D 9 graphics APIs
- Remove geolocation API support (upstream [#2380](https://bitbucket.org/chromiumembedded/cef/issues/2380/geolocation-can-not-work-after-branch-3239))
- Add support for component=shared_library builds (upstream [#1617](https://bitbucket.org/chromiumembedded/cef/issues/1617/add-support-for-component-shared_library))
- Add support for automate-git.py --fast-update (upstream [#2435](https://bitbucket.org/chromiumembedded/cef/issues/2435/support-more-frequent-chromium-master))
- Support for Chrome Extensions with partial API support (not yet exposed to cefpython, see #457)
- Add CefServer API for handling HTTP/WebSocket requests (not yet exposed to cefpython, see #445)
- Add support for V8 ArrayBuffers (not yet exposed to cefpython, see #450)",41542522
216,False,False,2018-05-25T12:59:24Z,2018-05-25T13:14:08Z,"This release will be updated with new binaries with time.

`Master` branch is currently `v66`. There is no `cefpython66` branch at the moment.

With these upstream CEF prebuilt binaries and libraries you can build CEF Python from sources in less than 10 minutes. See the [Build instructions](https://github.com/cztomczak/cefpython/blob/master/docs/Build-instructions.md) document for details.

Built according to build instructions with the [automate.py](https://github.com/cztomczak/cefpython/blob/master/tools/automate.py) script. On Windows and Mac binaries from [Spotify Automated Builds](http://opensource.spotify.com/cefbuilds/index.html) (""Standard distribution"") were used and then ran `automate.py --prebuilt-cef`. On Linux CEF was build from sources by running `automate.py --build-cef`.

LINUX NOTE: Linux binaries were built on Ubuntu 14.04 64-bit. These binaries contain libcef.so with minimal symbols so that you can debug CEF with gdb and get a meaningful stack trace. Currently cefpython v54-v66 and later distribution packages on PyPI and on GH releases ship a stripped version of libcef.so with no symbols at all (Issue #262). Download archive from this release and switch libcef.so in your already installed package to allow for debugging CEF.

CEF Python 66.0:
- cef66_3.3359.1774.gd49d25f_win32.zip (Windows 32-bit)
- cef66_3.3359.1774.gd49d25f_win64.zip (Windows 64-bit)
- cef66_3.3359.1774.gd49d25f_linux32.zip (Linux 32-bit)
- cef66_3.3359.1774.gd49d25f_linux64.zip (Linux 64-bit)
- cef66_3.3359.1774.gd49d25f_mac64.zip (Mac 64-bit)
",41542522
217,False,False,2017-09-22T11:26:20Z,2017-09-22T11:45:42Z,"This release fixes some issues on Windows, including High DPI support. Version v57.1 is released only for Windows. See also v57.0 release which is available for all platforms.

**Installation**

You can install [pypi/cefpython3](https://pypi.python.org/pypi/cefpython3) package using pip tool. Command to install with pip: 

```
pip install cefpython3==57.1
```

If you get an error when importing the cefpython3 package on Windows then see this section in the Knowledge Base document: [ImportError: DLL load failed (Windows)](https://github.com/cztomczak/cefpython/blob/master/docs/Knowledge-Base.md#importerror-dll-load-failed-windows).

**Support matrix**

OS | Py2 | Py3 | 32bit | 64bit | Requirements
--- | --- | --- | --- | --- | ---
Windows | 2.7 | 3.4 / 3.5 / 3.6 | Yes | Yes | Windows 7+

**Changes and notes for this release**
- Fix High DPI support on Windows (Issue #358). See changes in [Migration Guide](https://github.com/cztomczak/cefpython/blob/master/docs/Migration-guide.md#v571-high-dpi-support-on-windows) document.
- Add new setting ApplicationSettings.[app_user_model_id](https://github.com/cztomczak/cefpython/blob/master/api/ApplicationSettings.md#app_user_model_id) (Issue #395). This option is to resolve Windows 10 taskbar pinning issues.
- Add [PyInstaller example](https://github.com/cztomczak/cefpython/blob/master/examples/pyinstaller/README-pyinstaller.md) (Issue #135)
- Create [screenshot.py](https://github.com/cztomczak/cefpython/blob/master/examples/screenshot.py) example (Issue #287)
- Add cef.[PostDelayedTask](https://github.com/cztomczak/cefpython/blob/master/api/cefpython.md#postdelayedtask) function (Issue #61)",41542522
218,False,False,2017-04-21T13:50:17Z,2017-04-21T13:47:19Z,"**Installation**

You can install [pypi/cefpython3](https://pypi.python.org/pypi/cefpython3) package using pip tool. On Linux pip 8.1+ is required. You can also download packages for offline installation that are attached to this GitHub release. Command to install with pip: 

```
pip install cefpython3==57.0
```

If you get an error when importing the cefpython3 package on Windows then see this section in the Knowledge Base document: [ImportError: DLL load failed (Windows)](https://github.com/cztomczak/cefpython/blob/master/docs/Knowledge-Base.md#importerror-dll-load-failed-windows).

**Support matrix**

OS | Py2 | Py3 | 32bit | 64bit | Requirements
--- | --- | --- | --- | --- | ---
Windows | 2.7 | 3.4 / 3.5 / 3.6 | Yes | Yes | Windows 7+
Linux | 2.7 | 3.4 / 3.5 / 3.6 | Yes | Yes | Debian 7+ / Ubuntu 12.04+
Mac | 2.7 | 3.4 / 3.5 / 3.6 | No | Yes | MacOS 10.9+


**Changes and notes for this release**

- Update to Chromium 57.0.2987.133 (#341)
- Support for PyQt5 in the [qt.py](https://github.com/cztomczak/cefpython/blob/master/examples/qt.py) example (#325)
- GTK 3 example [gtk3.py](https://github.com/cztomczak/cefpython/blob/master/examples/gtk3.py) is now back working fine with this release (#261)
- See [Milestone v57](https://github.com/cztomczak/cefpython/milestone/9) for all issues related with this release
- Upstream CEF prebuilt binaries for this release are available in release tagged [v57-upstream](https://github.com/cztomczak/cefpython/releases/tag/v57-upstream)

**Notable changes in upstream CEF:**

- Fix print to PDF - upstream [#2129](https://bitbucket.org/chromiumembedded/cef/issues/2129/print-to-pdf-broken-in-all-versions-using)
- Add PDF print scale factor setting - upstream [#2106](https://bitbucket.org/chromiumembedded/cef/issues/2106/please-add-scaling-to-pdf-printing)
- Fix DevTools inspect element at - upstream [#2115](https://bitbucket.org/chromiumembedded/cef/issues/2115/devtools-ignoring-inspected-point-if)
- Fix opening of popups from sandboxed iframes - upstream [#2121](https://bitbucket.org/chromiumembedded/cef/issues/2121/popup-windows-from-iframes-that-are)
- Fix crash when navigating back to file url - upstream [#2125](https://bitbucket.org/chromiumembedded/cef/issues/2125/check-failure-in-cefbrowserhostimpl)
- Don't call OnLoadEnd for same page navigations - usptream [#1852](https://bitbucket.org/chromiumembedded/cef/issues/1852/onloadend-not-called-when-loading-page)
- Persist DevTools preferences with CefSettings.persist_user_preferences - upstream [#2077](https://bitbucket.org/chromiumembedded/cef/issues/2077/devtools-not-remembering-settings)
- Fix crash on shutdown with multi_threaded_message_loop and extensions enabled on Windows - upstream [#1680](https://bitbucket.org/chromiumembedded/cef/issues/1680/windows-2454-crash-on-shutdown-with-multi)
- Fix OSR popup transparency - upstream [#2099](https://bitbucket.org/chromiumembedded/cef/issues/2099/after-pull-commit-implify-osr-guest-view)",41542522
219,False,False,2017-04-20T20:16:10Z,2017-04-20T20:34:27Z,"With these upstream CEF prebuilt binaries and libraries you can build CEF Python from sources in less than 10 minutes. See the [Build instructions](https://github.com/cztomczak/cefpython/blob/master/docs/Build-instructions.md) document for details.

Built according to build instructions with the [automate.py](https://github.com/cztomczak/cefpython/blob/master/tools/automate.py) script. On Windows and Mac binaries from [Spotify Automated Builds](http://opensource.spotify.com/cefbuilds/index.html) (""Standard distribution"") were used and then ran `automate.py --prebuilt-cef`. On Linux CEF was build from sources by running `automate.py --build-cef`.

LINUX NOTE: Linux binaries were built on Ubuntu 14.04 64-bit. These binaries contain libcef.so with minimal symbols so that you can debug CEF with gdb and get a meaningful stack trace. Currently cefpython v54 and later distribution packages on PyPI and on GH releases ship a stripped version of libcef.so with no symbols at all (Issue #262). Download archive from this release and switch libcef.so in your already installed package to allow for debugging CEF.

This release will be updated with new binaries with time.

CEF Python 57.0:
- cef57_3.2987.1601.gf035232_linux64.zip (Linux 64-bit)
- cef57_3.2987.1601.gf035232_linux32.zip (Linux 32-bit)
- cef57_3.2987.1601.gf035232_mac64.zip (Mac 64-bit)
- cef57_3.2987.1601.gf035232_win32.zip (Windows 32-bit)
- cef57_3.2987.1601.gf035232_win64.zip (Windows 64-bit)",41542522
220,False,False,2017-04-19T17:12:45Z,2017-04-19T19:16:33Z,"**Installation**

You can install with pip. On Linux pip 8.1+ is required. You can also download packages for offline installation that are attached to this GitHub release. 

```
pip install cefpython3==56.2
```

**Support matrix**

OS | Py2 | Py3 | 32bit | 64bit | Requirements
--- | --- | --- | --- | --- | ---
Windows | 2.7 | 3.4 / 3.5 / 3.6 | Yes | Yes | Windows 7+
Linux | 2.7 | 3.4 / 3.5 / 3.6 | Yes | Yes | Debian 7+ / Ubuntu 12.04+
Mac | 2.7 | 3.4 / 3.5 / 3.6 | No | Yes | MacOS 10.9+


**Changes and notes for this Release**

- Complete [Tutorial](https://github.com/cztomczak/cefpython/blob/master/docs/Tutorial.md) doc (#256)
- Complete [Migration guide](https://github.com/cztomczak/cefpython/blob/master/docs/Migration-guide.md) doc (#293)
- Support wxPython 4.0 in the [wxpython.py](https://github.com/cztomczak/cefpython/blob/master/examples/wxpython.py) example (#348, #349, #350)
- Support wxPython 3.0 in the [wxpython.py](https://github.com/cztomczak/cefpython/blob/master/examples/wxpython.py) example on Linux (all platforms now supported) (#349)
- Fix false positives by Anti-virus software on Windows (#342)
- Support setting window title in hello_world.py example (#339)
- Do not call client handlers nor javascript bindings in DevTools windows (#344)
- Fix page printing in hello_world.py and tkinter_.py examples on Linux (#340)
- Fix race condition in gtk2.py example (#347)
- Fix: ApplicationSettings.debug option causing GUI stuttering on Windows 10 when calling Python functions from JS (#277)
- Fix logging of command line string for child processes (#351)
- See [Milestone v56](https://github.com/cztomczak/cefpython/milestone/6) for all issues related with this release
- Upstream CEF prebuilt binaries for this release are available in release tagged [v56-upstream](https://github.com/cztomczak/cefpython/releases/tag/v56-upstream)",41542522
221,False,False,2017-03-18T12:20:44Z,2017-03-20T13:21:05Z,"**Installation**

You can install with pip. On Linux pip 8.1+ is required. You can also download packages for offline installation that are attached to this GitHub release. 

```
pip install cefpython3==56.1
```

**Support matrix**

OS | Py2 | Py3 | 32bit | 64bit | Requirements
--- | --- | --- | --- | --- | ---
Windows | 2.7 | 3.4 / 3.5 / 3.6 | Yes | Yes | Windows 7+
Linux | 2.7 | 3.4 / 3.5 / 3.6 | Yes | Yes | Debian 7+ / Ubuntu 12.04+
Mac | 2.7 | 3.4 / 3.5 / 3.6 | No | Yes | MacOS 10.9+


**Changes and notes for this Release**

- Many thanks to [ClearChat Inc.](https://clearchat.com/) for sponsoring v55/v56 releases for all platforms
- Initial unified release for all platforms / pythons / architectures (#335)
- Chromium version 56.0.2924.76 (#276)
- Python 3 support (#121)
- 64-bit support on Windows (#316)
- 32-bit support on Linux (#327)
- Provide default implementation for js and file dialogs on Linux (#241)
- Fix 'BadWindow' x11 errors in wxpython.py example (#334)
- Fix segmentation fault during release of shared request context (#333)
- Fix Browser references living forever which could cause issues when exiting app (#330)
- See [Milestone v56](https://github.com/cztomczak/cefpython/milestone/6) for all issues related with this release
- Upstream CEF prebuilt binaries for this release are available in release tagged [v56-upstream](https://github.com/cztomczak/cefpython/releases/tag/v56-upstream)",41542522
222,False,False,2017-03-11T15:56:24Z,2017-03-11T16:21:59Z,"Many thanks to [ClearChat Inc.](https://clearchat.com/) for sponsoring this release.

This release was removed from PyPI due to cleanup in pip releases (#329). You can install it using files attached to this GitHub release.

**Changes and notes for this Release**:
- Update to Chromium 56.0.2924.76 (#276)
- Python 3.4 / 3.5 / 3.6 support (#121)
- Windows 64-bit support (#216)
- Fix: DevTools window doesn't show on Windows (#303)
- 60 MB file size limit on PyPI (#321)
- Upstream CEF prebuilt binaries for this release are available in release tagged [v56-upstream](https://github.com/cztomczak/cefpython/releases/tag/v56-upstream)
- Only notable changes are listed here, see [milestone v56](https://github.com/cztomczak/cefpython/milestone/6) for all issues related with this release",41542522
223,False,False,2017-03-03T21:07:00Z,2017-03-03T21:15:52Z,"With these upstream CEF prebuilt binaries and libraries you can build CEF Python from sources in less than 10 minutes. See the [Build instructions](https://github.com/cztomczak/cefpython/blob/master/docs/Build-instructions.md) document for details.

Built according to build instructions with the [automate.py](https://github.com/cztomczak/cefpython/blob/master/tools/automate.py) script. On Windows and Mac binaries from [Spotify Automated Builds](http://opensource.spotify.com/cefbuilds/index.html) (""Standard distribution"") were used and then ran `automate.py --prebuilt-cef`. On Linux CEF was build from sources by running `automate.py --build-cef`.

LINUX NOTE: Linux binaries were built on Ubuntu 14.04 64-bit. These binaries contain libcef.so with minimal symbols so that you can debug CEF with gdb and get a meaningful stack trace. Currently cefpython v54 and later distribution packages on PyPI and on GH releases ship a stripped version of libcef.so with no symbols at all (Issue #262). Download archive from this release and switch libcef.so in your already installed package to allow for debugging CEF.

CEF Python 56.0 / 56.1 / 56.2:
- cef56_3.2924.1575.g97389a9_win32.zip (Windows 32-bit)
- cef56_3.2924.1575.g97389a9_win64.zip (Windows 64-bit)
- cef56_3.2924.1575.g97389a9_linux32.zip (Linux 32-bit)
- cef56_3.2924.1575.g97389a9_linux64.tar.gz (Linux 64-bit)
- cef56_3.2924.1575.g97389a9_mac64.zip (Mac 64-bit)",41542522
224,False,False,2017-03-03T21:07:00Z,2017-03-03T21:30:14Z,"Many thanks to [ClearChat Inc.](https://clearchat.com/) for sponsoring this release.

This release was removed from PyPI due to cleanup in pip releases (#329). You can install it using files attached to this GitHub release.

**Changes and notes for this Release**:
- Initial Mac release for v50+ series (#295)
- Requirements: MacOS 10.9+ (#295)
- Examples that are working good: wxpython.py, gtk2.py, hello_world.py. Examples with some issues: qt4.py (#311). Examples that crash: gtk3.py (#310), tkinter_.py (#309). Read top notes in source code to see more details on the issues in these examples.
- Update to Chrome 56.0.2924.76 (#276)
- Built using ready binaries from Spotify Automated Builds (#270, #300)
- Mac 32-bit is no longer supported (#193)
- Handle copy/paste commands by default on Mac (#161)
- Fix issue with app exiting with error code 255 (#162)
- Fix error: failed to execvp: subprocess EH.app (#242)
- Comes \*without\* the patch that fixes HTTPS cache problems on pages with certificate errors (#125)
- See the [v56 milestone](https://github.com/cztomczak/cefpython/milestone/6) and its Open/Closed issues for more details on all the issues related with this release",41542522
225,False,False,2017-02-21T14:21:55Z,2017-02-21T15:35:00Z,"Many thanks to [ClearChat Inc.](https://clearchat.com/) for sponsoring this release.

This release was removed from PyPI due to cleanup in pip releases (#329). You can install it using files attached to this GitHub release.

**Changes in this Release**:
- Initial Windows release of latest v55+ (#294)
- See changelogs for all the previous Linux releases on GitHub to see all changes that were made since the last v31.2 Windows release. See also the Migration Guide and Tutorial documents (still under works) in the docs/ folder.
- Only Python 2.7 32-bit is currently supported. To support Python 3 it will be required to update build tools/ and .vcproj files.
- New cross-platform tools created that will facilitate building and testing cefpython in the future: build.py, build_module.py, make_installer.py, run_examples.py (#299, #210)
- If you want to build it yourself on Windows then read module doc comments in build.py and in automate.py tools
- DragData methods become Linux-only: GetImage(), HasImage(). This functionality will be available on all platforms when patch is merged into upstream (#251).

**Notes on examples**:
- Examples provided with this release: hello_world.py, gtk2.py, gtk3.py, tkinter_.py, qt.py (pyqt, pyside) and wxpython.py
",41542522
226,False,False,2017-02-12T08:08:01Z,2017-02-12T17:53:32Z,"Many thanks to [ClearChat Inc.](https://clearchat.com/) for sponsoring this release.

This release was removed from PyPI due to cleanup in pip releases (#329). You can install it using files attached to this GitHub release.

This release includes changes that break backward compatibility, see those marked with ""BC break!"" at the end.

**Changes in this Release**:
- Update to Chromium 55.0.2883.87 (stable channel) and CEF 3.2883.1554.gf984155 (#297)
- Create wxpython.py example (#269)
- Fix: no context menu on selected text when context_menu > navigation option is set to False (#222)
- Expose spell checking API in the Browser object: AddWordToDictionary, ReplaceMisspelling (#274). To configure spell checking use the command line switches described in Issue #274 (--disable-spell-checking, --enable-spelling-auto-correct, --enable-spelling-service, --override-spell-check-lang=LANG).
- Fix keyboard focus issues in all examples. In gtk2.py and qt.py examples SetFocus must be called in OnLoadStart. (#284)
- Create qt.py example (PyQt, PySide) (#234)
- Simplify hello_world.py example (#286)
- Create initial [Tutorial](https://github.com/cztomczak/cefpython/blob/cefpython55/docs/Tutorial.md) document (10% complete) (#256)
- Create initial [Migration guide](https://github.com/cztomczak/cefpython/blob/cefpython55/docs/Migration-guide.md) document (#293)
- Fix PyCharm warnings in kivy_.py example (#285).
- Crash reporting (crashpad) configurable using crash_reporter.cfg file, see src/include/cef_crash_util.h and upstream cef/tools/crash_server.py for more details. Upstream [Issue #1995](https://bitbucket.org/chromiumembedded/cef/issues/1995/migrate-from-breakpad-to-crashpad). (#297)
- Fix CefRequestHandler::OnCertificateError callback trigger (#297)
- Fix potential OSR crash on renderer process recreation (#297)

**Changes that break backward compatibility:**
- Pass keyword arguments to Handlers' callbacks and other interfaces. This will break
  many of existing code for Handlers' callbacks. See the [Migration guide](https://github.com/cztomczak/cefpython/blob/cefpython55/docs/Migration-guide.md) document that explains the changes. (**BC break!**) (#291).
- Add is_main_frame param in RequestHandler._OnBeforePluginLoad (**BC break!**) (#297)
- In JavascriptDialogCallback.Continue ""userInput"" argument was renamed to ""user_input"" (**BC break!** - but only if kwarg used) (commit 0a7d8d673bacb1ac5a4a40dc68f3462bf4debe92)

**Notes on examples**:
- Examples provided with this release: hello_world.py, gtk2.py, tkinter_.py, kivy_.py, qt.py (pyqt, pyside) and wxpython.py
- gtk3.py example doesn't work (#261)
",41542522
227,False,False,2016-12-15T18:57:40Z,2016-12-15T18:59:29Z,"This release was removed from PyPI due to cleanup in pip releases (#329). You can install it using files attached to this GitHub release.

**Changes in this Release**:
- This is Chrome beta channel from Nov 30
- v55 is now the default branch
- Update to Chrome 55.0.2883.59 (beta channel) and CEF 3.2883.1539.gd7f087e (#271)
- Update to Cython 0.25.2 (#110)
- Fix Certificate Transparency causing some SSL sites fail to load after some time (#279)
- Add ApplicationSettings.net_security_expiration_enabled (#279)
- Fix ApplicationSettings.cache_path not working (#283).
- Fix: Not a clean shutdown in examples, when closing app while browser is still loading a website (#282).
- Fix loading local filesystem urls that contained any of ? & = characters (#273).
- Fix Request.SetPostData and GetPostData segmentation faults (#228).
- Update ExecuteJavascript docs with scriptUrl="""" and startLine=1 default params. Also worth noting that ExecuteJavascript crashed in earlier CEF versions when startLine wasn't provided or was <= 0 (Issue #268).

**Notes on examples**:
- Examples provided with this release: hello_world.py, gtk2.py, tkinter_.py and kivy_.py
- For PyQt4/PySide examples see [this comment](https://github.com/cztomczak/cefpython/issues/234#issuecomment-229607596) (tested with python 2.7)
- gtk3.py example doesn't work (#261)

**Key changes in upstream CEF between commits a6c42a7...d7f087e (since CEF Python 55.1)**:
- Update to Chromium version 55.0.2883.59 (Chrome beta channel from Nov 30)
- Fix crash when persisting user preferences
- Fix crash related to channel ID support, disable channel ID support
- Fix load error when using Request->SetUrl when url contains double byte characters
- Net security (CT, HSTS) expiration based on build age is now disabled by default. Configurable with CefSettings.enable_net_security_expiration.
- Add CefSettings.enable_net_security_expiration
- Standardize IME callbacks for off-screen rendering. Add CefRenderHandler.OnImeCompositionRangeChanged. Add CefBrowser IME methods : ImeSetComposition, ImeCommitText, ImeFinishComposingText, ImeCancelComposition
- Add CefWaitableEvent for synchronizing threads (one waits for another to finish work)
- Add CefThread for creating new CEF threads
- Add initial WebUI support. Visit chrome://webui-hosts for the list of supported hosts:
  - chrome://accessibility
  - chrome://appcache-internals
  - chrome://blob-internals
  - chrome://credits
  - chrome://gpu
  - chrome://histograms
  - chrome://indexeddb-internals
  - chrome://license
  - chrome://media-internals
  - chrome://net-export
  - chrome://net-internals
  - chrome://network-error
  - chrome://network-errors
  - chrome://resources
  - chrome://serviceworker-internals
  - chrome://system
  - chrome://tracing
  - chrome://version
  - chrome://view-http-cache
  - chrome://webrtc-internals
  - chrome://webui-hosts
",41542522
228,False,False,2016-12-09T10:51:38Z,2016-12-10T09:49:13Z,"This release was removed from PyPI due to cleanup in pip releases (#329). You can install it using files attached to this GitHub release.

**Changes in this Release**:
- Update to Chrome 54.0.2840.99 and CEF 3.2840.1518.gffd843c (#272)
- Python 3.6 support (#121)
- Update to Cython 0.25.2 (#110)
- Fix ""undefined symbol: PyFPE_jbuf"" when importing cefpython's Python 2.7 .so module (#266)
- Fix Certificate Transparency support causing some SSL sites fail to load after some time (#279)
- Add ApplicationSettings.net_security_expiration_enabled

**Notes on examples**:
- Examples provided with this release: hello_world.py, gtk2.py, tkinter_.py and kivy_.py.
- For PyQt4/PySide examples see [this comment](https://github.com/cztomczak/cefpython/issues/234#issuecomment-229607596) (tested with python 2.7).
- gtk3.py example doesn't work (#261)

**Key changes in upstream CEF between commits 7fe3d03...ffd843c (since CEF Python 54.0)**:
- Update to Chromium version 54.0.2840.99
- Fix PDF rendering with OSR
- Add CefRequestHandler::OnSelectClientCertificate (allows for client certificate selection programmatically)
- Fix load error when using Request->SetUrl when url contains double byte characters
- Fix crash related to channel ID support, disable channel ID support
- Net security (CT, HSTS) expiration based on build age is now disabled by default. Configurable with CefSettings.enable_net_security_expiration.
- New web plugin API: CefRegisterCdmCallback, CefRegisterWidevineCdm
",41542522
229,False,True,2016-10-28T15:14:00Z,2016-10-28T15:26:12Z,"This is Chrome beta channel.

This release was removed from PyPI due to cleanup in pip releases (#329). You can install it using files attached to this GitHub release.

**Changes in this Release**:
- Update to Chrome 55.0.2883.21 (beta channel) and CEF 3.2883.1506.ga6c42a7 (#263)
- Add support for Python 3.6 (#121)
- Fix ""undefined symbol: PyFPE_jbuf"" when importing cefpython's Python 2.7 .so module (#266)

**Notes on examples**:
- Examples provided with this release: hello_world.py, gtk2.py, tkinter_.py and kivy_.py
- For PyQt4/PySide examples see [this comment](https://github.com/cztomczak/cefpython/issues/234#issuecomment-229607596) (tested with python 2.7)
",41542522
230,False,False,2016-10-28T15:14:00Z,2016-10-28T15:18:01Z,"Built according to `docs/Build-instructions.md` with the `tools/automate.py` script. 

NOTE for Linux: Linux binaries were built on Ubuntu 14.04 64-bit. These binaries contain libcef.so with minimal symbols so that you can debug CEF with gdb and get a meaningful stack trace. Currently cefpython v54 and later distribution packages on PyPI and on GH releases ship a stripped version of libcef.so with no symbols at all (Issue #262). Download archive from this release and switch libcef.so in your already installed package to allow for debugging CEF.

CEF Python 55.1 - cef55_3.2883.1506.ga6c42a7_linux64.tar.gz (Linux, Chrome beta channel)
CEF Python 55.2 - cef55_3.2883.1539.gd7f087e_linux64.tar.gz (Linux, Chrome beta channel from Nov 30)
CEF Python 55.3 - cef55_3.2883.1554.gf984155_linux64.tar.gz (Linux, Chrome stable channel)
CEF Python 55.4 - cef55_3.2883.1553.g80bd606_win32.zip (Windows, Chrome stable channel)",41542522
231,False,False,2016-10-19T07:36:11Z,2016-10-19T08:56:33Z,"This release was removed from PyPI due to cleanup in pip releases (#329). You can install it using files attached to this GitHub release.

**Changes in this Release**:
- Update to Chrome 54.0.2840.59 and CEF 3.2840.1494.g7fe3d03
- There are two known issues with this release: 
  - GTK 3 example doesn't work (#261)
  - libcef.so is stripped from symbols (#262)
- There are changes that break backward compatibility, see list at the end.

**Notes on examples**:
- Examples provided with this release: hello_world.py, gtk2.py, tkinter_.py and kivy_.py.
- For PyQt4/PySide examples see [this comment](https://github.com/cztomczak/cefpython/issues/234#issuecomment-229607596) (tested with python 2.7).

**Changes in API that break backward compatibility**:
- Add resonse param in RequestHandler.OnResourceRedirect, see API docs
- Remove WOD_SUPPRESS_OPEN constant (WindowOpenDisposition enum in
  LifespanHandler.OnBeforePopup)
",41542522
232,False,False,2016-10-19T07:36:11Z,2016-10-19T08:06:27Z,"Built according to docs/Build-instructions.md with the tools/automate.py script.

Linux binaries were built on Ubuntu 14.04 64-bit.

NOTE: These binaries contain libcef.so with minimal symbols so that you can debug CEF with gdb and get a meaningful stack trace. Currently cefpython v54 distribution packages on PyPI and on GH releases ship a stripped version of libcef.so with no symbols at all. Download archive from this release and switch libcef.so in your already installed package to allow for debugging.

CEF Python 54.0 - cef54_3.2840.1494.g7fe3d03_linux64.tar.gz
CEF Python 54.1 - cef54_3.2840.1518.gffd843c_linux64.tar.gz
",41542522
233,False,True,2016-09-20T17:51:16Z,2016-09-20T17:57:55Z,"**Python 3 note**: examples that were tested with python 3 are [hello_world.py](https://github.com/cztomczak/cefpython/blob/cefpython53/examples/hello_world.py) and [gtk.py](https://github.com/cztomczak/cefpython/blob/cefpython53/examples/gtk.py) (new, available only in repo sources), and also [unit tests](https://github.com/cztomczak/cefpython/blob/cefpython53/unittests/main_test.py).

For PyQt4/PySide examples see [this comment](https://github.com/cztomczak/cefpython/issues/234#issuecomment-229607596) (tested with python 2.7).

**Changes in this Release**:
- Update to Chrome 53.0.2785.101 / CEF 3.2785.1481.gc3a7e2c.
- Add Python 3.4 / 3.5 support (#121)
- Add image representation of drag & drop data in OSR (#251)
  - Update Kivy example
  - Add DragData.GetImage() and HasImage() methods, see API docs.
  - Add Image object and its methods to get image either as bitmap or png,
    see API docs.
",41542522
234,False,True,2016-09-19T09:18:58Z,2016-09-13T10:14:40Z,"**Note on examples**:
- Only pygtk_.py and kivy_.py examples were tested and do work fine. Other examples provided with the installer do have issues.
- For PyQt4/PySide examples that do work fine with this release see Issue 234 and [this comment](https://github.com/cztomczak/cefpython/issues/234#issuecomment-229607596)

**Changes in this Release**:
- Update to Chrome/53.0.2785.89
- Add support for drag & drop in OSR Kivy (kivy_.py example)
- New methods in the Browser object: DragTargetDragEnter, DragTargetDragOver, DragTargetDragLeave, DragTargetDrop, DragSourceEndedAt, DragSourceSystemDragEnded.
- New object: DragData and its methods
- New callbacks in RenderHandler: StartDragging, UpdateDragCursor, GetScreenRect

See api/ docs for the description of new functions.
",41542522
235,False,True,2016-07-12T17:23:39Z,2016-09-12T13:55:09Z,"Built according to docs/Build-instructions.md with the tools/automate.py script.
Linux binaries were built on Ubuntu 14.04 64-bit.

CEF Python 53.0 - cef53_3.2785.1475.gaead085_linux64.tar.gz
CEF Python 53.1 - cef53_3.2785.1481.gc3a7e2c_linux64.tar.gz
",41542522
236,False,True,2016-06-28T20:29:02Z,2016-06-28T20:35:46Z,"Built according to docs/Build-instructions.md with the tools/automate.py script.
Linux binaries were built on Ubuntu 14.04 64-bit.
",41542522
237,False,True,2016-07-12T17:23:39Z,2016-06-30T06:57:37Z,"**IMPORTANT**:
- Only pygtk_.py and kivy_.py examples were tested and do work fine. Other examples provided with the installer do have issues.
- For PyQt4/PySide examples that do work fine with this release see Issue 234 and [this comment](https://github.com/cztomczak/cefpython/issues/234#issuecomment-229607596)

Chrome version: 51.0.2704.103.

Changes in API that break backward compatibility, thus require fixes in existing code:
- Add Browser.NotifyMoveOrResizeStarted() - needs to be called in MOVE/SIZE
  window operations.
- On Linux it is required to set CEF browser's window bounds during resize events.
  Add Browser.SetBounds() to do that.
- On Linux the windowRect argument in WindowInfo.SetAsChild() is now required
- On Linux you must call WindowUtils.InstallX11ErrorHandlers() - see description
  for details
- When using offscreen rendering you must set the ApplicationSettings >
  ""windowless_rendering_enabled"" option to True
- New args in LifespanHandler.OnBeforePopup() - targetDisposition
  and userGesture - wxpython.py example updated
- New arg in RequestHandler.OnResourceRedirect() - request object, updated
  the wxpython.py example
- Remove 'accept_lang' arg in JavascriptDialogHandler.OnJavascriptDialog()
- Remove LifespanHandler.RunModal()
- Change RequestHandler._OnBeforePluginLoad args

Other changes in API:
- Change ApplicationSettings. Add new: user_data_path,
  windowless_rendering_enabled, persist_user_preferences, accept_language_list.
  Modify: background_color is now cross-platform (previously it was Mac only).
  Remove: release_dcheck_enabled - all examples updated
- Change BrowserSettings. Add new: windowless_frame_rate, background_color,
  accept_language_list. Remove: user_style_sheet_location,
  java_disabled, accelerated_compositing, author_and_user_styles_disabled.
- Add Browser.CloseDevTools()
- Remove Browser.ParentWindowWillClose()  in upstream (keep dummy for BC)
- Request.GetHeaderMap() will not include the Referer value if any
  and SetHeaderMap() will ignore Referer value
- Remove the cefpython.Request.Flags values: AllowCookies, ReportLoadTiming,
  ReportRawHeaders.
- Add Browser.TryCloseBrowser()
- There were many more API changes in upstream, but are not yet implemented
  in cefpython. A list of changes since v31..v47 is available in the
  top comment in src/cefpython.pyx
",41542522
238,False,True,2016-06-22T13:02:24Z,2016-06-22T13:03:08Z,"Built according to docs/Build-instructions.md with the tools/automate.py script.
Linux binaries were built on Ubuntu 12.04.
",41542522
239,False,False,2016-02-15T12:24:32Z,2016-02-15T15:33:30Z,"This is an archive release from Jan 2015 - we didn't use GitHub at that time. This means that sources provided by GitHub in this release won't match exactly sources used to create these binaries. It should build fine, but be aware that there were several minor changes since that time. If you would like to match exactly Git commits for corresponding releases on given platform then here they are:
- Linux - commit 142df92108e8d5c222388e7b36d397feb6b8934b
- Mac - commit 916d3ffb5343a7627b07e21bf0ca94392364ef63
- Windows - commit 05366f26e492eb5ad029b9124d1bca0e849a8da6
- See also the ""cefpython31"" branch

Features of this release:
- Chrome 31.0.1650.69 (CEF 3 branch 1650 rev. 1639)
- Windows requirements: WinXP SP2 or later
- 64-bit binaries for Windows do work fine, but are not considered as stable in upstream CEF/Chromium
- Mac requirements: OS X 10.7 or later
- 64-bit binaries for Mac do work fine, but are not considered as stable in upstream CEF/Chromium
- Linux requirements: Debian 7 / Ubuntu 12.04 or later

This is the last release for Mac 32-bit, see Issue #193.

On Windows and Mac you can also install the cefpython3 package using PyPI: 
https://pypi.python.org/pypi/cefpython3
",41542522
240,False,False,2019-02-19T09:13:00Z,2019-02-19T09:13:08Z,[2019-02-19 08:43 +00:00] Change default provider invite behaviour by @laander - https://github.com/timekit-io/booking-js/pull/196,44744780
241,False,False,2018-12-06T10:46:21Z,2018-12-06T10:46:27Z,[2018-12-06 10:39 +00:00] Group slots should support timezone by @laander - https://github.com/timekit-io/booking-js/pull/195,44744780
242,False,False,2018-10-10T14:58:58Z,2018-10-10T14:59:11Z,[2018-10-10 12:47 +00:00] Fix test-mode ribbon glitch by @laander - https://github.com/timekit-io/booking-js/pull/193,44744780
243,False,False,2018-10-08T12:32:53Z,2018-10-08T12:32:58Z,[2018-10-08 12:25 +00:00] IE fix for Array.includes by @laander - https://github.com/timekit-io/booking-js/pull/192,44744780
244,False,False,2018-10-01T07:47:29Z,2018-10-01T07:47:34Z,[2018-10-01 07:38 +00:00] Timezone helper improvements by @laander - https://github.com/timekit-io/booking-js/pull/191,44744780
245,False,False,2018-09-28T13:12:19Z,2018-09-28T13:12:24Z,[2018-09-28 13:04 +00:00] Timezone helper by @laander - https://github.com/timekit-io/booking-js/pull/190,44744780
246,False,False,2018-09-25T10:07:14Z,2018-09-25T10:07:20Z,[2018-09-25 10:01 +00:00] Update timezone detection and fix display name bug by @laander - https://github.com/timekit-io/booking-js/pull/187,44744780
247,False,False,2018-08-31T10:13:36Z,2018-08-31T10:13:41Z,[2018-08-31 10:09 +00:00] Destroy FullCalendar properly by @laander - https://github.com/timekit-io/booking-js/pull/186,44744780
248,False,False,2018-08-20T12:17:15Z,2018-08-20T12:17:20Z,[2018-08-20 12:10 +00:00] Custom fields by @laander - https://github.com/timekit-io/booking-js/pull/184,44744780
249,False,False,2018-08-16T17:28:21Z,2018-08-16T17:28:26Z,[2018-08-16 17:17 +00:00] Prefill customer fields from URL query string by @Trolzie - https://github.com/timekit-io/booking-js/pull/183,44744780
250,False,False,2018-07-30T11:24:45Z,2018-07-30T11:24:49Z,[2018-07-30 11:18 +00:00] added participants to bookings request by @Trolzie - https://github.com/timekit-io/booking-js/pull/182,44744780
251,False,False,2018-06-28T12:15:10Z,2018-06-28T12:15:15Z,[2018-06-28 12:05 +00:00] Add error message to callback arg by @laander - https://github.com/timekit-io/booking-js/pull/180,44744780
252,False,False,2018-06-21T14:28:11Z,2018-06-21T14:28:18Z,[2018-06-21 14:16 +00:00] Bugfix: undefined event description when creating bookings by @laander - https://github.com/timekit-io/booking-js/pull/178,44744780
253,False,False,2018-06-06T13:08:49Z,2018-06-06T13:08:55Z,[2018-06-06 12:53 +00:00] Projects v2 by @laander - https://github.com/timekit-io/booking-js/pull/176,44744780
254,False,True,2018-05-31T11:24:39Z,2018-06-01T08:29:32Z,Pre-release of the upcoming v2 release supporting out new projects model and availability algorithm.,44744780
255,False,False,2018-05-28T15:07:53Z,2018-05-28T15:07:58Z,[2018-05-28 15:01 +00:00] Custom include for create booking request by @laander - https://github.com/timekit-io/booking-js/pull/177,44744780
256,False,False,2018-04-30T14:04:39Z,2018-04-30T14:04:45Z,[2018-04-30 13:56 +00:00] Add deployment path to flux by @laander - https://github.com/timekit-io/booking-js/pull/175,44744780
257,False,False,2018-02-20T14:31:19Z,2018-02-20T14:31:23Z,[2018-02-20 14:26 +00:00] Link to new API reference in readme by @petersuhm - https://github.com/timekit-io/booking-js/pull/173,44744780
258,False,False,2018-02-14T11:11:20Z,2018-02-14T11:11:25Z,[2018-02-14 09:39 +00:00] Fix async tests & misc by @laander - https://github.com/timekit-io/booking-js/pull/160,44744780
259,False,False,2018-02-14T09:23:40Z,2018-02-14T09:23:44Z,[2018-02-14 08:59 +00:00] Target calendar is optional by @laander - https://github.com/timekit-io/booking-js/pull/172,44744780
260,False,False,2017-11-30T12:43:57Z,2017-11-30T12:44:02Z,[2017-11-30 12:35 +00:00] Added header: 'Timekit-Context': 'widget' by @Trolzie - https://github.com/timekit-io/booking-js/pull/171,44744780
261,False,False,2017-10-23T11:40:38Z,2017-10-23T11:40:43Z,[2017-10-23 11:36 +00:00] Fixed sorting method on group bookings by @Trolzie - https://github.com/timekit-io/booking-js/pull/167,44744780
262,False,False,2017-10-13T11:58:59Z,2017-10-13T11:59:03Z,[2017-10-13 11:54 +00:00] Add location on customer key by @Trolzie - https://github.com/timekit-io/booking-js/pull/166,44744780
263,False,False,2017-10-12T14:03:27Z,2017-10-12T14:03:32Z,[2017-10-12 13:53 +00:00] Comment field added to customer data by @Trolzie - https://github.com/timekit-io/booking-js/pull/165,44744780
264,False,False,2017-10-09T12:01:26Z,2017-10-09T12:01:30Z,[2017-10-09 11:56 +00:00] Updated ui to fix ugly hover state on list items by @Trolzie - https://github.com/timekit-io/booking-js/pull/164,44744780
265,False,False,2017-10-05T12:45:09Z,2017-10-05T12:45:14Z,[2017-10-05 12:33 +00:00] Added allocated resource on booking page by @Trolzie - https://github.com/timekit-io/booking-js/pull/163,44744780
266,False,False,2017-09-28T13:11:15Z,2017-09-28T13:11:19Z,[2017-09-28 13:07 +00:00] Updated `instant_payment` graph support by @grimor - https://github.com/timekit-io/booking-js/pull/162,44744780
267,False,False,2017-09-27T12:16:52Z,2017-09-27T12:16:56Z,[2017-09-27 12:05 +00:00] Test mode UI Ribbon by @Trolzie - https://github.com/timekit-io/booking-js/pull/158,44744780
268,False,False,2017-09-21T19:43:39Z,2017-09-21T19:43:45Z,[2017-09-21 19:39 +00:00] HOTFIX: Fix listview date sorting by @laander - https://github.com/timekit-io/booking-js/pull/161,44744780
269,False,False,2017-09-05T13:02:25Z,2017-09-05T13:02:29Z,"[2017-09-05 12:53 +00:00] Support jQuery version 3 by @laander - https://github.com/timekit-io/booking-js/pull/157

Comments:
Booking.js is still backwards compatible with jQuery 2 for now., thus s the minor version bump",44744780
270,False,False,2017-07-28T13:52:22Z,2017-07-28T13:52:26Z,[2017-07-28 13:51] Dependent projects warning for deploys by @laander - https://github.com/timekit-io/booking-js/pull/156,44744780
271,False,False,2017-07-28T09:01:49Z,2017-07-28T09:01:53Z,"[2017-07-28 08:57] Using yarn on Circle CI & bump JS-SDK version by @Trolzie - https://github.com/timekit-io/booking-js/pull/155

Comments:
bumping skd version and yarn on circle",44744780
272,False,False,2017-07-27T13:40:11Z,2017-07-27T13:40:16Z,"[2017-07-27 13:22] Flux release & deployment by @laander - https://github.com/timekit-io/booking-js/pull/154

Comments:
Better flux deployment added",44744780
273,False,False,2017-07-12T13:40:10Z,2017-07-12T13:40:14Z,"[2017-07-12T13:22:10Z] Polyfill promises for IE11 by laander - [https://github.com/timekit-io/booking-js/pull/153](https://github.com/timekit-io/booking-js/pull/153)
[2017-07-12T13:08:09Z] Create a new SDK instance for new widgets by laander - [https://github.com/timekit-io/booking-js/pull/152](https://github.com/timekit-io/booking-js/pull/152)

Comments:
",44744780
274,False,False,2017-07-07T11:53:38Z,2017-07-07T11:53:42Z,"[2017-07-04T11:34:15Z] Fix locale library by Trolzie - [https://github.com/timekit-io/booking-js/pull/151](https://github.com/timekit-io/booking-js/pull/151)
[2017-07-07T11:50:59Z] Project stop-the-bleeding by laander - [https://github.com/timekit-io/booking-js/pull/143](https://github.com/timekit-io/booking-js/pull/143)

Comments:
",44744780
275,False,False,2017-05-23T08:00:58Z,2017-05-23T08:01:03Z,"[2017-05-23T07:45:59Z] Visual facelift by laander - [https://github.com/timekit-io/booking-js/pull/145](https://github.com/timekit-io/booking-js/pull/145)

Comments:
",44744780
276,False,False,2017-05-22T11:22:44Z,2017-05-22T11:22:48Z,"[2017-05-22T11:05:40Z] Ignore timezone API errors by laander - [https://github.com/timekit-io/booking-js/pull/146](https://github.com/timekit-io/booking-js/pull/146)

Comments:
",44744780
277,False,False,2017-05-11T13:40:25Z,2017-05-11T13:40:29Z,"[2017-05-11 13:40:04] HOT-FIX by Lasse Boisen Andersen

Comments:
fixed build with correct JS SDK version",44744780
278,False,False,2017-05-11T13:33:09Z,2017-05-11T13:33:14Z,"[2017-05-11T13:28:59Z] Show error and warnings by laander - [https://github.com/timekit-io/booking-js/pull/144](https://github.com/timekit-io/booking-js/pull/144)

Comments:
",44744780
279,False,False,2017-05-04T10:12:56Z,2017-05-04T10:13:01Z,"[2017-05-04T09:49:32Z] List view by laander - [https://github.com/timekit-io/booking-js/pull/141](https://github.com/timekit-io/booking-js/pull/141)
[2017-05-04T09:30:53Z] Fix typo. Ahead goes with of but behind has no preposition. by liiza - [https://github.com/timekit-io/booking-js/pull/139](https://github.com/timekit-io/booking-js/pull/139)
[2017-05-04T09:31:19Z] Change the app-header from bookingjs-demo to back-to-the-future by jariwiklund - [https://github.com/timekit-io/booking-js/pull/138](https://github.com/timekit-io/booking-js/pull/138)

Comments:
",44744780
280,False,False,2017-03-28T13:09:42Z,2017-03-28T13:09:46Z,"[2017-03-28T13:06:42Z] Added RenderStarted callback by laander - [https://github.com/timekit-io/booking-js/pull/137](https://github.com/timekit-io/booking-js/pull/137)
[2017-03-28T13:07:12Z] Support instant payments graph by laander - [https://github.com/timekit-io/booking-js/pull/136](https://github.com/timekit-io/booking-js/pull/136)

Comments:
",44744780
281,False,False,2017-03-24T17:06:18Z,2017-03-24T17:06:23Z,"[2017-03-24T17:03:38Z] Option to disable confirm page by laander - [https://github.com/timekit-io/booking-js/pull/135](https://github.com/timekit-io/booking-js/pull/135)

Comments:
",44744780
282,False,False,2017-03-20T14:21:17Z,2017-03-20T14:21:22Z,"[2017-03-20T14:14:37Z] Team availability by laander - [https://github.com/timekit-io/booking-js/pull/133](https://github.com/timekit-io/booking-js/pull/133)
[2017-03-20T14:12:04Z] docs(readme) Use H4 for subsections by SpainTrain - [https://github.com/timekit-io/booking-js/pull/132](https://github.com/timekit-io/booking-js/pull/132)

Comments:
",44744780
283,False,False,2017-03-07T15:29:47Z,2017-03-07T15:30:32Z,"- #130 Fixed an access error when no timeslots were available
- #130 Allow to disable loading of remote config when passing widgetId",44744780
284,False,False,2017-03-06T13:29:14Z,2017-03-06T13:31:21Z,- #113 Support for group bookings (many-to-1),44744780
285,False,False,2016-10-28T16:10:05Z,2016-10-28T16:11:09Z,"- #119 Fix clickable arrows in mobile
",44744780
286,False,False,2016-10-28T14:18:20Z,2016-10-28T14:19:17Z,"- #118 Only require jQuery if loaded directly from script in browser., otherwise require jquery and expect that the module is available by another module loader (fixes #108)
",44744780
287,False,False,2016-10-14T12:20:17Z,2016-10-14T12:20:41Z,"- #115 Fix form height issue
",44744780
288,False,False,2016-10-12T13:37:16Z,2016-10-12T13:38:44Z,"- #114 Root-level `app` key config shorthand

Enables you to specify Timekit-App like this:

``` javascript
{
  email: '',
  apiToken: '',
  app: 'my-app-name'
}
```

Instead of:

``` javascript
{
  email: '',
  apiToken: '',
  timekitConfig: {
    app: 'my-app-name'
  }
}
```
",44744780
289,False,False,2016-06-09T15:07:29Z,2016-06-09T15:08:05Z,"Bugfixes:
- #107 Fix timezone difference was always ""ahead""
",44744780
290,False,False,2016-05-20T14:33:14Z,2016-05-20T14:34:43Z,"Bugfixes:
- #102 Cleaned up some legacy behaviour where RSVP for the host in Google events were not set to `accepted`
",44744780
291,False,False,2016-05-19T14:28:13Z,2016-05-19T14:37:22Z,"New features:
- #100 Adds support for loading remote widget configs (and compatibility for Hour widget)

Bugfixes:
- #101 Updated package.json
- #96 Modal close icon and textarea overflow cross-browser fix for IE
",44744780
292,False,False,2016-04-20T22:11:58Z,2016-04-20T22:13:11Z,"- #99 Include event on booking to make event ID available in callbacks for instant bookings
",44744780
293,False,False,2016-04-19T08:02:01Z,2016-04-19T09:10:02Z,"Fixes an urgent bug with the callbacks not returning booking attributes after booking is completed. Has been deployed to the CDN, but if you're using the library locally, you're advised to upgrade immediately.

Bugfix:
- #97 Include attributes in create booking
",44744780
294,False,False,2016-02-18T11:21:41Z,2016-02-18T12:37:29Z,"Major release!

Includes support the new Timekit booking engine running under the hood. The engine can be configured to use different graphs with support for `instant` and `confirm_decline` right now.

Improvements:
- #79 Uses new booking engine. See README.
- #79 #74 Customize strings for localization, e.g. submit button and success message. See README.

Bugfixes:
- #75 Locked fields is correctly submitted from the form
",44744780
295,False,False,2016-02-04T14:41:29Z,2016-02-04T14:44:30Z,"Improvements:
- #71 Support for locked booking fields 
- Shows FullCalendar's new ""now indicator"" by default

Bugfixes:
- #72 Fixes a button hover 1px misalignment 
- #66 Fixes bug where display name could overlap buttons on mobile 

Misc:
- #67 Protocol-agnostic URLs to cdn in readme 
",44744780
296,False,False,2016-01-20T17:49:35Z,2016-01-20T17:52:58Z,"Improvements:
- #64 Added CSS class to success message for easier styling (thanks @opendining !)
- #62 Sync provider by default after event created (to avoid double-bookings)
- #60 Minor README/usage corrections
- #59 Increase CSS specificity on elements (improves upon #45)
",44744780
297,False,False,2016-01-07T13:12:49Z,2016-01-07T13:15:01Z,"Bugfixes:
- https://github.com/timekit-io/booking-js/issues/57 Malformed email leaves form in limbo state. Now displays error and reset booking form.

Improvements:
- https://github.com/timekit-io/booking-js/pull/58 Added comment about HTTPS serving to Readme
",44744780
298,False,False,2015-12-02T12:08:54Z,2015-12-02T15:06:16Z,"Improvements:
- #40 Automatically go to the date of the first event and scroll to timeslot if it's outside default boundaries. Is set to true by default.

Bugfixes:
- #41 Relocates the Today button so it's not hidden under the avatar in mobile/small view
",44744780
299,False,False,2015-11-28T00:16:07Z,2015-11-27T13:15:24Z,"Patch:
- #37 Fixes a regression build bug with minified version not having webpack flag set
- #38 Fixes a critical bug that prevented the booking form to book properly

Improvement:
- #38 Changes resulting event description to have custom field placeholders instead of static text.
- #38 Adds tests for booking an event and closing the booking page
",44744780
300,False,False,2015-11-27T11:38:49Z,2015-11-27T11:41:49Z,"New feature:
- #33 Booking form fields can be customized (enabled, placeholder, prefilled, required) and adds three new types (phone, voip and location). Fixes #16 and #10 and #9 

EDIT:
:beetle: The minified build in this release is broken, use [v1.4.2](https://github.com/timekit-io/booking-js/releases/tag/v1.4.2) instead
",44744780
301,False,False,2015-11-26T06:26:04Z,2015-11-26T06:27:52Z,"Improvements:
- #27 Foundation for tests with jasmine and karma (running on Circle CI)
- #25 Better callbacks with passed values 

Bugfix:
- #24 Fix timeDateFormat preset bug where default is not set 
",44744780
302,False,False,2015-11-23T10:25:47Z,2015-11-23T10:29:04Z,"Bugfixes/improvements:
- #17 Proper localization support for FullCalendar's language files (fixes #15)
",44744780
303,False,False,2015-11-19T23:15:31Z,2015-11-19T23:18:09Z,"Bugfixes, small improvements and a few regression patches:
- #13 Autoprefixer for crossbrowser css3
- #13 A lightweight fallback for non html5 validation capable browsers (Safari)
- #13 Fixes some regression bugs with textareas
- #13 Non-italic email in success message
- Better sizing of the form area
- More clear CTA in success message
",44744780
304,False,False,2015-11-19T16:46:39Z,2015-11-19T16:49:32Z,"Improvements:
- #12 Supports for custom time and date formats in booking page 
- #6 More expressive success text (and nice loading icon on submit)
",44744780
305,False,False,2015-11-18T18:30:26Z,2015-11-18T18:38:16Z,"Bugfixes:
- #1 Rendering fix for text size in small timeslots (30 minutes)

New features:
- #2 Optional ""Powered by Timekit"" footer
",44744780
306,False,False,2015-11-18T18:24:40Z,2015-11-18T18:34:12Z,":confetti_ball: :tada: :balloon:
",44744780
307,False,False,2013-08-14T09:51:23Z,2013-08-14T16:39:54Z,"### New Features
- Added autogrow support, so the editor will get taller as you type ([ticket #132](https://github.com/OscarGodson/EpicEditor/issues/132)) thanks [@Gankro](http://github.com/Gankro)
- You can now set the button bar to ""show"" (always on), ""hide"" (never show), and ""auto"" (default) ([ticket #251](https://github.com/OscarGodson/EpicEditor/issues/251)) thanks [@Gankro](http://github.com/Gankro)
- `exportFile` now supports a `json` export type ([ticket #237](https://github.com/OscarGodson/EpicEditor/issues/237)) thanks [@Gankro](http://github.com/Gankro)

### Updates and Major Bug Fixes
- HTML is now stripped out when pasting ([ticket #100](https://github.com/OscarGodson/EpicEditor/issues/100)) thanks [@Gankro](http://github.com/Gankro)
- Fixed Chrome and IE9-10 replacing all spaces with `&nbsp;` making wrapping change when you refresh ([ticket #268](https://github.com/OscarGodson/EpicEditor/issues/268)) thanks [@Gankro](http://github.com/Gankro)
- Icons have been ""retina-ified"" ([ticket #265](https://github.com/OscarGodson/EpicEditor/issues/265)) thanks [@jpdevries](http://github.com/jpdevries) 
- Moved images to CSS rather than image tags to work better with asset pipelines ([ticket #259](https://github.com/OscarGodson/EpicEditor/issues/#259)) ([#254](https://github.com/OscarGodson/EpicEditor/issues/#254)) thanks [@pbougie](http://github.com/pbougie) 
",3277032
308,False,True,2012-03-12T20:01:15Z,2013-07-07T04:26:20Z,"First public release of EpicEditor
",3277032
309,False,False,2012-06-09T04:20:45Z,2013-07-07T04:25:03Z,"### API Changes
- `import` is now `importFile` and has more functionality.
- `exportHTML` is now `exportFile` and has more functionality.
- `get` is now `getElement` with more selectors and slightly modified existing ones.
- `options` is removed and moved as an object into the `EpicEdior` contructor.
- Added `version` to EpicEditor object to return the current EE version (i.e. `EpicEditor.version`)

### New Features
- Fullscreen in unsupported browsers (Firefox and IE9).
- Save via <kbd>ctrl</kbd>/<kbd>cmd</kbd>+<kbd>s</kbd>.
- Full CRUD event support (`create`, `read`, `update`, and `remove` events to hook into with `on()`).
- Use any parser with the new `parser` option. Just return HTML from a function.

### Updates and Major Bug Fixes
- EpicEditor gets a logo from [@sebnitu](http://github.com/sebnitu).
- Complete IE9 support.
- Theming has been completely redone. Instead of everything living in one document and conflicting with each other it will live in these multiple documents: base, editor, and preview.
- New and much better Markdown parser [Marked](https://github.com/chjj/marked) by [@chjj](http://github.com/chjj). (EpicEditor's own README actually works in EpicEditor finally).
- New icons with preview/edit specific icons (thanks [@sebnitu](http://github.com/sebnitu)).
- Better docs (thanks again [@sebnitu](http://github.com/sebnitu)).
- Updated GitHub theme to match their current theme.
- Better interval cleanup on `unload()`ing

### Behind-the-scenes Updates
- Full test coverage on every EpicEditor API method using [foounit](https://github.com/foobarfighter/foounit) by @foobarfighter
- Docs are generated from the README
- Real builds from the `/src` directory
- Marked (Markdown parser) has been pulled out from the source and is a git submodule
",3277032
310,False,False,2012-07-15T16:24:54Z,2013-07-07T04:24:14Z,"### New Features
- `getFiles()` has been added allowing you to easily get all or one files in localStorage ([ticket #85](https://github.com/OscarGodson/EpicEditor/issues/85))
- A boolean `clientSideStorage` option has been added. Setting it to `false` will make EpicEditor not save to localStorage ([ticket #141](https://github.com/OscarGodson/EpicEditor/issues/141))
- EpicEditor now supports fluid width containers and will resize horizontally on the fly. ([ticket #129](https://github.com/OscarGodson/EpicEditor/issues/129))

### Updates and Major Bug Fixes
- Fix for EpicEditor not loading in IE9 when run on the local file system ([ticket #137](https://github.com/OscarGodson/EpicEditor/issues/137))
- Fix for `exportFile()` and `file.content` to export spaces as spaces and not `&nbsp;` characters ([ticket #136](https://github.com/OscarGodson/EpicEditor/issues/136))
- Fix for update event firing before content was actually updated thus showing old content ([ticket #135](https://github.com/OscarGodson/EpicEditor/issues/135))
- Fix for key shortcuts sometimes getting stuck and always firing and preventing you from typing certain characters ([ticket #133](https://github.com/OscarGodson/EpicEditor/issues/133)) ([ticket #127](https://github.com/OscarGodson/EpicEditor/issues/127))
- Fix for when clicking on the preview/edit buttons key shortcuts wouldn't work anymore until the editor was clicked again ([ticket #125](https://github.com/OscarGodson/EpicEditor/issues/125))
- Fix for not being able to do fullscreen, close, fullscreen back to back in Firefox ([ticket #121](https://github.com/OscarGodson/EpicEditor/issues/121))
- Fix for default file name becoming a stringified element object if there was no ID on the selected element ([ticket #102](https://github.com/OscarGodson/EpicEditor/issues/102))
- Fixed anchor links opening in new tabs ([ticket #96](https://github.com/OscarGodson/EpicEditor/issues/96))
- Fix for 2 `<link>` tags being loaded into the previewer iframe on load ([ticket #78](https://github.com/OscarGodson/EpicEditor/issues/78))
- Safari now uses faux fullscreen ([ticket #6](https://github.com/OscarGodson/EpicEditor/issues/6))
",3277032
311,False,False,2012-09-13T02:44:40Z,2013-07-07T04:23:25Z,"### Hotfixes
- Fix for Firefox parsing HTML entities as literal HTML in the editor. ([ticket #183](https://github.com/OscarGodson/EpicEditor/issues/183))
",3277032
312,False,False,2013-01-07T05:17:22Z,2013-07-07T04:22:42Z,"### New Features
- Complete Fullscreen API set. `enterFullscreen()` and `exitFullscreen()` methods and `fullscreenenter` and `fullscreenexit` events have been added ([ticket #156](https://github.com/OscarGodson/EpicEditor/issues/156)) ([ticket #146](https://github.com/OscarGodson/EpicEditor/issues/146))
- Added boolean `useNativeFullscreen` option ([ticket #146](https://github.com/OscarGodson/EpicEditor/issues/146))
- Added `is()` method to get the state of the editor ([ticket #88](https://github.com/OscarGodson/EpicEditor/issues/88))
- Added `reflow(['width'|'height'])` method to automatically refit the editor in the parent ([ticket #160](https://github.com/OscarGodson/EpicEditor/issues/160))

### Updates and Major Bug Fixes
- Fixed character encoding bug causing strange characters over the wire in Chrome ([ticket #184](https://github.com/OscarGodson/EpicEditor/issues/184))
- Fixed Firefox losing space characters ([ticket #178](https://github.com/OscarGodson/EpicEditor/issues/178)) 
- Removed <kbd>alt+o</kbd> key command because it was causing problems on non-western keyboards and replaced with a toggling <kbd>alt+p</kbd>. ([ticket #144](https://github.com/OscarGodson/EpicEditor/issues/144)) thanks [@jeffhill](http://github.com/jeffhill)
- Preview state is now retained when loading after unloading ([ticket #161](https://github.com/OscarGodson/EpicEditor/issues/161))
",3277032
313,False,False,2013-06-14T16:01:39Z,2013-07-07T04:21:52Z,"### New Features
- There is now an `autosave` event so you can tell the difference between manual `save()`s and autosaves. It'll also only fire when the content has been changed since the last save. ([ticket #233](https://github.com/OscarGodson/EpicEditor/issues/233)) thanks [@Gankro](http://github.com/Gankro)
- There's now a `focus()` method which you can use to easily focus on the editor. It handles cross browser differences as well as figuring out what to focus on (editor or previewer). ([ticket #223](https://github.com/OscarGodson/EpicEditor/issues/223))
- If you wanted to hide / disable the fullscreen and/or preview toggle buttons, now you can ([ticket #214](https://github.com/OscarGodson/EpicEditor/issues/214)) thanks [@dobozysaurus](http://github.com/dobozysaurus)
- There is now a `reflow` event you can hook into to know when `reflow()` has been called. ([ticket #210](https://github.com/OscarGodson/EpicEditor/issues/210))
- You can now customize the text of the tooltips that show up when hovering the icons like Preview, Edit, and Fullscreen. Useful for i18n ([ticket #156](https://github.com/OscarGodson/EpicEditor/issues/198)) thanks [@cmtt](http://github.com/cmtt)
- The default Markdown parser, Marked, was upgraded giving you support for GitHub flavored tables, strikethroughs and breaks. ([ticket #197](https://github.com/OscarGodson/EpicEditor/issues/197))
- Using the `textarea` option, you can now sync a textarea with the content of the editor. Useful for when you don't want to setup an AJAX form but want to use EE as a textarea replacement. ([ticket #107](https://github.com/OscarGodson/EpicEditor/issues/107)) ([ticket #140](https://github.com/OscarGodson/EpicEditor/issues/140)) ([ticket #212](https://github.com/OscarGodson/EpicEditor/issues/212))
- Firefox now uses native fullscreen, and EpicEditor also support W3C fullscreen standard ([ticket #22](https://github.com/OscarGodson/EpicEditor/issues/22)) thanks [@nkovacs](http://github.com/nkovacs)

### Updates and Major Bug Fixes
- Fix for Firefox returning `&nbsp;`s in exported file contents in `exportFile` and `getFiles`. ([ticket #204](https://github.com/OscarGodson/EpicEditor/issues/204)) thanks to [@lamplightdev](http://github.com/lamplightdev) for the quick patch and [@Gankro](http://github.com/Gankro) for the refactoring of `getFiles` and `exportFile`.
- Theme paths with `http` or `https` now will ignore the `basePath` option so you link some themes to external CSS. ([ticket #196](https://github.com/OscarGodson/EpicEditor/issues/196))
- Fixed preview content not being updated when `autoSave` is `false`. ([ticket #195](https://github.com/OscarGodson/EpicEditor/issues/195))
- Fixed scrolling the whole web page when you clicked a hash link inside of EpicEditor in IE9 ([ticket #165](https://github.com/OscarGodson/EpicEditor/issues/165))
- Cursor position is no longer lost when switching from preview to edit or vice versa in Firefox ([ticket #139](https://github.com/OscarGodson/EpicEditor/issues/139))
- Fixed bug where, after doing the preview toggle keyboard shortcut in IE9, you'd lose focus on the editor ([ticket #134](https://github.com/OscarGodson/EpicEditor/issues/134))
- Fixed IE9 fullscreen shortcut is triggering menu by changing the shortcut on windows to <kbd>ctrl+alt+f</kbd> ([ticket #82](https://github.com/OscarGodson/EpicEditor/issues/82))

### API Changes

The only API change for this release is that the `save` event will no longer fire for autosaves. If you want to catch both you will need to listen for the `autosave` event as well as the `save` event now. Also note that `save` will fire for implicit manual saves such as `open()` or `importFile()`.

### Behind-the-scenes Updates
- Added .editorconfig file to make it easy for developers to follow code style. ([ticket #220](https://github.com/OscarGodson/EpicEditor/issues/220)) thanks [@hongymagic](http://github.com/hongymagic)
- Added `jake watch` which will automatically rebuild all the editor files if you modify src/\* or if you edit the `README.md`, it'll run `jake docs` for you. (326539a00224cdb0c3ef0fb5005f017abe29fe82)
",3277032
314,False,False,2013-06-20T10:18:10Z,2013-07-07T04:20:35Z,"### Hotfixes
- Fix for Â for every space at reload ([ticket #248](https://github.com/OscarGodson/EpicEditor/issues/248))
",3277032
315,False,False,2019-12-20T05:59:02Z,2019-12-20T07:34:44Z,"This release sees a reduction in overall bytecode size due to compression of the bytecode prelude, saving 7 bytes of bytecode per function for roughly 80% of functions.  The bytecode opcode values are also redefined to group them based on their argument size and format.  Support is also added for the matrix multiplication operator ""@"" (PEP 465).

The .mpy file format moved to version 5 to support the new bytecode encoding, and added support for relocation of native machine code, along with separate rodata and BSS sections.  This allows a MicroPython system to import dynamic native modules, .mpy files that are generated from C code.  Examples of this feature are provided in ""examples/natmod/"" and documentation in ""docs/develop/natmod.rst"".

Some code-size saving optimisations were implemented leading to a reduction in size of minimal firmware: bare-arm reduced by 584 bytes, minimal x86 by 5476 bytes (partly due to changed compiler optimisation flags) and minimal ARM Thumb 2 by 1440 bytes (all measured with gcc 9.2.0).

A new mechanism to freeze scripts into firmware is provided - a frozen manifest - whereby scripts to freeze are listed in a Python file (eg manifest.py).  All ports are updated to use this new feature.

When weak module links are enabled (via MICROPY_MODULE_WEAK_LINKS) an import will now automatically search for the built-in u-variant of a module if the non-u-variant fails (eg searches for ""ufoo"" if ""foo"" fails), so ports no longer provide an explicit list of these.  The unix and windows ports now enable this feature.

A performance benchmarking test suite is added which can be used to compare changes in absolute performance when optimising features, as well as compare across different ports.  See ""tests/run-perfbench.py"".

Bluetooth (BLE only) support is added via the ""ubluetooth"" module and provides the ability to implement the four BLE roles.  The BLE stack is used is Mynewt Nimble and it currently runs on PYBD boards, STM32WB55 MCUs and ESP32 boards.

Support for littlefs filesystems is added through the MicroPython VFS interface, and it works on the unix, stm32, esp8266 and esp32 ports.

A new ""machine.ADC.read_u16()"" method is defined and implemented on stm32, esp8266, esp32 and nrf ports, providing a consistent way to read an ADC that returns a value in the range 0-65535.  This new method should be preferred to the existing ""ADC.read()"" method.

The stm32 port sees support for the new PYBD range of pyboards which include a fully integrated CYW43xx WiFi/BT chip.  USB is enhanced to support VCP+MSC+HID mode and up to 3x simultaneous VCP interfaces.  Support is also added for STM32WBxx MCUs including BLE.  There is a new machine.ADC class which is compatible with other ports, along with a new machine.Timer class that implements a software timer with millisecond resolution and number of active timers only limited by RAM.  Support for littlefs is available by default via uos.VfsLfs2.  Documentation for using littlefs is found in ""docs/reference/filesystem.rst"".

The esp8266 port has switched to use per-board configurations and builds, as well as the new frozen manifest feature.  It also has optional littlefs support (requires a separate build).

The esp32 port has the following new features: native code generation, machine.SDCard, hardware I2C, mDNS queries and responder, esp32.Partition, esp32.RMT, BLE (requires IDF v4), and built-in support for VfsLfs2.  It has switched to use per-board configurations and builds, and frozen manifests.  The default SSL output buffer is resized from 16kiB down to 4kiB to save RAM.

There are new, minimal ports to Microchip SAMDxx microcontrollers, and the bare metal PowerPC architecture.

A code-of-conduct based on the PSF's code is added in CODEOFCONDUCT.md.

The following new Git submodules are added: mbedtls, asf4, tinyusb, mynewt-nimble.  And a new third-party library: littlefs.

A detailed list of changes follows.

py core:
- nativeglue: make private glue funs all static, remove commented code
- nativeglue: remove dependency on mp_fun_table in dyn-compiler mode
- obj: optimise small-int comparison to 0 in mp_obj_is_true
- nlrthumb: save and restore VFP registers s16-s21 when CPU has them
- mkrules.mk: use $(CPP) not $(CC) -E for preprocessor rule
- define EMIT_MACHINE_CODE as EMIT_NATIVE || EMIT_INLINE_ASM
- persistentcode: fix compilation with load and save both enabled
- persistentcode: ensure prelude_offset is always initialised
- asmarm: use __clear_cache on Linux/GCC when creating new asm code
- nlrthumb: check __thumb2__ instead of __ARM_ARCH_6M__
- objgenerator: add missing #if guard for PY_GENERATOR_PEND_THROW
- asmarm: use __builtin___clear_cache instead of __clear_cache
- makeqstrdata.py: allow using \r\n as a qstr if a port requires it
- scheduler: rename sched_stack to sched_queue
- objstringio: guard bytesio_stream_p struct w/ MICROPY_PY_IO_BYTESIO
- objdict: quote non-string types when used as keys in JSON output
- builtinimport: populate __file__ when importing frozen or mpy files
- runtime: allow to override builtins.__import__ with Python func
- modio: call mp_import_name to do resource stream import
- allow to pass in read-only buffers to viper and inline-asm funcs
- showbc: fix off-by-one when showing address of unknown opcode
- implement new sys.atexit feature
- objarray: fix amount of free space in array when doing slice assign
- modmath: implement math.isclose() for non-complex numbers
- introduce MP_UNREACHABLE macro to annotate unreachable code
- nlr: use MP_UNREACHABLE at the end of arch-specific nlr_jump funcs
- compile: improve the line numbering precision for comprehensions
- emitbc: rewrite switch in load_const_tok to reduce code size
- emitbc: make all emit_write_bytecode_* funcs take a stack_adj arg
- objgenerator: move defn of mp_const_GeneratorExit_obj here
- vm: shorten error message for not-implemented opcode
- vm: don't add traceback info for exc's propagated through a finally
- vm: don't add traceback info for exceptions that are re-raised
- add global default_emit_opt variable to make emit kind persistent
- compile: improve the line numbering precision for lambdas
- bc: factor out code to get bytecode line number info into new func
- profile: add initial implementation of sys.settrace feature
- integrate sys.settrace feature into the VM and runtime
- profile: add debugging for sys.settrace feature
- objtuple: allow compatible subclasses of tuple in mp_obj_tuple_get
- modstruct: fix struct.unpack with unaligned offset of native type
- modstruct: fix struct.pack_into with unaligned offset of native type
- binary: change mp_uint_t to size_t for index, size, align args
- bc: fix size calculation of UNWIND_JUMP opcode in mp_opcode_format
- mkenv.mk: add GDB variable
- vm: factor cached map lookup code to inline function
- mkrules.mk: add QSTR_GLOBAL_REQUIREMENTS variable for qstr auto-gen
- persistentcode: enable persistent code saving for Windows ports
- lexer: reorder operator tokens to match corresponding binary ops
- parse: use calculation instead of table to convert token to operator
- compile: use calculation instead of switch to convert token to op
- add support for matmul operator @ as per PEP 465
- bc0: order opcodes into groups based on their size and format
- bc: replace big opcode format table with simple macro
- introduce and use constants for multi-opcode sizes
- split RAISE_VARARGS opcode into 3 separate ones
- nlr.h: factor out constants to specific macros
- emitnative: factor sizeof/offsetof calculations to macros
- rename MP_QSTR_NULL to MP_QSTRnull to avoid intern collisions
- nativeglue: make mp_fun_table fixed size regardless of config
- persistentcode: bump .mpy version to 5
- ringbuf: add helpers for put16/get16
- bc: change mp_code_state_t.exc_sp to exc_sp_idx
- add n_state to mp_code_state_t struct
- compress first part of bytecode prelude
- rework and compress second part of bytecode prelude
- bc: don't include mp_decode_uint funcs when not needed
- compile: disallow 'import *' outside module level
- makeqstrdefs.py: remove unused blacklist
- vm: fix handling of unwind jump out of active finally
- runtime: fix PEP479 behaviour throwing StopIteration into yield from
- emitnative: add support for archs with windowed registers
- emitnative: add support for using setjmp with native emitter
- emitnative: add support for archs that cannot read executable data
- asmxtensa: add support for Xtensa with windowed registers
- add new Xtensa-Windowed arch for native emitter
- persistentcode: make .mpy more compact with qstr directly in prelude
- objtype: add type.__bases__ attribute
- mkrules.mk: add warning/error for invalid frozen config
- objstr: size-optimise failure path for mp_obj_str_get_buffer
- automatically provide weak links from ""foo"" to ""ufoo"" module name
- modarray: rename ""array"" module to ""uarray""
- runtime: reorder some binary ops so they don't require conditionals
- stream.h: add MP_STREAM_POLL_NVAL constant
- nativeglue: remove unused mp_obj_new_cell from mp_fun_table
- objgenerator: remove globals from mp_obj_gen_instance_t
- objgenerator: allow pend_throw to an unstarted generator
- persistentcode: move declarations for .mpy header from .c to .h file
- modsys: report .mpy version in sys.implementation
- emitnative: fix typo, REG_PARENT_ARG_RET should be REG_PARENT_RET
- emitnx86: make mp_f_n_args table match order of mp_fun_kind_t
- objdict: support ujson.dump() of OrderedDict objects
- ringbuf: add peek16 method
- compile: coalesce error message for break/continue outside loop
- builtinimport: raise exception on empty module name
- qstr: raise exception in qstr_from_strn if str to intern is too long
- objstringio: slightly optimize stringio_copy_on_write for code size
- objenumerate: check for valid args in enumerate constructor
- persistentcode: add ability to relocate loaded native code
- nativeglue: add new header file with native function table typedef
- nativeglue: add funcs/types to native glue table for dynamic runtime
- persistentcode: make ARM Thumb archs support multiple sub-archs
- nativeglue: add float new/get functions with both single and double
- dynruntime: add support for float API to make/get floats
- dynruntime: implement uint new/get, mp_obj_len and mp_obj_subscr
- persistentcode: move loading of rodata/bss to before obj/raw-code

extmod:
- add network-level class binding to cyw43 driver
- factor out makefile rules from py.mk to new extmod.mk file
- extmod.mk: integrate mbedTLS so it is built from source
- modussl_mbedtls: allow to build with object representation D
- extmod.mk: include mdns app source in lwIP build
- uos_dupterm: add mp_uos_dupterm_poll to poll all dupterms
- moduwebsocket: make close_resp static array const to not use RAM
- modwebrepl: make prompt/ver static arrays const to not use RAM
- modwebrepl: add config option to put filebuf[512] on stack/bss
- modlwip: for TCP send keep trying tcp_write if it returns ERR_MEM
- modlwip: use mp_sched_schedule to schedule socket callbacks
- modlwip: implement raw sockets for lwIP
- modure: make regex dump-code debugging feature optional
- moducryptolib: use ""static"" not ""STATIC"" for inline functions
- give vars/funcs unique names so STATIC can be set to nothing
- modujson: support passing bytes/bytearray to json.loads
- crypto-algorithms: add source to header and populate copyright
- vfs_posix: include stdio.h for declaration of function 'rename'
- nimble: add nimble bindings
- modbluetooth: add low-level Python BLE API
- modbluetooth_nimble: implement modbluetooth API with Nimble
- modbluetooth_nimble: use random addr if public isn't available
- modbluetooth: allow MP_BLUETOOTH_MAX_ATTR_SIZE in board config
- modbluetooth: allow config of scan interval/window
- modbluetooth: use us instead of ms for advertising interval
- modbluetooth: increase maximum connections from 1 to 4
- modbluetooth: clear gap_advertise payload when data is empty
- modbluetooth: fix order of params to IRQ_GATTS_WRITE event
- modbluetooth: improve ringbuf handling
- modbluetooth: make gap_disconnect not raise when disconnected
- modbluetooth: in gap_advertise only accept None to stop adv
- re1.5: support escaping within RE classes
- modbluetooth: make UUID support the buffer protocol
- modbluetooth: persist reference to NimBLE service instances
- modbluetooth_nimble: use `data_alloc` length to truncate writes
- modbluetooth: rename module to ""ubluetooth""
- factor out block-device struct to make independent of fatfs
- vfs_blockdev: factor out block device interface code
- vfs_blockdev: add extended read/write methods
- add VFS littlefs bindings
- vfs: rename BP_IOCTL_xxx constants to MP_BLOCKDEV_IOCTL_xxx
- vfs: add MP_BLOCKDEV_IOCTL_BLOCK_ERASE constant
- modbluetooth: add gatts_set_buffer
- vfs_lfs: allow compiling in VfsLfs1 and VfsLfs2 separately
- modlwip: unconditionally return POLLHUP when polling new socket
- modlwip: make socket poll return POLLNVAL in case of bad file
- modlwip: unconditionally return POLLHUP/POLLERR when polling
- modussl_mbedtls: fix getpeercert to return None if no cert avail
- modussl_mbedtls: check for invalid key/cert data
- nimble: remove unneeded nimble_sprintf wrapper function
- nimble: factor out stm32-specific HCI UART RX/TX code
- modbtree: make FILEVTABLE const to put it in ROM
- convert nlr_raise(mp_obj_new_exception_msg(x)) to mp_raise_msg(x)
- vfs: add autodetect of littlefs filesystem when mounting
- consolidate FAT FS config to MICROPY_VFS_FAT across all ports
- modbluetooth: prioritise non-scan-result events
- modbluetooth: create UUID from bytes and allow comparison ops
- modbluetooth_nimble: make gap_scan_stop no-op if no scan ongoing
- modbluetooh_nimble: fix UUID conversion for 16 and 32 bit values
- modbluetooth: simplify management of pre-allocated event data
- vfs_lfs: pass flag along to ioctl when init'ing bdev for lfs
- vfs_lfs: fix bug when passing no args to constructor and mkfs
- modbluetooth: simplify how BLE IRQ callback is scheduled
- modbluetooth: remove limit on data coming from gattc data input
- modbluetooth: add optional 4th arg to gattc_write for write mode
- modbluetooth: allow setting ringbuf size via BLE.config(rxbuf=)
- modbtree: use mp_printf instead of printf
- add dynamic-runtime guards to btree/framebuf/uheapq/ure/uzlib
- webrepl: move webrepl scripts to common place and use manifest

lib:
- cmsis: upgrade to CMSIS 5.5.1
- netutils: add DHCP server component
- add new submodule for mbedtls, currently at v2.17.0
- utils/sys_stdio_mphal: add support to poll sys.stdin and sys.stdout
- add asf4 as a submodule
- add tinyusb as a submodule
- stm32lib: update library for updated H7xx, new L0xx, new WBxx
- lwip: update lwIP to v2.1.2, tag STABLE-2_1_2_RELEASE
- mynewt-nimble: add Apache mynewt nimble as a submodule
- littlefs: add littlefs v1.7.2 source
- littlefs: add littlefs v2.1.3 source
- littlefs: add README describing origin and how to gen lfs1/lfs2
- libc/string0: add simple implementations of strspn and strcspn

drivers:
- add driver for CYW43xx WiFi SoCs
- memory/spiflash: add support to put SPI flash in sleep mode
- cyw43: add low-level CYW43xx Bluetooth HCI UART driver
- onewire/ds18x20.py: add support for DS1822 sensor
- sdcard: raise exception on timeout of readinto
- wiznet5k: allow selecting maximum fixed buffer size for MACRAW

tools:
- mpy-tool.py: fix linking qstrs in native code, and multiple files
- mpy-tool.py: fix linking of qstr objects in native ARM Thumb code
- add uf2conv.py from Microsoft/uf2 repository
- pyboard.py: add filesystem commands to ls/cat/cp/rm remote files
- mpy-tool.py: force native func alignment to halfword/word on ARM
- mpy-tool.py: add initial support for frozen with settrace
- mpy-tool.py: fix freezing of non-bytecode funcs with settrace
- make-frozen.py: allow to run with no directory passed in
- add mechanism to provide a manifest of frozen files
- makemanifest.py: eval relative paths w.r.t. current manifest file
- mpy-tool.py: use ""@progbits #"" attribute for native xtensa code
- makemanifest.py: follow symlinks when freezing linked directories
- makemanifest.py: skip freezing unsupported files with warning
- makemanifest.py: use sys.executable when invoking Python scripts
- mpy-tool.py: support qstr linking when freezing Xtensa native mpy
- mpy-tool.py: add ability to merge multiple .mpy files into one
- mpy_ld.py: add new mpy_ld.py tool and associated build files
- mpy-tool.py: raise exception if trying to freeze relocatable mpy
- pyboard.py: support executing .mpy files directly
- tinytest-codegen.py: add extra newline and result message

tests:
- rename ""bench"" tests to ""internal_bench"" and run-internalbench.py
- add performance benchmarking test-suite framework
- perf_bench: add some benchmarks from python-performance
- perf_bench: add some miscellaneous performance benchmarks
- perf_bench: add some viper performance benchmarks
- stress/recursive_iternext.py: increase large depth to 5000
- run-perfbench.py: add --emit option to select emitter for tests
- add tests for overriding builtins.__import__
- misc/sys_atexit: add test for new sys.atexit feature
- unix: update extra_coverage expected output with new atexit func
- extmod: split json.loads of bytes/bytearray into separate test
- split out test for optimisation level and line-no printing
- add tests for sys.settrace feature
- basics: add test for matmul operator
- update tests for changes to opcode ordering
- micropython: add test for native generators
- basics: add test for getting name of func with closed over locals
- basics: add test for throw into yield-from with normal return
- perf_bench: add bm_fft test
- run-perfbench.py: show error when truth check fails
- run-perfbench.py: skip complex tests if target doesn't enable it
- cpydiff: fix typo in types_bytes_keywords.py doc comments
- rename ""array"" module to ""uarray""
- extmod: add littlefs tests
- extmod: add test for blockdev with standard and extended protocol
- basics: use str.format instead of % for formatting messages
- basics/builtin_dir.py: look for ""version"" in dir(sys)
- add feature check for bytearray and skip corresponding tests
- basics: split out specific bytearray tests to separate files
- basics: use bytes not bytearray when checking user buffer proto
- add feature check for slice and skip corresponding tests
- basics: split out specific slice tests to separate files
- run-tests: add misc list of tests that use slice, to skip them
- basics: automatically skip tests that use str/bytes modulo-format
- add feature check for uio module and skip corresponding tests
- basics: split sys.exit test to separate file so it can be skipped
- extmod: add test for ussl when passing in key/cert params
- stress: add test for maximum length limit of qstrs
- import: add test for importing viper code with additional flags
- add script to run dynamic-native-module tests
- add .exp files for basics/parser and import/import_override
- stress/qstr_limit: tune params to run with stm32 port
- basics/memoryview_itemsize: make portable to 32- and 64-bit archs
- extmod/vfs_lfs_error: use small ints in seek error test
- pyb: refactor pyboard tests to work on PYBv1, PYBLITEv1 and PYBD

mpy-cross:
- do not automatically build mpy-cross, rather do it manually
- main: only accept full emit cmdline options if native enabled
- make mpconfigport.h compatible with msvc compiler
- add msvc build of mpy-cross
- set number of registers in nlr_buf_t based on native arch
- enable Xtensa-Windowed native emitter
- support armv7em, armv7emsp, armv7emdp architectures
- README.md: add notes about -march and -O

all ports:
- provide mp_hal_stdio_poll for sys.stdio polling where needed
- add new make target ""submodules"" which inits required modules

minimal port:
- use soft float for CROSS=1 Cortex-M4 target
- frozentest: recompile now that mpy version has changed
- set CSUPEROPT=-Os to get minimal firmware size

unix port:
- mpconfigport.mk: update comment about TLS implementations
- unix_mphal: use CLOCK_MONOTONIC for ticks_ms/us when available
- enable sys.atexit, triggered after the main script ends
- main: only accept full emit cmd-line options if native enabled
- coverage: add coverage tests for ringbuf
- convert to use FROZEN_MANIFEST to specify frozen code
- enable module weak links
- enable uos.VfsLfs1, uos.VfsLfs2 on coverage build
- modtermios: fix output speed setter in tcsetattr

windows port:
- mpconfigport.h: define empty MP_WEAK symbol
- mpconfigport.h: don't define restrict/inline/alignof for C++
- msvc: treat compiler warnings as errors
- Makefile: make use of CFLAGS_EXTRA, LDFLAGS_EXTRA and SRC_MOD
- msvc: remove unneeded definitions for qstr generation
- msvc: move build options from .vcxproj to .props files
- msvc: enable overriding directories used in the build
- msvc: change the way sources are listed
- default to binary mode for files
- enable module weak links

qemu-arm port:
- add testing of frozen native modules
- convert to use FROZEN_MANIFEST to specify frozen code
- add ldscript dependency in the final firmware.elf target
- let tinytest.o be built by standard build rules
- Makefile: allow overriding CROSS_COMPILE from another makefile

stm32 port:
- usb: refactor CDC VCP code to enable N CDC interfaces
- usb: support up to 3 VCP interfaces on USB device peripheral
- boards/make-pins.py: allow pins.csv to skip or hide board-pin name
- boards/pllvalues.py: search nested headers for HSx_VALUE defines
- boards: add board definition files for PYBD -SF2, -SF3, -SF6
- modpyb: add pyb.country() function to set the country
- extint: add extint_set() function for internal C access to EXTI
- mphalport: add support for having MAC in OTP region
- add low-level SDIO interface for cyw43 driver
- integrate in the cyw43 driver and network.WLAN class
- boards/PYBD_SFx: enable CYW43 WLAN driver
- modnetwork: replace generic netif NIC polling with specific code
- integrate optional mbedTLS component for ussl module
- boards/PYBD_SFx: enable ussl module using mbedTLS
- support optional lwIP mDNS responder
- lwip_inc: update to enable mDNS, TCP listen backlog, faster DHCP
- usbd_msc: rework USBD MSC code to support multiple logical units
- usbd_msc: provide custom irquiry processing by MSC interface
- usbd_msc: provide Mode Sense response data in MSC interface
- usb: use ARG_xxx enums to access kw args in pyb_usb_mode
- usb: add ""msc"" kw-arg to pyb.usb_mode to select MSC logical units
- usbd_msc: allow to compile when USB enabled and SD card disabled
- in link script, define start of stack separately from heap end
- boards: enable ussl module via mbedtls for boards with network
- Makefile: print info messages about use of mboot/QSPI flash
- enter bootloader via a system reset
- boards/pllvalues.py: support HSx_VALUE defined without uint32_t
- boards: add stm32??xx_hal_conf_base.h files with common settings
- boards: rework all stm32??xx_hal_conf.h files to use common code
- usb: fix regression with auto USB PID value giving PID=0xffff
- boards: optimise flash and RAM allocation for L4 boards
- mpu: add helper functions for configuring MPU
- eth: use MPU helper functions to configure MPU for ETH use
- sdram: use MPU helper functions to configure MPU for SDRAM use
- qspi: use MPU to allow access to valid memory-mapped QSPI region
- qspi: force a reset of the QSPI peripheral when initialising it
- qspi: handle bus acquisition
- powerctrl: add hooks for a board to perform actions on sleep/wake
- boards/PYBD_SFx: put SPI flash to sleep during sleep modes
- mpconfigport.h: enable useful networking modules if lwIP enabled
- usb: add support to auto-detect USB interface, either FS or HS
- usb: add ""port"" keyword argument to pyb.usb_mode, to select FS/HS
- spi: factor out code to calculate SPI source frequency
- extint: simplify bitband support config for different MCUs
- modmachine: make RTC class available in machine module
- boards/PYBD_SF2: put mbedtls library code in external QSPI flash
- update components to work with new H7xx HAL
- Makefile: remove Wno-attributes for ll_usb HAL file
- Makefile: use startup_stm32*.s file from stm32lib
- boards: remove startup_stm32*.s files now they are in stm32lib
- mpu: include MPU functions when ETH is enabled
- lwip_inc: define LWIP_NO_CTYPE_H=1 to use lwIP ctype funcs
- modmachine: disable IRQs before entering bootloader
- boards/PYBD_SFx: configure EN_3V3 pin as output on boot
- sdcard: add hook for a board to power on SD/MMC
- boards/PYBD_SFx: automatically turn on EN_3V3 when powering SD/MMC
- add initial support for STM32L0xx MCUs
- boards: add MCU support files for STM32L072
- mpconfigport.h: make ""framebuf"" module configurable by a board
- boards/NUCLEO_L073RZ: add definition files for new board
- powerctrl: move L0's SystemClock_Config to powerctrlboot.c file
- powerctrl: move F0's SystemClock_Config to powerctrlboot.c
- remove SystemInit funcs, use stm32lib versions instead
- boards/NUCLEO_F446RE: enable DAC
- add support for STM32L452 MCUs
- boards/NUCLEO_L452RE: add definition files for new board
- boards/NUCLEO_F413ZH: remove STARTUP_FILE, it's defined globally
- mboot: make _estack an array to avoid compiler warnings
- mboot: remove use of BSRRL/H for H7 MCUs due to stm32lib update
- mboot: use STARTUP_FILE from stm32lib
- mboot: update dependencies to enable parallel build with -j
- boards/B_L072Z_LRWAN1: add definition files for new board
- gccollect: always use MP_STATE_THREAD(stack_top) to get stack top
- usb: add config options to disable USB MSC and/or HID
- usbd_cdc_interface: make CDC TX/RX buffer sizes configurable
- add support for USB on L0 MCUs
- powerctrlboot: increase SYSCLK to 32MHz for L0 MCUs
- mphalport: fix GPIO clock enable for L0 MCUs
- Makefile: allow a board to disable float support
- boards/B_L072Z_LRWAN1: enable USB VCP support
- boards/STM32F769DISC: fix length of FLASH_APP section
- make-stmconst.py: allow more variation in parens and int-suffix L
- add initial support for STM32WBxx MCUs
- boards: add MCU support files for STM32WB55
- boards/NUCLEO_WB55: add definition files for new board
- boards/USBDONGLE_WB55: add definition files for new board
- flashbdev: support internal filesystem on STM32F722/23/32/33
- boards/stm32f722.ld: provide memory regions for internal FS
- boards/NUCLEO_F722ZE: add definition files for new board
- dma: fix re-start of DMA stream by clearing all event flags
- usbd_hid_interface: rewrite USB HID interface code
- boards/xxx_WB55: enable USB HID now that it works on WB MCUs
- usbd_hid_interface: include extra header to build with threading
- lwip_inc: enable raw socket type
- mpconfigport.h: enable lwIP raw sockets
- sdcard: support configuring the SD/MMC bus width to 1 or 4 bits
- modpyb: support building with PY_PYB_LEGACY on and HW_USB_HID off
- usbd: introduce MICROPY_HW_USB_IS_MULTI_OTG to simplify USB config
- usbd: support USB device mode on STM32L432 MCUs
- boards/NUCLEO_L432KC: add config for USB VCP support
- usbd: make USB device FIFO sizes dynamically configurable
- i2c: fix generation of restart condition for hw I2C on F0/F7
- mphalport: put PYBD specific MAC code in board specific file
- mboot/Makefile: define ""BUILDING_MBOOT"" when building mboot
- boards/PYBD_SF2: exclude certain things when building mboot
- extint: fix EXTI mapping of PVD and RTC events for H7 MCUs
- stm32_it: include correct EXTI interrupt handlers for L0 MCUs
- dma: fix DMA config for L0 MCUs
- powerctrl: fix machine.bootloader() for L0 MCUs
- machine_adc: add machine.ADC class
- machine_adc: improve operation of ADC for H7, L4 and WB MCUs
- boards/stm32wb55_af.csv: fix ADC pin-channel function mapping
- mboot: support boards with only two LEDs
- boards/NUCLEO_L073RZ: fix typo in MCU name
- boards/MIKROE_CLICKER2_STM32: add MikroElektronika Clicker2 board
- boards/STM32F769DISC: fix number of SDRAM row bits
- board/NUCLEO_F746ZG: enable Ethernet periph, lwip and ussl
- usb: add support for VCP+MSC+HID mode, incl 2xVCP and 3xVCP
- usb: verify number of used endpoints doesn't exceed maximum
- lwip_inc: allocate additional MEMP_SYS_TIMEOUT when mDNS enabled
- lwip_inc: enable LWIP_NETIF_EXT_STATUS_CALLBACK for mDNS
- machine_adc: fix build for F4 and L4 MCUs that only have ADC1
- modusocket: fix NULL deref when accept() an unbound socket
- machine_i2c: add ability to specify I2C(4) by name
- can: factor CAN driver into low-level and Python bindings
- add support for FDCAN peripheral, exposed as pyb.CAN
- boards/NUCLEO_H743ZI: enable FDCAN on this board
- use mp_printf with MICROPY_ERROR_PRINTER for uncaught exceptions
- can: guard header file by MICROPY_HW_ENABLE_CAN
- usbd_cdc_interface: add CTS flow control option for USB VCP
- support disabling the compiler
- powerctrlboot: fix clock and PLL selection for HSI48 on F0 MCUs
- powerctrlboot: add support for HSI at 8MHz on F0 MCUs
- uart: add RTS/CTS pin configuration support to UART4
- provide port-specific implementation for Nimble on STM32
- mpconfigport.h: add modbluetooth module to stm32
- boards/PYBD: enable BLE for Pyboard D
- system_stm32: support selection of HSE and LSI on L4 MCUs
- boards: enable MICROPY_HW_RTC_USE_LSE on L4 boards
- {adc,machine_adc}: change ADC clock and sampling time for F0 MCUs
- usbdev: fix compile error if MICROPY_HW_USB_CDC_NUM is set to 2
- boards/PYBD_SF2: put nimble library in external QSPI XIP flash
- extract port-specific Nimble implementation
- mboot: add option to automatically reset when USB is disconnected
- sdcard: support boards with no SD card detect pin
- use hardware double sqrt on F7/H7 MCUs
- boards: add new board ADAFRUIT_F405_EXPRESS
- convert to use FROZEN_MANIFEST to specify frozen code
- adc: update ADC driver to work with the new H7 HAL
- adc: remove unused macro and channel check, and fix spacing
- adc: use IS_CHANNEL_INTERNAL macro to check for internal channels
- adc: fix sampling for internal channels on H7 MCUs
- mpu: save and restore the IRQ state when configuring MPU
- accel: rename MMA I2C macro constants to make it generic
- accel: add support for KXTJ3
- boards: add NADHAT_PYB405 board
- accel: fix Accel.read() method so it does read a byte
- powerctrlboot: fix config of systick IRQ priority on F0/L0/WB MCU
- sdram: fix to use new mpu_config_start/mpu_config_end signature
- Makefile: only enable hardware sqrt on parts that support it
- timer: fix Timer.freq() calc so mult doesn't overflow uint32_t
- add soft timer implementation, using SysTick at 1ms resolution
- add machine.Timer with soft timer implementation
- add support for RF coprocessor on WB55 MCUs
- boards: enable support for bluetooth on WB55 boards
- mpthreadport: include runtime.h to get defn of mp_raise_msg
- boards/stm32f405_af.csv: fix typo in ETH_RMII_REF_CLK on PA1
- nimble_hci_uart.c: prevent scheduler running during CYW-BT wakeup
- generalise flash mounting code so it supports arbitrary FS
- storage: make pyb.Flash configurable, and support ext block proto
- main: auto detect block device used for main filesystem
- moduos: add VfsLfs1 and VfsLfs2 to uos module, if enabled
- boards: enable LFS2 on PYBv1.x and PYBD boards
- storage: change storage_read/write_blocks to return int type
- storage: make start/len args of pyb.Flash keyword only
- qstrdefsport.h: remove unused qstrs and make USB ones conditional
- boards/NUCLEO_L073RZ: skip board-pin names for CPU only pins
- main: fix auto creation of pyb.Flash on boot with kw-only args
- mpconfigport.h: use IRQ_PRI_PENDSV to protect bluetooth ringbuf
- uart: add support for UART4/5 on L0 MCUs
- boards/xxx_WB55: enable littlefs2 on WB55 boards
- main: fix SKIPSD file detection so SD card is mounted by default
- Makefile: enable max buffer size on W5200 NIC when used with lwIP
- modusocket: handle case of NULL NIC in socket ioctl
- boards/PYBD_SF2: configure LEDs as inverted, for LED.intensity()
- boards/NUCLEO_F767ZI: add pins and config for using an SD card
- boards/NUCLEO_F767ZI: update pins, peripherals and total flash
- boards/NUCLEO_H743ZI: add extra pins and peripheral definitions
- timer: add missing TIM 1/15/16/17 IRQ handlers for H7 MCUs
- boards/PYBD: include webrepl helper scripts in frozen manifest

esp8266 port:
- uart: fix invalid ringbuf name when event driven REPL enabled
- provide custom machine_time_pulse_us that feeds soft WDT
- mpconfigport.h: enable lwIP raw sockets
- machine_uart: allow remapping UART TX/RX pins from 1/3 to 15/13
- put new profile code in iROM
- machine_adc: rename pyb_adc_* to machine_adc_*
- machine_adc: add read_u16 method and refactor
- add per-board configs, following other ports
- modules/ntptime.py: always close socket, and set day-of-week
- convert to use FROZEN_MANIFEST to specify frozen code
- allow building without a manifest
- boards: add manifest_release.py with files for a release
- modules/flashbdev.py: support extended block protocol
- moduos: add optional support for VfsLfs1 and VfsLfs2

esp32 port:
- machine_timer: reuse Timer handles, deallocate only on soft-reset
- add machine.SDCard class using built-in HW SD/MMC controller
- update to use ESP IDF v3.3-beta3
- modnetwork: still try to reconnect to WLAN even with AUTH_FAIL
- Makefile: include all driver/*.c source files in the build
- network_ppp: add ppp_set_usepeerdns(pcb, 1) when init'ing iface
- add support for hardware I2C
- Makefile: fix path expansion for ESPIDF_DRIVER_O
- Makefile: put OBJ and LIB rule additions in gen_espidf_lib_rule
- Makefile: simplify include of IDF source by using wildcards
- pin MicroPython tasks to a specific core
- Makefile: include CFLAGS_EXTRA in CFLAGS definition
- network_ppp: add authentication support to the PPP interface
- add support for mDNS queries and responder
- modules: on initial setup mount internal flash at root
- add per-board configs, following other ports
- add esp32.Partition class to expose partition and OTA funcs
- add 'config' function to network.LAN, reusing network.WLAN
- Makefile: fix subst->patsubst in ESPIDF_BOOTLOADER_SUPPORT_O
- machine_adc: add ADC.read_u16() method
- update to use ESP IDF v3.3
- boards/TINYPICO: switch to use QIO and 80MHz for SPI interface
- add VFS FAT partition to partitions.csv and mount it as the FS
- add support for ESP32-D2WD with 2MiB internal flash
- modules/inisetup.py: use bdev.ioctl instead of bdev.SEC_SIZE
- Makefile: add SDKCONFIG_H to QSTR_GLOBAL_REQUIREMENTS
- support building with ESP IDF 4.0-beta1
- add check to Makefile for pyparsing version
- add check to Makefile that the toolchain is in PATH
- main: use both 3.3 and 4.0 config vars to enable SPIRAM
- Makefile: fix printing of supported git hash
- enable native emitter
- implement BLE using Nimble from IDF 4.x
- boards: enable BLE by default when building with IDF 4.x
- add 4.x version of IDLE WDT config
- run NimBLE on the app core
- convert to use FROZEN_MANIFEST to specify frozen code
- machine_uart: add ability to invert UART pins
- boards: split out CPU frequency config, make 160MHz the default
- machine_hw_spi: fix exception msg when host is already in use
- Makefile: add correct arch to MPY_CROSS_FLAGS for native code
- remove unused ""esponewire.c"" in favour of extmod/modonewire
- esp32_partition: support extended block protocol
- moduos: enable uos.VfsLfs2 for littlefs filesystems
- boards/sdkconfig.base: resize SSL output buffer from 16 to 4kiB
- rtc: set system microseconds when setting time via RTC.datetime()
- machine_rtc: make RTC.memory size and availability configurable
- machine_rtc: reduce memory footprint of user mem functionality
- boards: enable ULP in base sdk configuration
- boards/TINYPICO: add tinypico.py, dotstar.py with custom manifest
- esp32_rmt: add initial support for RMT peripheral

javascript port:
- enable support for frozen bytecode via FROZEN_MPY_DIR

nrf port:
- led: adjust how board LEDs are defined
- clean up source by removing tabs, trailing spaces, non-ASCII chars
- machine/adc: add ADC.read_u16() method
- add ADC channel mapping to alt function table
- machine/adc: allow to pass a Pin object in to ADC constructor
- machine/adc: fix mapping of ADC channel to pin
- boards/make-pins.py: fix gen of board pins to use correct index
- Makefile: add support for flashing with a Black Magic Probe
- boards: add Particle Xenon board configuration (an nRF52840)
- boards: add board definition for uBlox Nina B1 series BLE modules
- i2c: add support for TWIM (EasyDMA)
- temp: move module configuration guard
- uart: add support for UARTE (EasyDMA)
- flash: update flash driver to use nrfx_nvmc driver
- led: expose public API for LED manipulation
- main: update the way the LED is used on startup
- add support to activate MICROPY_PY_SYS_STDFILES
- device: correct SPIM3 IRQ handler entry for nrf52840
- add tinyusb support for nrf52840
- boards: add support for pca10059
- add nrf9160 base support
- boards: add nrf9160 pca10090 board
- main: execute boot.py/main.py frozen modules without a file system
- boards/particle_xenon: enable USB CDC on Particle Xenon board

powerpc port:
- add initial port to bare metal PowerPC arch

samd port:
- add new port to Microchip SAMDxx microcontrollers
- make common linker scripts, rename board.mk to mpconfigboard.mk
- boards: add Adafruit Feather M0 Express board configuration
- boards: add Mini SAM M4 board configuration
- add minimum config for Atmel SAMD21-XPLAINED-PRO board

zephyr port:
- main: use mp_stack API instead of local pointer for stack top

docs:
- machine: add initial docs for new machine.SDCard class
- library/framebuf: add missing module reference in example code
- library/sys: add documentation for sys.atexit function
- pyboard: update name of mounted volume to match code
- pyboard: clarify initial files on pyboard and fix up formatting
- library: document that sys.version_info returns a 3-tuple only
- pyboard: emphasize the instructions for making a USB mouse
- reference/speed_python: update that read-only buffers are accepted
- reference/speed_python: add missing self to var caching example
- library/pyb.DAC.rst: correct frequency for triangle mode output
- rename machine.ADC docs to machine.ADCWiPy
- library: specify new machine.ADC class
- library/pyb.rst: update docs for pyb.usb_mode() function
- library/pyb.rst: update pyb.usb_mode() to mention VCP+MSC+HID
- library/pyb.USB_VCP.rst: add info about id and flow params
- develop/qstr.rst: add documentation for string interning
- library/bluetooth: add initial BLE documentation
- reference/glossary.rst: add new terms and reduce complexity of old
- library/bluetooth.rst: clarify gap_advertise adv_data behavior
- library/bluetooth.rst: explain how to increase char buffer size
- library/bluetooth.rst: fix typo in HR/UART services example
- esp8266/tutorial: make http_get sample function self contained
- library: clarify relation between machine and port-specific mods
- esp8266: add ntptime usage to esp8266 quickref
- fix spelling in various parts of the docs
- wipy/tutorial: link Blynk examples to the official library
- library: rename ""array"" module to ""uarray""
- library/bluetooth: rename to ""ubluetooth""
- move ubluetooth under ""MicroPython-specific libraries""
- library: add documentation for extended block device protocol
- library/ubluetooth: add docs for gatts_set_buffer
- conf.py: fix path to favicon.ico
- templates/topindex.html: replace usage of deprecated defindex.html
- library/machine.SDCard.rst: fix various typos
- library/ubluetooth: fix name and link to FLAG_xxx constants
- reference: add docs describing use of pyboard.py
- library: add docs for pyb.Flash class
- add littlefs docs and a filesystem tutorial
- reference/filesystem: fix typo in block device code example
- reference/filesystem: add note and example about using filesystem
- library/ubluetooth: add note about API being under development
- library/uos: add notes and links about littlefs failures
- library/uos.rst: clarify why the extended interface exists
- esp8266/quickref: add note that machine.RTC is not fully supported
- reference: add documentation describing use of .mpy files
- develop: add documentation on how to build native .mpy modules
- esp32: add quickref and full docs for esp32.RMT class

travis:
- build PYBD_SF2 board as part of the stm32 job
- selectively fetch git submodules only when needed
- build esp8266 firmware as part of Travis CI
- build esp32 firmware as part of Travis CI
- enable performance benchmark tests on standard unix build
- add samd port to Travis build
- build stm32 mboot for PYBD_SF6 as part of CI
- switch unix stackless build to use clang
- build an stm32 board with threading enabled to test it with CI
- add new job to test unix port with sys.settrace enabled
- add ESP32 build with IDF v4
- build more stm32 boards to cover all supported MCUs
- build unix nanbox with PYTHON=python2
- add BLE submodules to ESP32 IDF4 build
- add esp8266 GENERIC_512K build to CI
- use ""make submodules"" to init required modules for each port
- add job to build and test unix minimal port
- add tests for building and importing dynamic native modules
- build urandom native module in coverage job

examples:
- bluetooth: add basic BLE peripheral examples
- bluetooth: use UUIDs directly to add services to adv payload
- bluetooth/ble_uart_peripheral.py: add usage demo
- embedding: replace symlink of mpconfigport.h with real file
- bluetooth/ble_uart_peripheral: use append mode for RX char
- embedding: remove obsolete fatfs files from build
- bluetooth: add helpers for decoding advertising payloads
- bluetooth: add example for reading temperature sensor
- natmod: add btree example
- natmod: add uheapq example
- natmod: add uzlib example
- natmod: add framebuf example
- natmod: add ure example
- natmod: add features1 and features2 examples
- natmod: add urandom native module example
- network: add testing key/cert to SSL HTTP server example
- natmod: add very simple features0 example to compute factorial

miscellaneous:
- top: add CODEOFCONDUCT.md document based on the PSF code of conduct
- gitignore: put build-*/ pattern in top-level gitignore file
- gitattributes: mark *.a files as binary
",15337142
316,False,False,2019-05-29T06:39:45Z,2019-05-29T07:03:10Z,"In this release the mpy file format has been moved to version 4 and has some significant improvements: mpy file size is reduced on average by about 35%, loading time of mpy files is reduced by about 40%, and they now have support to save native, viper and inline assembler code (or machine code generated from any other source).  Size reduction of mpy files was achieved by adding a qstr window to reuse past qstrs when encoding them, by packing qstrs directly in the bytecode, and by defining a static qstr set.

Some VM opcodes were also changed to fix a bug when doing a break/continue out of a finally block, and to make some simplifications.  In particular POP_BLOCK and POP_EXCEPT opcodes were replaced with POP_EXCEPT_JUMP.

Most uppercase macros have been converted to lowercase to make a more consistent C API, including all MP_OBJ_IS_xxx and MP_xxx_SLOT_IS_FILLED macros.

The default PYTHON makefile variable is now changed from ""python"" to ""python3"", but Python 2 is still supported via ""make PYTHON=python2"".

The mpy-cross compiler supports the new mpy version 4 and has new command line options: ""-march=<arch>"" to select the native emitter, and ""--version"" to print the MicroPython version and the mpy version.  Also mpy-tool.py has support for freezing native code.

A module system for external, user C modules has been implemented and documentation for this is available in the new ""docs/develop"" section.

A new ""javascript"" port has been added which targets JavaScript as the machine via Emscripten.  This allows to run MicroPython as an application within node.js, and to run it within a browser (among other things).

All bare-metal ports have the following improvements: machine.sleep() is now machine.lightsleep(), and both lightsleep() and deepsleep() now take an optional argument which is the maximum time to sleep in milliseconds.  These ports also now allow freezing of boot.py and main.py using the usual methods.  And a new I2C method i2c.writevto(addr, vect) is added which can be used to write a tuple/list of buffers all at once to an I2C device.

The stm32 port now has a fully integrated Ethernet MAC driver (see the network.LAN class) using lwIP for the TCP/IP stack, and sockets were made significantly more robust.  Support for F413 MCUs was added.  There are also some minor user-facing changes to this port:
- machine.UART (and pyb.UART) now defaults to timeout=0 (was 1000ms) which gives UARTs a non-blocking behaviour.
- The USB REPL is now configurable using uos.dupterm, and by default pyb.USB_VCP(0) is put on dupterm slot 1 before boot.py is executed.  To disable the default REPL use: uos.dupterm(None, 1).
- pyb.DAC(id) will now only reset the DAC the first time it is called; to get the old behaviour pass the bits parameter like: pyb.DAC(id, bits).
- pyb.DAC.noise() and pyb.DAC.triangle() now output at full scale.
- The system will not recreate boot.py if it's missing (it will only create it if the filesystem is corrupt, or when doing a factory reset).

For the esp32 port, the build process has been updated to align better with the ESP IDF and now uses sdkconfig to configure features.  Dual core mode is now enabled by default, SPIRAM is in memory-mapped mode so all of it can be used for the MicroPython heap, there is support to change the CPU frequency, and the WDT now panics and resets the device if it times out.

A detailed list of changes follows.

py core:
- remove calls to file reader functions when these are disabled
- add optional support for 2-argument version of built-in next()
- compile: swap order of pop_block/pop_except in ""except as"" handler
- warning: support categories for warnings
- builtinhelp: only print help re FS modules if external import enabled
- downcase all MP_OBJ_IS_xxx macros to make a more consistent C API
- downcase MP_xxx_SLOT_IS_FILLED inline functions
- mkenv.mk: change default PYTHON variable from ""python"" to ""python3""
- qstr: evaluate find_qstr only once then pass to Q_GET_HASH macro
- obj.h: remove obsolete mp_obj_new_fun_viper() declaration
- objfun: make fun_data arg of mp_obj_new_fun_asm() a const pointer
- eliminate warnings about unused arguments when debugging disabled
- compile: fix handling of unwinding BaseException in async with
- compile: add optimisation to compile OrderedDict inplace
- objexcept: fix hash of exc str created in mp_obj_new_exception_msg
- py.mk: update lwip build config to work with latest lwip version
- fix VM crash with unwinding jump out of a finally block
- vm: remove currently_in_except_block variable
- replace POP_BLOCK and POP_EXCEPT opcodes with POP_EXCEPT_JUMP
- persistentcode: add a qstr window to save mpy files more efficiently
- persistentcode: pack qstrs directly in bytecode to reduce mpy size
- persistentcode: define static qstr set to reduce size of mpy files
- add independent config for debugging sentinel object values
- emitnative: consolidate where HASCONSTS is set to load-const-obj fun
- emitnative: provide concentrated points of qstr emit
- emitnative: adjust accounting of size of const_table
- emitglue: remove union in mp_raw_code_t to combine bytecode & native
- add support to save native, viper and asm code to .mpy files
- persistentcode: bump .mpy version to 4
- allow registration of modules at their definition
- implement a module system for external, user C modules
- update and rework build system for including external C modules
- move mp_native_type_from_qstr() from emitnative.c to nativeglue.c
- nativeglue: rename native convert funs to match other native helpers
- compile: add support to select the native emitter at runtime
- compile: support multiple inline asm emitters
- compile: check that arch is set when compiling native, viper or asm
- runtime: remove long-obsolete MICROPY_FSUSERMOUNT init code
- scheduler: convert micropythyon.schedule() to a circular buffer
- nlrthumb: add support for iOS where the C func is _nlr_push_tail
- makedefs: use io.open with utf-8 encoding when processing source
- runtime: optimise to not create temp float for int to power negative
- runtime: fix mp_unpack_ex so seq can't be reclaimed by GC during use
- mpprint: support printing %ld and %lu formats on 64-bit archs
- asmthumb: support asm_thumb code running on normal ARM processors
- native: improve support for bool type in viper functions
- remove ""if (0)"" and ""if (false)"" branches
- objgenerator: fix handling of None passed as 2nd arg to throw()
- objgenerator: remove unneeded forward decl and clean up white space
- misc.h: rename _MP_STRINGIFY to not use leading underscore in ident
- persistentcode: change ""len"" type to size_t for mp_obj_str_get_data
- objarray: add support for memoryview.itemsize attribute
- objarray: add decode method to bytearray
- update makefiles to use $(CAT) variable instead of hard coded ""cat""
- update makefiles to use $(TOUCH) instead of hard coded ""touch""

extmod:
- moduzlib: update to uzlib 2.9.2
- modlwip: add support for polling UDP sockets for writability
- moduhashlib: include implementation of sha256 only when required
- convert legacy uppercase macro names to lowercase
- moduwebsocket: refactor `websocket` to `uwebsocket`
- modlwip: change #ifdef to #if for check of MICROPY_PY_LWIP
- modlwip: fix bug when polling listening socket with backlog=1
- modlwip: add concurrency protection macros
- modwebrepl: fix logic to handle a put of file of size 0
- vfs_fat: update for new oofatfs version
- modlwip: fix case where concurrency lock isn't released on error
- moduselect: adjust select_select and poll_register to use size_t
- vfs_fat: fallback to FAT32 if standard FAT16/SFD format fails
- modlwip: handle case of connection closing while on accept queue
- modlwip: handle case of accept callback called with null PCB
- modlwip: protect socket.accept with lwIP concurrency lock
- modlwip: free any stored incoming bufs/connections on TCP error
- modlwip: use correct listening socket object in accept callback
- modlwip: abort TCP conns that didn't close cleanly in a while
- modurandom: add init method to seed the Yasmarang generator
- machine_signal: fix fault when no args are passed to Signal()
- modussl_mbedtls: support non-blocking handshake
- modussl_axtls: add non-blocking mode support
- moducryptolib: add optional AES-CTR support
- modujson: handle parsing of floats with + in the exponent
- machine_i2c: change C-level API to allow split I2C transactions
- machine_i2c: remove need for temporary memory in writemem() call
- machine_i2c: add i2c.writevto() that can write a vector of bufs
- modlwip: free any incoming bufs/connections before closing PCB
- modlwip: register TCP close-timeout callback before closing PCB

lib:
- utils/pyexec: implement paste mode with event driven REPL
- utils/printf: exclude __GI_vsnprintf alias for gcc 9 and above
- utils/gchelper_m3: add license header and clean up code
- utils/gchelper_m3: add gc_helper_get_sp() function
- utils/gchelper: add gchelper.h header file for assembler functions
- netutils: add function to print tracing info for Ethernet frames
- oofatfs: update oofatfs library to R0.13c working branch
- oofatfs: update ffconf.h config for new oofatfs version
- oofatfs: update oofatfs library to fix issue with logic not
- stm32lib: update library to fix F7 MMC capacity calculation
- utils/pyexec: add pyexec_file_if_exists() helper function
- utils: make pyexec_file_if_exists run frozen scripts if they exist
- utils/interrupt_char: invalidate interrupt char at start up
- stm32lib: update library to fix UART9/10 baudrate on F4 MCUs
- nrfx: upgrade nrfx to v1.7.1 plus a UART bug fix

drivers:
- memory/spiflash: rework wait_sr to fix uninit'd variable 'sr'
- display/ssd1306.py: change to use new i2c.writevto() method

tools:
- mpy-tool.py: add support for freezing native code
- upip.py: use ""raise arg"" instead of no-arg raise form, for native
- pyboard.py: add missing line from example usage comments
- mpy-tool.py: adjust use of super() to make it work with Python 2
- mpy-tool.py: fix init of QStrWindow, and remove unused variable
- pyboard.py: don't accumulate output data if data_consumer used
- upip.py: add support for multiple index URLs with custom default

tests:
- basics: add tests for try-except-else and try-except-else-finally
- run-tests: support running native tests via mpy
- import: add test for importing x64 native code
- extmod: add test for FAT filesystem on a very large block device
- run-tests: ignore exception in process kill when ending repl test
- micropython: add some tests for failed heap allocation
- skip tests needing machine module if (u)machine doesn't exist
- ussl_basic: disable setblocking() calls
- basics/sys1.py: add test for calling sys.exit() without any args
- pyb: update UART expected output now that default timeout is 0
- basics: add coverage tests for memoryview attributes

mpy-cross:
- enable building of x64 native .mpy files
- add ""-march=<arch>"" option to select native emitter
- support compiling with MICROPY_PY___FILE__ enabled
- automatically select ARMV6 arch when running on such a host
- add --version command line option to print version info

all ports:
- change PYB message prefix to MPY
- convert legacy uppercase macro names to lowercase
- update to work with new oofatfs version
- {stm32,esp8266}: set mpy-cross native arch for frozen native code
- convert to use pyexec_file_if_exists() to execute boot/main.py

unix port:
- mpthreadport: add thread deinit code to stop threads on exit
- mpthreadport: cleanup used memory on thread exit
- mpthreadport: remove busy wait loop in thread garbage collection
- modmachine: handle repeated /dev/mem open errors
- modffi: eliminate unused-argument warning when debugging disabled
- Makefile: update coverage tests to match those in Travis
- mpthreadport: use named semaphores on Mac OS X
- gcollect: make sure stack/regs get captured properly for GC
- coverage: add test for printing literal % character
- modusocket: fix use of setsockopt in usocket.settimeout impl
- modusocket: raise ETIMEDOUT when connect or accept has timeout

windows port:
- fix line wrapping behaviour on the REPL

qemu-arm port:
- rework to run bare-metal on boards with Cortex-M CPUs
- use gchelper code to get registers for GC scanning

stm32 port:
- implement machine.lightsleep()
- rtc: check RTCEN=1 when testing if RTC is already running on boot
- usbdev: add USB config option for board being self powered
- usbdev: add USB config option for max power drawn by the board
- main: make board-defined UART REPL use a static object and buffer
- boards/stm32f429_af.csv: fix typos in UART defs Tx->TX and Rx->RX
- mboot: add option to autodetect the USB port that DFU uses
- sdcard: don't use SD clock bypass on F7 MCUs
- usb: add flow control option for USB VCP data received from host
- boards/make-pins.py: add basic support for STM32H7 ADC periphs
- boards/stm32h743_af.csv: add ADC entries to pin capability table
- adc: add basic support for ADC on a pin on STM32H7 MCUs
- mboot: use USB HS as main USB device regardless of USB_HS_IN_FS
- mboot: add support for STM32F769 MCUs
- mboot: add support for GPIO ports G, H, I and J
- mboot: allow deploying via deploy-stlink
- usb: use USB HS as main USB device regardless of USB_HS_IN_FS
- usbd_conf: fully support USB HS with external PHY
- modmachine: make bootloader() enter custom loader if it's enabled
- boards/STM32F769DISC: support the use of USB HS with external PHY
- boards/STM32F769DISC: configure for use with mboot by default
- systick: rename sys_tick_XXX functions to systick_XXX
- systick: make periodic systick callbacks use a cyclic func table
- pendsv: clean up pendsv IRQ handler and eliminate duplicate code
- pendsv: add ability to schedule callbacks at pendsv IRQ level
- systick: provide better compile-time configurability of slots
- modnetwork: change lwIP polling to be based on background systick
- move gchelper assembler code to lib/utils for use by other ports
- gccollect: use gchelper.h header instead of explicit declaration
- pendsv: fix inline asm constant and prefix with # character
- mboot/Makefile: support specifying BOARD_DIR for custom board
- boards/NUCLEO_L476RG: add support for RNG, DAC and CAN1
- boards/make-pins.py: add cmdline options to support use by mboot
- mboot/Makefile: generate all pin header files from board pins.csv
- mboot/mphalport.h: include genhdr/pins.h for access to pin names
- qspi: use static af functions for pin configuration
- mboot: add support for loading gzip'd firmware from a filesystem
- mboot: move some BSS vars to new section that isn't zeroed out
- mboot: add support script which can program mboot and application
- modmachine: add ability to pass through user data to mboot
- mboot: add hook to run board-specific code early on startup
- boards/stm32f429.ld: increase uPy heap size by 64k for F429 MCU
- extint: fix ExtInt to work with non-GPIO pins
- extint: fix RTC Alarm/FS USB EXTI constants for L4
- make-stmconst.py: improve regex to parse more constants
- extint: add non-GPIO EXTI IRQ sources for F0
- extint: remove unused (and incorrect) EXTI defines
- stm32_it: fix RTC IRQ handler to handle all EXTI IRQs on F0 MCUs
- sdram: increase GPIO speed for SDRAM interface to ""very high""
- boards/NUCLEO_F767ZI: fix up comments about HCLK computation
- mphalport: add mp_hal_get_mac() helper function
- eth: add low-level Ethernet MAC driver
- network_lan: add high-level network.LAN interface to ETH driver
- mpconfigport.h: enable lwIP concurrency protection mechanism
- modnetwork: don't call NIC callback if it's NULL
- boards/NUCLEO_F767ZI: enable lwIP and Ethernet peripheral
- boards/STM32F7DISC: enable lwIP and Ethernet peripheral
- boards/STM32F769DISC: enable lwIP and Ethernet peripheral
- boards/NUCLEO_F429ZI: enable lwIP and Ethernet peripheral
- qspi: enable sample shift and disable timeout counter
- Makefile: allow a board to specify its linker sections for FW
- boards/STM32F769DISC: use external QSPI flash to store some code
- use global lwip build config and support building without lwip
- boards: update to use new build config for lwip component
- add compile-time option to use HSI as clock source
- mboot: update to match latest oofatfs version
- allow to build with threading with the GIL disabled
- qspi: set pin speed to very-high and allow to config some options
- usb: allow to override USB strings & VID/PID in app and mboot
- stm32_it: guard UART7_IRQHandler with check for UART7 define
- mboot: set USE_MBOOT=1 by default in the Makefile
- system_stm32: provide default value for HSI calibration
- mpconfigport.h: remove malloc/free/realloc helper macros
- boards/STM32L476DISC: enable servo support on STM32L476DISC board
- Makefile: allow to override CROSS_COMPILE with included Makefile
- make default USB_VCP stream go through uos.dupterm for main REPL
- timer: expose the PWM BRK capability of Timer 1 and 8
- uart: handle correctly the char overrun case of RXNE=0 and ORE=1
- rename MICROPY_HW_HAS_SDCARD to MICROPY_HW_ENABLE_SDCARD
- add support for MMC driver, exposed via pyb.MMCard class
- moduos: allow to compile again without USB enabled
- network_wiznet5k: add ability to trace Ethernet TX and RX frames
- network_wiznet5k: add ability to set the MAC address
- network_wiznet5k: automatically set MAC if device doesn't have one
- i2cslave: add support for H7 MCUs
- usbd_conf: add support for USB HS peripheral on H7 MCUs
- mboot: add support for H7 MCUs, with H743 flash layout
- boards/NUCLEO_H743ZI: add config options to support mboot
- boards/NUCLEO_L432KC: disable complex nos and default frozen mods
- rtc: add auto-LSE-bypass detection with fallback to LSE then LSI
- rtc: remove unused LSE detection code
- rtc: remove non-ASCII mu-character from source code comment
- timer: correctly initialise extended break settings on F7/H7/L4
- system_stm32f0: enable PWR clock on startup
- system_stm32f0: add support for using HSE and PLL as SYSCLK
- powerctrl: enable EIWUP to ensure RTC wakes device from standby
- dac: rework DAC driver to use direct register access
- usbdev: make USB device descriptors at runtime rather than static
- usb: add USB device mode for VCP+VCP without MSC
- powerctrl: deselect PLLSAI as 48MHz src before turning off PLLSAI
- usb: remove mp_hal_set_interrupt_char now that it's reset at boot
- main: increase default UART REPL rx buffer from 64 to 260 bytes
- powerctrl: support changing frequency when HSI is clock source
- flash: fix bug computing page number for L432 page erase
- add support for F413 MCUs
- boards: add NUCLEO_F413ZH board configuration
- machine_uart: change default UART timeout to 0, for non blocking
- move factory reset files and code to separate source file
- usbd_cdc_interface: don't retransmit chars if USB is reconnected
- rtc: allow overriding startup timeouts from mpconfigboard
- dma: initialise all members of DMA structs for H7 MCUs
- dma: always reset and configure the H7 DMA peripheral
- spi: enable SPI IRQs and add IRQHandlers for H7 MCUs
- irq: fix IRQ_ENABLE_STATS stats config to work on all MCUs
- boards/NUCLEO_H743ZI: enable SPI3 on this board
- modmachine: create dedicated asm function to branch to bootloader
- adc: fix VBAT_DIV to be 4 for STM32F411
- machine_i2c: update to support new C-level I2C API
- i2c: make timeout for hardware I2C configurable
- machine_i2c: simplify ROM initialisation of static HW I2C objects
- i2c: support setting the I2C TIMINGR value via keyword arg
- sdcard: add switch break to ensure only correct SD/MMC IRQ is run
- sdram: update MPU settings to block invalid region, change attrs
- mboot/README: fix some typos, describe bootloader and fwupdate.py
- modmachine: in bootloader() disable caches before reset of periphs

cc3200 port:
- mods/modussl: fix ca_certs arg validation in mod_ssl_wrap_socket
- modmachine: rename machine.sleep to machine.lightsleep
- use common gchelper_m3.s code from lib/utils
- mpconfigport.h: disable compiler optimisation of OrderedDict

esp8266 port:
- modmachine: implement optional time_ms arg to machine.deepsleep
- modmachine: rename machine.sleep to machine.lightsleep
- modmachine: implement simple machine.lightsleep function
- modmachine: in lightsleep, only waiti if wifi is turned off
- modmachine: call ets_event_poll after waiti in machine.idle
- modmachine: handle overflow of timer to get longer periods
- fix ticks_ms to correctly handle wraparound of system counter

esp32 port:
- don't put py/scheduler.o in iRAM, it's no longer needed
- Makefile: put all IDF compenents in .a libs to use IDF ld script
- update to latest ESP IDF using sdkconfig and new ldgen procedure
- machine_timer: deinit all active timers on soft reset
- Makefile: make sure that directory exists for sdkconfig.h
- boards: use auto xtal freq config instead of default 40MHz
- modsocket: fix crashes when connect/bind can't resolve given addr
- modmachine: rename machine.sleep to machine.lightsleep
- use SPIRAM in mem-map mode so all of it can be used for uPy heap
- modmachine: add support for changing the CPU frequency
- modsocket: fix usocket.send to accept anything with buffer proto
- modsocket: change socket.socket to be socket type rather than fun
- network_lan: add arg to constructor to set clock mode for ETH PHY
- modnetwork: catch and report Ethernet events
- network_lan: make power arg to constructor optional
- modnetwork: fix wifi.isconnected to return False after disconnect
- modnetwork: implement RSSI for WiFi STA via WLAN.status('rssi')
- modnetwork: remove redundant esp_log include
- Makefile: add some missing IDF source files to bootloader and app
- mphalport: use ets_delay_us for mp_hal_delay_us_fast
- machine_pin: make it so None as pull value disables pull up/down
- machine_pin: add new PULL_HOLD pin pull mode
- machine_pin: rework pull mode config to fix GPIO hold feature
- mpthreadport: exit vPortCleanUpTCB early if threading not init'd
- boards: enable dual core support by default
- boards/sdkconfig: disable WDT check of idle task on CPU1
- README: add info about pyparsing and the correct Python version
- machine_wdt: add timeout arg to select interval, make WDT panic
- modnetwork: change type to size_t for uses of mp_obj_str_get_data
- machine_uart: implement UART.deinit() method
- network_ppp: add a timeout for closing PPP connection
- machine_touchpad: use HW timer for FSM to enable wake-on-touch
- modsocket: raise EAGAIN when accept fails in non-blocking mode

javascript port:
- add new port targeting JavaScript via Emscripten
- fix Emscripten async load, and to compile with modern clang
- library: use Buffer.alloc() since new Buffer() is deprecated
- pass (error) exit value out from script to process caller
- Makefile: fix unrepresentable float error by using clamp
- library: print data as raw bytes to stdout so unicode works

nrf port:
- modmachine: rename machine.sleep to machine.lightsleep
- uart: use formula instead of switch for baudrate calculation
- uart: remove unused machine.UART() parameters
- shrink ""<peripheral> does not exist"" error messages
- pin: cleanup Pin.__str__ to print relevant information
- pin: print pull information in Pin.__str__
- ticker: remove duplicate NRFX_IRQ_PRIORITY_SET
- timer: fix disabling Timer 1 when using soft PWM
- readme: update link to nrfjprog download
- bluetooth: improve advertisment behavior for nrf52 targets
- bluetooth: resolve compilation warning in ble_drv.c
- readme: update make flash command when defining board
- pwm: remove superfluous NULL in machine_hard_pwm_instances
- bluetooth: add support for SoftDevice s132 version 6.1.1
- board: migrate all nrf52832 targets to new BLE stack
- bluetooth: deprecate use of SoftDevice s132 v6.0.0
- bluetooth: add support for SoftDevice s140 version 6.1.1
- board: migrate nrf52840 target to new BLE stack
- bluetooth: deprecate use of SoftDevice s140 v6.0.0
- readme: add section about LTO
- Makefile: update to match latest oofatfs version
- boards: add support for BLYST Nano module based boards
- change types to size_t for all uses of mp_obj_str_get_data
- machine/i2c: update to support new C-level I2C API
- nrfx_glue: adapt to nrfx v.1.7.1
- uart: change UART driver to be non-blocking and use IRQs
- mpconfigport.h: enable MICROPY_KBD_EXCEPTION by default
- uart: make UART print output something, and add write method
- mphalport: use wfi to save power while waiting at the UART REPL

zephyr port:
- modzephyr: revamp stacks_analyze() call
- modzsensor: rename ""TEMP"" sensor channel to ""DIE_TEMP""
- prj_minimal.conf: switch to CONFIG_STDOUT_CONSOLE
- Makefile: proxy ram_report, rom_report targets from Zephyr
- prj_frdm_k64f.conf: add fxos8700 sensor
- prj_frdm_kw41z.conf: add new board configuration
- i2c: add support for hardware i2c
- CMakeLists.txt: set AR to point to the Zephyr toolchain exe
- machine_i2c: update to support new C-level I2C API
- switch back to enabling I2C in board-specific configs

docs:
- machine: change sleep to lightsleep and add timeout arguments
- convert all cases of machine.sleep to machine.lightsleep
- ure: fix match.group signature to indicate index param is required
- uos: document extra requirements on stream objs passed to dupterm
- pyboard: add link to pyboard v1.1 schematic and layout PDF
- pyboard: make pyboard v1.1 pinout the default shown in quickref
- develop: fix typos in C-module example for example_add_ints
- library/machine.Pin: add PULL_HOLD constant to possible pin pulls
- esp32: add a note to quickref about use of Pin.PULL_HOLD
- esp32: add example for pin isolation in combination with deepsleep
- develop: remove paragraph that was copied in error from other doc
- cmodules: fix example to globally define MODULE_EXAMPLE_ENABLED
- cmodules: note the various ways MODULE_EXAMPLE_ENABLED can be set
- esp8266: add tutorial for APA102 LEDs
- esp32: correct quickref for ESP32 hardware SPI with non-default IO
- machine.I2C: add writevto method to write a vector of byte bufs
- pyboard/quickref: refer to new machine.I2C instead of old pyb.I2C

travis:
- update to use Ubuntu 16.04 Xenial for CI builds
- enable test for running native code via mpy

",15337142
317,False,False,2019-01-25T13:56:52Z,2019-01-25T14:27:42Z,"In this release there are a wide range of improvements and additions to both the core and the ports.  In the core the main improvement was to the native emitter to have much more comprehensive support for general Python features, such as generators and complex exception handling, and the generated machine code is smaller and retains its efficiency.  Elsewhere, fuzzy testing was used to find and eliminate some corner-case bugs, user classes were optimised when they don't use special accessors, underscores in numeric literals are now supported (PEP515), and the uio.IOBase class was added to allow user defined streams.

For the extended modules there is now a VfsPosix filesystem component, a new ucryptolib module with AES support, addition of ure.sub() and of uhashlib.md5, and the lwIP socket implementation now has working TCP listen/accept backlog.

Compared to the last release the minimal baseline core code size is reduced by about 2.2%, down by roughly 1500 bytes for bare-arm port and 3500 bytes for minimal x86 port.  Most other ports have increased in size due to the addition of new features (eg ucryptolib, ure.sub).

The stm32 port sees the introduction of a new bootloader -- mboot -- which supports DFU upload via USB FS, USB HS, as well as a custom I2C protocol, and also support to program external SPI flash.  There is significant refactoring of the USB device driver, improved VCP throughput, and support for 2x VCP interfaces on the one USB device.  lwIP has been integrated, and support added for SDRAM.  Cortex-M0 CPUs are now supported along with STM32F0 MCUs.

For the esp8266 port the heap is increased by 2kbytes, the radio is automatically put to sleep if no WLAN interfaces are active, and the UART can now be disconnected from the REPL and its RX buffer length configured.  Upon soft-reset sockets are now cleaned up.

The esp32 port has added support for external SPI RAM, PPPoS functionality, improved performance and stability when using threads, and other general bug fixes.

There is a new nrf port for Nordic MCUs, currently supporting nRF51x and nRF52x chips.

The docs have now been unified so there is just one set of documentation covering all ports.  And initial documentation for the esp32 port is added.

There are two changes at the Python API level that are not backwards with previous versions:
- uos.dupterm now requires that a stream passed to it is derived from uio.IOBase (or is a native stream object).
- The esp32 neopixel driver has had its default timing changed from 400kHz to 800kHz; existing code that didn't explicitly specify the ""timing"" parameter in the NeoPixel constructor may need to be updated to specify this as ""timing=0"" to get 400kHz timing.

A detailed list of changes follows.

py core:
- mpconfig.h: be stricter when autodetecting machine endianness
- mpstate.h: adjust start of root pointer section to exclude non-ptrs
- nlrx86: use naked attribute on nlr_push for gcc 8.0 and higher
- vm: adjust #if logic for gil_divisor so braces are balanced
- objfun: fix variable name in DECODE_CODESTATE_SIZE() macro
- vm: use enum names instead of magic numbers in multi-opcode dispatch
- vm: improve performance of opcode dispatch when using switch stmt
- repl: fix handling of unmatched brackets and unfinished quotes
- misc.h: add MP_STATIC_ASSERT macro to do static assertions
- compile: change comment about ITER_BUF_NSLOTS to a static assertion
- emitbc: avoid undefined behavior calling memset() with NULL 1st arg
- parsenum: use int instead of mp_int_t for parsing float exponent
- parsenum: avoid undefined behavior parsing floats with large exponents
- objfloat: fix undefined shifting behavior in high-quality float hash
- mpz: avoid undefined behavior at integer overflow in mpz_hash
- objfloat: fix undefined integer behavior hashing negative zero
- gc: when GC threshold is hit don't unnecessarily collect twice
- parsenum: adjust braces so they are balanced
- modbuiltins: add support for rounding integers
- objgenerator: save state in old_globals instead of local variable
- objgenerator: protect against reentering a generator
- emit: combine fast and deref into one function for load/store/delete
- emit: combine yield value and yield-from emit funcs into one
- emit: combine build tuple/list/map emit funcs into one
- emit: combine name and global into one func for load/store/delete
- emit: combine load/store/delete subscr into one emit function
- emit: combine load/store/delete attr into one emit function
- emit: combine break_loop and continue_loop into one emit function
- emit: combine import from/name/star into one emit function
- emit: merge build set/slice into existing build emit function
- emit: combine setup with/except/finally into one emit function
- objtype: fix assertion failures in mp_obj_new_type by checking types
- objtype: fix assertion failures in super_attr by checking type
- stream: move definition of mp_stream_p_t from obj.h to stream.h
- reader: allow MICROPY_VFS_POSIX to work with MICROPY_READER_POSIX
- mpconfig.h: add default MICROPY_VFS_FAT config value
- obj.h: introduce a ""flags"" entry in mp_obj_type_t
- objtype: don't expose mp_obj_instance_attr()
- objtype: optimise instance get/set/del by skipping special accessors
- gc: add gc_sweep_all() function to run all remaining finalisers
- lexer: add support for underscores in numeric literals
- modio: add uio.IOBase class to allow to define user streams
- mkrules.mk: regenerate all qstrs when config files change
- stream: introduce and use efficient mp_get_stream to access stream_p
- objarray: replace 0x80 with new MP_OBJ_ARRAY_TYPECODE_FLAG_RW macro
- add checks for stream objects in print() and sys.print_exception()
- compile: combine break and continue compile functions
- compile: combine subscript_2 and subscript_3 into one function
- compile: combine global and nonlocal statement compile functions
- compile: combine or_test and and_test compile functions
- compile: combine expr, xor_expr and and_expr into one function
- compile: handle return/break/continue correctly in async with
- objgenerator: eliminate need for mp_obj_gen_wrap wrapper instances
- obj.h: fix broken build for object repr C when float disabled
- simplify some cases of accessing the map of module and type dict
- objdict: make mp_obj_dict_get_map an inline function
- objmodule: make mp_obj_module_get_globals an inline function
- obj.h: give compile error if using obj repr D with single-prec float
- malloc: give a compile warning if using finaliser without GC
- objgenerator: implement __name__ with normal fun attr accessor code
- emitnative: optimise for iteration asm code for non-debug build
- runtime: use mp_obj_new_int_from_ll when return int is not small
- stream: introduce MP_STREAM_GET_FILENO ioctl request
- objstr: in format error message, use common string with %s for type
- asmthumb: optimise native code calling runtime glue functions
- mpconfig.h: introduce MICROPY_DEBUG_PRINTER for debugging output
- fix compiling with debug enabled and make more use of DEBUG_printf
- emitnative: factor common code for native jump helper
- emitnative: fix x86 native zero checks by comparing full word
- asmx86: use generic emit function to simplify cmp emit function
- emitnative: fix native locals stack to start at correct location
- emitnative: simplify handling of exception objects from nlr_buf_t
- emitnative: allocate space for local stack info as it's needed
- compile: for dynamic compiler, widen literal 1 to get correct shift
- py.mk: don't hardcode path to libaxtls.a
- gc: in gc_alloc, reset n_free var right before search for free mem
- objarray: allow to build again when bytearray is disabled
- stream: adjust mp_stream_posix_XXX to take void*, not mp_obj_t
- emitnative: use small tables to simplify handling of local regs
- asmxtensa: handle function entry/exit when stack use larger than 127
- asm*: support assembling code to jump to a register, and get PC+off
- emitnative: optimise and improve exception handling in native code
- asmxtensa: fix bug with order of regs in addi encoding
- asmxtensa: optimise loading local addr and support larger offsets
- emitnative: fix bug with store of 16 and 32 values in viper ARM mode
- asmxtensa: use narrow version of add instr to reduce native code size
- emitnx86: fix number of args passed to mp_setup_code_state, 4 not 5
- vm: fix handling of finally-return with complex nested finallys
- emitnative: cancel caught exception once handled to prevent reraise
- emitnative: add support for return/break/continue in try and with
- compile: factor code that compiles start/end of exception handler
- py.mk: build axtls library directly from its source files
- runtime: fix incorrect test for MICROPY_PORT_DEINIT_FUNC
- objarray: bytearray: allow 2nd/3rd arg to constructor
- emitnative: fix try-finally in outer scope, so finally is cancelled
- fix native functions so they run with their correct globals context
- optimise call to mp_arg_check_num by compressing fun signature
- asmx64: fix bug in assembler when creating disp with r13 and 0 offset
- {asmx86,asmx64}: extend test_r8_with_r8 to accept all 8 lower regs
- emit: move MP_EMIT_OPT_xxx enums from compile.h to emitglue.h
- emit: remove need to call set_native_type to set native/viper mode
- emit: remove need to call set_native_type to set viper return type
- emit: completely remove set_native_type, arg type is set in compiler
- compile: merge viper annotation and normal param compilation stages
- compile: factor code that compiles viper type annotations
- emitnative: reuse mp_native_type_from_qstr when searching for a cast
- make viper functions have the same entry signature as native
- emitnative: support arbitrary number of arguments to viper functions
- emitnative: use macros instead of raw offsetof for slot locations
- emitnative: make viper funcs run with their correct globals context
- asmxtensa: make indirect calls using func table, not raw pointers
- asmthumb: detect presence of I-cache using CMSIS macro
- objtype: clarify comment about configuring inplace op methods
- shorten error messages by using contractions and some rewording
- objstr: make % (__mod__) formatting operator configurable
- modbuiltins: make oct/hex work when !MICROPY_PY_BUILTINS_STR_OP_MODULO
- objgenerator: implement PEP479, StopIteration convs to RuntimeError
- parsenum: avoid rounding errors with negative powers-of-10
- modmath: add math.factorial, optimised and non-opt implementations
- objstr: format: return bytes result for bytes format string
- fix msvc C++ compiler warnings with MP_OBJ_FUN_MAKE_SIG macro
- vm: make small optimisation of BUILD_SLICE opcode
- objfloat: fix abs(-0.0) so it returns 0.0
- emitnative: place const objs for native code in separate const table
- asm*: remove ASM_MOV_REG_ALIGNED_IMM emit macro, it's no longer used
- emitnative: change type of const_table from uintptr_t to mp_uint_t
- vm: fix case of throwing GeneratorExit type into yield-from
- runtime: remove nlr protection when calling __next__ in mp_resume
- objtype: support full object model for get/set/delitem special meths
- vm: when VM raises exception put exc obj at beginning of func state
- asmthumb: add wide ldr to handle larger offsets
- asmthumb: clean up asm_thumb_bl_ind to use new optimised ldr helper
- asmthumb: extend asm entry/exit to handle stack larger than 508 bytes
- asmx86: comment out unused asm_x86_nop to prevent compiler warnings
- asmx64: extend asm_x64_mov_reg_pcrel to accept high registers
- asmxtensa: use proper calculation for const table offset
- emitnative: reorder native state on C stack so nlr_buf_t is first
- emitnative: implement yield and yield-from in native emitter
- runtime: use mp_import_name to implement tail of mp_import_from
- runtime: remove comment in mp_import_name about level being 0
- obj.h: use uint64_t instead of mp_int_t in repr-D MP_OBJ_IS_x macros
- emitnative: clean up unused macro and forward function declarations
- asmx64: change stack management to reference locals by rsp not rbp
- asmx64: change indirect calls to load fun ptr from the native table
- asmx86: change stack management to reference locals by esp not ebp
- asmx86: change indirect calls to load fun ptr from the native table
- emitnative: load native fun table ptr from const table for all archs
- asmarm: simplify asm_arm_bl_ind to only load via index, not literal
- asmthumb: remove unused fun_ptr arg from asm_thumb_bl_ind function
- emitnative: remove unused ptr argument from ASM_CALL_IND macro
- emitnative: consolidate use of stacked immediate values to one func
- emitnative: simplify viper mode handling in emit_native_import_name
- emitnative: push internal None rather than const obj where possible
- emitnative: put None/False/True in global native const table
- objtype: remove comment about catching exc from user __getattr__
- objstr: make str.count() method configurable
- objmodule: implement PEP 562's __getattr__ for modules
- py.mk: when building axtls use -Wno-all to prevent all warnings
- compile: fix case of eager implicit conversion of local to nonlocal
- compile: remove unneeded variable from global/nonlocal stmt helpers
- scope: optimise scope_find_or_add_id to not need ""added"" arg
- runtime: fix qstr assumptions when handling ""import *""
- unicode: fix check for valid utf8 being stricter about contn chars
- py.mk: fix broken Gmane URL
- add option to reduce GC stack integer size to save RAM
- objboundmeth: support loading generic attrs from the method
- obj: add support for __int__ special method
- objexcept: use macros to make offsets in emergency exc buf clearer
- objexcept: make sure mp_obj_new_exception_msg doesn't copy/format msg
- objdict: make .fromkeys() method configurable
- bc: fix calculation of opcode size for opcodes with map caching
- qstr: put a lower bound on new qstr pool allocation
- objarray: introduce ""memview_offset"" alias for ""free"" field of object
- gc: adjust gc_alloc() signature to be able to accept multiple flags
- mpconfig: move MICROPY_VERSION macros to static ones in mpconfig.h
- runtime: unlock the GIL in mp_deinit function
- get optional VM stack overflow check compiling and working again
- fix location of VM returned exception in invalid opcode and comments
- modio: make iobase_singleton object const so it goes in ROM
- obj.h: explicitly cast args to uint32_t in MP_OBJ_FUN_MAKE_SIG

extmod:
- modlwip: update to work with lwIP v2.0
- modlwip: set POLLHUP flag for sockets that are new
- modlwip: allow to compile with MICROPY_PY_LWIP disabled
- modussl_mbedtls: populate sock member right away in wrap_socket
- modussl_mbedtls: use mbedtls_entropy_func for CTR-DRBG entropy
- vfs: use u_rom_obj properly in argument structures
- vfs_fat: rename FileIO/TextIO types to mp_type_vfs_fat_XXX
- add VfsPosix filesystem component
- vfs: add fast path for stating VfsPosix filesystem
- vfs: introduce a C-level VFS protocol, with fast import_stat
- moduhashlib: prefix all Python methods and objects with uhashlib
- moduhashlib: reorder funcs so that they are grouped by hash type
- moduhashlib: allow to disable the sha256 class
- moduhashlib: allow using the sha256 implementation of mbedTLS
- moduhashlib: make function objects STATIC
- uos_dupterm: use native C stream methods on dupterm object
- modussl_axtls: fix __del__ to point to mp_stream_close_obj
- vfs_fat_diskio: factor disk ioctl code to reduce code size
- update to use new mp_get_stream helper
- moducryptolib: add ucryptolib module with crypto functions
- moducryptolib: optionally export MODE_* constants to Python
- moducryptolib: refactor functions for clean interface with axTLS
- moducryptolib: add an mbedTLS implementation for this module
- moducryptolib: prefix all Python methods/objects with ucryptolib
- moducryptolib: shorten exception messages to reduce code size
- moducryptolib: don't include arpa/inet.h, it's not needed
- modure: add match.groups() method, and tests
- modure: add match.span(), start() and end() methods, and tests
- modure: add ure.sub() function and method, and tests
- vfs: support opening a file descriptor (int) with VfsPosix
- fix to support compiling with object representation D
- vfs_posix: support ilistdir with no (or empty) argument
- vfs_posix: use DTTOIF if available to convert type in ilistdir
- modlwip: deregister all lwIP callbacks when closing a socket
- modussl: support polling in ussl objects by passing through ioctl
- modbtree: update to work with new mp_stream_posix_XXX signatures
- modussl_axtls: use MP_ROM_PTR for objects in allowed args array
- moduhashlib: add md5 implementation, using axTLS
- moduhashlib: use newer message digest API for mbedtls >=2.7.0
- moduhashlib: add md5 implementation using mbedtls
- moductypes: remove BITFIELD from aggregate types enum
- moductypes: accept OrderedDict as a structure description
- modonewire: fix reset timings to match 1-wire specs
- moductypes: make sizeof() accept ""layout"" parameter
- modlwip: implement TCP listen/accept backlog
- modlwip: fix read-polling of listening socket with a backlog
- moductypes: implement __int__ for PTR
- moductypes: add aliases for native C types

lib:
- lwip: update lwIP to v2.0.3, tag STABLE-2_0_3_RELEASE
- stm32lib: update library to include support for STM32F0 MCUs
- utils/printf: make DEBUG_printf implementation more accessible
- utils: fix to support compiling with object representation D
- utils: expose pyb_set_repl_info function public
- libm_dbl/tanh: make tanh more efficient and handle large numbers
- libm/math: make tanhf more efficient and handle large numbers
- libm/wf_tgamma: fix tgammaf handling of -inf, should return nan
- libm_dbl: add implementation of copysign() for DEBUG builds
- stm32lib: update library to fix issue with filling USB TX FIFO
- libm/math: fix int type in float union, uint64_t should be uint32_t
- libm/math: add implementation of __signbitf, if needed by a port
- utils/pyexec: forcefully unlock the heap if locked and REPL active
- utils: add generic MicroPython IRQ helper functions
- stm32lib: update library to get F413 BOR defs and fix gcc 8 warning

drivers:
- wiznet5k: fix bug with MACRAW socket calculating packet size
- memory/spiflash: move cache buffer to user-provided config
- memory/spiflash: rename functions to indicate they use cache
- memory/spiflash: add functions for direct erase/read/write
- sdcard: change driver to use new block-device protocol
- sdcard: fix bug in computing number of sectors on SD Card
- sdcard: do not release CS during the middle of read operations
- cc3000: use cc3000_time_t instead of time_t for custom typedef
- display/lcd160cr.py: in fast_spi, send command before flushing
- sdcard: in test use os.umount and machine module instead of pyb
- sdcard: remove debugging print statement in ioctl method
- dht: allow open-drain-high call to be DHT specific if needed

tools:
- pydfu.py: increase download packet size to full 2048 bytes
- pydfu.py: add support for multiple memory segments
- pydfu.py: use getfullargspec instead of getargspec for newer pyusb
- pydfu.py: workaround stdio flush error on Windows with Python 3.6
- pydfu.py: improve DFU reset, and auto-detect USB transfer size
- mpy-tool.py: support freezing of floats in obj representation D
- mpy-tool.py: put frozen bignum digit data in ROM, not in RAM
- mpy-tool.py: set sane initial dynamic qstr pool size with frozen mods
- mpy-tool.py: fix calc of opcode size for opcodes with map caching
- mpy-tool.py: fix build error when no qstrs present in frozen mpy
- dfu.py: pad image data to 8 byte alignment to support L476
- pyboard.py: run exec: command as a string
- pyboard.py: change base class of PyboardError to Exception
- pyboard.py: in TelnetToSerial.close replace try/except with if

tests:
- basics/special_methods2: enable some additional tests that work
- add some tests for bigint hash, float hash and float parsing
- extmod: add test for importing a script from a user VFS
- extmod: remove conditional import of uos_vfs, it no longer exists
- pyb: make i2c and pyb1 pyboard tests run again
- io: add simple IOBase test
- extmod: add test for VFS and user-defined filesystem and files
- unix/extra_coverage: don't test stream objs with NULL write fun
- extmod/ujson_dump.py: add test for dump to non-stream object
- extmod: add test for ujson.dump writing to a user IOBase object
- import: add test for importing invalid .mpy file
- add tests using ""file"" argument in print and sys.print_exception
- extmod/ucryptolib*: add tests for ucryptolib module
- extmod/ucryptolib*: add into and inplace tests for ucryptolib
- basics/namedtuple*: import ucollections first
- move non-filesystem io tests to basics dir with io_ prefix
- improve feature detection for VFS
- run-tests: add nrf target
- run-tests: improve crash reporting when running on remote targets
- extmod/ujson_dump_iobase.py: return number of bytes written
- make tests work on targets without float support
- micropython/viper_cond: add test for large int as bool
- run-tests: enable bool1.py test with native emitter
- micropython: add tests for try and with blocks under native/viper
- basics/set_pop.py: sort set before printing for consistent output
- basics/int_big_error.py: use bytearray to test for int overflow
- modify tests that print repr of an exception with 1 arg
- basics: provide .exp files for generator tests that fail PEP479
- run-tests: enable native tests for unwinding jumps
- basics: add more tests for return within try-finally
- basics: add test cases for context manager raising in enter/exit
- float/cmath_fun.py: fix truncation of small real part of complex
- float: test -inf and some larger values for special math funcs
- remove pyboard.py symlink and instead import from ../tools
- extmod/uhashlib_md5: add coverage tests for MD5 algorithm
- float/float_parse.py: add tests for accuracy of small decimals
- cpydiff: add case for difference in behaviour of bytes.format()
- micropython: test loading const objs in native and viper funcs
- basics: split out gen throw tests from yield-from-throw tests
- run-tests: enabled native tests that pass now that yield works
- unix/ffi_float: skip if strtof() is not available
- uselect_poll_basic: add basic test for uselect.poll invariants
- uctypes_sizeof_od: test for using OrderedDict as struct descriptor
- basics/class_getattr: remove invalid test for __getattribute__
- make bytes/str.count() tests skippable
- extmod/uctypes_sizeof_layout: test for sizeof of different layout
- import: add .exp file for module_getattr.py to not require Py 3.7
- cmdline/cmd_showbc.py: fix test to explicitly declare nonlocal
- extmod: skip uselect test when CPython doesn't have poll()
- import_long_dyn: test for ""import *"" of a long dynamic name
- io: update tests to use uos.remove() instead of uos.unlink()
- basics/special_methods: add testcases for __int__
- extmod/uctypes_ptr_le: test int() operation on a pointer field
- extmod/uctypes_error: add test for unsupported unary op
- run-tests: make .exp and .out file names unique by prefixing with dir

mpy-cross:
- make build independent of extmod directory
- Makefile: also undefine MICROPY_FORCE_32BIT and CROSS_COMPILE

minimal port:
- main: allow to compile without GC enabled

unix port:
- support MICROPY_VFS_POSIX and enable it in coverage build
- moduos_vfs: add missing uos functions from traditional uos module
- mpconfigport.h: enable MICROPY_PY_UCRYPTOLIB
- mpconfigport_coverage: enable ure groups, span, start, end and sub
- modos: convert dir-type to stat-type for file type in ilistdir
- use MP_STREAM_GET_FILENO to allow uselect to poll general objects
- Makefile: coverage: Explicitly build ""axtls"" too
- Makefile: enable ussl module with nanbox build
- Makefile: remove building of libaxtls.a which is no longer needed
- Makefile: build libffi inside $BUILD
- mpconfigport_coverage.h: enable uhashlib.md5
- modos: include extmod/vfs.h for MP_S_IFDIR, etc
- modjni: update .getiter signature to include mp_obj_iter_buf_t*
- modjni: get building under coverage and nanbox builds
- mpconfigport.h: enable MICROPY_PY_UHASHLIB_MD5 for uhashlib.md5
- moduselect: raise OSError(ENOENT) if obj to modify is not in poller
- modusocket: initial implementation of socket.settimeout()
- modusocket: finish socket.settimeout() implementation
- modffi: add support for ""q""/""Q"" specs (int64_t/uint64_t)
- Makefile: allow to override/omit pthread lib name
- modos: rename unlink to remove to be consistent with other ports
- enable MICROPY_PY_BUILTINS_ROUND_INT
- enable uio.IOBase
- call gc_sweep_all() when doing a soft reset

windows port:
- make printing of debugging info work out of the box
- msvc: support custom compiler for header generation
- msvc: implement file/directory type query
- remove remaining traces of old GNU readline support

stm32 port:
- usbd_conf.h: remove unused macros and clean up header file
- usbd_conf: changes files to unix line endings and apply styling
- usbdev: convert files to unix line endings
- usbdev: remove unused RxState variable, and unused struct
- usbdev: be honest about data not being written to HID endpoint
- usbd_hid_interface: address possible race condition vs. interrupt
- i2c: add new hardware I2C driver for F4 MCUs
- machine_i2c: use new F4 hardware I2C driver for machine.I2C class
- accel: switch pyb.Accel to use new C-level I2C API
- modpyb: introduce MICROPY_PY_PYB_LEGACY config option for pyb mod
- pyb_i2c: put pyb.I2C under MICROPY_PY_PYB_LEGACY setting
- modpyb: remove unused includes and clean up comments
- usb: use usbd_cdc_itf_t pointer directly in USB_VCP class
- usb: combine CDC lower-layer and interface state into one struct
- usb: combine HID lower-layer and interface state into one struct
- usb: make CDC endpoint definitions private to core usbdev driver
- usb: change CDC tx/rx funcs to take CDC state, not usbdev state
- usb: change HID report funcs to take HID state, not usbdev state
- usb: add ability to have 2x VCP interfaces on the one USB device
- usb: initialise cdc variable to prevent compiler warnings
- enable UART7/8 on F4 series that have these peripherals
- add support for STM32L496 MCU
- boards: add board ld and af.csv files for STM32L496 MCU
- boards: add config files for new board, STM32L496GDISC
- rtc: don't try to set SubSeconds value on RTC
- integrate lwIP as implementation of usocket module
- rng: use Yasmarang for rng_get() if MCU doesn't have HW RNG
- remove unneeded HTML release notes from usbdev and usbhost dirs
- add low-level hardware I2C slave driver
- add new component, the mboot bootloader
- allow to have no storage support if there are no block devices
- add support for Cortex-M0 CPUs
- timer: make timer_get_source_freq more efficient by using regs
- allow a board to disable MICROPY_VFS_FAT
- boards: add startup_stm32f0.s for STM32F0 MCUs
- add support for STM32F0 MCUs
- boards: add alt-func CSV list and linker script for STM32F091
- boards: add NUCLEO_F091RC board configuration files
- README: update to include STM32F0 in list of supported MCUs
- boards: split combined alt-func labels and fix some other errors
- boards: ensure USB OTG power is off for NUCLEO_F767ZI
- flash: increase H7 flash size to full 2MiB
- modnetwork: don't take netif's down when network is deinited
- modnetwork: change base entry of NIC object from type to base
- modnetwork: provide generic implementation of ifconfig method
- add network driver for Wiznet5k using MACRAW mode and lwIP
- modnetwork: fix arg indexing in generic ifconfig method
- mpconfigport.h: enable DELATTR_SETATTR and BUILTINS_NOTIMPLEMENTED
- mboot: increase USB rx_buf and DFU buf sizes to full 2048 bytes
- Makefile: rebuild all qstrs when any board configuration changes
- boards/STM32L476DISC: update SPI flash config for cache change
- timer: support TIM1 on F0 MCUs
- i2c: fix num_acks calculation in i2c_write for F0 and F7 MCU's
- i2cslave: fix ordering of event callbacks in slave IRQ handler
- mboot: adjust user-reset-mode timeout so it ends with mode=1
- boards/stm32f091_af.csv: split labels that are multiple funcs
- boards/NUCLEO_F091RC: add Arduino-named pins and rename CPU pins
- can: use MP_OBJ_ARRAY_TYPECODE_FLAG_RW where appropriate
- spi: fix SPI driver so it can send/recv more than 65535 bytes
- mboot: define constants for reset mode cycling and timeout
- boards/NUCLEO_F091RC: fix TICK_INT_PRIORITY so it is highest prio
- qspi: don't require data reads and writes to be a multiple of 4
- mboot: add support for erase/read/write of external SPI flash
- boards: add .ld and af.csv files for STM32F722
- modnetwork: fix query of DNS IP address in ifconfig()
- mboot: fix bug with invalid memory access of USB state
- mboot: only compile in code for the USB periph that is being used
- mboot: always use a flash latency of 1WS to match 48MHz HCLK
- access dict map directly instead of using helper function
- support compiling with object representation D
- fatfs_port: fix bug when MICROPY_HW_ENABLE_RTC not enabled
- timer: use enum for indexing keyword arg in pyb_timer_init_helper
- timer: add tick_hz arg to Timer constructor and init method
- mphalport: make mp_hal_stdin_rx_chr/stdout_tx_strn weakly linked
- flashbdev: fix bug with L4 block cache, dereferencing block size
- add method for statically configuring pin alternate function
- sdcard: use mp_hal_pin_config_alt_static to configure SD card pins
- sdram: add SDRAM driver from OpenMV project
- sdram: integrate SDRAM driver into rest of code
- sdram: on F7 MCUs enable MPU on external SDRAM
- boards/STM32F429DISC: enable onboard SDRAM
- sdcard: get SDMMC alt func macro names working with F4,F7,H7 MCUs
- Makefile: use -Wno-attributes for ll_usb.c HAL source file
- rtc: get rtc.wakeup working on F0 MCUs
- modmachine: get machine.sleep working on F0 MCUs
- extint.h: use correct EXTI lines for RTC interrupts
- modmachine: get machine.sleep working on L4 MCUs
- adc: disable VBAT in read channel helper function
- adc: fix ADC reading on F0 MCUs to only sample a single channel
- spi: round up prescaler calc to never exceed requested baudrate
- sdram: allow additional config by a board, and tune MPU settings
- boards/STM32F429DISC: add burst len and autorefresh to SDRAM cfg
- boards/STM32F7DISC: enable onboard SDRAM
- spi: split out pyb.SPI and machine.SPI bindings to their own files
- spi: add implementation of low-level SPI protocol
- mboot/main: use correct formula for DFU download address
- Makefile: allow external BOARD_DIR directory to be specified
- boards/STM32L476DISC: enable external RTC xtal to get RTC working
- for MCUs that have PLLSAI allow to set SYSCLK at 2MHz increments
- dma: pass DMA direction as parameter to dma_init not in cfg struct
- dma: reinitialise the DMA if the direction changed on the channel
- sdcard: use only a single DMA stream for both SDIO TX/RX
- sdcard: move temporary DMA state from BSS to stack
- spi: be sure to set all SPI config values in SPI proto init
- change flash IRQ priority from 2 to 6 to prevent preemption
- flashbdev: protect flash writes from cache flushing and USB MSC
- sdcard: fully reset SDMMC periph before calling HAL DMA functions
- dma: get DMA working on F0 MCUs
- sdram: add support for 32-bit wide data bus and 256MB in MPU cfg
- boards/STM32F769DISC: add optional support for external SDRAM
- add support for STM32F765xx MCUs
- Makefile: include copysign.c in double precision float builds
- adc: fix ADC calibration scale for L4 MCUs, they use 3.0V
- adc: increase sample time for internal sensors on L4 MCUs
- dcmi: add F4/F7/H7 hal files and dma definitions for DCMI periph
- uart: add support for USART3-8 on F0 MCUs
- boards/NUCLEO_F091RC: enable USART3-8 with default pins
- modmachine: re-enable PLLSAI[1] after waking from stop mode
- powerctrl: move function to set SYSCLK into new powerctrl file
- powerctrl: fix configuring APB1/APB2 frequency when AHB also set
- powerctrl: factor code to set RCC PLL and use it in startup
- powerctrl: factor code that configures PLLSAI on F7 MCUs
- powerctrl: optimise passing of default values to set_sysclk
- powerctrl: don't configure clocks if already at desired frequency
- usbd_conf: allocate enough space in USB HS TX FIFO for CDC packet
- mpconfigport.h: enable math.factorial, optimised version
- main: add configuration macros for board to set heap start/end
- usbd_cdc_interface: handle disconnect IRQ to set VCP disconnected
- usbd_cdc_interface: refactor USB CDC tx code to not use SOF IRQ
- spi: fix calculation of SPI clock source on H7 MCUs
- boards/stm32h743.ld: fix total flash size, should be 2048k
- system_stm32: introduce configuration defines for PLL3 settings
- adc: add ADC auto-calibration for L4 MCUs
- flashbdev: add missing include for irq.h
- servo: only initialise TIM5 if it is needed, to save power
- usb: fully deinitialise USB periph when it is deactivated
- powerctrl: move (deep)sleep funcs from modmachine.c to powerctrl.c
- powerctrl: disable IRQs during stop mode to allow reconfig on wake
- boards/STM32F429DISC: enable UART as secondary REPL
- uart: always show the flow setting when printing a UART object
- mboot: provide led_state_all function to reduce code size
- mboot: add support for 4th board LED
- boards: add configuration for putting mboot on PYBv1.x
- mboot: add documentation for using mboot on PYBv1.x
- powerctrl: add support for standby mode on L4 MCUs
- uart: add rxbuf keyword arg to UART constructor and init method
- boards: add STM32L432KC chip configuration files
- add peripheral support for STM32L432
- boards: add NUCLEO_L432KC board configuration files
- split out UART Python bindings from uart.c to machine_uart.c
- uart: factor out code from machine_uart.c that computes baudrate
- uart: rework uart_get_baudrate so it doesn't need a UART handle
- uart: factor out code to set RX buffer to function uart_set_rxbuf
- uart: remove HAL's UART_HandleTypeDef from UART object struct
- uart: simplify deinit of UART, no need to call HAL
- uart: for UART init, pass in params directly, not via HAL struct
- uart: move config of char_width/char_mask to uart.c
- uart: add ability to have a static built-in UART object
- extint: use correct EXTI channels on H7 MCUs for RTC events
- adc: fix calibrated volt/temp readings on H7 by using 16bit scale
- adc: increase ADC sampling time for internal sources on H7 MCUs
- adc: support 16-bit ADC configuration on H7 MCUs
- boards: allow OpenOCD stm_flash procedure to accept single FW img
- boards/NUCLEO_L432KC: specify L4 OpenOCD config file for this MCU
- main: add board config option to enable/disable mounting SD card
- implement UART.irq() method with initial support for RX idle IRQ
- uart: fix uart_rx_any in case of no buffer to return 0 or 1
- uart: always enable global UART IRQ handler on init
- uart: clear overrun error flag after reading RX data register
- uart: make sure user IRQs are handled even with a keyboard intr
- modmachine: fix reset_cause to correctly give DEEPSLEEP on L4 MCU
- sdcard: properly reset SD periph when SDMMC2 is used on H7 MCUs
- wdt: make singleton WDT object const so it goes in ROM
- main: make thread and FS state static and exclude when not needed
- use MICROPY_GC_STACK_ENTRY_TYPE to save some RAM
- .gitattributes: remove special text handling of stm32 usbdev files
- enable MICROPY_PY_BUILTINS_ROUND_INT
- enable descriptors
- enable uio.IOBase
- enable ure.sub()
- call gc_sweep_all() when doing a soft reset

cc3200 port:
- mods: include stream.h to get definition of mp_stream_p_t
- mods: access dict map directly instead of using helper func
- use MICROPY_GC_STACK_ENTRY_TYPE to save some RAM

esp8266 port:
- mpconfigport.h: add some weak links to common Python modules
- modnetwork: return empty str for hostname if STA is inactive
- modnetwork: raise ValueError when getting invalid WLAN id
- modmachine: allow I2C and SPI to be configured out of the build
- change UART(0) to attach to REPL via uos.dupterm interface
- modules/ntptime.py: remove print of newly-set time
- mpconfigport.h: enable ucryptolib module for standard build
- esp8266_common.ld: put mp_keyboard_interrupt in iRAM
- modesp: run ets_loop_iter before/after doing flash erase/write
- let machine.WDT trigger the software WDT if obj is not fed
- Makefile: remove build of libaxtls.a and add back tuned config
- main: increase heap by 2kb, now that axtls rodata is in ROM
- remove scanning of GC pointers in native code block
- ets_alt_task: process idle callback if no other events occurred
- modnetwork: automatically do radio sleep if no interface active
- modnetwork: wait for iface to go down before forcing power mgmt
- machine_uart: add rxbuf keyword arg to UART constructor/init
- main: activate UART(0) on dupterm for REPL before boot.py runs
- esp_mphal: provide mp_hal_pin_od_high_dht so DHT works reliably
- implement high-res timers using new tick_hz argument
- use MICROPY_GC_STACK_ENTRY_TYPE to save some RAM
- enable MICROPY_PY_BUILTINS_ROUND_INT
- enable descriptors
- enable uio.IOBase
- enable ure.sub()
- call gc_sweep_all() when doing a soft reset, cleans up sockets

esp32 port:
- update to latest ESP IDF version
- modnetwork: fix STA/AP activate/deactivate for new IDF API
- Makefile: update to latest ESP IDF version
- esp32.custom_common.ld: put soc code in iram0
- silence ESP-IDF log messages when in raw REPL mode
- Makefile: extract common C & C++ flags for consistent compilation
- add support for building with external SPI RAM
- modnetwork: fix isconnected() when using static IP config
- remove port-specific uhashlib implementation and use common one
- fatfs_port: implement get_fattime so FAT files have a timestamp
- update to latest ESP IDF
- modules: include umqtt library in frozen modules
- mpconfigport.h: enable ucryptolib module
- allow to build with uPy floats disabled
- reduce latency for handling of scheduled Python callbacks
- modnetwork: add support for bssid parameter in WLAN.connect()
- implement WLAN.status() return codes
- modesp32: add raw temperature reading to esp32 module
- modesp32: use MP_ROM_QSTR and MP_ROM_PTR in const locals dict
- modnetwork: add network.(W)LAN.ifconfig('dhcp') support
- update to latest ESP IDF
- fix int overflow in machine.sleep/deepsleep functions
- machine_rtc: fix locals dict entry, init qstr points to init meth
- modesp32: add hall_sensor() function
- network_ppp: add PPPoS functionality
- mpthreadport: prevent deadlocks when deleting all threads
- allocate task TCB and stack from system heap not uPy heap
- machine_uart: add txbuf/rxbuf keyword args to UART construct/init
- machine_uart: implement UART.sendbreak() method
- machine_pwm: support higher PWM freq by auto-scaling timer res
- machine_pwm: on deinit stop routing PWM signal to the pin
- modmachine: enable machine.sleep() now that the IDF supports it
- mphalport: when tx'ing to REPL only release GIL if many chars sent
- modsocket: for socket read only release GIL if socket would block
- machine_pin: add Pin.off() and Pin.on() methods
- Makefile: use system provided math library rather than uPy one
- modules/neopixel.py: change NeoPixel to different default timings
- machine_hw_spi: use separate DMA channels for HSPI and VSPI
- machine_hw_spi: make HW SPI objects statically allocated
- implement high-res timers using new tick_hz argument
- enable MICROPY_PY_BUILTINS_ROUND_INT
- enable descriptors
- enable uio.IOBase
- enable ure.sub()
- call gc_sweep_all() when doing a soft reset

nrf port:
- add new port to Nordic nRF5x MCUs
- align help.c builtin help text to use correct type
- add WT51822-S4AT board
- use --gc-sections to reduce code size
- add compile switch to disable VFS
- enable Link-time optimizations (LTO)
- boards/arduino_primo: add missing hal_rng config used by random mod
- implement NVMC HAL
- disable FAT/VFS by default
- hal/nvmc: remove pre-compiler error thrown in nvmc.h, if on nrf52
- hal/hal_nvmc: fix non-SD code
- boards: update linker scripts
- add micro:bit filesystem
- drivers/bluetooth/ble_drv: don't handle non-events
- modules/uos/microbitfs: make OSError numeric
- main: run boot.py and main.py on startup
- use micropython libm to save flash
- main: add ampy support
- drivers/bluetooth: start advertising after disconnect
- update usage of mp_obj_new_str by removing last parameter
- remove default FROZEN_MPY_DIR
- option to enable Ctrl-C in NUS console
- boards/microbit: add copy of microbit display and image files
- boards/microbit: add copy of microbit font type from microbit-dal
- boards/microbit: rename display/image files from .cpp to .c ext
- boards/microbit: update board modules from C++ to C-code
- boards/microbit: add framework updates to build micro:bit modules
- boards/microbit: attempt to get working display/images without FP
- boards/microbit: add modmicrobit.h to expose module init function
- boards/microbit: include modmicrobit.h in board_modules.h
- drivers/softpwm: rename init function to softpwm_init0
- drivers/ticker: rework ticker functions for microbit display/music
- boards/microbit: update to work with new ticker code
- modules/music: remove init of softpwm/ticker upon music module load
- update main.c to init relevant board drivers, if enabled
- boards/microbit: move microbit target to custom linker script
- boards/microbit/modules: fix tabbing in modmicrobit.c
- boards/microbit: add temperature back to microbit module
- boards/microbit: update docs on top level tick low pri callback
- change board module header from board_modules.h to boardmodules.h
- add if-def around inclusion of nrf_sdm.h in main
- boards/microbit: enable music, display, image, microbit module
- drivers/bluetooth: reset evt_len to size of static buffer each iter
- add support for s132 v5.0.0 bluetooth stack (#139)
- change PYB prefix to MPY
- only search for frozen files if FROZEN_MPY_DIR is set
- mpconfigport: reduce GC stack size for nrf51
- modules/machine/pin: disable pin debug by default
- boards/common.ld: avoid overflowing the .text region
- drivers/ble_drv: fixing sd_ble_enable bug for SD s132 v.2.0.1
- make machine.UART optional
- fix stack size in ld script and enable MICROPY_STACK_CHECK
- improve include of boardmodules.mk
- make LTO configurable via Makefile flag
- boards/microbit/modules: initialize variable in microbit_sleep
- replace custom-HAL with nrfx-HAL
- fix NUS console when using boot.py or main.py
- Makefile: fix .PHONY target
- enable -g flag by default
- make linker scripts more modular
- remove port member from Pin object
- modules/machine/pin: add support for IRQ on Pin's
- modules/machine/spi: sPIM (EasyDMA) backend for nrf52x
- drivers/bluetooth/ble_drv: increase max transfers in progress
- gccollect: use the SP register instead of MSP
- boards: remove unused defines from board config headers
- boards/wt51822_s4at: fixes after nrfx and Pin IRQ introduction
- modules/random: rename port config for RNG
- modules: align method to resolve pin object
- adc: allow for external use of new and value read function
- spi: allow for external use of new and transfer function
- return immediatly from mp_hal_delay_us if 0us is given
- modules/machine/adc: fix to make adc.c compile for nrf51 targets
- bluetooth: fixes for s132 v5 BLE stack
- Makefile: use ""standard"" GCC -fshort-enums instead of --short-enums
- Makefile: remove -fstack-usage
- Makefile: use C11 instead of Gnu99
- Makefile: refine dead-code elimination parameters
- modules/machine/adc: don't compare -1 to an unsigned number
- modules/uos/microbitfs: fix errno defines
- modules/uos/microbitfs: remove unused uos_mbfs_mount
- enable micro:bit FS by default
- boards/feather52: move phony targets to main Makefile
- modules/machine/spi: move enable-guard to prevent wrong includes
- nrfx_config: move back nrf52832 to use non-EasyDMA SPI
- move pyb module to boards module
- add support for reading output pin state
- generalize feather52 target
- bluetooth: add support for s132/s140 v6, remove s132 v2/3/5
- boards: check for stack/heap size using an assert
- quick-fix on const objects with open array dimension in objtuples
- bluetooth: replace BLE REPL (WebBluetooth) URL
- add explicit make flag for oofatfs
- compile nlr objects with -fno-lto flag
- upgrade to nrfx 1.1.0
- drivers: add license text to ticker.h and softpwm.h
- use mp_raise_ValueError instead of nlr_raise(...)
- include $(SRC_MOD) in the build
- Makefile: make sure dependencies for pins_gen.c are correct
- properly use (void) instead of () for function definitions
- boards/microbit: use MICROPY_PY_BUILTINS_FLOAT to detect FP support
- update nrfjprog links to allow to download any version
- drivers/flash: fix incorrect page alignment check
- uos: add mbfs __enter__ and __exit__ handlers
- enable all PWM, RTC and Timer instances for nrf52840
- correct index checking of ADC/PWM/RTCounter instances
- use separate config for each PWM instance
- uart: remove unused UART.char_width field
- uart: fix UART.writechar() to write just 1 byte
- bluetooth: set GAP_ADV_MAX_SIZE to 31 (s132/s140)
- bluetooth: update BLE stack download script

pic16bit port:
- update to compile with latest xc16 v1.35 compiler

teensy port:
- add own uart.h to not rely on stm32's version of the file

zephyr port:
- README: hint about existence of qemu_x86_nommu
- main: after builtin testsuite, drop to REPL
- mpconfigport.h: enable uhashlib and ubinascii modules
- modzsensor: zephyr sensor subsystem bindings
- prj_base.conf: enable DHCP and group static IPs together
- add prj_disco_l475_iot1.conf with sensor drivers
- Makefile: add kobj_types_h_target to Z_EXPORTS
- prj_base.conf: remove outdated CONFIG_NET_NBUF_RX_COUNT option
- prj_qemu_x86.conf: remove outdated CONFIG_RAM_SIZE
- rename CONFIG_CONSOLE_PULL to CONFIG_CONSOLE_SUBSYS
- prj_base.conf: update for net_config subsys refactor
- CMakeLists: update for latest Zephyr CMake usage refactorings

docs:
- library: add documentation for ucollections.deque
- ucryptolib: add docs for new ucryptolib module
- usocket: getaddrinfo: describe af/type/proto optional params
- usocket: minor fixes to grammar of getaddrinfo
- uos: make it clear that block device block_num param is an index
- ure: document sub(), groups(), span(), start() and end()
- ure: document some more supported regex operators
- pyboard: for latex build, use smaller quickref jpg, and no gifs
- library: remove ""only"" directive from all pyb module docs
- library/machine.UART: remove conditional docs for wipy port
- library/machine: remove conditional docs for wake_reason function
- library/machine: remove conditional docs for rng function
- library/index: remove all conditionals from library index
- library/index: add hint about using help('modules') for discovery
- reference/index: remove conditional for inline asm docs
- library/machine: remove conditionals in machine class index
- move WiPy specific Timer class to separate doc file
- library/machine.I2C.rst: clarify availability of primitive I2C ops
- library/machine.UART.rst: specify optional txbuf and rxbuf args
- library/pyb: add deprecation warning for mount and old block proto
- pyboard: fix to use Sphinx style for internal/external links
- library/machine.SPI: add note about baudrate imprecision
- library/network: move specific network classes to their own file
- library/network: make AbstractNIC methods layout correctly
- unify all the ports into one set of documentation
- remove sphinx_selective_exclude, it's no longer used
- wipy: fix links to network.Server, and markup for boot.py
- uselect: describe more aspects of poll.register/modify behavior
- machine.Pin: add note regarding irq handler argument
- machine.Pin: document ""hard"" argument of Pin.irq method
- uio: document StringIO/BytesIO(alloc_size) constructors
- library/uctypes: add examples and make general updates
- conf.py: use https for intersphinx link to docs.python.org
- ure: fully describe supported syntax subset, add example
- differences: clarify the differences are against Python 3.4
- add initial docs for esp32 port, including quick-ref and general
- library: add documentation for esp32 module

travis:
- install explicit version of urllib3 for coveralls
- use build stages and parallel jobs under Travis CI
- add nrf port to Travis CI build

examples:
- embedding: add code markup and fix typo in README.md
- embedding: fix reference to freed memory, lexer src name
- embedding: fix hard-coded MP_QSTR_ value
- unix/ffi_example: clean up and update the ffi example

README:
- update list of ports to include esp32 and nrf
- remove references to ""make axtls"", it's no longer needed
- remove text about selecting different ports in the docs",15337142
318,False,False,2018-05-11T06:40:09Z,2018-05-11T06:57:37Z,"This release brings some significant size reductions to the parser, as well as removal of unused code and additional tests to improve coverage of the core.  A new optional, internal Python stack is introduced for scoped allocation and can be used instead of alloca to provide more efficient and flexible temporary memory; see MICROPY_ENABLE_PYSTACK.  There have been many improvements and internal code refactors of the stm32 port, and the port to the Espressif ESP32 SoC has been merged from its development repository.

Compared to the last release the change in code size is (in bytes, using gcc 7.3):

   bare-arm: -1832
minimal x86: -2608
   unix x64: -5129
unix nanbox: +1024
      stm32: +2120
     cc3200:  -928
    esp8266:  +336

The decrease is mainly due to the reduced size of the parser, where the table of rule pointers was compressed to a table of offsets.  The increase in the stm32 and esp8266 ports is due to additional features, such as more colour formats in the framebuf module and the addition of ujson.dump().

Code coverage (measured by gcov) has improved since the last version (v1.9.3 on the left, v1.9.4 on the right):

py:     15202/15447 = 98.4%  ->  15391/15513 = 99.2%
extmod:  2227/ 2363 = 94.2%  ->   2291/ 2430 = 94.3%

Changes and additions seen by the Python user include: improvement of dir() and tab-completion to list all available attributes of an object; addition of efficient ucollections.deque type with fixed size; better handling and polling support of sockets that get into an error state; implementation of key and cert keyword arguments in ussl.wrap_socket (for axtls); uos.ilistdir now return 4-tuples with the file size in the fourth position.

Changes at the C level include: removal of ""make_qstr_if_not_already"" argument from mp_obj_new_str; rename of mp_exc_recursion_depth to mp_raise_recursion_depth; removal of mp_const_MemoryError_obj; switching of stream close operation from method to ioctl; refactoring of how native emitter code is compiled with a file per architecture.

The stm32 port has seen a lot of improvements and additions, as well as some significant internal refactoring to better support configuring custom boards.  STM32F7 support is improved, USB HS is supported for F723 and F733, the CAN class has improvements to handle bus errors, ctrl-C can now interrupt running code when the REPL is over UART, and the ADC class added the read_timed_multi static method.  Board configuration has seen some internal changes, in particular with setting LD_FILES, TEXT0_ADDR, and TEXT1_ADDR in mpconfigboard.mk (previously LD_FILE, FLASH_ADDR, TEXT_ADDR).  The pin_X and pyb_pin_X identifiers have been changed to be pointers to objects rather than objects, and main is renamed to stm32_main.

A detailed list of changes follows.
py core:
- compile: use alloca instead of qstr_build when compiling import name
- mpconfig: introduce reusable MP_HTOBE32(), etc. macros
- objtype: mp_obj_new_type: name base types related vars more clearly
- objnamedtuple: add _asdict function if OrderedDict is supported
- emitnative: clean up asm macro names so they have dest as first arg
- mkenv.mk: use $(PYTHON) consistently when calling Python tools
- objstr: remove ""make_qstr_if_not_already"" arg from mp_obj_new_str
- objstr: make mp_obj_new_str_of_type check for existing interned qstr
- objstr: when constructing str from bytes, check for existing qstr
- add config option to disable multiple inheritance
- objnamedtuple: allow to reuse namedtuple basic functionality
- objfloat: allow float() to parse anything with the buffer protocol
- modbuiltins: slightly simplify code in builtin round()
- runtime: simplify handling of containment binary operator
- opmethods: include the correct header for binary op enums
- runtime: add MP_BINARY_OP_CONTAINS as reverse of MP_BINARY_OP_IN
- parsenum: improve parsing of floating point numbers
- objdict: reuse dict-view key iterator for standard dict iterator
- annotate func defs with NORETURN when their corresp decls have it
- qstr: rewrite find_qstr to make manifest that it returns a valid ptr
- gc: in gc_realloc, convert pointer sanity checks to assertions
- objgenerator: remove unreachable code for STOP_ITERATION case
- misc.h: add m_new_obj_var_with_finaliser()
- mp_call_function_*_protected(): pass-thru return value if possible
- modbuiltins: use standard arg-parsing helper func for builtin print
- mpprint: make ""%p"" format work properly on 64-bit systems
- mpprint: support ""%lx"" format on 64-bit systems
- malloc: allow to use debug logging if !MICROPY_MALLOC_USES_ALLOCATED_SIZE
- gc: add CLEAR_ON_SWEEP option to debug mis-traced objects
- emitbc, asmbase: only clear emit labels to -1 when in debug mode
- asmbase: revert removal of clearing of label offsets for native emit
- objint_longlong: check for zero division/modulo
- runtime: when tracing unary/binary ops, output op (method) name
- gc: factor out a macro to trace GC mark operations
- gc: in sweep debug output, print pointer as a pointer
- objfun: factor out macro for decoding codestate size
- objfun, vm: add comments on codestate allocation in stackless mode
- objfun: factor out macro for initializing codestate
- mkrules.mk: add ""clean-frozen"" target to clean frozen script/modules dir
- runtime: move mp_exc_recursion_depth to runtime and rename to raise
- introduce a Python stack for scoped allocation
- convert all uses of alloca() to use new scoped allocation API
- runtime: use the Python stack when building *arg and **kwarg state
- objexcept: use INT_FMT when printing errno value
- extend nan-boxing config to have 47-bit small integers
- objtype: implement better support for overriding native's __init__
- objtype: refactor object's handling of __new__ to not create 2 objs
- builtinimport: call __init__ for modules imported via a weak link
- objgenerator: allow to pend an exception for next execution
- map: don't include ordered-dict mutating code when not needed
- mpz: fix pow3 function so it handles the case when 3rd arg is 1
- modio: use correct config macro to enable resource_stream function
- malloc: remove unneeded code checking m_malloc return value
- nlrthumb: fix use of naked funcs, must only contain basic asm code
- nlr: clean up selection and config of NLR implementation
- nlr: factor out common NLR code to macro and generic funcs in nlr.c
- parse: split out rule name from rule struct into separate array
- parse: break rule data into separate act and arg arrays
- parse: pass rule_id to push_result_rule, instead of passing rule_t*
- parse: pass rule_id to push_result_token, instead of passing rule_t*
- parse: remove rule_t struct because it's no longer needed
- parse: compress rule pointer table to table of offsets
- parse: update debugging code to compile on 64-bit arch
- parse: fix macro evaluation by avoiding empty __VA_ARGS__
- mpz: simplify handling of borrow and quo adjustment in mpn_div
- mpz: in mpz_as_str_inpl, convert always-false checks to assertions
- nlr: fix nlr functions for 64bit ports built with gcc on Windows
- compile: combine compiler-opt of 2 and 3 tuple-to-tuple assignment
- objtype: check and prevent delete/store on a fixed locals map
- modbuiltins: for builtin_chr, use uint8_t instead of char for array
- vm: simplify stack sentinel values for unwind return and jump
- parsenum: fix parsing of floats that are close to subnormal
- objfloat: fix case of raising 0 to -infinity
- unicode: clean up utf8 funcs and provide non-utf8 inline versions
- modbuiltins: simplify casts from char to byte ptr in builtin ord
- objrange: implement (in)equality comparison between range objects
- objexcept: remove long-obsolete mp_const_MemoryError_obj
- nlrthumb: do not mark nlr_push as not returning anything
- pystack: use ""pystack exhausted"" as error msg for out of pystack mem
- objdict: disallow possible modifications to fixed dicts
- gc: reduce code size by specialising VERIFY_MARK_AND_PUSH macro
- gc: rename gc_drain_stack to gc_mark_subtree and pass it first block
- gc: make GC stack pointer a local variable
- qstr: add QSTR_TOTAL() macro to get number of qstrs
- modbuiltins: simplify and generalise dir() by probing qstrs
- repl: generalise REPL autocomplete to use qstr probing
- objstr: protect against creating bytes(n) with n negative
- objmodule: factor common code for calling __init__ on builtin module
- builtinimport: add compile-time option to disable external imports
- modmicropython: allow to have stack_use() func without mem_info()
- objstr: remove unnecessary check for positive splits variable
- objint: use MP_OBJ_IS_STR_OR_BYTES macro instead of 2 separate ones
- objdeque: implement ucollections.deque type with fixed size
- objdeque: protect against negative maxlen in deque constructor
- objdeque: use m_new0 when allocating items to avoid need to clear
- py.mk: split list of uPy sources into core and extmod files
- py.mk: remove .. path component from list of extmod files
- use ""GEN"" consistently for describing files generated in the build
- compile: adjust c_assign_atom_expr() to use return instead of goto
- asm*.c: remove unnecessary check for num_locals<0 in asm entry func
- mpz: in mpz_clone, remove unused check for NULL dig
- mpstate.h: add repl_line state for MICROPY_REPL_EVENT_DRIVEN
- vm: fix case of handling raised StopIteration within yield from
- vm: simplify handling of special-case STOP_ITERATION in yield from
- formatfloat: fix rounding of %f format with edge-case FP values
- formatfloat: fix case where floats could render with a "":"" character
- formatfloat: fix case where floats could render with negative digits
- objint: remove unreachable code checking for int type in format func
- misc.h: remove unused count_lead_ones() inline function
- obj.h: clean up by removing commented-out inline versions of macros
- obj.h: move declaration of mp_obj_list_init to objlist.h
- makeqstrdefs.py: optimise by using compiled re's so it runs faster
- objexcept: make MP_DEFINE_EXCEPTION public so ports can define excs
- runtime: check that keys in dicts passed as ** args are strings
- runtime: be sure that non-intercepted thrown object is an exception
- vm: don't do unnecessary updates of ip and sp variables
- vm: optimise handling of stackless mode when pystack is enabled
- modsys: don't compile getsizeof function if feature is disabled
- don't include mp_optimise_value or opt_level() if compiler disabled
- objint: simplify LHS arg type checking in int binary op functions
- objstr: in find/rfind, don't crash when end < start
- stream: switch stream close operation from method to ioctl
- objgenerator: check stack before resuming a generator
- refactor how native emitter code is compiled with a file per arch
- nlrthumb: fix Clang support wrt use of ""return 0""
- mperrno: define MP_EWOULDBLOCK as EWOULDBLOCK, not EAGAIN
- stream: use uPy errno instead of system's for non-blocking check
- obj.h: fix math.e constant for nan-boxing builds
- modbuiltins, repl: start qstr probing from after empty qstr
- runtime: add mp_load_method_protected helper which catches exceptions
- modbuiltins: make built-in hasattr work properly for user types
- repl: use mp_load_method_protected to prevent leaking of exceptions
- modbuiltins: in built-in dir make use of mp_load_method_protected
- modbuiltins: make built-in dir support the __dir__ special method
- objdeque: fix sign extension bug when computing len of deque object

extmod:
- modussl_axtls: socket_read: Handle EAGAIN
- moduhashlib: enable SHA1 hashing when using ""mbedtls"" library
- vfs_fat: mount FatFS on creation so VFS methods can be used
- modussl_axtls: implement key and cert kw args to wrap_socket
- modlwip: commit TCP out data to lower layers if buffer gets full
- machine_signal: change VLA to use new scoped allocation API
- modure: convert alloca() to use new scoped allocation API
- modussl_mbedtls: clean up mbedtls state when error during setup
- modframebuf: add 2-bit color format (GS2_HMSB)
- modframebuf: add 8-bit greyscale format (GS8)
- vfs_fat_file: implement SEEK_CUR for non-zero offset
- modujson: implement ujson.dump() function
- vfs_fat: move ilistdir implementation from misc to main file
- vfs_fat: merge remaining vfs_fat_misc.c code into vfs_fat.c
- vfs_fat: make fat_vfs_open_obj wrapper public, not its function
- vfs_fat: remove declaration of mp_builtin_open_obj
- vfs_fat_diskio: use a C-stack-allocated bytearray for block buf
- machine_spi: make SPI protocol structure public
- vfs_fat: add file size as 4th element of uos.ilistdir tuple
- re1.5: fix compilecode.c compile problem on IAR tool chain
- modlwip: check if getaddrinfo() constraints are supported or not
- vfs: delegate import_stat to vfs.stat to allow generic FS import
- uzlib: fix C-language sequencing error with uzlib_get_byte calls
- modlwip: in ioctl handle case when socket is in an error state

lib:
- tinytest: move from tools/tinytest
- upytesthelper: add MicroPython test helper layer on top of tinytest
- tinytest: clean up test reporting in the presence of stdout output
- utils/pyexec.h: include py/obj.h because its decls are needed
- utils/pyexec: update to work with new MICROPY_HW_ENABLE_USB option
- stm32lib: update library to include support for STM32H7 MCUs
- stm32lib: update library for fix to H7 SPI strict aliasing error
- axtls: update, exposes AES functions to implement ECB cipher mode

drivers:
- nrf24l01: make driver and test run on pyboard, ESP8266, ESP32
- display/ssd1306: make SSD1306 class inherit from FrameBuffer
- sdcard: support old SD cards (<=2GB)
- sdcard: avoid allocation on the heap
- sdcard: update doc for ESP8266 to use correct SPI number
- cc3200: update to work with new stm32 SPI API
- sdcard: update SD mounting example code for ESP8266
- bus: add QSPI abstract type with software QSPI implementation
- memory/spiflash: add support for QSPI interface
- bus: pull out software SPI implementation to dedicated driver
- memory/spiflash: change to use low-level SPI object not uPy one

tools:
- mpy-tool.py: implement freezing of Ellipsis const object
- gen-cpydiff.py: update executable paths to point to new ports dir
- tinytest-codegen.py: generate code for upytesthelper
- tinytest-codegen: wrap lines of exclude_tests
- tinytest-codegen: more excludes after enabling expected output match
- tinytest-codegen: take --target= option for test set selection
- pydfu.py: call set_configuration() on fresh USB device object
- tinytest-codegen: add --stdin switch instead of recently added --target
- tinytest-codegen: ignore system locale, write output in UTF-8
- upip: upgrade upip to 1.2.4

tests:
- net_hosted: add test for socket connect() and poll() behaviour
- basics: add test for containment of a subclass of a native type
- basics/builtin_range: add test for corner case of range slicing
- basics/builtin_locals: add test for using locals() in class body
- cpydiff: add difference-test for second arg of builtin next()
- cpydiff: fix markup where ""`"" (xref) was used instead of ""``"" (code)
- heapalloc_*: refactor some tests to work in strict stackless mode
- heapalloc, heapalloc_super: skip in strict stackless mode
- basics: add test for overriding a native base-class's init method
- extmod: add test which subclasses framebuf.FrameBuffer
- cpydiff: update subclassing Exception case and give work-around
- fix few test for proper ""skipped"" detection with qemu-arm's tinytest
- run-tests: add --list-tests switch
- add tests to improve coverage of py/objtype.c
- run-tests: fix handling of --list-tests wrt skipped tests
- run-tests: add composable --include and --exclude options
- run-tests: don't test for --target=unix with ""pyb is None""
- run-tests: skip running feature checks for --list-tests/--write-exp
- basics: add more set tests to improve coverage of py/objset.c
- extmod/uhashlib_sha256: add test for hashing 56 bytes of data
- float/builtin_float_hash: add test to improve objfloat.c coverage
- unix: add test for printf with %lx format
- basics/generator_pend_throw: add test for just-started generator
- basics/builtin_pow3: add tests for edge cases of pow3
- add some more tests to improve coverage of py/parse.c
- extmod: add some uctypes tests to improve coverage of that module
- basics/memoryerror: add test for out-of-memory using realloc
- basics: rename remaining tests that are for built-in functions
- unix: add coverage test for calling mp_obj_new_bytearray
- automatically skip tests that require eval, exec or frozenset
- rewrite some tests so they can run without needing eval/exec
- run-tests: capture any output from a crashed uPy execution
- basics/deque*: tests for ucollections.deque
- basics: add tests to improve coverage of py/objdeque.c
- basics: add test for calling a subclass of a native class
- stress: add test to create a dict beyond ""maximum"" rehash size
- unix: add coverage tests for mpz_set_from_float, mpz_mul_inpl
- extmod/vfs_fat_fileio1: add test for failing alloc with finaliser
- extmod/uzlib_decompress: add uzlib tests to improve coverage
- float: adjust float-parsing tests to pass with only a small error
- unix: add coverage test for VM executing invalid bytecode
- basics/gc1: add test which triggers GC threshold
- extmod/vfs_fat_fileio1: add test for calling file obj finaliser
- unix: add coverage tests for various GC calls
- move heap-realloc-while-locked test from C to Python
- unix: add coverage test for uio.resource_stream from frozen str
- extmod/time_ms_us: add test for calling ticks_cpu()
- extmod/time_ms_us: fix ticks tests, ticks_diff args are reversed
- basics/builtin_enumerate: add test for many pos args to enumerate
- cpydiff: indent workaround code snippet so it formats correctly
- pyb: update CAN test to expect that auto_restart is printed
- pyb/can: update to test pyb.CAN restart, state, info, inplace recv
- basics/iter1.py: add more tests for walking a user-defined iter
- basics: add test for use of return within try-except
- basics/int_big1.py: add test converting str with non-print chars
- basics: modify int-big tests to prevent constant folding
- stress: add test to verify the GC can trace nested objects
- basics/int_big1.py: add test for big int in mp_obj_get_int_maybe
- basics: add test for subclassing an iterable native type
- basics: add tests for edge cases of nan-box's 47-bit small int
- basics/class_super.py: add tests for store/delete of super attr
- basics/string_compare.py: add test with string that hashes to 0
- micropython: add set of tests for extreme cases of raising exc's
- stress/recursive_gen: add test for recursive gen with iter
- move recursive tests to the tests/stress/ subdir
- pyb/adc.py: fix test so that it really does test ADC values
- pyb: add test for pyb.ADCAll class
- io/bytesio_ext2: remove dependency on specific EINVAL value
- run-tests: support esp32 as a target for running the test suite
- cpydiff: remove core_function_unpacking now that it succeeds
- cpydiff: remove types_str_decodeerror now that it succeeds
- cpydiff: remove working cases from types_float_rounding
- cpydiff: remove types_int_tobytesfloat now that it doesn't fail
- float/float_parse: allow test to run on 32-bit archs

minimal port:
- README: update text to better describe what ""make run"" does
- Makefile: explicitly include lib/utils/printf.c in build
- Makefile: only build with core source files

unix port:
- moduselect: add .dump() method for debugging
- mpconfigport: disable uio.resource_stream()
- add support for using the Python stack
- Makefile: coverage: allow user to pass CFLAGS_EXTRA
- mpconfigport.h: allow to override stackless options from commandline
- mpconfigport_coverage.h: enable MICROPY_PY_IO_RESOURCE_STREAM
- mpconfigport_coverage: enable range (in)equality comparison
- coverage: allow coverage tests to pass with debugging disabled

windows port:
- mpconfigport: provide off_t definition for MSVC port
- mpconfigport: enable some features, including the Python stack
- add Appveyor CI builds for windows mingw port

qemu-arm port:
- rework ""test"" target using upytesthelper
- test_main: clean up invocation of tinytest_main()
- test_main: include setjmp.h because it's used by gc_collect

stm32 port:
- boards/NUCLEO_F429ZI: incr CPU freq to 168MHz to get USB working
- boards: add support for NUCLEO-F746ZG evaluation board
- boards/stm32f767_af.csv: update AF table based on datasheet
- boards/*_af.csv: make consistent use of JTMS, JTCK, SWDIO, SWCLK
- add support for using the Python stack
- usbdev: pass thru correct val for SCSI PreventAllowMediumRemoval
- use corrected capitalization of HAL_SD_CardStateTypedef
- allow to build a board without any hardware I2C ports defined
- uart: add support for 7-bit modes: 7N1 and 7N2
- uart: support board configs with CTS/RTS on UART6
- i2c: fix bug with I2C4 initialisation
- i2c: support more I2C baudrates for F746, and more F7 MCUs
- spi: if MICROPY_HW_SPIn_MISO undefined, do not claim pin on init
- modmachine: handle case of no MICROPY_PY_MACHINE_I2C
- add support for DHT11/DHT22 sensors
- spi: make SPI DMA wait routine more power efficient by using WFI
- sdcard: make SD wait routine more power efficient by using WFI
- usbdev: reduce dependency on py header files
- usbdev: combine all str descriptor accessor funcs into one func
- can: support MCUs without a CAN2 peripheral
- improve support for STM32F722, F723, F732, F733 MCUs
- modmachine: in freq(), select flash latency value based on freq
- sdcard: only define IRQ handler if using SDMMC1 peripheral
- sdcard: use maximum speed SDMMC clock on F7 MCUs
- usbdev: add support for MSC-only USB device class
- usb: allow board to select which USBD is used as the main one
- usbdev: add support for high-speed USB device mode
- i2c: use macros instead of magic numbers for I2C speed grades
- spi: add support for a board naming SPI peripherals 4, 5 and 6
- rng: simplify RNG implementation by accessing raw peripheral regs
- spi: allow SPI peripheral state to persist across a soft reset
- i2c: allow I2C peripheral state to persist across a soft reset
- spi: provide better separation between SPI driver and uPy objs
- update LCD and network drivers to work with new SPI API
- spi: accept machine.SPI object in spi_from_mp_obj() function
- rtc: fix rtc_info flags when LSE fails and falls back to LSI
- rtc: fix RTC init to use LSI if LSI is already selected on boot
- rtc: add compile-time option to set RTC source as LSE bypass
- main: reorder some init calls to put them before soft-reset loop
- main: remove need for first_soft_reset variable
- add mpconfigboard_common.h with common/default board settings
- boards: remove all config options that are set to defaults
- usbdev: fix USBD setup request handler to use correct recipient
- update HAL macro and constant names to use newer versions
- timer: support MCUs that don't have TIM4 and/or TIM5
- introduce MICROPY_HW_ENABLE_USB and clean up USB config
- boards: update all boards to work with new USB configuration
- factor out flash and SPI block-device code to separate files
- change header include guards from STMHAL to STM32 to match dir
- add board config option to enable/disable the ADC
- use ""GEN"" for describing files generated in the build
- flash: use FLASH_TYPEPROGRAM_WORD to support newer HALs
- move MCU-specific cfg from mphalport.h to mpconfigboard_common.h
- spibdev: update to work with new spiflash driver
- spibdev: add option to configure SPI block dev to use QSPI flash
- storage: add option for bdev to supply readblock/writeblocks
- spibdev: convert to use multiple block read/write interface
- qspi: add hardware QSPI driver, with memory-map capability
- i2c: on F4 MCUs report the actual I2C SCL frequency
- boards/stm32f767_af.csv: add ADC column to pin capability list
- boards/NUCLEO_F767ZI: update pins list to include 3 extra pins
- boards: add stm32h743_af.csv file describing H7 GPIO alt funcs
- boards: add stm32h743.ld linker script
- boards: add new NUCLEO_H743ZI board configuration files
- Makefile: add settings to support H7 MCUs
- flash: add flash support for H7 MCUs
- system_stm32: add H7 MCU system initialisation
- mphalport: use GPIO BSRRL/BSRRH registers for H7 MCUs
- wdt: add WDT support for H7 MCUs
- uart: add UART support for H7 MCUs
- timer: add Timer support for H7 MCUs
- modmachine: support basic H7 MCU features
- usbd_conf: add USB support for H7 MCUs
- stm32_it: add support for H7 MCUs
- dma: add DMA support for H7 MCUs
- rtc: add RTC support for H7 MCUs
- extint: add EXTI support for H7 MCUs
- mpconfigboard_common: add STM32H7 common configuration
- main: enable D2 SRAM1/2/3 clocks on H7 MCUs
- boards: add startup_stm32h7.s for H7 series specific startup
- boards: add startup_stm32f7.s for F7 series specific startup
- boards: add startup_stm32f4.s for F4 series specific startup
- boards: add startup_stm32l4.s for L4 series specific startup
- Makefile: use separate startup file for each MCU series
- remove startup_stm32.S, now provided in boards/ for each MCU
- usbd_conf.h: add include of stdint.h to fix compilation issues
- system_stm32: fix CONFIG_RCC_CR_2ND value to use bitwise or
- storage: merge all misc block-dev funcs into a single ioctl func
- storage: make spi_bdev interface take a data pointer as first arg
- storage: remove all SPI-flash bdev cfg, to be provided per board
- storage: introduce MICROPY_HW_ENABLE_INTERNAL_FLASH_STORAGE cfg
- boards/STM32L476DISC: provide SPI-flash bdev config
- storage: provide support for a second block device
- qspi: do an explicit read instead of using memory-mapped mode
- boards/STM32L476DISC: enable CAN peripheral
- can: improve can.recv() so it checks for events, eg ctrl-C
- can: use enums to index keyword arguments, for clarity
- can: add ""auto_restart"" option to constructor and init() method
- can: add CAN.restart() method so controller can leave bus-off
- can: add CAN.state() method to get the state of the controller
- can: add CAN.info() method to retrieve error and tx/rx buf info
- use STM32xx macros instead of MCU_SERIES_xx to select MCU type
- can: add ""list"" param to CAN.recv() to receive data inplace
- dma: enable H7 DMA descriptors
- i2c: add H7 I2C timing configurations
- boards/NUCLEO_H743ZI: enable hardware I2C support
- boards/NUCLEO_H743ZI: disable uSD transceiver
- Makefile: re-enable strict aliasing optimisation for ST HAL files
- consolidate include of genhdr/pins.h to single location in pin.h
- qspi: don't take the address of pin configuration identifiers
- *bdev.c: eliminate dependency on sys_tick_has_passed
- boards: allow boards to have finer control over the linker script
- Makefile: rename FLASH_ADDR/TEXT_ADDR to TEXT0_ADDR/TEXT1_ADDR
- Makefile: allow a board to config either 1 or 2 firmware sections
- boards: add common_basic.ld for a board to have a single section
- boards: add common_bl.ld for boards that need a bootloader
- system_stm32: set VTOR pointer from TEXT0_ADDR
- boards/stm32f767.ld: add definition of FLASH_APP
- boards/stm32h743.ld: remove include of common.ld
- boards/NUCLEO_H743ZI: update to build with new linker management
- dma: remove H7 SDMMC DMA descriptors
- sdcard: add H7 SD card support
- boards/NUCLEO_H743ZI: enable SD card support
- change pin_X and pyb_pin_X identifiers to be pointers to objects
- boards/STM32L476DISC: update to not take the address of pin objs
- add custom, optimised Reset_Handler code
- main: rename main to stm32_main and pass through first argument
- main: only update reset_mode if board doesn't use a bootloader
- mphalport: use MCU regs to detect if cycle counter is started
- dac: add support for H7 MCUs
- boards/NUCLEO_H743ZI: enable DAC peripheral
- i2c: update HAL macros to use new __HAL_RCC prefix
- i2c: fully support peripheral I2C4
- main: guard usb_mode lines in default boot.py by relevant #if
- adc: fix verification of ADC channel 16 for F411 MCUs
- adc: add read_timed_multi() static method, with docs and tests
- adc: optimise read_timed_multi() by caching buffer pointers
- dac: add buffering argument to constructor and init() method
- adc: factor code to optimise adc_read_channel and adc_read
- adc: fix config of EOC selection and Ext-Trig for ADC periph
- adc: factor common ADC init code into adcx_init_periph()
- pin: in pin AF object, remove union of periph ptr types
- can: allow CAN pins to be configured per board
- stm32_it: add IRQ handler for I2C4
- allow a board to configure the HSE in bypass mode
- main: allow a board to configure the label of the flash FS
- sdcard: implement BP_IOCTL_SEC_COUNT to get size of SD card
- rng: set RNG clock source for STM32H7
- boards/NUCLEO_H743ZI: enable RNG for this board
- uart: allow ctrl-C to issue keyboard intr when REPL is over UART
- uart: allow ctrl-C to work with UARTs put on REPL via os.dupterm
- introduce MICROPY_PY_STM config to include or not the stm module
- dac: support MCUs that don't have TIM4/5 and use new HAL macro
- rename i2c.c to pyb_i2c.c
- rename legacy pyb.I2C helper functions to start with pyb_i2c_
- i2c: add low-level I2C driver for F7 MCUs
- machine_i2c: provide hardware I2C for machine.I2C on F7 MCUs
- system_stm32: reconfigure SysTick IRQ priority for L4 MCUs
- boards/NUCLEO_H743ZI: use priority 0 for SysTick IRQ
- adc: add support for H7 MCU series
- boards/NUCLEO_H743ZI: enable ADC peripheral
- mphalport: add mp_hal_pin_config_speed() to select GPIO speed
- usbd_conf: use mp_hal_pin_config() instead of HAL_GPIO_Init
- dac: use mp_hal_pin_config() instead of HAL_GPIO_Init()
- boards: update pins.csv to include USB pins where needed
- mphalport: support ADC mode on a pin for L4 MCUs
- adc: use mp_hal_pin_config() instead of HAL_GPIO_Init()
- dac: make deinit disable the output buffer on H7 and L4 MCUs
- dac: implement printing of a DAC object
- mphalport: optimise the way that GPIO clocks are enabled
- flash: remove unused src parameter from flash_erase()
- dma: always deinit/reinit DMA channels on L4 MCUs
- irq: define IRQ priorities directly as encoded hardware values
- main: clean up and optimise initial start-up code of the MCU
- dma: fix duplicate typedef of struct, it's typedef'd in dma.h
- don't use %lu or %lx for formatting, use just %u or %x
- Makefile: use -O2 to optimise compilation of lib/libc/string0.c
- i2c: make sure stop condition is sent after receiving addr nack
- usb: fix broken pyb.have_cdc() so it works again
- usb: use correct type for USB HID object
- README: update to reflect current MCU support

teensy port:
- update GPIO speed consts to align with changes in stm32 port

esp8266 port:
- etshal.h: make function prototypes compatible with ESP SDK 2.1.0+
- README: emphasize the need to change default WiFi password
- README: add section on using upip
- esp8266_common.ld: put .text of more libs into .irom0.text
- modules/webrepl_setup: fix first-time enable of WebREPL
- modnetwork: make sure to intern string passed to .config(""param"")
- machine_hspi: after an SPI write wait for last byte to transfer
- modules: move dht.py driver to drivers/dht directory
- esppwm: clip negative duty numbers to 0
- README.md: update build instruction to reflect new ports dir
- uart: allow to compile with event-driven REPL
- modnetwork: implement WLAN.status('rssi') for STA interface
- esppwm: always start timer to avoid glitch from full to nonfull
- esp_mphal.h: fix I2C glitching by using input mode for od_high
- modnetwork: allow to get ESSID of AP that STA is connected to
- disable DEBUG_PRINTERS for 512k build

esp32:
- add new port to Espressif ESP32 SoC
- modnetwork: give better error msgs for AP timeout and not-found
- modsocket: implement setsockopt(IP_ADD_MEMBERSHIP)
- mpconfigport.h: add missing uhashlib
- mphalport.h: make mp_hal_pin_<dir> select gpio on the pad
- call initialization function on sha1 and sha256
- implement machine.WDT() class
- README: update general description of port to add avail features
- modutime.c: add localtime and mktime functions
- machine_pwm: always set the channel in the PWM object
- update to latest ESP IDF
- modules: symlink in ntptime.py from esp8266/modules
- modnetwork.c: fix for setting DNS with network.WLAN.ifconfig()
- mpconfigport.h: enable ussl finaliser
- implement wired Ethernet via network.LAN()
- mpconfigport.h: enable websocket module
- modesp: add osdebug() function to disable or change IDF logging
- Makefile: support using IDF_PATH as the env var to the IDF source
- add custom partitions.csv file with uPy specific size
- machine_hw_spi: fix large HW SPI transfers by splitting them up
- README: update toolchain setup
- machine_uart: fix check of UART id so it only allows valid UARTs
- machine_rtc: add RTC class to machine module with sleep impl
- modesp32: add new module ""esp32"" to support extra wake features
- machine_rtc: move export declaration from .c to common .h file
- modnetwork: implement dhcp_hostname for WLAN.config()
- update to the latest ESP IDF
- main: allocate the uPy heap via malloc instead of on the bss
- modsocket: allow getaddrinfo() to take up to 6 args
- modnetwork: implement status('stations') to list STAs in AP mode
- machine_uart: return None from UART read if no data is available
- machine_uart: remove UART event queue object
- README.md: fix typo readme
- mphalport: use esp_timer_get_time instead of gettimeofday
- mphalport: improve mp_hal_delay_us so it handles pending events
- mphalport: improve mp_hal_stdout_tx_XXX functions
- add support for and enable uos.dupterm()
- modsocket: add support for registering socket event callbacks
- mpconfigport: enable webrepl module and socket events
- modules: add support scripts for WebREPL
- add support for the esp32's ULP
- modnetwork: allow to get ESSID of AP that STA is connected to
- README: add --init to submodule update command
- modsocket: correctly handle reading from a peer-closed socket
- use mp_rom_map_elem_t and MP_ROM_xxx macros for const dicts
- modsocket: check for pending events during blocking socket calls

zephyr port:
- README: ""make qemu"" was replaced with ""make run""
- Makefile: clean: Remove generated prj_*_merged.conf
- prj_base.conf: force zephyr.bin build output
- Makefile: convert to new CMake-based Zephyr build system
- Makefile: make prj_$(BOARD).conf optional, again
- Makefile: syscall_macros.h generation was moved from CMake to make
- CMakeLists.txt: update for latest Zephyr buildsys changes
- CMakeLists.txt: properly separate CFLAGS parts gotten from CMake
- main: move var declarations to the top of file
- add support for binary with builtin testsuite
- prj_base.conf: bump MAIN_STACK_SIZE to let builtin testsuite run
- Makefile: clean: Clean libmicropython.a too
- main: remove unused do_str() function

docs:
- esp8266/general: TLS limitations: mention also ""ussl"" module limitations
- ure: add flags arg to ure.compile(), mention that ure.DEBUG is optional
- ure: emphasize not supported features more
- _thread: add a placeholder docs for _thread module
- library/network: enhance AbstractNIC.status to take an argument
- add notes on heap allocation caused by bound method refs
- uselect: poll: Explicitly specify that no-timeout value is -1
- uctypes: tweak descriptor reference to hopefully be easier to follow
- uselect: describe POLLHUP/POLLERR semantics in more details
- library/utime: fix incorrect example with ticks_diff args order
- uselect: ipoll: Fix grammar/wording of one-shot flag description
- glossary: describe the callee-owned tuple concept
- uerrno: fix xref-vs-code markup
- glossary: describe ""stream"" term
- glossary: describe string interning
- library: add xrefs to ""stream"" dictionary entry for many modules
- glossary: clarify wording for ""baremetal""
- reference/packages: add chapter on distribution packages and deployment
- packages: add quick ""Creating distribution packages"" section
- packages: mpy_bin2res no longer required to create resources
- conf: reference CPython 3.5 docs
- packages: use ""install_dir/"" in examples
- packages: explicitly recommend usage of setuptools instead of distutils
- library/index: elaborate uPy libraries intro
- library/pyb.rst: add note about availability of USB MSC-only mode
- esp8266: update PWM doc regarding clipping of min/max values
- esp8266: add a note concerning GPIO16 pull capabilities
- library/ujson: document dump() and load() functions
- library/usocket: make xref to uerrno explicitly a module reference
- library/micropython: describe optimisation levels for opt_level()
- library/uos: create sections for distinct parts and document uname
- library/uos: document mount, umount, VfsFat and block devices
- reference/repl.rst: fix some minor errors in the REPL tutorial
- library/pyb.ADC: document new features for ADCAll
- library/pyb.ADC: remove outdated ADCAll code example
- library: add ussl module to library index for unix port

travis:
- pass -j4 to make to speed up compilation
- update for qemu-arm's testing moved to Makefile.test
- build and test strict stackless build
- add Unix coverage test for script via stdin",15337142
319,False,False,2017-11-01T00:20:08Z,2017-11-01T00:44:31Z,"The main change in this release is the introduction of a ""ports/"" subdirectory at the top-level of the repository, and all of the ports are moved here.  In the process the ""stmhal"" port is renamed to ""stm32"" to better reflect the MCU that it targets.  In addition, the STM32 CMSIS and HAL sources are moved to a new submodule called ""stm32lib"". 

The bytecode has changed in this release, compared to the previous release, and as a consequence the .mpy version number has increased to version 3.  This means that scripts compiled with the previous mpy-cross must be recompiled to work with this new version.

There have also been various enhancements and optimisations, such as: check for valid UTF-8 when creating str objects, support for reverse special binary operations like `__radd__`, full domain checking in the math module, support for floor-division and modulo in the viper emitter, and addition of stack overflow checking when executing a regex.

The stm32 port sees improved support for F7 MCUs, addition of a new board B_L475E_IOT01A based on the STM32L475, and support for the Wiznet W5500 chipset along with improved socket behaviour.

A detailed list of changes follows.

py core:
- objstr: startswith, endswith: check arg to be a string
- nlrx86,x64: replace #define of defined() with portable macro usage
- objtype: handle NotImplemented return from binary special methods
- objtype: mp_obj_class_lookup: improve debug logging
- map: remove unused new/free functions
- make m_malloc_fail() have void return type, since it doesn't return
- modstruct: in struct.pack, stop converting if there are no args left
- modstruct: check and prevent buffer-read overflow in struct unpacking
- modstruct: check and prevent buffer-write overflow in struct packing
- nlrthumb: get working again on standard Thumb arch (ie not Thumb2)
- objfloat: fix binary ops with incompatible objects
- obj: fix comparison of float/complex NaN with itself
- objtype: implement fallback for instance inplace special methods
- objtuple: properly implement comparison with incompatible types
- objstr: add check for valid UTF-8 when making a str from bytes
- objlist: properly implement comparison with incompatible types
- runtime0.h: move relational ops to the beginning of mp_binary_op_t
- runtime0.h: move MP_BINARY_OP_DIVMOD to the end of mp_binary_op_t
- objtype: make sure mp_binary_op_method_name has full size again
- runtime0.h: put inplace arith ops in front of normal operations
- builtinhelp: simplify code slightly by extracting object type
- runtime: implement dispatch for ""reverse op"" special methods
- nlrx86: fix building for Android/x86
- builtinhelp: change signature of help text var from pointer to array
- runtime.h: change empty mp_warning macro so var-args are non empty
- modbuiltins: implement abs() by dispatching to MP_UNARY_OP_ABS
- {objfloat,objcomplex}: optimise MP_UNARY_OP_ABS by reusing variables
- mpconfig.h: add note that using computed gotos in VM is not C99
- objstr: strip: don't strip ""\0"" by default
- objexcept: prevent infinite recursion when allocating exceptions
- stream: remove unnecessary checks for NULL return from vstr_add_len
- vstr: raise a RuntimeError if fixed vstr buffer overflows
- vm: use lowercase letter at start of exception message
- persistentcode: define mp_raw_code_save_file() for any unix target
- add config option to print warnings/errors to stderr
- objfloat: support raising a negative number to a fractional power
- objset: simplify set and frozenset by separating their locals dicts
- objset: check that RHS of a binary op is a set/frozenset
- objset: include the failed key in a KeyError raised from set.remove
- objtype: change type of enum-to-qstr table to uint16_t to save space
- objstr: make empty bytes object have a null-terminating byte
- mpprint: only check for null string printing when NDEBUG not defined
- objtype: clean up unary- and binary-op enum-to-qstr mapping tables
- persistentcode: bump .mpy version number to version 3
- bc: update opcode_format_table to match the bytecode
- modmath: add full checks for math domain errors
- modmath: convert log2 macro into a function
- formatfloat: don't print the negative sign of a NaN value
- formatfloat: use standard isinf, isnan funcs instead of custom ones
- modbuiltins: use existing utf8_get_char helper in builtin ord func
- emitnative: implement floor-division and modulo for viper emitter
- objtype: use CPython compatible method name for sizeof
- objtype: fit qstrs for special methods in byte type
- objtype: define all special methods if requested
- objtype: introduce MICROPY_PY_ALL_INPLACE_SPECIAL_METHODS

extmod:
- modubinascii: only include uzlib/tinf.h when it's really needed
- modussl_mbedtls: allow to compile with MBEDTLS_DEBUG_C disabled
- machine_pinbase: put PinBase singleton in ROM
- re1.5: upgrade to v0.8.2, adds hook for stack overflow checking
- modure: add stack overflow checking when executing a regex
- uos_dupterm: update uos.dupterm() and helper funcs to have index
- uos_dupterm: swallow any errors from dupterm closing the stream
- vfs: replace VLA in proxy func with small, static sized array
- modussl: add finaliser support for ussl objects
- modussl_mbedtls: allow to compile with unix coverage build

lib:
- add new submodule, stm32lib containing STM32 CMSIS and HAL source
- embed/abort_: use mp_raise_msg helper function
- libm: fix tanhf so that it correctly handles +/- infinity args
- libm: remove implementation of log2f, use MP_NEED_LOG2 instead
- axtls: update, support for SSL_EAGAIN return code
- berkeley-db-1.xx: update, allow to override MINCACHE, DEFPSIZE

drivers:
- memory/spiflash: change from hard-coded soft SPI to generic SPI
- display/ssd1306.py: improve performance of graphics methods
- nrf24l01: make nRF24L01 test script more portable
- display/ssd1306: implement SSD1306_I2C poweron method
- display/ssd1306: make poweron() work the same with SSD1306_SPI
- wiznet5k: improve the performance of socket ops with threading
- wiznet5k: get low-level W5500 driver working

tools:
- upip: upgrade to 1.2.2
- pyboard: use repr() when quoting data in error messages
- pyboard: update docstring for additional device support

tests:
- object_new: better messages, check user __new__() method
- class_new: add checks for __init__ being called and other improvements
- class_new: add another testcase for __new__/__init__ interaction
- class_inplace_op: test for inplace op fallback to normal one
- run-bench-tests: update locations of executables, now in ports/
- class_reverse_op: test for reverse arith ops special methods
- run-tests: skip class_inplace_op for minimal profile
- run-tests: fix copy-paste mistake in var name
- cpydiff: add cases for locals() discrepancies
- extmod: add test for ure regexes leading to infinite recursion
- extmod: add test for '-' in character class in regex
- run-tests: close device under test using ""finally""
- net_inet: update tls test to work with CPython and incl new site

unix port:
- rename modsocket.c to modusocket.c
- modusocket: remove #if MICROPY_SOCKET_EXTRA code blocks
- enable MICROPY_PY_REVERSE_SPECIAL_METHODS

stm32 port:
- modmachine: make machine.bootloader() work when MPU is enabled
- modmachine: improve support for sleep/deepsleep on F7 MCUs
- compute PLL freq table during build instead of at run time
- modmachine: for F7 MCU, save power by reducing internal volt reg
- boards/pllvalues.py: make script work with both Python 2 and 3
- Makefile: use lib/stm32lib instead of local cmsis and hal files
- remove cmsis and hal files, they are now a submodule
- Makefile: automatically fetch stm32lib submodule if needed
- update to new STM Cube HAL library
- fix clock initialisation of L4 MCUs
- rename stmhal port directory to stm32
- remove unused usbd_msc.c file
- boards: change remaining stm32f4xx_hal_conf.h to unix line ending
- boards: change linker scripts to use ""K"" instead of hex byte size
- boards: fix I2C1 pin mapping on NUCLEO_F401RE/F411RE boards
- i2c: when scanning for I2C devices only do 1 probe per address
- modnwwiznet5k: release the GIL on blocking network operations
- boards: add new board B_L475E_IOT01A based on STM32L475
- make-stmconst.py: make sure mpz const data lives in ROM
- timer: make pyb.Timer() instances persistent
- mpconfigport.h: add configuration for max periphs on L4 series
- usbdev: make the USBD callback struct const so it can go in ROM
- usbdev: change static function variable to non-static
- usbdev: put all CDC state in a struct
- usbdev: put all HID state in a struct
- usbdev: simplify CDC tx/rx buffer passing
- usbdev: simplify HID tx/rx buffer passing
- usbdev/core: add state parameter to all callback functions
- usbdev: put all state for the USB device driver in a struct
- usbdev: simplify pointers to MSC state and block dev operations
- usbdev: merge all global USB device state into a single struct
- usbdev: make device descriptor callbacks take a state pointer
- usbdev: move all the USB device descriptor state into its struct
- timer: enable ARPE so that timer freq can be changed smoothly
- modnwwiznet5k: get the IP address of an established socket
- boards: fix typos in stm32f767_af.csv table
- usbd_cdc_interface: don't reset CDC output buf on initialisation
- modnwwiznet5k: implement WIZNET5K.isconnected() method
- modusocket: make getaddrinfo() work when passed an IP address
- modusocket: return OSError(-2) if getaddrinfo fails
- mpconfigport.h: add MICROPY_THREAD_YIELD() macro
- modnwwiznet5k: add support for W5500 Ethernet chip
- modnwwiznet5k: increase SPI bus speed to 42MHz
- modnwwiznet5k: implement stream ioctl for the Wiznet driver
- mphalport: improve efficiency of mp_hal_stdout_tx_strn_cooked
- make uos.dupterm() conform to specs by using extmod version

cc3200 port:
- enable micropython.kbd_intr() method
- use standard implementation of keyboard interrupt

esp8266 port:
- rename axtls_helpers.c to posix_helpers.c
- posix_helpers: set ENOMEM on memory alloc failure
- set DEFPSIZE=1024, MINCACHE=3 for ""btree"" module
- esp_mphal: send data in chunks to mp_uos_dupterm_tx_strn
- modnetwork: add ""bssid"" keyword arg to WLAN.connect() method
- modules/webrepl_setup: add info about allowed password length

zephyr port:
- Makefile: revamp ""test"" target after ports were moved to ports/
- use CONFIG_NET_APP_SETTINGS to setup initial network addresses
- switch to interrupt-driven pull-style console

pic16bit port:
- add definition of SEEK_SET to unistd.h

docs:
- pyboard/tutorial: add ""timeout=0"" to UART in pass-through example
- more xrefs to ""MicroPython port"" in glossary
- library/network: fix ref to ""socket"" module (should be ""usocket"")
- machine.Signal: improve style/grammar and add usage example
- library: add description of ""index"" parameter to uos.dupterm()
- library/micropython: fix typo in RST formatting
- library/framebuf.rst: generalise constructor to all colour formats
- btree: describe page caching policy of the underlying implementation
- esp8266/tutorial: update neopixel with example of using 4 bbp
- library/network: clarify usage of ""bssid"" arg in connect() method
- pyboard/quickref: add info for Switch, RTC, CAN, Accel classes
- pyboard/tutorial: update now that yellow LED also supports PWM
- esp8266/quickref: add quickref info for RTC class
- library: add missing cross-ref links for classes in pyb module
- library/network: update docs to state that W5500 is supported
- uselect: document one-shot polling mode
- usocket: elaborate descriptions
- usocket: document inet_ntop(), inet_pton()
- library/network: add dhcp_hostname parameter
- reference/isr_rules: minor typo correction
- ussl: fix module name refs and use ""MicroPython port"" term
- esp8266/general: add section on TLS limitations
- usocket: document that settimeout() isn't supported by all ports
- ure: add ""|"" (alternative) to the list of supported operators
- reference/isr_rules.rst: add tutorial on use of micropython.schedule()

travis:
- use --upgrade when pip is installing cpp-coveralls
- update build command now that stm32 Wiznet config has changed

examples:
- hwconfig_console: add .on()/.off() methods

all:
- convert mp_uint_t to mp_unary_op_t/mp_binary_op_t where appropriate
- convert remaining ""mp_uint_t n_args"" to ""size_t n_args""
- make new ports/ sub-directory and move all ports there
- update Makefiles and others to build with new ports/ dir layout
- remove inclusion of internal py header files
- use NULL instead of """" when calling mp_raise exception helpers

README:
- update ""Dependencies"" section
- add explicit section on contributing
- add gcc and arm-none-eabi-newlib to list of required components

.gitattributes:
- remove obsolete entries for stmhal/hal, stmhal/cmsis
- add entries for files that will move to ports/ dir",15337142
320,False,False,2017-08-23T01:46:41Z,2017-08-23T01:58:16Z,"This release brings general improvements and bug fixes to the core and
various ports, as well as documentation additions, clean-ups and better
consistency.  And effort has been made to clean up the source code to
make it more consistent across the core and all ports.

There is a new tool ""mpy_bin2res.py"" to convert arbitrary (binary) files
to Python resources for inclusion in source code (frozen or otherwise).

The ussl module has seen improvements, including implementation of
server_hostname (for axtls) and server_side mode (for mbedtls).

There is now a double-precision float math library and stmhal has support
to build firmware with software or hardware double-precision.

A detailed list of changes follows.

py core:
- formatfloat: fix number of digits and exponent sign when rounding
- modthread: raise RuntimeError in release() if lock is not acquired
- compile: raise SyntaxError if positional args are given after */** 
- objint: support ""big"" byte-order in int.to_bytes()
- objint: in to_bytes(), allow length arg to be any int and check sign 
- compile: fix bug with break/continue in else of optimised for-range
- compile: optimise emitter label indices to save a word of heap 
- builtinimport: remove unreachable code for relative imports
- objnamedtuple: simplify and remove use of alloca building namedtuple
- mpprint: remove unreachable check for neg return of mp_format_float
- binary: add missing ""break"" statements
- runtime: mark m_malloc_fail() as NORETURN
- objstr: remove unnecessary ""sign"" variable in formatting code 
- vm: make ""if"" control flow more obvious in YIELD_FROM opcode
- modmath: check for zero division in log with 2 args 
- makeversionhdr.py: update to parse new release line in docs/conf.py
- objdict: factorise dict accessor helper to reduce code size 
- change mp_uint_t to size_t in builtins code 
- repl: change mp_uint_t to size_t in repl helpers
- compile: combine arith and bit-shift ops into 1 compile routine
- compile: use switch-case to match token and operator
- objgenerator: allow to hash generators and generator instances
- gc: refactor assertions in gc_free function
- vm: make n_state variable local to just set-up part of VM
- asmx64: support moving a 64-bit immediate to one of top 8 registers
- modmicropython: cast stack_limit value so it prints correctly
- builtinevex: add typechecking of globals/locals args to eval/exec
- py.mk: make berkeley-db C-defs apply only to relevant source files
- mperrno: allow mperrno.h to be correctly included before other hdrs
- mpz: make mpz_is_zero() an inline function
- implement raising a big-int to a negative power
- mkrules.mk: show frozen modules sizes together with executable size
- objtuple: allow to use inplace-multiplication operator on tuples
- objstr: raise an exception for wrong type on RHS of str binary op
- modsys: initial implementation of sys.getsizeof()
- binary.c: fix bug when packing big-endian 'Q' values
- add verbose debug compile-time flag MICROPY_DEBUG_VERBOSE
- binary: change internal bytearray typecode from 0 to 1
- objstringio: prevent offset wraparound for io.BytesIO objects
- objstringio: fix regression with handling SEEK_SET
- stream: seek: Consistently handle negative offset for SEEK_SET
- mkrules.mk: use ""find -path"" when searching for frozen obj files
- compile: remove unused pn_colon code when compiling func params
- objcomplex: remove unnecessary assignment of variable
- formatfloat: don't post-increment variable that won't be used again
- use ""static inline"" for funcs that should be inline
- asmthumb: use existing macro to properly clear the D-cache

extmod:
- modussl_axtls: update for axTLS 2.1.3
- modussl_axtls: implement server_hostname arg to wrap_socket()
- move modonewire.c from esp8266 to extmod directory
- modure: if input string is bytes, return bytes results too
- modubinascii: add check for empty buffer passed to hexlify
- modussl_axtls: allow to close ssl stream multiple times
- modussl_mbedtls: support server_side mode
- modussl_mbedtls: when reading and peer wants to close, return 0
- modframebuf: fix invalid stride for odd widths in GS4_HMSB fmt
- modussl_mbedtls: make socket.close() free all TLS resources
- modframebuf: consistently use ""col"" as name for colour variables
- modussl_mbedtls: implement non-blocking SSL sockets
- machine_signal: fix parsing of invert arg when Pin is first arg
- modframebuf: use correct initialization for .locals_dict
- modlwip: implement setsockopt(IP_ADD_MEMBERSHIP)
- modussl_mbedtls.c: add ussl.getpeercert() method
- modubinascii: rewrite mod_binascii_a2b_base64
- modubinascii: don't post-increment variable that won't be used
- modonewire: rename public module to mp_module_onewire
- for uos.stat interpret st_size member as an unsigned int
- use ""static inline"" for funcs that should be inline

lib:
- axtls: upgrade to axTLS 2.1.3 + MicroPython patchset
- libm/math: remove implementations of float conversion functions
- add libm_dbl, a double-precision math library, from musl-1.1.16

drivers:
- onewire: move onewire.py, ds18x20.py from esp8266 to drivers
- onewire: enable pull-up when init'ing the 1-wire pin

tools:
- gen-cpydiff: use case description as 3rd-level heading
- pyboard: add license header
- mpy_bin2res: tools to convert binary resources to Python module
- mpy-tool.py: don't generate const_table if it's empty
- mpy-tool.py: fix missing argument in dump() function

tests:
- net_inet/test_tls_sites.py: integration test for SSL connections
- net_inet: add tests for accept and connect in nonblocking mode
- basics: add tests for for-else statement
- net_inet: move tests which don't require full Internet to net_hosted
- connect_nonblock: refactor towards real net_hosted test
- auto detect floating point capabilites of the target
- import: add a test for the builtin __import__ function
- import: update comment now that uPy raises correct exception
- basics/namedtuple1: add test for creating with pos and kw args
- unix/extra_coverage: add test for mp_vprintf with bad fmt spec
- basics: add tests for arithmetic operators precedence
- cpydiff/modules_deque: elaborate workaround
- cpydiff/core_class_mro: move under Classes, add workaround
- cpydiff/core_arguments: move under Functions subsection
- cpydiff/core_class_supermultiple: same cause as core_class_mro
- cpydiff: improve wording, add more workarounds
- cpydiff: add case for str.ljust/rjust
- rename exec1.py to builtin_exec.py
- basics/builtin_exec: test various globals/locals args to exec()

minimal port:
- Makefile: enable gc-sections to remove unused code
- remove unused stmhal include from Makefile
- use size_t for mp_builtin_open argument

unix port:
- modtime: replace strftime() with localtime()
- mpconfigport.mk: update descriptions of readline and TLS options
- Makefile: disable assertions in the standard unix executable
- modjni: convert to mp_rom_map_elem_t
- for uos.stat interpret st_size member as an unsigned int

stmhal port:
- mpconfigport.h: remove config of PY_THREAD_GIL to use default
- make error messages more consistent across peripherals
- add initial implementation of Pin.irq() method
- add .value() method to Switch object, to mirror Pin and Signal
- move pybstdio.c to lib/utils/sys_stdio_mphal.c for common use
- add ""quiet timing"" enter/exit functions
- make available the _onewire module, for low-level bus control
- modules: provide sym-link to onewire.py driver
- boards/stm32f405.ld: increase FLASH_TEXT to end of 1MiB flash
- sdcard: allow a board to customise the SDIO pins
- add possibility to build with double-precision floating point
- boards: enable double-prec FP on F76x boards
- Makefile: use hardware double-prec FP for MCUs that support it
- Makefile: rename FLOAT_IMPL to MICROPY_FLOAT_IMPL to match C name
- Makefile: add CFLAGS_EXTRA to CFLAGS so cmdline can add options
- mpconfigport.h: allow MICROPY_PY_THREAD to be overridden
- boards: add configuration files for NUCLEO_F429ZI
- boards/NUCLEO_F429ZI: change USB config from HS to FS peripheral
- reduce size of ESPRUINO_PICO build so it fits in flash
- servo: make pyb.Servo(n) map to Pin('Xn') on all MCUs
- servo: don't compile servo code when it's not enabled
- use ""static inline"" for funcs that should be inline

cc3200 port:
- modusocket: simplify socket.makefile() function
- make non-zero socket timeout work with connect/accept/send
- modusocket: fix connect() when in non-blocking or timeout mode
- use the name MicroPython consistently in code

esp8266 port:
- Makefile: bump axTLS TLS record buffer size to 5K
- Makefile: allow FROZEN_DIR,FROZEN_MPY_DIR to be overridden
- Makefile: add LIB_SRC_C variable to qstr auto-extraction list
- make onewire module and support code usable by other ports
- modonewire: move low-level 1-wire bus code to modonewire.c
- modonewire: make timings static and remove onewire.timings func
- reinstate 1-wire scripts by sym-linking to drivers/onewire/
- move mp_hal_pin_open_drain from esp_mphal.c to machine_pin.c
- enable MICROPY_ENABLE_FINALISER
- README: make ""Documentation"" a top-level section
- machine_rtc: use correct arithmetic for aligning RTC mem len
- mpconfigport_512k: use terse error messages to get 512k to fit
- mpconfigport.h: make socket a weak link
- modesp: remove unused constants: STA_MODE, etc
- general: add known issue of WiFi RX buffers overflow
- use size_t for mp_builtin_open argument
- fix UART stop bit constants

zephyr port:
- Makefile: rework dependencies and ""clean"" target
- Makefile: revert prj.conf construction rule to the previous state
- remove long-obsolete machine_ptr_t typedef's
- Makefile: explicitly define default target as ""all""
- modusocket: allow to use socketized net_context in upstream
- modusocket: socket, close: switch to native Zephyr socket calls
- modusocket: bind, connect, listen, accept: Swtich to native sockets
- modusocket: send: switch to native sockets
- modusocket: recv: switch to native sockets
- modusocket: fully switch to native Zephyr sockets
- modzephyr: add current_tid() and stacks_analyze() functions
- prj_base.conf: enable CONFIG_INIT_STACKS
- modusocket: update struct sockaddr family field name
- prj_96b_carbon.conf: re-enable networking on Carbon
- modzephyr: add shell_net_iface() function

docs:
- btree: add hints about opening db file and need to flush db
- select: rename to uselect, to match the actual module name
- license: update copyright year
- esp8266/tutorial/intro: discourage use of 512kb firmwares
- esp8266/tutorial/intro: Sphinx requires blank lines around literal blocks
- conf.py: include 3 levels of ToC in latexpdf output
- gc: mark mem_alloc()/mem_free() as uPy-specific
- gc: document gc.threshold() function
- builtins: list builtin exceptions
- conf.py: set default_role = 'any'
- lcd160cr: group related constants together and use full sentences
- ref/speed_python: update and make more hardware-neutral
- library/gc: fix grammar and improve readability of gc.threshold()
- move all ports docs to the single ToC
- topindex.html: remove link to wipy.io, it's no longer available
- conf.py: add .venv dir to exclude_patterns
- move topindex.html to templates/ subdir
- differences/index_template: use consistent heading casing
- builtins: add AssertionError, SyntaxError, ZeroDivisionError
- add glossary
- conf.py: switch to ""new"" format of intersphinx_mapping
- conf.py: add file for global replacements definition
- library: add CPython docs xref to each pertinent module
- replace.inc: add |see_cpython|, to xref individual symbols from CPython
- conf.py: set ""version"" and ""release"" to the same value
- *_index: drop ""Indices and tables"" pseudo-section
- pyboard: move hardware info into General Info chapter
- uerrno: document ""uerrno"" module
- esp8266/general.rst: fix name of NTP module
- pyboard: move info about using Windows from topindex to general
- uzlib: update description of decompress() and mention DecompIO
- pyboard/tutorial/amp_skin: add example for playing large WAV files
- library/ubinascii: update base64 docs
- library/usocket: move socket.error to its own section
- library/usocket: describe complete information on address formats
- glossary: elaborate on possible MicroPython port differences
- glossary: fix typos in micropython-lib paragraph
- index: rewrite introduction paragraph to avoid confusion
- use the name MicroPython consistently in documentation
- consistently link to micropython-lib in glossary

all:
- make more use of mp_raise_{msg,TypeError,ValueError} helpers
- unify header guard usage
- remove trailing spaces, per coding conventions
- don't include system errno.h when it's not needed
- use the name MicroPython consistently in comments
- make use of $(TOP) variable in Makefiles, instead of ""..""
- raise exceptions via mp_raise_XXX
- make static dicts use mp_rom_map_elem_t type and MP_ROM_xxx macros

README:
- mention support for bytecode and frozen bytecode
- improve description of precompiled bytecode; mention mpy-cross

CODECONVENTIONS:
- clarify MicroPython changes sign-off process
- start to describe docs conventions
- describe docs use of markup for None/True/False

travis:
- build STM32F769DISC board instead of F7DISC to test dbl-prec FP
- pin cpp-coveralls at 0.3.12
",15337142
321,False,True,2019-05-08T09:25:28Z,2019-05-08T11:10:04Z,"* 4.22 porting
* Various stability fixes",65116537
322,False,True,2018-11-28T13:16:16Z,2018-11-28T14:36:37Z,"* added ue.get_long_package_asset_name()
* added get_asset_identifier_referencers()
* added submenu api
* allow structs in subclassing api
* fixed save_package()
* added static_mesh_import_lod()",65116537
323,False,True,2018-10-20T14:07:06Z,2018-10-20T14:46:48Z,"* Improved foliage API

* Added metadata tag api

* Support for 4.21",65116537
324,False,True,2018-09-07T18:13:07Z,2018-09-08T07:25:52Z,"* Various slate fixes
* Added ImportModules configuration directive",65116537
325,False,True,2018-09-06T10:31:50Z,2018-09-06T14:08:25Z,"* Archetypes api
* Added support for arguments in broadcast()
* Actor Folders api
",65116537
326,False,True,2018-08-15T07:08:31Z,2018-08-15T08:24:32Z,* Fixed PyFbxFactory auto detection,65116537
327,False,True,2018-08-13T14:26:14Z,2018-08-13T17:01:32Z,"* Improved save_package()

* Automatically set import bounds for skeletal meshes

* Extended the FTransform api with vector/position/rotation transformations",65116537
328,False,True,2018-08-10T06:37:25Z,2018-08-10T09:43:42Z,"* Improved memory handling

* Fixed PyFbxFactory for 4.20

* added ue.set_brutal_finalize() to allow skipping of Py_Finalize() call at editor shutdown",65116537
329,False,True,2018-08-05T14:11:16Z,2018-08-05T15:48:01Z,"* Improved factories API

* slate reference counting fixes

* more 4.20 improvements",65116537
330,False,True,2018-07-27T10:00:14Z,2018-07-27T11:15:20Z,* Improved memory management,65116537
331,False,True,2018-07-23T12:22:00Z,2018-07-23T13:51:32Z,"* Android support

* 4.20 support

* UStruct's are now passed by ref (you can use .clone() to make a value-based struct from a ref one)

* Added is_loading_assets() and wait_for_assets()

* Added on_main_frame_creation_finished() hook
",65116537
332,False,True,2018-06-30T12:25:31Z,2018-06-30T13:23:24Z,"* added support for Python 3.7

* animation api improvements",65116537
333,False,True,2018-06-26T13:27:33Z,2018-06-26T17:48:14Z,* added IAssetEditorInstance wrapper,65116537
334,False,True,2018-06-24T13:41:06Z,2018-06-24T17:01:28Z,"* Threading is now enabled by default.

* Improved support for Qt4/Qt5/PySide2

* Added KDop collision api",65116537
335,False,True,2018-06-07T16:18:26Z,2018-06-10T17:57:20Z,"* Preliminary modularization of features (the first module is the Automation one)
* Improved foliage api
* fixed HTTP api
* improved asset renaming system
* added wrapper for FSlowTask ",65116537
336,False,True,2018-04-25T13:20:45Z,2018-04-25T15:12:32Z,"* Greatly improved the memory management for both Slate and UObject

* Fixed graphs generation (Blueprint, Materials, Animations....)",65116537
337,False,True,2018-03-30T07:48:23Z,2018-03-30T10:24:46Z,* Added support for native array/pod properties,65116537
338,False,True,2018-03-27T12:57:06Z,2018-03-27T14:28:24Z,"* 4.19 Support

* Improved Sequencer API",65116537
339,False,True,2018-03-05T11:11:12Z,2018-03-05T18:00:52Z,"* Fixed subclassing api

* Fixed UTF8_TO_TCHAR usage

*  added game_viewport_client_set_rendering_flag()

* added get_matrix() to FTransform",65116537
340,False,True,2018-02-26T18:44:26Z,2018-02-27T09:00:15Z,"* A new memory manager has been included that should improve memory usage as well as integration with the Unreal Engine GC

* the ref() method has been added to struct to get a reference/pointer to the struct instead of a copy",65116537
341,False,True,2017-12-29T06:25:16Z,2017-12-29T08:17:47Z,"* Added DataTable API: https://github.com/20tab/UnrealEnginePython/blob/master/docs/DataTable_API.md

* Added Foliage API: https://github.com/20tab/UnrealEnginePython/blob/master/docs/Foliage_API.md

* Improved UserDefinedStruct handling: https://github.com/20tab/UnrealEnginePython/blob/master/examples/create_user_defined_struct.py",65116537
342,False,True,2017-12-25T09:57:00Z,2017-12-25T17:13:40Z,"* Added sync_browser_to_assets()

* Added post_edit_change_property()

* Fixed render_target_get_data() for non RGB textures",65116537
343,False,True,2017-11-20T16:15:03Z,2017-11-21T16:30:15Z,"* added thumbnail api to FAssetData

* added collections api https://github.com/20tab/UnrealEnginePython/blob/master/docs/Collections_API.md

* improved viewport api

* added settings api
",65116537
344,False,True,2017-10-03T15:22:30Z,2017-10-03T18:20:07Z,"* Added support for Unreal Engine 4.18

* Added The Level API:  https://github.com/20tab/UnrealEnginePython/blob/master/docs/Level_API.md

* Added The Landscape/Terrain API:  https://github.com/20tab/UnrealEnginePython/blob/master/docs/Landscape_API.md

* Added the Thumbnail API: https://github.com/20tab/UnrealEnginePython/blob/master/docs/Thumbnail_API.md

* Added IConsoleManager.register_command to map console commands to python functions",65116537
345,False,True,2017-09-11T14:54:26Z,2017-09-11T15:05:52Z,"* Improved FTransform api to support 4x4 matrices

* Added api for MorphTarget

* Improved SkeletalMesh api for LODs",65116537
346,False,True,2017-09-04T13:10:46Z,2017-09-04T16:07:21Z,"* Full support for asyncio in python3.6

* SkeletalMesh api (you can now generate new skeletal meshes and skeletons)

* Subclassing api improvements

* added SSpacer slate widget

* added raw input system for slate

* added FbxPose wrapper

* improved SPythonEditorViewport

* improved UPackage api",65116537
347,False,True,2017-08-08T05:20:04Z,2017-08-08T05:25:55Z,"* Added SkeletalMesh and Skeleton advanced APIs

* SObjectPropertyEntryBox

* Added support for UMapProperty/TMap

* Sequencer items removal api

* PyUserWidget",65116537
348,False,True,2017-07-30T08:39:41Z,2017-07-30T08:57:45Z,"* Improved the subclassing api

* added as_dict() to USTRUCT

* improved UEnum support

* refactored PyActor to support pre_initialize_components, post_initialize_components and end_play hooks

* added UAnimMontage api

* improved Quaternion support

* bytearray optimization (used wheneved a TArray of uint8 is expected)",65116537
349,False,True,2017-07-08T16:19:57Z,2017-07-09T04:32:03Z,"* Preliminary Animation and Skeleton API

* Allow to pass parameters during Actor Spawn

* Improved HUD api",65116537
350,False,True,2017-06-17T10:38:02Z,2017-06-17T10:52:31Z,"* Added Fbx low-level api

* Added slate SBox widget

* Various stability fixes",65116537
351,False,True,2017-06-11T09:07:49Z,2017-06-11T13:09:38Z,"
* Slate API has been added (sponsored by Kite & Lightning)
* Improved textures api
* Various stability fixes
* Refactored Linux build system",65116537
352,False,True,2017-05-10T16:28:42Z,2017-05-10T16:36:26Z,"* Added the HTTP api: https://github.com/20tab/UnrealEnginePython/blob/master/docs/Http_API.md

*  Added open_editor_for_asset(asset), close_editor_for_asset(asset) and close_all_asset_editors()

* Added the queue_audio() method to SoundWaveProcedural objects (credits: Jay Stevens)

* Added find_asset(asset_path)

* Added destroy_actor_component()

* Added node_get_title()",65116537
353,False,True,2017-04-24T20:02:15Z,2017-04-24T20:20:12Z,"* Added The Sequencer API, thanks to Matthew Whelan (http://www.mattwhelan.com/), for sponsoring it: https://github.com/20tab/UnrealEnginePython/blob/master/docs/sequencer_API.md

* Improved structs support

* Improved the PyFbxFactory to allow import options customization

* Support For BehaviorTree and AnimationBlueprint Graphs

* Allow None in UProperties

*  Added support for custom PythonHome (can be changed at runtime via INI directives)",65116537
354,False,True,2017-03-01T10:17:24Z,2017-03-01T10:40:59Z,"- Added the Experimental Python Editor https://github.com/20tab/UnrealEnginePython/blob/master/README.md#the-python-editor
- Implemented the FRandomStream class https://github.com/20tab/UnrealEnginePython/blob/master/tests/test_randomstream.py
- Added Pawn and Controller optimized functions
- Added support for Unreal Engine 4.15
- Improved test suite https://github.com/20tab/UnrealEnginePython#unit-testing and https://github.com/20tab/UnrealEnginePython/tree/master/tests
- Sandboxed VM (allows running script in python subinterpreters without clobbering the main python vm)
",65116537
355,False,True,2017-02-03T18:49:06Z,2017-02-03T19:34:19Z,"- Added the plugin api: https://github.com/20tab/UnrealEnginePython/blob/master/docs/Plugin_API.md
- Added the transactions/undo api:  https://github.com/20tab/UnrealEnginePython/blob/master/docs/Transactions_API.md
- Added the settings api: https://github.com/20tab/UnrealEnginePython/blob/master/docs/Settings.md
- Structs are now fully supported: https://github.com/20tab/UnrealEnginePython/blob/master/README.md#the-automagic-uclass-ustruct-and-uenums-mappers
- The Python Console got automatic multiline mode
",65116537
356,False,True,2017-01-17T18:17:36Z,2017-01-17T18:24:55Z,"- Stability improvements
- Finalized asset api:  https://github.com/20tab/UnrealEnginePython/blob/master/docs/ManagingAssets.md
- Preliminary api for generating blueprint graphs and nodes
",65116537
357,False,True,2017-01-15T11:15:50Z,2017-01-15T11:36:30Z,"- Improved/simplified building from sources
- Added history to the PythonConsole
- Improved materials management (https://github.com/20tab/UnrealEnginePython/blob/master/docs/Material_API.md)
",65116537
358,False,True,2017-01-08T17:55:23Z,2017-01-08T18:00:06Z,"Various fixes in blueprint creation and managament. Added 'Execute Python Script' Blueprint function (can be used in blutility)
",65116537
359,False,True,2016-12-17T21:13:07Z,2016-12-17T21:24:47Z,"Added preliminary spport for level scripting, check : https://github.com/20tab/UnrealEnginePython/issues/87
",65116537
360,False,False,2019-10-14T06:47:23Z,2019-10-14T07:13:45Z,"Some new features:

* JSON data type; JSON_OBJECT, JSON_ARRAY, JSON_OBJECTAGG, and JSON_ARRAYAGG functions; JSON predicate
* TIME WITH TIME ZONE data type
* BITNOT, LSHIFT, and RSHIFT functions
* Named columns join (JOIN USING)
* Type predicate (IS OF)
* General logarithm function LOG(base, argument)
* UNKNOWN literal and truth value tests
* UNIQUE predicate
* CURRENT_SCHEMA and CURRENT_CATALOG functions
* Data change delta tables (OLD | NEW | FINAL TABLE)
* CURRENT VALUE FOR sequence
* EXECUTE IMMEDIATE command and QUOTE_IDENT function
* Time zone specification (AT TIME ZONE | LOCAL)
* ALTER TABLE tableName ALTER COLUMN IF EXISTS columnName
* READ UNCOMMITTED, REPEATABLE READ, and SNAPSHOT isolation levels with MVStore engine

Incompatible changes:
* MVCC setting (ignored since 1.4.198) now results in error
* MULTI_THREADED setting is removed, MVStore engine is always multi-threaded, PageStore engine is always single-threaded
* Statement.getGeneratedKeys() uses a FINAL TABLE semantics
* Proleptic Gregorian calendar is used as required by the Standard
* Cast from TIME to TIMESTAMP uses CURRENT_DATE for a date part as required by the Standard

Other changes:
* Scalability and stability of MVStore engine are improved
* Assorted bugfixes

Known issues:
* Asterisked projection of NATURAL join and named columns join between three or more tables can still be incorrect, use qualified column names as a workaround
* SERIALIZABLE isolaton level can be set, but it doesn't ensure equivalence of serial and concurrent execution of transactions

See [change log](https://h2database.com/html/changelog.html) for the complete list of changes.",33745913
361,False,False,2019-03-13T13:31:39Z,2019-03-13T14:12:09Z,Bugfixes,33745913
362,False,False,2019-02-22T13:25:42Z,2019-02-22T14:29:57Z,"**Features**

* Experimental implementation of all standard window functions.

* Hypothetical set and inverse distribution functions.

* INTERVAL data type.

* Geomety type and SRID constraints for GEOMETRY data type, M and ZM dimension systems support.

* WITH TIES and PERCENT support in FETCH clause.

* SELECT DISTINCT ON(expression, …).

* java.sql.SQLXML support.

* Standard systax for ARRAY values, some new functions.

**Performance**

* MVStore engine is multi-threaded by default.

* Performance and atomicity improvements in MVStore engine.

* Large result sets are processed faster with MVStore engine.

* Large OFFSET values are faster in some queries.

**Other**

* TCP Server and H2 Console do not allow creation of new databases by default.

* MVCC setting is removed, MVStore uses row-level locks and PageStore uses table-level locks unconditionally.

* MVStore jar incudes TransactionStore too.

* Lucene is upgraded to 5.5.5-7.6.0.

* JTS library is not required any more for GEOMETRY data type.

* `h2.oldStyleOuterJoin` setting and limited support for archaic (+) outer joins are removed.

See [change log](https://h2database.com/html/changelog.html) for a complete list of changes.",33745913
363,False,False,2018-03-18T19:28:29Z,2018-03-18T20:15:23Z,See release notes,33745913
364,False,False,2017-06-10T12:39:35Z,2017-06-10T12:58:38Z,Bugfixes and some new features,33745913
365,False,False,2017-04-23T12:16:05Z,2017-04-23T12:35:57Z,Bugfixes and some new features,33745913
366,False,False,2017-03-10T12:53:37Z,2017-03-10T13:22:15Z,Various bugfixes and new features,33745913
367,False,False,2016-10-31T11:46:07Z,2016-10-31T12:06:39Z,"Many bugfixes, and slightly increased concurrency.
",33745913
368,False,False,2016-05-26T05:45:04Z,2016-05-26T07:18:47Z,"Improved performance, new experimental data type ""timestamp with timezone"", improved SQL syntax.
",33745913
369,False,False,2016-01-21T16:32:33Z,2016-01-21T21:07:37Z,"Bugfixes and minor new features.
",33745913
370,False,False,2015-10-11T12:34:20Z,2015-10-11T12:49:50Z,"MVStore: CLOB and BLOB cleanup
",33745913
371,False,False,2015-08-01T09:00:12Z,2015-08-01T11:12:10Z,"MVStore: protection against power failure and out of memory.
",33745913
372,False,False,2019-11-24T21:56:20Z,2019-11-25T21:28:03Z,"CBOR support, minor fixes and improvements",15852088
373,False,False,2019-07-28T20:32:18Z,2019-07-28T20:47:00Z,Minor fixes and improvements,15852088
374,False,False,2018-08-04T16:40:48Z,2018-08-04T21:55:14Z,ES2015 improvements,15852088
375,False,False,2018-04-26T07:25:40Z,2018-04-26T07:46:05Z,Maintenance release,15852088
376,False,False,2018-04-21T20:59:03Z,2018-04-22T00:29:57Z,Maintenance release,15852088
377,False,False,2017-09-23T00:49:04Z,2017-09-23T01:14:22Z,"Call handling, API improvements, performance",15852088
378,False,False,2017-08-02T19:07:47Z,2017-08-02T19:42:15Z,Maintenance release,15852088
379,False,False,2017-07-28T20:27:31Z,2017-07-28T22:18:42Z,Maintenance release,15852088
380,False,False,2017-05-03T21:10:44Z,2017-05-03T21:40:18Z,"Maintenance release

",15852088
381,False,False,2017-04-15T12:02:33Z,2017-04-15T18:50:16Z,"Performance, side effect handling",15852088
382,False,False,2017-03-19T22:55:37Z,2017-03-19T23:05:22Z,Maintenance release,15852088
383,False,False,2017-03-19T22:18:23Z,2017-03-19T22:38:14Z,Maintenance release,15852088
384,False,False,2017-01-26T19:55:10Z,2017-01-26T20:03:19Z,"Maintenance release
",15852088
385,False,False,2017-01-15T01:07:14Z,2017-01-15T01:14:03Z,"Maintenance release
",15852088
386,False,False,2017-01-02T03:09:09Z,2017-01-02T03:20:51Z,"Buffers, ES2015 improvements, performance, footprint
",15852088
387,False,False,2016-12-11T22:03:08Z,2016-12-11T22:11:04Z,"Suspend/resume
",15852088
388,False,False,2016-12-08T20:26:44Z,2016-12-08T20:49:28Z,"Maintenance release
",15852088
389,False,False,2016-08-29T21:39:43Z,2016-08-29T22:07:48Z,"Maintenance release
",15852088
390,False,False,2016-08-28T22:06:29Z,2016-08-28T22:19:43Z,"Maintenance release
",15852088
391,False,False,2016-05-03T11:50:20Z,2016-05-03T12:02:43Z,"Low memory and debugger improvements
",15852088
392,False,False,2016-04-19T01:01:05Z,2016-04-19T01:26:01Z,"Maintenance release
",15852088
393,False,False,2016-04-18T22:17:28Z,2016-04-19T00:33:34Z,"Maintenance release
",15852088
394,False,False,2016-04-10T21:47:43Z,2016-04-17T23:13:06Z,"Maintenance release
",15852088
395,False,False,2016-01-11T12:06:16Z,2016-01-11T12:21:18Z,"Maintenance release
",15852088
396,False,False,2016-01-10T01:17:28Z,2016-01-10T21:08:29Z,"Minor fixes and improvements, performance
",15852088
397,False,False,2015-11-26T22:02:50Z,2015-11-26T22:20:56Z,"Maintenance release
",15852088
398,False,False,2015-11-23T00:07:53Z,2015-11-23T01:26:28Z,"Maintenance release
",15852088
399,False,False,2015-09-12T02:10:27Z,2015-09-12T02:29:32Z,"Typed arrays, duk_config.h, module.exports, performance
",15852088
400,False,False,2015-09-06T20:01:36Z,2015-09-06T20:20:56Z,"Maintenance release
",15852088
401,False,False,2015-08-09T09:26:16Z,2015-08-09T09:41:41Z,"Maintenance release
",15852088
402,False,False,2015-06-02T11:27:54Z,2015-06-02T13:23:28Z,"Maintenance release
",15852088
403,False,False,2015-04-07T21:02:26Z,2015-04-07T21:18:27Z,"Maintenance release
",15852088
404,False,False,2015-04-05T22:10:48Z,2015-04-05T22:28:52Z,"Debugger, script timeout, performance
",15852088
405,False,False,2015-04-03T00:17:10Z,2015-04-03T16:41:27Z,"Maintenance release
",15852088
406,False,False,2015-03-17T19:02:35Z,2015-03-17T19:15:13Z,"Maintenance release
",15852088
407,False,False,2015-02-17T17:29:19Z,2015-02-17T17:38:42Z,"Maintenance release
",15852088
408,False,False,2015-01-09T16:35:27Z,2015-01-09T17:03:34Z,"Low memory improvements
",15852088
409,False,False,2014-11-08T02:33:08Z,2014-11-08T02:36:44Z,"Maintenance release
",15852088
410,False,False,2014-10-31T13:08:36Z,2014-10-31T13:12:53Z,"Maintenance release
",15852088
411,False,False,2014-10-26T11:13:33Z,2014-10-26T15:11:37Z,"Stable baseline release
",15852088
412,False,True,2014-09-26T11:52:09Z,2014-10-17T10:12:08Z,"Beta, bug fixes, stabilization release
",15852088
413,False,True,2014-07-11T11:19:42Z,2014-10-17T10:11:42Z,"Alpha, modules, ES6 subset, bug/portability fixes
",15852088
414,False,True,2014-04-13T16:40:27Z,2014-10-17T10:10:47Z,"Alpha, API improvements, logging, bug/portability fixes
",15852088
415,False,True,2014-02-01T23:43:42Z,2014-10-17T10:10:20Z,"Alpha, new features, bug/portability fixes
",15852088
416,False,True,2013-12-18T23:15:50Z,2014-10-17T10:01:31Z,"Alpha, E5.1 fixes, compiler limit fixes
",15852088
417,False,True,2013-10-30T21:30:55Z,2014-10-17T10:00:51Z,"Alpha, tracebacks, portability fixes
",15852088
418,False,True,2013-09-21T17:50:44Z,2014-10-17T10:00:07Z,"Alpha, much work on the public API and the website
",15852088
419,False,True,2013-05-16T21:49:59Z,2014-10-17T09:59:20Z,"Alpha version, number conversion implemented (some bugs remain)
",15852088
420,False,True,2013-03-31T21:57:29Z,2014-10-17T09:58:36Z,"Alpha version, Array and Number near complete (initial built-in implementations now complete)
",15852088
421,False,True,2013-03-16T19:44:25Z,2014-10-17T09:57:45Z,"Alpha version, global object, Object, String near complete
",15852088
422,False,True,2013-02-27T16:25:09Z,2014-10-17T09:56:52Z,"Alpha version, Date and JSON near complete
",15852088
423,False,True,2013-02-14T19:37:45Z,2014-10-17T09:55:05Z,"Initial alpha version
",15852088
424,False,False,2019-11-26T11:03:57Z,2019-11-26T11:04:03Z,,15225670
425,False,False,2019-08-20T09:29:52Z,2019-08-20T09:29:58Z,,15225670
426,False,False,2019-05-10T08:28:51Z,2019-05-10T08:28:57Z,,15225670
427,False,False,2019-02-14T09:49:23Z,2019-02-14T09:49:28Z,,15225670
428,False,False,2019-02-13T10:31:42Z,2019-02-13T10:31:49Z,,15225670
429,False,False,2019-01-28T10:21:09Z,2019-01-28T10:21:17Z,,15225670
430,False,False,2018-10-19T16:52:46Z,2018-10-19T16:52:50Z,,15225670
431,False,False,2018-09-26T15:43:29Z,2018-09-26T15:43:32Z,,15225670
432,False,False,2018-07-24T23:27:00Z,2018-07-24T23:27:03Z,,15225670
433,False,False,2018-06-14T15:52:27Z,2018-06-14T15:52:30Z,,15225670
434,False,False,2018-05-01T21:37:41Z,2018-05-01T21:49:49Z,"### Release highlights

For all details check the changelog file.

#### Web

* bwe: add ability to choose REMB or TCC for bandwidth estimation
* misc: add helper `make dev` command
* deeplinking: add deep links on web
* toolbox: extensive code cleanups / refactor
* video-quality-label: show the correct quality information for the on-stage participant
* screen-sharing: fix it so it works on Firefox

#### Mobile apps

* pip: add Picture-in-Picture support
* pinch-to-zoom: add pinch to zoom functionality for desktop sharing streams
* sounds: add join / leave sounds
* calendar: add calendar syncing
* full-screen: make immersive mode more resilient on Android
",15225670
435,False,False,2018-05-29T15:26:59Z,2018-05-29T17:30:18Z,"### Changes since 6.0.0

 * Add namespacing support #290 @stephenberry
 * Add utf parsing support
 * cheatsheet.md updates
 * `add_class` utility support for scoped enums #306 @StanEpp
 * Parser optimizations #300 @niXman
 * Various JSON fixes #377 #400 #409 #371 @totalgee @dinghram @arcoRocks
 * Various cleanups, bugfixes and warning fixes and minor performance improvements
 * Support for C++17 compilers!
 * Support for UTF8 BOM #439 @AlekMosingiewicz @MarioLiebisch
",1226823
436,False,False,2017-02-22T22:56:04Z,2017-02-22T23:04:11Z,"### Changes since 5.8.6

_6.0.0 is a massive rework compared to 5.x. It now requires a C++14 enabled compiler_

#### Compiler Requirements
- MSVC 2015 or greater
- g++ 4.9 or greater
- clang 3.6 or greater

#### Breaking Changes
- Instantiating a ChaiScript object now, by default, builds the stdlib in
  - This was done to address the most common support issues of loading stdlib dynamically at runtime
  - If you want the old behavior, use include/chaiscript/chaiscript_basic.hpp
- Headers have been reorganized to fully separate stdlib/parser/engine from each other (some faster builds)
- Bootstrap functions no longer return a reference to the module added to (compile time savings)
- It's now no longer possible modify AST_Nodes (compile time, runtime efficiency)
- Function annotations no longer exist (simplifies code, reduces compile time, compile size)

#### New Features Added
- Modular optimization system; this can be accessed via the ChaiScript_Basic interface
- Execution tracing capability; also accessed via ChaiScript_Basic interface
- range-based for loops `for( id : container ) { }` (much better performance than other loop types)
- If-init expressions (ala C++17)
- Support for passing r-value references to functions
- Support for containing unique_ptr
- Add helpers for exposing enum classes to ChaiScript
- Allow typed ChaiScript defined functions to perform conversions on call #303

#### Improvements
- Compile time improvements
- Compile size improvements
- Significant runtime improvements (see ""Modular optimization system"")
- Significant parser improvements, both with parse-time and parser initialization time (Thanks @niXman)
- Fix type conversion to bool in conditionals

#### Improvements Still Need To Be Made
- File location tracking has been rewritten; this currently means error location reporting is not as good as it was
- Tracing capability needs to be tested and vetted
",1226823
437,False,False,2016-10-28T17:03:31Z,2017-02-22T22:39:17Z,"### Changes since 5.8.5
- Optimize away `return` statements in lambdas also
- Allow conversions to bool in conditionals
- Don't allow `class` statements inside of scopes
- Properly error when a dynamic object non-function member is called
",1226823
438,False,False,2016-10-10T01:59:48Z,2016-10-10T02:02:58Z,"### Changes since 5.8.4
- Fix order of operations for prefix operators
- Make sure atomics are initialized properly
- Remove parsing of unused prefix `&` operator
",1226823
439,False,False,2016-09-24T23:17:40Z,2016-10-10T02:02:30Z,"### Changes since 5.8.3
- Fix case with some numeric conversions mixed with numerics that do not need conversion
",1226823
440,False,False,2016-04-29T14:31:59Z,2016-09-16T18:37:35Z,"### Changes since 5.8.2
- Add support for reference of pointer return types
",1226823
441,False,False,2016-03-30T18:52:53Z,2016-09-16T18:36:47Z,"### Changes since 5.8.1
- Allow casting to non-const & std::shared_ptr<T>
",1226823
442,False,False,2016-03-05T19:04:30Z,2016-03-05T23:15:03Z,"### Changes since 5.8.0
- Fix parsing of floats to be locale independent #250
- Various warning fixes on various platforms
",1226823
443,False,False,2016-02-16T22:00:13Z,2016-02-17T00:35:43Z,"### Changes since 5.7.1
- Make all parser iterator operations range checked
- Parse in-string eval statements once, not once for each execution
- Fix parsing of operators (ie 1<-1 now parses)
- Fix variable scoping for functors
- Exception reduction
- Various object lifetime fixes
- Add JSON support for load / save #207
- Numeric overload resolution fixes #209 
- Fix long long #208 
- Add octal escapes in strings #211
- Fixed sizing of binary literals #213
- Added support for != with bool values #217
- Various value assignment vector fixes 
- Fixed broken hex escape sequences from @ChristianKaeser
- Multiply defined symbols fixes #232 @RaptorFactor
- Add add_class<Enum> helper #233  @vrennert
- Cheatsheet fixes #235 @mlamby
- Fix parsing of strings inside of in-string eval statements
- Allow lower-case global keyword
- Enable thread-local on MSVC (should be significant performance boost)
",1226823
444,False,True,2015-10-17T03:41:54Z,2015-10-17T13:16:03Z,,1226823
445,False,False,2015-07-17T20:58:40Z,2015-07-17T21:01:55Z,"### Changes since 5.7.0
- Build time reduction
- Build size reduction
- Performance increases
- Fixed ~20 crash-bugs found with fuzzy testing #194
  - Let unhandled exceptions propogate to user
  - Report eval_error when break statement is not in loop
  - Fix handling of 0 length scripts closes #193
  - Don't crash on arity mismatch - Specifically affects the case where no overloads exist for a given function
  - Fix error printing for `bind` calls
  - Handle unexpected continue statement
  - Check arity during bind
  - Don't allow arith conversion on variadic function
  - Correct `bind` parameter match count
  - Add in expected Boxed_Value exception cases
  - Check access to AST, don't allow `;` in func def
  - Don't attempt arithmetic unary & call
  - Don't crash on 0 param call to `bind`
  - Catch errors during member function dispatch
  - Properly handle type of const bool &
- Automatic deduction of lambda type signatures
- Work with non-polymorphic parent/child conversions
- Move to codecov for coverage reporting
- Add `.at` method for Map objects
- Various corrections for support of move-only objects
",1226823
446,False,False,2015-05-06T20:16:04Z,2015-05-06T20:23:03Z,"### Changes since 5.6.0
- Significant code cleanups and reduction
- Smaller builds
- Faster compiles
- Less runtime memory usage
- ~2x faster runtimes
- biicode support
- method_missing feature added #164 @arBmind
- Generic objects with dynamic properties support
- Add ability to call functions contained in properties
- Add lambda captures
- Create [cheatsheet.md](cheatsheet.md) for all-in-one reference of features
- Fix support for libc++
- Eliminate clone of return value stored locally
- Eliminate 'return' statements when last line of function
- Reduce number of runtime exceptions occuring
- Reduce copies / moves of return values. 
- make `use` statement return value of last statement in file
- Add ability to access fixed array sizes
- Add support for scientific notation floating point literals #174  @totalgee
",1226823
447,False,False,2015-01-17T21:28:06Z,2015-01-17T21:28:38Z,"### Changes since 5.5.1
- Throw exception on integer divide by 0
- Add optional type specification to function declarations
  
  ```
  def func(int i, j, double k) {
    // i must be an int.
    // j can be anything
    // k must be a double
    // normal conversion rules still apply
  }
  ```
- Many minor fixes for compiler warnings
- Add support for `std::future` and `std::async`
  
  ```
  var f := async(someFunction);
  var f2 := async(someFunction2);
  
  // someFunction and someFunction2 are running in parallel now
  f.get();
  f2.get();
  ```
- Fully support r-value returns, supporting move-only objects and reducing object copies
",1226823
448,False,False,2014-12-21T20:15:12Z,2014-12-21T20:41:27Z,"### Changes Since 5.5.0
- 30% performance increase
- Fix handling of object stack, resulting in greatly reduced memory usage
- Code cleanups
",1226823
449,False,False,2014-11-10T19:48:25Z,2014-11-10T19:59:16Z,"### Changes since 5.4.0
- 2x performance increase
- Significant code cleanups
- Throw exception if user attempts to call function on null object
- Allow user defined type conversions [from within chaiscript](https://github.com/ChaiScript/ChaiScript/blob/v5.5.0/unittests/user_defined_conversions.chai) or [c++](https://github.com/ChaiScript/ChaiScript/blob/v5.5.0/src/test_module.cpp#L165-L169)
- Fix object lifetime for nested function calls made at the global scope
- Fix returning of boolean values from function calls
",1226823
450,False,False,2014-09-01T02:03:18Z,2014-09-01T02:05:32Z,"### Changes since 5.3.1
- Decreased compile time and build size
- Make ""reflection"" module built in (losing some of the time / build size gains)
- Add new ""class"" syntax for ChaiScript defined methods and attributes see: [unittests/class.chai](unittests/class.chai) for examples
- Minor performance enhancements
- major to_string performance enhancements
- Provide API for retrieving registered type name #124
- Added strong reference to container to range object #132
",1226823
451,False,False,2014-06-11T21:11:21Z,2014-06-11T21:22:23Z,"### Changes since 5.3.0
- Add automatic conversion of arithmetic return types, following the same
  rules as conversion of arithmetic types when passing parameters
- Add automatic casting up the inheritence hierarchy when possible.
- Enable travis.ci testing
- Allow users to add globals from within script
- Various static analysis fixes
- Code modernization to C++11
- Unofficial support for Haiku added
- Fix #121 - Inability to compile on cygwin
- Formatting fixes and spelling corrections
- Apply ""include what you use"" https://code.google.com/p/include-what-you-use/
- Apply clang-modernize
- Various threading fixes
- Performance improvements
",1226823
452,False,False,2014-05-03T23:44:54Z,2014-05-04T00:17:15Z,"- Add automatic arithmetic conversions for return types
- Enable automatic down casting in inheritance when possible
",1226823
453,False,False,2014-03-24T20:09:20Z,2014-03-24T20:41:12Z,"Current Version: 5.3.0

Note, with this version the C++11 version of ChaiScript has become the official version, and the boost version of ChaiScript will see very little if any future development.

### Changes since 5.2.0
- Official support for MSVC with C++11. All major platforms and compilers are now support for C++11 release
- Enhanced unit tests
- Add `continue` statement, fix various use cases for `for`  loops
- Fix use of suffixed numbers in vector initialization
- Code cleanups
- Eliminate global data, which makes code more portable and thread safe
- Fix issue #79
- Merge pretty_print fixes from @mgee #82
- Compiler warning fixes for latest compiler releases
- Fix threading problems
- Fix linking error on MacOS Mavericks #88
- Allow non-const globals
- Make sure user cannot name a variable with `::` in it #91
- Fix various string / map / vector `size` and `count` calls for compilers which have weird overloads for them. #90 #93 #95
- Make module search path relative to the currently running executable
- Build and work with wstring windows builds
- fix for some new line cases in the middle of a vector initialization from jespada
",1226823
454,False,False,2014-02-23T14:10:03Z,2014-02-23T14:30:06Z,"Current Version: 4.3.0

Note: this is scheduled to be the last release that requires boost, new releases
 after this will require a C++11 compiler.

### Changes since 4.2.0
- Enhanced unit tests
- Add `continue` statement, fix various use cases for `for`  loops
- Fix use of suffixed numbers in vector initialization
- Code cleanups
- Eliminate global data, which makes code more portable and thread safe
- Fix issue #79
- Merge pretty_print fixes from @mgee #82
- Compiler warning fixes for latest compiler releases
- Fix threading problems
- Fix linking error on MacOS Mavericks #88
- Allow non-const globals
- Make sure user cannot name a variable with `::` in it #91
- Fix various string / map / vector `size` and `count` calls for compilers which
  have weird overloads for them. #90 #93 #95
- Make module search path relative to the currently running executable
- Build and work with wstring windows builds
",1226823
455,False,False,2020-03-16T21:35:36Z,2020-03-17T20:30:52Z,"Summary
-------

Multiple improvements and extensions in various areas, including compatibility enhancements, additional Lua scripting features and documentation.


Changes
-------

- Updates/improvements for LuaXML
- Updates and tests for JSON for Lua
- BoringSSL support
- Add Remark: Do not use Git for Windows V2.24 (but <= V2.23 or >= V2.25)
- Format configuration dialogs for Windows
- Add option ""hide_tray"" to start without Windows systray icon
- URI checking according to ""remove_dot_segments"" algorithm from RFC
- Experimental support for a new server and client start API
- Additional callbacks to initialize external SSL context
- More cache control options for static files
- Trace function for Lua server pages
- Access to client certificate data for Lua pages
- Allow to configure SOMAXCONN (max. number of waiting connections)
- Include some build options for Zephyr
- Support for flawed CGI interpreters returning only instead of
- Add NO_FILESYSTEM flag for (embedded) system without any file system
- Several fixes for server side Lua scripts
- Disable SSL renegotiation for new OpenSSL version
- Allow to force TLSv1.3 (disable TLSv1.2)
- Prefer pre-compressed *.gz file, if it already exists
- Fix some #include statements for various compilers / OS / SDK versions
- Support for Linux Standard Base (LSB)
- Fixes to mg_get_*_info() API functions
- Fix some bugs/deficiencies in examples and tests
- Fix some static source code analysis warnings
- Add Conan package build
- Fix include for Lua pages in ""Kepler Syntax""
- Replace some uses of deprecated Linux and OpenSSL API functions
- Improved documentation and examples
- Fixes for timeout handling
- Fixes for the request queue (rare loss of requests)
- Client side SNI
- Update version number
",13352949
456,False,False,2018-09-10T18:26:23Z,2018-09-10T18:31:54Z,"Major Features
-------

Support multiple domains and certificates, support websocket ping-pong, on-the-fly compression, additional API functions

Changes
-------

- Add API function to send file body for C and Lua
- Fix several warnings from different compilers and static code analyzers
- Drop Symbian support from the code
- Improve examples
- Timeout for CGI scripts
- Fix for requests using IPv6 addresses as hostname
- Shared data for Lua scripts and Lua server pages
- Add API function for 30x redirect
- Script for Linux bash auto-completion
- Add HTTP JSON C callback example
- Add helper function for HTTP 200 OK response
- Allow Kepler Syntax for Lua Server pages
- Update duktape to 2.2.0 and Lua to 5.3.4
- Optional support for on-the-fly compression (if zlib is available and USE_ZLIB is set)
- Add method to replace mg\_cry and log\_access by own implementation
- Fixes for IPv6 support
- Add server support for websocket ping pong protocol
- Fix misspellings in source code and documentation
- Add error msg to http_error callback
- Move unit test to a new directory
- Remove remote\_ip request\_info member (it has been legacy since several versions)
- Use gmtime_r instead of gmtime, if available
- Add some functions to C++ wrapper
- Support multiple domains with different certificate files (TLS server name identification, SNI)
- Provide client peer certificate (X509) in mg\_client\_cert structure
- Add new callback (get\_external\_ssl\_ctx) to provide pre-initialized TLS context
- Improve unit tests
- Fix ssl init for HTTPS clients
- Update version number

",13352949
457,False,False,2017-09-26T18:04:10Z,2017-09-26T18:19:09Z,"Major Features
-------

OpenSSL 1.1 support, add server statistics and diagnostic data


Changes
-------

- Add missing `mg_` or `MG_` to symbols in civetweb.h. Symbols without will be removed a future version.
- Add HTTPS server configuration example
- Lua Pages: mg.include should support absolute, relative and virtual path types
- Add API function for HTTP digest authentication
- Improved interface documentation
- Support parameters for Lua background scripts
- Use new connection queue implementation (previously ALTERNATIVE\_QUEUE) as default
- Add USE\_SERVER\_STATS define, so the server collects statistics data
- Convert system\_info text output and all other diagnostic strings to JSON format
- Add experimental function to query the connection status (may be dropped again)
- Add document on proposed future interface changes (for comments)
- Officially drop Symbian support
- Ignore leading blank lines in multipart messages (for Android upload service)
- Rewrite some functions, in particular request parsing
- CORS preflight directly in the server, with additional config options
- Solve some warnings from different static source code analysis tools
- Collect server status data
- Allow hostname in listening\_ports
- Make maximum request size configurable
- Allow multiple Sec-Websocket-Protocol
- Add configuration option to send additional headers
- Add configuration option for Strict-Transport-Security
- Mark ""file in memory"" feature is a candidate for deletion
- Improve examples
- Fix timeout error when sending larger files
- Add mg\_send\_chunk interface function
- Allow to separate server private key and certificate chain in two different files
- Support for multipart requests without quotes (for some C# clients)
- Initialize SSL in mg\_init\_library, so https client functions can be used when no server is running
- Allow ""REPORT"" HTTP method for REST calls to scripts
- Allow to compile civetweb.c wih a C++ compiler
- Lua: Remove internal length limits of encode/decode functions
- Allow sub-resources of index script files
- Add config parameter allow\_index\_script\_resource the aforementioned feature
- Remove deprecated ""uri"" member of the request from the interface
- Improve documentation
- Make auth domain check optional (configuration)
- Update unit test framework to check 0.11.0 (C89/C90 compilers still need a patched version)
- Limit depth of mg.include for Lua server pages
- Additional unit tests
- OpenSSL 1.1 support
- Update version number",13352949
458,False,False,2017-01-04T19:25:39Z,2017-01-04T20:13:12Z,"**Bug fix version**

## Changes
- Fix for connections closed prematurely
- Update to a new check unit test framework and remove patches required for previous version
- Add ""open website"" button for pre-built Windows binaries (so end users can easily check for new versions)
- Update version number
",13352949
459,False,False,2016-12-30T09:12:43Z,2016-12-30T11:28:22Z,"## Features

Read SSI client certificate information, improve windows usability, use non-blocking sockets, bug fixes

## Changes
- Add library init/exit functions (call is now optional, but will be required in V1.10)
- Windows: Show system information from the tray icon
- Windows: Bring overlaid windows to top from the tray icon
- Add Lua background script, running independent from server state
- Move obsolete examples into separated directory
- Change name of CMake generated C++ library to civetweb-cpp
- Add option to set linger timeout
- Update Duktape and Lua (third-party code)
- Add continuous integration tests
- Add API documentation
- Limit recursions in .htpasswd files
- Fix SCRIPT_NAME for CGI directory index files (index.php)
- Use non-blocking sockets
- stdint.h is now required and no longer optional
- Rewrite connection close handling
- Rewrite mg_fopen/mg_stat
- Enhanced tray icon menu for Windows
- Add subprotocol management for websocket connections
- Partially rewrite timeout handling
- Add option keep_alive_timeout_ms
- Improve support for absolute URIs
- Allow some additional compiler checks (higher warning level)
- Add option for case sensitive file names for Windows
- Short notation for listening_ports option when using IPv4 and IPv6 ports
- Make usage of Linux sendfile configurable
- Optimize build matrix for Travis CI
- Retry failing TLS/HTTPS read/write operations
- Read client certificate information
- Do not tolerate URIs with invalid characters
- Fix mg_get_cookie to ignore sub-strings
- Fix memory leak in form handling
- Fix bug in timer logic (for Lua Websockets)
- Updated version number
",13352949
460,False,False,2016-05-27T20:47:04Z,2016-05-27T21:52:14Z,"## Features

CMake integration, new unit tests based on the check framework, continuous integration with Travis CI and AppVeyor, code analysis with Coverity, some additional API functions, bug fixes and updates

## Changes
- Replace mg_upload by mg_handle_form_request
- CGI-scripts must receive EOF if all POST data is read
- Add API function to handle all kinds of HTML form data
- Do not allow short file names in Windows
- Callback when a new thread is initialized
- Support for short lived certificates
- Add NO_CACHING compile option
- Update Visual Studio project files to VS2015; rename directory VS2012 to VS
- Sec-Wesocket-Protocol must only return one protocol
- Mark some examples and tests as obsolete
- Remove no longer maintained test utils
- Add some default MIME types and the mg_send_mime_file API function.
- Client API using SSL certificates
- Send ""Cache-Control"" headers
- Add alternative to mg_upload
- Additional configuration options
- Fix memory leaks
- Add API function to check available features
- Add new interface to get listening ports
- Add websocket client interface and encode websocket data with a simple random number
- Support SSL client certificates
- Add configuration options for SSL client certificates
- Stand-alone server: Add command line option -I to display information about the system
- Redirect stderr of CGI process to error log
- Support absolute URI; split uri in mg_request_info to request_uri and local_uri
- Some source code refactoring, to improve maintainability
- Use recursive mutex for Linux
- Allow CGI environment to grow dynamically
- Support build for Lua 5.1 (including LuaJIT), Lua 5.2 and Lua 5.3
- Improve examples and documentation
- Build option CIVETWEB_SERVE_NO_FILES to disable serving static files
- Add Server side JavaScript support (Duktape library)
- Created a ""civetweb"" organization at GitHub.
- Repository moved from https://github.com/bel2125/civetweb to https://github.com/civetweb/civetweb
- Improved continuous integration
- CMake support, continuous integration with Travis CI and Appveyor
- Adapt/port unit tests to CMake/Travis/Appveyor
- Bug fixes, including issues from static code analysis
- Add status badges to the GitHub project main page
- Updated version number
",13352949
461,False,False,2015-07-03T22:24:55Z,2015-07-05T07:17:14Z,"## Features

Enhanced examples and documentation, additional API functions, some functions rewritten, bug fixes and updates

## Changes
- Format source with clang_format
- Use function 'sendfile' for Linux
- Fix for CRAMFS in Linux
- Fix for file modification times in Windows
- Use SO_EXCLUSIVEADDRUSE instead of SO_REUSEADDR for Windows
- Rewrite push/pull functions
- Allow to use Lua as shared objects (WITH_LUA_SHARED)
- Fixes for many warnings
- URI specific callbacks and different timeouts for websockets
- Add chunked transfer support
- Update LuaFileSystem
- Update Lua to 5.2.4
- Fix build for MinGW-x64, TDM-GCC and clang
- Update SQLite to 3.8.10.2
- Fix CGI variables SCRIPT_NAME and PATH_TRANSLATED
- Set TCP_USER_TIMEOUT to deal faster with broken connections
- Add a Lua form handling example
- Return more differentiated HTTP error codes
- Add log_access callback
- Rewrite and comment request handling function
- Specify in detail and document return values of callback functions
- Set names for all threads (unless NO_THREAD_NAME is defined)
- New API functions for TCP/HTTP clients
- Fix upload of huge files
- Allow multiple SSL instances within one application
- Improve API and user documentation
- Allow to choose between static and dynamic Lua library
- Improve unit test
- Use temporary file name for partially uploaded files
- Additional API functions exported to C++
- Add a websocket client example
- Add a websocket client API
- Update websocket example
- Make content length available in request_info
- New API functions: access context, callback for create/delete, access user data
- Upgraded Lua from 5.2.2 to 5.2.3 and finally 5.2.4
- Integrate LuaXML (for testing purposes)
- Fix compiler warnings
- Updated version number
",13352949
462,False,False,2014-06-27T18:42:36Z,2014-06-27T20:03:15Z,"## Features

Enhance Lua support, configuration dialog for windows, new examples, bug fixes and updates

## Changes 
- Add examples of Lua pages, scripts and websockets to the test directory
- Add dialog to change htpasswd files for the Windows standalone server
- Fix compiler warnings and warnings from static code analysis
- Add new unit tests
- Support includes in htpasswd files
- Add a basic option check for the standalone executable
- Support user defined error pages
- Method to get POST request parameters via C++ interface
- Re-Add unit tests for Linux and Windows
- Allow to specify title and tray icon for the Windows standalone server
- Fix minor memory leaks
- Redirect all memory allocation/deallocation through mg functions which may be overwritten
- Support Cross-Origin Resource Sharing (CORS) for static files and scripts
- Win32: Replace dll.def file by export macros in civetweb.h
- Base64 encode and decode functions for Lua
- Support pre-loaded files for the Lua environment
- Server should check the nonce for http digest access authentication
- Hide read-only flag in file dialogs opened by the Edit Settings dialog for the Windows executable
- Add all functions to dll.def, that are in the header
- Added Lua extensions: send_file, get_var, get_mime_type, get_cookie, url_decode, url_encode
- mg_set_request_handler() mod to use pattern
- Solved, tested and documented SSL support for Windows
- Fixed: select for Linux needs the nfds parameter set correctly
- Add methods for returning the ports civetweb is listening on
- Fixes for Lua Server Pages, as described within the google groups thread
- Added support for plain Lua Scripts, and an example script
- A completely new, and more illustrative websocket example for C
- Websocket for Lua
- An optional websocket_root directory, including URL rewriting
- Update of SQLite3 to 3.8.1.
- Add ""date"" header field to replies, according to the requirements of RFC 2616 (the HTTP standard), Section 14.18
- Fix websocket long pull
- Updated API documentation
- Fixed Posix locking functions for Windows
- Updated version number
",13352949
463,False,False,2019-06-23T19:55:49Z,2019-06-23T19:59:50Z,"* support PHP 7.3
* support V8 7.x (now V8 > 6.9 is required)
* fix module path normaliser (issue #349)
* fix export bug w/ multiple derived classes (issue #410)

This release also is available at http://pecl.php.net/package/v8js",4160039
464,False,False,2018-01-07T12:20:18Z,2018-01-07T12:27:05Z,"* emit warning when compiling against V8 without untrusted code mitigations
* support native modules (i.e. expose PHP objects via require('...'))

This release also is available at http://pecl.php.net/package/v8js
",4160039
465,False,False,2017-11-26T14:18:30Z,2017-11-26T14:23:52Z,"Backward-incompatible changes
-----------------------------

- normal script execution shares its context with modules now (like on Node.js)
- expose a ""global"" symbol that references the global scope (like on Node.js)
- modules may return arbitrary values (not just objects; now like on Node.js)
- pick up exports from ""module.exports"" also (like on Node.js)
- handle exceptions thrown in module loader/normaliser like in other PHP scopes called from JS
  (i.e. by default terminate execution, optionally propagate to JS side)

V8Js' modules vastly behave like Node.js modules now \o/

- php.ini option v8js.compat_php_exceptions has been removed

Deprecations
------------
- V8Js::registerExtension and V8Js::getExtensions are now deprecated, use snapshots instead
- likewise passing $extensions to V8Js::__construct
- V8Js::getPendingException and and V8Js::clearPendingException are deprecated, use try/catch
- likewise passing $report_uncaught_exceptions !== true to V8Js::__construct

Improvements
------------
- add documentation on heap snapshots

Bugfixes
--------

- fix build on Windows with VS2017 (thanks @Jan-E)
- fix enumeration of methods on V8 6.3

This release also is available at http://pecl.php.net/package/v8js",4160039
466,False,False,2017-04-23T19:51:03Z,2017-08-12T13:05:31Z,"_This release targets PHP 7.0 and newer; if you're looking for PHP 5.x releases, pick V8Js 0.6.4_

Versioning of `v8js` follows semver, it is not expected that this release breaks anything.

## New Feature
Correctly initialize V8's ICU component (as needed by recent versions)
* path to libv8 library is now baked into the library to find icudtl.dat file
* if icudtl.dat file is moved after compile time, set v8js.icudtl_dat_path php.ini variable

This release also is available at http://pecl.php.net/package/v8js",4160039
467,False,False,2017-08-01T20:39:01Z,2017-08-12T13:03:16Z,"_This release targets PHP 7.0 and newer; if you're looking for PHP 5.x releases, pick V8Js 0.6.4_

Versioning of `v8js` follows semver, it is not expected that this release breaks anything.

## Bugfixes
* fix build against V8 version 6.0 (#313)
* don't clean properties hash while it is iterated (#316)
* fix build against PHP 7.2 

## Refactorings
* omit usage of deprecated V8 API (#311)

This release also is available at http://pecl.php.net/package/v8js",4160039
468,False,False,2017-03-16T20:23:06Z,2017-03-16T20:25:28Z,"_This release targets PHP 7.0 and newer; if you're looking for PHP 5.x releases, pick V8Js 0.6.4_

Versioning of `v8js` follows semver, it is not expected that this release breaks anything.

## Bugfixes
* fix compilation with GCC7 (include necessary headers)
* fix build with recent V8 5.9 versions (libv8_libplatform not found)
* adapt exception_start_column.phpt test to changed output of recent V8 5.9 versions
* fix compilation with PHP 7.1.3

## Refactorings
* drop TSRM stuff unneeded since PHP 7
* remove unused variables
* make memory_limit a size_t internally (and throw if negative values are provided on PHP interface)  

This release also is available at http://pecl.php.net/package/v8js",4160039
469,False,False,2017-03-11T12:26:24Z,2017-03-11T20:12:56Z,"_This release targets PHP 7.0 and newer; if you're looking for PHP 5.x releases, pick V8Js 0.6.4_

Versioning of `v8js` follows semver, it is not expected that this release breaks anything.

# Bug Fixes
* Fix long vs. zend_long issues on x64 Windows

This release also is available at http://pecl.php.net/package/v8js
",4160039
470,False,False,2017-03-05T19:21:04Z,2017-03-11T20:11:50Z,"_This release targets PHP 7.0; if you're looking for PHP 5.x releases, pick V8Js 0.6.4_

Versioning of `v8js` follows semver, it is not expected that this release breaks anything.

# Bug Fixes
* Bugfix: Reset fatal_error_abort on RSHUTDOWN
* Improve auto configuration (V8 detection)
* Improve build instructions on Linux & Windows

This release also is available at http://pecl.php.net/package/v8js
",4160039
471,False,False,2016-09-22T18:13:32Z,2016-11-01T16:50:15Z,"_This release targets PHP 7.0; if you're looking for PHP 5.x releases, pick V8Js 0.6.4_

# Bug Fixes
- fix detection of libv8_libbase.a during configuration
- fix license URIs in package.xml

This release also is available at http://pecl.php.net/package/v8js
",4160039
472,False,False,2016-09-04T14:55:52Z,2016-09-04T15:04:49Z,"_This release targets PHP 7.0; if you're looking for PHP 5.x releases, pick V8Js 0.6.4_

# Bug Fixes
- fix reference counting issue (and hence use-after-free memory error)
- fix another use-after-free issue with registerExtension
- fix build against PHP 7.1 (beta)
- correctly export reference-type variables to JavaScript

This release also is available at http://pecl.php.net/package/v8js
",4160039
473,False,False,2016-07-02T21:04:50Z,2016-07-02T21:12:23Z,"_This release targets PHP 7.0; if you're looking for PHP 5.x releases, pick V8Js 0.6.4_

# Bug Fixes
- Fix build against V8 version 5.3.337 (and higher)

This release also is available at http://pecl.php.net/package/v8js
",4160039
474,False,False,2016-07-02T20:49:02Z,2016-07-02T20:53:22Z,"_This release targets PHP 5.x; if you're looking for PHP 7 releases, pick from 1.x.x version line_

## Bug Fixes
- Fix build against V8 version 5.3.337 (and higher)

This release also is available at http://pecl.php.net/package/v8js
",4160039
475,False,False,2016-05-22T21:51:40Z,2016-05-22T21:59:10Z,"_This release targets PHP 7.0; if you're looking for PHP 5.x releases, pick V8Js 0.6.3_

## New Features
- Allow to adjust the considered ""amount of external memory"" by objects exported to V8

## Bug Fixes
- Pass back V8Object instances, don't re-wrap
- Retain object identity on 'return $this'
- Retain object identity on JS-side 'return this'
- Send LowMemoryNotification signals to V8 before imposing memory limit
- Fix build against V8 version 5.2 (deprecated WeakCallbackInfo & GetHiddenValue et al)
- Improve/Clarify README

## Code Cleanup
- Removed support for ""old-age"" V8 versions (i.e. V8 < 4.6.76)
- Removed old examples and pre-phpt test script

This release also is available at http://pecl.php.net/package/v8js
",4160039
476,False,False,2016-05-22T19:07:35Z,2016-05-22T19:11:35Z,"_This release targets PHP 5.x; if you're looking for PHP 7 releases, pick from 1.x.x version line_

## Bug Fixes
- Send LowMemoryNotification signals to V8 before imposing memory limit
- Fix build against V8 version 5.2 (deprecated WeakCallbackInfo & GetHiddenValue et al)
- Improve/Clarify README

## Code Cleanup
- Removed support for ""old-age"" V8 versions (i.e. V8 < 4.6.76)
- Removed old examples and pre-phpt test script

This release also is available at http://pecl.php.net/package/v8js
",4160039
477,False,False,2016-03-25T22:25:23Z,2016-03-25T22:43:26Z,"This release targets PHP 5.x; if you're looking for PHP 7 releases, pick from 1.x.x version line

changes since last release:
- Pass back V8Object instances, don't re-wrap
- Retain object identity on 'return $this'  
- Retain object identity on JS-side 'return this'

This release also is available at http://pecl.php.net/package/v8js
",4160039
478,False,False,2016-03-24T11:28:00Z,2016-03-24T20:10:50Z,"This release targets PHP 5.x; if you're looking for PHP 7 releases, pick from 1.x.x version line

changes since last release:
- Fix configuration on MacOS platform

This release also is available at http://pecl.php.net/package/v8js
",4160039
479,False,False,2016-03-08T17:11:29Z,2016-03-08T17:18:34Z,"This release targets PHP 5.x; if you're looking for PHP 7 releases, pick from 1.x.x version line

changes since last release:
- Allow to adjust the considered ""amount of external memory"" by objects exported to V8

This release also is available at http://pecl.php.net/package/v8js
",4160039
480,False,False,2016-03-05T20:23:27Z,2016-03-05T20:29:50Z,"This release targets PHP 5.x; if you're looking for PHP 7 releases, pick from 1.x.x version line

changes since last release:
- Export public methods on classes derived from \V8Js to V8
- Support V8 compiled with external snapshots
- Allow to create custom snapshots of V8 heaps
- Allow to create V8 contexts based on custom snapshots generated earlier
- Support V8 5.1 well

This release also is available at http://pecl.php.net/package/v8js
",4160039
481,False,False,2016-01-08T08:01:34Z,2016-01-08T08:08:35Z,"This release targets PHP 7.0; if you're looking for PHP 5.x releases, pick V8Js 0.4.1

changes since last release:
- fix double free on object export
- fix use after free regarding pending exceptions
- don't abort PHP process on fatal V8 error (but trigger a warning instead)
- fix memory leaks on bailouts caused in V8 contexts
- fix build on Windows with Visual Studio 2015
- use libv8_platform on Windows

This release also merges in new features from V8Js 0.4.0.

This release also is available at http://pecl.php.net/package/v8js
",4160039
482,False,False,2016-01-08T07:25:53Z,2016-01-08T07:35:36Z,"This is a bugfix release targetting PHP 5.x; if you're looking for PHP 7 releases, pick from 1.x.x version line

changes since last release:
- Fix PHP.var_dump output on regexp objects (for consistency over all V8 versions)
- Fix ""this"" on V8Object method invocations

This release also is available at http://pecl.php.net/package/v8js
",4160039
483,False,False,2015-12-07T12:26:44Z,2015-12-07T12:33:29Z,"This release targets PHP 5.x; if you're looking for PHP 7 releases, pick from 1.x.x version line

changes since last release:
- Improve -Wno-c++11-narrowing/-Wno-narrowing flag detection (clang/gcc5 support)
- Added ability to set properties on V8Function
- CommonJS modules now have access to V8Js' var_dump function
- V8JsScriptExtensions now reference the normalised module id (instead of just ""require"")
- fatal PHP errors triggered in setModuleLoader callback are now handled gracefully
- setModuleLoader callback is now allowed to return an empty string as source of module
- V8Js' internal module path normalisation may now be overrode using setModuleNormaliser

This release also is available at http://pecl.php.net/package/v8js
",4160039
484,False,False,2015-12-04T20:14:06Z,2015-12-04T20:22:12Z,"This is the first release for PHP 7

It does _not_ compile against PHP 5.6 et al -- for those versions use V8Js version 0.3.0

This release also is available at http://pecl.php.net/package/v8js
",4160039
485,False,False,2015-10-11T20:00:33Z,2015-10-11T20:12:52Z,"changes since last release:
- Fix multi-threading with pthreads extension
- Remove v8 debug agent support (which is unsupported by V8 since 3.28.4)

This release also is available at http://pecl.php.net/package/v8js

This is the first release of V8Js declared as ""stable"" and also one of the last releases targetting PHP 5.x; 
PHP7 is on it's way and so is the first release of V8Js for PHP7 (to be released soon)
",4160039
486,False,False,2015-09-26T10:32:21Z,2015-09-26T10:48:07Z,"changes since last release:
- Fix reference counting issue on PHP->JS->PHP exception propagation

This release also is available at http://pecl.php.net/package/v8js
",4160039
487,False,False,2015-09-23T18:11:15Z,2015-09-23T20:29:29Z,"changes since last release:
- Stop JS execution on PHP exceptions (instead of continuing silently)
- Allow propagation of PHP exceptions to JS context (disabled by default)
- Add v8js.compat_php_exceptions php.ini switch to switch previous behaviour back on

This release also is available at http://pecl.php.net/package/v8js
",4160039
488,False,False,2015-09-01T15:18:12Z,2015-09-23T17:44:14Z,"changes since last release:
- Fix memory leak with repeated Array exports from PHP to JS

This release also is available at http://pecl.php.net/package/v8js
",4160039
489,False,False,2015-08-27T14:25:59Z,2015-08-27T14:27:27Z,"changes since last release:
- Fix FLAG_FORCE_ARRAY affecting V8Function objects
- Fix memory leak with repeated calls of methods on exported PHP objects

This release also is available at http://pecl.php.net/package/v8js
",4160039
490,False,False,2015-08-26T09:19:26Z,2015-08-26T09:23:54Z,"changes since last release:
- Fix CommonJS module caching
- Fix use-after-free issue on CommonJS module reuse
- Fix memory leaks in CommonJS module loader
- Fix memory leak regarding lost script resources (compileScript call et al)
- Improve V8Function call performance

This release also is available at http://pecl.php.net/package/v8js
",4160039
491,False,False,2015-07-25T22:07:58Z,2015-07-26T08:05:03Z,"changes since last release:
- adapt to latest v8 API (v8 versions from 3.24.6 up to latest 4.6 branch supported now)
- fixed FLAG_FORCE_ARRAY behaviour regarding property assignments
- properly stop (and restart) timer thread (for memory &amp; cpu limits)
- fixed crash on failed module bootstrapping

This release also is available at http://pecl.php.net/package/v8js
",4160039
492,False,True,2018-11-27T22:49:03Z,2018-11-27T23:13:30Z,This is a beta for the upcoming 1.0.0 release. If no significant issues are found 1.0.0 will be identical to this release.,5939005
493,False,True,2016-03-26T01:30:20Z,2016-03-26T02:09:31Z,"This new release of Terra brings some changes to the language and APIs designed to simplify the language and improve error reporting. These changes were based on the experiences of developing DSLs with Terra such as [Darkroom](http://darkroom-lang.org), [Ebb](http://ebblang.org), and [Regent](http://regent-lang.org), which gave us a better idea of how the language will be used and what problems crop up in larger systems.

In our experience, Terra code only requires minor changes to make it work with this new release, but feel free to email this list if you run into a situation where an update would not be trivial. Looking at the difference in the [unit tests](https://github.com/zdevito/terra/tree/master/tests) is useful to see where APIs and syntax have changed for particular features.

More detailed notes about the changes are below.

# ‘Eager’ Typechecking

## Change

This release changes when typechecking of Terra functions and quotations occurs. Previously, typechecking was done ‘lazily’, that is, it ran right before a Terra function was actually used. Instead, the current version typechecks eagerly — immediately when a function or quotation is defined. This includes all meta-programming such as evaluating escapes and running macros.

## Rationale

The original ‘lazy’ design had some advantages. For instance, it allowed for a flexible order to when things were defined. A function could call a Terra method before that method was declared by the struct being used. However, we have found those advantages are outweighted by disadvantages. In lazy typechecking, errors tended to get reported very far from the creation of the statement that caused them, slowing debugging. It also complicated meta-programming, a core aspect of Terra. When constructing Terra expressions like the quotation `a + b, it could be useful to know what the type of the resulting expression would be. With lazy typechecking, they type is not known when the quote is constructed. It can be difficult to figure out the type of`a + b`from the types of`a`and`b` without duplicating much of Terra's typechecking rules. While, we allowed a work-around that deferred meta-programming to typechecking time by using a macro, it only complicated the process. 

These problems are resolved in the current release with eager typechecking. Type errors are immediately reported when a function definition or quotation is created, making it easier to debug. The type of a quotation is also always availiable of use during metaprogramming:

```
local function genadd(a,b)
    local sum = `a + b
    print(“the type of sum is”,sum:gettype())
    -- use the type to do whatever you want
    return sum
end
terra foo()
    var d = 1.5
    var i = 1
    var d = [sum(d,i)] -- the type of sum is double
    var i = [sum(i,i)] -- the type of sum is int
end
```

## Ramifications to existing code

### Function Declaration/Definition

The major ramification of this change is that functions must be declared with a type before they are used in code, and that structs must be defined before being used in code. This is similar to the behavior of C/C++. To prevent everything from needing to be defined in a strict order, we allow continuous declarations/definitions to be processed simultaneously. Any sequence of declarations or definitions of terra structs and functions are now processed simultaneously:

```
terra PrintReal(a : double)
    C.printf(""%d "",a)
end
terra PrintComplex(c : Complex)
    C.printf(""Complex "")
    PrintReal(c.real)
    PrintReal(c.imag)
end
struct Complex { real : double, imag : double }
print(""lua code"")
terra secondunit()
```

In this case the declarations of Complex, PrintComplex, and PrintReal are processed first, followed by the definitions. Any interleaving Lua code, like the 'print' statement breaks up a declaration block. Previously this behavior was only possible using the 'and' keyword. Now this behavior is the default and the 'and' syntax has been removed.

Since typechecking is eager, function _declarations_ now require types:

```
local terra PrintReal :: double -> {}
terra Complex:add :: {Complex,Complex} -> Complex
```

(The double colon, ::, is necessary to avoid a parser ambiguity with method definitions)

### Symbols

Since typechecking is eager, Symbols must always be constructed with types so their types are known when used in quotations. The `type` argument to the `symbol(type,[name])` function is no longer optional and will report an error if omitted. To get a unique label for struct members, method name, or goto labels, the `label([name])` function has been added. Symbols and Labels are now distinct concepts. Symbols always have types and represent a unique name for a Terra expression, while Labels never have a type and represent a unique name for a labels.

Furthermore, since Symbols always have types, the optional type annotations for escaped variable declarations have been removed:

```
local a = symbol(int,""a"")
terra foo([a]) --ok
end
terra foo([a]:int) -- syntax error, symbol 'a' always has a type making the annotation redundant
end
```

### APIs

Certain APIs for handling the consequences of lazy typechecking such as `:peektype` have been removed. `:printpretty` only takes a single argument since expressions are always type.

# Improved Error Reporting

In addition to having type errors occur earlier, the quality of error reporting has improved. Previously, if used-defined code such as an escape, macro, or type annotation resulted in an error, the typechecker would try to recover and continue generating type errors for the rest of a function. This resulted in long inscrutable error messages. 

The new error reporting system does not attempt to recover in these cases and instead reports a more meaningful error message with a full stack trace that includes what the typechecker was checking when the error occurred.

error.t:

```
local function dosomething(a)
    error(""NYI - dosomething"")
end
local function dosomethingmore(a)
    local b = dosomething(a)
    return `a + b
end

terra foo(d : int)
    var c = [dosomethingmore(d)]
    return c
end
```

 message:

```
error.t:2: NYI - dosomething
stack traceback:
    [C]: in function 'error'
    error.t:2: in function 'dosomething'
    error.t:5: in function 'userfn'
    error.t:10: Errors reported during evaluating Lua code from Terra
        var c = [dosomethingmore(d)]
                               ^
    /Users/zdevito/terra/src/terralib.lua:1748: in function 'evalluaexpression'
    /Users/zdevito/terra/src/terralib.lua:2772: in function 'docheck'
    /Users/zdevito/terra/src/terralib.lua:2983: in function 'checkexp'
    /Users/zdevito/terra/src/terralib.lua:2510: in function 'checkexpressions'
    /Users/zdevito/terra/src/terralib.lua:3150: in function 'checksingle'
    /Users/zdevito/terra/src/terralib.lua:3184: in function 'checkstmts'
    /Users/zdevito/terra/src/terralib.lua:3079: in function 'checkblock'
    /Users/zdevito/terra/src/terralib.lua:3268: in function 'typecheck'
    /Users/zdevito/terra/src/terralib.lua:1096: in function 'defineobjects'
    error.t:9: in main chunk
```

The error reporting system also does a better job at accurately reporting line numbers for code that exists in escapes.

# Constant Expressions and Initializers

Terra Constants generated with `constant([type],[value])` can now be defined using Terra quotations of _constant expressions_:

```
local complexobject = constant(`Complex { 3, 4 })
```

Constant expressions are a subset of Terra expressions whose values are guaranteed to be constant and correspond roughly to LLVM's concept of a constant expression. They can include things whose values will be constant after compilation but whose value is not known beforehand such as the value of a function pointer:

```
terra a() end
terra b() end
terra c() end
-- array of function pointers to a,b, and c.
local functionarray = const(`array(a,b,c))
```

The global initializer to a `global()` variable can also be a constant expression now and can be reassigned until the global is actually compiled using `:setinitializer`.

# Separate Overloaded and non-Overloaded Functions

Previously, it was possible for any Terra function to have multiple definitions, which would cause it to become an overloaded function. However, there are many cases where a function with a single definition is needed such as saving an object (.o) file, generating a function pointer, and unambiguously calling a Terra function from Lua. 

In this release, terra functions are single-defintion by default. Another definition overrides the previous one. 

Overloaded functions are still possible using a separate object:

```
local addone = terralib.overloadedfunction(""addone"", 
               { terra(a : int) return a + 1 end,
                 terra(a : double) return a + 1 end })
-- you can also add methods later
addone:adddefinition(terra(a : float) return a + 1 end) 
```

This fixes the worst problem caused by overloaded functions.  On the REPL, defining a new version of a function simply added another definition to the previous function rather than overwriting it:

```
> terra foo() return 1 end
> terra foo() return 2 end
> terra useit() foo() end --old behavior: function is ambiguously defined
                          --new behavior: returns 2
```

API changes reflect the fact that functions only have a single definition. For flexibility, we allow the definition of an already defined function to be changed using `:resetdefinition` as long as it has not already been output by the compiler.

# Calling Lua Functions from Terra

A common inscrutable error was accidentally calling a a Lua function from Terra when that function was meant to be escaped, or was intended to be a macro. To avoid this situation, we reject attempts to call Lua functions directly. Instead, they must now be cast to a terra function first with `terralib.cast`:

```
local tprint = terralib.cast({int}->{},print)
terra foo()
    tprint(4)
end
```

If you want the old behavior, you can recreate it using macros:

```
local function createluawrapper(luafn)
    local typecache = {}
    return macro(function(...)
        local args = terralib.newlist {...}
        local argtypes = args:map(""gettype"")
        local fntype = argtypes -> {}
        if not typecache[fntype] then
            typecache[fntype] = terralib.cast(fntype,luafn)
        end
        local fn = typecache[fntype]
        return `fn([args])
    end)
end

local tprint = createluawrapper(print)
terra test()
    tprint(1,2,3.5)
    tprint(1)
    tprint(2)
end

test()
```

# Abstract Syntax Description Language (ASDL)

Compiler internals in Terra have been changed to use the Zephyr [Abstract Syntax Description Language (ASDL)](http://www.cs.princeton.edu/research/techreps/TR-554-97), which is also used internally in the CPython implementation. 

A require-able Lua package ""asdl"" provides this library to users so that they can also use ASDL to create data-types to represent abstract-syntax trees and intermediate representations in their own DSLs.

Using ASDL to represent Terra's internal ASTs will make it easier to write backends in addition to LLVM that consume the AST.

# Other API Changes

`__for` meta-method behavior has been changed to be simpler.
",5939005
494,False,False,2016-02-26T19:11:36Z,2016-02-26T19:29:41Z,"Bug fixes that resolve an issue with including C header files on some Linux distributions

Support testing for NaN's with `a ~= a`

Additional tests for performance regression.

Implementation of `lexer:luastats()`, `lexer:terraexp()` and `lexer:terrastats()` in parser extension interface.
",5939005
495,False,False,2015-08-04T03:14:14Z,2015-08-03T20:28:16Z,"Bug fixes for including C header files and their interaction with cross compilation.

Bug fix to avoid adding Clang resource directory on Windows builds.
",5939005
496,False,False,2015-07-21T23:30:49Z,2015-07-22T02:12:37Z,"This release has two major changes.
- Support for cross-compilation. Functions like `terralib.saveobj` can now emit code for non-native architectures see the documentation at http://terralang.org/api.html for more information.
- Support for stand-alone static linking. It is now possible to link against a static `libterra.a` that includes everything you need to run Terra include the right LuaJIT and LLVM code. The library itself has no external dependencies on the filesystem.
",5939005
497,False,False,2015-03-11T06:09:37Z,2015-03-12T22:22:30Z,"Added ability to compile CUDA code for offline use.
",5939005
498,False,False,2015-03-04T04:54:01Z,2015-03-04T06:44:53Z,"Releases for OSX 10.10, Ubuntu 14.04, and Windows 8
",5939005
499,False,False,2020-01-14T03:00:59Z,2020-01-20T22:54:55Z,"#### Known issues
- [CBL-216](https://issues.couchbase.com/browse/CBL-216) Ordering null values inconsistent with N1QL expectations
- [CBL-95](https://issues.couchbase.com/browse/CBL-95) Pending conflicts could be resolved by a wrong replicator
- [CBL-49](https://issues.couchbase.com/browse/CBL-49) Need a way to distinguish boolean types

#### Fixed at this Release
- [CBL-562](https://issues.couchbase.com/browse/CBL-562) Can’t open existing db read-only; LiteCore test ""Database Open Older Encrypted"" fails
- [CBL-556](https://issues.couchbase.com/browse/CBL-556) Reachability undermines offline reconnect logic
- [CBL-550](https://issues.couchbase.com/browse/CBL-550) SQLite index creation mistakenly sets user_version backwards
- [CBL-536](https://issues.couchbase.com/browse/CBL-536) Long delay starting replicator, for big databases
- [CBL-527](https://issues.couchbase.com/browse/CBL-527) RefCount crash
- [CBL-525](https://issues.couchbase.com/browse/CBL-525) Upgrade from 1.x fails if any docID starts with ""_""
- [CBL-503](https://issues.couchbase.com/browse/CBL-503) Jenkins PR validation uses master branch
- [CBL-463](https://issues.couchbase.com/browse/CBL-463) Attempt to log strings that are not Modified UTF-8
- [CBL-444](https://issues.couchbase.com/browse/CBL-444) Purging documents does not fire events in a QueryChangeListener
- [CBL-437](https://issues.couchbase.com/browse/CBL-437) Deprecated Database.setLogLevel is not logging
- [CBL-415](https://issues.couchbase.com/browse/CBL-415) strod produces locale-dependent results for encoding Fleece
- [CBL-402](https://issues.couchbase.com/browse/CBL-402) Back-tag recent releases
- [CBL-400](https://issues.couchbase.com/browse/CBL-400) Not getting right number of revisions on SGW while using multiple SGWS
- [CBL-369](https://issues.couchbase.com/browse/CBL-369) FTS and database alias
- [CBL-355](https://issues.couchbase.com/browse/CBL-355) Queries silently ignore Collation Locale
- [CBL-343](https://issues.couchbase.com/browse/CBL-343) LiteCore tests need to use unique database
- [CBL-324](https://issues.couchbase.com/browse/CBL-324) Function.upper() failed to operate non-ASCII characters
- [CBL-242](https://issues.couchbase.com/browse/CBL-242) Inconsistent revision hash length
- [CBL-221](https://issues.couchbase.com/browse/CBL-221) ""mutex lock failed"" during initial pull replication of large # of docs
- [CBL-218](https://issues.couchbase.com/browse/CBL-218) FTS indexing an array-valued property is unreliable
- [CBL-207](https://issues.couchbase.com/browse/CBL-207) Replicator change event has idle with timeout error
- [CBL-175](https://issues.couchbase.com/browse/CBL-175) Can’t query the records has the % character with LIKE operator.
- [CBL-171](https://issues.couchbase.com/browse/CBL-171) CBL replication never finishes for replication filtering when doc count is 1000
- [CBL-126](https://issues.couchbase.com/browse/CBL-126) Litecore does not retry subChanges request that fails with temporary 503 error
- [CBL-106](https://issues.couchbase.com/browse/CBL-106) Replicator C++ exception: ""properties excessively large""
- [CBL-52](https://issues.couchbase.com/browse/CBL-52) “LIKE”, ""CONTAINS"", ""REGEX_LIKE"" operators ignore collations",7948548
500,False,False,2019-11-08T20:41:02Z,2019-11-25T18:52:43Z,"Fixed in this Release
* CBL-547 CBLWebSocket crashing in older iPhone versions
* CBL-468 Null dereference during pull-only replication
* CBL-531 Support Xcode 11.2 with Swift 5.1.2 compiler",7948548
501,False,False,2019-09-13T17:49:46Z,2019-09-25T00:52:04Z,* This maintenance release adds support for Xcode 11 and Swift 5.1.,7948548
502,False,False,2019-08-27T18:23:29Z,2019-08-27T18:23:59Z,"**Enhancements**
- #2427 Replicator Conflict Resolver.
- #2429 Database Save Conflict Handler.
- [CBL-148](https://issues.couchbase.com/browse/CBL-148) Expose Document Revision ID

**Known Issues**
- [CBL-49](https://issues.couchbase.com/browse/CBL-49) Need a way to distinguish boolean types

**Bugs**
- [CBL-222](https://issues.couchbase.com/browse/CBL-222) CBL push replication is not replicating doc updates with delta sync after CBL upgrade
- [CBL-171](https://issues.couchbase.com/browse/CBL-171) CBL replication never finishes for replication filtering when doc count is 1000
- [CBL-146](https://issues.couchbase.com/browse/CBL-146) Custom Conflict resolution is throwing exception for iOS app when trying to resolve conflict
- [CBL-136](https://issues.couchbase.com/browse/CBL-136) Replication is not replicating all updates with delta-sync enabled
- [CBL-110](https://issues.couchbase.com/browse/CBL-110) delta sync on top of a deletion caused data discrepancy between SG and CBL
- [CBL-106](https://issues.couchbase.com/browse/CBL-106) Replicator C++ exception: ""properties excessively large""
- [CBL-104](https://issues.couchbase.com/browse/CBL-104) Replicating two documents with identical blob could cause POSIX error
- [CBL-86](https://issues.couchbase.com/browse/CBL-86) Race condition on SharedKeys causes silent error
- [CBL-47](https://issues.couchbase.com/browse/CBL-47) Intermittent SQLITE_MISUSE error during normal testing
- [CBL-45](https://issues.couchbase.com/browse/CBL-45) LiteCore time out issues stray busy callback
- [CBL-38](https://issues.couchbase.com/browse/CBL-38) null pointer dereference

",7948548
503,False,False,2019-07-25T04:49:45Z,2019-08-20T19:02:10Z,"- Reduce Replication Timeouts
- Delta Sync on top of a deletion caused data discrepancy between SG and CBL
- Replication is not replicating all updates with delta-sync enabled",7948548
504,False,False,2019-06-07T23:32:17Z,2019-07-02T17:24:58Z,"Bug Fixes
- Invalid Fleece data in SQLite table (datatype mismatch) (CBSE-6844)
- Data mismatch error after upgrading to 2.5 (CBSE-6848)
- Invalid Fleece data in SQLite table (CBSE-6895)
- Intermittent access violation (CBSE-6807)
- DBWorker crashes in Fleece Encoder (writePointer) https://github.com/couchbase/couchbase-lite-core/issues/792",7948548
505,False,False,2019-05-03T17:13:31Z,2019-05-06T20:37:45Z,"Bugs
*#2438* Cannot Open Database Encrypted in 2.1.x with 2.5",7948548
506,False,False,2019-04-30T19:04:04Z,2019-05-02T20:58:44Z,"As part of this release we had [16 issues](https://github.com/couchbase/couchbase-lite-ios/issues?milestone=58&state=closed) closed.
December 2018 - January 2019

__Performance Improvements__
- [__#168__](https://github.com/couchbase/couchbase-lite-ios/issues/168) Transfer new revisions as deltas

__Enhancements__
- [__#168__](https://github.com/couchbase/couchbase-lite-ios/issues/168) Transfer new revisions as deltas
- [__#847__](https://github.com/couchbase/couchbase-lite-ios/issues/847) Client-side pull replication filters
- [__#2221__](https://github.com/couchbase/couchbase-lite-ios/issues/2221) Logging redirect is missing for 2.X
- [__#2321__](https://github.com/couchbase/couchbase-lite-ios/issues/2321) Remove log rotation change batching

__Bugs__
- [__#2022__](https://github.com/couchbase/couchbase-lite-ios/issues/2022) “isOldAttachment” check is incorrect
- [__#2238__](https://github.com/couchbase/couchbase-lite-ios/issues/2238) Memory release issue for released certificate
- [__#2269__](https://github.com/couchbase/couchbase-lite-ios/issues/2269) CBLWebSocket CLOSED
- [__#2270__](https://github.com/couchbase/couchbase-lite-ios/issues/2270) Document Expiry doesn't seem to set the expiration timestamp in milliseconds
- [__#2274__](https://github.com/couchbase/couchbase-lite-ios/issues/2274) TestPushAndPullBigBodyDocument_SG intermittently fails
- [__#2281__](https://github.com/couchbase/couchbase-lite-ios/issues/2281) (Closed) Logs which contains non-english letter turns out to be gibberish
- [__#2291__](https://github.com/couchbase/couchbase-lite-ios/issues/2291) DB change notifications not posted if another thread is in a transaction
- [__#2292__](https://github.com/couchbase/couchbase-lite-ios/issues/2292) Change the default directory of the log files
- [__#2306__](https://github.com/couchbase/couchbase-lite-ios/issues/2306) Fix default log file location
- [__#2372__](https://github.com/couchbase/couchbase-lite-ios/issues/2372) Replicator doesn't retry after disable and enable wifi 
- [__#2393__](https://github.com/couchbase/couchbase-lite-ios/issues/2393) AddressSanitizer issue in CBLFileLogger's apply method
- [__#2405__](https://github.com/couchbase/couchbase-lite-ios/issues/2405) Console Log Crash when there is percent character in the log message

## Where to get it
You can download this release from [Couchbase.com](http://www.couchbase.com/nosql-databases/downloads#Couchbase_Mobile)",7948548
507,False,False,2019-03-29T18:42:25Z,2019-04-09T00:24:40Z,"* Supported XCode 10.2 and compatible with Swift 5.0.
* Fixed crash in Fleece: Scope while using LiveQuery",7948548
508,False,False,2018-11-27T18:28:07Z,2018-12-05T18:28:55Z,"__Bugs__
- [__#2230__](https://github.com/couchbase/couchbase-lite-ios/issues/2230) Incompatible Swift version, Swift 4.2.1

## Where to get it
You can download this release from [Couchbase.com](http://www.couchbase.com/nosql-databases/downloads#Couchbase_Mobile)",7948548
509,False,False,2018-10-22T20:34:50Z,2018-11-20T01:58:03Z,"As part of this release we had [25 commits](https://github.com/couchbase/couchbase-lite-ios/compare/2.1.1...2.1.2) which resulted in [4 issues](https://github.com/couchbase/couchbase-lite-ios/issues?milestone=62&state=closed) being closed.


__Bugs__
- [__#2205__](https://github.com/couchbase/couchbase-lite-ios/issues/2205) Crash when using 2.1 to pull attachments from 2.0
- [__#2216__](https://github.com/couchbase/couchbase-lite-ios/issues/2216) Auth Header from BasicAuthenticator not getting sent if SG Guested is enabled

## Where to get it
You can download this release from [Couchbase.com](http://www.couchbase.com/nosql-databases/downloads#Couchbase_Mobile)",7948548
510,False,False,2018-09-18T21:14:53Z,2018-10-16T18:18:52Z,"As part of this release we had [7 issues](https://github.com/couchbase/couchbase-lite-ios/issues?milestone=56&state=closed) closed.


__Performance Improvements__
- [__#1326__](https://github.com/couchbase/couchbase-lite-ios/issues/1326) Retry timers should fire immediately when network comes online

__Bugs__
- [__#1898__](https://github.com/couchbase/couchbase-lite-ios/issues/1898) One shot sync not pulling data properly in background
- [__#1912__](https://github.com/couchbase/couchbase-lite-ios/issues/1912) Peer sync between High Sierra and iOS 11 CBLWarnUntrustedCert error
- [__#1971__](https://github.com/couchbase/couchbase-lite-ios/issues/1971) Assertion : [CBLRemoteRequest createTaskInURLSession:]
- [__#1979__](https://github.com/couchbase/couchbase-lite-ios/issues/1979) SQLITE database is unreadable (err 5)
- [__#2130__](https://github.com/couchbase/couchbase-lite-ios/issues/2130) CBL 1.4.1 Many attachments uploading crashes iOS
- [__#2165__](https://github.com/couchbase/couchbase-lite-ios/issues/2165) Assertion failure in MYFindIdentity

## Where to get it
You can download this release from [Couchbase.com](http://www.couchbase.com/nosql-databases/downloads#Couchbase_Mobile)",7948548
511,False,False,2018-09-13T23:03:54Z,2018-09-18T22:18:23Z,"As part of this release we had [2 issues](https://github.com/couchbase/couchbase-lite-ios/issues?q=is%3Aclosed+milestone%3A2.1.1) closed.

__Bugs__
- [__#2204__](https://github.com/couchbase/couchbase-lite-ios/issues/2204) Support for Xcode 10 and Swift 4.2
- [__#2202__](https://github.com/couchbase/couchbase-lite-ios/issues/2202) CBLMessageEndpointListenerConfiguration symbol is not exported

## Where to get it
You can download this release from [Couchbase.com](http://www.couchbase.com/nosql-databases/downloads#Couchbase_Mobile)
",7948548
512,False,False,2018-08-17T05:37:55Z,2018-09-11T18:11:08Z,"As part of this release we had [10 issues](https://github.com/couchbase/couchbase-lite-ios/issues?milestone=29&state=closed) closed.


__Performance Improvements__
- [__#2127__](https://github.com/couchbase/couchbase-lite-ios/issues/2127) CBLReplicator always runs on main queue

__Enhancements__
- [__#1610__](https://github.com/couchbase/couchbase-lite-ios/issues/1610) 2.0: Provide a script to strip simulator architecture frameworks for app submission
- [__#2117__](https://github.com/couchbase/couchbase-lite-ios/issues/2117) Implement Database Encryption (EE feature)
- [__#2118__](https://github.com/couchbase/couchbase-lite-ios/issues/2118) Support Peer-to-Peer replication through MessageEndpoint API (EE feature)
- [__#2139__](https://github.com/couchbase/couchbase-lite-ios/issues/2139) Implement Replicator reset checkpoint feature

__Bugs__
- [__#1926__](https://github.com/couchbase/couchbase-lite-ios/issues/1926) Swift Replicator.addChangeListener crashes
- [__#2140__](https://github.com/couchbase/couchbase-lite-ios/issues/2140) 2.0 : TIC Read Status 1:57 error spam
- [__#2149__](https://github.com/couchbase/couchbase-lite-ios/issues/2149) Swift DictionaryObject and ArrayObject not having toMutable() method
- [__#2162__](https://github.com/couchbase/couchbase-lite-ios/issues/2162) 2.1 DB1: Crash when inserting image Blobs to objects in embedded array in Swift 
- [__#2188__](https://github.com/couchbase/couchbase-lite-ios/issues/2188) Replicator not getting stopped when using MessageEndpoint

## Where to get it
You can download this release from [Couchbase.com](http://www.couchbase.com/nosql-databases/downloads#Couchbase_Mobile)",7948548
513,False,False,2018-06-02T16:02:44Z,2018-06-12T18:32:38Z,Support for Log redaction of sensitive information when logging is enabled.,7948548
514,False,True,2018-04-18T17:14:20Z,2018-05-12T01:57:17Z,"## Changes
* API Updates:
    * Device Encryption is now supported (EE features)
    * Resetting a replication (in other words, making it start over again) is now supported via `Replicator`'s `ResetCheckpoint` method.  Be sure to call it before the Replication is started.

## Where to get it
* Download prebuilt binaries from [Couchbase.com](https://www.couchbase.com/downloads#couchbase-mobile)
* Use CocoaPods or Carthage by following the instruction from [here](https://github.com/couchbase/couchbase-lite-ios)",7948548
515,False,False,2018-04-12T18:12:25Z,2018-04-12T15:53:32Z,"This release introduces many new APIs including N1QL queries, full-text search and automated conflict resolution. See the [Couchbase Lite](https://developer.couchbase.com/documentation/mobile/2.0/couchbase-lite/index.html) guides for usage examples.

__Bugs__
- [__#1701__](https://github.com/couchbase/couchbase-lite-ios/issues/1701) 2:0 swift expression based query returning empty results
- [__#1836__](https://github.com/couchbase/couchbase-lite-ios/issues/1836) 2.0: Database Listener callbacks not always getting called on main thread
- [__#1854__](https://github.com/couchbase/couchbase-lite-ios/issues/1854) 2.0 : Dictionary, Array, and Fragment have duplicate definitions
- [__#1862__](https://github.com/couchbase/couchbase-lite-ios/issues/1862) 2.0: CBLQueryExpression ""and:"" and ""or:"" methods cause syntax errors in Obj-C++
- [__#2005__](https://github.com/couchbase/couchbase-lite-ios/issues/2005) 2.0: Make CBLDatabase query/replication tracking thread-safe
- [__#2035__](https://github.com/couchbase/couchbase-lite-ios/issues/2035) Cross Join Not Returning expected results
- [__#2061__](https://github.com/couchbase/couchbase-lite-ios/issues/2061) Swift 2.0: LiteCore error trying to copy prebuilt DB
- [__#2085__](https://github.com/couchbase/couchbase-lite-ios/issues/2085) Crashed in CBLWebSocket
- [__#2094__](https://github.com/couchbase/couchbase-lite-ios/issues/2094) TestSelfSignedSSLFailure_SG failed on iOS 10.2
- [__#2104__](https://github.com/couchbase/couchbase-lite-ios/issues/2104) Set Immutable Dictionary or Array to Document causes toDictionary() to crash in Swift

__Known Issues__
- [__#2112__](https://github.com/couchbase/couchbase-lite-ios/issues/2112) HTTP proxy support
- [__#2122__](https://github.com/couchbase/couchbase-lite-ios/issues/2122) IOS 9 - Got LiteCore error: connection closed abnormally - eventual crash

## Where to get it
You can download this release from [Couchbase.com](http://www.couchbase.com/nosql-databases/downloads#Couchbase_Mobile)",7948548
516,False,True,2018-04-05T18:14:11Z,2018-03-15T06:30:31Z,"## Changes
* API Updates:
    * New document save and delete API with concurrency control options: last-write-wins and fail-on-conflict. The last-write-wins is the option for the default save and delete document method.
    * The database encryption API has been removed from 2.0 due to some uncertainty over the cross-platform implementation. We plan to bring it back in 2.x.
* Several bug fixes in replication.
* General bug fixes and performance improvement.

## Where to get it
* Download prebuilt binaries from [Couchbase.com](https://developer.couchbase.com/documentation/mobile/2.0/whatsnew.html?language=ios)
",7948548
517,False,True,2018-02-08T18:43:22Z,2018-02-09T05:10:20Z,"## Changes
* API Updates:
    * Expression type safe API; new literal value based expression.
    * Removed CBLFullTextIndexOptions and moved all of CBLFullTextIndexOptions's properties into CBLFullTextIndex.
    * Renamed Query and Index factory class to QueryBuilder and IndexBuilder respectively.
    * Cleaned up Swift API function labels.
* URI scheme update:
   * The target URI scheme has changed from blip:// (blips:// ) to ws://(wss://) respectively
* Bug fixes and performance improvement.

## Where to get it
* Download prebuilt binaries from [Couchbase.com](https://developer.couchbase.com/documentation/mobile/2.0/whatsnew.html?language=ios)
* Use CocoaPods or Carthage by following the instruction from [here](https://github.com/couchbase/couchbase-lite-ios)",7948548
518,False,True,2017-12-20T17:34:40Z,2017-12-20T18:22:54Z,"## Changes
* Major API updates, some highlighted changes include:
    * Database.getDocument(id) will also return nil if the document was deleted.
    * Use term ‘value’ instead of ‘object’ for value/object based type setters.
    * Allows to specify a dispatch queue for posting changes when adding a change listener. This change has applied to Database, Replicator, and Query.
    * Remove LiveQuery and Query itself can be listened for changes.
    * Reorganize Query expressions, separate Meta, Array, and Full-text expression into its own class.
    * Support Full-text match on multiple indexed properties.
* Revise all Objective-C and Swift API to inline with the standard naming convention.
* Default conflict resolver algorithm changes as follows:
    * Deletion always wins.
    * Longest generation wins or Max RevID wins if the generations are the same.
* Database is now thread safe.

## Where to get it
* Download prebuilt binaries from [Couchbase.com](https://developer.couchbase.com/documentation/mobile/2.0/whatsnew.html?language=ios)
* Use CocoaPods or Carthage by following the instruction from [here](https://github.com/couchbase/couchbase-lite-ios)",7948548
519,False,True,2017-11-17T18:58:40Z,2017-11-17T19:45:09Z,"## Changes

* New Immutable Document API (Breaking API Changes)
* Bug fixes and performance improvement from LiteCore.

## Where to get it
* Download prebuilt binaries from [Couchbase.com](https://developer.couchbase.com/documentation/mobile/2.0/whatsnew.html?language=ios)
* Use CocoaPods or Carthage by following the instruction from [here](https://github.com/couchbase/couchbase-lite-ios)",7948548
520,False,False,2017-11-15T22:28:37Z,2017-11-15T23:37:53Z,"As part of this release we had [52 commits](https://github.com/couchbase/couchbase-lite-ios/compare/1.4.0...1.4.1) which resulted in [20 issues](https://github.com/couchbase/couchbase-lite-ios/issues?milestone=25&state=closed) being closed.


__Performance Improvements__
- [__#1648__](https://github.com/couchbase/couchbase-lite-ios/issues/1648) Purge does not remove row from 'docs' table
- [__#1737__](https://github.com/couchbase/couchbase-lite-ios/issues/1737) View indexing is very slow, due to mis-optimized SQLite query
- [__#1751__](https://github.com/couchbase/couchbase-lite-ios/issues/1751) Push replication becomes slower as local DB grows

__Bugs__
- [__#1354__](https://github.com/couchbase/couchbase-lite-ios/issues/1354) Deferred pulling of attachments problem
- [__#1572__](https://github.com/couchbase/couchbase-lite-ios/issues/1572) Idle crash [CBLRemoteSession close] (CBLRemoteSession.m:99)
- [__#1613__](https://github.com/couchbase/couchbase-lite-ios/issues/1613) Crash in askDelegateToValidateServerTrust
- [__#1622__](https://github.com/couchbase/couchbase-lite-ios/issues/1622) Error opening!: 23 - when trying to load data from iOS to Apple Watch
- [__#1649__](https://github.com/couchbase/couchbase-lite-ios/issues/1649) Missing role appears to cause continuous push replication to stop [v1.4]
- [__#1655__](https://github.com/couchbase/couchbase-lite-ios/issues/1655) Fatal Exception: NSInternalInconsistencyException [1.4]
- [__#1707__](https://github.com/couchbase/couchbase-lite-ios/issues/1707) Replication Stops working after lots of syncing / lots of time - Too much memory used during replication
- [__#1758__](https://github.com/couchbase/couchbase-lite-ios/issues/1758) Updating a design doc view map function does not take effect
- [__#1770__](https://github.com/couchbase/couchbase-lite-ios/issues/1770) Crash observed while saving documents to DB
- [__#1779__](https://github.com/couchbase/couchbase-lite-ios/issues/1779) IOS App Extension replication gets suspended ""prematurely""
- [__#1853__](https://github.com/couchbase/couchbase-lite-ios/issues/1853) CBL_BlobStoreWriter appendData assertion failure
- [__#1887__](https://github.com/couchbase/couchbase-lite-ios/issues/1887) 1.4 Encrypting a new database fails. Existing database encrypt fine.
- [__#1898__](https://github.com/couchbase/couchbase-lite-ios/issues/1898) One shot sync not pulling data properly in background
- [__#1912__](https://github.com/couchbase/couchbase-lite-ios/issues/1912) Peer sync between High Sierra and iOS 11 CBLWarnUntrustedCert error
- [__#1918__](https://github.com/couchbase/couchbase-lite-ios/issues/1918) Channel removal potentially disrupts attachments
- [__#1921__](https://github.com/couchbase/couchbase-lite-ios/issues/1921) CBLListener retaining CBL_RunLoopServer so both never get freed.
- [__#1923__](https://github.com/couchbase/couchbase-lite-ios/issues/1923) CBLRemoteSession finishTasksAndInvalidate crash

## Where to get it
You can download this release from [Couchbase.com](http://www.couchbase.com/nosql-databases/downloads#Couchbase_Mobile)",7948548
521,False,True,2017-11-04T03:03:38Z,2017-11-04T04:43:03Z,"## Changes

* Fixed Replicator’s uncleaned socket disconnect warning (#1937).
* Fixed Session Cookie being overwritten (#1943).
* Fixed Carthage build failure on DB019 (#1947).
* Reimplemented Fragment API - API is now more lightweight and has better performance.
* Improved performance of reading and writing document data with Mutable Fleece.

## Where to get it
* Download prebuilt binaries from [Couchbase.com](https://developer.couchbase.com/documentation/mobile/2.0/whatsnew.html?language=ios)
* Use CocoaPods or Carthage by following the instruction from [here](https://github.com/couchbase/couchbase-lite-ios)",7948548
522,False,True,2017-10-11T19:15:47Z,2017-10-12T00:55:36Z,"## Changes

* Added headers property to ReplicatorConfiguration for adding additional HTTP headers when sending HTTP requests to a remote server.
* Fixed invalid CFBundleShortVersionString.
* Updated Lite Core to uptake the following fixes:
    * Fixed replicator crashes when stopping replicator immediately after starting.
    * Fixed replicator staying in BUSY status after finish replicating.
    * Allowed MATCH operator nested inside multiple ANDs.


## Where to get it
* Download prebuilt binaries from [Couchbase.com](https://developer.couchbase.com/documentation/mobile/2.0/whatsnew.html?language=ios)
* Use CocoaPods or Carthage by following the instruction from [here](https://github.com/couchbase/couchbase-lite-ios)",7948548
523,False,True,2017-09-02T00:58:54Z,2017-09-02T01:31:06Z,"## Changes

* Support Database Encryption
* Implement a new index API
* Move FTS.rank expression to Function.rank()
* Make Replicator's User-Agent header that includes information about library version and platform.

## Where to get it
* Download prebuilt binaries from [Couchbase.com](https://developer.couchbase.com/documentation/mobile/2.0/whatsnew.html?language=ios)
* Use CocoaPods or Carthage by following the instruction from [here](https://github.com/couchbase/couchbase-lite-ios)",7948548
524,False,True,2017-08-22T23:33:34Z,2017-09-02T00:11:41Z,"## Changes

* Support Collation Expression.
* Support FTS Ranking Value Expression.
* Support database copy to allow to install a canned database.
* Allow to set logging level.

## Where to get it
* Download prebuilt binaries from [Couchbase.com](https://developer.couchbase.com/documentation/mobile/2.0/whatsnew.html?language=ios)
* Use CocoaPods or Carthage by following the instruction from [here](https://github.com/couchbase/couchbase-lite-ios)",7948548
525,False,True,2017-08-07T21:30:29Z,2017-09-02T00:10:32Z,"## Changes

* Support Select all properties.
* Support Quantified expression (Any, AnyAndEvery, and Every).
* Support Query's isNullOrMissing expression.
* Support more Query functions including array, mathematics, string, and type functions.
* Support type setters on Document, Dictionary, Array, and Query's parameters.
* Support Int64 getter on Document, Dictionary, Array.
* Added Connecting and Offline to the Replicator's ActivityLevel status.

## Where to get it
* Download prebuilt binaries from [Couchbase.com](https://developer.couchbase.com/documentation/mobile/2.0/whatsnew.html?language=ios)
* Use CocoaPods or Carthage by following the instruction from [here](https://github.com/couchbase/couchbase-lite-ios)",7948548
526,False,True,2017-07-24T18:51:27Z,2017-07-25T00:58:54Z,"## Changes

* Support query projection with alias names.
* CBLQuery returns CBLQueryResultSet<CBLQueryResult> instead of NSEnumerator<CBLQueryRow>. Same for Swift, Query return ResultSet<Result> instead of QueryIterator<QueryRow>. CBLQueryRow is still used by CBLPredicateQuery.
* CBLQueryResult supports get values both by indexes and by keys. Same for Result in Swift.
* CBLDocument.documentID -> CBLDocument.id
* Bug fixes : #1819, #1824, #1825, #1835.

## Where to get it
* Download prebuilt binaries from [Couchbase.com](https://developer.couchbase.com/documentation/mobile/2.0/whatsnew.html?language=ios)
* Use CocoaPods or Carthage by following the instruction from [here](https://github.com/couchbase/couchbase-lite-ios)",7948548
527,False,True,2017-07-10T20:50:31Z,2017-07-10T22:54:30Z,"## Changes

* Unify change event API for Database, Replicator, and LiveQuery by using block
* Replicator Filter : Channel and DocumentID
* Query
   - Aggregate Functions (AVG, COUNT, MIN, MAX, SUM)
   - OrderBy (Updated)
   - GroupBy / Having
   - Join
   - Projection (Without alias and Select *)
   - Parameters
   - Meta (Document ID and Sequence)

## Where to get it
* Download prebuilt binaries from [Couchbase.com](https://developer.couchbase.com/documentation/mobile/2.0/whatsnew.html?language=ios)
* Use CocoaPods or Carthage by following the instruction from [here](https://github.com/couchbase/couchbase-lite-ios)",7948548
528,False,True,2017-06-24T18:21:56Z,2017-07-10T20:55:27Z,"## Changes

* Support Replicator Authenticator including Basic and Session Authenticator
* Support Live Query

## Where to get it
* Download prebuilt binaries from [Couchbase.com](https://developer.couchbase.com/documentation/mobile/2.0/whatsnew.html?language=ios)
* Use CocoaPods or Carthage by following the instruction from [here](https://github.com/couchbase/couchbase-lite-ios)",7948548
529,False,True,2017-06-16T19:41:26Z,2017-06-16T22:42:31Z,"## Changes

* Fixed replicator not correctly encoding documents when it saves the documents

## Where to get it
* Download prebuilt binaries from [Couchbase.com](https://developer.couchbase.com/documentation/mobile/2.0/whatsnew.html?language=ios)
* Use CocoaPods or Carthage by following the instruction from [here](https://github.com/couchbase/couchbase-lite-ios)",7948548
530,False,True,2017-06-12T18:15:46Z,2017-06-14T22:18:34Z,"## Changes

* Added an ability to pin server certificate to a replicator
* Fixed custom functions not being registered in all opened SQLite connections
* Fixed unused blobs not being garbaged after compacting a database

## Where to get it
* Download prebuilt binaries from [Couchbase.com](https://developer.couchbase.com/documentation/mobile/2.0/whatsnew.html?language=ios)
* Use CocoaPods or Carthage by following the instruction from [here](https://github.com/couchbase/couchbase-lite-ios)",7948548
531,False,False,2017-05-31T18:15:27Z,2017-06-14T20:38:49Z,"This release is a hot fix release, which includes the following bug fix.

Bugs

* #1737 View indexing is very slow, due to mis-optimized SQLite query",7948548
532,False,True,2017-05-31T02:30:48Z,2017-05-31T03:15:35Z,"Objective-C and Swift:
* DatabaseConfiguration
* DocumentChangeNotification
* Array optimization
* New Replicator API
* Replicator - Online / Offline support
* LiveQuery
* Minor changes to Database and Document API including
  - Database.compact()
  - Database.count()
  - Database.contains(id)
  - Dictionary.remove(key)
  - Dictionary nil value support


[Binaries](https://developer.couchbase.com/documentation/mobile/2.0/whatsnew.html?language=ios) to download. For CocoaPods or Carthage, please follow the instruction from the [here](https://github.com/couchbase/couchbase-lite-ios).",7948548
533,False,True,2017-05-16T01:44:19Z,2017-05-16T02:14:11Z,"2.0 DB7 includes the following features:
* New unified API for Document, ReadOnlyDocument, Dictionary, ReadOnlyDictionary, Array, ReadOnlyArray.
* Replaced Subdocument with Dictionary.
* Removed DocumentChangeNotification from Document; The DocumentChangeNotification will be re-implemented at the Database level in the next release.
* Has new ConflictResolver API that take a single Conflict object as a parameter. The target, source, and commonAncestor property are ReadOnlyDocument object. This change has been made to the Objective-C framework only. The ConflictResolver will be implemented in the Swift framework in the next release.
* Bug fixes and performance improvement from LiteCore.
",7948548
534,False,False,2017-04-03T20:04:30Z,2017-04-19T19:59:41Z,"As part of this release we had [22 issues](https://github.com/couchbase/couchbase-lite-ios/issues?milestone=18&state=closed) closed.
Early-2017 update focusing mostly on bug-fixes.

__Performance Improvements__
- [__#1389__](https://github.com/couchbase/couchbase-lite-ios/issues/1389) Allow SQLite reads concurrently with writer
- [__#1497__](https://github.com/couchbase/couchbase-lite-ios/issues/1497) Update ForestDB to get improved compaction / space reuse

__Enhancements__
- [__#1538__](https://github.com/couchbase/couchbase-lite-ios/issues/1538) Make CBLDatabaseChange.isDeletion public?

__Bugs__
- [__#794__](https://github.com/couchbase/couchbase-lite-ios/issues/794) ""!_changeTracker"" assertion failure in -[CBLRestPuller startChangeTracker]
- [__#1207__](https://github.com/couchbase/couchbase-lite-ios/issues/1207) Push replication stops with error `400 bad_request`
- [__#1243__](https://github.com/couchbase/couchbase-lite-ios/issues/1243) Replication task missing source or target values
- [__#1285__](https://github.com/couchbase/couchbase-lite-ios/issues/1285) REST API does not allow GET on a db with ""/"" in its name
- [__#1343__](https://github.com/couchbase/couchbase-lite-ios/issues/1343) Need to close all other db handles before rekeying
- [__#1365__](https://github.com/couchbase/couchbase-lite-ios/issues/1365) Non-continuous push replication gets stuck in kCBLReplicationIdle status
- [__#1422__](https://github.com/couchbase/couchbase-lite-ios/issues/1422) ForestDB crashes frequently in the background because of protection data level
- [__#1429__](https://github.com/couchbase/couchbase-lite-ios/issues/1429) 1.3.1-6: crashed EXC_BAD_ACCESS KERN_INVALID_ADDRESS 0x0000000000000000
- [__#1442__](https://github.com/couchbase/couchbase-lite-ios/issues/1442) Collection class properties not propagating from CBLDocument to CBLModel after sync
- [__#1443__](https://github.com/couchbase/couchbase-lite-ios/issues/1443) Handle iOS file protection gracefully when in background
- [__#1461__](https://github.com/couchbase/couchbase-lite-ios/issues/1461) ForestDB: Assertion failure in -[MYBackgroundMonitor beginBackgroundTaskNamed:]() MYBackgroundMonitor.m:66
- [__#1467__](https://github.com/couchbase/couchbase-lite-ios/issues/1467) Memory leak caused by ref cycle between replicator and CBLRemoteSession
- [__#1556__](https://github.com/couchbase/couchbase-lite-ios/issues/1556) Assertion failed: (_changesTimeout > 0)
- [__#1557__](https://github.com/couchbase/couchbase-lite-ios/issues/1557) Exception caught in CBLDatabase transaction
- [__#1558__](https://github.com/couchbase/couchbase-lite-ios/issues/1558) Not all updates propagating while under load
- [__#1568__](https://github.com/couchbase/couchbase-lite-ios/issues/1568) Attachments failing to push after delete / create (ForestDB)
- [__#1579__](https://github.com/couchbase/couchbase-lite-ios/issues/1579) [NSLock lock]: deadlock when deleting database (ForestDB)
- [__#1580__](https://github.com/couchbase/couchbase-lite-ios/issues/1580) Wrong ""reason"" response for GET on purged documents
- [__#1621__](https://github.com/couchbase/couchbase-lite-ios/issues/1621) OIDC failing with Grocery Sync when creating new google project

## Where to get it
You can download this release from [Couchbase.com](http://www.couchbase.com/nosql-databases/downloads#Couchbase_Mobile)",7948548
535,False,True,2017-04-18T04:58:45Z,2017-04-19T20:04:08Z,"2.0 DB5 includes the following features:

* Support replicating attachments
* Support automatic 1.x database upgrade to 2.0
* Fixed Swift replication delegate not functional  (#1699)
",7948548
536,False,True,2017-04-04T07:19:38Z,2017-04-04T17:56:29Z,"2.0 DB4 includes the following features:

* Cross platform Query API for Swift.
* Replicator API for both Objective-C and Swift.
* Minor changes to Swift property accessors to inline with the other platforms.",7948548
537,False,True,2017-03-20T16:13:52Z,2017-03-20T16:23:02Z,"2.0 DB3 includes the following features:

* New Cross platform Query API for Objective-C framework",7948548
538,False,True,2017-03-04T01:47:08Z,2017-03-06T19:55:14Z,"2.0 DB2 includes the following features:

* Subdocument
* New CouchbaseLiteSwift framework for the Swift API",7948548
539,False,True,2017-02-09T14:26:36Z,2017-02-14T03:51:28Z,"2.0 DB1 includes the following features:
- CRUD operations
- Document with property type accessors
- Blob data type
- Database and Document Change Notification
- Query
  - NSPredicate based API
  - Grouping and Aggregation support
",7948548
540,False,False,2016-08-26T16:56:07Z,2016-09-13T15:34:38Z,"As part of this release we had [47 commits](https://github.com/couchbase/couchbase-lite-ios/compare/1.3...1.3.1) which resulted in [7 issues](https://github.com/couchbase/couchbase-lite-ios/issues?milestone=19&state=closed) being closed.
Incremental update for 1.3.

**Performance Improvements**
- [**#1379**](https://github.com/couchbase/couchbase-lite-ios/issues/1379) ForestDB update_seq on view query less than db's update_seq

**Enhancements**
- [**#1400**](https://github.com/couchbase/couchbase-lite-ios/issues/1400) Support for _oidc_refresh response without ID token

**Bugs**
- [**#1369**](https://github.com/couchbase/couchbase-lite-ios/issues/1369) PSWebSocket crash iOS 10
- [**#1379**](https://github.com/couchbase/couchbase-lite-ios/issues/1379) ForestDB update_seq on view query less than db's update_seq
- [**#1387**](https://github.com/couchbase/couchbase-lite-ios/issues/1387) TvOS Unit Test Build has a lot of warnings
- [**#1392**](https://github.com/couchbase/couchbase-lite-ios/issues/1392) When OIDC Refresh token failed, there is no replication change notification sent.
- [**#1403**](https://github.com/couchbase/couchbase-lite-ios/issues/1403) CBLSocketChangeTracker endless loop of JSON Parsing Errors
- [**#1406**](https://github.com/couchbase/couchbase-lite-ios/issues/1406) Encryption is a no-op with the system libsqlite3 on macOS 12 

## Where to get it

You can download this release from [Couchbase.com](http://www.couchbase.com/nosql-databases/downloads#Couchbase_Mobile)
",7948548
541,False,False,2016-08-03T23:21:58Z,2016-07-05T21:11:17Z,"As part of this release we had [59 issues](https://github.com/couchbase/couchbase-lite-ios/issues?milestone=15&state=closed) closed.
This is a feature release, with a focus on performance. Noteworthy changes:
- Support for [OpenID Connect](http://openid.net/connect/faq/) authentication, so you can log into Sync Gateway using a 3rd-party identity like a Google or Yahoo ID.
- [Timed expiration of documents](https://github.com/couchbase/couchbase-lite-ios/wiki/Document-Expiration) can help keep your database from growing indefinitely.
- Better performance with docs that have many revisions. Replication is faster, and older revisions are now automatically cleaned up in SQLite storage.
- Optimized redisplay of UITableViews when using CBLUITableController.
- Clearer error messages and better logging.
- And of course many smaller optimizations, and lots of bug fixes.

**Performance Improvements**
- [**#1114**](https://github.com/couchbase/couchbase-lite-ios/issues/1114) LiveQuery shouldn't re-run query if view index didn't change
- [**#1150**](https://github.com/couchbase/couchbase-lite-ios/issues/1150) Optimize & animate CBLUITableController by using the Levenshtein algorithm
- [**#1165**](https://github.com/couchbase/couchbase-lite-ios/issues/1165) Incrementally purge oldest revisions in SQLite databases
- [**#1242**](https://github.com/couchbase/couchbase-lite-ios/issues/1242) Fix inefficiencies replicating docs with many revisions
- [**#1340**](https://github.com/couchbase/couchbase-lite-ios/issues/1340) Optimized multipart download performance

**Enhancements**
- [**#394**](https://github.com/couchbase/couchbase-lite-ios/issues/394) Start using NSURLSession in the replicator
- [**#984**](https://github.com/couchbase/couchbase-lite-ios/issues/984) Comparing CBLQuery objects
- [**#1100**](https://github.com/couchbase/couchbase-lite-ios/issues/1100) External property on kCBLDatabaseChangeNotification when CBL is remote
- [**#1107**](https://github.com/couchbase/couchbase-lite-ios/issues/1107) Logging overhaul
- [**#1117**](https://github.com/couchbase/couchbase-lite-ios/issues/1117) Redact passwords/tokens in URLs in log messages
- [**#1118**](https://github.com/couchbase/couchbase-lite-ios/issues/1118) API: Public method for inserting existing revisions (putExistingRevisionWithProperties:...)
- [**#1148**](https://github.com/couchbase/couchbase-lite-ios/issues/1148) API: Make -[View updateIndex] public; add async version
- [**#1150**](https://github.com/couchbase/couchbase-lite-ios/issues/1150) Optimize & animate CBLUITableController by using the Levenshtein algorithm
- [**#1165**](https://github.com/couchbase/couchbase-lite-ios/issues/1165) Incrementally purge oldest revisions in SQLite databases
- [**#1181**](https://github.com/couchbase/couchbase-lite-ios/issues/1181) API: Document expiration time (TTL)
- [**#1201**](https://github.com/couchbase/couchbase-lite-ios/issues/1201) Replicator should immediately fail if URL path is invalid
- [**#1245**](https://github.com/couchbase/couchbase-lite-ios/issues/1245) Expose server error messages in NSErrors from public API
- [**#1266**](https://github.com/couchbase/couchbase-lite-ios/issues/1266) OpenID Connect authenticator
- [**#1271**](https://github.com/couchbase/couchbase-lite-ios/issues/1271) Disable App Transport Security on Mac OSX LiteServ
- [**#1291**](https://github.com/couchbase/couchbase-lite-ios/issues/1291) Allow configuring revs_limit in LiteServ
- [**#1334**](https://github.com/couchbase/couchbase-lite-ios/issues/1334) Scope cookie storage by database, not by replication

**Bugs**
- [**#641**](https://github.com/couchbase/couchbase-lite-ios/issues/641) Enumerate sequence in descending order in CBForest not working
- [**#966**](https://github.com/couchbase/couchbase-lite-ios/issues/966) CBLIS : Data loss
- [**#1005**](https://github.com/couchbase/couchbase-lite-ios/issues/1005) Replication fails without starting on wifi if network depends on a proxy
- [**#1015**](https://github.com/couchbase/couchbase-lite-ios/issues/1015) Crash when [CBLRemoteRequest connection:didFailWithError:]
- [**#1045**](https://github.com/couchbase/couchbase-lite-ios/issues/1045) POST _bulk_docs does not support HTTPBodyStream
- [**#1071**](https://github.com/couchbase/couchbase-lite-ios/issues/1071) [Testfest] Items not showing up in offline mode
- [**#1085**](https://github.com/couchbase/couchbase-lite-ios/issues/1085) CBLIS : NSIncrementalStore accessed by multiple context dispatch queues
- [**#1095**](https://github.com/couchbase/couchbase-lite-ios/issues/1095) Obsolete rows left in view index when documentType is used (1.1.1)
- [**#1106**](https://github.com/couchbase/couchbase-lite-ios/issues/1106) CBLListener readOnly property prevents pulls from updating the database
- [**#1120**](https://github.com/couchbase/couchbase-lite-ios/issues/1120) Warn if map function calls emit(nil, ...)
- [**#1124**](https://github.com/couchbase/couchbase-lite-ios/issues/1124) Multipart Uploader cannot upload the attachment when using basic auth
- [**#1128**](https://github.com/couchbase/couchbase-lite-ios/issues/1128) Crash pushing docs with non-downloaded attachments
- [**#1129**](https://github.com/couchbase/couchbase-lite-ios/issues/1129) CBLIS: NSSet was mutated while being enumerated.
- [**#1131**](https://github.com/couchbase/couchbase-lite-ios/issues/1131) CBLVersion() incorrectly returns ""(unofficial)"" in official releases
- [**#1132**](https://github.com/couchbase/couchbase-lite-ios/issues/1132) CBLReplicator.isDocumentPending is inaccurate when replicator is offline
- [**#1138**](https://github.com/couchbase/couchbase-lite-ios/issues/1138) Continuous puller with WebSocket not responding with 401 error when changing password
- [**#1139**](https://github.com/couchbase/couchbase-lite-ios/issues/1139) ChangeTracker POST request are incompatible with CouchDB
- [**#1143**](https://github.com/couchbase/couchbase-lite-ios/issues/1143) Swift API glitches
- [**#1152**](https://github.com/couchbase/couchbase-lite-ios/issues/1152) CBLRestReplicator does not properly end bgTask when app is foregrounded
- [**#1163**](https://github.com/couchbase/couchbase-lite-ios/issues/1163) Fixed macOS 10.10 dependency & updated deployment version to 10.9
- [**#1180**](https://github.com/couchbase/couchbase-lite-ios/issues/1180) Doc can be saved with missing attachment file, leading to errors
- [**#1188**](https://github.com/couchbase/couchbase-lite-ios/issues/1188) CBForest bad memory access while purging doc
- [**#1191**](https://github.com/couchbase/couchbase-lite-ios/issues/1191) Liteserv crashes with Forestdb option when creating local docs after delete operation
- [**#1192**](https://github.com/couchbase/couchbase-lite-ios/issues/1192) Manual compaction returns error if auto-compact is already running
- [**#1200**](https://github.com/couchbase/couchbase-lite-ios/issues/1200) Replication rejects attachments generated by PouchDB with revpos:0
- [**#1216**](https://github.com/couchbase/couchbase-lite-ios/issues/1216) REST API: POST /_replicate can start/stop once, but not restart?
- [**#1228**](https://github.com/couchbase/couchbase-lite-ios/issues/1228) One-shot push from empty db never stops
- [**#1233**](https://github.com/couchbase/couchbase-lite-ios/issues/1233) Failure to encrypt SQLite database when using WAL journaling
- [**#1260**](https://github.com/couchbase/couchbase-lite-ios/issues/1260) Inconsistent response when no conflicts are present and ?conflicts=true
- [**#1263**](https://github.com/couchbase/couchbase-lite-ios/issues/1263) Incorrect ""error"" property in REST response for GET of deleted doc
- [**#1274**](https://github.com/couchbase/couchbase-lite-ios/issues/1274) PendingDocumentIDs is incorrect
- [**#1279**](https://github.com/couchbase/couchbase-lite-ios/issues/1279) Don't stop replicator if one doc gets an error
- [**#1292**](https://github.com/couchbase/couchbase-lite-ios/issues/1292) _replicate between 2 dbs on same LiteServ fails
- [**#1323**](https://github.com/couchbase/couchbase-lite-ios/issues/1323) Cannot push encrypted attachments when testing with ToDoLite
- [**#1325**](https://github.com/couchbase/couchbase-lite-ios/issues/1325) LiteServ crash when delete dbs asyncronously
- [**#1327**](https://github.com/couchbase/couchbase-lite-ios/issues/1327) Archive build is missing symbols in iOS frameworks
- [**#1335**](https://github.com/couchbase/couchbase-lite-ios/issues/1335) Database upgrades from 1.1 not copying ""content_type"" of attachments
- [**#1348**](https://github.com/couchbase/couchbase-lite-ios/issues/1348) OIDC tokens in Keychain should be per-database
- [**#1362**](https://github.com/couchbase/couchbase-lite-ios/issues/1362) App crashing on iOS 8.3 device
- [**#1370**](https://github.com/couchbase/couchbase-lite-ios/issues/1370) TodoLite showing wrong list when deleting tasks

## Where to get it

You can download this release from [Couchbase.com](http://www.couchbase.com/nosql-databases/downloads#Couchbase_Mobile)
",7948548
542,False,False,2016-05-17T15:26:33Z,2016-07-03T18:15:01Z,"As part of this release we had [196 commits](https://github.com/couchbase/couchbase-lite-ios/compare/1.2...1.2.1) which resulted in [10 issues](https://github.com/couchbase/couchbase-lite-ios/issues?milestone=16&state=closed) being closed.
Couchbase Lite for iOS 1.2.1 is a patch release.

**Performance Improvements**
- [**#1017**](https://github.com/couchbase/couchbase-lite-ios/issues/1017) Possible p2p memory leak
- [**#1127**](https://github.com/couchbase/couchbase-lite-ios/issues/1127) Replicator isn't including Authorization: header in requests, so it gets unnecessary 401s

**Enhancements**
- [**#1078**](https://github.com/couchbase/couchbase-lite-ios/issues/1078) Check for empty database before using active_only

**Bugs**
- [**#1006**](https://github.com/couchbase/couchbase-lite-ios/issues/1006) MYUtilites function beginBackgroundTaskNamed: crash when app goes to background twice while replicating
- [**#1017**](https://github.com/couchbase/couchbase-lite-ios/issues/1017) Possible p2p memory leak
- [**#1048**](https://github.com/couchbase/couchbase-lite-ios/issues/1048) Couchbase lite iOS binary has enable_bitcode' flag disabled
- [**#1101**](https://github.com/couchbase/couchbase-lite-ios/issues/1101) Couchbase Lite thread stuck on GZIP operation
- [**#1127**](https://github.com/couchbase/couchbase-lite-ios/issues/1127) Replicator isn't including Authorization: header in requests, so it gets unnecessary 401s
- [**#1140**](https://github.com/couchbase/couchbase-lite-ios/issues/1140) Continuous WebSocket puller crashes when receiving changes after changing user's password
- [**#1153**](https://github.com/couchbase/couchbase-lite-ios/issues/1153) Carthage build not working as suggested
- [**#1168**](https://github.com/couchbase/couchbase-lite-ios/issues/1168) Listener basic auth not being evaluated when syncing over SSL.

## Where to get it

You can download this release from [Couchbase.com](http://www.couchbase.com/nosql-databases/downloads#Couchbase_Mobile)
",7948548
543,False,False,2016-02-08T21:01:06Z,2016-07-03T18:16:21Z,"As part of this release we had [537 commits](https://github.com/couchbase/couchbase-lite-ios/compare/1.1.1...1.2) which resulted in [92 issues](https://github.com/couchbase/couchbase-lite-ios/issues?milestone=13&state=closed) being closed.
This release features a number of enhancements and bug fixes, including:
- **Improved ForestDB Storage Engine (Developer Preview)** - Our developer preview for the ForestDB storage engine saw a number of major code improvements under the hood.
- **Improved database encryption** - AES-256 on-disk encryption with your choice of provided storage library: SQLCipher or ForestDB
- **CBL Incremental Store improvements** - Your CoreData apps benefit from significant performance improvements and bug fixes.

The list goes on, including better P2P support, replication speed-ups, AppleTV compatibility, and more!

**Performance Improvements**
- [**#726**](https://github.com/couchbase/couchbase-lite-ios/issues/726) CBLListener.readOnly=YES prevents clients from storing checkpoints
- [**#733**](https://github.com/couchbase/couchbase-lite-ios/issues/733) Peer replication checkpoints are lost if its hostname or port changes
- [**#858**](https://github.com/couchbase/couchbase-lite-ios/issues/858) Attachment downloads should be resumeable
- [**#860**](https://github.com/couchbase/couchbase-lite-ios/issues/860) Ignore redundant attachment downloads
- [**#922**](https://github.com/couchbase/couchbase-lite-ios/issues/922) No auto-compact (db.forest getting very large)
- [**#926**](https://github.com/couchbase/couchbase-lite-ios/issues/926) Enable HTTP compression for _changes feed requests (non-continuous)
- [**#927**](https://github.com/couchbase/couchbase-lite-ios/issues/927) Compression for _changes feed requests (continuous)
- [**#938**](https://github.com/couchbase/couchbase-lite-ios/issues/938) CBLIS - Very poor performances from 5000 documents locally
- [**#960**](https://github.com/couchbase/couchbase-lite-ios/issues/960) CBLIS - Improve relationship cache invalidation
- [**#972**](https://github.com/couchbase/couchbase-lite-ios/issues/972) ForestDB-based view indexes don't auto-compact
- [**#991**](https://github.com/couchbase/couchbase-lite-ios/issues/991) Verify that ForestDB store's allDocs query is actually faster than SQLite store's allDocs
- [**#1046**](https://github.com/couchbase/couchbase-lite-ios/issues/1046) CBLLiveQuery notification throttling too aggressive by default

**Enhancements**
- [**#73**](https://github.com/couchbase/couchbase-lite-ios/issues/73) Disallow leading ""_"" in attachment name (for compatibility)
- [**#79**](https://github.com/couchbase/couchbase-lite-ios/issues/79) Deferred attachment download
- [**#82**](https://github.com/couchbase/couchbase-lite-ios/issues/82) Add SSL client cert support to replicator
- [**#485**](https://github.com/couchbase/couchbase-lite-ios/issues/485) ForestDB: Reimplement geo-queries
- [**#652**](https://github.com/couchbase/couchbase-lite-ios/issues/652) Add CBLJSViewCompiler to the framework
- [**#702**](https://github.com/couchbase/couchbase-lite-ios/issues/702) Integrate new replicator
- [**#729**](https://github.com/couchbase/couchbase-lite-ios/issues/729) Allow validations to distinguish local from remote changes
- [**#806**](https://github.com/couchbase/couchbase-lite-ios/issues/806) Add ""_conflicts"" property to doc in map function when doc is in conflict
- [**#808**](https://github.com/couchbase/couchbase-lite-ios/issues/808) Expose totalRows from CBLView to developers
- [**#826**](https://github.com/couchbase/couchbase-lite-ios/issues/826) ForestDB: Implement database encryption
- [**#836**](https://github.com/couchbase/couchbase-lite-ios/issues/836) Allow adding/removing db encryption, or changing the key
- [**#858**](https://github.com/couchbase/couchbase-lite-ios/issues/858) Attachment downloads should be resumeable
- [**#859**](https://github.com/couchbase/couchbase-lite-ios/issues/859) Attachment downloads should be more fault tolerant
- [**#870**](https://github.com/couchbase/couchbase-lite-ios/issues/870) Migrating SQLite db to ForestDB
- [**#879**](https://github.com/couchbase/couchbase-lite-ios/issues/879) Need a purge method from CoreData with CBLIncrementalStore
- [**#918**](https://github.com/couchbase/couchbase-lite-ios/issues/918) Build for tvOS (AppleTV)
- [**#926**](https://github.com/couchbase/couchbase-lite-ios/issues/926) Enable HTTP compression for _changes feed requests (non-continuous)
- [**#927**](https://github.com/couchbase/couchbase-lite-ios/issues/927) Compression for _changes feed requests (continuous)
- [**#928**](https://github.com/couchbase/couchbase-lite-ios/issues/928) Add Carthage support
- [**#950**](https://github.com/couchbase/couchbase-lite-ios/issues/950) Update CouchbaseLiteViewer
- [**#960**](https://github.com/couchbase/couchbase-lite-ios/issues/960) CBLIS - Improve relationship cache invalidation
- [**#970**](https://github.com/couchbase/couchbase-lite-ios/issues/970) Add official openDatabase API for encryption/storage options
- [**#976**](https://github.com/couchbase/couchbase-lite-ios/issues/976) Package a SQLCipher binary with our storage engine
- [**#1029**](https://github.com/couchbase/couchbase-lite-ios/issues/1029) Set custom user agent on HTTP Requests
- [**#1052**](https://github.com/couchbase/couchbase-lite-ios/issues/1052) Optimize first-time sync

**Bugs**
- [**#648**](https://github.com/couchbase/couchbase-lite-ios/issues/648) CBLModel has trouble with dynamic properties in Swift classes
- [**#649**](https://github.com/couchbase/couchbase-lite-ios/issues/649) Attachment crash (CBL_BlobStoreWriter's initializer failed?)
- [**#671**](https://github.com/couchbase/couchbase-lite-ios/issues/671) ""_removed"" properties received from SG cause errors pushing to another server
- [**#681**](https://github.com/couchbase/couchbase-lite-ios/issues/681) Migrate v1.1.0 database file to cblite2 file structure
- [**#683**](https://github.com/couchbase/couchbase-lite-ios/issues/683) All-docs queries ignore prefixMatchLevel property
- [**#686**](https://github.com/couchbase/couchbase-lite-ios/issues/686) The bg replication server's database not getting closed
- [**#695**](https://github.com/couchbase/couchbase-lite-ios/issues/695) Revise replaceDatabase signature and backward db support
- [**#698**](https://github.com/couchbase/couchbase-lite-ios/issues/698) CBLReplicator could still be in the running status after closing the database
- [**#728**](https://github.com/couchbase/couchbase-lite-ios/issues/728) Checkpoint ID shared by distinct pull replications
- [**#733**](https://github.com/couchbase/couchbase-lite-ios/issues/733) Peer replication checkpoints are lost if its hostname or port changes
- [**#800**](https://github.com/couchbase/couchbase-lite-ios/issues/800) ""Unexpected CBForest exception iterating query""
- [**#805**](https://github.com/couchbase/couchbase-lite-ios/issues/805) Crash after receiving 401 error from CBLReplication (ASSERTION FAILED: storage)
- [**#807**](https://github.com/couchbase/couchbase-lite-ios/issues/807) CBLReplication.pendingDocIDs doesn't update while replicator not running
- [**#838**](https://github.com/couchbase/couchbase-lite-ios/issues/838) Implement readOnly mode in CBLSyncListener
- [**#841**](https://github.com/couchbase/couchbase-lite-ios/issues/841) Assertion failure when using invalid username/password with replication
- [**#843**](https://github.com/couchbase/couchbase-lite-ios/issues/843) CBLDatabase not getting attachments from ancestry when processing attachments
- [**#857**](https://github.com/couchbase/couchbase-lite-ios/issues/857) Cannot get result using CBLQueryBuilder with NSSortDescriptor
- [**#877**](https://github.com/couchbase/couchbase-lite-ios/issues/877) Listener throws warnings even though there is no error
- [**#889**](https://github.com/couchbase/couchbase-lite-ios/issues/889) Query builder can't index on descending sort descriptors
- [**#892**](https://github.com/couchbase/couchbase-lite-ios/issues/892) Query.sortDescriptors doesn't gives expected result when '-limit' is applied.
- [**#893**](https://github.com/couchbase/couchbase-lite-ios/issues/893) Query.postFilter with limit gives limit+1 results.
- [**#895**](https://github.com/couchbase/couchbase-lite-ios/issues/895) Pusher doesn't send non-winning deletion replications (ForestDB)
- [**#899**](https://github.com/couchbase/couchbase-lite-ios/issues/899) WARNING: Unexpected CBForest exception iterating query
- [**#900**](https://github.com/couchbase/couchbase-lite-ios/issues/900) 401 status from server not being propagated to CBLReplication.lastError
- [**#901**](https://github.com/couchbase/couchbase-lite-ios/issues/901) -[ListenerHTTP_Tests test03_ReadOnly] fails in iOS 9 simulator
- [**#903**](https://github.com/couchbase/couchbase-lite-ios/issues/903) Problem with relationship one-to-many when documents are created simultaneously on multiple devices
- [**#908**](https://github.com/couchbase/couchbase-lite-ios/issues/908) ForestDB queries wrong key range for descending=true and prefixMatch
- [**#909**](https://github.com/couchbase/couchbase-lite-ios/issues/909) New model objects created with +modelForDocument should set isNew flag to true
- [**#917**](https://github.com/couchbase/couchbase-lite-ios/issues/917) CBL returns NO with no error when attempting to encrypt an SQLite database
- [**#921**](https://github.com/couchbase/couchbase-lite-ios/issues/921) CBLQueryBuilder: Sorted property disappears from _valueTemplate (select)
- [**#922**](https://github.com/couchbase/couchbase-lite-ios/issues/922) No auto-compact (db.forest getting very large)
- [**#925**](https://github.com/couchbase/couchbase-lite-ios/issues/925) Crash in processing CBLIS changes when document has no type
- [**#938**](https://github.com/couchbase/couchbase-lite-ios/issues/938) CBLIS - Very poor performances from 5000 documents locally
- [**#942**](https://github.com/couchbase/couchbase-lite-ios/issues/942) CBLIS - Crash with relationships
- [**#958**](https://github.com/couchbase/couchbase-lite-ios/issues/958) CBLIS doesn't handle accesses from multiple dispatch queues
- [**#961**](https://github.com/couchbase/couchbase-lite-ios/issues/961) 400 Invalid Attachment Warning / Error in Pull Replication
- [**#963**](https://github.com/couchbase/couchbase-lite-ios/issues/963) Couchbase lite eventually sends invalid heartbeat value for longpoll feed
- [**#964**](https://github.com/couchbase/couchbase-lite-ios/issues/964) WebSockets cannot be used with channel filtering for large amounts of channels
- [**#965**](https://github.com/couchbase/couchbase-lite-ios/issues/965) CBLModel -propertiesToSave does not nil check for _document == nil
- [**#973**](https://github.com/couchbase/couchbase-lite-ios/issues/973) LiteServ logs disconnect warnings
- [**#974**](https://github.com/couchbase/couchbase-lite-ios/issues/974) Liteserv throws exception when invoked with relative paths
- [**#979**](https://github.com/couchbase/couchbase-lite-ios/issues/979) AttachmentsPath of CBLManager replaceDatabaseNamed:... should be nullable
- [**#982**](https://github.com/couchbase/couchbase-lite-ios/issues/982) CBL can't handle  _removed (some of the time) and tags it as illegal and kills the replicator
- [**#983**](https://github.com/couchbase/couchbase-lite-ios/issues/983) Full-text indexing fails for non-English-language users
- [**#986**](https://github.com/couchbase/couchbase-lite-ios/issues/986) ""Invalid revpos"" warnings and attachment errors during pull replication
- [**#987**](https://github.com/couchbase/couchbase-lite-ios/issues/987) ForestDB crashes with a fullTextQuery
- [**#999**](https://github.com/couchbase/couchbase-lite-ios/issues/999) Unsafe threading closing ForestDB view index in low-memory situation
- [**#1001**](https://github.com/couchbase/couchbase-lite-ios/issues/1001) Attachment errors should not stop the replicator
- [**#1025**](https://github.com/couchbase/couchbase-lite-ios/issues/1025) CBLDatabaseUpgrade selects wrong noAtts column
- [**#1039**](https://github.com/couchbase/couchbase-lite-ios/issues/1039) The couchbase-lite-ios package doesn't contain tvOS binary
- [**#1040**](https://github.com/couchbase/couchbase-lite-ios/issues/1040) CBL tvOS scheme absent for building tvOS package. 
- [**#1041**](https://github.com/couchbase/couchbase-lite-ios/issues/1041) DatabaseUpgrade not importing local docs
- [**#1046**](https://github.com/couchbase/couchbase-lite-ios/issues/1046) CBLLiveQuery notification throttling too aggressive by default
- [**#1047**](https://github.com/couchbase/couchbase-lite-ios/issues/1047) Adding Universal build of the 'releases/1.2' to Kitchen-Sync causes missing symbol during linking
- [**#1048**](https://github.com/couchbase/couchbase-lite-ios/issues/1048) Couchbase lite iOS binary has enable_bitcode' flag disabled
- [**#1059**](https://github.com/couchbase/couchbase-lite-ios/issues/1059) Workaround go multipart parser issue -- use different boundary?
- [**#1061**](https://github.com/couchbase/couchbase-lite-ios/issues/1061) Bug on to-many relationships with Core Data context
- [**#1062**](https://github.com/couchbase/couchbase-lite-ios/issues/1062) Liteserv binary doesn't use the ForestDB when specified via 'defaults' mac command
- [**#1063**](https://github.com/couchbase/couchbase-lite-ios/issues/1063) Debug LiteServ build fails: missing symbol _CBLRegisterJSViewCompiler
- [**#1079**](https://github.com/couchbase/couchbase-lite-ios/issues/1079) -[CBL_SQLiteStorage lowMemoryWarning]: unrecognized selector sent to instance
- [**#1081**](https://github.com/couchbase/couchbase-lite-ios/issues/1081) [tvOS] Cannot create databases in default CBLManager
- [**#1082**](https://github.com/couchbase/couchbase-lite-ios/issues/1082) Delete docs could cause missing undeleted docs in ForestDB view index 
- [**#1083**](https://github.com/couchbase/couchbase-lite-ios/issues/1083) App needs trigger(going back to home screen and realunch) to sync/pull docs

## Where to get it

You can download this release from [Couchbase.com](http://www.couchbase.com/nosql-databases/downloads#Couchbase_Mobile)
",7948548
544,False,False,2015-09-14T23:33:59Z,2015-11-10T21:29:46Z,"As part of this release we had [268 commits](https://github.com/couchbase/couchbase-lite-ios/compare/1.1.0...1.1.1) which resulted in [35 issues](https://github.com/couchbase/couchbase-lite-ios/issues?milestone=14&state=closed) being closed.
Small bug-fix update to 1.1

**Performance**
- [**#793**](https://github.com/couchbase/couchbase-lite-ios/issues/793) CBLIS - Slow down UI thread when saving CoreData context

**Enhancements**
- [**#834**](https://github.com/couchbase/couchbase-lite-ios/issues/834) Use NS_UNAVAILABLE attribute to mark -init as unavailable in API classes
- [**#833**](https://github.com/couchbase/couchbase-lite-ios/issues/833) Removed long-deprecated facebook/persona auth API in CBLReplication
- [**#832**](https://github.com/couchbase/couchbase-lite-ios/issues/832) Use parameterized (generic-ized) NSArray/NSDictionary in public APIs 
- [**#803**](https://github.com/couchbase/couchbase-lite-ios/issues/803) 400 bad_request for view query with stale is false parameter

**Bugs**
- [**#829**](https://github.com/couchbase/couchbase-lite-ios/issues/829) Fix for push replicator loading all doc bodies, with ForestDB
- [**#828**](https://github.com/couchbase/couchbase-lite-ios/issues/828) Fixed unintentional 100ms delay sending multipart HTTP bodies
- [**#827**](https://github.com/couchbase/couchbase-lite-ios/issues/827) Send mismatched MIME multipart boundary strings on HTTP retry
- [**#817**](https://github.com/couchbase/couchbase-lite-ios/issues/817) Replication Push (to CouchDB) is failing when attachments are involved
- [**#815**](https://github.com/couchbase/couchbase-lite-ios/issues/815) ChangeTracker SSL settings incompatible with iOS 9 Transport Security
- [**#809**](https://github.com/couchbase/couchbase-lite-ios/issues/809) CBLManager.storageType is not in public header, despite being documented in wiki
- [**#802**](https://github.com/couchbase/couchbase-lite-ios/issues/802) Failed to write revision with attachment
- [**#788**](https://github.com/couchbase/couchbase-lite-ios/issues/788) CBL_BlobStore temp directories don't get cleaned up, can overflow
- [**#786**](https://github.com/couchbase/couchbase-lite-ios/issues/786) Warning replicating attachments from CouchDB
- [**#782**](https://github.com/couchbase/couchbase-lite-ios/issues/782) CBLIS - Cannot nullify nullable attributes and relationships
- [**#781**](https://github.com/couchbase/couchbase-lite-ios/issues/781) ForestDB: Crash when query with non existent keys after reindex
- [**#772**](https://github.com/couchbase/couchbase-lite-ios/issues/772) SSL error -9806 from P2P replication
- [**#765**](https://github.com/couchbase/couchbase-lite-ios/issues/765) dateWithJSONObject: method cannot parse ISO 8601 dates with a time zone designator ""+hhmm"" or ""-hhmm""
- [**#763**](https://github.com/couchbase/couchbase-lite-ios/issues/763) CBLIS - Cannot nullify NSData property
- [**#759**](https://github.com/couchbase/couchbase-lite-ios/issues/759) Reference to -queryAllDocuments in CBLQuery.h documentation
- [**#758**](https://github.com/couchbase/couchbase-lite-ios/issues/758) CBL 1.1 Mac: Stopping continuous replication consistently triggers timeout warning
- [**#757**](https://github.com/couchbase/couchbase-lite-ios/issues/757) Problems with conflictHandler in CBLIncementalStore
- [**#756**](https://github.com/couchbase/couchbase-lite-ios/issues/756) CBLIS query with boolean value returns 0 result
- [**#755**](https://github.com/couchbase/couchbase-lite-ios/issues/755) CBL 1.1 Mac: CBLQueryRow.document is null
- [**#752**](https://github.com/couchbase/couchbase-lite-ios/issues/752) CBLMultipartUploader's connection:needNewBodyStream returns closed stream
- [**#749**](https://github.com/couchbase/couchbase-lite-ios/issues/749) CBLIncrementalStore - Fail when sorting with key from relationship doc
- [**#727**](https://github.com/couchbase/couchbase-lite-ios/issues/727) ForestDBViewStorage doesn't filter _design docs out when indexing
- [**#725**](https://github.com/couchbase/couchbase-lite-ios/issues/725) Listener doesn't expose actual Bonjour service name that's published
- [**#724**](https://github.com/couchbase/couchbase-lite-ios/issues/724) Need a way to disable cert hostname check (only for 'anonymous' P2P certs)
- [**#717**](https://github.com/couchbase/couchbase-lite-ios/issues/717) 'Assertion failed: Sequence of {4A8D140 #633-......} unknown'
- [**#714**](https://github.com/couchbase/couchbase-lite-ios/issues/714) Error re-adding a document after it's been purged
- [**#703**](https://github.com/couchbase/couchbase-lite-ios/issues/703) CBLModel not working with namespaced Swift classes
- [**#664**](https://github.com/couchbase/couchbase-lite-ios/issues/664) Temporary folder not getting removed?
- [**#629**](https://github.com/couchbase/couchbase-lite-ios/issues/629) Replication loop with conflicts (status 594).
- [**#235**](https://github.com/couchbase/couchbase-lite-ios/issues/235) Error message passed to `rejectWithMessage:` in validation block does not propagate to out-error

## Known Issues
- [**#877**](https://github.com/couchbase/couchbase-lite-ios/issues/877) Listener throws warnings even though there is no error.

## Where to get it

You can download this release from [Couchbase.com](http://www.couchbase.com/nosql-databases/downloads#Couchbase_Mobile)
",7948548
545,False,False,2015-06-11T23:00:48Z,2015-06-18T22:36:56Z,"Couchbase Lite iOS v1.1.0 is a major release since v1.0.0 released about a year ago. It has several new features and enhancements including:
1. Support Couchbase's super-fast new ForestDB storage engine. The SQLite engine still remains the default engine. Follow instructions [here](https://github.com/couchbase/couchbase-lite-ios/wiki/ForestDB) to enable the ForestDB engine.
2. Support database encryption. See [here](https://github.com/couchbase/couchbase-lite-ios/wiki/Database-Encryption) for more detail.
3. Support a new [CBLQueryBuilder](https://github.com/couchbase/couchbase-lite-ios/wiki/Query-Builder) that allows developers to use NSPredicates to query the database instead of using map functions.
4. Has performance improvement in replication and view indexing. View indexes are now stored more efficiently, which speeds up indexing by roughly 10%.
5. Contain some API changes, which are described [here](https://github.com/couchbase/couchbase-lite-ios/wiki/v1.1-API-Changes) in more detail.
6. Contain several bug fixes and enhancements.

IMPORTANT: CBL 1.1.0 has a new optimized database schema which is not backwards compatible, so after running with CBL 1.1, your application’s local databases are no longer readable by earlier versions. (Of course this only affects local database storage, not replication.)

As part of this release we had [482 commits](https://github.com/couchbase/couchbase-lite-ios/compare/1.0.4...1.1.0) which resulted in [40 issues](https://github.com/couchbase/couchbase-lite-ios/issues?milestone=11&state=closed) being closed.

**Performance**
- [**#684**](https://github.com/couchbase/couchbase-lite-ios/issues/684) iOS 8.2+ seems slower than 8.1 or lesser
- [**#677**](https://github.com/couchbase/couchbase-lite-ios/issues/677) Test performance improvement replicating docs with large revision trees
- [**#390**](https://github.com/couchbase/couchbase-lite-ios/issues/390) Sync problem with Cloudant databases - puller or change tracker?

**Enhancements**
- [**#606**](https://github.com/couchbase/couchbase-lite-ios/issues/606) Inverse relation support for CBLModel
- [**#605**](https://github.com/couchbase/couchbase-lite-ios/issues/605) CBLIncrementalStore - Support query via abstract entity
- [**#571**](https://github.com/couchbase/couchbase-lite-ios/issues/571) Use CBLQueryBuilder in CBLIncrementalStore
- [**#569**](https://github.com/couchbase/couchbase-lite-ios/issues/569) Support to-many without inverse relationship in CBLIncrementalStore
- [**#526**](https://github.com/couchbase/couchbase-lite-ios/issues/526) Implement isStoredInExternalRecord support in CBLIncrementalStore
- [**#514**](https://github.com/couchbase/couchbase-lite-ios/issues/514) Support feed=eventsource in _changes feed
- [**#439**](https://github.com/couchbase/couchbase-lite-ios/issues/439) Support for encoding / decoding NSURL instances as properties of a CBLModel
- [**#358**](https://github.com/couchbase/couchbase-lite-ios/issues/358) userProperties method on CBLModel.
- [**#316**](https://github.com/couchbase/couchbase-lite-ios/issues/316) Can CBLModel define the ""type"" @property instead of making a subclass have to implement it?

**Bugs**
- [**#723**](https://github.com/couchbase/couchbase-lite-ios/issues/723) CBL 1.1 (iOS) Docs not syncing when I think they should
- [**#718**](https://github.com/couchbase/couchbase-lite-ios/issues/718) Crash when create a document with attachment in one single revision
- [**#712**](https://github.com/couchbase/couchbase-lite-ios/issues/712) CBLView updateIndex isn't public, but is in the API spec
- [**#711**](https://github.com/couchbase/couchbase-lite-ios/issues/711) Potential database upgrade error
- [**#709**](https://github.com/couchbase/couchbase-lite-ios/issues/709) CBLQuery fullTextRanking and fullTextSnippet properties were removed
- [**#705**](https://github.com/couchbase/couchbase-lite-ios/issues/705) ForestDB native lib missing dev preview package
- [**#701**](https://github.com/couchbase/couchbase-lite-ios/issues/701) Couchbase lite iOS memory consumption indexing views
- [**#700**](https://github.com/couchbase/couchbase-lite-ios/issues/700) ForestDB fails in 32-bit OS due to bug in get_memory_size fn
- [**#696**](https://github.com/couchbase/couchbase-lite-ios/issues/696) Start-restart replication problem in CBL 1.1.0
- [**#691**](https://github.com/couchbase/couchbase-lite-ios/issues/691) Thread-safety issue in CBLReplication cookie methods
- [**#687**](https://github.com/couchbase/couchbase-lite-ios/issues/687) Cannot get the database schema version while replace/upgrade a database
- [**#684**](https://github.com/couchbase/couchbase-lite-ios/issues/684) iOS 8.2+ seems slower than 8.1 or lesser
- [**#672**](https://github.com/couchbase/couchbase-lite-ios/issues/672) Pulled docs with a stub attachment failed to insert
- [**#665**](https://github.com/couchbase/couchbase-lite-ios/issues/665) Multipart streams cannot be reopened when retrying to send the request
- [**#662**](https://github.com/couchbase/couchbase-lite-ios/issues/662) ForestDB: fullTextSearch emmits wrong values
- [**#608**](https://github.com/couchbase/couchbase-lite-ios/issues/608) Pull replication missing documents from SG channel
- [**#592**](https://github.com/couchbase/couchbase-lite-ios/issues/592) CBL 1.0.4 - Rare/minor dealloc issue
- [**#578**](https://github.com/couchbase/couchbase-lite-ios/issues/578) View not indexing older revisions
- [**#576**](https://github.com/couchbase/couchbase-lite-ios/issues/576) New object notification not generated when using CBLIncrementalStore
- [**#574**](https://github.com/couchbase/couchbase-lite-ios/issues/574) Query with limit and postFilter may not return enough rows
- [**#566**](https://github.com/couchbase/couchbase-lite-ios/issues/566) save and lockForWriting issues
- [**#543**](https://github.com/couchbase/couchbase-lite-ios/issues/543) Replicators should have independent cookie storage
- [**#495**](https://github.com/couchbase/couchbase-lite-ios/issues/495) forestdb::RevTree:compact() causing crash
- [**#479**](https://github.com/couchbase/couchbase-lite-ios/issues/479) ForestDB: Emitting dictionary key causes error
- [**#390**](https://github.com/couchbase/couchbase-lite-ios/issues/390) Sync problem with Cloudant databases - puller or change tracker?

## Where to get it

You can download this release from [Couchbase.com](http://www.couchbase.com/nosql-databases/downloads#Couchbase_Mobile)

### Support Statement

Version 1.0 was released in May, 2014. With this release of version 1.1, the support window for 1.0 expires in December 2015.

| Release | Release Date | End of Life Date |
| --- | --- | --- |
| 1.0 | May 2014 | December 2015 |
| 1.1 | June 2015 |  |
",7948548
546,False,True,2015-05-01T16:21:48Z,2015-05-06T17:06:21Z,"Preview of our upcoming 1.1 release, which includes a number of performance improvements and bug fixes, as well as some new iOS specific features/enhancements, including:
- Pluggable Storage Engines:
  - New support for encrypting the CBLite databases using the SQLite Storage Engine.
  - [Experimental] ForestDB Storage Engine.
- Newly overhauled CBLIncrementalStore, an alternative to CoreData.
- [Experimental] NSPredicate-based queries.
- New OS X release binaries.
",7948548
547,False,False,2014-12-16T17:57:12Z,2015-04-20T21:45:57Z,"1.0.4 release. Downloads available at Couchbase.com.
",7948548
548,False,False,2014-10-23T21:45:56Z,2015-04-20T21:45:07Z,"1.0.3.1 release. Downloads available at Couchbase.com.
",7948548
549,False,False,2014-10-18T00:19:30Z,2015-04-20T21:43:09Z,"1.0.3 release. Downloads available at Couchbase.com.
",7948548
550,False,False,2014-09-17T20:56:31Z,2014-09-17T20:58:21Z,"1.0.2 release. Downloads available [at Couchbase.com](http://www.couchbase.com/download#cb-mobile).
",7948548
551,False,False,2014-07-03T18:39:26Z,2014-08-25T19:32:22Z,"1.0.1 release. Downloads available [at Couchbase.com](http://www.couchbase.com/download#cb-mobile).
",7948548
552,False,False,2014-06-02T23:49:42Z,2014-06-02T23:52:41Z,"Official 1.0 release. Downloads available [at Couchbase.com](http://www.couchbase.com/download#cb-mobile).
",7948548
553,False,True,2014-04-16T00:01:55Z,2014-04-16T00:06:35Z,"A small update to beta 3 that fixed four significant bugs.
",7948548
554,False,True,2014-03-13T16:01:38Z,2014-03-14T20:11:08Z,"See the list of [changes since beta 2](https://github.com/couchbase/couchbase-lite-ios/wiki/Beta-3-changes).
",7948548
555,False,False,2020-03-22T20:02:38Z,2020-03-22T20:16:40Z,"📰 [Read the complete article on arduinojson.org](https://arduinojson.org/news/2020/03/22/version-6-15-0/)

### Changes since [6.14.1](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.14.1)

* Added `DeserializationOption::Filter` (issue #959)
* Added example `JsonFilterExample.ino`
* Changed the array subscript operator to automatically add missing elements
* Fixed ""deprecated-copy"" warning on GCC 9 (fixes #1184)
* Fixed `MemberProxy::set(char[])` not duplicating the string (issue #1191)
* Fixed enums serialized as booleans (issue #1197)
* Fixed incorrect string comparison on some platforms (issue #1198)
* Added move-constructor and move-assignment to `BasicJsonDocument`
* Added `BasicJsonDocument::garbageCollect()` (issue #1195)
* Added `StaticJsonDocument::garbageCollect()`
* Changed copy-constructor of `BasicJsonDocument` to preserve the capacity of the source.
* Removed copy-constructor of `JsonDocument` (issue #1189)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.15.0/CHANGELOG.md)

### BREAKING CHANGES ⚠️

#### Copy-constructor of `BasicJsonDocument`
In previous versions, the copy constructor of `BasicJsonDocument` looked at the source's `memoryUsage()` to choose its capacity.
Now, the copy constructor of `BasicJsonDocument` uses the same capacity as the source.
Example:

```c++
DynamicJsonDocument doc1(64);
doc1.set(String(""example""));
DynamicJsonDocument doc2 = doc1;
Serial.print(doc2.capacity());  // 8 with ArduinoJson 6.14
                                // 64 with ArduinoJson 6.15
```

I made this change to get consistent results between copy-constructor and move-constructor, and whether RVO applies or not.
If you use the copy-constructor to optimize your documents, you can use `garbageCollect()` or `shrinkToFit()` instead.
#### Copy-constructor of `JsonDocument`
In previous versions, it was possible to create a function that take a `JsonDocument` by value.

```c++
void myFunction(JsonDocument doc) {}
```

This function gives the wrong clues because it doesn't receive a copy of the `JsonDocument`, only a sliced version.
It worked because the copy constructor copied the internal pointers, but it was an accident.
From now, if you need to pass a `JsonDocument` to a function, you must use a reference:

```c++
void myFunction(JsonDocument& doc) {}
```

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.15.0.h` put it in your project folder
3. Download `ArduinoJson-v6.15.0.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.15.0.h` and `ArduinoJson-v6.15.0.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonGeneratorExample](https://wandbox.org/permlink/HfbBE5jZPFdhXvN3)
* [JsonParserExample](https://wandbox.org/permlink/8un2wjONq7xtkhhJ)
* [MsgPackParserExample](https://wandbox.org/permlink/cDdRvp0S23eT6inm)",15802263
556,False,False,2020-01-27T14:05:36Z,2020-01-27T14:11:35Z,"### Changes since [6.14.0](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.14.0)

* Fixed regression in UTF16 decoding (issue #1173)
* Fixed `containsKey()` on `JsonVariantConst`
* Added `getElement()` and `getMember()` to `JsonVariantConst`

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.14.1/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.14.1.h` put it in your project folder
3. Download `ArduinoJson-v6.14.1.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.14.1.h` and `ArduinoJson-v6.14.1.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonGeneratorExample](https://wandbox.org/permlink/BGFE76FPaul4pVC5)
* [JsonParserExample](https://wandbox.org/permlink/g9Iaql0QzzpyfXvn)
* [MsgPackParserExample](https://wandbox.org/permlink/NOSq7CgyZ0DZUBVa)",15802263
557,False,False,2020-01-16T19:48:03Z,2020-01-16T19:55:13Z,"> Looking for a human-readable version?
> 📰 [Read the article on arduinojson.org](https://arduinojson.org/2020/01/16/version-6-14-0/)

### Changes since [6.13.0](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.13.0)

* Added `BasicJsonDocument::shrinkToFit()`
* Added support of `uint8_t` for `serializeJson()`, `serializeJsonPretty()`, and `serializeMsgPack()` (issue #1142)
* Added `ARDUINOJSON_ENABLE_COMMENTS` to enable support for comments (defaults to 0)
* Auto enable support for `std::string` and `std::stream` on modern compilers (issue #1156)
  (No need to define `ARDUINOJSON_ENABLE_STD_STRING` and `ARDUINOJSON_ENABLE_STD_STREAM` anymore)
* Improved decoding of UTF-16 surrogate pairs (PR #1157 by @kaysievers)
  (ArduinoJson now produces standard UTF-8 instead of CESU-8)
* Added `measureJson`, `measureJsonPretty`, and `measureMsgPack` to `keywords.txt`
  (This file is used for syntax highlighting in the Arduino IDE) 
* Fixed `variant.is<nullptr_t>()`
* Fixed value returned by `serializeJson()`, `serializeJsonPretty()`, and `serializeMsgPack()` when writing to a `String`
* Improved speed of `serializeJson()`, `serializeJsonPretty()`, and `serializeMsgPack()` when writing to a `String`

> ### BREAKING CHANGES ⚠️
> 
> Support for comments in input is now optional and disabled by default.
>
> If you need support for comments, you must defined `ARDUINOJSON_ENABLE_COMMENTS` to `1`; otherwise, you'll receive `InvalidInput` errors.
>
> ```c++
> #define ARDUINOJSON_ENABLE_COMMENTS 1
> #include <ArduinoJson.h>
> ```

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.14.0/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.14.0.h` put it in your project folder
3. Download `ArduinoJson-v6.14.0.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.14.0.h` and `ArduinoJson-v6.14.0.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonGeneratorExample](https://wandbox.org/permlink/Qal01hI6whJUPWnx)
* [JsonParserExample](https://wandbox.org/permlink/wWFvycmHzQjbgq7G)
* [MsgPackParserExample](https://wandbox.org/permlink/Ka1J396SRexo1kUJ)",15802263
558,False,False,2019-11-01T09:32:45Z,2019-11-01T09:43:32Z,"> Looking for a human-readable version?
> 📰 [Read the article on arduinojson.org](https://arduinojson.org/2019/11/01/version-6-13-0/)

### Changes since [6.12.0](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.12.0)

* Added support for custom writer/reader classes (issue #1088)
* Added conversion from `JsonArray` and `JsonObject` to `bool`, to be consistent with `JsonVariant`
* Fixed `deserializeJson()` when input contains duplicate keys (issue #1095)
* Improved `deserializeMsgPack()` speed by reading several bytes at once
* Added detection of Atmel AVR8/GNU C Compiler (issue #1112)
* Fixed deserializer that stopped reading at the first `0xFF` (PR #1118 by @mikee47)
* Fixed dangling reference in copies of `MemberProxy` and `ElementProxy` (issue #1120)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.13.0/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.13.0.h` put it in your project folder
3. Download `ArduinoJson-v6.13.0.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.13.0.h` and `ArduinoJson-v6.13.0.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonGeneratorExample](https://wandbox.org/permlink/jc8NzK15jbNx6xOn)
* [JsonParserExample](https://wandbox.org/permlink/t7KP7I6dVuLhqzDl)
* [MsgPackParserExample](https://wandbox.org/permlink/y2lAbaeKOOizaoKS)",15802263
559,False,False,2019-09-05T07:31:06Z,2019-09-05T07:39:50Z,"> Looking for a human-readable version?
> 📰 [Read the article on arduinojson.org](https://arduinojson.org/2019/09/05/version-6-12-0/)

### Changes since [6.11.5](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.11.5)

* Use absolute instead of relative includes (issue #1072)
* Changed `JsonVariant::as<bool>()` to return `true` for any non-null value (issue #1005)
* Moved ancillary files to `extras/` (issue #1011)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.12.0/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.12.0.h` put it in your project folder
3. Download `ArduinoJson-v6.12.0.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.12.0.h` and `ArduinoJson-v6.12.0.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonGeneratorExample](https://wandbox.org/permlink/T5jKooL3BAYFijCH)
* [JsonParserExample](https://wandbox.org/permlink/Y6CIsRNOM4bXDm5l)
* [MsgPackParserExample](https://wandbox.org/permlink/X0Rc9FfZcqj4jDyE)",15802263
560,False,False,2019-08-23T06:40:11Z,2019-08-23T06:44:50Z,"### Changes since [6.11.4](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.11.4)

* Added fallback implementations of `strlen_P()`, `strncmp_P()`, `strcmp_P()`, and `memcpy_P()` (issue #1073)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.11.5/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.11.5.h` put it in your project folder
3. Download `ArduinoJson-v6.11.5.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.11.5.h` and `ArduinoJson-v6.11.5.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonGeneratorExample](https://wandbox.org/permlink/608elR7f8rSxwIJO)
* [JsonParserExample](https://wandbox.org/permlink/f1Ameou5DTCmTCDi)
* [MsgPackParserExample](https://wandbox.org/permlink/OXhc9H9iCzhKjgw6)",15802263
561,False,False,2019-08-12T13:10:57Z,2019-08-12T13:16:08Z,"### Changes since [6.11.3](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.11.3)

* Added `measureJson()` to the `ArduinoJson` namespace (PR #1069 by @nomis)
* Added support for `basic_string<char, traits, allocator>` (issue #1045)
* Fixed example `JsonConfigFile.ino` for ESP8266
* Include `Arduino.h` if `ARDUINO` is defined (PR #1071 by @nomis)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.11.4/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.11.4.h` put it in your project folder
3. Download `ArduinoJson-v6.11.4.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.11.4.h` and `ArduinoJson-v6.11.4.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonGeneratorExample](https://wandbox.org/permlink/MlaOUzp6jer7Zmw9)
* [JsonParserExample](https://wandbox.org/permlink/myanARvOSEouFXSP)
* [MsgPackParserExample](https://wandbox.org/permlink/r00uH2aS3yu6YKju)",15802263
562,False,False,2019-07-22T06:59:55Z,2019-07-22T07:04:37Z,"### Changes since [6.11.2](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.11.2)

* Added operators `==` and `!=` for `JsonDocument`, `ElementProxy`, and `MemberProxy`
* Fixed comparison of `JsonVariant` when one contains a linked string and the other contains an owned string (issue #1051)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.11.3/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.11.3.h` put it in your project folder
3. Download `ArduinoJson-v6.11.3.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.11.3.h` and `ArduinoJson-v6.11.3.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonGeneratorExample](https://wandbox.org/permlink/ppfl1tjpn9LA3trm)
* [JsonParserExample](https://wandbox.org/permlink/GTc9WGhCF5jkDf9F)
* [MsgPackParserExample](https://wandbox.org/permlink/2GgegEGsYciNSyVA)",15802263
563,False,False,2019-07-08T06:44:28Z,2019-07-08T06:48:54Z,"### Changes since [6.11.1](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.11.1)

* Fixed assignment of `JsonDocument` to `JsonVariant` (issue #1023)
* Fix invalid conversion error on Particle Argon (issue #1035)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.11.2/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.11.2.h` put it in your project folder
3. Download `ArduinoJson-v6.11.2.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.11.2.h` and `ArduinoJson-v6.11.2.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonGeneratorExample](https://wandbox.org/permlink/Qip33HyfCqSBaBGS)
* [JsonParserExample](https://wandbox.org/permlink/DVO8etaJY3oQ6lCC)
* [MsgPackParserExample](https://wandbox.org/permlink/t1gWKJBgWyUYA5nS)",15802263
564,False,False,2019-06-21T06:49:02Z,2019-06-21T06:53:11Z,"### Changes since [6.11.0](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.11.0)

* Fixed `serialized()` not working with Flash strings (issue #1030)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.11.1/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.11.1.h` put it in your project folder
3. Download `ArduinoJson-v6.11.1.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.11.1.h` and `ArduinoJson-v6.11.1.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonGeneratorExample](https://wandbox.org/permlink/cOE52BYzeVA5R1qi)
* [JsonParserExample](https://wandbox.org/permlink/oQDD1fluDUZ9wKyh)
* [MsgPackParserExample](https://wandbox.org/permlink/SgSLOGjFpsnHLhp9)",15802263
565,False,False,2019-05-26T19:11:44Z,2019-05-26T19:20:21Z,"> Looking for a human-readable version?
> 📰 [Read the article on arduinojson.org](https://arduinojson.org/2019/06/12/version-6-11-0/?utm_source=github&utm_medium=release)

### Changes since [6.10.1](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.10.1)

* Fixed `deserializeJson()` silently accepting a `Stream*` (issue #978)
* Fixed invalid result from `operator|` (issue #981)
* Made `deserializeJson()` more picky about trailing characters (issue #980)
* Added `ARDUINOJSON_ENABLE_NAN` (default=0) to enable NaN in JSON (issue #973)
* Added `ARDUINOJSON_ENABLE_INFINITY` (default=0) to enable Infinity in JSON
* Removed implicit conversion in comparison operators (issue #998)
* Added lexicographical comparison for `JsonVariant`
* Added support for `nullptr` (issue #998)

> ### BREAKING CHANGES
> 
> #### NaN and Infinity
> 
> The JSON specification allows neither NaN not Infinity, but previous
> versions of ArduinoJson supported it. Now, ArduinoJson behaves like most
> other libraries: a NaN or and Infinity in the `JsonDocument`, becomes
> a `null` in the output JSON. Also, `deserializeJson()` returns
> `InvalidInput` if the JSON document contains NaN or Infinity.
> 
> This version still supports NaN and Infinity in JSON documents, but
> it's disabled by default to be compatible with other JSON parsers.
> If you need the old behavior back, define `ARDUINOJSON_ENABLE_NAN` and
> `ARDUINOJSON_ENABLE_INFINITY` to `1`:
> 
> ```c++
> #define ARDUINOJSON_ENABLE_NAN 1
> #define ARDUINOJSON_ENABLE_INFINITY 1
> #include <ArduinoJson.h>
> ```
> 
> #### The ""or"" operator
> 
> This version slightly changes the behavior of the | operator when the 
> variant contains a float and the user requests an integer.
>
> Older versions returned the floating point value truncated.
> Now, it returns the default value.
> 
> ```c++
> // suppose variant contains 1.2
> int value = variant | 3;
> 
> // old behavior:
> value == 1
> 
> // new behavior
> value == 3
> ```
> 
> If you need the old behavior, you must add `if (variant.is<float>())`.

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.11.0/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.11.0.h` put it in your project folder
3. Download `ArduinoJson-v6.11.0.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.11.0.h` and `ArduinoJson-v6.11.0.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonGeneratorExample](https://wandbox.org/permlink/RafQWRSrs0MFEZAc)
* [JsonParserExample](https://wandbox.org/permlink/atkLQe74y4iRWbV9)
* [MsgPackParserExample](https://wandbox.org/permlink/dFFzaXk0OOBv5Xr3)",15802263
566,False,False,2019-04-23T06:47:54Z,2019-04-23T06:53:28Z,"### Changes since [6.10.0](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.10.0)

* Fixed error ""attributes are not allowed on a function-definition""
* Fixed `deserializeJson()` not being picky enough (issue #969)
* Fixed error ""no matching function for call to write(uint8_t)"" (issue #972)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.10.1/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.10.1.h` put it in your project folder
3. Download `ArduinoJson-v6.10.1.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.10.1.h` are `ArduinoJson-v6.10.1.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonGeneratorExample](https://wandbox.org/permlink/CXSArzk5Qd1sBx2T)
* [JsonParserExample](https://wandbox.org/permlink/LygdM2OR4tKrQyO4)
* [MsgPackParserExample](https://wandbox.org/permlink/8fPhKQXwQcLrMX7W)",15802263
567,False,False,2019-03-22T21:01:46Z,2019-03-22T21:08:53Z,"> Looking for a human-readable version?
> 📰 [Read the article on arduinojson.org](https://arduinojson.org/2019/03/22/version-6-10-0/?utm_source=github&utm_medium=release)

### Special note ⚠️ 

ArduinoJson 6 requires updating code written for version 5.
See [the migration guide](https://arduinojson.org/v6/doc/upgrade/?utm_source=github&utm_medium=release) for details.

### Changes since [6.9.1](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.9.1)

* Fixed an integer overflow in the JSON deserializer
* Added overflow handling in `JsonVariant::as<T>()` and `JsonVariant::is<T>()`.
   - `as<T>()` returns `0` if the integer `T` overflows
   - `is<T>()` returns `false` if the integer `T` overflows
* Added `BasicJsonDocument` to support custom allocator (issue #876)
* Added `JsonDocument::containsKey()` (issue #938)
* Added `JsonVariant::containsKey()`

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.10.0/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.10.0.h` put it in your project folder
3. Download `ArduinoJson-v6.10.0.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.10.0.h` are `ArduinoJson-v6.10.0.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonGeneratorExample](https://wandbox.org/permlink/bnT88K0XzUFj6CXZ)
* [JsonParserExample](https://wandbox.org/permlink/HBrUTPgJmauExToR)
* [MsgPackParserExample](https://wandbox.org/permlink/PXCDEWEh7GFzwaF4)",15802263
568,False,False,2019-03-01T17:16:45Z,2019-03-01T17:24:00Z,"> Looking for a human-readable version?
> 📰 [Read the article on arduinojson.org](https://arduinojson.org/2019/03/05/version-6-9-0/?utm_source=github&utm_medium=release)

### Special note ⚠️ 

ArduinoJson 6 requires updating code written for version 5.
See [the migration guide](https://arduinojson.org/v6/doc/upgrade/?utm_source=github&utm_medium=release) for details.

### Changes since [6.9.0](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.9.0)

* Fixed warning ""unused variable"" with GCC 4.4 (issue #912)
* Fixed warning ""cast  increases required alignment"" (issue #914)
* Fixed warning ""conversion may alter value"" (issue #914)
* Fixed naming conflict with ""CAPACITY"" (issue #839)
* Muted warning ""will change in GCC 7.1"" (issue #914)
* Added a clear error message for `StaticJsonBuffer` and `DynamicJsonBuffer`
* Marked ArduinoJson.h  as a ""system header""

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.9.1/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.9.1.h` put it in your project folder
3. Download `ArduinoJson-v6.9.1.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.9.1.h` are `ArduinoJson-v6.9.1.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonGeneratorExample](https://wandbox.org/permlink/DktkY33Le2mBRxHq)
* [JsonParserExample](https://wandbox.org/permlink/cy8TyJcqSEwXhtS5)
* [MsgPackParserExample](https://wandbox.org/permlink/b1f53MBaAR83AB1D)",15802263
569,False,False,2019-03-01T15:59:27Z,2019-03-01T16:04:12Z,"### Changes since [5.13.4](https://github.com/bblanchon/ArduinoJson/releases/tag/v5.13.4)

* Fixed warning ""unused variable"" with GCC 4.4 (issue #912)
* Fixed warning ""maybe uninitialized"" (issue #909)
* Added an clear message for `StaticJsonDocument`, `DynamicJsonDocument`...

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.13.5/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v5.13.5.h` put it in your project folder
3. Download `ArduinoJson-v5.13.5.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v5.13.5.h` are `ArduinoJson-v5.13.5.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

ℹ️ The complete documentation is available on [arduinojson.org](https://arduinojson.org/?utm_source=github&utm_medium=release)

### Try online

* [JsonParserExample on wandbox.org](https://wandbox.org/permlink/ZgwgYgfuAUXTPFUs)
* [JsonGeneratorExample on wandbox.org](https://wandbox.org/permlink/wdgJDJispOV9ileU)",15802263
570,False,False,2019-02-26T07:43:45Z,2019-02-26T07:50:13Z,"> Looking for a human-readable version?
> 📰 [Read the article on arduinojson.org](https://arduinojson.org/2019/03/05/version-6-9-0/?utm_source=github&utm_medium=release)

### Special note ⚠️ 

ArduinoJson 6 requires updating code written for version 5.
See [the migration guide](https://arduinojson.org/v6/doc/upgrade/?utm_source=github&utm_medium=release) for details.

### Changes since [6.8.0-beta](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.8.0-beta)

* Decode escaped Unicode characters like \u00DE (issue #304, PR #791)
  Many thanks to Daniel Schulte (aka @trilader) who implemented this feature.
* Added option ARDUINOJSON_DECODE_UNICODE to enable it
* Converted `JsonArray::copyFrom()/copyTo()` to free functions `copyArray()`
* Renamed `JsonArray::copyFrom()` and `JsonObject::copyFrom()` to `set()`
* Renamed `JsonArray::get()` to `getElement()`
* Renamed `JsonArray::add()` (without arg) to `addElement()`
* Renamed `JsonObject::get()` to `getMember()`
* Renamed `JsonObject::getOrCreate()` to `getOrAddMember()`
* Fixed `JsonVariant::isNull()` not returning `true` after `set((char*)0)`
* Fixed segfault after `variant.set(serialized((char*)0))`
* Detect `IncompleteInput` in `false`, `true`, and `null`
* Added `JsonDocument::size()`
* Added `JsonDocument::remove()`
* Added `JsonVariant::clear()`
* Added `JsonVariant::remove()`

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.9.0/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.9.0.h` put it in your project folder
3. Download `ArduinoJson-v6.9.0.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.9.0.h` are `ArduinoJson-v6.9.0.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonGeneratorExample](https://wandbox.org/permlink/JrdgJsrolWPnD2Qd)
* [JsonParserExample](https://wandbox.org/permlink/TBhEQaz51lUBScQy)
* [MsgPackParserExample](https://wandbox.org/permlink/9aTdAEYZKm4FFNce)",15802263
571,False,True,2019-01-30T15:39:38Z,2019-01-30T15:49:31Z,"> Looking for a human-readable version?
> 📰 [Read the article on arduinojson.org](https://arduinojson.org/2019/02/04/version-6-8-0/?utm_source=github&utm_medium=release)

### Special note ⚠️ 

ArduinoJson 6 requires updating code written for version 5.
See [the migration guide](https://arduinojson.org/v6/doc/upgrade/?utm_source=github&utm_medium=release) for details.

### Changes since [6.7.0-beta](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.7.0-beta)

* Import functions in the ArduinoJson namespace to get clearer errors
* Improved syntax highlighting in Arduino IDE
* Removed default capacity of `DynamicJsonDocument`
* `JsonArray::copyFrom()` accepts `JsonArrayConst`
* `JsonVariant::set()` accepts `JsonArrayConst` and `JsonObjectConst`
* `JsonDocument` was missing in the ArduinoJson namespace
* Added `memoryUsage()` to `JsonArray`, `JsonObject`, and `JsonVariant`
* Added `nesting()` to `JsonArray`, `JsonDocument`, `JsonObject`, and `JsonVariant`
* Replaced `JsonDocument::nestingLimit` with an additional parameter
  to `deserializeJson()` and `deserializeMsgPack()`
* Fixed uninitialized variant in `JsonDocument`
* Fixed `StaticJsonDocument` copy constructor and copy assignment
* The copy constructor of `DynamicJsonDocument` chooses the capacity according to the memory usage of the source, not from the capacity of the source.
* Added the ability to create/assign a `StaticJsonDocument`/`DynamicJsonDocument` from a `JsonArray`/`JsonObject`/`JsonVariant`
* Added `JsonDocument::isNull()`
* Added `JsonDocument::operator[]`
* Added `ARDUINOJSON_TAB` to configure the indentation character
* Reduced the size of the pretty JSON serializer
* Added `add()`, `createNestedArray()` and `createNestedObject()` to `JsonVariant`
* `JsonVariant` automatically promotes to `JsonObject` or `JsonArray` on write.
  Calling `JsonVariant::to<T>()` is not required anymore.
* `JsonDocument` now support the same operations as `JsonVariant`.
  Calling `JsonDocument::as<T>()` is not required anymore.
* Fixed example `JsonHttpClient.ino`
* User can now use a `JsonString` as a key or a value

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.8.0-beta/CHANGELOG.md)

### BREAKING CHANGES ⚠️

#### `DynamicJsonDocument`'s constructor
 
The parameter to the constructor of `DynamicJsonDocument` is now mandatory

> Old code:
> ```c++
> DynamicJsonDocument doc;
> ```

> New code:
>
> ```c++
> DynamicJsonDocument doc(1024);
> ```

#### Nesting limit
 
`JsonDocument::nestingLimit` was replaced with a new parameter to `deserializeJson()` and `deserializeMsgPack()`. 

> Old code:
> 
> ```c++
> doc.nestingLimit = 15;
> deserializeJson(doc, input);
> ```
 
> New code: 
> 
> ```c++
> deserializeJson(doc, input, DeserializationOption::NestingLimit(15));
> ```

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.8.0-beta.h` put it in your project folder
3. Download `ArduinoJson-v6.8.0-beta.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.8.0-beta.h` are `ArduinoJson-v6.8.0-beta.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonGeneratorExample](https://wandbox.org/permlink/dIwf5xp5NUMk8ZJq)
* [JsonParserExample](https://wandbox.org/permlink/ea9cxkthaeTY1vZe)
* [MsgPackParserExample](https://wandbox.org/permlink/D17MdnmcSZXyS9lT)",15802263
572,False,True,2018-12-07T11:23:02Z,2018-12-07T11:28:52Z,"> Looking for a human-readable version?
> 📰 [Read the article on arduinojson.org](https://arduinojson.org/2018/12/07/version-6-7-0/?utm_source=github&utm_medium=release)

### Special note ⚠️ 

ArduinoJson 6 requires updating code written for version 5.
See [the migration guide](https://arduinojson.org/v6/doc/upgrade/?utm_source=github&utm_medium=release) for details.

### Changes since [6.6.0-beta](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.6.0-beta)

* Removed the automatic expansion of `DynamicJsonDocument`, it now has a fixed capacity.
* Restored the monotonic allocator because the code was getting too big
* Reduced the memory usage
* Reduced the code size
* Renamed `JsonKey` to `JsonString`
* Removed spurious files in the Particle library

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.7.0-beta/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.7.0-beta.h` put it in your project folder
3. Download `ArduinoJson-v6.7.0-beta.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.7.0-beta.h` are `ArduinoJson-v6.7.0-beta.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonParserExample](https://wandbox.org/permlink/e2CGptnW6vtOmVr2)
* [JsonGeneratorExample](https://wandbox.org/permlink/LPO9y0izSyfLWtlW)
* [MsgPackParserExample](https://wandbox.org/permlink/rxr4XdbBmfhW5eq5)",15802263
573,False,False,2018-12-04T10:38:19Z,2018-12-04T10:47:45Z,"### Changes since [5.13.3](https://github.com/bblanchon/ArduinoJson/releases/tag/v5.13.3)

* Removed spurious files in the Particle library

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.13.4/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v5.13.4.h` put it in your project folder
3. Download `ArduinoJson-v5.13.4.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v5.13.4.h` are `ArduinoJson-v5.13.4.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

ℹ️ The complete documentation is available on [arduinojson.org](https://arduinojson.org/?utm_source=github&utm_medium=release)

### Try online

* [JsonParserExample on wandbox.org](https://wandbox.org/permlink/CIBo9ZhrblsP7aEg)
* [JsonGeneratorExample on wandbox.org](https://wandbox.org/permlink/IqP038DTEQLqWNZy)",15802263
574,False,True,2018-11-13T17:05:59Z,2018-11-13T17:15:04Z,"> Looking for a human-readable version?
> 📰 [Read the article on arduinojson.org](https://arduinojson.org/2018/11/14/version-6-6-0/?utm_source=github&utm_medium=release)

### Special note ⚠️ 

ArduinoJson 6 requires updating code written for version 5.
See [the migration guide](https://arduinojson.org/v6/doc/upgrade/?utm_source=github&utm_medium=release) for details.

### Changes since [6.5.0-beta](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.5.0-beta)

* Removed `JsonArray::is<T>(i)` and `JsonArray::set(i,v)`
* Removed `JsonObject::is<T>(k)` and `JsonObject::set(k,v)`
* Replaced `T JsonArray::get<T>(i)` with `JsonVariant JsonArray::get(i)`
* Replaced `T JsonObject::get<T>(k)` with `JsonVariant JsonObject::get(k)`
* Added `JSON_STRING_SIZE()`
* Replacing or removing a value now releases the memory
* Added `DeserializationError::code()` to be used in switch statements (issue #846)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.6.0-beta/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.6.0-beta.h` put it in your project folder
3. Download `ArduinoJson-v6.6.0-beta.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.6.0-beta.h` are `ArduinoJson-v6.6.0-beta.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonParserExample](https://wandbox.org/permlink/SbyxIP8bnQufva19)
* [JsonGeneratorExample](https://wandbox.org/permlink/RUWoLAqEKTmm0pua)
* [MsgPackParserExample](https://wandbox.org/permlink/cZFkwSCYYzzoomBd)",15802263
575,False,True,2018-10-13T11:23:34Z,2018-10-13T11:32:56Z,"### Special note ⚠️ 

ArduinoJson 6 requires updating code written for version 5.
See [the migration guide](https://arduinojson.org/v6/doc/upgrade/?utm_source=github&utm_medium=release) for details.

### Changes since [6.4.0-beta](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.4.0-beta)

* Added implicit conversion from `JsonArray` and `JsonObject` to `JsonVariant`
* Allow mixed configuration in compilation units (issue #809)
* Fixed object keys not being duplicated
* `JsonPair::key()` now returns a `JsonKey`
* Increased the default capacity of `DynamicJsonDocument`
* Fixed `JsonVariant::is<String>()` (closes #763)
* Added `JsonArrayConst`, `JsonObjectConst`, and `JsonVariantConst`
* Added copy-constructor and copy-assignment-operator for `JsonDocument` (issue #827)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.5.0-beta/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.5.0-beta.h` put it in your project folder
3. Download `ArduinoJson-v6.5.0-beta.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.5.0-beta.h` are `ArduinoJson-v6.5.0-beta.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonParserExample](https://wandbox.org/permlink/bqXcROR04srvK0F1)
* [JsonGeneratorExample](https://wandbox.org/permlink/PaLCsbw2jB1RUlKm)
* [MsgPackParserExample](https://wandbox.org/permlink/noGvjolrsDv5BhEW)",15802263
576,False,False,2018-10-06T15:51:09Z,2018-10-06T16:02:06Z,"### Changes since [5.13.2](https://github.com/bblanchon/ArduinoJson/releases/tag/v5.13.2)

* Improved float serialization when `-fsingle-precision-constant` is used
* Fixed `JsonVariant::is<int>()` that returned true for empty strings
* Fixed `JsonVariant::is<String>()` (closes #763)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.13.3/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v5.13.3.h` put it in your project folder
3. Download `ArduinoJson-v5.13.3.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v5.13.3.h` are `ArduinoJson-v5.13.3.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

ℹ️ The complete documentation is available on [arduinojson.org](https://arduinojson.org/?utm_source=github&utm_medium=release)

### Try online

* [JsonParserExample on wandbox.org](https://wandbox.org/permlink/p9hFJN8lntW0lgDB)
* [JsonGeneratorExample on wandbox.org](https://wandbox.org/permlink/mJpUuvKepwleAcma)",15802263
577,False,True,2018-09-11T14:31:04Z,2018-09-11T14:37:28Z,"### Special note ⚠️ 

ArduinoJson 6 requires updating code written for version 5.
See [the migration guide](https://arduinojson.org/v6/doc/upgrade/?utm_source=github&utm_medium=release) for details.

### Changes since [6.3.0-beta](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.3.0-beta)

* Copy `JsonArray` and `JsonObject`, instead of storing pointers (issue #780)
* Added `JsonVariant::to<JsonArray>()` and `JsonVariant::to<JsonObject>()`
* Fixed ""-0"" (issue #808)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.4.0-beta/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.4.0-beta.h` put it in your project folder
3. Download `ArduinoJson-v6.4.0-beta.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.4.0-beta.h` are `ArduinoJson-v6.4.0-beta.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonParserExample](https://wandbox.org/permlink/bB8VatH0qmmW0i2q)
* [JsonGeneratorExample](https://wandbox.org/permlink/UoZBeULRyKe1szlN)
* [MsgPackParserExample](https://wandbox.org/permlink/KaY5B9i5feJpIq6V)",15802263
578,False,True,2018-08-31T15:01:31Z,2018-08-31T15:34:11Z,"### Special note ⚠️ 

ArduinoJson 6 requires updating code written for version 5.
See [the migration guide](https://arduinojson.org/v6/doc/upgrade/?utm_source=github&utm_medium=release) for details.

### Changes since [6.2.3-beta](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.2.3-beta)

* Implemented reference semantics for `JsonVariant`
* Replace `JsonPair`'s `key` and `value` with `key()` and `value()`
* Fixed `serializeJson(obj[key], dst)` (issue #794)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.3.0-beta/CHANGELOG.md)

### BREAKING CHANGES ⚠️ 

#### JsonVariant

`JsonVariant` now has a semantic similar to `JsonObject` and `JsonArray`.
It's a reference to a value stored in the `JsonDocument`.
As a consequence, a `JsonVariant` cannot be used as a standalone variable anymore.

Old code:

```c++
JsonVariant myValue = 42;
```

New code:

```c++
DynamicJsonDocument doc;
JsonVariant myValue = doc.to<JsonVariant>();
myValue.set(42);
```

#### JsonPair

Old code:

```c++
for(JsonPair p : myObject) {
  Serial.println(p.key);
  Serial.println(p.value.as<int>());
}
```

New code:

```c++
for(JsonPair p : myObject) {
  Serial.println(p.key());
  Serial.println(p.value().as<int>());
}
```

CAUTION: the key is now read only!

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.3.0-beta.h` put it in your project folder
3. Download `ArduinoJson-v6.3.0-beta.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.3.0-beta.h` are `ArduinoJson-v6.3.0-beta.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonParserExample](https://wandbox.org/permlink/MjXWUTyLnjQZJsJ8)
* [JsonGeneratorExample](https://wandbox.org/permlink/p5lsdtNhjeiJJCJh)
* [MsgPackParserExample](https://wandbox.org/permlink/fVWZw5XVuOplMdyM)",15802263
579,False,True,2018-07-19T18:15:26Z,2018-07-19T18:53:08Z,"### Special note ⚠️ 

ArduinoJson 6 requires updating code written for version 5.
Visit [arduinojson.org](https://arduinojson.org/v6/doc/upgrade/?utm_source=github&utm_medium=release) for more information.

### Changes since [6.2.2-beta](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.2.2-beta)

* Fixed exception when using Flash strings as object keys (issue #784)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.2.3-beta/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.2.3-beta.h` put it in your project folder
3. Download `ArduinoJson-v6.2.3-beta.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.2.3-beta.h` are `ArduinoJson-v6.2.3-beta.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonParserExample](https://wandbox.org/permlink/cQHnftAKAbneLr4J)
* [JsonGeneratorExample](https://wandbox.org/permlink/irb0Jn0ytwYhW5dq)
* [MsgPackParserExample](https://wandbox.org/permlink/gGaXtu8guWTJytBc)",15802263
580,False,True,2018-07-18T18:21:35Z,2018-07-18T19:12:10Z,"### Special note ⚠️ 

ArduinoJson 6 requires updating code written for version 5.
Visit [arduinojson.org](https://arduinojson.org/v6/doc/upgrade/?utm_source=github&utm_medium=release) for more information.

### Changes since [6.2.1-beta](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.2.1-beta)

* Fixed `invalid application of 'sizeof' to incomplete type '__FlashStringHelper'` (issue #783)
* Fixed `char[]` not duplicated when passed to `JsonVariant::operator[]`

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.2.2-beta/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.2.2-beta.h` put it in your project folder
3. Download `ArduinoJson-v6.2.2-beta.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.2.2-beta.h` are `ArduinoJson-v6.2.2-beta.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonParserExample](https://wandbox.org/permlink/peKm6NhWgjdQJfGi)
* [JsonGeneratorExample](https://wandbox.org/permlink/eIHbIqBXWX2ICtVo)
* [MsgPackParserExample](https://wandbox.org/permlink/XP4I2tGjDMH4Ycxg)",15802263
581,False,True,2018-07-17T08:27:32Z,2018-07-17T08:33:44Z,"### Special note ⚠️ 

ArduinoJson 6 requires updating code written for version 5.
Visit [arduinojson.org](https://arduinojson.org/v6/doc/upgrade/?utm_source=github&utm_medium=release) for more information.

### Changes since [6.2.0-beta](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.2.0-beta)

* Fixed `JsonObject` not inserting keys of type `String` (issue #782)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.2.1-beta/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.2.1-beta.h` put it in your project folder
3. Download `ArduinoJson-v6.2.1-beta.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.2.1-beta.h` are `ArduinoJson-v6.2.1-beta.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonParserExample](https://wandbox.org/permlink/GMKbHEW5VhF43sWR)
* [JsonGeneratorExample](https://wandbox.org/permlink/fCoFYneRGQ1Wx9BD)
* [MsgPackParserExample](https://wandbox.org/permlink/it6SOe3VHyJIY319)",15802263
582,False,True,2018-07-12T07:10:37Z,2018-07-12T07:34:08Z,"### Special note ⚠️ 

ArduinoJson 6 requires updating code written for version 5.
Visit [arduinojson.org](https://arduinojson.org/v6/doc/upgrade/?utm_source=github&utm_medium=release) for more information.

### Changes since [6.1.0-beta](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.1.0-beta)

* Disabled lazy number deserialization (issue #772)
* Improved float serialization when `-fsingle-precision-constant` is used
* Renamed function `RawJson()` to `serialized()`
* `serializeMsgPack()` now supports values marked with `serialized()`

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.2.0-beta/CHANGELOG.md)

### BREAKING CHANGES ⚠️ 

#### Non quoted strings

Non quoted strings are now forbidden in values, but they are still allowed in keys.
For example, `{key:""value""}` is accepted, but `{key:value}` is not.

#### Preformatted values

Old code:
```c++
object[""values""] = RawJson(""[1,2,3,4]"");
```

New code:
```c++
object[""values""] = serialized(""[1,2,3,4]"");
```

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.2.0-beta.h` put it in your project folder
3. Download `ArduinoJson-v6.2.0-beta.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.2.0-beta.h` are `ArduinoJson-v6.2.0-beta.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonParserExample](https://wandbox.org/permlink/KwLOLEl8ZhpEzd01)
* [JsonGeneratorExample](https://wandbox.org/permlink/Sxc3hQ96a44WexgA)
* [MsgPackParserExample](https://wandbox.org/permlink/cngVocJwF1PZB4lo)",15802263
583,False,True,2018-07-02T07:57:37Z,2018-07-02T08:05:38Z,"### Special note ⚠️ 

ArduinoJson 6 requires updating code written for version 5.
Visit [arduinojson.org](https://arduinojson.org/v6/doc/upgrade/?utm_source=github&utm_medium=release) for more information.

### Changes since [6.0.1-beta](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.0.1-beta)

* Return `JsonArray` and `JsonObject` by value instead of reference (issue #309)
* Replaced `success()` with `isNull()`

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.1.0-beta/CHANGELOG.md)

### BREAKING CHANGES ⚠️ 

Old code:
```c++
JsonObject& obj = doc.to<JsonObject>();
JsonArray& arr = obj.createNestedArray(""key"");
if (!arr.success()) {
  Serial.println(""Not enough memory"");
  return;
}
```

New code:

```c++
JsonObject obj = doc.to<JsonObject>();
JsonArray arr = obj.createNestedArray(""key"");
if (arr.isNull()) {
  Serial.println(""Not enough memory"");
  return;
}
```

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.1.0-beta.h` put it in your project folder
3. Download `ArduinoJson-v6.1.0-beta.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.1.0-beta.h` are `ArduinoJson-v6.1.0-beta.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonParserExample](https://wandbox.org/permlink/r4zcMWWjA28q7MeK)
* [JsonGeneratorExample](https://wandbox.org/permlink/lFuPsVIcRqfgLr5q)
* [MsgPackParserExample](https://wandbox.org/permlink/iMijLKHFzf1YGvPx) :new:",15802263
584,False,True,2018-06-11T10:24:57Z,2018-06-11T10:35:27Z,"### Special note ⚠️ 

ArduinoJson 6 requires updating code written for version 5.
Visit [arduinojson.org](https://arduinojson.org/news/2018/06/07/version-6-0-0/?utm_source=github&utm_medium=release) for more information.

### Changes since [6.0.0-beta](https://github.com/bblanchon/ArduinoJson/releases/tag/v6.0.0-beta)

* Fixed conflicts with `isnan()` and `isinf()` macros (issue #752)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.0.1-beta/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.0.1-beta.h` put it in your project folder
3. Download `ArduinoJson-v6.0.1-beta.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.0.1-beta.h` are `ArduinoJson-v6.0.1-beta.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonParserExample](https://wandbox.org/permlink/VAmYFYLAojLJqGbS)
* [JsonGeneratorExample](https://wandbox.org/permlink/MNYTcNT4aapkoHZw)
* [MsgPackParserExample](https://wandbox.org/permlink/u4o9IavQD0zKUitu) :new:",15802263
585,False,True,2018-06-07T08:50:45Z,2018-06-07T09:20:08Z,"### Summary

This release is the first of a new major revision of the library.
It adds new features, like:

1. **MessagePack** serialization and deserialization,
2. Error code to tell why deserialization failed,
3. Support for non zero terminated input.

Unfortunately, it requires changing the existing programs; please see the ""breaking changes"" section below.

[More information on arduinojson.org](https://arduinojson.org/news/2018/06/07/version-6-0-0/?utm_source=github&utm_medium=release) 

### Changes since [5.13.2](https://github.com/bblanchon/ArduinoJson/releases/tag/v5.13.2)

* Added `DynamicJsonDocument` and `StaticJsonDocument`
* Added `deserializeJson()`
* Added `serializeJson()` and `serializeJsonPretty()`
* Added `measureJson()` and `measureJsonPretty()`
* Added `serializeMsgPack()`, `deserializeMsgPack()` and `measureMsgPack()` (issue #358)
* Added example `MsgPackParser.ino` (issue #358)
* Added support for non zero-terminated strings (issue #704)
* Removed `JsonBuffer::parseArray()`, `parseObject()` and `parse()`
* Removed `JsonBuffer::createArray()` and `createObject()`
* Removed `printTo()` and `prettyPrintTo()`
* Removed `measureLength()` and `measurePrettyLength()`
* Removed all deprecated features

### BREAKING CHANGES ⚠️ 

#### Deserialization
 
> Old code:
> 
> ```c++
> DynamicJsonBuffer jb;
> JsonObject& obj = jb.parseObject(json);
> if (obj.success()) {
> 
> }
> ```

> New code:
> 
> ```c++
> DynamicJsonDocument doc;
> DeserializationError error = deserializeJson(doc, json);
> if (error) {
> 
> }
> JsonObject& obj = doc.as<JsonObject>();
> ```

#### Serialization

> Old code:
> 
> ```c++
> DynamicJsonBuffer jb;
> JsonObject& obj = jb.createObject();
> obj[""key""] = ""value"";
> obj.printTo(Serial);
> ```

> New code:
> 
> ```c++
> DynamicJsonDocument obj;
> JsonObject& obj = doc.to<JsonObject>();
> obj[""key""] = ""value"";
> serializeJson(doc, Serial);
> ```

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v6.0.0-beta/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v6.0.0-beta.h` put it in your project folder
3. Download `ArduinoJson-v6.0.0-beta.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v6.0.0-beta.h` are `ArduinoJson-v6.0.0-beta.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonParserExample](https://wandbox.org/permlink/UrpC9Ol0ruOvIWb3)
* [JsonGeneratorExample](https://wandbox.org/permlink/AwiYzPLAvy3N4z4Z)
* [MsgPackParserExample](https://wandbox.org/permlink/wv3YDEMRP3Se9f5B) :new:",15802263
586,False,False,2018-06-01T07:22:10Z,2018-06-01T07:43:32Z,"### Changes since [5.13.1](https://github.com/bblanchon/ArduinoJson/releases/tag/v5.13.1)

* Fixed `JsonBuffer::parse()` not respecting nesting limit correctly (issue #693)
* Fixed inconsistencies in nesting level counting (PR #695 from Zhenyu Wu)
* Fixed null values that could be pass to `strcmp()` (PR #745 from Mike Karlesky)
* Added macros `ARDUINOJSON_VERSION`, `ARDUINOJSON_VERSION_MAJOR`...

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.13.2/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v5.13.2.h` put it in your project folder
3. Download `ArduinoJson-v5.13.2.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v5.13.2.h` are `ArduinoJson-v5.13.2.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

ℹ️ The complete documentation is available on [arduinojson.org](https://arduinojson.org/?utm_source=github&utm_medium=release)

### Try online

* [JsonParserExample on wandbox.org](https://wandbox.org/permlink/ua4fZ3mMghASAJjv)
* [JsonGeneratorExample on wandbox.org](https://wandbox.org/permlink/1zwe1xIlEDCJ1KaW)",15802263
587,False,False,2018-02-19T07:57:39Z,2018-02-19T08:03:10Z,"### Changes since [5.13.0](https://github.com/bblanchon/ArduinoJson/releases/tag/v5.13.0)

* Fixed `JsonVariant::operator|(int)` that returned the default value if the variant contained a double (issue #675)
* Allowed non-quoted key to contain underscores (issue #665)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.13.1/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v5.13.1.h` put it in your project folder
3. Download `ArduinoJson-v5.13.1.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v5.13.1.h` are `ArduinoJson-v5.13.1.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

ℹ️ The complete documentation is available on [arduinojson.org](https://arduinojson.org/?utm_source=github&utm_medium=release)

### Try online

* [JsonParserExample on wandbox.org](https://wandbox.org/permlink/ffzfIp7p1H4eZxZR)
* [JsonGeneratorExample on wandbox.org](https://wandbox.org/permlink/rsGsjlkVriYG6rXD)",15802263
588,False,False,2018-01-19T14:35:55Z,2018-01-19T14:43:29Z,"### Changes since [5.12.0](https://github.com/bblanchon/ArduinoJson/releases/tag/v5.12.0)

* Changed the rules of string duplication (issue #658)
* `RawJson()` accepts any kind of string and obeys to the same rules for duplication
* Changed the return type of `strdup()` to `const char*` to prevent double duplication
* Marked `strdup()` as deprecated

> ### New rules for string duplication
>
> | type                       | duplication |
> |:---------------------------|:------------|
> | const char*                | no          |
> | char*                      | ~~no~~ yes  |
> | String                     | yes         |
> | std::string                | yes         |
> | const __FlashStringHelper* | yes         |
>
> These new rules make `JsonBuffer::strdup()` useless.

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.13.0/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v5.13.0.h` put it in your project folder
3. Download `ArduinoJson-v5.13.0.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v5.13.0.h` are `ArduinoJson-v5.13.0.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

ℹ️ The complete documentation is available on [arduinojson.org](https://arduinojson.org/?utm_source=github&utm_medium=release)

### Try online

* [JsonParserExample on wandbox.org](https://wandbox.org/permlink/ueuDi8j1bED2bXxC)
* [JsonGeneratorExample on wandbox.org](https://wandbox.org/permlink/PfOxXA3X99CDTsmG)",15802263
589,False,False,2017-12-11T16:51:26Z,2017-12-11T17:04:02Z,"### Changes since [5.11.2](https://github.com/bblanchon/ArduinoJson/releases/tag/v5.11.2)

* Added `JsonVariant::operator|` to return a default value (see below)
* Added a clear error message when compiled as C instead of C++ (issue #629)
* Added detection of MPLAB XC compiler (issue #629)
* Added detection of Keil ARM Compiler (issue #629)
* Added an example that shows how to save and load a configuration file
* Reworked all other examples

> ### How to use the new feature?
>
> If you have a block like this:
>
> ```c++
> const char* ssid = root[""ssid""];
> if (!ssid)
>   ssid = ""default ssid"";
> ```
>
> You can simplify like that:
>
> ```c++
> const char* ssid = root[""ssid""] | ""default ssid"";
> ```

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.12.0/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v5.12.0.h` put it in your project folder
3. Download `ArduinoJson-v5.12.0.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v5.12.0.h` are `ArduinoJson-v5.12.0.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

ℹ️ The complete documentation is available on [arduinojson.org](https://arduinojson.org)

### Try online

* [JsonParserExample on wanbox.org](https://wandbox.org/permlink/qKrAnaA9B4zgfI2a)
* [JsonGeneratorExample on wandbox.org](https://wandbox.org/permlink/PKYazoEsGP9ucnYy)",15802263
590,False,False,2017-10-17T08:22:13Z,2017-10-17T08:42:17Z,"### Changes since [5.11.1](https://github.com/bblanchon/ArduinoJson/releases/tag/v5.11.1)

* Fixed `DynamicJsonBuffer::clear()` not resetting allocation size (issue #561)
* Fixed incorrect rounding for float values (issue #588)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.11.2/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v5.11.2.h` below and put it in your project folder
3. Download `ArduinoJson-v5.11.2.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v5.11.2.h` are `ArduinoJson-v5.11.2.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

ℹ️ The complete documentation is available on [arduinojson.org](http://arduinojson.org)

### Try online

* [JsonParserExample on wanbox.org](https://wandbox.org/permlink/xHt1kdXTfKFz8KDL)
* [JsonGeneratorExample on wandbox.org](https://wandbox.org/permlink/TWw8uqfYZg3IL1sR)",15802263
591,False,False,2017-07-14T09:17:51Z,2017-07-14T09:22:50Z,"### Changes since [5.11.0](https://github.com/bblanchon/ArduinoJson/releases/tag/v5.11.0)

* Removed dependency on `PGM_P` as Particle 0.6.2 doesn't define it (issue #546)
* Fixed warning ""dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]""
* Fixed warning ""floating constant exceeds range of 'float' [-Woverflow]"" (issue #544)
* Fixed warning ""this statement may fall through"" [-Wimplicit-fallthrough=] (issue #539)
* Removed `ARDUINOJSON_DOUBLE_IS_64BITS` as it became useless.
* Fixed too many decimals places in float serialization (issue #543)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.11.1/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v5.11.1.h` below and put it in your project folder
3. Download `ArduinoJson-v5.11.1.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v5.11.1.h` are `ArduinoJson-v5.11.1.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonParserExample on wanbox.org](https://wandbox.org/permlink/RXVZDOsvqCafuhyN)
* [JsonGeneratorExample on wandbox.org](https://wandbox.org/permlink/YTQgJLpjwczaRpAT)",15802263
592,False,False,2017-06-25T13:12:19Z,2017-06-25T13:21:52Z,"### Changes since [5.10.1](https://github.com/bblanchon/ArduinoJson/releases/tag/v5.10.1)

* Made `JsonBuffer` non-copyable (PR #524 by @luisrayas3)
* Added `StaticJsonBuffer::clear()`
* Added `DynamicJsonBuffer::clear()`

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.11.0/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v5.11.0.h` below and put it in your project folder
3. Download `ArduinoJson-v5.11.0.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v5.11.0.h` are `ArduinoJson-v5.11.0.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonParserExample on wanbox.org](https://wandbox.org/permlink/13vzReoM1y70mLYA)
* [JsonGeneratorExample on wandbox.org](https://wandbox.org/permlink/voKxmxOVIK0tXhkf)",15802263
593,False,False,2017-06-12T19:10:26Z,2017-06-12T19:14:33Z,"### Changes since [5.10.0](https://github.com/bblanchon/ArduinoJson/releases/tag/v5.10.0)

* Fixed IntelliSense errors in Visual Micro (issue #483)
* Fixed compilation in IAR Embedded Workbench (issue #515)
* Fixed reading ""true"" as a float (issue #516)
* Added `ARDUINOJSON_DOUBLE_IS_64BITS`
* Added `ARDUINOJSON_EMBEDDED_MODE`

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.10.1/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v5.10.1.h` below and put it in your project folder
3. Download `ArduinoJson-v5.10.1.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v5.10.1.h` are `ArduinoJson-v5.10.1.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.

### Try online

* [JsonParserExample on wanbox.org](https://wandbox.org/permlink/Sva2ulj7QApZzcUL)
* [JsonGeneratorExample on wandbox.org](https://wandbox.org/permlink/I3RTPXubtPGpCYtX)",15802263
594,False,False,2017-05-20T07:11:35Z,2017-05-20T07:29:05Z,"### Changes since [5.9.0](https://github.com/bblanchon/ArduinoJson/releases/tag/v5.9.0)

* Removed configurable number of decimal places (issues #288, #427 and #506)
* Changed exponentation thresholds to `1e7` and `1e-5` (issues #288, #427 and #506)
* `JsonVariant::is<double>()` now returns `true` for integers
* Fixed error `IsBaseOf is not a member of ArduinoJson::TypeTraits` (issue #495)
* Fixed error `forming reference to reference` (issue #495)

### BREAKING CHANGES :warning:

| Old syntax                      | New syntax          |
|---------------------------------|---------------------|
| `double_with_n_digits(3.14, 2)` | `3.14`              |
| `float_with_n_digits(3.14, 2)`  | `3.14f`             |
| `obj.set(""key"", 3.14, 2)`       | `obj[""key""] = 3.14` |
| `arr.add(3.14, 2)`              | `arr.add(3.14)`     |

| Input     | Old output | New output |
|-----------|------------|------------|
| `3.14159` | `3.14`     | `3.14159`  |
| `42.0`    | `42.00`    | `42`       |
| `0.0`     | `0.00`     | `0`        |

| Expression                     | Old result | New result |
|--------------------------------|------------|------------|
| `JsonVariant(42).is<int>()`    | `true`     | `true`     |
| `JsonVariant(42).is<float>()`  | `false`    | `true`     |
| `JsonVariant(42).is<double>()` | `false`    | `true`     |

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.10.0/CHANGELOG.md)

### How to install

There are several ways to install ArduinoJson, from simpler to more complex:

1. Use the Arduino Library Manager
2. Download `ArduinoJson-v5.10.0.h` below and put it in your project folder
3. Download `ArduinoJson-v5.10.0.zip` and extract it in you `libraries` folder

Note: `ArduinoJson-v5.10.0.h` are `ArduinoJson-v5.10.0.hpp` are almost identical; the difference is that the `.hpp` keeps everything in the `ArduinoJson` namespace.",15802263
595,False,False,2017-04-24T19:43:29Z,2017-04-24T19:51:31Z,"### Changes since [5.8.4](https://github.com/bblanchon/ArduinoJson/releases/tag/v5.8.4)

* Added `JsonArray::remove(iterator)` (issue #479)
* Added `JsonObject::remove(iterator)`
* Renamed `JsonArray::removeAt(size_t)` into `remove(size_t)` ⚠️ 
* Renamed folder `include/` to `src/`
* Fixed warnings `floating constant exceeds range of float`and `floating constant truncated to zero` (issue #483)
* Removed `Print` class and converted `printTo()` to a template method (issue #276) ⚠️
* Removed example `IndentedPrintExample.ino`
* Now compatible with [Particle](https://www.particle.io/) 0.6.1, thanks to Jacob Nite (issue #294 and PR #461 by @foodbag)

⚠️ = breaking change, you may need to change your code.

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.9.0/CHANGELOG.md)",15802263
596,False,False,2017-03-26T19:33:39Z,2017-03-26T19:45:33Z,"### Changes since 5.8.3
* Added custom implementation of `strtod()` (issue #453)
* Added custom implementation of `strtol()` (issue #465)
* `char` is now treated as an integral type (issue #337, #370)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.8.3/CHANGELOG.md)

### :new: Single File Distribution

Starting with this revision, ArduinoJson ships as a single file too.
The single file simplifies the usage of the library as you just need to copy the ArduinoJson header (see bellow) alongside with your project's source code.

Two options are available:

* `ArduinoJson-v5.8.4.hpp` contains all the library in the `ArduinoJson` namespace
* `ArduinoJson-v5.8.4.h` is the same but adds a `using namespace ArduinoJson`

If you don't know which one to pick, choose the `.h`
",15802263
597,False,False,2017-02-11T14:12:28Z,2017-02-11T14:15:52Z,"### Changes since 5.8.2
- Fixed an access violation in `DynamicJsonBuffer` when memory allocation fails (issue #433)
- Added operators `==` and `!=` for two `JsonVariant`s (issue #436)
- Fixed `JsonVariant::operator[const FlashStringHelper*]` (issue #441)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.8.3/CHANGELOG.md)
",15802263
598,False,False,2017-01-22T17:09:14Z,2017-01-22T17:15:56Z,"### Changes since 5.8.1
- Fixed parsing of comments (issue #421)
- Fixed ignored `Stream` timeout (issue #422)
- Made sure we don't read more that necessary (issue #422)
- Fixed error when the key of a `JsonObject` is a `char[]` (issue #423)
- Reduced code size when using `const` references
- Fixed error with string of type `unsigned char*` (issue #428)
- Added `deprecated` attribute on `asArray()`, `asObject()` and `asString()` (issue #420)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.8.2/CHANGELOG.md)

### How to replace deprecated functions?

| Old Name | New Name |
| --- | --- |
| ~~`asArray()`~~ | `as<JsonArray>()` |
| ~~`asObject()`~~ | `as<JsonObject>()` |
| ~~`asString()`~~ | `as<char*>()` |
",15802263
599,False,False,2017-01-15T20:03:05Z,2017-01-15T20:06:27Z,"### Changes since 5.8.0
- Fixed error when assigning a `volatile int` to a `JsonVariant` (issue #415)
- Fixed errors with Variable Length Arrays (issue #416)
- Fixed error when both `ARDUINOJSON_ENABLE_STD_STREAM` and `ARDUINOJSON_ENABLE_ARDUINO_STREAM` are set to `1`
- Fixed error ""Stream does not name a type"" (issue #412)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.8.1/CHANGELOG.md)
",15802263
600,False,False,2017-01-03T21:40:23Z,2017-01-03T21:49:26Z,"### Changes since 5.7.3
- Added operator `==` to compare `JsonVariant` and strings (issue #402)
- Added support for `Stream` (issue #300)
- Reduced memory consumption by not duplicating spaces and comments

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.8.0/CHANGELOG.md)

### Breaking changes

`JsonBuffer::parseObject()` and  `JsonBuffer::parseArray()` have been pulled down to the derived classes `DynamicJsonBuffer` and `StaticJsonBufferBase`.

This means that if you have code like:

``` c++
void myFunction(JsonBuffer& jsonBuffer);
```

you need to replace it by one of the following:

``` c++
void myFunction(DynamicJsonBuffer& jsonBuffer);
void myFunction(StaticJsonBufferBase& jsonBuffer);
template<typename TJsonBuffer> void myFunction(TJsonBuffer& jsonBuffer);
```

### How to use the new `Stream` feature?

If you have something like:

``` c++
char json[256];
size_t n= stream.readBytes(json, sizeof(json));     
json[n] = 0;

JsonObject& root = jsonBuffer.parseObject(json);
```

then you can replace by:

``` c++
JsonObject& root = jsonBuffer.parseObject(stream);
```

but don't forget to increase the size of the `JsonBuffer` because it now has to hold a copy of the input.
",15802263
601,False,False,2016-12-10T15:01:14Z,2016-12-10T15:02:59Z,"#### Changes since 5.7.2
- Added an `printTo(char[N])` and `prettyPrintTo(char[N])` (issue #292)
- Added ability to set a nested value like this: `root[""A""][""B""] = ""C""` (issue #352)
- Renamed `*.ipp` to `*Impl.hpp` because they were ignored by Arduino IDE (issue #396)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.7.3/CHANGELOG.md)
",15802263
602,False,False,2016-11-23T20:55:19Z,2016-11-23T20:56:53Z,"#### Changes since 5.7.1
- Made PROGMEM available on more platforms (issue #381)
- Fixed PROGMEM causing an exception on ESP8266 (issue #383)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.7.2/CHANGELOG.md)
",15802263
603,False,False,2016-11-13T19:22:53Z,2016-11-13T19:26:12Z,"#### Changes since 5.7.0
- Added support for PROGMEM (issue #76)
- Fixed compilation error when index is not an `int` (issue #381)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.7.1/CHANGELOG.md)
",15802263
604,False,False,2016-11-06T16:53:26Z,2016-11-06T16:55:40Z,"#### Changes since v5.6.7
- Templatized all functions using `String` or `std::string`
- Removed `ArduinoJson::String`
- Removed `JsonVariant::defaultValue<T>()`
- Removed non-template `JsonObject::get()` and `JsonArray.get()`
- Fixed support for `StringSumHelper` (issue #184)
- Replaced `ARDUINOJSON_USE_ARDUINO_STRING` by `ARDUINOJSON_ENABLE_STD_STRING` and `ARDUINOJSON_ENABLE_ARDUINO_STRING` (issue #378)
- Added example `StringExample.ino` to show where `String` can be used
- Increased default nesting limit to 50 when compiled for a computer (issue #349)

**BREAKING CHANGES**:

The non-template functions `JsonObject::get()` and `JsonArray.get()` have been removed. This means that you need to explicitely tell the type you expect in return.

Old code:

``` c++
#define ARDUINOJSON_USE_ARDUINO_STRING 0
JsonVariant value1 = myObject.get(""myKey"");
JsonVariant value2 = myArray.get(0);
```

New code:

``` c++
#define ARDUINOJSON_ENABLE_ARDUINO_STRING 0
#define ARDUINOJSON_ENABLE_STD_STRING 1
JsonVariant value1 = myObject.get<JsonVariant>(""myKey"");
JsonVariant value2 = myArray.get<JsonVariant>(0);
```

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.7.0/CHANGELOG.md)
",15802263
605,False,False,2016-09-20T08:11:54Z,2016-09-20T08:14:35Z,"#### Changes since v5.6.6
- Fixed `array[idx].as<JsonVariant>()` and `object[key].as<JsonVariant>()`
- Fixed return value of `JsonObject::set()` (issue #350)
- Fixed undefined behavior in `Prettyfier` and `Print` (issue #354)
- Fixed parser that incorrectly rejected floats containing a `+` (issue #349)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.6.7/CHANGELOG.md)
",15802263
606,False,False,2016-08-29T18:56:08Z,2016-08-29T18:58:27Z,"#### Changes since v5.6.5
- Fixed `-Wparentheses` warning introduced in v5.6.5 (PR #335 by @nuket)
- Added `.mbedignore` for ARM mbdeb (PR #334 by @nuket)
- Fixed  `JsonVariant::success()` which didn't propagate `JsonArray::success()` nor `JsonObject::success()` (issue #342).

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.6.6/CHANGELOG.md)
",15802263
607,False,False,2016-08-15T10:26:18Z,2016-08-15T10:28:49Z,"#### Changes since v5.6.4
- `as<char*>()` now returns `true` when input is `null` (issue #330)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.6.5/CHANGELOG.md)
",15802263
608,False,False,2016-07-20T11:16:51Z,2016-07-20T11:19:13Z,"#### Changes since v5.6.3
- Fixed error in float serialization (issue #324)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.6.4/CHANGELOG.md)
",15802263
609,False,False,2016-07-19T07:00:20Z,2016-07-19T07:04:26Z,"#### Changes since v5.6.2
- Improved speed of float serialization (about twice faster)
- Added `as<JsonArray>()` as a synonym for `as<JsonArray&>()`... (issue #291)
- Fixed `call of overloaded isinf(double&) is ambiguous` (issue #284)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.6.3/CHANGELOG.md)
",15802263
610,False,False,2016-06-30T18:24:35Z,2016-06-30T18:26:55Z,"#### Changes since v5.6.1
- Fixed build when another lib does `#undef isnan` (issue #284)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.6.2/CHANGELOG.md)
",15802263
611,False,False,2016-06-24T07:25:17Z,2016-06-24T07:29:51Z,"#### Changes since v5.6.0
- Added missing `#pragma once` (issue #310)

[View version history](https://github.com/bblanchon/ArduinoJson/blob/v5.6.1/CHANGELOG.md)
",15802263
612,False,False,2016-06-22T19:43:18Z,2016-06-22T19:51:56Z,"#### Changes since v5.5.1
- ArduinoJson is now a header-only library (issue #199)
",15802263
613,False,False,2016-06-06T20:13:14Z,2016-06-06T20:21:31Z,"#### Changes since v5.5.0
- Fixed compilation error with Intel Galileo (issue #299)

#### Which package to download?

If you are running the **official Arduino IDE**, download `ArduinoJson-v5.5.1.zip`.
You can also use the library manager from the IDE; it will download the library for you.

If you are running **an alternative IDE** (like Energia or Stino), download `ArduinoJson-v5.5.1-old-layout.zip`.
This package has the legacy library layout that was supported by older versions of the Arduino IDE.
",15802263
614,False,False,2016-05-22T13:01:16Z,2016-05-22T13:04:19Z,"#### Changes since v5.4.0
- Added `JsonVariant::success()` (issue #279)
- Renamed `JsonVariant::invalid<T>()` to `JsonVariant::defaultValue<T>()`

#### Which package to download?

If you are running the **official Arduino IDE**, download `ArduinoJson-v5.5.0.zip`.
You can also use the library manager from the IDE; it will download the library for you.

If you are running **an alternative IDE** (like Energia or Stino), download `ArduinoJson-v5.5.0-old-layout.zip`.
This package has the legacy library layout that was supported by older versions of the Arduino IDE.
",15802263
615,False,False,2016-05-06T06:46:34Z,2016-05-06T06:49:07Z,"#### Changes since v5.3.0
- Changed `::String` to `ArduinoJson::String` (issue #275)
- Changed `::Print` to `ArduinoJson::Print` too

#### Which package to download?

If you are running the **official Arduino IDE**, download `ArduinoJson-v5.4.0.zip`.
You can also use the library manager from the IDE; it will download the library for you.

If you are running **an alternative IDE** (like Energia or Stino), download `ArduinoJson-v5.4.0-old-layout.zip`.
This package has the legacy library layout that was supported by older versions of the Arduino IDE.
",15802263
616,False,False,2016-04-30T07:50:16Z,2016-04-30T07:54:20Z,"#### Changes since v5.2.0
- Added custom implementation of `ftoa` (issues #266, #267, #269 and #270)
- Added `JsonVariant JsonBuffer::parse()` (issue #265)
- Fixed `unsigned long` printed as `signed long` (issue #170)

#### Which package to download?

If you are running the **official Arduino IDE**, download `ArduinoJson-v5.3.0.zip`.
You can also use the library manager from the IDE, it will download the library for you.

If you are running **an alternative IDE** (like Energia or Stino), download `ArduinoJson-v5.3.0-old-layout.zip`
This package has the legacy library layout that was supported by older versions of the Arduino IDE.
",15802263
617,False,False,2016-04-16T14:17:42Z,2016-04-16T14:22:24Z,"#### Changes since v5.1.1
- Added `JsonVariant::as<char*>()` as a synonym for `JsonVariant::as<const char*>()` (issue #257)
- Added example `JsonHttpClient` (issue #256)
- Added `JsonArray::copyTo()` and `JsonArray::copyFrom()` (issue #254)
- Added `RawJson()` to insert pregenerated JSON portions (issue #259)

#### Which package to download?

If you are running the **official Arduino IDE**, download `ArduinoJson-v5.2.0.zip`.
You can also use the library manager from the IDE, it will download the library for you.

If you are running **an alternative IDE** (like Energia or Stino), download `ArduinoJson-v5.2.0-old-layout.zip`
This package has the legacy library layout that was supported by older versions of the Arduino IDE.
",15802263
618,False,False,2016-02-23T20:31:32Z,2016-02-23T20:34:26Z,"#### Changes since v5.1.0
- Removed `String` duplication when one replaces a value in a `JsonObject` (PR #232 by @ulion)

#### Which package to download?

If you are running the **official Arduino IDE**, download `ArduinoJson-v5.1.1.zip`.
You can also use the library manager from the IDE, it will download the library for you.

If you are running **an alternative IDE** (like Energia or Stino), download `ArduinoJson-v5.1.1-old-layout.zip`
This package has the legacy library layout that was supported by older versions of the Arduino IDE.
",15802263
619,False,False,2016-02-14T15:21:07Z,2016-02-14T15:25:02Z,"#### Changes since v5.0.8
- Added support of `long long` (issue #171)
- Moved all build settings to `ArduinoJson/Configuration.hpp`

#### Breaking change

If you defined `ARDUINOJSON_ENABLE_STD_STREAM`, you now need to define it to `1`.

~~`#define ARDUINOJSON_ENABLE_STD_STREAM`~~

`#define ARDUINOJSON_ENABLE_STD_STREAM 1`

#### Which package to download?

If you are running the **official Arduino IDE**, download `ArduinoJson-v5.1.0.zip`.
You can also use the library manager from the IDE, it will download the library for you.

If you are running **an alternative IDE** (like Energia or Stino), download `ArduinoJson-v5.1.0-old-layout.zip`
This package has the legacy library layout that was supported by older versions of the Arduino IDE.
",15802263
620,False,True,2016-02-06T20:23:43Z,2016-02-06T20:25:42Z,"#### Changes since v5.1.0-beta.1

Fixed build on Visual Studio 2010 and 2012, MinGW32 and GCC 5

#### Known bugs

None! Please open an issue if you find something.
",15802263
621,False,True,2016-02-01T20:28:48Z,2016-02-01T20:36:42Z,"#### Changes since v5.0.8
- Added support of `long long` (issue #171)
- Moved all build settings to `ArduinoJson/Configuration.hpp`

#### Breaking change

If you defined `ARDUINOJSON_ENABLE_STD_STREAM`, you now need to define it to `1`.

~~`#define ARDUINOJSON_ENABLE_STD_STREAM`~~

`#define ARDUINOJSON_ENABLE_STD_STREAM 1`

#### Known bugs

None :white_check_mark: 
If you find something please please please open an issue!
",15802263
622,False,False,2016-01-31T20:58:10Z,2016-01-31T21:01:18Z,"#### Changes since v5.0.7
- Made the library compatible with [PlatformIO](http://platformio.org/) (issue #181)
- Fixed `JsonVariant::is<bool>()` that was incorrectly returning false (issue #214)

#### Which package to download?

If you are running the **official Arduino IDE**, download `ArduinoJson-v5.0.8.zip`.
You can also use the library manager from the IDE, it will download the library for you.

If you are running **an alternative IDE** (like Energia or Stino), download `ArduinoJson-v5.0.8-old-layout.zip`
This package has the legacy library layout that was supported by older versions of the Arduino IDE.
",15802263
623,False,False,2015-11-25T20:17:08Z,2015-11-25T20:27:13Z,"#### Changes since v5.0.6
- Made library easier to use from a CMake project: simply `add_subdirectory(ArduinoJson/src)`
- Changed `String` to be a `typedef` of `std::string` (issues #142 and #161)

**BREAKING CHANGES**:
- `JsonVariant(true).as<String>()` now returns `""true""` instead of `""1""`
- `JsonVariant(false).as<String>()` now returns `""false""` instead of `""0""`

#### Which package to download?

If you are running the **official Arduino IDE**, download `ArduinoJson-v5.0.7.zip`.
You can also use the library manager from the IDE, it will download the library for you.

If you are running **an alternative IDE** (like Energia or Stino), download `ArduinoJson-v5.0.7-old-layout.zip`
This package has the legacy library layout that was supported by older versions of the Arduino IDE.
",15802263
624,False,False,2015-11-09T22:10:50Z,2015-11-09T22:13:30Z,"#### Changes since v5.0.5
- Added parameter to `DynamicJsonBuffer` constructor to set initial size (issue #152)
- Fixed warning about library category in Arduino 1.6.6 (issue #147)
- Examples: Added a loop to wait for serial port to be ready (issue #156)

#### Which package to download?

If you are running the **official Arduino IDE**, download `ArduinoJson-v5.0.6.zip`.
You can also use the library manager from the IDE, it will download the library for you.

If you are running **an alternative IDE** (like Energia or Stino), download `ArduinoJson-v5.0.6-old-layout.zip`
This package has the legacy library layout that was supported by older versions of the Arduino IDE.
",15802263
625,False,False,2015-10-30T22:06:55Z,2015-10-30T22:10:48Z,"#### Changes since v5.0.4
- Add overload `JsonObjectSuscript::set(value, decimals)` (issue #143)
- Use `float` instead of `double` to reduce the size of `JsonVariant` (issue #134)

#### Which package to download?

If you are running the **official Arduino IDE**, download `ArduinoJson-v5.0.5.zip`.
You can also use the library manager from the IDE, it will download the library for you.

If you are running **an alternative IDE** (like Energia or Stino), download `ArduinoJson-v5.0.5-old-layout.zip`
This package has the legacy library layout that was supported by older versions of the Arduino IDE.
",15802263
626,False,False,2015-09-29T20:21:34Z,2015-09-29T20:25:21Z,"#### Changes since v5.0.3
- Fixed ambiguous overload with `JsonArraySubscript` and `JsonObjectSubscript` (issue #122)

#### Which package to download?

If you are running the **official Arduino IDE**, download `ArduinoJson-v5.0.4.zip`.
You can also use the library manager from the IDE, it will download the library for you.

If you are running **an alternative IDE** (like Energia), download `ArduinoJson-v5.0.4-old-layout.zip`
This package has the legacy library layout that was supported by older versions of the Arduino IDE.
",15802263
627,False,False,2015-09-19T14:30:43Z,2015-09-19T14:41:35Z,"#### Changes since v5.0.2
- Fixed `printTo(String)` which wrote numbers instead of strings (issue #120)
- Fixed return type of `JsonArray::is<T>()` and some others (issue #121)

#### Which package to download?

If you are running the **official Arduino IDE**, download `ArduinoJson-v5.0.3.zip`.
You can also use the library manager from the IDE, it will download the library for you.

If you are running **an alternative IDE** (like Energia), download `ArduinoJson-v5.0.3-old-layout.zip`
This package has the legacy library layout that was supported by older versions of the Arduino IDE.
",15802263
628,False,False,2015-09-01T20:38:05Z,2015-09-01T20:40:11Z,"#### Changes since v5.0.1
- Fixed segmentation fault in `parseObject(String)` and `parseArray(String)`, when the 
  `StaticJsonBuffer` is too small to hold a copy of the string
- Fixed Clang warning ""register specifier is deprecated"" (issue #102)
- Fixed GCC warning ""declaration shadows a member"" (issue #103)
- Fixed memory alignment, which made ESP8266 crash (issue #104)
- Fixed compilation on Visual Studio 2010 and 2012 (issue #107)

**Energia**: you need to use the alternative package named `ArduinoJson-v5.0.2-old-layout.zip`
",15802263
629,False,False,2015-08-24T13:28:18Z,2015-08-24T13:33:03Z,"#### Changes since v5.0.0
- Fixed compilation with Arduino 1.0.6 (issue #99)
",15802263
630,False,False,2015-08-20T13:25:01Z,2015-08-20T13:31:24Z,"#### Changes since v4.6.1
- Added support of `String` class (issues #55, #56, #70, #77)
- Added `JsonBuffer::strdup()` to make a copy of a string (issues #10, #57)
- Implicitly call `strdup()` for `String` but not for `char*` (issues #84, #87)
- Added support of non standard JSON input (issue #44)
- Added support of comments in JSON input (issue #88)
- Added implicit cast between numerical types (issues #64, #69, #93)
- Added ability to read number values as string (issue #90)
- Redesigned `JsonVariant` to leverage converting constructors instead of assignment operators (issue #66)
- Switched to new the library layout (requires Arduino 1.0.6 or above)

**BREAKING CHANGES**:
- `JsonObject::add()` was renamed to `set()`
- `JsonArray::at()` and `JsonObject::at()` were renamed to `get()`
- Number of digits of floating point value are now set with `double_with_n_digits()`

**Personal note about the `String` class**:
Support of the `String` class has been added to the library because many people use it in their programs.
However, you should not see this as an invitation to use the `String` class.
The `String` class is **bad** because it uses dynamic memory allocation.
Compared to static allocation, it compiles to a bigger, slower program, and is less predictable.
You certainly don't want that in an embedded environment!
",15802263
631,False,True,2015-08-10T15:23:17Z,2015-08-10T15:25:23Z,"#### Changes since v5.0-beta-4
- Added implicit cast between numerical types (issues #64, #69, #93)
- Added ability to read number values as string (issue #90)
",15802263
632,False,False,2015-08-02T07:21:40Z,2015-08-02T07:26:34Z,"#### Changes since v4.5
- Fixed segmentation fault in `DynamicJsonBuffer` when memory allocation fails (issue #92)
",15802263
633,False,True,2015-07-27T20:19:29Z,2015-07-27T20:21:08Z,"#### Changes since v5.0-beta-3
- Added support of comments in JSON input (issue #88)
",15802263
634,False,True,2015-07-25T14:05:42Z,2015-07-25T14:10:08Z,"#### Changes since v5.0-beta-2
- Added `JsonBuffer::strdup()` to make a copy of a string (issues #10, #57)
- Implicitly call `strdup()` for `String` but not for `char*` (issues #84, #87)
",15802263
635,False,True,2015-07-10T20:13:44Z,2015-07-10T20:16:39Z,"#### Changes since v5.0-beta-1
- Added support of non standard JSON input (issue #44)
- Fixed buffer overflow when input contains a backslash followed by a terminator (issue #81)
",15802263
636,False,False,2015-06-10T19:34:08Z,2015-06-10T19:36:12Z,"#### Changes since v4.4
- Fixed buffer overflow when input contains a backslash followed by a terminator (issue #81)

**Upgrading is recommended** since previous versions contain a potential security risk.

[The documentation is in the wiki](https://github.com/bblanchon/ArduinoJson/wiki).
",15802263
637,False,True,2015-05-31T12:37:47Z,2015-05-31T12:41:09Z,"#### Changes since v4.4
- Added support of `String` class (issue #55, #56, #70, #77)
- Redesigned `JsonVariant` to leverage converting constructors instead of assignment operators
- Switched to new library layout (requires Arduino 1.0.6 or above)

**BREAKING CHANGES**:
- `JsonObject::add()` was renamed to `set()`
- `JsonArray::at()` and `JsonObject::at()` were renamed to `get()`
- Number of digits of floating point value are now set with `double_with_n_digits()`

**Personal note about the `String` class**:
Support of the `String` class has been added to the library because many people use it in their programs.
However, you should not see this as an invitation to use the `String` class.
The `String` class is **bad** because it uses dynamic memory allocation.
Compared to static allocation, it compiles to a bigger, slower program, and is less predicatable.
You certainly don't want that in an embedded environment!

**CAUTION: the documentation on the wiki hasn't been updated yet.**
",15802263
638,False,False,2015-05-09T14:54:48Z,2015-05-09T14:56:47Z,"#### Changes since v4.3
- Added `JsonArray::measureLength()` and `JsonObject::measureLength()` (issue #75)

[The documentation is in the wiki](https://github.com/bblanchon/ArduinoJson/wiki).
",15802263
639,False,False,2015-05-03T13:51:15Z,2015-05-03T13:57:19Z,"#### Changes since v4.2
- Added `JsonArray::removeAt()` to remove an element of an array (issue #58)
- Fixed stack-overflow in `DynamicJsonBuffer` when parsing huge JSON files (issue #65)
- Fixed wrong return value of `parseArray()` and `parseObject()` when allocation fails (issue #68)

[The documentation is in the wiki](https://github.com/bblanchon/ArduinoJson/wiki).
",15802263
640,False,False,2015-02-07T19:49:35Z,2015-02-07T19:54:26Z,"#### Changes since v4.1
- Switched back to old library layout (issues #39, #43 and #45)
- Removed global new operator overload (issue #40, #45 and #46)
- Added an example with EthernetServer

[The documentation is in the wiki](https://github.com/bblanchon/ArduinoJson/wiki).
",15802263
641,False,False,2014-12-21T14:25:54Z,2014-12-21T14:30:16Z,"#### Changes compared to 4.0:
- Added DynamicJsonBuffer (issue #19)

#### Packages:
- [ArduinoJson-v4.1.zip](https://github.com/bblanchon/ArduinoJson/releases/download/v4.1/ArduinoJson-v4.1.zip) for Arduino IDE >=1.0.6 and >=1.5.6 
- [ArduinoJson-v4.1-old-layout.zip](https://github.com/bblanchon/ArduinoJson/releases/download/v4.1/ArduinoJson-v4.1-old-layout.zip) for older versions
",15802263
642,False,False,2014-11-29T13:33:03Z,2014-11-29T13:35:59Z,"#### Changes compared to 3.4:
- Unified parser and generator API (issue #23)
- Updated library layout, now requires Arduino 1.0.6 or newer

**BREAKING CHANGE**: API changed significantly, see `doc/Migrating to the new API.md`.

Requires Arduino IDE 1.0.6 or above.
",15802263
643,False,True,2014-11-11T17:49:08Z,2014-11-11T17:51:51Z,"#### Changes compared to 3.4:
- Unified parser and generator API (issue #23)
- Updated library layout, now requires Arduino 1.0.6 or newer

**BREAKING CHANGE**: API changed significantly, see `doc/Migrating to the new API.md`.
",15802263
644,False,False,2014-09-09T19:35:09Z,2014-09-09T19:36:47Z,"## Changes compared to 3.3:
- Fixed escaped char parsing (issue #16)

## How to install?

To use this library with the Arduino IDE, you need to unzip the attached file into

```
<path_to_your_sketches>/libraries/
```
",15802263
645,False,False,2014-09-01T19:44:39Z,2014-09-01T19:46:50Z,"## Changes compared to 3.2:
- Added indented output for the JSON generator, see example bellow.
- Added `IndentedPrint`, a decorator for `Print` to allow indented output

Example:

```
JsonOject<2> json;
json[""key""] = ""value"";
json.prettyPrintTo(Serial);
```

## How to install?

To use this library with the Arduino IDE, you need to unzip the attached file into

```
<path_to_your_sketches>/libraries/
```
",15802263
646,False,False,2014-08-04T13:25:04Z,2014-08-04T13:26:58Z,"## Changes compared to 3.1:
- Fixed a bug when adding nested object in `JsonArray` (bug introduced in v3.1).

## How to install?

To use this library with the Arduino IDE, you need to unzip the attached file into

```
<path_to_your_sketches>/libraries/
```
",15802263
647,False,False,2014-08-03T13:54:49Z,2014-08-03T13:59:26Z,"## Changes compared to 3.0:
- Calling `Generator::JsonObject::add()` twice with the same `key` now replaces the `value`
- Added `Generator::JsonObject::operator[]`, see bellow the new API
- Added `Generator::JsonObject::remove()`

Old generator API:

```
JsonObject<3> root; 
root.add(""sensor"", ""gps"");
root.add(""time"", 1351824120);
root.add(""data"", array);
```

New generator API:

```
JsonObject<3> root; 
root[""sensor""] = ""gps"";
root[""time""] = 1351824120;
root[""data""] = array;
```

## How to install?

To use this library with the Arduino IDE, you need to unzip the attached file into

```
<path_to_your_sketches>/libraries/
```
",15802263
648,False,False,2014-07-23T18:21:03Z,2014-07-23T18:27:20Z,"Changes compared to 2.1:
- New parser API, see bellow
- Renamed `JsonHashTable` into `JsonObject`
- Added iterators for `JsonArray` and `JsonObject`

Old parser API:

```
JsonHashTable root = parser.parseHashTable(json);

char*  sensor    = root.getString(""sensor"");
long   time      = root.getLong(""time"");
double latitude  = root.getArray(""data"").getDouble(0);
double longitude = root.getArray(""data"").getDouble(1);
```

New parser API:

```
JsonObject root = parser.parse(json);

char*  sensor    = root[""sensor""];
long   time      = root[""time""];
double latitude  = root[""data""][0];
double longitude = root[""data""][1];
```

See [this blog post for more details](http://blog.benoitblanchon.fr/arduino-json-v3-0/)

To use this library with the Arduino IDE, you need to unzip the attached file into

```
<path_to_your_sketches>/libraries/
```
",15802263
649,False,False,2014-07-15T18:04:53Z,2014-07-15T18:09:45Z,"Changes compared to 2.0:
- Fixed case `#include ""jsmn.cpp""` which caused an error in Linux (issue #6)
- Fixed a buffer overrun in JSON Parser (issue #5)

To use this library with the Arduino IDE, you need to unzip the attached file into

```
<path_to_your_sketches>/libraries/
```
",15802263
650,False,False,2014-07-09T18:50:35Z,2014-07-09T18:57:00Z,"Changes compared to 1.2:
- Added JSON encoding.

**Breaking change**: you need to add the following line at the top of your program.

```
using namespace ArduinoJson::Parser;
```
",15802263
651,False,False,2014-03-03T13:03:55Z,2014-03-03T13:05:32Z,"Changes compared to 1.1:
- Example: changed `char[] json` into `char json[]`. Damn it C# !

To use this library with the Arduino IDE, you need to unzip the attached file into

```
<path_to_your_sketches>/libraries/
```
",15802263
652,False,False,2014-02-27T18:54:19Z,2014-02-27T19:02:18Z,"Changes compared to 1.0:
- Example: changed `char* json` into `char json[]` so that the bytes are not write-protected
- Fixed parsing bug when the JSON contains multi-dimensional arrays

To use this library with the Arduino IDE, you need to unzip the attached file into

```
<path_to_your_sketches>/libraries/
```
",15802263
653,False,False,2014-01-23T11:59:28Z,2014-02-17T12:28:24Z,"To use this library with the Arduino IDE, you need to unzip the attached file into `<path_to_your_sketches>/libraries/`

Then restart Arduino IDE and the sample program will be available in the menu. 
![image](https://f.cloud.github.com/assets/5462433/2185171/b8fe1316-97cf-11e3-8c6b-a6ce69a80684.png)
",15802263
654,False,False,2020-03-09T19:33:27Z,2020-03-09T21:20:07Z,"This is a bugfix release to fix some issues with the previous release.

Changelog:
- Fix pairing issue with recent OpenSSL version (like on Buster)
- Fix double mouse when running in desktop session
- Add -viewonly option

NOTE: Packages for Raspbian Buster are now also available",15691240
655,False,False,2019-05-27T17:51:03Z,2019-05-27T18:12:41Z,"Bugfix release to support GFE 3.19

Changelog:
- Support for GFE 3.19",15691240
656,False,False,2019-05-01T21:13:34Z,2019-05-01T21:32:24Z,This is a bugfix release to fix the segmentation fault on startup.,15691240
657,False,False,2019-04-29T17:09:45Z,2019-04-29T17:35:24Z,"This is a bugfix release to fix some issues with the previous release.

Changelog:
- Support for GFE 3.16
- Updated gamepad mappings
- Support for mouse wheels and two additional buttons
- Add -quitappafter to automatically stop app when closing connection
- Experimental rumble support
- Updated moonlight-common-c with performance improvements

IMPORTANT: Support for Raspbian Jessie has been dropped",15691240
658,False,False,2018-08-11T15:43:13Z,2018-08-11T16:29:52Z,"This is a bugfix release to fix some issues with the previous release.

Changelog:
- Update gamepad mapping and some matching fixes
- Update FFMpeg code and remove support for VDPAU as it needs to be rewritten
- Initial Rockchip video decoding support
- Updated moonlight-common-c with some audio enhancements",15691240
659,False,False,2018-01-14T14:09:59Z,2018-01-14T17:19:36Z,"Bugfix release for video corruption at Raspberry Pi with Moonlight Embedded 2.4.5

Changelog:
- Fix video corruption on Raspberry Pi",15691240
660,False,False,2018-01-13T14:49:46Z,2018-01-13T15:39:29Z,"Bugfix release to support GFE 3.12

Changelog:
- RTSP over TCP for GFE 3.12",15691240
661,False,False,2017-10-24T18:52:11Z,2017-11-03T22:51:06Z,"This is a bugfix release to fix some issues with the previous release.

Changelog:
- Add map command for easy creation of mappings
- Provide binary package for Raspbian Stretch
- Fix input when using triggers
- Fix for GFE 3.10
",15691240
662,False,False,2017-08-16T18:08:40Z,2017-08-16T18:26:59Z,"This is a bugfix release to fix some issues with the previous release.

Changelog:
- Correctly use XBox fallback mapping
- Fix compile issues for users without VAAPI
",15691240
663,False,False,2017-07-02T11:38:48Z,2017-07-02T12:03:05Z,"This is a bugfix release to fix some issues with the previous version.

Changelog:
- Fix crashes when using incorrect mappings
- Fix D-Pads Hat usage in mappings
- Provide default mapping for unknown gamepads",15691240
664,False,False,2017-06-19T20:45:14Z,2017-06-19T21:20:30Z,"This is a bugfix release to fix some issues with the previous version.

Changelog
- Added VAAPI support to X11 video output
- Add support for SDL_GAMECONTROLLERCONFIG for gamepad mapping
- Add some debug information about inputs and mapping
- Fix bug with digital trigger buttons
- Allow custom resolutions when using --unsupported
- Don't require mapping for keyboard and mouse
- Fix some build issues on some platforms
",15691240
665,False,False,2017-06-11T16:32:46Z,2017-06-11T19:35:23Z,"A new release with lots of bugfixes and support for VDPAU acceleration.

Changelog
- Use SDL2 style gamepad mappings and therefore map function is dropped
- Compatibility fixes for OpenSSL 1.1.0
- Added X11 video output as SDL2 replacement
- Added VDPAU support to X11 video output
- Small latency improvements
- Fixes for Forward error correction
- Added verbose and debug options to minimize console output
- Added quit button combo of Play-Back-RightShoulder-LeftShoulder",15691240
666,False,False,2017-03-18T17:23:49Z,2017-03-18T17:34:41Z,"This release added support for forward error correction to reduce artifacts during streaming. Also some extra optimizations have been added.

Changelog
- Support for Forward Error Correction
- Correct number of controllers seen by Gamestream host
- Optimizations for iMX.6 and software video decoder
- Correction of keyboard key codes
- New releases are signed with GPG

IMPORTANT: Support for Raspbian Wheezy has been dropped",15691240
667,False,False,2016-12-14T21:46:01Z,2016-12-20T14:44:17Z,"Bugfix release to support GFE 3.2

Changelog:
- Small headers on GFE 3.2
- Support for libCEC 4.0
",15691240
668,False,False,2016-10-06T15:17:25Z,2016-10-06T15:54:01Z,"Bugfix release to support GFE 3.0.7

Changelog:
- Skip frameheader on GFE 3.0.7
",15691240
669,False,False,2016-05-17T17:58:48Z,2016-05-17T18:30:39Z,"Small bugfix release to fix some connection problems because of Enet.

Changelog:
- Workaround for decoding special case on C1 (1080p, H264)
- Better Enet connection re-transmission
- Small audio/video queue optimizations
",15691240
670,False,False,2016-04-03T12:34:15Z,2016-04-03T14:15:22Z,"This release have added some new audio and video outputs and contains a lot of bugfixes.

Changelog:
- Supports new protocol version 7 for GFE 2.11
- Added Amlogic hardware video decoder backend
- Added OMX audio output for surround output on the Raspberry Pi
- Initial support for HEVC decoding (Amlogic and FFMpeg only)
- More debug information in application output
- Compaitable with newer FFMpeg API
- Fixed pairing issues
- Fixed integer overflow in deadzone calculation

IMPORTANT: Support for IPv6 is dropped and this version isn't (yet) available in my Archlinux ARM repository.
",15691240
671,False,False,2016-03-01T19:16:20Z,2016-03-01T20:03:41Z,"Bugfix release to fix issues with GFE 2.10.

Changelog:
- Fixed pairing issues
- Fixed problems with dynamic resolution on GFE 2.10
",15691240
672,False,False,2016-02-19T21:08:17Z,2016-02-19T21:30:24Z,"Bugfix release to fix issue which make Moonlight Embedded stop working on newer version of GFE.

Changelog:
- Support for GFE 2.10
- Fixes for gamepads
",15691240
673,False,False,2015-11-24T18:29:40Z,2015-11-24T20:20:22Z,"Bugfix release to fix issues which make Moonlight Embedded stop working newer version of GFE.

Changelog
- Fixes for GFE 2.7 and GFE 2.8
- Fix iMX.6 decoding
- Support for surround sound on GFE 2.8
- Support for Jessie added in repository
- Config options can now contain spaces
",15691240
674,False,False,2015-08-15T09:40:02Z,2015-08-15T09:41:51Z,"Bugfix release to fix issues which make Moonlight Embedded stop working on some platforms.

Changelog
- Platform fixes for working audio and video
- Crash when cache directory doesn't exist
- Input fixes for autodetection
- Enable CEC on ArchLinux ARM builds
- Enable direct submit optimization for audio and video decoders
- Support enabling remote optimization in GFE
",15691240
675,False,False,2015-08-14T14:25:52Z,2015-08-14T14:22:39Z,"This release does some performance updates and can now also run on non-embedded Linux systems with the software decoder and SDL.

Changelog
- Debian package compatible with OSMC
- Support for configuration files
- Performance updates
- Code split up in libgamestream and moonlight-embedded
- Support for software decoder with SDL interface (SDL nightly required)
- Added manpage
- Lots of bugfixes
",15691240
676,False,False,2015-07-07T19:23:36Z,2015-07-07T19:25:39Z,"This release fixes a few input bugs and add support for CEC, but is currently disabled in the packages.

Changelog
- More (untested) gamepad mappings included
- Bigger range for gamepad sticks
- Better error messaging
- Input detection bug fixed
",15691240
677,False,False,2015-06-20T04:11:09Z,2015-06-20T10:53:03Z,"This is a small bugfix release to support newer versions of GFE.

Fixed
- IPv6 support
- Geforce Experience 2.4.5.54 support
",15691240
678,False,False,2015-06-12T16:50:57Z,2015-06-12T16:58:16Z,"Moonlight Embedded is a complete rewrite of Limelight Embedded written in C instead of Java for much better performance. All the functionality of the java version has been ported.

IMPORTANT: This is the first release of the C version and will probably be less stable than the earlier versions.
",15691240
679,False,False,2015-03-29T21:20:13Z,2015-03-29T21:30:49Z,"This fixed some bugs of earlier versions and has some performance enhancements. Audio performance is much improved by using the Opus 1.1.1 beta.

Enhancements
- Support multiple controllers
- Support keyboard modifiers

Fixed
- Integer overflows in gamepad code
- Correct handling of triggers
- Less audio stuttering

Fixed
- Support again Java 7

IMPORTANT: This update REQUIRES GeForce Experience 2.1.1 or higher. Streaming will not work until you update your PC to GFE 2.1.1 or higher.
",15691240
680,False,False,2015-01-23T11:22:56Z,2015-01-23T11:39:31Z,"Updated support for GFE versions higher then 2.2.2

Enhancements
- Use newer protocol version

IMPORTANT: This update REQUIRES GeForce Experience 2.2.2 or higher. Streaming will not work until you update your PC to GFE 2.2.2 or higher.
",15691240
681,False,False,2015-01-03T17:34:29Z,2015-01-03T21:47:25Z,"This version fixed a bug with GFE versions higher then 2.3.

Enhancements
- Support own opus build
- Some fixes for gamepads

Fixed
- Support recent GFE versions
",15691240
682,False,False,2014-09-21T21:33:00Z,2014-09-21T21:39:45Z,"The Limelight Embedded 1.1 release contains some bugs to make it not work. So hopefully it now works again.

Fixed
- Working again

IMPORTANT: This update REQUIRES GeForce Experience 2.1.1 or higher. Streaming will not work until you update your PC to GFE 2.1.1 or higher.
",15691240
683,False,False,2014-09-20T14:47:55Z,2014-09-20T15:02:01Z,"This release contains some needed changes for GFE 2.1.2 and other fixes.

Fixed
- Support for GeForce Experience 2.1.2
- East button wrongly mapped by mapping command
- MDNS PC discovery

Enhanced
- Less events and thereby better latency for input devices
- Support for mousewheel

IMPORTANT: This update REQUIRES GeForce Experience 2.1.1 or higher. Streaming will not work until you update your PC to GFE 2.1.1 or higher.
",15691240
684,False,False,2014-09-02T17:28:44Z,2014-09-02T17:39:38Z,"This release added support for Cubox-i/Hummingboard and solves latency problems with some gamepads which issues a lot of events.

Fixed
- High latency with some input devices

Enhanced
- Support for Cubox-i/Hummingboard

IMPORTANT: This update REQUIRES GeForce Experience 2.1.1 or higher. Streaming will not work until you update your PC to GFE 2.1.1 or higher.
",15691240
685,False,False,2014-08-09T12:16:31Z,2014-08-09T12:29:27Z,"This bugfix release fixes a bug which causes long drops of packages.

Fixed
- Fix long drops in audio and video

IMPORTANT: This update REQUIRES GeForce Experience 2.1.1 or higher. Streaming will not work until you update your PC to GFE 2.1.1 or higher.
",15691240
686,False,False,2014-08-06T23:02:53Z,2014-08-06T23:08:28Z,"New version of Geforce Experience broke streaming

Fixed
- Support for Geforce Experience 2.1.1

Enhanced
- Less audio and video hickups

IMPORTANT: This update REQUIRES GeForce Experience 2.1.1 or higher. Streaming will not work until you update your PC to GFE 2.1.1 or higher.
",15691240
687,False,False,2014-06-28T20:59:04Z,2014-06-28T21:11:11Z,"The previous release had some really problematic latency problems which maked Limelight Pi almost useless for gamestreaming. This had been fixed in this new release and now the latency is almost completely removed.

Fixed
- Audio and video latency

IMPORTANT: This update REQUIRES GeForce Experience 2.0.1 or higher. Streaming will not work until you update your PC to GFE 2.0.1 or highte.
",15691240
688,False,False,2014-06-25T21:56:44Z,2014-06-26T15:43:24Z,"Thanks to the hard work of the Limelight guys. Limelight Pi now also works with the newest version of Geforce Experience 2.1. Because of the use of encryption Limelight Pi has to generate a keypair the first time it runs. This could take some time on the slow Raspberry Pi cpu.

Enhanced
- Can use custom resolution, bitrate and packetsize

Fixed
- Use default soundcard instead of the first one (should fix HDMI sound)
- D-Pad now uses correct ranges
- Works properly with GFE 2.1 now

Known bugs
- Letterbox when using composite
- 1080p and other high resolutions not working

IMPORTANT: This update REQUIRES GeForce Experience 2.0.1. Streaming will not work until you update your PC to GFE 2.0.1.
",15691240
689,False,False,2014-05-08T13:50:49Z,2014-05-09T12:57:39Z,"Thanks to the hard work of the Limelight guys. Limelight Pi now also works with the newest version of Geforce Experience 2.0.1. Also there are some minor fixes in input handeling

Enhanced
- Performance and image quality improvements

Fixed
- Some missing keys and buttons for input added
- Works properly with GFE 2.0.1 now

Known bugs
- Letterbox when using composite
- 1080p not working

IMPORTANT: This update REQUIRES GeForce Experience 2.0.1. Streaming will not work until you update your PC to GFE 2.0.1.
",15691240
690,False,False,2014-03-31T18:12:45Z,2014-03-31T18:43:34Z,"Lot's of fixes in video and gamepad subsystems. Video is fixed for newer firmware versions but only for 720p. 1080p is currently not working.

Enhanced
- Deadzone handling for gamepads

Fixed
- Video output on newer firmware versions
- Unneeded video buffer removed

Known bugs
- Letterbox when using composite
- 1080p not working.
",15691240
691,False,False,2014-02-18T16:47:59Z,2014-02-19T15:50:29Z,"This release notify about some non-working system configurations. Audio is fixed when Pulseaudio is enabled and the latency is again improved.

Enhanced
- Notify about some non-working system configurations

Fixed
- Few bugs in gamepad code
- Lower video latency
- Circumvent Pulseaudio if enabled

Known bugs
- Letterbox when using composite
",15691240
692,False,False,2014-01-22T14:28:43Z,2014-01-22T14:36:33Z,"In this release the buffers are made smaller. This improve the experience a lot on wired but can make things worse on wireless.

Fixed
- Bug in gamepad mapping (still not tested)
- Lower audio and video latency

Known bugs
- Letterbox when using composite
",15691240
693,False,False,2014-01-19T14:46:21Z,2014-01-19T14:55:12Z,"Fixed
- Support for gamepads (not tested)
- Updated Limelight-common
- Automatically use all input devices 

Known issues
- Audio delay
- Letterbox when using composite
",15691240
694,False,False,2014-01-08T22:20:29Z,2014-01-08T22:28:08Z,"First alpha release of Limelight-pi.

Known issues
- Gamepads are currently unsupported
",15691240
695,False,False,2018-03-04T12:21:27Z,2019-09-27T09:12:15Z,"* Use zxing:core 3.3.2 by default (#360).
* Minimum SDK version 19, or 14 by using zxing:core 3.3.0.
* Fix preview race condition (#324).
* Request code can now specified per Intent, instead of globally (#287).
* More helpers to specify barcode formats.
* Allow scanning both inverted and non-inverted barcodes at the same time (alternating) (#326).
* More examples.
",6905493
696,False,False,2019-09-07T17:01:17Z,2019-09-27T09:12:25Z,"* Use androidx.
* Use zxing:core 3.4.0 by default.
* Minimum SDK version 24, downgradable to 14.
* Fix ArithmeticException.
* Fix ResultPoint locations when camera is mirrored.
",6905493
697,False,False,2017-03-20T13:05:11Z,2017-03-20T13:06:55Z,"* Allow changing the REQUEST_CODE value (#234).
* Add support for inverted scans (#235).
* Use zxing:core 3.3.0 by default (#265).

Fixes:

* Fix memory leak when using scan timeout (#283).
* Better handling of various camera errors (#241, #268, #270)",6905493
698,False,False,2016-10-16T18:51:59Z,2016-10-16T19:04:58Z,"Changes:
- Beep on scan is now controlled only by the media volume, and still plays
  even if the device is in ""silent mode"", as long as the media volume is not muted.
- The 150ms delay after scanning is removed.

Fixes:
- An issue where the beep sometimes played twice is fixed (#221).
- Fix rare crash (#209)
- Fix orientation lock issue (#181)
- Fix race condition with TextureView (#204)
",6905493
699,False,False,2016-06-05T17:16:02Z,2016-06-05T17:17:56Z,"- Add an optional timeout to cancel scanning. (#161)
- Rename CompoundBarcodeView to DecoratedBarcodeView.
- Add more internal documentation (comments).
",6905493
700,False,False,2016-02-06T14:43:26Z,2016-02-06T14:46:38Z,"- Improved preview scaling strategies, configurable between centerCrop, fitCenter, fitXY (#135)
- Fix issues with Android 6 permission support (#123)
- Fix camera initialization issues, specifically related to orientation changes (#133)
- More control over focus mode (#112)
- Keep drawing viewfinder frame after scanning / pausing (#134)
- More control over torch state, and save the state on orientation change (#136)
",6905493
701,False,False,2020-03-18T09:49:23Z,2020-03-19T08:27:32Z,"Introduce fast interpreter
Simplify interfaces of runtime initialization and destruction, and native symbol registration
Re-org memory allocation APIs, and add realloc function argument for memory allocator
Re-org platform's code structure and APIs to simplify the platform porting
Switch llvm to official version and enhance AoT relocation
Implement opcode counter for interpreter
",184654298
702,False,False,2020-03-05T13:46:24Z,2020-03-05T13:52:58Z,"Enable ARM and THUMB AOT support
Enable Android platform support 
Implement native function registration, auto native pointer check and address conversion
Modify API wasm_runtime_module_malloc() and wasm_runtime_lookup_function()
Update documents",184654298
703,False,False,2020-02-27T07:33:56Z,2020-02-27T07:43:34Z,"Enable SGX AOT
Update some build scripts
Refine block addr cache design",184654298
704,False,False,2020-02-18T07:57:21Z,2020-02-18T08:45:20Z,"Enable AoT and JIT feature, enable wamr compiler
Enable WAMR SDK
Change wasm_runtime_call_wasm() function prototype and native wrapper function prototype
Support app framework base library in assemblyscript
Improve performance of iwasm interpreter",184654298
705,False,False,2020-01-17T05:38:21Z,2020-01-21T05:16:11Z,"The last version before AoT is released, which only supports interpreter mode.",184654298
706,False,False,2019-11-27T02:52:12Z,2019-11-28T00:44:31Z,"Enable WASI, update linux-sgx makefile and add enclave sample, enhance wasm loader and update documents.",184654298
707,False,False,2019-11-01T17:14:31Z,2019-11-01T18:03:06Z,This fixes a small (in terms of lines of code) but substantial (in terms of GPIO usability) bug from the rewrite of the GPIO HIL.,36428094
708,False,False,2019-10-08T23:11:29Z,2019-10-08T23:22:35Z,"For Tock 1.4 we had five milestones for the release:

- #1230 (Docs: Add README.md to /libraries/enum_primitive)
- #1215 (Tracking: Unified Course)
- #1167 (UART HIL re-design)
- #1233, #1297 (GPIO HIL re-design)
- #1234 (Time HIL re-design)

The major changes are around updating HIL interfaces (UART, Time, and GPIO). Other changes include:

- Initial support for RISC-V architectures.
- Update to Userland-Kernel boundary interface.
- Add nucleo-based boards.
- Add ACD52832 board.
",36428094
709,False,True,2019-10-04T15:44:49Z,2019-10-04T16:00:58Z,"Updates:
- Queued callbacks that haven't been issued when the callback is canceled or replaced are now removed.
- PMP driver removed for arty-e21.
- Several documentation updates.",36428094
710,False,True,2019-09-25T16:17:35Z,2019-09-26T21:21:58Z,"Updates from RC1:

- Hail: Button GPIO pin number was corrected.
- Kernel: Clippy annotations were added.",36428094
711,False,True,2019-09-24T16:11:49Z,2019-09-24T16:12:50Z,"This is a feature-based release based on updates to three HILs: GPIO, UART, and
Time.

Other major changes:

- Initial support for RISC-V architectures.
- Update to Userland-Kernel boundary interface.
- Add nucleo-based boards.
- Add ACD52832 board.",36428094
712,False,False,2018-11-30T15:41:00Z,2018-11-30T18:33:41Z,"This is a large milestone-based release of Tock that encompasses numerous changes made by many contributors over the last five months. We set two main goals for this release which were tracked in the following issues:

- [#985] Make Tock Architecture Agnostic: The core Tock kernel should support running on non-Cortex-M platforms.
- [#1154] Userland UDP: There is now an interface to send and receive UDP packets from userland.

We re-architected the core kernel to (hopefully!) remove all assumptions that Tock is running on a Cortex-M platform, and moved all of the architecture-specific code to the `/arch` crates. This will enable Tock to run on other architectures in the future, like Cortex-MF or [RISC-V](https://github.com/tock/tock/issues/1135).

We also significantly improved the IPv6/6LoWPAN based networking stack in Tock (built on top of 802.15.4) to  enable UDP packet send and receive from userland. This is a promising step towards a full networking stack in Tock.

While we waited to complete these two goals before doing a release, numerous other changes were also made along the way. To briefly summarize:

- The `debug` module in the kernel now includes a generic `panic!()` routine used by many boards.
- The kernel `debug` module is now a direct user of a `UART` object rather than a psuedo-process. This provides more flexibility and simplifies the kernel internals.
- `Capabilities` are a new feature for controlling access to sensitive (but public) internal Tock APIs.
- The `ADC` HIL changed to handle different resolution ADCs.
- The `UART` HIL changed to include a `configure()` method.
- The randomness HILs now support multiple widths and entropy and RNG versions.
- Tock switched to the LLVM toolchain, removing the need for ARM gcc.

More details can be found in the `CHANGELOG` file.

Stability Guarantees
--------------------

This release does not include any new API stability guarantees.

Testing and Board Support
---------------------------

This release was [tested](https://github.com/tock/tock/issues/1201) on these platforms:

- nRF51DK
- nRF52DK
- Hail
- imix
- LaunchXL CC26x2",36428094
713,False,True,2018-11-30T15:41:00Z,2018-11-30T16:11:37Z,"More little fixes:

- Fix version handling when Tock is used from a .zip rather than git.
- Imix supports 4 processes.
- Few doc fixes.
- `make` in root lists boards properly.


",36428094
714,False,True,2018-11-29T23:25:59Z,2018-11-30T00:02:42Z,"This RC includes a couple changes:

- Fix nRF51 main.rs to work with recent Tock changes.
- Update the imix LED mapping to be more consistent with the PCB labels.",36428094
715,False,True,2018-11-29T15:22:03Z,2018-11-29T16:08:02Z,"This includes a couple minor fixes:

- Fixes for the imix kernel tests to bring them up-to-date.
- Fix pin mappings for nrf52dk platforms.
- Fixes in the configuration of the launchxl platforms.",36428094
716,False,True,2018-11-23T22:58:44Z,2018-11-26T19:59:16Z,Minor updates since RC1.,36428094
717,False,True,2018-11-19T23:12:28Z,2018-11-19T23:31:12Z,"First release candidate for testing Tock 1.3.

Primary Changes in this Release
--------------------------------

- [#985] Make Tock Architecture Agnostic: The core Tock kernel should support running on non-Cortex-M platforms.
- [#1154] Userland UDP: There is now an interface to send and receive UDP packets from userland.",36428094
718,False,False,2018-04-25T17:36:42Z,2018-04-25T17:38:15Z,"This is the second rolling release. This release includes 365 commits
with bug fixes and feature additions.

Major improvements over 1.0 include a new register interface, automatic
deep sleep for most SAM4L peripherals, and moving the BLE subsystem our
of the NRF5x crates.

Ports to the nRF52 development kit and Hail and imix, based on the Atmel
SAM4L, are considered stable and are backwards compatible with 1.0. An
initial port to the CC26xx series of platforms is included but not yet
stable. It also includes system call drivers that comply with the 1.0
system call ABI for process loading and:

  * Alarm
  * Console
  * LEDs
  * Buttons
  * GPIO
  * ADC
  * Ambient Temperature
  * Humidity",36428094
719,False,False,2018-02-09T21:31:11Z,2018-02-13T18:27:43Z,"This is the first rolling release. It includes ports to the nRF52
development kit and Hail and imix, based on the Atmel SAM4L. It also
includes system call drivers that comply with the 1.0 system call
ABI for process loading and:

  * Alarm
  * Console
  * LEDs
  * Buttons
  * GPIO
  * ADC
  * Ambient Temperature
  * Humidity
  * Luminance",36428094
720,False,False,2019-10-29T08:13:27Z,2019-10-29T18:43:34Z,,40078838
721,False,False,2019-10-27T10:19:26Z,2019-10-27T12:19:42Z,,40078838
722,False,False,2019-07-06T22:12:26Z,2019-07-06T21:31:01Z,,40078838
723,False,False,2019-03-26T07:27:27Z,2019-03-26T08:41:18Z,,40078838
724,False,False,2019-02-13T07:36:35Z,2019-02-13T08:47:23Z,,40078838
725,False,False,2019-02-11T21:11:43Z,2019-02-11T23:02:32Z,,40078838
726,False,False,2019-01-27T16:07:45Z,2019-01-27T17:43:22Z,,40078838
727,False,False,2019-01-05T13:40:15Z,2019-01-05T14:48:18Z,,40078838
728,False,False,2018-07-02T06:04:01Z,2018-07-01T21:45:50Z,"Fixes a few bugs, one of which should travis produce release artifacts again (which are missing for 0.8).

See the changelog for full details.",40078838
729,False,False,2018-02-04T09:04:35Z,2018-02-04T12:43:14Z,,40078838
730,False,False,2017-07-01T13:43:10Z,2017-07-01T17:39:35Z,,40078838
731,False,False,2017-05-16T21:17:59Z,2017-05-31T21:12:13Z,,40078838
732,False,False,2017-05-25T07:29:01Z,2017-05-31T20:53:11Z,,40078838
733,False,False,2017-05-30T21:20:04Z,2017-05-31T20:32:57Z,,40078838
734,False,False,2019-03-01T13:01:49Z,2019-03-01T14:06:25Z,,4237727
735,False,False,2015-03-07T21:27:12Z,2015-03-07T21:32:23Z,"Just a lot of code quality improvements. See CHANGELOG for more.
",4237727
736,False,False,2015-02-10T21:47:21Z,2015-03-01T18:49:32Z,"Final release of the 3.0 version.
",4237727
737,False,True,2015-01-27T17:09:03Z,2015-01-27T18:16:38Z,"First version of public Release Candidate for the new 3.x branch of HUGE (formerly php-login).
",4237727
738,False,False,2015-01-25T13:03:23Z,2015-01-25T13:04:55Z,"Final status of the ""old"" php-login 2.x branch. In January 2015 php-login 3.0 will be released, with a totally new architecture, lots of changes and a new name, so it's necessary to save the latest status of this project.

You'll find the new project under https://github.com/panique/huge

Changes to 2.1.0: I've removed the irritating link to ""new"" 2.1
",4237727
739,False,False,2015-01-22T22:01:46Z,2015-01-25T12:59:39Z,"Final status of the ""old"" php-login 2.x branch. In January 2015 php-login 3.0 will be released, with a totally new architecture, lots of changes and a new name, so it's necessary to save the latest status of this project.

You'll find the new project under https://github.com/panique/huge
",4237727
740,False,False,2014-04-21T21:25:20Z,2014-06-06T16:40:11Z,"This is the 2.0.1 release of the panique/php-login. Same like 2.0 beta pre-release from December 30th of 2013, but all the smaller fixes and improvements until April 20th 2014 are included. This release has been open to public for 5 months, no bugs so far.

There will be a 2.0.2 later in the year that contains a documentation / usage tutorial.
",4237727
741,False,True,2013-12-30T22:29:21Z,2014-01-01T11:17:17Z,"This repository has a longer history, from a tiny (and not very secure) SHA512 mostly frontend-inspired login script to a very popular collection of 4 similar scripts (that now have their own repositories), and with the beginning of 2014 I cleaned the entire project to make panique/php-login the new home of the most professional and most used ""professional mvc version"" of that script collection.

After a total refactoring, total restructuring and lots of improvements (more secure, more documented, more commented, Composer-based, PSR-1/2 code etc.) it's time for a proper release.

Welcome to the world, version 2.0!
",4237727
742,False,False,2013-11-16T14:17:06Z,2013-12-15T04:42:36Z,"In 2013, the php-login project contained 4 different login scripts. With the beginning of 2014 the project gets a massive makeover that includes the deletion of big parts of the current codebase. For historical reasons we will keep this code into this tag, ""archive-2013"".
",4237727
743,False,False,2013-03-04T20:16:44Z,2016-12-17T15:15:01Z,"| File | Summary | Uploaded | Size |
| --- | --- | --- | --- |
| prettify-small-4-Mar-2013.tar.bz2 | Minimized JS and CSS sources | Mar 4, 2013 | 32.09KB |
| prettify-4-Mar-2013.tar.bz2 | Bundle of source files, tests, and documentation | Mar 4, 2013 | 4.71MB |
",34408310
744,False,False,2013-02-25T15:54:09Z,2016-12-17T15:13:19Z,"| File | Summary | Uploaded | Size |
| --- | --- | --- | --- |
| prettify-small-25-Feb-2013.tar.bz2 | Minimized JS and CSS sources | Feb 25, 2013 | 22.89KB |
| prettify-25-Feb-2013.tar.bz2 | Bundle of source files, tests, and documentation | Feb 25, 2013 | 4.69MB |
",34408310
745,False,False,2011-06-01T23:42:22Z,2016-12-17T15:10:32Z,"| File | Summary | Uploaded | Size |
| --- | --- | --- | --- |
| prettify-1-Jun-2011.tar.bz2 | Bundle of source files, tests, and documentation. | Jun 2, 2011 | 96.83KB |
| prettify-small-1-Jun-2011.tar.bz2 | Minimized source files | Jun 2, 2011 | 17.27KB |
",34408310
746,False,False,2010-07-21T18:19:01Z,2016-12-17T15:09:39Z,"| File | Summary | Uploaded | Size |
| --- | --- | --- | --- |
| prettify-21-Jul-2010.zip | Zip of source, tests, and documentation | Jul 21, 2010 | 74.71KB |
| prettify-small-21-Jul-2010.zip | Minimized source files | Jul 21, 2010 | 15.9KB |
",34408310
747,False,False,2009-12-03T21:49:06Z,2016-12-17T15:08:55Z,"| File | Summary | Uploaded | Size |
| --- | --- | --- | --- |
| prettify-3-Dec-2009.zip | Zip of source, tests, and documentation | Dec 4, 2009 | 79.88KB |
| prettify-small-3-Dec-2009.zip | Minimized source files | Dec 4, 2009 | 13.78KB |
",34408310
748,False,False,2009-05-21T20:16:36Z,2016-12-17T15:08:04Z,"| File | Summary | Uploaded | Size |
| --- | --- | --- | --- |
| prettify-small-21-May-2009.zip | Minified source files | May 21, 2009 | 13.23KB |
| prettify-21-May-2009.zip | Source code, test files, and docs. | May 21, 2009 | 58.24KB |
",34408310
749,False,False,2009-01-09T04:37:06Z,2016-12-17T15:04:40Z,"| File | Summary | Uploaded | Size |
| --- | --- | --- | --- |
| prettify-8-Jan-2009.zip | Source code | Jan 9, 2009 | 29.81KB |
| prettify-small-8-Jan-2009.zip | Minified source files | Jan 9, 2009 | 12.39KB |
",34408310
750,False,False,2008-07-14T22:58:26Z,2016-12-17T15:02:49Z,"| File | Summary | Uploaded | Size |
| --- | --- | --- | --- |
| prettify-small-14-Jul-2008.zip | Minified source files | Jul 15, 2008 | 6.29KB |
| prettify-14-Jul-2008.zip | Source code | Jul 15, 2008 | 15.19KB |
",34408310
751,False,False,2008-07-06T00:59:33Z,2016-12-17T15:01:27Z,"| File | Summary | Uploaded | Size |
| --- | --- | --- | --- |
| prettify-5-Jul-2008.zip | Source files | Jul 6, 2008 | 14.23KB |
| prettify-small-5-Jul-2008.zip | Minified source files | Jul 6, 2008 | 5.5KB |
",34408310
752,False,False,2008-07-05T05:04:24Z,2016-12-17T15:00:23Z,"| File | Summary | Uploaded | Size |
| --- | --- | --- | --- |
| prettify-4-Jul-2008.zip | Source files | Jul 5, 2008 | 14KB |
| prettify-small-4-Jul-2008.zip | Minified source files | Jul 5, 2008 | 5.22KB |
",34408310
753,False,False,2007-08-31T10:43:42Z,2016-12-17T14:58:51Z,"| File | Summary | Uploaded | Size |
| --- | --- | --- | --- |
| prettify_31_Aug_2007.zip | javascript and CSS bundle | Aug 31, 2007 | 12.65KB |
| prettify-small_31_Aug_2007.zip | javascript and CSS bundle (comments stripped for smaller download) | Aug 31, 2007 | 4.71KB |
",34408310
754,False,False,2007-05-23T04:07:43Z,2016-12-17T14:57:23Z,"| File | Summary | Uploaded | Size |
| --- | --- | --- | --- |
| prettify-small_22_May_2007.zip | javascript and CSS bundle (comments stripped for smaller download) | May 23, 2007 | 5.75KB |
| prettify_22_May_2007.zip | javascript and CSS bundle (22 May 2007) | May 23, 2007 | 14.35KB |
",34408310
755,False,False,2007-04-02T18:39:54Z,2016-12-17T14:54:05Z,"| File | Summary | Uploaded | Size |
| --- | --- | --- | --- |
| prettify-small.zip | javascript and CSS bundle - smaller javascript | Apr 2, 2007 | 5.36KB |
| prettify.zip | javascript and CSS bundle - full (old) | Apr 2, 2007 | 13.11KB |
",34408310
756,False,False,2016-06-14T17:57:04Z,2016-06-14T17:57:32Z,"#### Fixed
- Fixed `CodeMirror not defined` error from broken dependency
",37743219
757,False,False,2016-06-09T20:42:10Z,2016-06-09T20:42:28Z,"#### Fixed
- This release contains no changes; rather, it's designed to replace somehow faulty code stored on NPM for version `1.11.0`
",37743219
758,False,False,2016-06-08T03:54:06Z,2016-06-08T03:54:21Z,"#### Improved
- Selected text now has the `CodeMirror-selectedtext` class added (#289)
- Word count now supports Cyrillic words (#351)
- Travis CI now tests against Node.js 6 (dbb1c258430779c56fd94e326f2c3b3800655baa)
- Clean up build process & use new CodeMirror Spell Checker structure (c8f23a3aa9fd6d240ee00253de02b2019ce47e32)

#### Fixed
- Remove stray `console.log()` code (#280)
- Fix `.toTextArea()` sometimes failing (#286)
- Prevent onclick event from bubbling (#345)
- Fix incorrect main files for `bower.json` (#326)
- Fix selection bug when toggling between side-by-side (#309)
- Fix CodeMirror bug with init text (#344)
- Fix line and word count on init (#299)
- Tweak README
",37743219
759,False,False,2016-03-15T02:39:46Z,2016-03-15T02:40:06Z,"#### New
- Optional prompts for inserting links and images
- Allow destroying SimpleMDE instance
- Added `forceSync` option to keep textarea up-to-date with SimpleMDE content

#### Improved
- Tweak wording of README
- Context aware code button (basically, it's smarter)
- Use SSL URLs when possible, and use SimpleMDE.com
- Update dependencies

#### Fixed
- Fix togglePreview not working sometimes (#196)
- Fix single line breaks bug
- Hide trailing separators respects hidden icons
- Fix localStorage detection for iOS private browsing
- Fix incorrect linting failure messages
",37743219
760,False,False,2016-01-22T20:43:19Z,2016-01-22T20:43:59Z,"#### New
- Fully customizable keyboard shortcuts
- Support for custom status bar items
- Placeholder option
- Undo/redo toolbar icons
- Clean block icon

#### Improved
- Added character counter to status bar
- Public getter for `getState()`

#### Fixed
- Now correctly highlights active buttons for headers, images, and links
- No longer registers duplicate update listeners for side by side mode
- Fix new table spacing
- Fix options undefined bug when clearing autosave value
- Fixed separator display/hide logic
",37743219
761,False,False,2015-12-05T06:55:28Z,2015-12-05T06:55:55Z,"#### New
- New function to clear autosaved value
- Icon for tables introduced
- Now you can customize the bold/italic markup using the new `blockStyles` option
- New `showIcons` setting for showing specific icons without customizing the full toolbar (like the existing `hideIcons` setting)

#### Improved
- Depend on specific `marked` version
- Autosave now checks that `localStorage` is available for all features (logs error if not)
- Prefixed all localStorage keys with `smde_` to prevent collisions
- Clearer documentation for creating custom icons in the toolbar
- Travis CI now tests in more Node.js versions
- Update dependencies

#### Fixed
- Fixed autosave briefly losing value
- Changed `unique_id` to camel case `uniqueId`
- Fixed scrollbar issues caused by inconsistent `z-index` values
- Fixed situations where escape key wouldn't work
- Icons no longer have a tab index in forms
- Fixed issue where the initial value would overwrite the loaded autosaved value
- Fixed autosave conditional
",37743219
762,False,False,2015-11-03T17:33:50Z,2015-11-03T17:34:09Z,"#### New
- `insertTexts`, a new option to customize the inserted text for links, images, and horizontal rules

#### Improved
- Now makes HTML syntax colorful while editing
- Improved gulp build process
- Updated dependencies

#### Fixed
- Fixed a bug with sprockets compilation related to the CSS
- Fixed gradient CSS bug
- Fixed README inaccuracy
",37743219
763,False,False,2015-10-20T20:42:32Z,2015-10-20T20:42:48Z,"#### New
- UMD JavaScript module design
- Bower support

#### Improved
- Lint JavaScript code
- Updated CodeMirror
- Add three state methods
  - `isPreviewActive()`
  - `isSideBySideActive()`
  - `isFullscreenActive()`

#### Fixed
- Disable fullscreen dependent features on mobile
- Prevent dropping binary files
- Fixed issue where preview would overlap fullscreen of another editor
- Fixed typos in README
",37743219
764,False,False,2015-09-26T03:15:09Z,2015-09-26T03:15:22Z,"#### Fixed
- Updated the version number and synced NPM correctly. Sorry about that.
",37743219
765,False,False,2015-09-25T22:11:16Z,2015-09-25T22:11:44Z,"#### Fixed
- Add missing `/dist/` files
",37743219
766,False,False,2015-09-25T21:57:12Z,2015-09-25T21:57:26Z,"#### New
- Intelligently download Font Awesome
- New option: `hideIcons`
- New option: `renderingConfig` (includes new option for code syntax highlighting)
  - _Compatibility issue: The old option `singleLineBreaks` has been moved here!_

#### Improved
- Tweak the README
- Dedicated CSS class for not disabling icons during preview (`no-disable`)
- Dedicated CSS class for hiding icons on mobile (`no-mobile`)

#### Fixed
- Fixed URL matching RegEx
- Hide fullscreen icon on mobile (too many issues)
",37743219
767,False,False,2015-09-17T06:21:32Z,2015-09-17T06:22:04Z,"#### New
- New option for custom preview rendering (supports both synchronous and asynchronous)
- New option for controlling how Markdown is parsed during editing

#### Improved
- Numerous README improvements
- gulp.js now downloads the latest dependencies during the build process

#### Fixed
- Fix icons being active during preview
- Fix toolbar height bug in fullscreen mode
- Add missing icon active state designation when cursor is inside a code block
- Fix Esc key not exiting full screen properly
- Fix autosave overwriting default content with empty string
- Inserting an image or link with no selection will now result in the correct cursor placement
- Toggling off bold or italic with no selection will also result in the correct cursor placement
- Prevent some error messages that may occur (see #91)
",37743219
768,False,False,2015-09-02T15:31:16Z,2015-09-02T15:31:34Z,"#### New
- Brand new side-by-side preview mode
- Four new built-in icons
  - Heading 1
  - Heading 2
  - Heading 3
  - Strikethrough

#### Improved
- Single line breaks are now allowed, in compliance with GFM (option to disable)
- Gulp now beautifies the JS and CSS files
- Improved heading bigger/smaller icon design
- Fade edges of fullscreen toolbar to indicate scroll on mobile

#### Fixed
- If element option is specified and no element is found, SimpleMDE with throw an error
- Fix toolbar button shift issue
- Fix issue with heading bigger adding an extra space
- Prevent scrolling the page behind fullscreen mode on mobile
",37743219
769,False,False,2015-08-28T22:08:15Z,2015-08-28T22:08:31Z,"#### Fixed
- Add missing `/dist/` files
",37743219
770,False,False,2015-08-28T18:40:54Z,2015-08-28T18:41:04Z,"#### New
- New icons: Heading, Heading Bigger, Heading Smaller
- New option for easy showing, hiding, and reordering of the built-in toolbar buttons

#### Improved
- Enhanced the performance and visual appearance of fullscreen (including mobile friendliness and some small bugs)
- Improved numerous areas of the README
- Updated CodeMirror to 5.6

#### Fixed
- Fixed bloated memory consumption issue (updated to CodeMirror Spell Checker 1.0.5)
- Changed gulp `dependencies` to `devDependencies`
",37743219
771,False,False,2015-08-11T17:05:35Z,2015-08-11T17:06:01Z,"#### Improved
- Restructure repository files and use gulp.js
- Allow value function to set blank value
- Allow initial value to be set via options

#### Fixed
- Fix bug where toolbar wouldn't be disabled when previewing if there were multiple editors present
- Fix bug where fullscreen wouldn't work when multiple editors were present
",37743219
772,False,False,2015-08-08T20:42:27Z,2015-08-08T20:42:41Z,"#### New
- Fullscreen mode. Available via a new default toolbar icon and the shortcut key `F11`.

#### Improved
- Update marked.js to 0.3.5
- Update CodeMirror to latest commits
- Update CodeMirror Spell Checker to 1.0.4
- Made the Markdown Guide responsive
- Tweaked README

#### Fixed
- Fix bug where cursor position could be off in a variety of situations
- Fix toolbar variable being overwritten
",37743219
773,False,False,2015-07-21T04:32:54Z,2015-07-21T04:33:06Z,"#### New
- Spell checking (with option to disable). Highlights all misspelled words in light red.

#### Improved
- Update to CodeMirror 5.5.1

#### Fixed
- More reliable tabbing, especially with Firefox
",37743219
774,False,False,2015-07-14T21:13:41Z,2015-07-14T21:14:04Z,"#### Improved
- Use GitHub Flavored Markdown for CodeMirror, to match the marked.js rendering, and to improve other aspects of Markdown composition.
",37743219
775,False,False,2015-07-14T17:54:59Z,2015-07-14T17:55:21Z,"#### New
- Markdown guide icon, which links to a new guide
- New icon: code block
- New icon: horizontal rule

#### Improved
- Tooltips for every icon that include their keyboard shortcut
- Option to disable tooltips
- Option to disable markdown guide icon
- Keyboard shortcut for previewing
- Ability to completely customize the toolbar icons
- Improved formatting of README

#### Fixed
- Selection issue with CSS and code
",37743219
776,False,False,2015-06-27T19:31:27Z,2015-06-27T19:31:41Z,"#### Fixed
- Autosave threw error when no saved value was found
",37743219
777,False,False,2015-06-26T21:20:26Z,2015-06-26T21:20:45Z,"#### New
- Auto Saving
- Customize the options (see documentation)

#### Improved
- Make tables clearer in preview
- Split Font Awesome out (in case you already use it)
- Remove ""Short description of image"" when adding image
- Make README more readable and organized
- Large improvement to tabbing
  - Tabbing list items now works
  - Shift-tabbing list items now works
  - Tabs respect indent with tabs vs. spaces
  - Tabs respect tab size
- Update to CodeMirror 5.4.1
- Update to Marked 0.3.3

#### Fixed
- Fixed toolbar not hiding
- Fixed inconsistencies with documentation
- Fixed line wrapping issues
- Fixed variable types
- Fixed README color coding
",37743219
778,False,False,2015-06-23T02:32:45Z,2015-06-23T02:33:53Z,"#### Improved
- Include comments at the top of distribution files with the author, packages details, version, and copyright information
",37743219
779,False,False,2015-06-23T02:25:59Z,2015-06-23T02:26:17Z,"#### Fixed
- Fix bug that broke bold and italics
",37743219
780,False,False,2015-06-23T01:28:27Z,2015-06-23T01:29:05Z,"#### Improved
- Disables buttons while previewing

#### Fixed
- Fixed a bug with the scroll section height before any content was added
",37743219
781,False,False,2015-06-22T21:53:42Z,2015-06-22T21:54:22Z,"#### Fixed
- Really fix the CSS compile bug
",37743219
782,False,False,2015-06-22T21:35:34Z,2015-06-22T21:36:56Z,"#### Fixed
- Fix compiled CSS
",37743219
783,False,False,2015-06-22T20:52:28Z,2015-06-22T20:54:41Z,"#### Fixed
- Fixed an issue where the selection would drift after deselecting italics
",37743219
784,False,False,2015-06-22T20:26:05Z,2015-06-22T20:26:52Z,"Renamed to SimpleMDE
",37743219
785,False,False,2015-06-22T18:30:38Z,2015-06-22T18:41:38Z,"Initial release
",37743219
786,False,False,2020-02-20T22:34:27Z,2020-02-25T18:56:08Z,"- Feature: adds support for multiple asset namespaces
- Feature: allows to whitelist including files",16514887
787,False,False,2019-03-20T18:56:11Z,2019-03-20T18:56:37Z,,16514887
788,False,False,2018-09-21T16:35:09Z,2018-09-21T16:35:50Z,,16514887
789,False,False,2018-08-21T05:40:24Z,2018-08-21T18:26:26Z,,16514887
790,False,False,2018-08-03T00:42:13Z,2018-08-03T00:43:23Z,,16514887
791,False,False,2018-07-09T22:41:48Z,2018-07-09T22:42:15Z,,16514887
792,False,True,2016-10-28T13:28:29Z,2016-10-28T15:35:07Z,"<h3>        Epic
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1142'>KAA-1142</a>] -         Use CTL in Kaa extensions
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1153'>KAA-1153</a>] -         Rework  REST API for user management
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1190'>KAA-1190</a>] -         Enable authentication key pair storage and retrieval strategies in SDKs
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1294'>KAA-1294</a>] -         Server upgrade scripts
</li>
</ul>
        

<h3>        Story
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-581'>KAA-581</a>] -         Capability to remove users
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-635'>KAA-635</a>] -         [C SDK] Implement secure KaaTCP transport channel 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-784'>KAA-784</a>] -         Implement documentation hosting in gh-pages
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-799'>KAA-799</a>] -         [C++ SDK] Add SDK API to retrieve the endpoint keyHash
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-812'>KAA-812</a>] -         [C SDK] Improve build system
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-977'>KAA-977</a>] -         Remove deprecated REST API call methods that are based on ApplicationId instead of Application Tokens
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-991'>KAA-991</a>] -         Aggregate maven build profiles using environment variables
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1030'>KAA-1030</a>] -         Ability to delete endpoints
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1047'>KAA-1047</a>] -         Migration instructions from Kaa 0.8.1 to 0.9.0
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1074'>KAA-1074</a>] -         Remove binary files from repository
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1099'>KAA-1099</a>] -         Accept a JSON configuration file without the __uuid field
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1108'>KAA-1108</a>] -         Auto-generate REST API documentation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1134'>KAA-1134</a>] -         Switching between MariaDB and PostgreSQL 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1143'>KAA-1143</a>] -         CTL in Configuration management extension
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1144'>KAA-1144</a>] -         CTL in Data collection extension
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1145'>KAA-1145</a>] -         CTL in Notifications extension
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1146'>KAA-1146</a>] -         CTL in Events extension
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1183'>KAA-1183</a>] -         [C SDK] Allow overriding xtensa-lx106-elf-gcc path
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1186'>KAA-1186</a>] -         Add support for ruby2.0 in create_global_toc.rb
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1192'>KAA-1192</a>] -         Fix shellcheck errors
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1193'>KAA-1193</a>] -         Create nix expression for docs
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1194'>KAA-1194</a>] -         Create REST method for fetching credentials status
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1196'>KAA-1196</a>] -         Forbid tenant admin to change user&#39;s profile.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1197'>KAA-1197</a>] -         Add authorization checks when changing user&#39;s credentials.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1199'>KAA-1199</a>] -         Remove redundant &quot;tempPassword&quot; field from user&#39;s profile.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1202'>KAA-1202</a>] -         Improve functionality for user profile editing.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1203'>KAA-1203</a>] -         [C SDK] Support failover when KAATCP_CONNACK_REFUSE_BAD_CREDENTIALS is received
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1204'>KAA-1204</a>] -         Add sanity check for input parameters in profile editing method.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1205'>KAA-1205</a>] -         Unable to pass &quot;Credential service&quot; when creating application via REST API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1207'>KAA-1207</a>] -         DefaultProfileContainer in Java SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1229'>KAA-1229</a>] -         [C++ SDK] SDK as CMake sub project
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1231'>KAA-1231</a>] -         [Java] Client authentication key pair generation runtime parameter
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1232'>KAA-1232</a>] -         [C++] Client authentication key pair generation build parameter
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1233'>KAA-1233</a>] -         [C] Client authentication key pair generation build parameter
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1234'>KAA-1234</a>] -         [Objective-C] Client authentication key pair generation build paramether
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1237'>KAA-1237</a>] -         Docker deployment improvements
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1239'>KAA-1239</a>] -         Add support for github pages in documentation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1252'>KAA-1252</a>] -         Pin Nixpkgs version
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1256'>KAA-1256</a>] -         Separate Tenant and User management
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1279'>KAA-1279</a>] -         Apply formatting to all java code and introduce code formatting guidelines
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1281'>KAA-1281</a>] -         Kaa node should block startup process if zookeeper is unavailable.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1295'>KAA-1295</a>] -         Upgrade scripts for CTL in configuration management extension 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1296'>KAA-1296</a>] -         Upgrade scripts for CTL in notification management extension
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1297'>KAA-1297</a>] -         Upgrade scripts for CTL in data collection management extension
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1298'>KAA-1298</a>] -         Upgrade scripts for CTL in events extension
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1299'>KAA-1299</a>] -         Upgrade script to support Base64 encoding of binary arrays in all avro records
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1316'>KAA-1316</a>] -         [Objective-C] Revise Podfile
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1317'>KAA-1317</a>] -         [C SDK] Remove openssl dependency
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1319'>KAA-1319</a>] -         [C++ SDK] Do not rely on environment variables in CMake modules
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1326'>KAA-1326</a>] -         [Objective-C] Add ability to install multiple Kaa application on one device
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1334'>KAA-1334</a>] -         Disable support of CDAP log appender
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1336'>KAA-1336</a>] -         Retrieve configuration of specific endpoint
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1337'>KAA-1337</a>] -         Retrieve user specific configuration
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1338'>KAA-1338</a>] -         Integrate EP SDK docs into gh-pages documentation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1349'>KAA-1349</a>] -         Use minimum cmake for travis tests
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1373'>KAA-1373</a>] -         [C++ SDK] &quot;Connection has been established&quot; detector
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1377'>KAA-1377</a>] -         Bind on unlimited number of public ports
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1381'>KAA-1381</a>] -         Create bash script for migration 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1389'>KAA-1389</a>] -         [C SDK] Update code style
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1392'>KAA-1392</a>] -         [C++ SDK] QNX 6.5.0 support
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1395'>KAA-1395</a>] -         Add ability to retrieve user specific configuration from web UI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1407'>KAA-1407</a>] -         Simplify git flow
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1415'>KAA-1415</a>] -         [C SDK] KAA_RUNTIME_KEY_GENERATION=OFF issue on posix
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1418'>KAA-1418</a>] -         [Objective-C] Change XCode project structure to use Podspec file
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1430'>KAA-1430</a>] -         [C SDK] Introduce generic error code
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1431'>KAA-1431</a>] -         Configuration parameter for default notification TTL
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1460'>KAA-1460</a>] -         Rename the &#39;Admin Console&#39; to &#39;Administration UI&#39;
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1466'>KAA-1466</a>] -         [REST] add parameter to method editUser to enable/disable sending temp password
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1476'>KAA-1476</a>] -         [C SDK] Add macOS build on Travis
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1488'>KAA-1488</a>] -         Script for auto-generating SDK docs
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1489'>KAA-1489</a>] -         Publish 0.10.0 documentation in gh-pages
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1521'>KAA-1521</a>] -         Only scroll TOC in the documentation sidebar
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1534'>KAA-1534</a>] -         Release-0.10.0 preparation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1537'>KAA-1537</a>] -         Fix kaa repository id typo
</li>
</ul>
    

<h3>        Task
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-159'>KAA-159</a>] -         Document the log record header schema
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-290'>KAA-290</a>] -         Add a page on device provisioning, endpoint registration and authentication
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-676'>KAA-676</a>] -         Cross-compilation guide for C SDK (Intel Edison) on Linux platform
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-677'>KAA-677</a>] -         Compilation guide for C++ SDK (Intel Edison) on Linux platform
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-684'>KAA-684</a>] -         Cross-compilation guide for C SDK (Beaglebone) on Linux platform
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-685'>KAA-685</a>] -         Cross-compilation guide for C++ SDK (Beaglebone) on Linux platform
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-700'>KAA-700</a>] -         Administration guide
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-702'>KAA-702</a>] -         Specify version of testing environment for each platform&#39;s instruction
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-979'>KAA-979</a>] -         Improve welcome github page content
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-997'>KAA-997</a>] -         [C SDK] Create contributing and code style guide
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1077'>KAA-1077</a>] -         [C++ SDK] Update Raspberry Pi cross-compilation guide
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1113'>KAA-1113</a>] -         Documentation contribution and style guide (gh-pages)
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1114'>KAA-1114</a>] -         [C SDK] Create porting guide
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1121'>KAA-1121</a>] -         Update installation documentation for Ubuntu 16.04
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1123'>KAA-1123</a>] -         Migration instructions from Kaa 0.9.0 to 0.10.0
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1124'>KAA-1124</a>] -         Documentation structure and stubs (gh-pages)
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1125'>KAA-1125</a>] -         Architecture overview
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1126'>KAA-1126</a>] -         Programming guide -&gt; System overview
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1127'>KAA-1127</a>] -         Programming guide -&gt; Common Type Library (CTL)
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1128'>KAA-1128</a>] -         Programming guide -&gt; Endpoint profiles
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1129'>KAA-1129</a>] -         Programming guide -&gt; Endpoint groups
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1130'>KAA-1130</a>] -         Programming guide -&gt; Data collection
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1131'>KAA-1131</a>] -         Programming guide
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1132'>KAA-1132</a>] -          Programming guide -&gt; Using Kaa endpoint SDKs -&gt; Java    
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1133'>KAA-1133</a>] -         Programming guide -&gt; Your first Kaa application (C code)
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1135'>KAA-1135</a>] -         Programming guide -&gt; Using Kaa endpoint SDKs
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1136'>KAA-1136</a>] -         Programming guide -&gt; Using Kaa endpoint SDKs -&gt; C SDK usage guides and pages
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1137'>KAA-1137</a>] -         Programming guide -&gt; Using Kaa endpoint SDKs -&gt; C SDK usage guides and pages -&gt; Linux
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1138'>KAA-1138</a>] -         Customization guide -&gt; How to contribute
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1139'>KAA-1139</a>] -         Programming guide -&gt; Using Kaa endpoint SDKs -&gt; C SDK usage guides and pages -&gt; ESP8266
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1141'>KAA-1141</a>] -         Getting started
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1147'>KAA-1147</a>] -         Programming guide -&gt; Using Kaa endpoint SDKs -&gt; C++ SDK usage guides and pages
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1148'>KAA-1148</a>] -         Programming guide -&gt; Using Kaa endpoint SDKs -&gt; C++ SDK usage guides and pages -&gt; Linux
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1149'>KAA-1149</a>] -         Programming guide -&gt; Using Kaa endpoint SDKs -&gt; C++ SDK usage guides and pages -&gt; Raspberry PI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1157'>KAA-1157</a>] -         Update documentation design
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1160'>KAA-1160</a>] -         Glossary
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1165'>KAA-1165</a>] -         Add a page on endpoint ownership
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1166'>KAA-1166</a>] -         Add a page on configuration management
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1167'>KAA-1167</a>] -         Add a page on notifications
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1168'>KAA-1168</a>] -         Add a page on Events
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1169'>KAA-1169</a>] -         Add a page on Using endpoint SDKs -&gt; C -&gt; Texas Instruments CC3200
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1170'>KAA-1170</a>] -         Add a page on Using endpoint SDKs -&gt;  Objective-C 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1173'>KAA-1173</a>] -         Add a page on Administration guide -&gt; System installation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1176'>KAA-1176</a>] -         Add page on Customization guide -&gt; Customizable system components -&gt; Log appenders
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1177'>KAA-1177</a>] -         Add a page on Customization guide -&gt; Customizable system components -&gt; Owner verifiers
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1178'>KAA-1178</a>] -         Administration guide -&gt; System installation -&gt; Cluster setup guide
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1179'>KAA-1179</a>] -         Administration guide -&gt; System installation -&gt; Single node installation guide
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1185'>KAA-1185</a>] -         Fix front metter
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1189'>KAA-1189</a>] -         Add environment setup instructions for documentation preview
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1195'>KAA-1195</a>] -         Programming guide -&gt; Using Kaa endpoint SDKs -&gt; C -&gt; UDOO
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1198'>KAA-1198</a>] -         Programming guide -&gt; Using Kaa endpoint SDKs -&gt; C -&gt; Raspberry Pi
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1200'>KAA-1200</a>] -         Programming guide -&gt; Using Kaa endpoint SDKs -&gt; C -&gt; Snappy Ubuntu Core
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1212'>KAA-1212</a>] -         Programming guide -&gt; Using Kaa endpoint SDKs -&gt; C++ -&gt; UDOO
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1213'>KAA-1213</a>] -          Programming guide -&gt; Using Kaa endpoint SDKs -&gt; C++ -&gt; Samsung Artik 5
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1222'>KAA-1222</a>] -         Programming guide -&gt; Your first Kaa application (Objective-C code)
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1223'>KAA-1223</a>] -         Programming guide -&gt; Your first Kaa application (C++ code)
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1238'>KAA-1238</a>] -         Replace TODO stub-links on REST API page in Events page
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1241'>KAA-1241</a>] -         Programming guide -&gt; Using Kaa endpoint SDKs -&gt; C -&gt; QNX Neutrino RTOS
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1242'>KAA-1242</a>] -         Programming guide -&gt; Using Kaa endpoint SDKs -&gt; Supported platform matrix
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1243'>KAA-1243</a>] -         Customization guide -&gt; Endpoint SDK -&gt; Code Style -&gt; C/C++
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1245'>KAA-1245</a>] -         Customization guide -&gt; Endpoint SDK -&gt; Code Style -&gt; Shell
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1277'>KAA-1277</a>] -         [C++ SDK] Update C++ build guide for Windows OS
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1282'>KAA-1282</a>] -         Review all C code samples in new Documentation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1283'>KAA-1283</a>] -         [C++ SDK] Review all C++ code samples in new Documentation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1284'>KAA-1284</a>] -         Review all ObjectiveC code samples in new Documentation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1285'>KAA-1285</a>] -         Review all Java code samples in new Documentation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1340'>KAA-1340</a>] -         Update documentation CTL 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1350'>KAA-1350</a>] -         Welcome / Home / Start page
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1351'>KAA-1351</a>] -         &quot;Key platform features&quot; documentation page
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1356'>KAA-1356</a>] -         Cross-compilation guide for C++ SDK (Intel Edison) on Linux platform
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1357'>KAA-1357</a>] -         Fix styles on github pages
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1366'>KAA-1366</a>] -         [C++/C SDK] Nix guide
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1371'>KAA-1371</a>] -         Update Programming guide -&gt; Your first Kaa application
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1388'>KAA-1388</a>] -         Create test cases for testing of the Kaa failovers
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1393'>KAA-1393</a>] -         Remove unfinished low-priority documentation pages
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1394'>KAA-1394</a>] -         Check links consistency
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1397'>KAA-1397</a>] -         Update Kaa Sandbox Networking page
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1398'>KAA-1398</a>] -         Create a Java code style page
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1401'>KAA-1401</a>] -         Review Endpoint ownership documentation page
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1412'>KAA-1412</a>] -         Hide - Customization guide &gt; Kaa server &gt; Development environment setup
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1447'>KAA-1447</a>] -         Create regression tests in TestRail (version 0.10.0)
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1467'>KAA-1467</a>] -         Administration Guide -&gt; Tenant and applications management
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1478'>KAA-1478</a>] -         Add page of &quot;Docker deployment&quot;
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1482'>KAA-1482</a>] -         [Programming Guide -&gt; Using Kaa Endpoint SDKs -&gt; Java] Document usage of KaaPlatformContext
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1484'>KAA-1484</a>] -         Fix PostgreSQL installation instructions for CentOS
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1487'>KAA-1487</a>] -         Customization guide -&gt; Git flow
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1493'>KAA-1493</a>] -         Prepare documentation generation/relase instructions
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1502'>KAA-1502</a>] -         Update links to github in the documentation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1507'>KAA-1507</a>] -         Add instructions for CentOS 7.2 in the single node installation guide
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1511'>KAA-1511</a>] -         Update Java SDK documentation (for DesktopKaaPlatformContext class)
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1515'>KAA-1515</a>] -         Fix MongoDB installation instructions for Ubuntu 16.04
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1518'>KAA-1518</a>] -         Add information on how to install C++ SDK dependencies
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1522'>KAA-1522</a>] -         Temporarily remove incomplete documentation pages
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1523'>KAA-1523</a>] -         Kaa 0.10.0 What&#39;s new page
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1524'>KAA-1524</a>] -         &quot;Customization guide&quot; documentation page
</li>
</ul>

<h3>        Bug
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-738'>KAA-738</a>] -         Exceptions while stopping a demo
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-974'>KAA-974</a>] -         Unable to download reusable log schema JSON via Web UI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1031'>KAA-1031</a>] -         Group/Filter lookup Failure during process of Endpoint request
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1034'>KAA-1034</a>] -         [ObjC SDK] Incorrect work of connectivity checker
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1044'>KAA-1044</a>] -         Confusing error message while validating schema
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1051'>KAA-1051</a>] -         PostgreSQL database driver not found exception while Kaa 0.9.0 deb installation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1055'>KAA-1055</a>] -         Schema fields not set yet
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1056'>KAA-1056</a>] -         Wrong Kaa link address in email notification
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1072'>KAA-1072</a>] -         Mongo appender doesn&#39;t support complex log schemas
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1073'>KAA-1073</a>] -         Endpoint profiles are not correctly displayed in Admin UI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1076'>KAA-1076</a>] -         Some REST API methods returns HTTP code 400 instead of 404
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1078'>KAA-1078</a>] -         Edit configuration REST API call doesn&#39;t work correctly
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1090'>KAA-1090</a>] -         [Objective-C SDK] Client doesn&#39;t reconnect immediately after network is restored.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1091'>KAA-1091</a>] -         Exception when use array field in client-side EP body
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1092'>KAA-1092</a>] -         Kaa Cassandra Appender plugin failure
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1093'>KAA-1093</a>] -         Credentials service name of applications from SandBox is NULL
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1096'>KAA-1096</a>] -         Remove &quot;Download configuration&quot; button from Profile filter in Admin UI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1097'>KAA-1097</a>] -         Server sends ping responses in an infinite loop if the endpoint doesn&#39;t receive it
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1098'>KAA-1098</a>] -         Error promoting application scope CT to tenant scope
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1101'>KAA-1101</a>] -         Cannot save/activate configuration after session timeout
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1105'>KAA-1105</a>] -         Kaa admin mustn&#39;t be able to create users via REST API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1106'>KAA-1106</a>] -         Not mandatory fields are required during changing account profile settings
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1109'>KAA-1109</a>] -         List of attached endpoints contains duplicates
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1115'>KAA-1115</a>] -         Fix documentation for profile filter record REST calls 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1117'>KAA-1117</a>] -         TimeoutException in KaaNodeServerLauncherIT
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1151'>KAA-1151</a>] -         Kaa users can be created with empty body via REST API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1155'>KAA-1155</a>] -         Fix bug with server-side profile schema version
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1182'>KAA-1182</a>] -         Fix page footer in Admin UI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1184'>KAA-1184</a>] -         HTTP 500 error when sending a notification
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1188'>KAA-1188</a>] -         No email verification while creating a new user
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1191'>KAA-1191</a>] -         &quot;Endpoint KeyHash&quot; field is not refreshed in Notificaion topic
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1206'>KAA-1206</a>] -         Redundant parameters are passed when editing application via REST API.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1208'>KAA-1208</a>] -          Same response comes again from Server
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1220'>KAA-1220</a>] -         [Java SDK] Incorrect calculation of log delivery time
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1224'>KAA-1224</a>] -         [C++ SDK] Incorrect calculation of log delivery time
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1225'>KAA-1225</a>] -         [Objective-C SDK] Incorrect calculation of log delivery time
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1226'>KAA-1226</a>] -         The tenant admin is able to create users with &quot;TENANT_ADMIN&quot; role
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1228'>KAA-1228</a>] -         [C++ SDK] TCP channel ignores EOF error
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1235'>KAA-1235</a>] -         Problem with cyrillic encoding in database
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1236'>KAA-1236</a>] -         Administration UI produces invalid JSON document during download configuration
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1248'>KAA-1248</a>] -         [C++ SDK] Endpoint doesn&#39;t reconnect to Bootstrap server on start
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1250'>KAA-1250</a>] -         Creating user via  &quot;/api/editUserProfile&quot; api method
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1251'>KAA-1251</a>] -         Unexpected service error occurs while sending notifications
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1254'>KAA-1254</a>] -         [C++ SDK] Endpoint doesn&#39;t re-send request for new list of operations servers
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1258'>KAA-1258</a>] -         Unable to get SDK profiles for application via REST API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1266'>KAA-1266</a>] -         [C++ SDK] Endpoint sometimes crashes on stop
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1268'>KAA-1268</a>] -         RemoveAll method in Cassandra DAO dont works
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1272'>KAA-1272</a>] -         Maven expects avrogencpp at /usr/local/bin
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1273'>KAA-1273</a>] -         [Docs] Jekyll generated pages fails to render highlighted code inside a list item
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1276'>KAA-1276</a>] -         Invalid timeout handling in C SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1280'>KAA-1280</a>] -         Unable to generate code for deserialisation arrays of double
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1288'>KAA-1288</a>] -         ESP8266 C SDK CMakeLists: uses wrong path (libs/kaa/ instead of kaa/)
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1293'>KAA-1293</a>] -         Move email and user existence check methods from Web UI to REST API method
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1307'>KAA-1307</a>] -         Incorrect display list of endpoint profiles
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1309'>KAA-1309</a>] -         [C++] Minor inaccuracy on C++/SDK-Linux guide (across avro-cpp installing)
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1310'>KAA-1310</a>] -         [Java] Photo Frame app get event, when user isn&#39;t attached
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1312'>KAA-1312</a>] -         Fix problems with Configuration CTL Schema
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1322'>KAA-1322</a>] -         [ESP-8266, Linux] Need to attach link with documents to guide
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1324'>KAA-1324</a>] -         Broken links on Using-Kaa-endpoint-SDKs/C page
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1328'>KAA-1328</a>] -         Update log appenders documentation according to changes in data collection feature
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1330'>KAA-1330</a>] -         Documentation search is not working 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1331'>KAA-1331</a>] -         Missing line in collapsing code block
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1333'>KAA-1333</a>] -         Fix broken dependencies for Oracle Nosql Appender
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1341'>KAA-1341</a>] -         Fix ObjC SDK generation 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1342'>KAA-1342</a>] -         [Objective-C SDK] Unable to build Objective C demo
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1343'>KAA-1343</a>] -         Remove unused &quot;tmp_keys&quot; property
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1344'>KAA-1344</a>] -         [C SDK] WITH_ENCRYPTION CMake option doesn&#39;t work
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1346'>KAA-1346</a>] -         Failed build on MacOSX: Conflict on &quot;htonll&quot;
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1347'>KAA-1347</a>] -         Failed test 12 on MacOSX
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1348'>KAA-1348</a>] -         [C SDK] Unknown command cmake_parse_arguments
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1352'>KAA-1352</a>] -         [REST API] Incorrect behavior in method Create/Edit user
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1354'>KAA-1354</a>] -         [REST API] One email can be used by several users
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1359'>KAA-1359</a>] -         Provide a liquid template variable with github url for documentation 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1362'>KAA-1362</a>] -         [C++ SDK] Make FindBotan cross platform
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1363'>KAA-1363</a>] -         [C SDK] Fix Your first Kaa application C example
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1367'>KAA-1367</a>] -         Failed build and linking C++ part on OS X
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1369'>KAA-1369</a>] -         [C SDK] Fix nix-shell for Mac OS X
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1372'>KAA-1372</a>] -         Sandbox&#39;s error &quot;500 Server error The call ...&quot;
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1374'>KAA-1374</a>] -         Increase a jackson version
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1375'>KAA-1375</a>] -         [C++ SDK] Failed to parse or compile schema: Input stream is not good
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1376'>KAA-1376</a>] -         [C SDK] Key file is generated in the source tree
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1387'>KAA-1387</a>] -         [C++ SDK] Segmentation fault while processing configuration sync
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1396'>KAA-1396</a>] -         Fix selecting CTL shema version in &quot;Application CTL&quot; in Kaa Sandbox Admin UI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1399'>KAA-1399</a>] -         [Objective-C] KaaClientStateDelegate: crash, when method onStarted not implemented
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1400'>KAA-1400</a>] -         Fix URL redirection in Admin UI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1402'>KAA-1402</a>] -         [Objective C] Endpoint access token is not sent to Kaa cluster
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1403'>KAA-1403</a>] -         [C SDK] Endpoint access token is not sent to Kaa cluster
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1404'>KAA-1404</a>] -         [C++ SDK] Endpoint access token is not sent to Kaa cluster
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1405'>KAA-1405</a>] -         Endpoint access token is not sent to Kaa cluster
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1406'>KAA-1406</a>] -         Fix C SDK generation 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1410'>KAA-1410</a>] -         Fix error with EP group configurations after adding &quot;wrong&quot; configuration schema
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1411'>KAA-1411</a>] -         Can&#39;t load group&#39;s cofiguration from file
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1417'>KAA-1417</a>] -         [Objective-C] Detach endpoint: delegate method isn&#39;t called
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1419'>KAA-1419</a>] -         [C++ SDK] Client removes configuration on the first start
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1432'>KAA-1432</a>] -         [Jenkins] Kaa node tests occasionally fail
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1433'>KAA-1433</a>] -         [C SDK] Notification demo can`t receive any optional message
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1436'>KAA-1436</a>] -         Fix server and client REST fuctionality for getting credentials status
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1439'>KAA-1439</a>] -         Problem with generation event_class_family files
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1442'>KAA-1442</a>] -         REST method editUser do not send email with temp password
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1443'>KAA-1443</a>] -         Couchbase log appender creation error
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1444'>KAA-1444</a>] -         Fix method editUser() in AdminUI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1446'>KAA-1446</a>] -         Make field &quot;__uuid&quot; optional for configurations created from file (with AdminClient)
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1448'>KAA-1448</a>] -         ConfigurationDemo can&#39;t change a configuration value when the application is running.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1457'>KAA-1457</a>] -         [C SDK] mbed tls is compiled only for host architecture.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1465'>KAA-1465</a>] -         Broken links in development documentation version
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1469'>KAA-1469</a>] -         [Objective-C] Kaa.podspec file is missing in the Kaa obj-c SDK generated from Sandbox
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1470'>KAA-1470</a>] -         [Java SDK] Failover strategy doesn&#39;t work correctly
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1477'>KAA-1477</a>] -         Fix CMake command line options
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1479'>KAA-1479</a>] -         Can`t get endpoint key hash if flag KAA_RUNTIME_KEY_GENERATION=ON
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1481'>KAA-1481</a>] -         1-thread callback executor (Java client) causes issue with &quot;nested&quot; callback calls
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1485'>KAA-1485</a>] -         Fix &quot;Your first Kaa application Java&quot; dependencies
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1486'>KAA-1486</a>] -         [C SDK] The endpoint sends invalid profile hash to the server
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1490'>KAA-1490</a>] -         Fix CMake command line redundant options
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1498'>KAA-1498</a>] -         There is no reference page on &quot;Windows (cygwin)&quot;(Using endpoint SDKs-&gt;C).
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1506'>KAA-1506</a>] -         [C SDK] Fix mbedtls linkage error for CC32XX 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1512'>KAA-1512</a>] -         [C SDK] Inconsistent naming of RSA key files
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1513'>KAA-1513</a>] -         [C SDK] cppcheck failures
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1514'>KAA-1514</a>] -         [Objective-C] Kaa client incorrectly reacts on ReturnCodeRefuseVerificationFailed
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1519'>KAA-1519</a>] -         Duplicate instruction to install libsqlite
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1530'>KAA-1530</a>] -         Level 4 documentation TOC headers are misaligned
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1535'>KAA-1535</a>] -         test-gh-pages.sh still binds to localhost when supplied with --host option
</li>
</ul>
",17839346
793,False,True,2016-04-27T22:25:03Z,2016-04-28T13:13:43Z,"<h3>        Epics
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-876'>KAA-876</a>] -         Device management
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-889'>KAA-889</a>] -         Ability to use MariaDB as a SQL database in Kaa cluster
</li>
</ul>

<h3>        Stories
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-38'>KAA-38</a>] -         Add ability to create unicast notifications via Web UI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-416'>KAA-416</a>] -         Integrate Kaa with Docker
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-813'>KAA-813</a>] -         [C SDK] Implement source formatting script
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-829'>KAA-829</a>] -         [C SDK] Increase warning\error level and fix all warnings when using gcc
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-857'>KAA-857</a>] -         [C++ SDK] Use CMAKE_BUILD_TYPE instead of KAA_DEBUG_ENABLED
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-858'>KAA-858</a>] -         [C SDK] Use CMAKE_BUILD_TYPE instead of KAA_DEBUG_ENABLED
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-873'>KAA-873</a>] -         Add support of failover and load balancing to Kaa REST client
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-874'>KAA-874</a>] -         Download configuration for specific endpoint group
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-877'>KAA-877</a>] -         REST API to provision and revoke endpoint security credentials
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-879'>KAA-879</a>] -         Ability to handle endpoint deregistration requests.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-888'>KAA-888</a>] -         [Objective-C] Add SQLite-based log storage
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-890'>KAA-890</a>] -         Ability to switch between SQL databases using maven build profile.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-891'>KAA-891</a>] -         Introduce specific error codes for requests from unregistered endpoints
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-896'>KAA-896</a>] -         [Java SDK] Ability to set Failover Strategy
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-915'>KAA-915</a>] -         Improve and document JMX performance metrics 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-925'>KAA-925</a>] -         [C SDK] Factor out common manager API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-926'>KAA-926</a>] -         [C SDK] Make KAA_MAX_LOG_LEVEL overridable for tests
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-933'>KAA-933</a>] -         [C SDK] Check and integrate binary builds for xtensa-lx106-elf
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-934'>KAA-934</a>] -         [C SDK] Add support for Cmocka + CTest
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-936'>KAA-936</a>] -         [C SDK] Setup Nix for automatic environment setup
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-941'>KAA-941</a>] -         [C SDK] Integrate rats into Nix
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-945'>KAA-945</a>] -         [C SDK] Check and speed up long-running tests
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-947'>KAA-947</a>] -         [C SDK] Update to cc3200-sdk-1.2.0
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-948'>KAA-948</a>] -         [Objective-C SDK] Add ability to build SDK with release configuration
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-951'>KAA-951</a>] -         Integrate Kaa with Cassandra 3.0.x version
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-952'>KAA-952</a>] -         [C SDK] Remove KAA_TRACE_IN and KAA_TRACE_OUT from tests
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-953'>KAA-953</a>] -         Update Spring framework dependency version
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-959'>KAA-959</a>] -         Increase maximum length of the SDK profile name
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-960'>KAA-960</a>] -         Ability to assign CredentialsService instance to Application
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-963'>KAA-963</a>] -         [Java SDK] Ability to handle device management error codes
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-964'>KAA-964</a>] -         [Objective-C SDK] Ability to handle device management error codes
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-965'>KAA-965</a>] -         [C++ SDK] Ability to handle device management error codes
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-966'>KAA-966</a>] -         [Objective-C SDK] Ability to set Failover Strategy
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-975'>KAA-975</a>] -         [C SDK] Review disabled tests
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-976'>KAA-976</a>] -         Review and update REST API calls to accept application token instead of application ids
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-978'>KAA-978</a>] -         [C SDK] Ability to handle device management error codes
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-992'>KAA-992</a>] -         [C SDK] Patch astyle
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-998'>KAA-998</a>] -         [C SDK] Add build with no logging
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1001'>KAA-1001</a>] -         [C SDK] Implement -Werror for doxygen
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1016'>KAA-1016</a>] -         Integrate Nix for C++ SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1021'>KAA-1021</a>] -         [C SDK] Update to latest nix channel
</li>
</ul>
    

<h3>        Tasks
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-984'>KAA-984</a>] -         [C SDK] Create testing tutorial
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-987'>KAA-987</a>] -         Create &quot;Build configuration&quot; page
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-996'>KAA-996</a>] -         [C SDK] Review doxygen generation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1008'>KAA-1008</a>] -         [C++] Make Windows documentation more explicit
</li>
</ul>

<h3>        Bugs
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-820'>KAA-820</a>] -         [C SDK] Build script doesn&#39;t stop if errors occur during tests
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-893'>KAA-893</a>] -         Server-side EP profile should be stored as a DB object in MongoDB
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-901'>KAA-901</a>] -         Confusing error message when creating a type in CTL, which uses itself recursively
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-902'>KAA-902</a>] -         Confusing error message when creating an endpoint group with the existing name, but a different weight
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-906'>KAA-906</a>] -         [Objective-C SDK] Bucket delivery timeout causes sequential switching of access points
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-912'>KAA-912</a>] -         [Java SDK] Bucket delivery timeout causes sequential switching of access points
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-913'>KAA-913</a>] -         [C++ SDK] Bucket delivery timeout causes sequential switching of access points
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-914'>KAA-914</a>] -         [C SDK] Bucket delivery timeout causes sequential switching of access points
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-932'>KAA-932</a>] -         [C SDK] Incorrect buffer management in KaaTCP request
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-937'>KAA-937</a>] -         [C SDK] RSA Keys are generated in sources
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-938'>KAA-938</a>] -         Resolve warnings in Objective-C SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-942'>KAA-942</a>] -         Deep schema export fails with CTL dependencies
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-946'>KAA-946</a>] -         SDK generation fails
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-950'>KAA-950</a>] -         Fix persistence of client properties state.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-958'>KAA-958</a>] -         Licence headers are missing in some of the new files
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-970'>KAA-970</a>] -         Сould not receive notification on Android client from mandatory topic on Admin UI.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-971'>KAA-971</a>] -         [C++ SDK] Unit tests fail
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-980'>KAA-980</a>] -         [C++ SDK] Fix build_sdk_thirdparty.bat
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1007'>KAA-1007</a>] -         [Objective-C SDK] Unable to send meta data request on the first SDK start
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1009'>KAA-1009</a>] -         [C++ SDK] Fix and improve buid_sdk_thirdparty.bat and env.bat
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1011'>KAA-1011</a>] -         [C SDK] Fix cppcheck
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1015'>KAA-1015</a>] -         Can&#39;t use default value for long type
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1017'>KAA-1017</a>] -         [C SDK] Warning compiling tests with clang
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1018'>KAA-1018</a>] -         Fix copyright header format so it doesn&#39;t get misinterpreted as documentation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1020'>KAA-1020</a>] -         [C++ SDK] Test segfault
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1026'>KAA-1026</a>] -         [Java SDK] Endpoint SDK should not control application behaviour
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1027'>KAA-1027</a>] -         [Objective-C SDK] Endpoint SDK should not control application behaviour
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1028'>KAA-1028</a>] -         [C++ SDK] Endpoint SDK should not control application behaviour
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1029'>KAA-1029</a>] -         [C SDK] Endpoint SDK should not control application behaviour
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1033'>KAA-1033</a>] -         SQLite storage size grows infinitely
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1046'>KAA-1046</a>] -         [C SDK] Build errors in generated files within GPIO cc32xx demo
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1048'>KAA-1048</a>] -         C Data collection isn&#39;t working as expected
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-1049'>KAA-1049</a>] -         Unable to save big log schema
</li>
</ul>
",17839346
794,False,True,2016-03-15T18:27:20Z,2016-03-16T09:21:11Z,"<h3>        Bugs
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-699'>KAA-699</a>] -         [C SDK] Configuration demo doesn&#39;t compile on the CC3200 platform
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-807'>KAA-807</a>] -         Code refactoring according to sonarqube rules.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-821'>KAA-821</a>] -         [C SDK] CUnit produce loose output when test fails
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-827'>KAA-827</a>] -         [C SDK] Notification and configuration manager tests fails
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-837'>KAA-837</a>] -         Error message about configuration mail server settings
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-846'>KAA-846</a>] -         Unable to view information about previous CT versions 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-862'>KAA-862</a>] -         Exception on server side with multi group configurations.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-864'>KAA-864</a>] -         Unable to create profile schema from file
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-868'>KAA-868</a>] -         Server-side endpoint profile access REST API is missing
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-869'>KAA-869</a>] -         [C++ SDK] Fix typo in build_sdk_thirdparty.bat
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-870'>KAA-870</a>] -         [C++ SDK] Build fails if logging is set to TRACE level
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-871'>KAA-871</a>] -         The REST API call to get all devices based on the owner ID is missing
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-880'>KAA-880</a>] -         Can&#39;t get CTL schema by ID with the REST API client
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-881'>KAA-881</a>] -         Can&#39;t export CTL schema by ID with the REST API client
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-882'>KAA-882</a>] -         [C SDK] Wrong handling of server sync  
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-883'>KAA-883</a>] -         [Java SDK] Endpoint doesn&#39;t send profile body after resync is received
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-884'>KAA-884</a>] -         [C SDK] Endpoint doesn&#39;t send profile body after resync is received
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-885'>KAA-885</a>] -         [C++ SDK] Endpoint doesn&#39;t send profile body after resync is received
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-886'>KAA-886</a>] -         [Objective-C SDK] Endpoint doesn&#39;t send profile body after resync is received
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-887'>KAA-887</a>] -         [C++ SDK] Cannot compile with KAA_MAX_LOG_LEVEL set to 0
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-892'>KAA-892</a>] -         Endpoint profiles with complex profile schemas cause BSON validation failures
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-894'>KAA-894</a>] -         NPE during converting TopicListEntry model into dto object.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-897'>KAA-897</a>] -         [C++ SDK] CMake script uses wrong Windows version
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-898'>KAA-898</a>] -         [C++ SDK] DbgHelp library is used disregarding the build type
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-899'>KAA-899</a>] -         Forbid creating negative versions in CTL
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-900'>KAA-900</a>] -         Forbid creating endpoint groups with negative weights
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-903'>KAA-903</a>] -         Missing return button in SDK profile details page
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-904'>KAA-904</a>] -         Incorrect log files naming
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-905'>KAA-905</a>] -         Unable to detach endpoint from owner
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-907'>KAA-907</a>] -         Temporarily remove the Number of EPs from the Endpoint groups page
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-911'>KAA-911</a>] -         Invalid notification schema is saved to database
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-916'>KAA-916</a>] -         Wrong Kaa version in Administrative Console
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-917'>KAA-917</a>] -         Uploaded buckets stay in the collection after successful delivery
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-920'>KAA-920</a>] -         Log delivery timeouts don&#39;t get triggered
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-921'>KAA-921</a>] -         Receiving bucket info in log delivery callback without timestamp
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-922'>KAA-922</a>] -         C client fails to build with clang
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-923'>KAA-923</a>] -         build.sh depends on /bin/bash
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-929'>KAA-929</a>] -         Unable to reference a tenant CT inside an application CT schema
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-935'>KAA-935</a>] -         Unable to use profile schemas with CTL dependencies
</li>
</ul>
                
",17839346
795,False,True,2016-02-19T14:01:29Z,2016-02-19T17:31:30Z,"<h3>        Epics
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-25'>KAA-25</a>] -         Server-controlled endpoint profile part
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-292'>KAA-292</a>] -         Objective-C endpoint SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-599'>KAA-599</a>] -         Common Type Library
</li>
</ul>
        

<h3>        Stories
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-44'>KAA-44</a>] -         Shorten long application / user names, etc. in the navigation pane
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-258'>KAA-258</a>] -         Move SDK template files to the corresponding codebase from the Control server
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-301'>KAA-301</a>] -         Add support for assisted user attach to C SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-318'>KAA-318</a>] -         Improve performance of generic flume log appender.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-450'>KAA-450</a>] -         Handle attaching endpoints to owners atomically in DAO services
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-460'>KAA-460</a>] -         [C SDK] implement TCP channel keepalives
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-521'>KAA-521</a>] -         Endpoint profile access REST API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-523'>KAA-523</a>] -         Endpoint Profile Viewer
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-557'>KAA-557</a>] -         Improve C++ SDK thread model
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-570'>KAA-570</a>] -         Add warning messages as a result of API calls when client is in invalid state
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-585'>KAA-585</a>] -         SDK profiles management functionality
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-597'>KAA-597</a>] -         Kafka log appender
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-598'>KAA-598</a>] -         Apache Storm log appender
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-600'>KAA-600</a>] -         DAO for CTL
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-602'>KAA-602</a>] -         REST interface for CTL CRUD operations
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-603'>KAA-603</a>] -         Web UI interface for CTL CRUD operations
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-604'>KAA-604</a>] -         CTL support for Kaa client- and server-side EP profiles
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-606'>KAA-606</a>] -         &quot;Shallow&quot;, &quot;deep&quot;, and &quot;flat&quot; schema export support
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-614'>KAA-614</a>] -         Ability to import/export log appender and user verifier configurations
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-615'>KAA-615</a>] -         Merge Bootstrap, Operations, Control and Admin Web servers
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-628'>KAA-628</a>] -         Introduce configuration parameter for event TTL
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-661'>KAA-661</a>] -         Improve server unit tests
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-707'>KAA-707</a>] -         Add DAO layer for server side profile schema
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-708'>KAA-708</a>] -         Add UI to provision server side profile schemas
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-709'>KAA-709</a>] -         Add default profile data generation during endpoint registration
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-710'>KAA-710</a>] -         Add support of CRUD operations for server profile data in profile viewer
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-711'>KAA-711</a>] -         Add ability to use both server side profile and client side profile in profile filters for endpoint groups
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-712'>KAA-712</a>] -         Add access to server profile API in LogAppenders
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-714'>KAA-714</a>] -         Endpoint Profile viewer should contain link to endpoint SDK profile
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-726'>KAA-726</a>] -         Add ability to test profile filter on Web UI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-739'>KAA-739</a>] -         Update JavaDoc comments to pass Java 8 validation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-746'>KAA-746</a>] -         Add support of client and server profiles in Cassandra log appender
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-747'>KAA-747</a>] -         Add support of client and server profiles in MongoDB log appender
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-748'>KAA-748</a>] -         Add support of client and server profiles in Flume log appender
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-749'>KAA-749</a>] -         Control server should notify Operations server on server profile change
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-761'>KAA-761</a>] -         [C++ SDK] Remove deprecated API to create singleton instance
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-769'>KAA-769</a>] -         [C++ SDK] Separate logger for each endpoint instance
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-771'>KAA-771</a>] -         [Objective-C SDK] Add callback for log delivery
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-772'>KAA-772</a>] -         [Java SDK] Add callback for log delivery
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-773'>KAA-773</a>] -         [C SDK] Add callback for log delivery
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-774'>KAA-774</a>] -         [C++ SDK] Add callback for log delivery
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-778'>KAA-778</a>] -         Update  hibernate model objects to non final classes.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-781'>KAA-781</a>] -         [Objective-C SDK] Make the amount of parallel log upload batches configurable
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-783'>KAA-783</a>] -         [Objective-C SDK] Built-in upload strategies
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-787'>KAA-787</a>] -         Cross-compilation guide for Raspberry Pi
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-791'>KAA-791</a>] -         Cover all REST API calls in Kaa Admin client library
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-792'>KAA-792</a>] -         [JAVA SDK] Remove redundant &#39;isInitialized&#39; flag from AbstractKaaClient
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-793'>KAA-793</a>] -         [Objective-C SDK] Remove redundant &#39;isInitialized&#39; flag from AbstractKaaClient
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-810'>KAA-810</a>] -         Log bind host and port for each transport on start
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-811'>KAA-811</a>] -         SDK sources for generated JAR files
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-815'>KAA-815</a>] -         [Objective-C SDK] Smart persistence of endpoint&#39;s state
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-816'>KAA-816</a>] -         [Java SDK] Smart persistence of endpoint&#39;s state
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-817'>KAA-817</a>] -         Add capability to download client- and server-side endpoint profile JSONs from Web UI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-818'>KAA-818</a>] -         [C SDK] Smart persistence of endpoint&#39;s state
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-819'>KAA-819</a>] -         [C++ SDK] Smart persistence of endpoint&#39;s state
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-822'>KAA-822</a>] -         Update Avro and Binary protocols for configuration and notification features
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-823'>KAA-823</a>] -         [Java SDK] Calculate hash from list of topics
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-824'>KAA-824</a>] -         [С SDK] Calculate hash from list of topics
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-825'>KAA-825</a>] -         [C++ SDK] Calculate hash from list of topics
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-826'>KAA-826</a>] -         [Objective-C SDK] Calculate hash from list of topics
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-836'>KAA-836</a>] -         Add tool that will automatically add copyright header for source files if it&#39;s missing
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-840'>KAA-840</a>] -         Use SDK token instead of the schema version numbers in the SDK library names
</li>
</ul>

<h3>        Bugs
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-437'>KAA-437</a>] -         [C SDK] can&#39;t process sync messages that do not fit into the transport channel buffer
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-538'>KAA-538</a>] -         Change &quot;Mongo&quot; to &quot;MongoDB&quot; type in log appender 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-616'>KAA-616</a>] -         Wrong function name in C SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-625'>KAA-625</a>] -         SDK should notify if custom profile is not set
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-668'>KAA-668</a>] -         Failed build applications with C++ SDK and pre-installed Botan library
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-705'>KAA-705</a>] -         [C++ SDK] When security keys contain junk data endpoint is not able to recover
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-729'>KAA-729</a>] -         Incorrect response from REST API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-760'>KAA-760</a>] -         Cell monitor demo for Android crashes on start up
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-767'>KAA-767</a>] -         When security keys contain junk data Java/Android SDK is not able to recover
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-770'>KAA-770</a>] -         When security keys contain junk data Objective-C SDK is not able to recover
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-805'>KAA-805</a>] -         Topics are sorted in a random order
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-807'>KAA-807</a>] -         Code refactoring according to sonarqube rules.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-814'>KAA-814</a>] -         [Java SDK] Android templates differ from Desktop version
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-830'>KAA-830</a>] -         [C++ SDK] Ping timeout should be half of the channel timeout
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-831'>KAA-831</a>] -         [C SDK] Ping timeout should be half of the channel timeout
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-832'>KAA-832</a>] -         SDK does not receive delivery confirmation when no &quot;mandatory&quot; appenders conifugred
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-833'>KAA-833</a>] -         Default &quot;mailFrom&quot; parameter in SmtpMailProperties is invalid.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-834'>KAA-834</a>] -         Forbid creating more than one application with the same name within a tenant
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-838'>KAA-838</a>] -         [C++ SDK] Failed to build on VisualStudio 2013 (vc12)
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-853'>KAA-853</a>] -         Approve license according to apache-rat-plugin.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-855'>KAA-855</a>] -         Akka dependency conflict.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-860'>KAA-860</a>] -         If there is no persisted topic list hash, the exception is thrown 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-861'>KAA-861</a>] -         Incorrect text indents inside configuration body on the Kaa configuration page.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-862'>KAA-862</a>] -         Exception on server side with multi group configurations.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-863'>KAA-863</a>] -         Incorrect behavior on the endpoints search page.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-867'>KAA-867</a>] -         Client can&#39;t communicate with the server after been restarted
</li>
</ul>

<h3>        Tasks
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-643'>KAA-643</a>] -         Review the Installation guide
</li>
</ul>
",17839346
796,False,True,2015-12-29T17:00:18Z,2015-12-29T18:41:53Z,"Kaa platform release, v0.7.4 ""Avocado Archipelago"" includes:

<h3>        Stories
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-126'>KAA-126</a>] -         Improve Java SDK thread model
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-621'>KAA-621</a>] -         Samsung Artik 5 integration
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-740'>KAA-740</a>] -         Enable to create several endpoint SDK instances in a single system process
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-751'>KAA-751</a>] -         Enable to control work directory and file names produced by Java SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-755'>KAA-755</a>] -         Add SQLITE_HOME CMake variable
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-779'>KAA-779</a>] -         [Java SDK] Make the amount of parallel log upload batches configurable
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-780'>KAA-780</a>] -         [С SDK] Make the amount of parallel log upload batches configurable
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-782'>KAA-782</a>] -         [С++ SDK] Make the amount of parallel log upload batches configurable
</li>
</ul>

<h3>        Fixed Bugs
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-641'>KAA-641</a>] -         Incorrect removal of the topic ID from the list of notification listeners
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-662'>KAA-662</a>] -         Handle null endpointKeyHash on Operations server
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-738'>KAA-738</a>] -         Exceptions while stopping a demo
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-742'>KAA-742</a>] -         Failure to send email should cause failure of tenant creation procedure
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-744'>KAA-744</a>] -         Log records are duplicated in *.log and *.out files
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-753'>KAA-753</a>] -         Application sequence number hasn&#39;t been updated in configuration client sync
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-754'>KAA-754</a>] -         Failed to compile application on Windows if includes Kaa SDK headers
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-762'>KAA-762</a>] -         Endpoint should immediately send its new access token to server
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-763'>KAA-763</a>] -         Avrogen.bat doesn&#39;t run automatically on Windows
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-766'>KAA-766</a>] -         Filter evaluation fails for removed profile filters
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-776'>KAA-776</a>] -         C++ endpoint sends configuration ACK disregarding to DELTA or NO_DELTA is received
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-786'>KAA-786</a>] -         Kaa build server from source error
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-794'>KAA-794</a>] -         [C++ SDK] Use Kaa TCP channel as a default transport channel to communicate with Operations server
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-804'>KAA-804</a>] -         Remove System.exit() call or ensure it is really required.
</li>
</ul>
",17839346
797,False,True,2015-10-21T13:44:12Z,2015-10-22T13:54:09Z,"Kaa platform release, v0.7.3 ""Avocado Archipelago"" includes:

<h3>        Story
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-672'>KAA-672</a>] -         Review and update &quot;Installation guide&quot; documentation page
</li>
</ul>

<h3>        Fixed bugs
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-567'>KAA-567</a>] -         C++ SDK: try next bootstrap server if the Ops servers list is empty
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-664'>KAA-664</a>] -         Focus is lost in edit form after canceling exit
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-669'>KAA-669</a>] -         TCP channel does not resume socket read operation on Kaa client resume event
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-670'>KAA-670</a>] -         Incorrect order of generated enumerations
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-671'>KAA-671</a>] -         Invalid SDK token cause crash of EncDecMesageActor
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-689'>KAA-689</a>] -         Fix build of C SDK for LeafLabs Maple Mini
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-690'>KAA-690</a>] -         Failover on Android EP SDK can&#39;t withstand connection loss
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-691'>KAA-691</a>] -         Fix build of C SDK for Econais EC19D
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-693'>KAA-693</a>] -         Failed to install kaa-flume.rpm on Centos 6.7
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-694'>KAA-694</a>] -         Segfault on Raspberry Pi 2 when receiving Server sync with notifications
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-696'>KAA-696</a>] -         Segfault when retrieving configuration from Kaa client
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-697'>KAA-697</a>] -         SMTP server configuration is not documented properly
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-698'>KAA-698</a>] -         C SDK doesn&#39;t compile on ESP8266 with data collection feature
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-699'>KAA-699</a>] -         Configuration demo doesn&#39;t compile on the CC3200 platform
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-701'>KAA-701</a>] -         Control server should notify operations server when endpoint group is deleted
</li>
</ul>
",17839346
798,False,True,2015-09-15T13:23:55Z,2015-09-15T15:20:30Z,"Kaa platform release, v0.7.2 ""Avocado Archipelago"" includes:
- Decoupling of the [Kaa Sandbox Frame](https://github.com/kaaproject/sandbox-frame) into a separate module;
- Decoupling of the [Kaa Sample Applications](https://github.com/kaaproject/sample-apps) into a separate module;
- C SDK integration with Espressif ESP8266;
- C SDK integration with Texas Instruments CC3200;
- C SDK integration with QNX Neutrino RTOS;
- Built-in log upload strategies for all SDKs;
- Numerous smaller improvements and bugfixes.

Full list of changes:

<h3>        Fixed Bugs
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-35'>KAA-35</a>] -         [Admin UI] Overdue expiry time for notifications can be set
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-483'>KAA-483</a>] -         Null exception while loading Avro schema without a namespace
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-484'>KAA-484</a>] -         A schema was successfully loaded but an exception still appears
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-487'>KAA-487</a>] -         Can&#39;t see the last application in the list from the Kaa Admin Web page
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-504'>KAA-504</a>] -         Able to create fields in Avro UI form with same Name
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-505'>KAA-505</a>] -         Max value for Long type field in Avro schema automatically changes to integer max value
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-582'>KAA-582</a>] -         Blank ECF schema could be created
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-632'>KAA-632</a>] -         Can&#39;t add configuration schema with specific union structure
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-636'>KAA-636</a>] -         Can&#39;t build the Kaa application under Windows for TI CC3200
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-638'>KAA-638</a>] -         Configuration schemas is unsorted
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-639'>KAA-639</a>] -         Flume appender needs to retry the initialization process
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-640'>KAA-640</a>] -         Restarts of Kaa event demo cause invalid event.seq.num property in state file
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-642'>KAA-642</a>] -         Not able to map enum value to column in Cassandra log appender
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-644'>KAA-644</a>] -         Avro UI Sandbox can&#39;t generate JSON if a boolean field is &quot;untouched&quot;
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-649'>KAA-649</a>] -         Inconsistency in usage of the &#39;Delete&#39; button on Avro UI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-651'>KAA-651</a>] -         After updating Java SDK with new configuration schema, client wouldn&#39;t be work correct if old configuration file exist.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-652'>KAA-652</a>] -         Need to implement thread safe method for getting configuration in Kaa client api
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-653'>KAA-653</a>] -         Failed to build configuration demo on ESP8266 platform
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-654'>KAA-654</a>] -         Text fields overlap table border
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-656'>KAA-656</a>] -         Failed to build C++ SDK on Windows 7
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-658'>KAA-658</a>] -         After updating C SDK with new configuration schema, client wouldn&#39;t be work correct if old configuration file exist.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-659'>KAA-659</a>] -         After updating C++ SDK with new configuration schema, client wouldn&#39;t be work correct if old configuration file exist.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-665'>KAA-665</a>] -         Failed to build C demos on the CC3200 platform
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-667'>KAA-667</a>] -         NoSQL profile impacts list of dependencies in operations and control packages
</li>
</ul>
            

<h3>        Stories
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-554'>KAA-554</a>] -         Integrate C client SDK with ESP8266
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-555'>KAA-555</a>] -         Integrate C client SDK with TI CC3200
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-610'>KAA-610</a>] -         Built-in upload strategies for Java SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-611'>KAA-611</a>] -         Built-in upload strategies for C SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-612'>KAA-612</a>] -         Built-in upload strategies for C++ SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-633'>KAA-633</a>] -         Add schema version to Log record header
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-634'>KAA-634</a>] -         QNX integration
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-645'>KAA-645</a>] -         Review and update REST API documentation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-646'>KAA-646</a>] -         Notify developer user of a user verifier is mandatory in case of using event feature
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-647'>KAA-647</a>] -         Add ability on Avro UI to remove an arbitrary element of an array instead of the last one
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-648'>KAA-648</a>] -         Add the &#39;Back&#39; button to the top of an Avro form
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-657'>KAA-657</a>] -         Endpoint schema versions are not updated in server profile after SDK update
</li>
</ul>
",17839346
799,False,True,2015-07-22T16:55:37Z,2015-09-15T14:38:15Z,"Kaa platform release, v0.7.1 ""Avocado Archipelago"" includes:
- Kaa Notification subsystem support in C SDK;
- C SDK API improvements;
- Failover strategies for critical failure mitigation;
- Load balancing algorithm enhancements;
- Integration with Apache Spark via Flume log appender, Cassandra log appender;
- improvements, new REST API log appender and new Couchbase log appender ;
- Persistent log storages for C++ and Java SDKs as well as for Android;
- Integrations with Intel Edison, Raspberry Pi, Econais and other platforms;
- Cassandra as alternative to MongoDB in Kaa Sandbox.

Full list of changes:

<h3>        Fixed Bugs
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-427'>KAA-427</a>] -         Java/Android EP SDK contains thirdparty libraries.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-444'>KAA-444</a>] -         Some of notifications on a topic are lost
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-461'>KAA-461</a>] -         C SDK a lot of stack is used
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-485'>KAA-485</a>] -         The UI schema viewer shows that there is a nested union in array of integer items.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-494'>KAA-494</a>] -         Process REFUSE_BAD_CREDENTIALS from server on Java client
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-495'>KAA-495</a>] -         Process REFUSE_BAD_CREDENTIALS from server on C++ client
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-496'>KAA-496</a>] -         Process REFUSE_BAD_CREDENTIALS from server on C client
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-498'>KAA-498</a>] -         After re-establishing connection client&#39;s sent SyncRequest data is lost
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-499'>KAA-499</a>] -         Kaa endpoint operations fallback problem
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-506'>KAA-506</a>] -         Concurrent updates of same configuration entity may corrupt DB state
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-524'>KAA-524</a>] -         Frequent notifications may cause notification duplication on client side
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-527'>KAA-527</a>] -         Admin UI and Sandbox UI issues in Safari
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-529'>KAA-529</a>] -         Delivered logs were not removed from in-memory log storage
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-532'>KAA-532</a>] -         Endpoint should use random Operations server
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-533'>KAA-533</a>] -         Endpoint should force to upload logs after failed delivery
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-534'>KAA-534</a>] -         Profile update does not always trigger notification/configuration resyncs
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-536'>KAA-536</a>] -         SDK generation should fail if no active bootstrap servers are present
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-537'>KAA-537</a>] -         Rare lock in Java SDK LogCollector during frequent log uploads
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-540'>KAA-540</a>] -         Memory corruption in kaa_list
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-541'>KAA-541</a>] -         Invalid filters cause failures in processing of endpoint request
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-543'>KAA-543</a>] -         Endpoint receives the same notifications after restart
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-548'>KAA-548</a>] -         Installation(Update) of deb/rpm packages replaces configuration files
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-549'>KAA-549</a>] -         SchemaUtil is unable to process recursive schemas
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-563'>KAA-563</a>] -         GCC 4.7.3 cannot compile C++ SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-564'>KAA-564</a>] -         Some demos don&#39;t compile without extra headers
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-565'>KAA-565</a>] -         Demo applications don&#39;t compile without the KAA_THREADSAFE macros 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-566'>KAA-566</a>] -         Default KaaTCP channel may crash on destroying
</li>
</ul>
            

<h3>        Stories
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-158'>KAA-158</a>] -         Kaa C++ SDK: Log mutex manipulations within the mutex (un)lock macro
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-208'>KAA-208</a>] -         Add capability to retrieve the Override/Base configuration schema from the Admin UI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-295'>KAA-295</a>] -         Implement notifications subsystem for C EP SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-372'>KAA-372</a>] -         SDK integration with Intel Edison
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-462'>KAA-462</a>] -         Introduce support of SDK tokens
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-464'>KAA-464</a>] -         Tweets visualization on LED board
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-468'>KAA-468</a>] -         GEO Fencing / automotive
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-473'>KAA-473</a>] -         Water management system
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-477'>KAA-477</a>] -         Remove the redundant step in C++ SDK build procedure
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-481'>KAA-481</a>] -         Ability to download schema JSON via Web UI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-482'>KAA-482</a>] -         REST API Log appender
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-489'>KAA-489</a>] -         City lights demo
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-490'>KAA-490</a>] -         MusicPlayer for Raspberry PI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-492'>KAA-492</a>] -         Implement log upload based on the schedule, not only when a record is added
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-493'>KAA-493</a>] -         PhotoFrame for Raspberry PI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-500'>KAA-500</a>] -         Optimize memory usage of Kaa sandbox
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-501'>KAA-501</a>] -         Add support of public host/port for bootstrap and operations servers
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-502'>KAA-502</a>] -         Add Cassandra to sandbox
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-508'>KAA-508</a>] -         Improve SDK performance by reimplementing basic data structures
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-510'>KAA-510</a>] -         Couchbase data collection appender
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-512'>KAA-512</a>] -         Spark integration
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-513'>KAA-513</a>] -         Persistent log data storage for C++ EP SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-515'>KAA-515</a>] -         Persistent log data storage for Java/Android EP SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-516'>KAA-516</a>] -         Design and improve support of Bootstrap failover scenarios
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-525'>KAA-525</a>] -         Improve log messages in C SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-526'>KAA-526</a>] -         Improve Cassandra log appender to be able to configure table columns
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-528'>KAA-528</a>] -         Improve Powerplant demo to support panel zones
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-531'>KAA-531</a>] -         Collect information about amount of active endpoint sessions and system load average for LB function
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-535'>KAA-535</a>] -         Introduce FailoverStrategy  to react on critical failures
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-550'>KAA-550</a>] -         Improvement of sample applications build procedure for Econais platform
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-558'>KAA-558</a>] -         Improve failover mode for SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-559'>KAA-559</a>] -         Improve failover mode for Kaa C SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-562'>KAA-562</a>] -         Add ability to map ts of log arrival to Cassandra column
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-571'>KAA-571</a>] -         Ability to set TTL in cassandra log appender
</li>
</ul>
    

<h3>        Tasks
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-349'>KAA-349</a>] -         Update code contribution procedure on Contribute to Kaa page
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-503'>KAA-503</a>] -         Dump logs to local machine if sandbox build fails
</li>
</ul>

<h3>        Technical tasks
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-162'>KAA-162</a>] -         Improve failover mode for Kaa C++ SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-334'>KAA-334</a>] -         Build instruction for Econais platform
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-471'>KAA-471</a>] -         Update C SDK generation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-472'>KAA-472</a>] -         Implement serialization/deserialization routines to process Client and Server Sync-s
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-474'>KAA-474</a>] -         Implement user API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-475'>KAA-475</a>] -         Cover the notification feature by unit tests
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-486'>KAA-486</a>] -         Add notification demo
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-517'>KAA-517</a>] -         Design and improve support of Bootstrap failover scenarious for Java EP SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-518'>KAA-518</a>] -         Design and improve support of Bootstrap failover scenarious for C EP SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-519'>KAA-519</a>] -         Design and improve support of Bootstrap failover scenarious for C++ EP SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-551'>KAA-551</a>] -         Introduce support of SDK tokens C++ SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-552'>KAA-552</a>] -         Introduce support of SDK tokens C SDK
</li>
</ul>
",17839346
800,False,True,2015-03-30T17:28:01Z,2015-03-31T10:12:53Z,"Kaa platform release, v0.7.0 includes:
- Support of Cassandra as a NoSQL Kaa database and log appender;
- Unified plugin system for user verification;
- Configuration subsystem support for C Endpoint SDK;
- User-specific configuration management;
- Broad range of demo applications added to the Kaa sandbox;
- Administrative UI and SDK API usability improvements.

Full changelog follows:

<h3>        Fixed Bugs
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-79'>KAA-79</a>] -         [UI] Tenant Developer isn&#39;t able to use one ECF for several mappings 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-298'>KAA-298</a>] -         Wrong title of Kaa debian packages
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-322'>KAA-322</a>] -         Can&#39;t delete application from Admin UI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-323'>KAA-323</a>] -         Unable to create configuration schema without default values
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-325'>KAA-325</a>] -         DefaultRecordGenerationAlgorithm does not support schemas without namespaces
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-336'>KAA-336</a>] -         Bootstrap server losses track of operation server due to concurrent zookeeper updates
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-337'>KAA-337</a>] -         TCP channel does not report socket close to Operations server
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-341'>KAA-341</a>] -         Server should reply with error code to invalid client messages
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-353'>KAA-353</a>] -         Unnecessary word capitalization in Admin UI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-361'>KAA-361</a>] -         Android client sends two requests instead of one
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-362'>KAA-362</a>] -         Default transport channel sends more than one CONNECT message on the authorization phase
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-363'>KAA-363</a>] -         Endpoints are not notified when topic is deleted.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-371'>KAA-371</a>] -         C Avro code generator does not support floating point types
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-385'>KAA-385</a>] -         Events have invalid sequence numbers after sequence number synchronization
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-387'>KAA-387</a>] -         Client receives notification from optional topic after successful unsubscription
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-389'>KAA-389</a>] -         Schema generation algorithm doesn&#39;t support records without namespaces
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-394'>KAA-394</a>] -         Configuration hash is persisted separately from configuration data in Java EP SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-400'>KAA-400</a>] -         C SDK doesn&#39;t support installation to a specific directory
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-401'>KAA-401</a>] -         Inconsistent wording in titles and captions in Admin UI 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-403'>KAA-403</a>] -         C EP SDK is not working with default profile schema
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-404'>KAA-404</a>] -         C EP SDK does not start with KAA_WITHOUT_LOGGING
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-405'>KAA-405</a>] -         Operations server expects &quot;schema versions info&quot; fields on each profile resync message
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-407'>KAA-407</a>] -         Events are cleared on start-up after sequence number synchronization
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-408'>KAA-408</a>] -         Operations server respond with full configuration resync in case when there is no configuration changes for the client
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-413'>KAA-413</a>] -         Kaa C endpoint is not able to reconnect to the server when the network connection is restored
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-431'>KAA-431</a>] -         Server should handle requests from applications with invalid token 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-433'>KAA-433</a>] -         C SDK sends wrong service count when no log record is added
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-435'>KAA-435</a>] -         AvroGen doesn&#39;t (de)serialize the Avro fixed type correctly
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-439'>KAA-439</a>] -         Add API for C SDK to retrieve Event FQNs
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-442'>KAA-442</a>] -         Can&#39;t generate complex configuration schema with recursion
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-446'>KAA-446</a>] -         Kaa notification demo issues
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-454'>KAA-454</a>] -         Schema-dependent declarations should be put in separate headers
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-455'>KAA-455</a>] -         Schema-dependent classes should be put in seperate namespaces
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-457'>KAA-457</a>] -         Client doesn&#39;t send the updated configuration hash to the server
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-458'>KAA-458</a>] -         C++ SDK always returns the empty endpoint access token
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-568'>KAA-568</a>] -         Java client reconnects to the bootstrap server with empty operations server list
</li>
</ul>
            

<h3>        Stories
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-43'>KAA-43</a>] -         Reconfigure and verify Admin UI user credentials storage into a Kaa common SQL DB
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-144'>KAA-144</a>] -         Report log delivery status back to the endpoint
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-243'>KAA-243</a>] -         Customize Akka configuration for operations server
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-244'>KAA-244</a>] -         Create a unified plugin system for user verification
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-250'>KAA-250</a>] -         Decouple Avro schema -&gt; UI forms generator into a separate from Kaa library
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-260'>KAA-260</a>] -         Cassandra DAO
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-261'>KAA-261</a>] -         Cassandra log appender
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-272'>KAA-272</a>] -         Add info on Cassandra log appender to Log appenders page 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-296'>KAA-296</a>] -         Implement configuration subsystem for C EP SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-299'>KAA-299</a>] -         Use avro-ui for populating notifications data
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-300'>KAA-300</a>] -         Use avro-ui for configuration data
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-303'>KAA-303</a>] -         User-specific configuration
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-304'>KAA-304</a>] -         Unit tests for kaa_memory_log_storage
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-321'>KAA-321</a>] -         Move from embedded to relational database for web admin user data.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-328'>KAA-328</a>] -         Add avro-ui sandbox page to Kaa sandbox
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-343'>KAA-343</a>] -         Java SDK API usability improvements
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-344'>KAA-344</a>] -         Admin UI usability improvements
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-352'>KAA-352</a>] -         Avro specific configuration objects for Java EP SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-356'>KAA-356</a>] -         Introduce resync configuration updates that are encoded using base configuration schema
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-366'>KAA-366</a>] -         Build instruction for x86-64 platform (C++ SDK)
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-370'>KAA-370</a>] -         Update log appender API with user id
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-376'>KAA-376</a>] -         Ubuntu Snappy integration for C/C++ SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-379'>KAA-379</a>] -         Android demo application for user verifiers
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-380'>KAA-380</a>] -         Java demo application for configuration system API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-381'>KAA-381</a>] -         Java demo application for notification system API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-382'>KAA-382</a>] -         Java demo application for data collection system API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-383'>KAA-383</a>] -         Java demo application for event system API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-384'>KAA-384</a>] -         Android demo application for notification system API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-390'>KAA-390</a>] -         Add REST method to get application by application token.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-391'>KAA-391</a>] -         Android demo application for configuration system API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-392'>KAA-392</a>] -         Automated AWS installation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-395'>KAA-395</a>] -         Improve configuration subsystem for C++ SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-398'>KAA-398</a>] -         Constant user entity addressing in kaa cluster
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-399'>KAA-399</a>] -         Android demo application for data collection API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-402'>KAA-402</a>] -         Android demo application for event API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-410'>KAA-410</a>] -         Improve sandbox page layout to efficiently visualize demo applications
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-411'>KAA-411</a>] -         Kaa&#39;s headers need to be installed into &#39;kaa&#39; folder 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-420'>KAA-420</a>] -         Review DAO layer implementation.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-422'>KAA-422</a>] -         Demo applications for C++ SDK
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-425'>KAA-425</a>] -         C++ SDK usability improvement
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-426'>KAA-426</a>] -         Update programming guide with new Java SDK API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-432'>KAA-432</a>] -         Sandbox UI layout refactoring
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-440'>KAA-440</a>] -         Review documentation in sample applications
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-443'>KAA-443</a>] -         Minor updates to REST API to cover Kaa 0.7.0 features and improvements
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-447'>KAA-447</a>] -         Sandbox app details improvements
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-448'>KAA-448</a>] -         Need to disable ability to edit existing topic
</li>
</ul>
    

<h3>        Tasks
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-203'>KAA-203</a>] -         Create API documenting guidelines 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-245'>KAA-245</a>] -         Create Glossary of technical terms and abbreviations
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-409'>KAA-409</a>] -         C++ SDK Configuration sample application
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-417'>KAA-417</a>] -         Update Log appenders page with valid REST API examples
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-419'>KAA-419</a>] -         Review spelling in Admin UI
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-436'>KAA-436</a>] -         C SDK sample application to demonstrate Event subsystem functionality
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-441'>KAA-441</a>] -         Sample application to demonstrate C++ Event subsystem
</li>
</ul>

<h3>        Technical tasks
</h3>

<ul>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-96'>KAA-96</a>] -          Logs delivery confirmation
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-187'>KAA-187</a>] -         Documentation for reporting log delivery status back to the endpoint
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-201'>KAA-201</a>] -         Installation Guide review and update
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-213'>KAA-213</a>] -         Update Java Endpoint to react on log delivery errors - failover, timeouts, etc
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-214'>KAA-214</a>] -         Update C++ Endpoint to react on log delivery errors - failover, timeouts, etc
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-215'>KAA-215</a>] -         Update C Endpoint to react on log delivery errors - failover, timeouts, etc
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-274'>KAA-274</a>] -         Add info on unified user verification plugin to Events page in Design reference
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-315'>KAA-315</a>] -         Update Sending notifications section in Admin UI guide 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-317'>KAA-317</a>] -         Update Admin UI guide to include web-based configuration management 
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-331'>KAA-331</a>] -         Implement facebook user verifier
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-332'>KAA-332</a>] -         Implement google+ user verifier
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-335'>KAA-335</a>] -         Documentation for the facebook user verifier usage
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-338'>KAA-338</a>] -         Documentation for the google plus user verifier usage
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-339'>KAA-339</a>] -         Documentation for a custom user verifier
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-342'>KAA-342</a>] -         Divide existing actors to different dispatchers
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-345'>KAA-345</a>] -         Review and improve notifications API.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-346'>KAA-346</a>] -         Hide internal SDK structure and provide only necessary methods to public usage
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-347'>KAA-347</a>] -         Review and improve profile container API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-348'>KAA-348</a>] -         Update logic of SDK generation to support new profile container API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-354'>KAA-354</a>] -         Implement twitter user verifier
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-355'>KAA-355</a>] -         Documentation for the Twitter user verifier usage
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-359'>KAA-359</a>] -         Implement platform-specific layer for EC19
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-364'>KAA-364</a>] -         Modify MongoDB structures to support user-specific configuration
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-365'>KAA-365</a>] -         Modify CassandraDB structures to support user-specific configuration
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-367'>KAA-367</a>] -         Modify actor system to support efficient configuration update monitoring and delivery
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-368'>KAA-368</a>] -         Design and implement API for user configuration updates
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-369'>KAA-369</a>] -         Update logic of SDK generation to support new event API
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-386'>KAA-386</a>] -         Update programming guide and other code samples related to the scope of changes
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-388'>KAA-388</a>] -         Update Admin UI guide with Avro UI instructions
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-396'>KAA-396</a>] -         Update C SDK to support user verifiers
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-397'>KAA-397</a>] -         Update C++ SDK to support user verifiers
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-423'>KAA-423</a>] -         Collecting data from endpoints (C++ SDK demo app)
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-429'>KAA-429</a>] -         Using notifications (C++ SDK demo app)
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-430'>KAA-430</a>] -         Hide internal C++ SDK structure and provide only necessary methods to public usage
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-434'>KAA-434</a>] -          Review and improve C++ SDK listeners and callbacks
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-449'>KAA-449</a>] -         Introduce default profile container and dedicated method for profile update.
</li>
<li>[<a href='http://jira.kaaproject.org/browse/KAA-476'>KAA-476</a>] -         Add documentation for the notification feature
</li>
</ul>
",17839346
801,False,True,2015-02-16T10:38:47Z,2015-02-16T11:55:05Z,"Kaa platform release, v0.6.3 includes:
- Improved transport modularization and simplified implementation of new transport protocols;
- Significantly improved C SDK;
- Support of binary platform-level protocol for Bootstrap server;
- Bug fixes, usability, and documentation improvements.
",17839346
802,False,True,2015-01-02T13:15:38Z,2015-01-02T18:25:08Z,"Kaa platform release, v0.6.2 includes:
- Significantly optimized C SDK code;
- Enhanced logging functionality;
- Bug fixes and usability improvements;
- Improved web UI.
",17839346
803,False,True,2014-11-28T17:13:48Z,2014-12-01T15:04:59Z,"Kaa platform release, v0.6.1 includes:
- Unified plug-in system for log appenders;
- Kaa log appenders for CDAP and Oracle NoSQL database;
- Logging feature for C SDK;
- Ability to send events in batches.
",17839346
804,False,True,2014-09-17T16:41:05Z,2014-09-17T18:23:34Z,"Kaa platform release, v0.6.0 includes:
- C client;
- Bootstrap TCP protocol support;
- Bug fixes.
",17839346
805,False,True,2014-08-15T14:19:56Z,2014-08-15T16:24:32Z,"Kaa platform release, v0.5.2 includes:
- TCP protocol support;
- Avro flume appender;
- Bug fixes.
",17839346
806,False,True,2014-08-04T15:03:26Z,2014-08-04T16:29:15Z,"Kaa platform release, v0.5.1 includes:
- C++ client;
- Sandbox;
- File log appender;
- Bug fixes.
",17839346
807,False,True,2014-07-11T19:00:10Z,2014-07-11T21:16:39Z,"Kaa platform release, v0.5 includes:
- Events subsystem;
- Logging subsystem;
- Advanced transport implementation.
",17839346
808,False,True,2014-05-30T18:01:43Z,2014-05-30T18:10:22Z,"Initial Kaa platform release, v0.4RC1 includes:
- Endpoint profiling, filtering, and grouping;
- Centralized data management;
- Notifications subsystem;
- Java-based endpoint implementation.
",17839346
809,False,False,2019-09-29T16:45:03Z,2019-10-04T18:47:23Z,,1951336
810,False,False,2019-09-24T07:10:13Z,2019-09-29T06:27:59Z,,1951336
811,False,False,2019-09-24T06:44:29Z,2019-09-24T07:01:42Z,,1951336
812,False,False,2019-08-28T19:27:03Z,2019-08-28T19:38:23Z,,1951336
813,False,False,2019-08-26T19:42:16Z,2019-08-26T19:56:44Z,,1951336
814,False,False,2018-10-11T19:06:50Z,2018-10-17T10:40:39Z,,1951336
815,False,False,2017-06-29T17:12:38Z,2017-06-29T17:14:25Z,,1951336
816,False,False,2017-06-24T11:17:01Z,2017-06-24T11:22:59Z,,1951336
817,False,False,2017-06-22T15:09:25Z,2017-06-22T15:10:22Z,,1951336
818,False,False,2017-05-26T19:52:29Z,2017-05-26T19:53:09Z,,1951336
819,False,False,2017-05-16T16:08:48Z,2017-05-16T16:13:46Z,,1951336
820,False,False,2017-05-05T15:46:40Z,2017-05-05T15:47:38Z,,1951336
821,False,False,2017-02-07T12:50:09Z,2017-02-07T13:06:39Z,,1951336
822,False,False,2017-01-26T15:50:40Z,2017-01-26T15:51:11Z,,1951336
823,False,False,2017-01-25T11:49:06Z,2017-01-25T11:56:18Z,,1951336
824,False,False,2016-12-07T14:44:08Z,2016-12-07T14:45:01Z,,1951336
825,False,False,2016-11-30T15:01:18Z,2016-11-30T15:10:19Z,,1951336
826,False,False,2016-11-23T07:34:59Z,2016-11-23T07:35:32Z,,1951336
827,False,False,2016-10-31T13:24:47Z,2016-10-31T13:25:24Z,,1951336
828,False,False,2016-04-13T13:36:24Z,2016-04-13T13:37:20Z,,1951336
829,False,False,2016-04-08T07:28:42Z,2016-04-08T07:31:42Z,,1951336
830,False,False,2016-03-23T13:06:25Z,2016-03-23T13:12:33Z,"- replace Spray with Akka
- increase message body size limits
- provide an option to create queues on startup
- add a special node-address setting: `*`, which uses the incoming request url to create queue urls
",1951336
831,False,False,2020-01-10T09:29:49Z,2020-01-10T09:30:10Z,"huggingface/transformers was updated to version 2.3.0

Changes:
- ALBERT works (bug was fixed in transformers). Does not yield improvements compared to BERT / RoBERTA
- T5 added (does not run on GPU due to a bug in transformers). Does not yield improvements compared to BERT / RoBERTA
- CamemBERT added
- XML-RoBERTa added",198616978
832,False,False,2019-12-06T14:08:24Z,2019-12-06T14:12:01Z,"This version update the underlying HuggingFace Transformer package to v2.2.1.

**Changes:**
- DistilBERT and ALBERT modules added
- Pre-trained models for RoBERTa and DistilBERT uploaded
- Some smaller bug-fixes",198616978
833,False,False,2019-08-20T17:14:33Z,2019-08-20T17:21:51Z,"No breaking changes. Just update with ```pip install -U sentence-transformers```

Bugfixes:
- SentenceTransformers can now be used with Windows (threw an exception before about invalid tensor types before)
- Outputs a warning if seq. length for BERT / RoBERTa is too long

Improvements:
- A flag can be set to hide the progress bar when a dataset is convert or an  evaluator is executed",198616978
834,False,False,2019-08-19T14:28:01Z,2019-08-19T14:38:06Z,"Updated pytorch-transformers to v1.1.0. Adding support for RoBERTa model.

Bugfixes:
- Critical bugfix for SoftmaxLoss: Classifier weights were not optimized in previous version
- Minor fix for including the timestamp of the output folders",198616978
835,False,False,2019-08-16T21:16:46Z,2019-08-16T21:19:12Z,This is a minor fix: Packages were not correctly defined for pypi,198616978
836,False,False,2019-08-16T08:07:48Z,2019-08-16T08:14:24Z,"v0.2.0 completely changes the architecture of sentence transformers. 

The new architecture is based on a sequential architecture: You define individual models that transform step-by-step a sentence to a fixed sized sentence embedding. 

The modular architecture allows to easily swap different components. You can choose between different embedding methods (BERT, XLNet, word embeddings), transformations (LSTM, CNN), weighting & pooling methods as well as adding deep averaging networks.

New models in this release:
- Word Embeddings (like GloVe) for computation of average word embeddings
- Word weighting, for example, with tf-idf values
- BiLSTM and CNN encoder, for example, to re-create the InferSent model
- Bag-of-Words (BoW) sentence representation. Optionally also with tf-idf weighting.

This release has many breaking changes with the previous release. If you need help with the migration, open a new issue.

New model storing procedure: Each sub-module is stored in its own subfolder. If you need to migrate old models, it is best to create the subfolder structure by the system (model.save()) and then to copy the pytorch_model.bin into the correct subfolder.",198616978
837,False,False,2019-07-25T07:59:51Z,2019-07-25T08:02:27Z,First release of sentence transformers framework,198616978
838,False,False,2020-01-31T10:15:13Z,2020-01-31T10:16:34Z,"# 0.31

## Improvements

* #947 dramatic read and recovery optimizations
* #921 reduced the reliance on locks while
  performing multithreaded IO on windows.
* #928 use `sync_file_range` on linux instead
  of a full fsync for most writes.
* #946 io_uring support changed to the `rio` crate
* #939 reduced memory consumption during
  zstd decompression

## Breaking Changes

* #927 use SQLite-style varints for serializing
  `u64`. This dramatically reduces the written
  bytes for databases that store small keys and
  values.
* #943 use varints for most of the fields in
  message headers, causing an additional large
  space reduction. combined with #927, these
  changes reduce bytes written by 68% for workloads
  writing small items.",49401416
839,False,False,2019-12-27T10:57:00Z,2019-12-27T10:58:22Z,"## New Features

* Added the `open` function for quickly opening a database at a path with default configuration.",49401416
840,False,False,2019-12-13T17:21:50Z,2019-12-13T17:23:29Z,"* much faster compile speeds after aggressive dependency pruning
* new storage format
* bugfixes in cache invalidation and combining transactions with compression",49401416
841,False,False,2019-10-16T15:30:43Z,2019-10-16T15:33:26Z,"## New Features

* The `Config::open` method has been added to give
  `Config` a similar feel to std's `fs::OpenOptions`.
  The `Config::build` and `Db::start` methods are
  now deprecated in favor of calling `Config::open`
  directly
* A `checksum` method has been added to Tree and Db
  for use in verifying backups and migrations.
* Transactions may now involve up to 69 different
  tables. Nice.
* The `TransactionError::Abort` variant has had
  a generic member added that can be returned
  as a way to return information from a
  manually-aborted transaction. An `abort` helper
  function has been added to reduce the boiler-
  plate required to return aborted results.

## Breaking Changes

* The `ConfigBuilder` structure has been removed
  in favor of a simplified `Config` structure
  with the same functionality.
* The way that sled versions are detected at
  initialization time is now independent of serde.
* The `cas` method is deprecated in favor of the new
  `compare_and_swap` method which now returns the
  proposed value that failed to be applied.
* Tree nodes now have constant prefix encoding
  lengths.
* The `io_buf_size` configurable renamed to
  `segment_size`.
* The `io_buf_size` configurable method has been
  removed from ConfigBuilder. This can be manually
  set by setting the attribute directly on the
  ConfigBuilder, but this is discouraged.
  Additionally, this must now be a power of 2.
* The `page_consolidation_threshold` method has been
  removed from ConfigBuilder, and this is now
  a constant of 10.",49401416
842,False,False,2019-09-08T15:26:17Z,2019-09-08T15:27:33Z,"## Breaking Changes

* `Event::Set` has been renamed to `Event::Insert` and
  `Event::Del` has been renamed to `Event::Remove`. These
  names better align with the methods of BTreeMap from
  the standard library.

## Bug Fixes

* A deadlock was possible in very high write volume
  situations when the segment accountant lock was
  taken by all IO threads while a task was blocked
  trying to submit a file truncation request to the
  threadpool while holding the segment accountant lock.

## New Features

* `flush_async` has been added to perform time-intensive
  flushing in an asynchronous manner, returning a Future.",49401416
843,False,False,2019-08-19T19:41:28Z,2019-08-19T19:42:31Z,"# 0.26

## New Features

* Transactions! You may now call `Tree::transaction` and
  perform reads, writes, and deletes within a provided
  closure with a `TransactionalTree` argument. This
  closure may be called multiple times if the transaction
  encounters a concurrent update in the process of its
  execution. Transactions may also be used on tuples of
  `Tree` objects, where the closure will then be
  parameterized on `TransactionalTree` instances providing
  access to each of the provided `Tree` instances. This
  allows you to atomically read and modify multiple
  `Tree` instances in a single atomic operation.
  These transactions are serializable, fully ACID,
  and optimistic.
* `Tree::apply_batch` allows you to apply a `Batch`
* `TransactionalTree::apply_batch` allow you to
  apply a `Batch` from within a transaction.

## Breaking Changes

* `Tree::batch` has been removed. Now you can directly
  create a `Batch` with `Batch::default()` and then apply
  it to a `Tree` with `Tree::apply_batch` or during a
  transaction using `TransactionalTree::apply_batch`.
  This facilitates multi-`Tree` batches via transactions.
* `Event::Merge` has been removed, and `Tree::merge` will
  now send a complete `Event::Set` item to be distributed
  to all listening subscribers.",49401416
844,False,False,2019-08-15T10:52:02Z,2019-08-15T10:53:22Z,,49401416
845,False,False,2019-04-01T17:50:52Z,2019-04-01T17:54:44Z,"This release brings big improvements to the underlying GC system for keeping file sizes under control, as well as some optimizations for the writepath.",49401416
846,False,False,2019-03-25T08:36:33Z,2019-03-25T08:39:27Z,"This release includes a large number of internal and external API cleanups. Some internal CAS-like operations will retry automatically when they fail due to changes that do not impact causality, like rewriting the same page to a new location. When CAS-like operations fail, they now return the new value that was created to insert in the first place, removing several double allocations. Lots of performance improvements.",49401416
847,False,False,2019-01-07T23:38:36Z,2019-01-07T23:40:35Z,"* non-backwards compatible release
* keyspace creation and deletion
* several optimizations to the pagecache",49401416
848,False,False,2018-10-28T19:14:28Z,2018-10-28T19:35:32Z,"This release introduces several optimizations and bugfixes. The biggest win is support for zero-copy reads when returning values to the user with the `Tree`'s `get`, `del`, `cas` and `scan` commands. We also now have zero-allocation tree traversal, optimized node searching, and caching improvements.

",49401416
849,False,False,2020-03-01T13:46:52Z,2020-03-01T14:45:02Z,"This release mainly feature the bidirectional Jira bridge, a dramatic webUI improvement and extensive bridges internal rework.

<div align=""center"">
  <img src=""https://user-images.githubusercontent.com/294669/75617106-d52e7f80-5b5a-11ea-800d-c79c5e4a6eeb.png"" />
</div>

@cheshirekow faced the Jira monster and wrote a complete bidirectional bridge. At the same time, work has been done to refactor the supporting internals, generalize and strengthen it. The next bridge will be much easier to write!

The webUI saw dramatic improvements with @sandhose and @ludovicm67 teaming up. Even though not everything is here yet, it already look and feel like a much more mature tool. The days of a fully featured webUI and even one open to user without git access are on the horizon.

Breaking changes
-  bridges configuration format changed. If you had a configured bridge, you will need to remove the section in the repo git config (.git/config) and the credentials in the global git config (~/.gitconfig) and configure it again

Core
- metadata system for the bridge's credentials
- credentials identifiers are now salted to avoid a direct relationship between the identifier and the secret
- added support for login only and login/password kind of credentials
- reusable generic prompt
- fix config reader not able to read values with spaces (@cheshirekow)
- migration to go modules

Bridges
- new fully-featured Jira importer and exporter, courtesy of @cheshirekow
- all bridges got their configurator deeply reworked to be more robust and consistent
- all bridges changed how they match identity and credentials to deal with hopefully all the cornercases
- gitlab: fix exporter not pushing properly with a custom base URL
- gitlab: fix automatic token generation with a custom base URL
- github: warning with the edited comment is missing instead of a failure

GraphQL
- smart resolving to use cached data in priority to get super fast browsing in the webUI
- merge of `DefaultRepository` and `Repository`

WebUI
- ability to write new comment
- UI refresh
- bug filtering and sorting
- conversion to typescript for a more robust codebase
- fully working GraphQL fragment matcher

:rocket: :sunny: ",140680839
850,False,False,2019-12-27T19:08:58Z,2019-12-31T17:17:43Z,"This release mainly feature the Github exporter, the bidirectional Gitlab bridge, extensive bridge improvements and better text support in the TermUI.

<div align=""center"">
  <img src=""https://user-images.githubusercontent.com/294669/70243310-a29b0380-1772-11ea-886e-bfb2b5dafe9e.png"" />
</div>

Thanks to the work of @A-Hilaly during *and after* the Google Summer of Code, numerous improvements have been made on the bridges. The Github workflow is now complete, a full Gitlab bridge has been added, support for cancellation and resume make them fast and robust.

An important work leading to the creation of https://github.com/MichaelMure/go-term-text has been done to provide a better text rendering in the CLI and the termUI, especially for languages with wide characters like Japanese or Chinese.

Breaking changes

- bridges configuration format changed. If you had a configured bridge, you will need to remove the section in the git config (in `.git/config`) and configure it again

Core

- Labels now have colors and are displayed in each UI and exposed in GraphQL, thanks to @ludovicm67 
- text formatting for the terminal (CLI and TermUI) as been extracted into its own reusable package: https://github.com/MichaelMure/go-term-text
- a new infrastructure for storing bridge's tokens and credentials has been added by @A-Hilaly. This allow in particular to reuse the same credential from multiple git repository.
- hash collision are now checked before storing a new operation

CLI

- new command `git-bug bridge push` to push updates to a remote bugtracker
- `git bug webui` learned the `--open` and `--no-open` flags to control if the UI should be automatically opened in the default browser, as well as the `git-bug.webui.open` git config to control the default behavior
- new command `git-bug bridge auth` to list known credentials
- new command `git-bug bridge auth add-token` to store a new token
- new command `git-bug bridge auth rm` to remove a credential
- new command `git-bug bridge auth show` to display a credential's detail
- the command `git-bug termui` learned the `git bug tui` alias
- PowerShell completion is now available

Bridges

All of the following changes have been implemented by @A-Hilaly , awesome work and a lot of thanks ! :heart: 

- new fully-featured Github exporter
- new fully-featured Gitlab importer
- new fully-featured Gitlab exporter
- the Github configurator learned to detect candidate projects from the git remotes
- all bridges now support cancellation for import and export
- all bridges now return a stream of events so that UIs can report them appropriately
- all bridges now tag bugs with their origin and exporter only export their own bugs to avoid unexpected situations. A way to control what is imported and exported will be added later
- all bridges can now read a token from stdin during the configuration to avoid logging it in the shell history
- Github and Gitlab bridges now support resume for a much faster import after the first import
- Github and Gitlab bridges now have automated test suites

GraphQL

- mutations now conform to the Relay specification
- `repository.ValidLabels` is now a connection

WebUI:

- @sandhose  worked at improving the code architecture to prepare for more features
- messages are now properly renderd in Markdown, thanks to @sandhose 

:rocket: :sunny: ",140680839
851,False,False,2019-04-21T23:26:01Z,2019-04-21T23:41:12Z,"This release mainly feature a huge rework of how identities are handled. While they were previously fully embedded in every single bug operations, they are now deported in their own data structure.

![image](https://user-images.githubusercontent.com/294669/56471590-80a77780-6454-11e9-8914-7b9dd13aa69a.png)

Reworking `git-bug` to add this whole new identity data model has been a [long and arduous journey](https://github.com/MichaelMure/git-bug/pull/89). Indeed, the concept of identity is so central in a bug tracker that it touched pretty much every file of the project. It took two months to be able to fully compile the project again. Good thing that golang allow to proceed step by step and check that everything works with a set of tests!

This work already yielded some benefits: less memory and storage usage, more performance, or simply being able to query bugs by author or participants. But the real benefit is that is will, once we add cryptographic keys to the identities, serve as a foundation to build more advanced features:
- commit signature to authenticate bug edition or even code authors
- an access right policy with different role (administrator , ...)
- encrypted comment or bugs for sensitive discussion

Note: while `git-bug` will only guarantee a stable data model when the 1.0 version is reached, this huge change **is backward compatible** !

Core
- a whole new data model has been added to store user identities, allowing to store the identity only once, update it, and in the future, to store cryptographic keys. This change spread to the whole stack including the cache layer, all the UI and the bridges
- go 1.8 is not supported anymore due to a dependency update
- bugs now expose the list of actors and participants, thanks to @A-Hilaly 
- it's now possible to have empty comments, thanks to @Steap. This change was necessary to import data from external bug trackers
- the shortened version of a hash is now consistently 7 characters long, thanks to @seeduvax 

Query language
- it's now possible to filter the bug list with a title pattern, thanks to @sladyn98 
- it's now possible to filter the bug list by actors or participants, thanks to @A-Hilaly 
- multiple label filter now match bugs with either one of them instead of bugs with all of them, thanks to @njthomas and @sladyn98 
- identities can now also be queried with an ID or an ID prefix (`author:3bb1db1`) in addition to the normal string pattern (`author:descartes`), thanks to @A-Hilaly 

CLI
- new command `git bug user` to display the current identity
- new command `git bug user create` to create a new identity
- new command `git bug user ls` to list existing identities
- new command `git bug user adopt` to select an identity as your own, for example after an import from an external bug tracker
- new command `git bug ls-id [<prefix>]` to list either all bug ids or the matching ones, thanks to @sladyn98. This command is intended to help scripting. 
- new command `git bug version` that display a complete view of what version is running, including the git hash
- `git bug show` can now output specific fields with `--field <name>`, thanks to @seeduvax 
- commands now catch properly interruption signals and unlock the cache before exiting, thanks to @auyer 
- `Building bug cache...` and friends are now properly sent to `stderr` for easier filtering
- `git bug ls` is now super fast by using only cache data, thanks to @sladyn98 
- @jfacchini cleaned and improved the commands documentation !

TermUI
- the bug table now only use data from the cache, making it super fast
- text layout and display of Chinese and other non-latin languages has been fixed, big thanks to @ProgramFan 
- minor layout improvements to better use the screen space
- browsing the bug is now more natural, as reaching the bottom load the next page, thanks to @Steap 
- fixed a crash when trying to edit a comment while none were selected, thanks to @ludovicm67 

WebUI
- the webUI now use the `Timeline` API and properly display updated comments, thanks to @sandhose 
- the timeline page now looks better, thanks to @sandhose 

GraphQL
- now expose bug's actor and participants, thanks to @A-Hilaly 
- now expose valid labels, thanks to @ludovicm67 

Bridges
- there is now a partial Launchpad importer (!), thanks to @Steap 

And of course, the usual bug fixes and minor improvements.

:rocket: :sunny: ",140680839
852,False,False,2018-10-21T10:33:08Z,2018-10-21T10:42:57Z,"This release mainly feature the Github importer, support for comment edition and an extensive UX rework for the CLI commands.

![image](https://user-images.githubusercontent.com/294669/47265649-91ba0f00-d52b-11e8-9221-99b0a2e87b0b.png)

A new import/export framework has been added with its first offspring, the [Github importer](https://github.com/MichaelMure/git-bug/issues/7). This incremental importer will replicate into `git-bug` the Github issues, including the comment edition. Its complement, the exporter, is not that far away and will allow to use `git-bug` as an offline remote for Github.

This work on the importer really was a stress test on the data model and the code architecture. Part of that effort was to add support for comment edition. A new `EditCommentOperation` now allow to edit a previous comment while still keeping the data model immutable and conflict free. Due to its retroactive effect,the raw stream of operations does not anymore match what an UI should display. To remedy to that problem, the `Snapshot`, compiled from the stream of operations, now feature an properly processed `Timeline`.

Another important work, the CLI commands received a good [UX cleanup](https://github.com/MichaelMure/git-bug/issues/2) to be generally more discoverable and better match the `git` experience. Annoyed to have to type a bug id or prefix for each command ? You can now use `git bug select` to have it selected implicitly for your next commands.

So, is it ready for prime time ? Not yet I'm afraid. A last needed important change to the data model is the rework of the [identity management](https://github.com/MichaelMure/git-bug/issues/55). This will likely be part of the next version, along with the Github exporter. Any help with that or any part of git-bug will be greatly appreciated. This is your time to make `git-bug` **your** tool.

Core

- operations are now validated before being applied
- operations can now be tagged with arbitrary key/value metadata.
- core now support comment edition with a new `EditCommentOperation`

CLI

- rename `git bug new` to `git bug add`
- new command `git bug select` to select a bug for implicit use later
- new command `git bug deselect` to clear the selected bug
- `git bug comment` now display the comments of a bug instead of adding a new comment
- new command `git bug comment add` to add a new comment
- new command `git bug title` to display the title of a bug
- new command `git bug title edit` to change the title of a bug
- new command `git bug status` to display the status of a bug
- `open` and `close` are now sub-commands of `git bug status`
- new command `git bug label` to display the labels of a bug
- new command `git bug label add` to add a new label to a bug
- new command `git bug label rm` to remove a label from a bug
- new command `git bug ls-labels` to list labels already used in the repository
- new command `git bug bridge` to list configured bridge
- new command `git bug bridge configure` to configure a new bridge
- new command `git bug bridge pull` to 

TermUI:

- better responsible view for the bug table
- support for opening/closing a bug, thanks to @adamslc
- support for comment edition, thanks to @adamslc 
- better label edition, thanks to @adamslc 

GraphQL:

- the API is now auto-documented
- the new `Timeline` is now exposed

And of course, the usual bug fixes and minor improvements.

:rocket: :sunny: ",140680839
853,False,False,2018-09-13T16:05:13Z,2018-09-13T16:13:06Z,"This release feature mainly the work to make git-bug both future proof and efficient.

A new [caching layer](https://github.com/MichaelMure/git-bug/tree/master/cache) has been added to serve as a backend on top of the low-level access, index bugs and keep them in memory for long lasting scenario. The index is stored on disk and allow to query a repository with 10k bugs pretty much instantly.

A [query language](https://github.com/MichaelMure/git-bug/blob/master/doc/queries.md) has been implemented to be able to filter and sort the bug list.

After [research](https://github.com/MichaelMure/git-bug/issues/5), the serialization format has been changed to JSON for an easier interoperability with any other tool that may want to pickup the format. While JSON is quite verbose, it [does compress very well](https://github.com/MichaelMure/git-bug/issues/5#issuecomment-420689243) when stored in git. The new format is also versioned to be backward compatible. **Note that this is not in itself a backward compatible change, and bugs stored before will not be readable anymore.** git-bug is still not considered stable for real usage, but it's fairly close now.

Thanks to @vandesign, git-bug now has a [logo](https://github.com/MichaelMure/git-bug/tree/master/misc/logo) !

CLI:
- `git bug ls` now accept either a [query](https://github.com/MichaelMure/git-bug/blob/master/doc/queries.md) or flags to filter and sort the list.

TermUI: 
- you can now sort and filter the bug list with a [query](https://github.com/MichaelMure/git-bug/blob/master/doc/queries.md) 
- by default, show only open bugs

WebUI:
- labels are displayed with nice generated colors (#19)
- GraphQL API now accept a query to filter and sort bugs

And of course, the usual bug fixes and minor improvements.

:rocket: :sunny: ",140680839
854,False,False,2018-08-17T11:37:50Z,2018-08-17T11:46:36Z,"This release feature:

- a revamped web UI
- various fixes, especially on the terminal UI

:rocket: :sunny: ",140680839
855,False,False,2018-08-12T19:35:41Z,2018-08-12T19:44:34Z,"This first tagged version showcase the core features of `git-bug`, including:

- data model to store bugs
- push/pull to a git remote with no-conflict merge
- a git porcelain command that serve as entry point for all the features
- a collection of CLI commands for non-interactive usage
- an interactive terminal UI
- a GraphQL API for reading and editing bugs
- a proof-of-concept rich web UI all embedded in the go binary
- bash and Zsh completion, documentations and manpages

:rocket: :sunny: ",140680839
856,False,False,2020-02-17T11:10:54Z,2020-02-17T11:13:05Z,This is a maintenance release fixing issues that sneaked into the 1.10.0 release and also adding some minor features that did not make it into 1.10.0. Upgrading is recommended.,6376337
857,False,False,2020-01-27T15:19:45Z,2020-01-27T15:22:06Z,"This is a major upgrade to the POCO C++ Libraries, introducing the PocoJWT and PocoDataPostgreSQL libraries, along with C++14 support.",6376337
858,False,False,2019-09-18T07:37:47Z,2019-09-18T07:46:16Z,This is a security maintenance release that fixes CVE-2019-15903 in the bundled expat XML parser. Upgrading is recommended.,6376337
859,False,False,2019-08-20T18:51:30Z,2019-08-20T18:53:03Z,This is a maintenance release containing bug fixes and minor new features. Upgrading is recommended.,6376337
860,False,False,2019-07-02T04:26:11Z,2019-07-02T04:32:55Z,"This is a maintenance release that most importantly updates the bundled libexpat XML parser library to release 2.2.7, which fixes a potential vulnerability (CVE-2018-20843). The release also includes fixes to CMake when building on Windows with a Windows 10 SDK (mc.exe not found) and to the caching framework.",6376337
861,False,False,2019-06-25T11:11:52Z,2019-06-25T11:14:48Z,"This is a maintenance release, fixing a few bugs and upgrading bundled external components PCRE and SQLite to newer versions.",6376337
862,False,False,2018-04-15T15:28:26Z,2018-04-18T05:51:41Z,,6376337
863,False,False,2020-02-22T06:18:26Z,2020-02-23T03:35:49Z,"# v2.3.0

## 基础功能

- `model_optimize_tool` 升级为 `opt`  ：[模型转化方法](https://paddle-lite.readthedocs.io/zh/latest/user_guides/model_optimize_tool.html#id4) 
	- 支持输出模型算子、Lite所有算子、可以判断模型是否支持提示信息([#2624](https://github.com/PaddlePaddle/Paddle-Lite/pull/2624)，[opt统计算子方法](https://paddle-lite.readthedocs.io/zh/latest/user_guides/model_optimize_tool.html#id4))；
	-  `model_optimize_tool` 工具更名为 `opt`[#2850](https://github.com/PaddlePaddle/Paddle-Lite/pull/2850) （ `opt` 取自 `llvm/opt` ），未来会将更多静态模型的分析、优化功能加入到这个工具中。
- Paddle-Lite Naive Buffer 模型优化支持输出为单个文件：[#2800](https://github.com/PaddlePaddle/Paddle-Lite/pull/2800)
	- 为了简化移动端模型部署，将原有 Naive Buffer 格式需要的两个文件合并为一个文件；
	- *原有的两个文件的模型格式依旧支持，但会在未来 v3.0 废弃*；
	- 修改 `model_optimize_tool` (现 `opt`) 转化出的模型格式为单个文件（由`_model`变为单个文件`modelname.nb`）；
	- 对应 Naive Buffer 合并后的模型格式，新增加载新格式模型的接口
		- C++接口:	
			- [MobileConfig::set_model_from_file(model_file)](https://paddle-lite.readthedocs.io/zh/latest/api_reference/cxx_api_doc.html#set-model-from-file-model-dir)
			- [MobileConfig::set_model_from_buffer(model_buffer)](https://paddle-lite.readthedocs.io/zh/latest/api_reference/cxx_api_doc.html#set-model-from-buffer-model-buffer)
		- Python接口：
			- [set_model_from_file(model_file)](https://paddle-lite.readthedocs.io/zh/latest/api_reference/python_api_doc.html#set-model-from-file-model-file) 
			- [set_model_from_buffer(model_buffer)](https://paddle-lite.readthedocs.io/zh/latest/api_reference/python_api_doc.html#set-model-from-buffer-model-buffer)
		- Java接口：
			- [setModelFromFile(model_file)](https://paddle-lite.readthedocs.io/zh/latest/api_reference/java_api_doc.html#setmodelfromfile-model-file) 
			- [setModelFromBuffer(model_buffer)](https://paddle-lite.readthedocs.io/zh/latest/api_reference/java_api_doc.html#setmodelfrombuffer-model-buffer)
		- *原有加载接口依旧支持，但会在未来 v3.0 废弃*
- PaddleLite支持“无校准数据的训练后量化方法”产出的量化模型，模型大小减小2~4倍，详细数据见[#2719](https://github.com/PaddlePaddle/Paddle-Lite/pull/2791)，使用方法见[文档](https://paddle-lite.readthedocs.io/zh/latest/advanced_user_guides/post_quant_no_data.html)。

- Arm
	1. 新增对multiclass_nms2 op的支持，支持return_index参数[#2917](https://github.com/PddlePaddle/Paddle-Lite/pull/2917)
	2. 新增5x5  stride = 2 fp32 depthwise conv的kernel实现 [#2770](https://github.com/PaddlePaddle/Paddle-Lite/pull/2770)
	3. 新增5x5 stride = 2 int8  depthwise conv的kernel实现 [#2813](https://github.com/PaddlePaddle/Paddle-Lite/pull/2813)
	4. 重构5x5 stride = 1 fp32 depthwise conv的kernel实现，支持任意padding [#2917](https://github.com/PaddlePaddle/Paddle-Lite/pull/2797)
	4. fp32 conv支持 relu6, leakey relu 融合 [#2797](https://github.com/PaddlePaddle/Paddle-Lite/pull/2797) [#2781](https://github.com/PaddlePaddle/Paddle-Lite/pull/2781) [#2674](https://github.com/PaddlePaddle/Paddle-Lite/pull/2674)
	5. 新增fc + relu 融合 [#2765](https://github.com/PaddlePaddle/Paddle-Lite/pull/2765) 

- X86新增 leaky_relu kernel。[#2819](https://github.com/PaddlePaddle/Paddle-Lite/pull/2819)

- FPGA新增
  onehot、yolobox op, 新增支持yolo、ocr模型支持

- XPU新增
	1. tanh、stack、gather、lookup_table、slice、layer_norm、gelu、dropout、matmul、cast的bridge。
	2. 新增BERT模型的支持。
	3. 迁移op bridge单测。
(#2640、#2646、#2650、#2653、#2665、#2666、#2668、#2676、#2686、#2700、#2706、#2711、#2714、#2735、#2738、#2817、#2857)

- NPU新增
	 1. dropout、fusion_elementwise_sub_activation、fusion_elementwise_mul_activation、fusion_elementwise_div_activation、matm、unsqueeze、unsqueeze2、instance_norm、layer_norm 的 op bridge。
	 2.  新增Cycle-GAN模型的支持(需要华为内部Rom的支持)。
	 3. 迁移op bridge单测。
 (#2745、#2747、#2753、#276、#2764、#2767、#2773、#2784、#2790、#2798、#2847、#2849、#2857、#29)

- 新增OpenCL Image2D Kernel，包含30个Image2D Kernel，涵盖14个OP。
  包括不限于 nearset_interp、reshape2、concat、sigmoid/relu6/relu、elementwise_add/mul、conv2d/depthwise_conv2d、pool2d。
（#2837、#2806、#2771、#2788、#2815、#2802、#2853、#2861、#2844、#2838、#2837、#2818）

- ArmLinux编译新增对飞腾CPU的支持 (FT2000PLUS测试通过) [#2571](https://github.com/PaddlePaddle/Paddle-Lite/pull/2751)


## 性能
-  提高Naive模型加载速度: 减少内存拷贝过程，提高模型加载速度   [#2726](https://github.com/PaddlePaddle/Paddle-Lite/pull/2726)，[#2736](https://github.com/PaddlePaddle/Paddle-Lite/pull/2836)
 性能数据： 模型加载过程耗时缩短为`v2.2.0`的1/4  。(transformer模型单次加载时间从1.2s降低为0.3s)
 
-  提升由tensorflow模型转为paddle模型在arm cpu上的性能表现

-  提升含conv + relu6或conv + leakey relu op的模型在arm cpu上的性能表现

-  提升含5x5 stride = 2 depthwise conv op的量化模型在arm cpu上的性能表现
（rk3288上模型耗时由143ms->68ms，注：模型为内部使用模型）

## 文档

- 发布全新的文档官网 [https://paddle-lite.readthedocs.io/zh/release-v2.3/](https://paddle-lite.readthedocs.io/zh/release-v2.3/)。
- 迁移文档到新的官网 。（#2820、#2840、#2923 、#2932、#2934、#2936 ）
- 新增“有校准数据的训练后量化方法”和“无校准数据的训练后量化方法”使用文档。[#2960](https://github.com/PaddlePaddle/Paddle-Lite/pull/2960)

## Demo

-  Cxx Demo新增口罩检测Demo [#2682](https://github.com/PaddlePaddle/Paddle-Lite/pull/2862)
-  Cxx Demo新增CV预处理库Demo [#2691](https://github.com/PaddlePaddle/Paddle-Lite/pull/2691)
-  Cxx Demo新增YOLOv3目标检测Demo [#2713](https://github.com/PaddlePaddle/Paddle-Lite/pull/2731)

## bug fix

1. conv_tranpose支持output_size参数，与paddle fluid对齐。[#2749](https://github.com/PaddlePaddle/Paddle-Lite/pull/2749)
2. ch_norm 支持bool格式的参数ist [2846](https://github.com/PaddlePaddle/Paddle-Lite/pull/2846/files)
3. 修复Mac环境下的cxx_demo不可以编译的问题[#2792](https://github.com/PaddlePaddle/Paddle-Lite/pull/2792/files)
4. 修复部分op set lod_tensor bug [#2732](https://github.com/PaddlePaddle/Paddle-Lite/pull/2732) [#2750](https://github.com/PaddlePaddle/Paddle-Lite/pull/2750)",104208128
864,False,False,2019-12-31T09:12:57Z,2020-01-02T03:34:00Z,"# v2.2.0

## 基础功能
- 新增算子
	- 【ARM CPU】
		- 支持 grid sampler kernel，以支持GAN相关模型，详见[链接](https://github.com/PaddlePaddle/Paddle-Lite/commit/3723451bdf104fe863c8c90a2903054ac64f21eb)
		- 支持 instance norm kernel，以支持GAN相关模型，详见[链接](https://github.com/PaddlePaddle/Paddle-Lite/commit/9a3552dbb86c1874a4dc3b4b85070a4aec97f185)
		- 支持 split_lod_tensor、merge_lod_tensor、reduce_prod、conditional_block、collect_fpn_proposals、distribute_fpn_proposals，详见[链接](https://github.com/PaddlePaddle/Paddle-Lite/pull/2484)、[链接](https://github.com/PaddlePaddle/Paddle-Lite/pull/2588)
	- 【FPGA】
	  - 新增FPGA kernel: concat、dropout、im2sequence、mul、multiclass_nms、norm、prior_box、reshape、transpose , 详见[链接](https://github.com/PaddlePaddle/Paddle-Lite/commit/3723451bdf104fe863c8c90a2903054ac64f21eb)
- 新增模型
	- 【ARM CPU】 
		- 支持Mask RCNN，详见[链接](https://github.com/PaddlePaddle/Paddle-Lite/pull/2484) 
			
- 添加Demo
	- mobile_classify  分类C++ API demo，支持图片输入， 见PR[2657](https://github.com/PaddlePaddle/Paddle-Lite/pull/2657) 
	- mobile_detection 检查C++ API demo，支持图片输入， 见PR[2541](https://github.com/PaddlePaddle/Paddle-Lite/pull/2541) 
	- [Paddle-Lite-Demo](https://github.com/PaddlePaddle/Paddle-Lite-Demo) 采用编译时在线下载Paddle Lite库和模型的方式，将[repo](https://github.com/PaddlePaddle/Paddle-Lite-Demo/archive/master.zip)压缩到4MB，解决因github访问过慢而无法下载的问题。
	- [Paddle-Lite-Demo](https://github.com/PaddlePaddle/Paddle-Lite-Demo) 增加Face Detection Demo for Android、Human Segmentation Demo for Android。
- x86基于CxxConfig新增API，详见PR[2592](https://github.com/PaddlePaddle/Paddle-Lite/pull/2592)
    - `set_cpu_math_library_num_threads(int threads)` 用于设置x86 Math库线程数，x86核心数支持情况下可加速预测。默认为1，并且仅在x86下有效。
    - `cpu_math_library_num_threads()` 返回x86 Math库线程数，x86核心数支持情况下可加速预测。仅在x86下有效。
- 其他特性：
	- 增加【ARM CPU】端 `elmentwise_mul_constant_eliminate` 、 deconv+relu、 deconv+batchnorm 算子融合，见PR[2604](https://github.com/PaddlePaddle/Paddle-Lite/pull/2604)
	- Java API `setData` 或 `getData` 接口支持 INT 数据类型，用以支持yolov3
	- [model_optimize_tool](https://paddlepaddle.github.io/Paddle-Lite/v2.2.0/model_optimize_tool/)支持生成NPU模型（仅需要将valid_targets设置为npu,arm），具体实现原理详见PR[2576](https://github.com/PaddlePaddle/Paddle-Lite/pull/2576)
	- [model_optimize_tool](https://paddlepaddle.github.io/Paddle-Lite/v2.2.0/model_optimize_tool/)支持打印当前Lite OP的信息，转化前检查模型是否支持（模型中的OP&kernel是否都支持），打印help信息


## 性能
-  【ARM CPU】提升最近邻差值kenrel性能，相比于原实现有1.5倍左右的性能提升，详见[链接](https://github.com/PaddlePaddle/Paddle-Lite/commit/9a3552dbb86c1874a4dc3b4b85070a4aec97f185)
-  【ARM CPU】提升arm cpu conv3x3多线程性能，添加winograd f(2,3)实现


## 编译
- Tiny publish发布包中新增C++静态库
- CXX Demo中新增图像分类，图像检测Demo

## 文档
- 补齐[CXX Demo](https://github.com/PaddlePaddle/Paddle-Lite/blob/gh-pages/_all_pages/develop/cpp_demo.md)文档
- 补充[basic基础预测库说明文档](https://paddlepaddle.github.io/Paddle-Lite/v2.1.0/library/)，说明基础预测库支持的模型，build_extra=ON&OFF的意义
- 更新[模型量化文档](https://paddlepaddle.github.io/Paddle-Lite/v2.2.0/model_quantization/)，明确激活不应该采用abs_max量化方式
- 更新[使用华为NPU](https://paddlepaddle.github.io/Paddle-Lite/v2.2.0/npu/)，增加 `full_publish` 和 `tiny_publish` 编译命令，补充已支持机型、已支持模型和已支持Paddle算子 

## Bug fix
- 修复ios demo编译失败问题，详见[链接](https://github.com/PaddlePaddle/Paddle-Lite/commit/0c44ac9c88df5310329a7ce370ea5e18466f85a1) 
- 【ARM】修复global pooling kernel选择机制，对于参数匹配到global pooling的case，
    将会选择global pooling，详见[链接](https://github.com/PaddlePaddle/Paddle-Lite/commit/49f0364803fd2f0dadbd35d86b3c9dc358a0574e)
-  消除VLOG对预测性能的影响，提升paddle lite在低端CPU上的性能，详见[链接](https://github.com/PaddlePaddle/Paddle-Lite/commit/49f0364803fd2f0dadbd35d86b3c9dc358a0574e)",104208128
865,False,False,2019-11-30T10:02:47Z,2019-12-01T10:34:04Z,"# V2.1.0

## 重点功能

- 新增ARM端图像预处理库
	- 支持多种颜色空间转换，如 `NV12_To_RGB`、`GRAR_To_RGB` 等
	- 支持多种图像预处理操作，如图像旋转、翻转等
	- 支持图像数据到tensor的转换，如RGB_To_NCHW(Tensor)等
	- 相关功能性能优于 OpenCV 处理速度
- 增加多个模型裁剪预测库功能。用户给定多个模型，按需裁剪预测库的算子，只保留提供模型线上预测所需要的功能，最大化压缩预测库体积。相关文档可参考[裁剪预测库方法](https://paddlepaddle.github.io/Paddle-Lite/v2.1.0/library_tailoring/#%E6%8C%89%E6%A8%A1%E5%9E%8B%E9%9B%86%E5%90%88%E8%A3%81%E5%89%AA%E9%A2%84%E6%B5%8B%E5%BA%93)。
- 加强报错信息，Android 中支持原生系统报错

## 基础功能升级

- 新增op
  - x86 tanh, gelu, pr[2265](https://github.com/PaddlePaddle/Paddle-Lite/pull/2265)
  - x86 stack, pr[2458](https://github.com/PaddlePaddle/Paddle-Lite/pull/2458)
- 新增模型
  - X86增加MobileNet_v1, MobileNet_v2支持，见pr[2420](https://github.com/PaddlePaddle/Paddle-Lite/pull/2420)

- op升级，与飞桨核心框架（以下简称Paddle）对齐
  - reshape支持输入ShapeTensor、Tensor，见pr[2377](https://github.com/PaddlePaddle/Paddle-Lite/pull/2377)
  - slice支持输入StartsTensor、StartsTensorList，见pr[2377](https://github.com/PaddlePaddle/Paddle-Lite/pull/2377)
  - lookup_table根据 Paddle 升级修改，去除最后一维必须为1的限制，保留原op，新op为lookup_table_v2，见pr[2405](https://github.com/PaddlePaddle/Paddle-Lite/pull/2405)
  - resize_bilinear和resize_nearest根据 Paddle 升级，增加对list的Tensor输入shape和对Tensor输入scale的支持，见pr[2406](https://github.com/PaddlePaddle/Paddle-Lite/pull/2406)

- api对齐
  - python、java、C++三种 api核心接口对齐
	  - 其中，python 和 C++ 完整对齐了 `MobileConfig` 和 `CxxConfig` 两个模式
	  - Java 定位为 Android端使用，只对其了 `MobileConfig`
	  
- 升级量化模型支持
	- 支持PaddlePaddle训练后量化方法产出的量化模型，比如mobilenet_v1、 mobilenet_v2、resnet50，见pr[2368](https://github.com/PaddlePaddle/Paddle-Lite/pull/2368)，使用方法请参考[文档](https://paddlepaddle.github.io/Paddle-Lite/v2.1.0/model_quantization/#%E8%AE%AD%E7%BB%83%E5%90%8E%E9%87%8F%E5%8C%96)。
	- 支持PaddlePaddle量化训练方法产出权重量化方式为channel_wise_abs_max的量化模型，见pr[2368](https://github.com/PaddlePaddle/Paddle-Lite/pull/2368)。

- 预测库整理：重新整理核心库包含的（basic） OP&Kernel，使基础预测库（`build_extra=OFF`）完整支持CV相关9个核心模型（包括Paddle原生模型和对应的 X2Paddle第三方转化模型）和三个量化模型。且`tiny_publish`下预测动态库体积不变。支持模型如下：
	- 9个基础模型及其 Paddle 转化模型：mobileNetV1、mobileNetV2、mnasnet、resnet50、yolov3、ssd_mobilenetv1、 unet、squeezenet_v11、shufflenet_v2
	
	- 三个int8量化模型：mobilenet_v1、mobilenet_v2、resnet50
 
## 性能

- ARM CPU Conv3x3 性能提升。 改进ARM CPU Conv3x3实现方式，在Resnet、Squeezenet等模型上提升性能。

## 编译
- X86与 CUDA 编译时第三方库下载加速   (X86编译相关的第三方库`eigen、mklml、xxhash`改为从百度云地址下载，加速编译过程)
- NPU的编译支持华为官方最新版[HiAI DDK 310](https://developer.huawei.com/consumer/cn/hiai)

## 文档
- 新增[Pass介绍与注册方法](https://paddlepaddle.github.io/Paddle-Lite/v2.1.0/add_new_pass/)文档   
- 补齐了 [Cxx API](https://paddlepaddle.github.io/Paddle-Lite/v2.1.0/cxx_api_doc/)文档 
- 新增[CV图像预处理库API接口介绍](https://paddlepaddle.github.io/Paddle-Lite/v2.1.0/cv/)文档 
- 新增[部署训练后量化模型的使用示例](https://paddlepaddle.github.io/Paddle-Lite/v2.1.0/model_quantization/#%E8%AE%AD%E7%BB%83%E5%90%8E%E9%87%8F%E5%8C%96)文档


## Bug 修复

- 修复 jit::matmul 特定尺寸下计算错误的bug：输入x, shape(m, k) weight, shape(k, n)，当k < 512，m==1, 且n是16的倍数时，jit分组group计算错误，详情见pr [2392](https://github.com/PaddlePaddle/Paddle-Lite/pull/2392)
- 修复yolo_box cuda kernel多次运行结果出错的bug：多次运行时没有将上一次的结果清零，会保留之前计算的结果，详情见pr[2245](https://github.com/PaddlePaddle/Paddle-Lite/pull/2245)
- 修复fill_constant kernel的bug：没有用到dtype属性，默认输出float tensor，修复后根据dtype属性判断输出类型，详情见pr[2376](https://github.com/PaddlePaddle/Paddle-Lite/pull/2376)
- 修复convolution X86 kernel由于share_data_with导致的运行多次以后输出结果不正确的bug，详情见pr[2420](https://github.com/PaddlePaddle/Paddle-Lite/pull/2420)
- 修复多线程跑模型会随机crash的问题


",104208128
866,False,False,2019-11-06T16:49:18Z,2019-11-07T01:32:43Z,"# Release Note


## 重点功能

- 新增 CUDA 预测支持， 详情参考[here]( https://paddlepaddle.github.io/Paddle-Lite/v2.0.0/cuda/ )，兼容模型列表如下：

    - INT8 量化模型
        - yolov3，P4下性能为30ms/image.
    - FP32模型
        - yolov3
        - alexnet
        - unet

- 支持 [Nvidia Jetson TX2](https://www.nvidia.cn/autonomous-machines/embedded-systems/jetson-tx2/)  的CUDA 编译和部署，支持的模型如下：

	- yolov3 fp32
	- alexnet fp32
	- unet fp32 

- 初步支持 X86 CPU 预测部署，支持 inception v4, googlenet, resnet50 等3个模型，详情参考 [here]( https://paddlepaddle.github.io/Paddle-Lite/v2.0.0/x86/ )
- 增加 Python API 支持，已经在 ARM Linux 和 CUDA 上验证，详细参考 [here](https://paddlepaddle.github.io/Paddle-Lite/v2.0.0/python_api_doc/)
- 支持根据模型极致裁剪动态库，可以极大压缩单个模型的手机端ARM CPU预测库，详情参考 [here](https://paddlepaddle.github.io/Paddle-Lite/v2.0.0/library_tailoring/).
- ARM CPU INT8 量化模型预测支持加强，增加以下模型支持

  - shufflenetv2
  - mobilenet-ssd
  - vgg16
  - googlenet

- ARM CPU FP32 新增如下模型支持
	- transformer   
	- facebox 
	- blazeface 

transformer 开源模型待发布；facebox和blazeface的模型可从[Paddle/Models](https://github.com/PaddlePaddle/models/tree/develop/PaddleCV/PaddleDetection/configs/face_detection#model-zoo)仓库下获取，得到的训练格式的模型，还需转换成inference格式。以 `blazeface_original` 为例，转换过程如下

```bash
git clone https://github.com/PaddlePaddle/models.git
cd mode/PaddleCV/PaddleDetection
pip install -r requirements.txt
# 将下载的模型放到yml指定目录
mkdir -p output/blazeface/ && cd output/blazeface/
wget https://paddlemodels.bj.bcebos.com/object_detection/blazeface_original.tar
tar -xvf blazeface_original.tar && mv blazeface_original model_final && cd ../../
# 模型格式转换
export PYTHONPATH=`pwd`:$PYTHONPATH
python tools/export_model.py \
    --output_dir=_inference_model_dir> --config=configs/face_detection/blazeface.yml
```

## 基础功能
- 接口去除 prefered place。框架中移除prefered place 概念及相应接口，改为使用 place 在valid place列表中的排序来标识用户对执行place偏好，在valid place列表中排序越靠前代表对此place的偏好越强。[#2192](https://github.com/PaddlePaddle/Paddle-Lite/pull/2192)
- armlinux 环境下增加python api，与c++接口api功能保持一致。[#2225](https://github.com/PaddlePaddle/Paddle-Lite/pull/2225) [#2252](https://github.com/PaddlePaddle/Paddle-Lite/pull/2252/files)

- OpenCL支持`cl::Image2D`格式 [#2158](https://github.com/PaddlePaddle/Paddle-Lite/pull/2158) [#2170](https://github.com/PaddlePaddle/Paddle-Lite/pull/2170/commits)
- 增加算子版本，与 Paddle 训练版本对应  [#2243](https://github.com/PaddlePaddle/Paddle-Lite/pull/2243)

	1. 对齐 Lite 与 Paddle 的框架 ProtoBuf 数据结构定义，
	2. 添加设定算子版本的接口，算子版本号与 Paddle 框架版本号格式一致（三位小数组成的字符串，如 ""1.5.0""），在注册时进行设定。

示例：

```c++
REGISTER_LITE_KERNEL(leaky_relu, kCUDA, kFloat, kNCHW,
                     paddle::lite::kernels::cuda::LeakyReluCompute,
                     def)
    .BindInput(""X"", {LiteType::GetTensorTy(TARGET(kCUDA))})
    .BindOutput(""Out"", {LiteType::GetTensorTy(TARGET(kCUDA))})
    .SetVersion(""1.5.0"")
    .Finalize(); 
```

- 运行期间跳过feed fetch op，减少硬件之间的数据拷贝
- 新增包括 `GetInputNames` 等4个API接口，详细可以参考 [C++ API List](https://paddlepaddle.github.io/Paddle-Lite/v2.0.0/cxx_api_doc/)
- 新增CUDA GPU op
  - yolobox
  - transpose
  - concat
  - nearest_interp
  - elementwise_add
  - scale
  - dropout
  - softmax
  - pool2d
  - bilinear_interp
  - mul
  - conv2d


## 编译

- ARM Linux在full publish模式下增加生成动态链接库，tiny publish模式下不再生成静态库，而改为生成动态链接库。

- Mac环境下支持 `full_publish` 编译(Android)，目前 Mac下可以完整支持 `tiny_publish` 和 `full_publish` 两种预测库的编译模式，详情可参考 [源码编译指南]( https://paddlepaddle.github.io/Paddle-Lite/v2.0.0/source_compile/ )
  - 需要将mac的cmake版本设置为cmake 3.10
  - 如果出现问题：`Too many open files`，使用下面命令修改最大可打开文件数`ulimit -n 1024`
  - 注意：`full_publish` 编译时，项目不能有中文路径

## 性能

- 提升arm depthwise性能[#2195](https://github.com/PaddlePaddle/Paddle-Lite/pull/2195)
- 优化conv kernel选择，提升conv性能[#2223](https://github.com/PaddlePaddle/Paddle-Lite/pull/2223)

## 文档

- 增加了支持硬件的列表，参考 [here](https://paddlepaddle.github.io/Paddle-Lite/v2.0.0/support_hardware/)
- 增加了根据模型裁剪算子的方法，参考[here](https://paddlepaddle.github.io/Paddle-Lite/v2.0.0/library_tailoring/)
- 更新了最新 Benchmark，参考 [here]( https://paddlepaddle.github.io/Paddle-Lite/v2.0.0/benchmark/ )

## Demo

- 增加树莓派案例：[ARM Linux 图像识别和目标检测DEMO](https://github.com/PaddlePaddle/Paddle-Lite-Demo)，支持摄像头采集图像，并提供armv7hf&armv8预编译的动态链接库。

## Bug修复

- 修复加载 naive buffer 模型内存占用过大问题
  - naive buffer 格式的vgg16、inceptionv4、yolov3 模型均验证通过
- 修复 `model_optimize_tool` 优化后模型变大问题
- 修复 `static_pick_kernel_pass` 中，没有初始化`kernel_pick_factors_`[#2158](https://github.com/PaddlePaddle/Paddle-Lite/pull/2158)
- 修复 `type_layout_cast_pass` 中，选中 kernel 的变量名写错 [#2158](https://github.com/PaddlePaddle/Paddle-Lite/pull/2158)
- 修复 `op_registry` 中注册 kernel 时，没有考虑 layout [#2158](https://github.com/PaddlePaddle/Paddle-Lite/pull/2158)
- 修复conv transpose bug [#2165](https://github.com/PaddlePaddle/Paddle-Lite/pull/2165)
- 修复arm fc多batch计算错误[#2244](https://github.com/PaddlePaddle/Paddle-Lite/pull/2244)
- 修复arm int8 gemv bug [#2249](https://github.com/PaddlePaddle/Paddle-Lite/pull/2249)

## 附件说明
附件中包含了编译好的预测库，不同选项组合采用后缀字段表示，重要字段如下：

- android/ios: 平台
- armv7/armv8: ARM 指令集版本
- c++_shared/c++_static: C++ STL 采用动态链接还是静态链接，前者自身小但需额外拷贝 STL 的动态库
- tiny_publish/full_publish: 是否采用轻量化部署，前者部署体积很小，但需要配合 `model_optimize_tool`; 后者可以直接用于 原始 Paddle 模型; 两者性能一致
- with_extra: 除了基础算子，额外编译NLP、控制流及其他所有算子",104208128
867,False,False,2019-09-21T23:04:18Z,2019-09-22T09:54:33Z,"# Release Note

## 模型、算子及多硬件、多框架支持

- 加强多框架支持（通过 X2Paddle）
  - **新增onnx 模型支持**
  - 扩展tensorlfow模型支持
  - 扩展caffe模型支持
- 官方测试过的模型及框架支持如下

| 模型             | paddle fluid | caffe | tensorflow | onnx  |
| :--------------- | ------------ | ----- | ---------- | ----- |
| mobilenetv1      | Y            | Y     | Y          |       |
| mobilenetv2      | Y            | Y     | Y          | **Y** |
| resnet18         | Y            | Y     | **Y**      |       |
| resnet50         | Y            | Y     | **Y**      | **Y** |
| mnasnet          | Y            | Y     | **Y**      |       |
| efficientnet     | Y            | Y     | **Y**      | **Y** |
| squeezenetv1.1   | Y            |       | **Y**      | **Y** |
| shufflenet       | Y            | Y     | **Y**      |       |
| mobilenet_ssd    | Y            | Y     | **Y**      |       |
| mobilenet_yolov3 | Y            |       | **Y**      |       |
| inceptionv4      | Y            |       |            |       |
| mtcnn            | Y            | Y     | **Y**      |       |
| facedetection    | **Y**        | **Y** |            |       |
| unet             | Y            | Y     | **Y**      |       |
| ocr_attention    | Y            |       |            |       |
| vgg16            | Y            |       |            |       |

- IN8模型，增加支持Resnet50-INT8

- ARM CPU 新增验证模型 5 个
  - 新增支持 Faster RCNN 模型
  - 新增支持 FaceDetection 模型
  - 新增支持 SSD_ShufflenetV2_FPN 模型
  - 新增支持 SSD_MobilenetV3_FPN 模型
  - 新增支持Yolov3_Int8模型

- 华为NPU新增验证模型3个
  - 新增MobileNet V2,  ShuffleNet V2和Unet模型的支持
  - 新增pad2d Op支持

- 验证支持 **树莓派** 3B和RK3399开发板

- 新增算子 36 个，以更好地支持更广模型及多种框架
  - affine_channel
  - anchor_generator
  - assign
  - assign_value
  - box_clip
  - elementwise_div
  - equal
  - expand
  - fake_quantize_range_abs_max
  - fill_constant_batch_size_like
  - flatten
  - flatten2
  - floor
  - fusion_elementwise_div_activation
  - generate_proposals
  - greater_equal
  - greater_than
  - hard_sigmoid
  - less_equal
  - logical_not
  - logical_or
  - matmul
  - mean
  - notequal
  - range
  - reduce_mean
  - relu6
  - roi_align
  - sequence_expand_as
  - squeeze
  - squeeze2
  - stack
  - uniform_random
  - unsqueeze
  - unsqueeze2

## 基础功能

- `model_optimize_tool` 改成在 host 上执行——现在无需在 ARM （手机）上执行，直接在编译机上执行便可；功能和命令行参数不变

- 新增支持 INT8 模型以 INT8 格式存储和载入，显著降低 APP 中模型体积

  |                   | 优化前 | optimize tool保存为INT8 格式后 |
  | ----------------- | ------ | ------------------------------ |
  | MobileNetV1_quant | 17M    | 5.3M                           |
  | MobileNetV2_quant | 15M    | 5.1M                           |
  | ResNet50_quant    | 100M   | 27M                            |


- 新增内存优化能力

  - 原理：在模型预测期间，Op的输出Tenso若在生存期上没有重叠，可复用一块内存，从而可以降低模型预测期间的整体内存占用。
  - 效果：batch 为1 的情况下对模型的的内存占用测试如下

  | 模型             | 内存复用效果（memory/original） |
  | ---------------- | ------------------------------- |
  | Mobilentev1      | 78%                             |
  | Mobilenetv2      | 67%                             |
  | Resnet50         | 82%                             |
  | Mobilenetv1_int8 | 82%                             |
  | Mobillenet_SSD   | 71%                             |



- 新增版本信息输出功能

  - 增加接口 
    - C++ API在PaddlePredictor中增加`std::string GetVersion()`接口用于返回当前lib使用的代码版本。
    - Java API在PaddlePredictor中增加`public String getVersion()`接口用于返回当前lib使用的代码版本。
    - 详细信息可以参考 [C++ API 文档](https://paddlepaddle.github.io/Paddle-Lite/develop/cxx_api_doc/) 和 [Java API文档](https://paddlepaddle.github.io/Paddle-Lite/develop/java_api_doc/)
  - 返回值说明
    - 若编译当前lib的代码有相关tag，则返回`tag`
    - 若编译当前lib的代码没有相关tag，则返回`branch(commitid)`


## 编译

- 新增`tiny_publish` 编译模式下输出 Android C++ 动态链接库
  - 编译时选择`--arm_os=android`可编译出Android C++动态链接库文件
  - 动态链接库位置（以armv8为例）： `Paddle-Lit/build.lite.android.armv8.gcc/inference_lite_lib.android.armv8/cxx/lib`
  - 动态链接库文件：
    - libpaddle_light_api_shared.so : 只包含包含light_api接口
    - libpaddle_full_api_shared.so :  包含所有功能， light_api接口和full_api接口
  - 编译说明：
    - tiny_publish只编译出 libpaddle_light_api_shared.so 文件
    - full_publish编译出 libpaddle_light_api_shared.so和libpaddle_full_api_shared.so
- 支持编译发布 FPGA 预测包 
- 修复ARM Linux编译问题，新增Ubuntu Host端交叉编译和开发板本地编译，具体参见[源码编译指南](https://github.com/PaddlePaddle/Paddle-Lite/wiki/source_compile)


## 文档

- 文档改为使用 github pages，新文档地址 https://paddlepaddle.github.io/Paddle-Lite/
- 完善了 [源码编译指南](https://github.com/PaddlePaddle/Paddle-Lite/wiki/source_compile)，增加ARM Linux设备端本地编译；
- 增加了[C++ API文档](https://paddlepaddle.github.io/Paddle-Lite/develop/cxx_api_doc/) 和 [Java API文档](https://paddlepaddle.github.io/Paddle-Lite/develop/java_api_doc/) ，详细列举了所有用户API 及描述

## DEMO
- Paddle-Lite-Demo仓库: https://github.com/PaddlePaddle/Paddle-Lite-Demo
- 新增ios/Android mobilenetv1-ssd 检测demo
- Android新增支持NPU的、基于Light API的图像分类demo，并提供预编译的、支持NPU和CPU的Light API jni库

## Bugfix

- 修复 `model_optimize_tool` 优化 attention 模型出错及优化后不能运行的问题
- 修复 clang编译bug
- 修复PriorBox op中存在的bug  
- 修复编译脚本，取消默认编译单测
- 修改kernel的相关冗余代码及计算bug

## 附件
*有 `with_extra` 和 `build_extra` 后缀的表示全量算子（一百多个，体积稍大），否则表示核心库，只包含核心模型所需算子，部署体积更小。*
### android 
- [inference_lite_lib.android.armv7.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-rc/inference_lite_lib.android.armv7.tar.gz)
- [inference_lite_lib.android.armv7.with_extra.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-rc/inference_lite_lib.android.armv7.with_extra.tar.gz)
- [inference_lite_lib.android.armv8.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-rc/inference_lite_lib.android.armv8.tar.gz)
- [inference_lite_lib.android.armv8.with_extra.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-rc/inference_lite_lib.android.armv8.with_extra.tar.gz)
### ios
- [inference_lite_lib.ios.armv7.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-rc/inference_lite_lib.ios.armv7.tar.gz)
- [inference_lite_lib.ios.armv8.build_extra.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-rc/inference_lite_lib.ios.armv8.build_extra.tar.gz)
- [inference_lite_lib.ios.armv8.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-rc/inference_lite_lib.ios.armv8.tar.gz)
- [inference_lite_lib.ios.armv8.build_extra.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-rc/inference_lite_lib.ios.armv8.build_extra.tar.gz)
- [inference_lite_lib.ios64.armv8.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-rc/inference_lite_lib.ios64.armv8.tar.gz)
- [inference_lite_lib.ios64.armv8.build_extra.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-rc/inference_lite_lib.ios64.armv8.build_extra.tar.gz)
### model_optimize_tool
- [model_optimize_tool.x86_64-linux-gnu.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-rc/model_optimize_tool.x86_64-linux-gnu.gz)
- [model_optimize_tool.x86_64-apple-darwin18.5.0.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-rc/model_optimize_tool.x86_64-apple-darwin18.5.0.gz)
### FPGA armlinux
- [build.lite.armlinux.fpga.zip](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-rc/build.lite.armlinux.fpga.zip)",104208128
868,False,False,2019-09-01T03:11:59Z,2019-09-01T11:05:23Z,"# Release Note

## 功能
* 新增以下OP以支持更多X2Paddle 转换的模型：
  - exp
  - elementwise_div
  - assign
  - floor
  - stack
  - reduce_mean
  - matmul
  - expand
  - squeeze

## 编译
- 解决 docker 编译 ARM Linux 存在的问题，现支持 armv8 和 armv7 的 gcc 和 clang 编译，并增加相应[文档](https://github.com/PaddlePaddle/Paddle-Lite/wiki/source_compile#%E7%BC%96%E8%AF%91%E6%A8%A1%E5%BC%8F%E4%B8%8E%E5%8F%82%E6%95%B0) 
- 支持ios编译和发布，并增加相应[文档](https://github.com/PaddlePaddle/Paddle-Lite/wiki/source_compile#%E7%BC%96%E8%AF%91%E6%A8%A1%E5%BC%8F%E4%B8%8E%E5%8F%82%E6%95%B0)

## 框架

- `MobileConfig` 新增接口支持从内存中加载模型
```c++
void set_model_buffer(const char* model_buffer,
                      size_t model_buffer_size,
                      const char* param_buffer,
                      size_t param_buffer_size) 
```
示例：
```c++
lite_api::MobileConfig config;
config.set_model_buffer(
    model_buffer.c_str(), size_model, params_buffer.c_str(), size_params);
auto predictor = lite_api::CreatePaddlePredictor(config);

```
- `Pass` 算子设备类型绑定。在绑定的设备或算子类型未注册时，相应 Pass 不再命中执行。以避免找不到指定设备或算子导致的程序退出。

示例：
```c++
REGISTER_MIR_PASS(io_copy_kernel_pick_pass,
    paddle::lite::mir::IoCopyKernelPickPass)
    .BindTargets({TARGET(kAny)})
    .BindKernel(""io_copy"");
```

## 文档
- 完善了 [源码编译指南](https://github.com/PaddlePaddle/Paddle-Lite/wiki/source_compile)，增加了 Docker环境编译ARM Linux的说明；添加[ios编译说明文档](https://github.com/PaddlePaddle/Paddle-Lite/wiki/source_compile#ios)
- 完善[Paddle-Lite-Demo](https://github.com/PaddlePaddle/Paddle-Lite-Demo)文档，添加[更新库说明](https://github.com/PaddlePaddle/Paddle-Lite-Demo/blob/master/README.md#%E6%9B%B4%E6%96%B0%E5%88%B0%E6%9C%80%E6%96%B0%E7%9A%84%E9%A2%84%E6%B5%8B%E5%BA%93)
- 编写Lite int8用户使用案例——[基于PaddleSlim和Paddle-Lite对模型进行端到端的量化训练和推理执行](https://github.com/PaddlePaddle/Paddle-Lite/wiki/model_quantization)
- 增加了 [架构详解](https://github.com/PaddlePaddle/Paddle-Lite/wiki/architecture-intro) 等开发者文档

## bugfix
* 修复 `model_optimize_tool` 的一系列问题，目前int8量化训练模型可经 `model_optimize_tool` 进行优化输出naive_buffer格式，且输出模型可使用 `MobileConfig` 正确运行int8推理过程。

## 附件
### android
- [inference_lite_lib.android.armv7.shared.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-beta1/inference_lite_lib.android.armv7.shared.tar.gz)
- [inference_lite_lib.android.armv7.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-beta13/inference_lite_lib.android.armv7.tar.gz)
- [inference_lite_lib.android.armv8.shared.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-beta1/inference_lite_lib.android.armv8.shared.tar.gz)
- [inference_lite_lib.android.armv8.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-beta1/inference_lite_lib.android.armv8.tar.gz)
### IOS
- [inference_lite_lib.ios64.armv8.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-beta1/inference_lite_lib.ios64.armv8.tar.gz)
### memory optimize tool
- [model_optimize_tool.armv7.tar](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-beta1/armv7_optimize_tool.zip)
- [model_optimize_tool.armv8.tar](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-beta1/armv8_optimize_tool.zip)",104208128
869,False,True,2019-08-26T23:11:09Z,2019-08-27T01:38:55Z,"# Release Note

## 功能
- `MobileConfig` 增加 `set_power_mode` 和 `set_threads` 两个设置方法，简化相关设置；详情参考 [C++ demo](https://github.com/PaddlePaddle/Paddle-Lite/wiki/demos#%E5%A6%82%E4%BD%95%E5%9C%A8%E4%BB%A3%E7%A0%81%E4%B8%AD%E4%BD%BF%E7%94%A8-api)
- `memory_optimize_tool` 中的 `int8_mode` flag 更名为`prefer_int8_kernel` ，以避免与量化工具的功能混淆；Paddle-Lite 目前的 ARM CPU INT8 量化基于 PaddleSlim 工具，本身并不具备也没有计划增加量化模型转换的能力

- ARM CPU 新增以下Op支持，支持更多相关模型：
   - flatten
   - flatten2
   -  assign
   - fake_quantize_range_abs_max
   - fusion_eltwise_activate_dropout
   - fill_constant_batch_size_like

## 编译
- 改善第三方依赖代码下载方式，以加速编译过程
  - 在编译 `memory_optimize_tool` 类似的离线工具时，需要依赖 `protobuf` 相关第三方代码库
  - 移动端特定第三方依赖代码从之前的 cmake ExternalProject_Add 编译时下载改为 `git submodule` 方式，让下载过程更直观
  - 对于国内网络下载 `protobuf` 等大尺寸repo，增加离线压缩包，可以自动下载解压，极大地加速编译下载过程
- 清除 `tiny_publish` 模式下无关的第三方代码下载，编译移动端部署库时可以不依赖任何第三方进行编译
- 增加分层编译的能力，以压缩核心库的大小；目前会将常规的Op和Kernel划分为 basic mode，编译核心部署库以驱动绝大多数 CV 和 DNN 模型；将控制流相关的细碎Op和Kernel单独拆成 extra mode，以按需驱动 OCR 及未来的 NLP 模型；以及未来在增加更多Op的情况下控制核心库尺寸；使用方法参考 [编译开关](https://github.com/PaddlePaddle/Paddle-Lite/wiki/source_compile#%E7%BC%96%E8%AF%91%E9%80%89%E9%A1%B9)

## 文档
- 完善了 [源码编译指南](https://github.com/PaddlePaddle/Paddle-Lite/wiki/source_compile)，增加了 Linux 环境裸机编译的内容；增加了 Mac 编译 `tiny_publish` 的说明；增加了加速第三方库下载的内容
- 完善 [benchmark测试方法](https://github.com/PaddlePaddle/Paddle-Lite/wiki/benchmark_tools) 的文档，上传了所有相关模型及转化工具，以降低复现门槛 
- 增加了 [Roadmap 文档](https://github.com/PaddlePaddle/Paddle-Lite/wiki/roadmap) ，以同步最近的开源版本发布计划


## bugfix

 - NaiveBuffer：解决 `memory_optimize_tool` 在 32/64 位系统模型 save/load 不兼容的问题

## Assets 附件说明

### Android ARM CPU 核心部署库
- [inference_lite_lib.android.armv7.shared.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-beta1-prerel/inference_lite_lib.android.armv7.shared.tar.gz)
- [inference_lite_lib.android.armv7.static.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-beta1-prerel/inference_lite_lib.android.armv7.static.tar.gz)
- [inference_lite_lib.android.armv8.shared.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-beta1-prerel/inference_lite_lib.android.armv8.shared.tar.gz)
- [inference_lite_lib.android.armv8.static.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-beta1-prerel/inference_lite_lib.android.armv8.static.tar.gz)
### model_optimize_tool 离线模型转化工具
- [armv7_model_optimize.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-beta1-prerel/armv7_model_optimize.tar.gz)
- [armv8_model_optimize.tar.gz](https://github.com/PaddlePaddle/Paddle-Lite/releases/download/v2.0.0-beta1-prerel/armv8_model_optimize.tar.gz)
",104208128
870,False,False,2019-08-18T10:01:20Z,2019-08-18T12:39:07Z,"# Release Note

Paddle-mobile 正式升级为 Paddle Lite ，重点加强了多平台多硬件的支持能力，提升了模型覆盖，并且对ARM CPU等硬件上的性能进行了重点优化。
核心能力已统一到Lite新架构上，后续的优化和升级也都会在新架构下进行。

原Paddle-mobile架构下的实现在 Mali GPU、Adreno GPU等诸多硬件场景下的表现已很出色，并有广泛应用。作为过渡，原架构下的主体代码暂在 `mobile/ `  目录中保留，后续一段时间会继续维护，并完成全部迁移。

苹果设备GPU的 metal 实现和前端 web 的模块目前相对独立，会继续在  `metal/`  和 `web/` 目录下开发和维护。

本版本重点功能升级如下：

- 架构重大升级，通过添加 Machine IR, Type system, 轻量级 Operator 和 Kernel 等，增加了通用多平台和多硬件支持，多 precision 和 data layout 混合调度执行，动态优化，轻量级部署等重要特性
- 完善了Java API，与 C++ API 一一对应
- 新增 `NaiveBuffer` 模型存储格式，移动端部署与 protobuf 解耦，使预测库尺寸更小。
- 通过X2Paddle 支持 Caffe 和 TensorFlow 模型的预测，目前官方验证 6 种模型转化支持，相关信息可参考 [使用 X2Paddle 转换模型](https://github.com/PaddlePaddle/paddle-mobile/wiki/x2paddle)
- 新增对华为海思 NPU 的深度支持，成为首个支持华为NPU在线编译的框架，已验证 MobileNet V1模型
- 支持FPGA （`ZU3、ZU5、ZU9`），已验证 ResNet50 模型
- Mali GPU 和 Adreno GPU，支持 OpenCL 和 ARM CPU Kernel混合调度，已验证如下模型：
  - MobileNetV1
  - MobileNetV2
  - ResNet50

- ARM CPU ，增加官方模型覆盖，新增下列模型支持验证
  - [OCR-attention model](https://github.com/PaddlePaddle/models/tree/develop/PaddleCV/ocr_recognition)
  - vgg16
  - EfficientNet
  - mNasNet
  - UNet
  - ShuffleNet V1.1
  - ResNet18
  - MobileNet_SSD
  - mobileNet_YoloV3
  - mtcnn

- ARM CPU 的 Int8 量化预测，支持 PaddleSlim 量化训练，精度相对离线量化更佳，新增以下模型支持验证
  - MobileNetV1
  - MobileNetV2
  - ResNet50

- 更多相关模型（包含GoogleNet SqueezeNet等）及对应性能数据见 [benchmark](https://github.com/PaddlePaddle/paddle-lite/wiki/benchmark)

- 新增各类硬件 Kernel 70种，详细列表如下
  - nearest_interp: (arm/float)
  - fill_constant: (arm/float)
  - depthwise_conv2d: (opencl/float)
  - sigmoid: (arm/float)
  - argmax: (arm/float)
  - calib_once: (arm/int8,fpga/fp16)
  - layout: (fpga/any)
  - while: (arm/float)
  - crop: (arm/float)
  - shape: (arm/float)
  - fusion_elementwise_max_activation: (arm/float)
  - slice: (arm/float)
  - increment: (arm/float)
  - io_copy: (fpga/any,opencl/any)
  - io_copy_once: (fpga/any,opencl/any)
  - sequence_expand: (arm/float)
  - less_than: (arm/float)
  - gru_unit: (arm/float)
  - axpy: (arm/float)
  - write_to_array: (arm/float)
  - conv2d_transpose: (arm/float)
  - scale: (fpga/fp16)
  - fusion_elementwise_mul_activation: (arm/float)
  - log: (arm/float)
  - bilinear_interp: (arm/float)
  - decode_oxes: (arm/float)
  - yolo_box: (arm/float)
  - beam_search_decode: (arm/float)
  - negative: (arm/float)
  - relu: (opencl/float,fpga/fp16,npu/float)
  - elementwise_add: (opencl/float,fpga/fp16)
  - box_coder: (arm/float)
  - multiclass_nms: (arm/float)
  - fusion_elementwise_add_activation: (arm/float,opencl/float,fpga/fp16)
  - elementwise_max: (arm/float)
  - graph_op: (npu/float)
  - norm: (arm/float)
  - logical_xor: (arm/float)
  - top_k: (arm/float)
  - elementwise_mul: (arm/float)
  - power: (arm/float)
  - sequence_pool: (arm/float)
  - lrn: (arm/float)
  - leaky_relu: (arm/float)
  - is_empty: (arm/float)
  - fc: (opencl/float,fpga/fp16,npu/float)
  - im2sequence: (arm/float)
  - pool2d: (opencl/float,fpga/fp16,npu/float)
  - mul: (opencl/float, npu/float)
  - pad2d: (arm/float)
  - read_from_array: (arm/float)
  - beam_search: (arm/float)
  - lod_reset: (arm/float)
  - gru: (arm/float)
  - prelu: (arm/float)
  - layout_once: (fpga/any)
  - swish: (arm/float)
  - lookup_table: (arm/float)
  - relu_clipped: (arm/float)
  - tanh: (arm/float)
  - sequence_softmax: (arm/float)
  - calib: (fpga/fp16)
  - cast: (arm/float)
  - density_prior_box: (arm/float)
  - softmax: (fpga/fp16, npu/float)
  - shuffle_channel: (arm/float)
  - logical_and: (arm/float)
  - prior_box: (arm/float)
  - reduce_max: (arm/float)
  - conv2d: (opencl/float,fpga/fp16, npu/float)",104208128
871,False,False,2019-07-01T13:09:14Z,2019-07-02T10:28:03Z,"ARM CPU：
    - 增加 64 位 gemm_int8 量化实现
    - 增加 conv_relu、nearestinterp、leakyrelu、density_prior_box 等 op

Android GPU：
    - 实现 Winograd 卷积实现，3 x 3 卷积在计算量较大时，性能提升2倍—30倍不等
    - 增加 conv_relu、scale、reshape2、transpose2、split、relu6 等 GPU op
    - cl_kernel文件编译，不同op动态添加宏控制

Metal：
    - 支持WinoGrad算法。
    - 添加内存复用算法，材质占用的内存体积可减少一半。
    - 支持MPS及非MPS混排。
    - 增强框架安全性（添加通用异常处理逻辑、添加多线程保护）。
    - 新增OP，支持ShuffleNet。

Web 网页版：
    - 建立Web版Paddle框架，支持MobileNet、Yolo等网络。
    - 基于WebGL提供完整的GPGPU功能。

发布 Lite 新架构，整体加强 Paddle 预测库底层硬件的多硬件混合调度， 硬件开发扩展能力，设计要点如下

- 引入 Type system，强化多硬件、量化方法、data layout 的混合调度能力
- 硬件细节隔离，通过不同编译开关，对支持的任何硬件可以自由插拔
- 引入 MIR(Machine IR) 的概念，强化带执行环境下的优化支持
- 优化期和执行期严格隔离，保证预测时轻量和高效率

本次发布支持如下硬件：
- android ARM v7, v8; 内部测试包括 mobilenet-v1, movilenet-v2, resnet50, inception-v4 等模型
- armlinux 支持 ARM V8，支持如上4个模型
- opencl; 测试 mobilenetv1
- ARM v7, v8; Int8 量化预测; 测试 mobilenet-v1

用户文档参考 [lite 文档](http://www.paddlepaddle.org.cn/documentation/docs/zh/1.5/advanced_usage/deploy/mobile/mobile_index.html)

开发者文档参考： [开发者文档](http://www.paddlepaddle.org.cn/documentation/docs/zh/1.5/advanced_usage/deploy/mobile/for_developer.html)

性能参数参考：[Benchmark](https://github.com/PaddlePaddle/Paddle/wiki/Lite-Architecture-Benchmark)

代码 tag 位于：[lite-v0.1](https://github.com/PaddlePaddle/Paddle/tree/lite-v0.1)


预编译的预测库：

- [android armv8 opencl](http://paddle-inference-dist.bj.bcebos.com/lite_release/r0.1/inference_lite_lib.android.armv8.opencl.tar.gz)
- [android armv7 opencl](http://paddle-inference-dist.bj.bcebos.com/lite_release/r0.1/inference_lite_lib.android.armv7.opencl.tar.gz)
- [android armv8](http://paddle-inference-dist.bj.bcebos.com/lite_release/r0.1/inference_lite_lib.android.armv8.tar.gz)
- [android armv7](http://paddle-inference-dist.bj.bcebos.com/lite_release/r0.1/inference_lite_lib.android.armv7.tar.gz)
- [armlinux armv8](http://paddle-inference-dist.bj.bcebos.com/lite_release/r0.1/inference_lite_lib.armlinux.armv8.tar.gz)
",104208128
872,False,False,2019-04-15T09:34:46Z,2019-04-16T13:33:45Z,"# Release Notes

## ARM CPU
- 1、新增kernel为3x3的滑窗直接卷积实现，在channel数较少时会比winograd和gemm效率更高
- 2、新增winograd armv8的实现，在IOS以及v8的硬件上能取得更高的预测性能，以及算子融合时支持winograd ，保证算子融合后的效率更高
- 3、新增了while、sequence_expand、sequence_pool、sequence_softmax、gru_unit、beam_search和beam_search_decode等19个算子，并做了大量的优化工作，支持NLP/OCR等attention-based端到端模型的预测
- 4、完成矩阵运算库sgemm和sgemv的重构和效率优化，在大部分模型上能获得10%～100%以上的性能加速
- 5、完成kernel为3x3的depthwise convolution的重构和优化，相比之前版本支持任意的padding、性能更优且计算结果更可靠
- 6、完成kernel为5x5的depthwise convolution armv8版本的实现，NAS模型的预测效率提升30%以上
- 7、完成col2im的neon优化，提升反卷积conv2d_transpose的效率
- 8、新增基于图优化的精简内存复用策略，大部分模型能降低近50%的内存占用。ARM CPU已自动开启，FPGA和GPU暂不支持

## ARM GPU
- 1、完成kernel为1x1的卷积优化，MobileNet v1在高通Adreno GPU上平均预测性能提升35%

## ARM CPU
  - Paddle-mobile has reconstructed and enhanced efficiency of the matrix operation library sgemm and sgemv, which gives rise to performance boost of 10%~100% on most models.
  - 19 new operators are provided in this version such as while, sequence\_expand, sequence\_pool, sequence\_softmax, gru\_unit, beam\_search, and beam\_search\_decode. Apart from that, there has also been a large amount of optimization, and the support attention-based end-to-end Model prediction.
  - arm v8 of winograd implementation: higher inference performance on v8 hardware on IOS; winograd support for operator fusion to ensure higher efficiency after operator fusion.
  - Direct convolution for kernel with a 3x3 sliding window, which will be more efficient than winograd and gemm on the condition that the number of channels is small.
  - Reconstructed and optimized depthwise convolution with the kernel size 3x3: in contrast to previous versions, it supports arbitrary padding, and attains better performance and returns more reliable calculation results.
  - Depthwise convolution with the kernel size 5x5 on armv8: the NAS model prediction speeds up by more than 30%.
  - Complete the efficiency optimization of the deconvolution conv2d\_transpose.
  - Consolidated with memory reuse strategy based on graph optimization. When the strategy is applied, most models can reduce memory usage by nearly 50%. It is automatically turned on for the ARM CPU (not compatible with FPGA and GPU).

## ARM GPU
  - Paddle-mobile completes the convolution optimization for the kernel with size 1x1, and MobileNet v1 has an average inference performance improvement of 35% on Qualcomm Adreno GPUs.",104208128
873,False,False,2018-11-02T03:33:38Z,2018-11-02T13:19:37Z,"1. 支持Mali GPU
2. 支持Andreno GPU
3. 支持ZU5、ZU9等FPGA开发板",104208128
874,False,True,2018-10-31T15:14:45Z,2018-10-31T15:19:17Z,"1. 支持Mali GPU
2. 支持Andreno GPU
3. 支持ZU5、ZU9等FPGA开发板",104208128
875,False,False,2018-10-08T12:23:26Z,2018-10-10T03:20:08Z,"1. 支持ios gpu预测
2. 支持树莓派等arm-linux运行
3. arm cpu性能大幅提升",104208128
876,False,False,2018-09-19T13:56:34Z,2018-07-03T12:24:23Z,"1. arm cpu支持，网络结构：googlenet、mobilenet、mobilenet+ssd、squeezenet、resnet50、yolo
2. mali gpu支持 by arm团队",104208128
877,False,False,2020-02-10T21:26:22Z,2020-02-10T21:34:04Z,"11 February 2020, CEF 79.1.36+g90301bd+chromium-79.0.3945.130 / Chromium 79.0.3945.130

**Bug Fix Release**

- #3038 ResourceHandler.Read throws System.NotSupportedException [@amaitland]
- #3037 WPF - NullReferenceException when Dispose called before browser initialized  [@amaitland]
- #3032 WPF - ThrowExceptionIfBrowserNotInitialized incorrectly throws InvalidOperationException when called on non UI Thread.   [@amaitland]

This version includes an updated version of `CEF` which resolves https://bitbucket.org/chromiumembedded/cef/issues/2843/race-condition-in-openinputstreamwrapper


**See also** https://github.com/cefsharp/CefSharp/releases/tag/v79.1.350",1135454
878,False,False,2020-01-28T22:05:41Z,2020-01-29T01:35:27Z,"January 29, 2020, CEF 79.1.35+gfebbb4a+chromium-79.0.3945.130 / Chromium 79.0.3945.130

`CEF` now supports the `Chromium Network Service` which brings a huge number of **breaking** `API` changes, please make sure you read https://github.com/cefsharp/CefSharp/issues/2743 for details if you are upgrading from a version prior to `75.1.x`.

**`Visual C++ 2015` is required, see `Notes` below for more information**

- #3026 Update ReferrerPolicy enum values [@amaitland]
- #3018 WinForms - Load/LoadHtml does nothing when called from Form/Control.OnLoad [@amaitland]
- #3016 API Change - IJavascriptObjectRepository.Register remove isAsync default param [@amaitland]
- #3009 CefSharp.Common.targets - Improve PlatformCheck error message [@amaitland]
- #2997 Dev tools shows up as an MDI window on the desktop [@amaitland]
- #2990 Remove CefSharp.WebBrowserExtensions.RegisterJsObject/RegisterAsyncJsObject [@amaitland]
- #2988 Feature Request - Add StreamResponseFilter [@amaitland]
- #2986 GetVisibleNavigationEntry always returns null [@amaitland]
- #2983 WinForms - Make CefSharp.WinForms.Internals.ControlExtensions.InvokeOnUiThreadIfRequired internal [@amaitland]
- #2973 WPF IME - Fixed last hangul letter being duplicated [@nyjin]
- #2957 Feature Request - Add RequestContext.ClearHttpAuthCredentials [@vwmberry95]
- #2955 Remove IFrame.LoadStringForUrl [@amaitland]
- #2954 Remove CefSettings.EnableNetSecurityExpiration and RequestContextSettings.EnableNetSecurityExpiration [@amaitland]
- #2946 Accessing Request/Response Headers for ReadOnly Request/Response throws NotSupportedException [@amaitland]
- #2932 IFrame.LoadRequest - Add xml doc warning [@amaitland]
- #2918 Remove IAudioHandler [@amaitland]
- #2909 JSB - Pass params to IMethodInterceptor.Intercept [@amaitland]
- #2908 JSB - Pass all params to IBinder.Bind [@amaitland]
- #2903 ResourceHandler - Reset Stream.Position when CanSeek [@amaitland]
- #2891 BrowserSubprocess - Refactor to support .Net Core [@amaitland]
- #2885 WPF - Modify CopyMemory EntryPoint to work with .Net Core [@kpreisser]
- #2873 MethodRunningQueue DeadLock when attempting to Dispose ChromiumWebBrowser [@amaitland]
- #2332 Feature Request - Add Print preview (WinForms Only)
- #2258 WPF Improve Scrollbar/Scroll Drag Usability [@mol @amaitland]
- #1721 Feature Request - Add IUrlRequest [@davidmi]
- #228 Feature Request - Add WPF TouchScroll/Multitouch Support [@GSonofNun @kkwpsv]

**Notes**
- `CefSharp` requires `Visual C++ 2015`. See https://github.com/cefsharp/CefSharp/issues/1983 for details. You can bin deploy the `VC++` dependencies, read the `FAQ` for more.
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`. See https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- Starting in June 2019 Google will require OAuth authentication when accessing web services that rely only Google Account Data, this includes Gmail, Drive, Docs, see https://security.googleblog.com/2019/04/better-protection-against-man-in-middle.html?m=1 for further discussion see https://groups.google.com/a/chromium.org/d/msg/embedder-dev/STyM5ZNTHMM/POj1v_cqBgAJ
- Due to licensing issues default builds do not support proprietary codecs like `H264/AAC`, sites like `Netflix/Twitter/Instagram/Facebook` won't play video/audio. See #1479 for more info. `MP3` audio is supported, `MP4` video is not.
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project uses `GitLink` for better debugging, you can step directly into much of the project source directly from `Visual Studio` see #1680 for details on how to enable `GitLink`
- `WPF` now has touch support which is enabled by default. Support for Stylus is not enabled by default, see https://github.com/cefsharp/CefSharp/issues/228#issuecomment-489065987 for further details
- CEF now supports `Print Preview` see #2332 for details on how to enable it
- Legacy Javascript binding registered JavaScript objects **no longer** get lost when navigating to another domain.
- Both the `WPF` and `OffScreen` versions have `disable-gpu-compositing` set by default to workaround https://bitbucket.org/chromiumembedded/cef/issues/2833/osr-gpu-consume-cpu-and-may-not-draw and https://bitbucket.org/chromiumembedded/cef/issues/2823/osr-on-a-monitor-at-125x-scale-onpaint

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- `Save as PDF` is not working when viewing PDF with Print Preview enabled see https://bitbucket.org/chromiumembedded/cef/issues/2867/save-as-pdf-is-not-working-in-pdf-viewer
- `CanExecuteJavascriptInMainFrame` incorrectly false after loading page with different origin #3021
- WPF Browser goes blank if used in combination with TabControl see #2779
- `CefSettings.IgnoreCertificateErrors` no longer works, use the `ignore-certificate-errors` command line arg as a workaround or alternatively use `OnCertificateError` to selectively allow a certificate and/or display a dialog to your users see https://stackoverflow.com/a/35564187/852806 for an example.
- When loading a `WebM` file (or any mimetype that supports range headers) the request is cancelled unexpectedly and the video fails to load see https://bitbucket.org/chromiumembedded/cef/issues/2836/cefstreamreader-createforfile
- Print Preview only works in WinForms see https://github.com/cefsharp/CefSharp/issues/2332#issuecomment-580485907
- A work in progress list of `CEF` issues that are likely relevant to `CefSharp` is available at https://gist.github.com/amaitland/aec2d464e6dd75e5f0ff8fa8c9503b3a
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- For `Network Service API` changes see https://github.com/cefsharp/CefSharp/issues/2743
- IJavascriptObjectRepository.Register removed isAsync default param, you must now specify the third method param see #3016 for details and example
- CefSharp.WinForms.Internals.ControlExtensions.InvokeOnUiThreadIfRequired is now internal, it was never intended to be part of the public API #2983
- CefSettings.EnableNetSecurityExpiration and RequestContextSettings.EnableNetSecurityExpiration  were removed #2954
- `IFrame.LoadStringForUrl` has been removed as `CEF` removed `CefFrame::LoadString` see  #2955
- `CefSharp.WebBrowserExtensions.RegisterJsObject/RegisterAsyncJsObject` methods have been removed, you must now directly register your objects with the `IJavascriptObjectRepository` see #2990 for details and examples for migration.
- `IAudioHandler` has been removed as `CEF` now longer supports this feature  #2918 (it's likely to be re-added at some point)
- `IMethodInterceptor.Intercept` now has the paramaters passed to allow for more advanced scenarios see #2909
- `IBinder.Bind` now has all arguments passed instead of just `IDictionary/IList` to allow for more flexible type conversion see #2908
- `Javascript Binding` methods are now executed on the `ThreadPool` instead of their own dedicated thread, see 2873
-  Updated ReferrerPolicy enum values to reflect `CEF` changes see #3026
",1135454
879,False,True,2020-01-22T00:27:58Z,2020-01-22T01:33:46Z,"January 22, 2020, CEF 79.1.31+gfc9ef34+chromium-79.0.3945.117 / Chromium 79.0.3945.117

`CEF` now supports the `Chromium Network Service` which brings a huge number of **breaking** `API` changes, please make sure you read https://github.com/cefsharp/CefSharp/issues/2743 for details if you are upgrading from a version prior to `75.1.x`.

**`Visual C++ 2015` is required, see `Notes` below for more information**

- #3018 WinForms - Load/LoadHtml does nothing when called from Form/Control.OnLoad [@amaitland]
- #3016 API Change - IJavascriptObjectRepository.Register remove isAsync default param [@amaitland]
- #3009 CefSharp.Common.targets - Improve PlatformCheck error message [@amaitland]
- #2997 Dev tools shows up as an MDI window on the desktop [@amaitland]
- #2990 Remove CefSharp.WebBrowserExtensions.RegisterJsObject/RegisterAsyncJsObject [@amaitland]
- #2988 Feature Request - Add StreamResponseFilter [@amaitland]
- #2986 GetVisibleNavigationEntry always returns null [@amaitland]
- #2983 WinForms - Make CefSharp.WinForms.Internals.ControlExtensions.InvokeOnUiThreadIfRequired internal [@amaitland]
- #2973 WPF IME - Fixed last hangul letter being duplicated [@nyjin]
- #2957 Feature Request - Add RequestContext.ClearHttpAuthCredentials [@vwmberry95]
- #2955 Remove IFrame.LoadStringForUrl [@amaitland]
- #2954 Remove CefSettings.EnableNetSecurityExpiration and RequestContextSettings.EnableNetSecurityExpiration [@amaitland]
- #2946 Accessing Request/Response Headers for ReadOnly Request/Response throws NotSupportedException [@amaitland]
- #2932 IFrame.LoadRequest - Add xml doc warning [@amaitland]
- #2918 Remove IAudioHandler [@amaitland]
- #2909 JSB - Pass params to IMethodInterceptor.Intercept [@amaitland]
- #2908 JSB - Pass all params to IBinder.Bind [@amaitland]
- #2891 BrowserSubprocess - Refactor to support .Net Core [@amaitland]
- #2885 WPF - Modify CopyMemory EntryPoint to work with .Net Core [@kpreisser]
- #2873 MethodRunningQueue DeadLock when attempting to Dispose ChromiumWebBrowser [@amaitland]
- #2332 Feature Request - Add Print preview
- #2258 WPF Improve Scrollbar/Scroll Drag Usability [@mol @amaitland]
- #1721 Feature Request - Add IUrlRequest [@davidmi]
- #228 Feature Request - Add WPF TouchScroll/Multitouch Support [@GSonofNun @kkwpsv]

**Notes**
- `CefSharp` requires `Visual C++ 2015`. See https://github.com/cefsharp/CefSharp/issues/1983 for details. You can bin deploy the `VC++` dependencies, read the `FAQ` for more.
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`. See https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- Starting in June 2019 Google will require OAuth authentication when accessing web services that rely only Google Account Data, this includes Gmail, Drive, Docs, see https://security.googleblog.com/2019/04/better-protection-against-man-in-middle.html?m=1 for further discussion see https://groups.google.com/a/chromium.org/d/msg/embedder-dev/STyM5ZNTHMM/POj1v_cqBgAJ
- Due to licensing issues default builds do not support proprietary codecs like `H264/AAC`, sites like `Netflix/Twitter/Instagram/Facebook` won't play video/audio. See #1479 for more info. `MP3` audio is supported.
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project uses `GitLink` for better debugging, you can step directly into much of the project source directly from `Visual Studio` see #1680 for details on how to enable `GitLink`
- `WPF` now has touch support which is enabled by default. Support for Stylus is not enabled by default, see https://github.com/cefsharp/CefSharp/issues/228#issuecomment-489065987 for further details
- CEF now supports `Print Preview` see #2332 for details on how to enable it
- Legacy Javascript binding registered JavaScript objects **no longer** get lost when navigating to another domain.
- Both the `WPF` and `OffScreen` versions have `disable-gpu-compositing` set by default to workaround https://bitbucket.org/chromiumembedded/cef/issues/2833/osr-gpu-consume-cpu-and-may-not-draw and https://bitbucket.org/chromiumembedded/cef/issues/2823/osr-on-a-monitor-at-125x-scale-onpaint

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- Browser goes blank if used in combination with WPF TabControl see #2779
- `CefSettings.IgnoreCertificateErrors` no longer works, use the `ignore-certificate-errors` command line arg as a workaround or alternatively use `OnCertificateError` to selectively allow a certificate and/or display a dialog to your users see https://stackoverflow.com/a/35564187/852806 for an example.
- When loading a `WebM` file (or any mimetype that supports range headers) the request is cancelled unexpectedly and the video fails to load see https://bitbucket.org/chromiumembedded/cef/issues/2836/cefstreamreader-createforfile
- A work in progress list of `CEF` issues that are likely relevant to `CefSharp` is available at https://gist.github.com/amaitland/aec2d464e6dd75e5f0ff8fa8c9503b3a
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- For `Network Service API` changes see https://github.com/cefsharp/CefSharp/issues/2743
- IJavascriptObjectRepository.Register removed isAsync default param, you must now specify the third method param see #3016 for details and example
- CefSharp.WinForms.Internals.ControlExtensions.InvokeOnUiThreadIfRequired is now internal, it was never intended to be part of the public API #2983
- CefSettings.EnableNetSecurityExpiration and RequestContextSettings.EnableNetSecurityExpiration  were removed #2954
- `IFrame.LoadStringForUrl` has been removed as `CEF` removed `CefFrame::LoadString` see  #2955
- `CefSharp.WebBrowserExtensions.RegisterJsObject/RegisterAsyncJsObject` methods have been removed, you must now directly register your objects with the `IJavascriptObjectRepository` see #2990 for details and examples for migration.
- `IAudioHandler` has been removed as `CEF` now longer supports this feature  #2918 (it's likely to be re-added at some point)
- `IMethodInterceptor.Intercept` now has the paramaters passed to allow for more advanced scenarios see #2909
- `IBinder.Bind` now has all arguments passed instead of just `IDictionary/IList` to allow for more flexible type conversion see #2908
- `Javascript Binding` methods are now executed on the `ThreadPool` instead of their own dedicated thread, see 2873
",1135454
880,False,False,2019-11-03T02:49:00Z,2019-11-03T02:51:23Z,"03 November 2019, CEF 75.1.14+gc81164e+chromium-75.0.3770.100 / Chromium 75.0.3770.100

**Bug Fix Release**

- #2930 WPF - Crash after removing browser with height 0 from visual tree and re-attaching [@amaitland]
- #2642 WinForms/WPF does not work when packaged as WAP (Desktop Bridge) project. [@amaitland]
- #2881 Add IURLRequest [@davidmi]
- #2856 WPF - Content appears blurry when the system dpi changes on a per monitor dpi aware app  [@amaitland]

See also https://github.com/cefsharp/CefSharp/releases/tag/v75.1.142
See also https://github.com/cefsharp/CefSharp/releases/tag/v75.1.141 

",1135454
881,False,False,2019-09-08T01:43:08Z,2019-09-09T08:12:18Z,"09 September 2019, CEF 75.1.14+gc81164e+chromium-75.0.3770.100 / Chromium 75.0.3770.100

**Bug Fix Release**

#2872 LoadHtml/RegisterResourceHandler displays empty page [@amaitland]
#2879 WPF - Updated #2779 hack to run asynchronous without crashing. [@mol]
#2894  Add a "".NETCoreApp3.0"" dependency to the .nuspec files [@kpreisser]

See https://github.com/cefsharp/CefSharp/releases/tag/v75.1.141 for full details

",1135454
882,False,False,2019-08-13T21:45:47Z,2019-08-15T10:07:43Z,"August 15, 2019, CEF 75.1.14+gc81164e+chromium-75.0.3770.100 / Chromium 75.0.3770.100

`CEF` now supports the `Chromium Network Service` which brings a huge number of **breaking** `API` changes, please make sure you read https://github.com/cefsharp/CefSharp/issues/2743 for details.

**`Visual C++ 2015` is required, see `Notes` below for more information**

The `Nuget` packages now use a slightly different versioning scheme, see https://github.com/cefsharp/CefSharp/issues/2706 for details

- #2250 SendProcessMessage message not recieved after process switch
- #2671 IRequest.Headers uses copy semantics instead of reference semantics [@amaitland]
- #2690 Change ISchemeRegistrar.AddCustomScheme to use SchemeOptions enum [@amaitland]
- #2710 Refactoring - Remove IsBrowserInitializedChangedEventArgs [@merceyz]
- #2743 Chromium NetworkService API Changes [@amaitland]
- #2747 Remove IRequestContext.ResolveHostCached [@amaitland]
- #2749 IME implementation in WPF [@a-marmer]
- #2755 UrlRequestFlags.AllowCachedCredentials rename to AllowStoredCredentials [@amaitland]
- #2756 Kill sub process to avoid hanging forever [@joaompneves]
- #2758 Feature Request - Async Javascript Binding Add support for returning Task [@amaitland]
- #2767 Refactor to avoid loading System.ServiceModel assembly [@slozier]
- #2775 Feature Request - Add Javascript CefSharp.PostMessage [@amaitland]
- #2776 WinForms - Initial Touch Activation Not Working [@amaitland]
- #2782 WPF Experimental IME - Fixed IME window not showing or showing at the wrong location [@mol]
- #2784 WinForms - Remove EditorBrowsableState.Never [@amaitland]
- #2792 Async JavaScript Binding - Long running method response incorrectly resolves promise after navigation [@amaitland]
- #2809 CEF/Chromium NetworkService API Changes [@amaitland]
- #2812 OffScreen - ChromiumWebBrowser constructor change RequestContext to IRequestContext [@medoni]
- #2814 WinForms - Add Shift+Tab to IsInputKey (used when MultiThreadedMessageLoop is disabled) [@eklavyamirani]
- #2817 WPF - Fix and improve touch and stylus @[kkwpsv]
- #2822 PdfPrintSettings margin measured in points, not mm [@matthew-a-thomas]
- #2829 Javascript Integration - Passing empty array in JS now maps to empty list/array instead of null [@angshuman-agarwal]
- #2834 WPF - Update ZoomLevel xml doc re same origin behaviour [@amaitland]
- #2839 WcfEnabledSubProcess::OnBrowserDestroyed crashes render process when channelFactory null [@amaitland]
- #2843 WPF - Image Jumps Vertically on Height Change [@chenhuang444]

**Notes**
- `CefSharp` requires `Visual C++ 2015`. See https://github.com/cefsharp/CefSharp/issues/1983 for details. You can bin deploy the `VC++` dependencies, read the `FAQ` for more.
- Starting in June 2019 Google will require OAuth authentication when accessing web services that rely only Google Account Data, this includes Gmail, Drive, Docs, see https://security.googleblog.com/2019/04/better-protection-against-man-in-middle.html?m=1 for further discussion see https://groups.google.com/a/chromium.org/d/msg/embedder-dev/STyM5ZNTHMM/POj1v_cqBgAJ
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`. See https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- `MP3` audio is now supported by default.
- Due to licensing issues default builds do not support proprietary codecs like `H264/AAC`, sites like `Netflix/Twitter/Instagram/Facebook` won't play video/audio. See #1479 for more info.
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project uses `GitLink` for better debugging, see #1680
- `WPF` now has a `VirtualKeyboardRequested` event that can be used to display a virtual keyboard see https://github.com/cefsharp/CefSharp/issues/1736 for full details 
- `WPF` now has experimental touch support, it's not enabled by default, see https://github.com/cefsharp/CefSharp/issues/228#issuecomment-489065987 for further details
- `BrowserSettings` life cycle has changed, if created by CefSharp the object will be disposed automatically, if user created then it will be up to the user Disposed or Garbage collected. See for full details https://github.com/cefsharp/CefSharp/issues/2643
- Legacy Javascript binding registered JavaScript objects **no longer** get lost when navigating to another domain.

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- Browser goes blank if used in combination with WPF TabControl see #2779
- Setting CefSettings.RootCachePath has no effect (https://bitbucket.org/chromiumembedded/cef/issues/2740/cefsettings-root_cache_path-is-not). The fix was applied to the `3770` branch, there is no official build available that includes this fix. No known workaround, you might need to skip this version and wait for the next major release.
- WPF dropdown(select element) closes after mouse wheel https://bitbucket.org/chromiumembedded/cef/issues/2547/drop-down-box-select-element-closes-after
- A list of the `Network Service` related bugs that I'm aware of is at https://github.com/cefsharp/CefSharp/issues/2743#issuecomment-502490133 (there are possibly more issues that I'm not aware of).
- LoadHtml/RegisterResourceHandler displays empty page #2872
- `CefSettings.IgnoreCertificateErrors` no longer works, use the `ignore-certificate-errors` command line arg as a workaround.
- Intermittent crash on shutdown is caused by the new `Network Service`, see https://bitbucket.org/chromiumembedded/cef/issues/2703/crash-when-closing-if to workaround you can disable the `Network Service` example at https://github.com/cefsharp/CefSharp/issues/2743#issuecomment-521892919
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- For `Network Service API` changes see https://github.com/cefsharp/CefSharp/issues/2743
- `UrlRequestFlags.AllowCachedCredentials` rename to `AllowStoredCredentials`
- Remove `IRequestContext.ResolveHostCached`
- Change `ISchemeRegistrar.AddCustomScheme` to use `SchemeOptions` enum
- Javascript Integration - Passing empty array in JS now maps to empty list/array instead of null
- `CefSharp.WinForms.ChromiumWebBrowser.IsBrowserInitializedChanged` removed custom IsBrowserInitializedChangedEventArgs (wasn't being used) see #2710 for an example
",1135454
883,False,True,2019-07-27T11:50:58Z,2019-07-27T11:55:36Z,"July 27, 2019, CEF 75.1.14+gc81164e+chromium-75.0.3770.100 / Chromium 75.0.3770.100

`CEF` now supports the `Chromium Network Service` which brings a huge number of breaking `API` changes see
breaking changes section below

**`Visual C++ 2015` is required, see `Notes` below for more information**

The `Nuget` packages now use a slightly different versioning scheme, see https://github.com/cefsharp/CefSharp/issues/2706 for details

- #2250 SendProcessMessage message not recieved after process switch
- #2671 IRequest.Headers uses copy semantics instead of reference semantics [@amaitland]
- #2690 Change ISchemeRegistrar.AddCustomScheme to use SchemeOptions enum [@amaitland]
- #2710 Refactoring - Remove IsBrowserInitializedChangedEventArgs [@merceyz]
- #2747 Remove IRequestContext.ResolveHostCached [@amaitland]
- #2749 IME implementation in WPF [@a-marmer]
- #2755 UrlRequestFlags.AllowCachedCredentials rename to AllowStoredCredentials [@amaitland]
- #2756 Kill sub process to avoid hanging forever [@joaompneves]
- #2758 Feature Request - Async Javascript Binding Add support for returning Task [@amaitland]
- #2767 Refactor to avoid loading System.ServiceModel assembly [@slozier]
- #2775 Feature Request - Add Javascript CefSharp.PostMessage [@amaitland]
- #2782 WPF Experimental IME - Fixed IME window not showing or showing at the wrong location [@mol]
- #2784 WinForms - Remove EditorBrowsableState.Never [@amaitland]
- #2809 CEF/Chromium NetworkService API Changes [@amaitland]
- #2812 OffScreen - ChromiumWebBrowser constructor change RequestContext to IRequestContext [@medoni]
- #2814 WinForms - Add Shift+Tab to IsInputKey (used when MultiThreadedMessageLoop is disabled) [@eklavyamirani]
- #2817 WPF - Fix and improve touch and stylus @[kkwpsv]
- #2822 PdfPrintSettings margin measured in points, not mm [@matthew-a-thomas]
- #2829 Javascript Integration - Passing empty array in JS now maps to empty list/array instead of null [@angshuman-agarwal]
- #2834 WPF - Update ZoomLevel xml doc re same origin behaviour [@amaitland]
- #2839 WcfEnabledSubProcess::OnBrowserDestroyed crashes render process when channelFactory null [@amaitland]
- #2843 WPF - Image Jumps Vertically on Height Change [@chenhuang444]

**Notes**
- `CefSharp` requires `Visual C++ 2015`. See https://github.com/cefsharp/CefSharp/issues/1983 for details. You can bin deploy the `VC++` dependencies, read the `FAQ` for more.
- Starting in June 2019 Google will require OAuth authentication when accessing web services that rely only Google Account Data, this includes Gmail, Drive, Docs, see https://security.googleblog.com/2019/04/better-protection-against-man-in-middle.html?m=1 for further discussion see https://groups.google.com/a/chromium.org/d/msg/embedder-dev/STyM5ZNTHMM/POj1v_cqBgAJ
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`. See https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- `MP3` audio is now supported by default.
- Due to licensing issues default builds do not support proprietary codecs like `H264/AAC`, sites like `Netflix/Twitter/Instagram/Facebook` won't play video/audio. See #1479 for more info.
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project uses `GitLink` for better debugging, see #1680
- `WPF` now has a `VirtualKeyboardRequested` event that can be used to display a virtual keyboard see https://github.com/cefsharp/CefSharp/issues/1736 for full details 
- `WPF` now has experimental touch support, it's not enabled by default, see https://github.com/cefsharp/CefSharp/issues/228#issuecomment-489065987 for further details
- `BrowserSettings` life cycle has changed, if created by CefSharp the object will be disposed automatically, if user created then it will be up to the user Disposed or Garbage collected. See for full details https://github.com/cefsharp/CefSharp/issues/2643
- Legacy Javascript binding registered JavaScript objects **no longer** get lost when navigating to another domain.

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues
- Browser goes blank if used in combination with WPF TabControl see #2779

**Breaking Changes**
- For `Network Service API` changes see https://github.com/cefsharp/CefSharp/issues/2743
- `UrlRequestFlags.AllowCachedCredentials` rename to `AllowStoredCredentials`
- Remove `IRequestContext.ResolveHostCached`
- Change `ISchemeRegistrar.AddCustomScheme` to use `SchemeOptions` enum
- Javascript Integration - Passing empty array in JS now maps to empty list/array instead of null
- `CefSharp.WinForms.ChromiumWebBrowser.IsBrowserInitializedChanged` removed custom IsBrowserInitializedChangedEventArgs (wasn't being used) see #2710 for an example
",1135454
884,False,False,2019-05-03T11:22:56Z,2019-05-03T11:36:35Z,"May 03, 2019, CEF 73.1.13+g6e3c989+chromium-73.0.3683.75 / Chromium 73.0.3683.75

**`Visual C++ 2015` is now required, see `Notes` below for more information**

The `Nuget` packages now use a slightly different versioning scheme, see https://github.com/cefsharp/CefSharp/issues/2706 for details

- #1811 WinForms - CreateBrowser Forcing form activation [@amaitland]
- #2506 Add support for unsafely-treat-insecure-origin-as-secure 
- #2547 WPF/OffScreen resizing issue - Surface invariants violation
- #2639 Feature Request - Add LogSeverity:Fatal [@amaitland]
- #2643 CefBrowserHost::CreateBrowser call failed when trying to reuse BrowserSettings instance [@amaitland]
- #2645 Feature Request - Add optional initialAddress param to WPF constructor [@amaitland]
- #2646 blob_storage and GPUCache created when on CachePath specified
- #2651 Improved dispose pattern in ChromiumWebBrowser [@merceyz]
- #2652 WPF - Refactor RenderHandler implementations [@merceyz]
- #2654 Fixed message interceptor not working after a render process switch [@merceyz]
- #2663 Feature Request - Add IBrowserHost.SendTouchEvent [@amaitland]
- #2665 Feature Request - Add IBrowserHost.SetAudioMuted [@amaitland]
- #2682 Refactoring - Move CefNavigationEntry conversion to TypeConversion [@merceyz]
- #2686 Feature Request - Add IDisplayHandler.OnLoadingProgressChange [@amaitland]
- #2689 Feature Request - Add WPF/OffScreen OnVirtualKeyboardRequested [@amaitland]
- #2691 WPF - Implement UpdateDragCursor [@joaompneves]
- #2697 Add Initial IRenderProcessHandler.OnContextCreated/Released implementation [@amaitland]
- #2701 Reorder dispose pattern in ChromiumWebBrowser [@amaitland]
- #2702 Fixed spelling error in IJavascriptObjectRepository [@merceyz]
- #2703 Refactoring - Move Register(async)JsObject to WebBrowserExtensions [@merceyz]
- #2714 Feature Request - Add IAudioHandler [@amaitland]
- #2725 WinForms - DefaultFocusHandler.OnGotFocus NullReferenceException when JS print from popup [@amaitland]
- #2739 Add TemplatePart Attributes to ChromiumBrowser [@GSonofNun]
- #2745 WPF - Implement Touch and Stylus Input [@GSonofNun] **EXPERIMENTAL - NOT ENABLED BY DEFAULT**
- #2748 IJavascriptCallback.CanExecute - Improve reliability [@amaitland]

**Notes**
- `CefSharp` requires `Visual C++ 2015`. See https://github.com/cefsharp/CefSharp/issues/1983 for details. You can bin deploy the `VC++` dependencies, read the `FAQ` for more.
- Starting in June 2019 Google will require OAuth authentication when accessing web services that rely only Google Account Data, this includes Gmail, Drive, Docs, see https://security.googleblog.com/2019/04/better-protection-against-man-in-middle.html?m=1 for further discussion see https://groups.google.com/a/chromium.org/d/msg/embedder-dev/STyM5ZNTHMM/POj1v_cqBgAJ
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`. See https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- `MP3` audio is now supported by default.
- Due to licensing issues default builds do not support proprietary codecs like `H264/AAC`, sites like `Netflix/Twitter/Instagram/Facebook` won't play video/audio. See #1479 for more info.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/wiki/CrashReporting.md for details, make sure you set `ExternalHandler=CefSharp.BrowserSubprocess.exe`
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project uses `GitLink` for better debugging, see #1680
- `WPF` now has a `VirtualKeyboardRequested` event that can be used to display a virtual keyboard see https://github.com/cefsharp/CefSharp/issues/1736 for full details 
- `WPF` now has experimental touch support, it's not enabled by default, see https://github.com/cefsharp/CefSharp/issues/228#issuecomment-489065987 for further details

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- When using Legacy Javascript binding registered JavaScript objects get lost when navigating to another domain (#1203), see #2247 for details on the new implementation.
- Browser goes blank if used in combination with WPF TabControl #2779
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- Added IDisplayHandler.OnLoadingProgressChange
- Move Register(async)JsObject to WebBrowserExtensions, add `using CefSharp;` as `WebBrowserExtensions` is in the `CefSharp` namespace.
- Added IWebBrowser.IsDisposed property
- `BrowserSettings` life cycle has changed, if created by CefSharp the object will be disposed automatically, if user created then it will be up to the user Disposed or Garbage collected. See for full details https://github.com/cefsharp/CefSharp/issues/2643",1135454
885,False,True,2019-04-10T19:50:36Z,2019-04-10T20:00:18Z,"April 10, 2019, CEF 73.1.12+gee4b49f+chromium-73.0.3683.75 / Chromium 73.0.3683.75

**`Visual C++ 2015` is now required, see `Notes` below for more information**

The `Nuget` packages now use a slightly different versioning scheme, see https://github.com/cefsharp/CefSharp/issues/2706 for details

- #1811 WinForms - CreateBrowser Forcing form activation [@amaitland]
- #2547 WPF/OffScreen resizing issue - Surface invariants violation
- #2639 Feature Request - Add LogSeverity:Fatal [@amaitland]
- #2643 CefBrowserHost::CreateBrowser call failed when trying to reuse BrowserSettings instance [@amaitland]
- #2645 Feature Request - Add optional initialAddress param to WPF constructor [@amaitland]
- #2646 blob_storage and GPUCache created when on CachePath specified
- #2651 Improved dispose pattern in ChromiumWebBrowser [@merceyz]
- #2652 WPF - Refactor RenderHandler implementations [@merceyz]
- #2654 Fixed message interceptor not working after a render process switch [@merceyz]
- #2663 Feature Request - Add IBrowserHost.SendTouchEvent [@amaitland]
- #2665 Feature Request - Add IBrowserHost.SetAudioMuted [@amaitland]
- #2682 Refactoring - Move CefNavigationEntry conversion to TypeConversion [@merceyz]
- #2686 Feature Request - Add IDisplayHandler.OnLoadingProgressChange [@amaitland]
- #2689 Feature Request - Add WPF/OffScreen OnVirtualKeyboardRequested [@amaitland]
- #2691 WPF - Implement UpdateDragCursor [@joaompneves]
- #2697 Add Initial IRenderProcessHandler.OnContextCreated/Released implementation [@amaitland]
- #2701 Reorder dispose pattern in ChromiumWebBrowser [@amaitland]
- #2702 Fixed spelling error in IJavascriptObjectRepository [@merceyz]
- #2703 Refactoring - Move Register(async)JsObject to WebBrowserExtensions [@merceyz]

**Notes**
- `CefSharp` requires `Visual C++ 2015`. See https://github.com/cefsharp/CefSharp/issues/1983 for details. You can bin deploy the `VC++` dependencies, read the `FAQ` for more.
- Starting in June 2019 Google will require OAuth authentication when accessing web services that rely only Google Account Data, this includes Gmail, Drive, Docs, see https://security.googleblog.com/2019/04/better-protection-against-man-in-middle.html?m=1
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`. See https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- `MP3` audio is now supported by default.
- Due to licensing issues default builds do not support proprietary codecs like `H264/AAC`, sites like `Netflix/Twitter/Instagram/Facebook` won't play video/audio. See #1479 for more info.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/wiki/CrashReporting.md for details, make sure you set `ExternalHandler=CefSharp.BrowserSubprocess.exe`
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project uses `GitLink` for better debugging, see #1680
- `WPF` now has a `VirtualKeyboardRequested` event that can be used to display a virtual keyboard see https://github.com/cefsharp/CefSharp/issues/1736 for full details 

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- When using Legacy Javascript binding registered JavaScript objects get lost when navigating to another domain (#1203), see #2247 for details on the new implementation.
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- Added IDisplayHandler.OnLoadingProgressChange
- Move Register(async)JsObject to WebBrowserExtensions, add `using CefSharp;` as `WebBrowserExtensions` is in the `CefSharp` namespace.
- Added IWebBrowser.IsDisposed property
- `BrowserSettings` life cycle has changed, if created by CefSharp the object will be disposed automatically, if user created then it will be up to the user Disposed or Garbage collected. See for full details https://github.com/cefsharp/CefSharp/issues/2643



",1135454
886,False,False,2019-03-09T03:46:33Z,2019-03-09T05:55:21Z,"March 09, 2019, CEF 3.3578.1870.gc974488 / Chromium 71.0.3578.98

**Bug Fix Release**

This release addresses a **CRITICAL SECURITY** issue, everyone that uses `CefSharp` for internet browsing should upgrade. Those using for only intranet browsing the risk is obviously smaller, though you should perform your own risk analysis. I recommend that everyone upgrade.

https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-5786
https://security.googleblog.com/2019/03/disclosing-vulnerabilities-to-protect.html

> We encourage users to verify that Chrome auto-update has already updated Chrome to 72.0.3626.121 or later.

`CEF` has specifically backported the fix into the `3578` branch (version `71`). The relevant commit is https://bitbucket.org/chromiumembedded/cef/commits/c974488bae67171e814b9666de3000867ff7bd76?at=3578

See https://github.com/cefsharp/CefSharp/releases/tag/v71.0.0 for full details
See https://github.com/cefsharp/CefSharp/releases/tag/v71.0.1 for additional details

- #2677 CRITICAL UPDATE CVE-2019-5786
",1135454
887,False,False,2019-03-06T10:30:12Z,2019-03-06T10:46:54Z,"March 06, 2019, CEF 3.3578.1869.gcc1dc0f / Chromium 71.0.3578.98

**Bug Fix Release**

See https://github.com/cefsharp/CefSharp/releases/tag/v71.0.0 for full details

- #2638 Crash while disposing CefSharp.WinForms.ChromiumWebBrowser [@mbragg12]
- #2662 IJavascriptCallback.ExecuteAsync with DateTime as param produces incorrect JavaScript Date [@amaitland]
- #2667 WinForms Designer Unable to Load CefSharp.Core 
- #2669 Core - BrowserSettings: Fixed a memory leak [@merceyz]
- #2670 Core - WindowInfo: Fixed a memory leak [@merceyz]
",1135454
888,False,False,2019-01-19T03:02:09Z,2019-01-21T10:00:32Z,"January 21, 2019, CEF 3.3578.1863.gbf8cff2 / Chromium 71.0.3578.98

**`Visual C++ 2015` is now required, see `Notes` below for more information**

#657 Dropdowns on a topmost window appear behind the window
#2127 WPF - Transparency Rendering Too Dark [@maloshuk]
#2139 Feature Request - Expose CefApp::OnRegisterCustomSchemes [@amaitland]
#2373 Call OnContextCreated and OnContextReleased for each frame [@sukhovy]
#2433 PassThruResponseFilter/MemoryStreamResponseFilter throw exception when DataIn is greater than DataOut [@juongithub]
#2527 Feature Request - Add CefRenderHandler::OnAcceleratedPaint [@amaitland]
#2551 CefTerminationStatus - Add TS_PROCESS_OOM [@amaitland]
#2553 Investigate changes required for Chromium Site Isolation [@amaitland]
#2562 OnContextCreated/OnContextDestoryed Frame null exception during navigation [@mitchcapper]
#2585 WPF - Use nameof for DependencyProperty.Register instead of hardcoded strings [@merceyz]
#2590 WinForms - Added missing Browsable attribute on JavascriptObjectRepository + Updated DefaultValue attribute on UseParentFormMessageInterceptor [@merceyz]
#2594 Feature Request - Add IBrowserHost.RunFileDialog [@amaitland]
#2595 Added SourcePath to CefSharp.Core and CefSharp.BrowserSubprocess.Core [@merceyz]
#2596 Enabled MultiProcessorCompilation for Core and BrowserSubprocess.Core [@merceyz]
#2597 Refactoring - Move CefCookie conversion to TypeConversion [@merceyz]
#2598 OffScreen - Remove Obsolete methods [@amaitland]
#2599 IBrowserHost.ImeSetComposition - Add ReplacementRange [@amaitland]
#2600 In Cef.Getxxxx throw Exception if not Cef.IsInitialized [@amaitland]
#2603 Update Dependency Check [@amaitland]
#2605 Cef.Get* - Added initialize checks to Cef.Get* [@merceyz]
#2607 Remove IResponse.ResponseHeaders (replaced by IResponse.Headers) [@amaitland]
#2612 Rename CefExtension to V8Extension [@amaitland]
#2613 Add Chromium Extension Support [@amaitland]
#2614 fix OffScreen spelling in Cef.h [@campersau]
#2615 Feature Request - Add CefSettings.EnableNetSecurityExpiration [@amaitland]
#2620 Add spaces in exception messages [@campersau]
#2625 TypeConversion - ToNative improve type checking [@amaitland]

**Notes**
- `CefSharp` requires `Visual C++ 2015`. See https://github.com/cefsharp/CefSharp/issues/1983 for details. You can bin deploy the `VC++` dependencies, read the `FAQ` for more.
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`. See https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- `MP3` audio is now supported by default.
- Due to licensing issues default builds do not support proprietary codecs like `H264/AAC`, sites like `Netflix/Twitter/Instagram/Facebook` won't play video/audio. See #1479 for more info.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/wiki/CrashReporting.md for details, make sure you set `ExternalHandler=CefSharp.BrowserSubprocess.exe`
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project uses `GitLink` for better debugging, see #1680
- The `chrome_elf.dll` is now **required**, it's used for crashpad (crash reporting). 
- `CefSettings` was moved from `CefSharp` namespace, there are now specific versions in `Wpf`, `WinForms` and `OffScreen` namespaces, add the relevant namespace prefix or using statement, see https://github.com/cefsharp/CefSharp/issues/2477 for details.
- `Cef.Initialize()` (the paramaterless version) was removed. You only need to explicitly call `Cef.Initialze` when you need to specify custom settings. See https://github.com/cefsharp/CefSharp/issues/2477
- `WinForms` workaround for certain scenarios fails to load the Url passed into the ChromiumWebBrowser constructor (initial details in https://github.com/cefsharp/CefSharp/issues/2234#issuecomment-360332625 has been reverted in https://github.com/cefsharp/CefSharp/commit/821a44fecc9aa1e103027323defea7b1d4c0bf82 as the issue appears to be resolved.

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- When using Legacy Javascript binding registered JavaScript objects get lost when navigating to another domain (#1203), see #2247 for details on the new implementation.
- `WPF/Offscreen` rendering stops redrawing on resize see `upstream` issue https://bitbucket.org/chromiumembedded/cef/issues/2370/cefrenderhandler-onpaint-stops-receiving
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- Remove IResponse.ResponseHeaders (replaced by IResponse.Headers)
- IBrowserHost.ImeSetComposition - Add ReplacementRange
- OffScreen - Remove Obsolete methods see #2598 for details
- Add CefRenderHandler::OnAcceleratedPaint see #2527 for details
- `IRenderProcessMessageHandler.OnContextCreated` and `IRenderProcessMessageHandler.OnContextReleased` are now called for for each frame (previously only called for Main Frame) see #2373 for details
",1135454
889,False,True,2019-01-01T11:47:51Z,2019-01-02T05:14:21Z,"January 02, 2019, CEF 3.3578.1860.g36610bd / Chromium 71.0.3578.80

**`Visual C++ 2015` is now required, see `Notes` below for more information**

#657 Dropdowns on a topmost window appear behind the window
#2127 WPF - Transparency Rendering Too Dark [@maloshuk]
#2373 Call OnContextCreated and OnContextReleased for each frame [@sukhovy]
#2433 PassThruResponseFilter/MemoryStreamResponseFilter throw exception when DataIn is greater than DataOut [@juongithub]
#2527 Feature Request - Add CefRenderHandler::OnAcceleratedPaint [@amaitland]
#2551 CefTerminationStatus - Add TS_PROCESS_OOM [@amaitland]
#2553 Investigate changes required for Chromium Site Isolation [@amaitland]
#2562 OnContextCreated/OnContextDestoryed Frame null exception during navigation [@mitchcapper]
#2585 WPF - Use nameof for DependencyProperty.Register instead of hardcoded strings [@merceyz]
#2590 WinForms - Added missing Browsable attribute on JavascriptObjectRepository + Updated DefaultValue attribute on UseParentFormMessageInterceptor [@merceyz]
#2594 Feature Request - Add IBrowserHost.RunFileDialog [@amaitland]
#2595 Added SourcePath to CefSharp.Core and CefSharp.BrowserSubprocess.Core [@merceyz]
#2596 Enabled MultiProcessorCompilation for Core and BrowserSubprocess.Core [@merceyz]
#2597 Refactoring - Move CefCookie conversion to TypeConversion [@merceyz]
#2598 OffScreen - Remove Obsolete methods [@amaitland]
#2599 IBrowserHost.ImeSetComposition - Add ReplacementRange [@amaitland]
#2600 In Cef.Getxxxx throw Exception if not Cef.IsInitialized [@amaitland]
#2603 Update Dependency Check [@amaitland]
#2605 Cef.Get* - Added initialize checks to Cef.Get* [@merceyz]
#2607 Remove IResponse.ResponseHeaders (replaced by IResponse.Headers) [@amaitland]
#2612 Rename CefExtension to V8Extension [@amaitland]
#2613 Add Chromium Extension Support [@amaitland]
#2614 fix OffScreen spelling in Cef.h [@campersau]
#2615 Feature Request - Add CefSettings.EnableNetSecurityExpiration [@amaitland]

**Notes**
- `CefSharp` requires `Visual C++ 2015`. See https://github.com/cefsharp/CefSharp/issues/1983 for details. You can bin deploy the `VC++` dependencies, read the `FAQ` for more.
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`. See https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- `MP3` audio is now supported by default.
- Due to licensing issues default builds do not support proprietary codecs like `H264/AAC`, sites like `Netflix/Twitter/Instagram/Facebook` won't play video/audio. See #1479 for more info.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/wiki/CrashReporting.md for details, make sure you set `ExternalHandler=CefSharp.BrowserSubprocess.exe`
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project uses `GitLink` for better debugging, see #1680
- The `chrome_elf.dll` is now **required**, it's used for crashpad (crash reporting). 
- `CefSettings` was moved from `CefSharp` namespace, there are now specific versions in `Wpf`, `WinForms` and `OffScreen` namespaces, add the relevant namespace prefix or using statement, see https://github.com/cefsharp/CefSharp/issues/2477 for details.
- `Cef.Initialize()` (the paramaterless version) was removed. You only need to explicitly call `Cef.Initialze` when you need to specify custom settings. See https://github.com/cefsharp/CefSharp/issues/2477

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- When using Legacy Javascript binding registered JavaScript objects get lost when navigating to another domain (#1203), see #2247 for details on the new implementation.
- `WPF/Offscreen` rendering stops redrawing on resize see `upstream` issue https://bitbucket.org/chromiumembedded/cef/issues/2370/cefrenderhandler-onpaint-stops-receiving
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- Remove IResponse.ResponseHeaders (replaced by IResponse.Headers)
- IBrowserHost.ImeSetComposition - Add ReplacementRange
- OffScreen - Remove Obsolete methods see #2598  for details
- Add CefRenderHandler::OnAcceleratedPaint see #2527  for details
- `IRenderProcessMessageHandler.OnContextCreated` and `IRenderProcessMessageHandler.OnContextReleased` are now called for for each frame (previously only called for Main Frame) see #2373 for details
",1135454
890,False,False,2018-11-19T03:21:53Z,2018-11-19T03:25:13Z,"November 19, 2018, CEF 3.3497.1841.g7f37a0a / Chromium 69.0.3497.100

**`Visual C++ 2015` is now required, see `Breaking Changes` below for more information**

#2341 Crash on method OnBeforeCommandLineProcessing() when there is Switch parameters without value [@amaitland]
#2432 Memory leak when using CefSharp.BindObjectAsync().
#2492 Browser stop redrawing on resize.
#2515 Resizing iframe stop capturing mouse wheel
#2523 Rename IJsDialogHandler.OnJSBeforeUnload to OnBeforeUnloadDialog [@amaitland]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`. See https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- `MP3` audio is now supported by default.
- Due to licensing issues default builds do not support proprietary codecs like `H264/AAC`, sites like `Netflix/Twitter/Instagram/Facebook` won't play video/audio. See #1479 for more info.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/wiki/CrashReporting.md for details, make sure you set `ExternalHandler=CefSharp.BrowserSubprocess.exe`
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project uses `GitLink` for better debugging, see #1680
- The `chrome_elf.dll` is now **required**, it's used for crashpad (crash reporting). 
- `SharedBufferArray` should be disabled in this release, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer and https://bitbucket.org/chromiumembedded/cef/issues/2360/sharedarraybuffer-enabled-so-cef-3112-3282
- `WPF/OffScreen` the `PDF viewer` crashes when you hover over the controls has been resolved see https://bitbucket.org/chromiumembedded/cef/issues/2488/cef-crashes-in-osr-when-opening-pdf-for for further details
- `CefSettings` was moved from `CefSharp` namespace, there are now specific versions in `Wpf`, `WinForms` and `OffScreen` namespaces, add the relevant namespace prefix or using statement, see https://github.com/cefsharp/CefSharp/issues/2477 for details.
- `Cef.Initialize()` (the paramaterless version) was removed. You only need to explicitly call `Cef.Initialze` when you need to specify custom settings. See https://github.com/cefsharp/CefSharp/issues/2477

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- Registered JavaScript objects get lost when navigating to another domain (#1203), see #2247 for details on the new implementation.
- `WinForms` version in certain scenarios fails to load the `Url` passed into the `ChromiumWebBrowser` constructor, see https://github.com/cefsharp/CefSharp/issues/2234#issuecomment-360332625 for workaround.
- `WPF/Offscreen` rendering stops redrawing on resize see `upstream` issue https://bitbucket.org/chromiumembedded/cef/issues/2370/cefrenderhandler-onpaint-stops-receiving
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- `CefSharp` requires `Visual C++ 2015` starting with this release. See https://github.com/cefsharp/CefSharp/issues/1983 for details. You can bin deploy the `VC++` dependencies, read the `FAQ` for more.
- `IJsDialogHandler.OnJSBeforeUnload` was renamed to  `IJsDialogHandler.OnBeforeUnloadDialog` so it matches the `CEF API`, see https://github.com/cefsharp/CefSharp/issues/2523
",1135454
891,False,True,2018-10-23T02:58:37Z,2018-10-26T03:37:02Z,"October 26, 2018, CEF 3.3497.1841.g7f37a0a / Chromium 69.0.3497.100

**`Visual C++ 2015` is now required, see `Breaking Changes` below for more information**

#2341 Crash on method OnBeforeCommandLineProcessing() when there is Switch parameters without value [@amaitland]
#2432 Memory leak when using CefSharp.BindObjectAsync().
#2492 Browser stop redrawing on resize.
#2515 Resizing iframe stop capturing mouse wheel
#2523 Rename IJsDialogHandler.OnJSBeforeUnload to OnBeforeUnloadDialog [@amaitland]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`. See https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- `MP3` audio is now supported by default.
- Due to licensing issues default builds do not support proprietary codecs like `H264/AAC`, sites like `Netflix/Twitter/Instagram/Facebook` won't play video/audio. See #1479 for more info.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/wiki/CrashReporting.md for details, make sure you set `ExternalHandler=CefSharp.BrowserSubprocess.exe`
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project uses `GitLink` for better debugging, see #1680
- The `chrome_elf.dll` is now **required**, it's used for crashpad (crash reporting). 
- `SharedBufferArray` should be disabled in this release, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer and https://bitbucket.org/chromiumembedded/cef/issues/2360/sharedarraybuffer-enabled-so-cef-3112-3282
- `WPF/OffScreen` the `PDF viewer` crashes when you hover over the controls has been resolved see https://bitbucket.org/chromiumembedded/cef/issues/2488/cef-crashes-in-osr-when-opening-pdf-for for further details
- `CefSettings` was moved from `CefSharp` namespace, there are now specific versions in `Wpf`, `WinForms` and `OffScreen` namespaces, add the relevant namespace prefix or using statement, see https://github.com/cefsharp/CefSharp/issues/2477 for details.
- `Cef.Initialize()` (the paramaterless version) was removed. You only need to explicitly call `Cef.Initialze` when you need to specify custom settings. See https://github.com/cefsharp/CefSharp/issues/2477

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- Registered JavaScript objects get lost when navigating to another domain (#1203), see #2247 for details on the new implementation.
- `WinForms` version in certain scenarios fails to load the `Url` passed into the `ChromiumWebBrowser` constructor, see https://github.com/cefsharp/CefSharp/issues/2234#issuecomment-360332625 for workaround.
- `WPF/Offscreen` rendering stops redrawing on resize see `upstream` issue https://bitbucket.org/chromiumembedded/cef/issues/2370/cefrenderhandler-onpaint-stops-receiving
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- `CefSharp` requires `Visual C++ 2015` starting with this release. See https://github.com/cefsharp/CefSharp/issues/1983 for details. You can bin deploy the `VC++` dependencies, read the `FAQ` for more.
- `IJsDialogHandler.OnJSBeforeUnload` was renamed to  `IJsDialogHandler.OnBeforeUnloadDialog` so it matches the `CEF API`, see https://github.com/cefsharp/CefSharp/issues/2523
",1135454
892,False,False,2018-09-05T02:45:06Z,2018-09-05T04:58:56Z,"September 5, 2018, CEF 3.3396.1786.gd3e36d0 / Chromium 67.0.3396.79

**`Visual C++ 2015` is now required, see `Breaking Changes` below for more information**

- #2277 CefFileDialogMode should probably not have [Flags] [@fuzzykiller]
- #2300 WPF Address Binding causing Error Aborted [@amaitland]
- #2408 WPF/OffScreen Mouse wheel becomes unresponsive [@amaitland]
- #2428 Fix possible null reference of RenderHandler [@DamirAinullin]
- #2431 WPF/OffScreen require setting windowless_rendering_enabled in 67+ [@amaitland]
- #2448 Feature Request - Add IRequestContextHandler.OnRequestContextInitialized [@amaitland]
- #2463 OffScreen - Remove BrowserSettings property [@amaitland]
- #2466 Feature Request - JSB throw exception if Window/Form/Control is bound [@amaitland]
- #2468 Feature Request - IFocusHandler should expose IBrowser [@amaitland]
- #2470 Feature Request - IDownloadHandler Add IWebBrowser param [@amaitland]
- #2474 GetScreenInfo - Allow setting of Rect/AvaliableRect  [@alfein]
- #2477 Move CefSettings into Wpf, WinForms and Offscreen namespaces [@amaitland]
- #2480 Add OSR AccessiblityHandler [@igor-eremyashev]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`. See https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- `MP3` audio is now supported by default.
- Due to licensing issues default builds do not support proprietary codecs like `H264/AAC`, sites like `Netflix/Twitter/Instagram/Facebook` won't play video/audio. See #1479 for more info.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/wiki/CrashReporting.md for details, make sure you set `ExternalHandler=CefSharp.BrowserSubprocess.exe`
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project uses `GitLink` for better debugging, see #1680
- The `chrome_elf.dll` is now **required**, it's used for crashpad (crash reporting). 
- `SharedBufferArray` should be disabled in this release, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer and https://bitbucket.org/chromiumembedded/cef/issues/2360/sharedarraybuffer-enabled-so-cef-3112-3282

**Known Issues**
- `WPF/OffScreen` the `PDF viewer` crashes when you hover over the controls, see https://bitbucket.org/chromiumembedded/cef/issues/2488/cef-crashes-in-osr-when-opening-pdf-for
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- Registered JavaScript objects get lost when navigating to another domain (#1203), see #2247 for details on the new implementation.
- `WinForms` version in certain scenarios fails to load the `Url` passed into the `ChromiumWebBrowser` constructor, see https://github.com/cefsharp/CefSharp/issues/2234#issuecomment-360332625 for workaround.
- `WPF/Offscreen` rendering stops redrawing on resize see `upstream` issue https://bitbucket.org/chromiumembedded/cef/issues/2370/cefrenderhandler-onpaint-stops-receiving
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- `CefSharp` requires `Visual C++ 2015` starting with this release. See https://github.com/cefsharp/CefSharp/issues/1983 for details. You can bin deploy the `VC++` dependencies, read the `FAQ` for more.
- `CefSettings` has moved from `CefSharp` namespace, there are now specific versions in `Wpf`, `WinForms` and `OffScreen` namespaces, add the relevant namespace prefix or using statement, see https://github.com/cefsharp/CefSharp/issues/2477 for details.
- `Cef.Initialize()` (the paramaterless version) has been removed. You only need to explicitly call `Cef.Initialze` when you need to specify custom settings. See https://github.com/cefsharp/CefSharp/issues/2477
- `IDialogHandler.OnFileDialog` has an additional `CefFileDialogFlags flags` param, see https://github.com/cefsharp/CefSharp/pull/2280 for details.
- `IFocusHandler` methods now have additional params, see https://github.com/cefsharp/CefSharp/issues/2468
- `IDownloadHandler` methods now have additional params, see https://github.com/cefsharp/CefSharp/issues/2470",1135454
893,False,False,2018-08-17T00:44:02Z,2018-08-17T00:51:18Z,"August 17, 2018, CEF 3.3325.1758.g9aea513 / Chromium 65.0.3325.181

**`Visual C++ 2015` is now required, see `Breaking Changes`  section in 65.0.0 release notes**

**Bug Fix Release**

See https://github.com/cefsharp/CefSharp/releases/tag/v65.0.0 for full details

- #2486 FrameLoadEnd sometimes throws ""The underlying frame is no longer valid - please check the IsValid property before calling"" [@amaitland]

",1135454
894,False,True,2018-08-12T05:33:53Z,2018-08-12T05:42:08Z,"August 9, 2018, CEF 3.3396.1786.gd3e36d0 / Chromium 67.0.3396.79

**`Visual C++ 2015` is now required, see `Breaking Changes` below for more information**

- #2277 CefFileDialogMode should probably not have [Flags] [@fuzzykiller]
- #2408 WPF/OffScreen Mouse wheel becomes unresponsive [@amaitland]
- #2428 Fix possible null reference of RenderHandler [@DamirAinullin]
- #2431 WPF/OffScreen require setting windowless_rendering_enabled in 67+ [@amaitland]
- #2448 Feature Request - Add IRequestContextHandler.OnRequestContextInitialized [@amaitland]
- #2463 OffScreen - Remove BrowserSettings property [@amaitland]
- #2466 Feature Request - JSB throw exception if Window/Form/Control is bound [@amaitland]
- #2468 Feature Request - IFocusHandler should expose IBrowser [@amaitland]
- #2470 Feature Request - IDownloadHandler Add IWebBrowser param [@amaitland]
- #2474 GetScreenInfo - Allow setting of Rect/AvaliableRect  [@alfein]
- #2477 Move CefSettings into Wpf, WinForms and Offscreen namespaces [@amaitland]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`. See https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- `MP3` audio is now supported by default.
- Due to licensing issues default builds do not support proprietary codecs like `H264`, sites like `Netflix/Twitter/Instagram` won't play video/audio. See #1479 for more info.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/wiki/CrashReporting.md for details, make sure you set `ExternalHandler=CefSharp.BrowserSubprocess.exe`
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project uses `GitLink` for better debugging, see #1680
- The `chrome_elf.dll` is now **required**, it's used for crashpad (crash reporting). 
- `SharedBufferArray` should be disabled in this release, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer and https://bitbucket.org/chromiumembedded/cef/issues/2360/sharedarraybuffer-enabled-so-cef-3112-3282

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- Registered JavaScript objects get lost when navigating to another domain (#1203), see #2247 for details on the new implementation.
- `WinForms` version in certain scenarios fails to load the `Url` passed into the `ChromiumWebBrowser` constructor, see https://github.com/cefsharp/CefSharp/issues/2234#issuecomment-360332625 for workaround.
- `WPF/Offscreen` rendering stops redrawing on resize see `upstream` issue https://bitbucket.org/chromiumembedded/cef/issues/2370/cefrenderhandler-onpaint-stops-receiving
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- `CefSharp` requires `Visual C++ 2015` starting with this release. See https://github.com/cefsharp/CefSharp/issues/1983 for details. You can bin deploy the `VC++` dependencies, read the `FAQ` for more.
- `CefSettings` has moved from `CefSharp` namespace, there are now specific versions in `Wpf`, `WinForms` and `OffScreen` namespaces, add the relevant namespace prefix or using statement, see https://github.com/cefsharp/CefSharp/issues/2477 for details.
- `IDialogHandler.OnFileDialog` has an additional `CefFileDialogFlags flags` param, see https://github.com/cefsharp/CefSharp/pull/2280 for details.
- `IFocusHandler` methods now have additional params, see https://github.com/cefsharp/CefSharp/issues/2468
- `IDownloadHandler` methods now have additional params, see https://github.com/cefsharp/CefSharp/issues/2470",1135454
895,False,False,2018-07-13T00:29:41Z,2018-07-13T10:40:31Z,"July 13, 2018, CEF 3.3325.1758.g9aea513 / Chromium 65.0.3325.181

**`Visual C++ 2015` is now required, see `Breaking Changes` below for more information**

- #1332 wpf drag always copy [@amaitland]
- #1778 Zooming Reset Problem [@amaitland]
- #1983 Feature Request - Upgrade to VS2015(VC++ 2015) [@amaitland]
- #2237 Feature Request - Refactoring of OSR rendering to allow for pluggable implementation 
- #2244 Support uncaught exception handling [@joaompneves]
- #2258 WPF Improve Scrollbar Usability [@amaitland]
- #2264 Background doesn't Transparent after Close OffScreen Browser DevTools. [@lalafellsleep]
- #2267 Feature Request - Add IRequestHandler.CanGetCookies/CanSetCookies enhancement [@amaitland]
- #2293 Remove Geolocation API [@amaitland]
- #2307 Some events not set to null in Dispose [@bddckr]
- #2308 AccessViolationException while taking a screenshot [@amaitland]
- #2339 EvaluateScriptAsync (IWebBrowser, String,Object[]) incorrectly handles json string argument [@hunkydoryrepair]
- #2364 FolderSchemeHandlerFactory handle URL encoded paths correctly [@JamesCoyle]
- #2359 CefSharp.BrowserSubprocess.exe left running after parent process exit [@joaompneves]
- #2387 OnPopupSize - fix incorrect ordering of Rect params [@nicholas-str]
- #2390 JS binding causes memory leak in 65+ [@amaitland]
- #2392 Failure to serialize List<T> to V8 object [@marchello2000]
- #2414 WPF ChromiumWebBrowser is not garbage collected after Dispose(); [@henrihs]
- #2422 WPF OnMouseWheel scrolls parent ScrollViewer [@amaitland]
- #2445 Null Pointer exception in JavascriptAsyncMethodHandler::Execute when refresh from DevTools[@Michael-Tajmajer-Emrsn]
- #2449 Bug fix: handle type=crashpad-handler [@perlun]
- #2451 Update IFrame.LoadRequest xml doc [@amaitland]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`.
  https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- `MP3` audio is now supported by default.
- Due to licensing issues default builds do not support proprietary codecs like `H264`, sites like `Netflix/Twitter/Instagram` won't play video/audio. See #1479 for more info.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/wiki/CrashReporting.md for details, make sure you set `ExternalHandler=CefSharp.BrowserSubprocess.exe`
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project now uses `GitLink` for better debugging, see #1680
- The `chrome_elf.dll` is now **required**, it's used for crashpad (crash reporting). 
- `Javascript Binding` now has basic support for dynamic keyword (using ExpandoObject)
- Added `IRequestHandler.CanGetCookies/CanSetCookies`
- `SharedBufferArray` should be disabled in this release, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer and https://bitbucket.org/chromiumembedded/cef/issues/2360/sharedarraybuffer-enabled-so-cef-3112-3282
- The samples included in the project source have now been upgraded to `.Net 4.6.2`, the core project will remain as `.Net 4.5.2` for the time being.
- `CefSharpSettings.SubprocessExitIfParentProcessClosed` has been added to monitor and terminate subprocesses if the parent process exits, see #2359 for details (default to false currently)

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- Registered JavaScript objects get lost when navigating to another domain (#1203), see #2247 for details on the new implementation.
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues
- `WPF/Offscreen` rendering stops redrawing on resize see `upstream` issue https://bitbucket.org/chromiumembedded/cef/issues/2370/cefrenderhandler-onpaint-stops-receiving
- `WPF/OffScreen` Mouse wheel becomes unresponsive after reload, see https://github.com/cefsharp/CefSharp/issues/2408 for the workaround (hopefully in CEF shortly).

**Breaking Changes**
- `CefSharp` requires `Visual C++ 2015` starting with this release. See https://github.com/cefsharp/CefSharp/issues/1983 for details. You can bin deploy the `VC++` dependencies, read the `FAQ` for more.
- The `WPF/OffScreen` implementation of `OffScreen Rendering(OSR)` as been completely reworked to make it more pluggable, see https://github.com/cefsharp/CefSharp/issues/2237 for details.
- Some enums have been moved into the `CefSharp.Enums` namespace
- Some structs have been moved into the `CefSharp.Structs` namespace
- Added `IRequestHandler.CanGetCookies/CanSetCookies`
- The `Geolocation API` has been removed `upstream`, see https://github.com/cefsharp/CefSharp/issues/2293
- `IJavascriptObjectRepository.ObjectBoundInJavascript` event args have changed from `EventHandler<JavascriptBindingEventArgs>` to `EventHandler<JavascriptBindingCompleteEventArgs>`",1135454
896,False,True,2018-06-25T01:51:37Z,2018-06-25T03:19:17Z,"June 25, 2018, CEF 3.3325.1758.g9aea513 / Chromium 65.0.3325.181

**`Visual C++ 2015` is now required, see `Breaking Changes` below for more information**

- #1332 wpf drag always copy [@amaitland]
- #1778 Zooming Reset Problem [@amaitland]
- #1983 Feature Request - Upgrade to VS2015(VC++ 2015) [@amaitland]
- #2237 Feature Request - Refactoring of OSR rendering to allow for pluggable implementation 
- #2244 Support uncaught exception handling [@joaompneves]
- #2258 WPF Improve Scrollbar Usability [@amaitland]
- #2264 Background doesn't Transparent after Close OffScreen Browser DevTools. [@lalafellsleep]
- #2267 Feature Request - Add IRequestHandler.CanGetCookies/CanSetCookies enhancement [@amaitland]
- #2293 Remove Geolocation API [@amaitland]
- #2307 Some events not set to null in Dispose [@bddckr]
- #2308 AccessViolationException while taking a screenshot [@amaitland]
- #2339 EvaluateScriptAsync (IWebBrowser, String,Object[]) incorrectly handles json string argument [@hunkydoryrepair]
- #2364 FolderSchemeHandlerFactory handle URL encoded paths correctly [@JamesCoyle]
- #2359 CefSharp.BrowserSubprocess.exe left running after parent process exit [@joaompneves]
- #2387 OnPopupSize - fix incorrect ordering of Rect params [@nicholas-str]
- #2390 JS binding causes memory leak in 65+ [@amaitland]
- #2392 Failure to serialize List<T> to V8 object [@marchello2000]
- #2414 WPF ChromiumWebBrowser is not garbage collected after Dispose(); [@henrihs]
- #2422 WPF OnMouseWheel scrolls parent ScrollViewer [@amaitland]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`.
  https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- `MP3` audio is now supported by default.
- Due to licensing issues default builds do not support proprietary codecs like `H264`, sites like `Netflix/Twitter/Instagram` won't play video/audio. See #1479 for more info.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/wiki/CrashReporting.md for details, make sure you set `ExternalHandler=CefSharp.BrowserSubprocess.exe`
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project now uses `GitLink` for better debugging, see #1680
- The `chrome_elf.dll` is now **required**, it's used for crashpad (crash reporting). 
- `Javascript Binding` now has basic support for dynamic keyword (using ExpandoObject)
- Added `IRequestHandler.CanGetCookies/CanSetCookies`
- `SharedBufferArray` should be disabled in this release, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer and https://bitbucket.org/chromiumembedded/cef/issues/2360/sharedarraybuffer-enabled-so-cef-3112-3282
- The samples included in the project source have now been upgraded to `.Net 4.6.2`, the core project will remain as `.Net 4.5.2` for the time being.
- `CefSharpSettings.SubprocessExitIfParentProcessClosed` has been added to monitor and terminate subprocesses if the parent process exits, see #2359 for details (default to false currently)

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- Registered JavaScript objects get lost when navigating to another domain (#1203), see #2247 for details on the new implementation.
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues
- `WPF/Offscreen` rendering stops redrawing on resize see `upstream` issue https://bitbucket.org/chromiumembedded/cef/issues/2370/cefrenderhandler-onpaint-stops-receiving
- `WPF/OffScreen` Mouse wheel becomes unresponsive after reload, see https://github.com/cefsharp/CefSharp/issues/2408 for the workaround (hopefully in CEF shortly).

**Breaking Changes**
- `CefSharp` requires `Visual C++ 2015` starting with this release. See https://github.com/cefsharp/CefSharp/issues/1983 for details. You can bin deploy the `VC++` dependencies, read the `FAQ` for more.
- The `WPF/OffScreen` implementation of `OffScreen Rendering(OSR)` as been completely reworked to make it more pluggable, see https://github.com/cefsharp/CefSharp/issues/2237 for details.
- Some enums have been moved into the `CefSharp.Enums` namespace
- Some structs have been moved into the `CefSharp.Structs` namespace
- Added `IRequestHandler.CanGetCookies/CanSetCookies`
- The `Geolocation API` has been removed `upstream`, see https://github.com/cefsharp/CefSharp/issues/2293
- `IJavascriptObjectRepository.ObjectBoundInJavascript` event args have changed from `EventHandler<JavascriptBindingEventArgs>` to `EventHandler<JavascriptBindingCompleteEventArgs>`",1135454
897,False,True,2018-05-01T02:05:21Z,2018-05-01T02:08:02Z,"April 30, 2018, CEF 3.3325.1758.g9aea513 / Chromium 65.0.3325.181

**`Visual C++ 2015` is now required, see `Breaking Changes` below for more information**

- #1332 wpf drag always copy [@amaitland]
- #1778 Zooming Reset Problem [@amaitland]
- #1983 Feature Request - Upgrade to VS2015(VC++ 2015) [@amaitland]
- #2237 Feature Request - Refactoring of OSR rendering to allow for pluggable implementation 
- #2244 Support uncaught exception handling [@joaompneves]
- #2258 WPF Improve Scrollbar Usability [@amaitland]
- #2264 Background doesn't Transparent after Close OffScreen Browser DevTools. [@lalafellsleep]
- #2267 Feature Request - Add IRequestHandler.CanGetCookies/CanSetCookies enhancement [@amaitland]
- #2293 Remove Geolocation API [@amaitland]
- #2307 Some events not set to null in Dispose [@bddckr]
- #2308 AccessViolationException while taking a screenshot [@amaitland]
- #2339 EvaluateScriptAsync (IWebBrowser, String,Object[]) incorrectly handles json string argument [@hunkydoryrepair]
- #2364 FolderSchemeHandlerFactory handle URL encoded paths correctly [@JamesCoyle]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`.
  https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- `MP3` audio is now supported by default.
- Due to licensing issues default builds do not support proprietary codecs like `H264`, sites like `Netflix/Twitter/Instagram` won't play video/audio. See #1479 for more info.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/wiki/CrashReporting.md for details, make sure you set `ExternalHandler=CefSharp.BrowserSubprocess.exe`
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project now uses `GitLink` for better debugging, see #1680
- The `chrome_elf.dll` is now **required**, it's used for crashpad (crash reporting). 
- `Javascript Binding` now has basic support for dynamic keyword (using ExpandoObject)
- Added `IRequestHandler.CanGetCookies/CanSetCookies`
- `SharedBufferArray` should be disabled in this release, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer and https://bitbucket.org/chromiumembedded/cef/issues/2360/sharedarraybuffer-enabled-so-cef-3112-3282
- The samples included in the project source have now been upgraded to `.Net 4.6.2`, the core project will remain as `.Net 4.5.2` for the time being.

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- Registered JavaScript objects get lost when navigating to another domain (#1203), see #2247 for details on the new implementation.
- `WinForms` version in certain scenarios fails to load the `Url` passed into the `ChromiumWebBrowser` constructor, see https://github.com/cefsharp/CefSharp/issues/2234#issuecomment-360332625 for workaround.
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues
- `WPF/Offscreen` rendering stops redrawing on resize see `upstream` issue https://bitbucket.org/chromiumembedded/cef/issues/2370/cefrenderhandler-onpaint-stops-receiving

**Breaking Changes**
- `CefSharp` requires `Visual C++ 2015` starting with this release. See https://github.com/cefsharp/CefSharp/issues/1983 for details. You can bin deploy the `VC++` dependencies, read the `FAQ` for more.
- The `WPF/OffScreen` implementation of `OffScreen Rendering(OSR)` as been completely reworked to make it more pluggable, see https://github.com/cefsharp/CefSharp/issues/2237 for details.
- Some enums have been moved into the `CefSharp.Enums` namespace
- Some structs have been moved into the `CefSharp.Structs` namespace
- Added `IRequestHandler.CanGetCookies/CanSetCookies`
- The `Geolocation API` has been removed `upstream`, see https://github.com/cefsharp/CefSharp/issues/2293
- `IJavascriptObjectRepository.ObjectBoundInJavascript` event args have changed from `EventHandler<JavascriptBindingEventArgs>` to `EventHandler<JavascriptBindingCompleteEventArgs>`",1135454
898,False,False,2018-03-23T05:36:14Z,2018-03-23T06:36:20Z,"March 23, 2018, CEF 3.3239.1723.g071d1c1 / Chromium 63.0.3239.132

**Bug Fix Release**

See https://github.com/cefsharp/CefSharp/releases/tag/v63.0.0 for full details
See https://github.com/cefsharp/CefSharp/releases/tag/v63.0.1 for additional details
See https://github.com/cefsharp/CefSharp/releases/tag/v63.0.2 for additional details

- #2303 Serialize Dictionary type to V8 object [@WarWithinMe]
- #2321 Check if the visual is connected [@marinkobabic]

",1135454
899,False,False,2018-03-08T02:41:23Z,2018-03-08T02:46:38Z,"March 8, 2018, CEF 3.3239.1723.g071d1c1 / Chromium 63.0.3239.132

**Bug Fix Release**

See https://github.com/cefsharp/CefSharp/releases/tag/v63.0.0 for full details
See https://github.com/cefsharp/CefSharp/releases/tag/v63.0.1 for additional details

- #2276  Visual Studio Designer issue when target is AnyCPU (63.0.0) [@amaitland]
- #2283 ""The added or subtracted value results in an un-representable DateTime"" occurring in 63.0.1 [@GrabzIt] 
- #2305 Async JSB Never resolves promise when returning class [@amaitland]

",1135454
900,False,False,2018-02-13T02:55:48Z,2018-02-13T03:02:32Z,"Feburary 13, 2018, CEF 3.3239.1723.g071d1c1 / Chromium 63.0.3239.132

**Bug Fix Release**

See https://github.com/cefsharp/CefSharp/releases/tag/v63.0.0 for full details

- #2273 JavascriptObjectRepository.ResolveObject is not raised unless any object has been registered [@amaitland]

",1135454
901,False,False,2018-02-08T00:54:50Z,2018-02-08T04:55:08Z,"Feburary 8, 2018, CEF 3.3239.1723.g071d1c1 / Chromium 63.0.3239.132

**See #2246 for details on the new Javascript Binding (v2) implementation**

- #1571 High DPI stops redrawing on Resize 
- #1849 The HTML tooltip does not follow cursor wpf [@DanielBretzigheimer]
- #1903 Does not work if I pass an object which has indexer to RegisterJsObject [@amaitland]
- #2025 Support serialization of CLR Classes [@joaompneves]
- #2042 Toggle Form.ShowInTaskbar causes browser reload enhancement [@amaitland]
- #2056 Prevent accelerator keys to work when typing text [@joaompneves]
- #2074 PipeException occurs occasionally [@amaitland]
- #2151 Wrong displaying the HTML combobox and selecting items when angle transformation applied to browser. up-for-grabs wpf [@amaitland]
- #2156 Feature Request - Update Nuget targets to link unmanaged resources enhancement up-for-grabs [@amaitland]
- #2157 Added default implementation of IRequestHandler  [@martinekvili]
- #2182 WebGL software rendering is broken in CefSharp 57 [@amaitland]
- #2189 Improve IRequestContextHandler.GetCookieManager type checking [@amaitland]
- #2206 WinForms, cant add UserControl in design mode [@merceyz]
- #2217 FileResourceHandler throws System.AccessViolationException if file doesn't exist bug [@amaitland]
- #2218 Dont discard null Values from arrays [@joaompneves]
- #2219 Fix enums, integer and doubles binding behavior [@joaompneves]
- #2247 Implement Javascript Binding v2 [@amaitland]
- #2248 WPF Improve layout rounding [@amaitland]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`.
  https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- Due to licensing issues default builds do not support proprietary codecs like `H264`, sites like `Netflix/Twitter/Instagram` won't play video/audio. See #1479 for more info.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/wiki/CrashReporting.md for details, make sure you set `ExternalHandler=CefSharp.BrowserSubprocess.exe`
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project now uses `GitLink` for better debugging, see #1680
- The `chrome_elf.dll` is now **required**, it's used for crashpad (crash reporting). 
- `Chromium` has not implemented the changes in the `3239` branch to enable `MP3` support by default, likely included in version `65` 
- `Javascript Binding` now has basic support for dynamic keyword (using ExpandoObject)
- Added `IDisplayHandler.OnAutoResize`
- Now supports Swiftshader for CPU based 3d rendering see https://swiftshader.googlesource.com/SwiftShader#swiftshader

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- Registered JavaScript objects get lost when navigating to another domain (#1203), see #2247 for details on the new implementation.
- `WinForms` version in certain scenarios fails to load the `Url` passed into the `ChromiumWebBrowser` constructor, see https://github.com/cefsharp/CefSharp/issues/2234#issuecomment-360332625 for workaround.
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues
- `WPF/Offscreen` rendering stops redrawing on resize see `upstream` issue https://bitbucket.org/chromiumembedded/cef/issues/2370/cefrenderhandler-onpaint-stops-receiving
- `SharedBufferArray` has yet to be disabled, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer and https://bitbucket.org/chromiumembedded/cef/issues/2360/sharedarraybuffer-enabled-so-cef-3112-3282
- `GeoLocation` support is broken and is scheduled to be removed from `CEF` see https://bitbucket.org/chromiumembedded/cef/issues/2380/geolocation-can-not-work-after-branch-3239

**Breaking Changes**
- `CefSharp` requires at least `.Net 4.5.2` (Last version to support `.Net 4.0` is `49`)
- `Offscreen/WPF` windows are not automatically transparent. See #2114 for more details.
- `CefBrowserSettings.javascript_open_windows` has been removed upstream (in CEF)
- `ResourceHandler.FromFileName` has been removed (after having been deprecated for a while)
- `IBinder.Bind` is now passed `ExpandoObject` instead of `Dictionary<string, object>` see https://github.com/cefsharp/CefSharp/commit/7a0b06ad0b9fdb0470fc02c04cbeea69bd31e7ff for details on how to update your binder implementation.
",1135454
902,False,True,2018-01-30T01:28:06Z,2018-01-30T01:35:05Z,"January 30, 2018, CEF 3.3239.1723.g071d1c1 / Chromium 63.0.3239.132

**Includes Bug Fixes for JavaScript Binding outlined in #2247**

- #1571 High DPI stops redrawing on Resize 
- #1849 The HTML tooltip does not follow cursor wpf [@DanielBretzigheimer]
- #1903 Does not work if I pass an object which has indexer to RegisterJsObject [@amaitland]
- #2025 Support serialization of CLR Classes [@joaompneves]
- #2042 Toggle Form.ShowInTaskbar causes browser reload enhancement up-for-grabs winforms [@amaitland]
- #2056 Prevent accelerator keys to work when typing text [@joaompneves]
- #2074 PipeException occurs occasionally [@amaitland]
- #2151 Wrong displaying the HTML combobox and selecting items when angle transformation applied to browser. up-for-grabs wpf [@amaitland]
- #2156 Feature Request - Update Nuget targets to link unmanaged resources enhancement up-for-grabs [@amaitland]
- #2157 Added default implementation of IRequestHandler  [@martinekvili]
- #2182 WebGL software rendering is broken in CefSharp 57 [@amaitland]
- #2189 Improve IRequestContextHandler.GetCookieManager type checking [@amaitland]
- #2217 FileResourceHandler throws System.AccessViolationException if file doesn't exist bug [@amaitland]
- #2218 Dont discard null Values from arrays [@joaompneves]
- #2219 Fix enums, integer and doubles binding behavior [@joaompneves]
- #2247 Implement Javascript Binding v2 [@amaitland]
- #2248 WPF Improve layout rounding [@amaitland]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`.
  https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- Due to licensing issues default builds do not support proprietary codecs like `H264`, sites like `Netflix/Twitter/Instagram` won't play video/audio. See #1479 for more info.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/wiki/CrashReporting.md for details, make sure you set `ExternalHandler=CefSharp.BrowserSubprocess.exe`
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project now uses `GitLink` for better debugging, see #1680
- The `chrome_elf.dll` is now **required**, it's used for crashpad (crash reporting). 
- `WPF/OffScreen` PDF Scrolling issue has been resolved see #1916 for details
- `Chromium` has not implemented the changes in the `3239` branch to enable `MP3` support by default, likely included in version `65` 
- `Javascript Binding` now has basic support for dynamic keyword (using ExpandoObject)
- Added `IDisplayHandler.OnAutoResize`

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- Registered JavaScript objects get lost when navigating to another domain (#1203), see #2247 for details on the new implementation.
- `WinForms` version in certain scenarios fails to load the `Url` passed into the `ChromiumWebBrowser` constructor, see https://github.com/cefsharp/CefSharp/issues/2234#issuecomment-360332625 for workaround.
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues
- `WPF/Offscreen` rendering stops redrawing on resize see `upstream` issue https://bitbucket.org/chromiumembedded/cef/issues/2370/cefrenderhandler-onpaint-stops-receiving
- `SharedBufferArray` has yet to be disabled, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer and https://bitbucket.org/chromiumembedded/cef/issues/2360/sharedarraybuffer-enabled-so-cef-3112-3282

**Breaking Changes**
- `CefSharp` requires at least `.Net 4.5.2` (Last version to support `.Net 4.0` is `49`)
- Offscreen windows are not automatically transparent. See #2114 for more details.
- `CefBrowserSettings.javascript_open_windows` has been removed upstream (in CEF)
- `ResourceHandler.FromFileName` has been removed (after having been deprecated for a while)
- `IBinder.Bind` is now passed `ExpandoObject` instead of `Dictionary<string, object>` see https://github.com/cefsharp/CefSharp/commit/7a0b06ad0b9fdb0470fc02c04cbeea69bd31e7ff for details on how to update your binder implementation.
",1135454
903,False,True,2018-01-23T02:46:57Z,2018-01-23T03:17:09Z,"January 23, 2018, CEF 3.3239.1723.g071d1c1 / Chromium 63.0.3239.132

- #1571 High DPI stops redrawing on Resize 
- #1849 The HTML tooltip does not follow cursor wpf [@DanielBretzigheimer]
- #1903 Does not work if I pass an object which has indexer to RegisterJsObject [@amaitland]
- #2025 Support serialization of CLR Classes [@joaompneves]
- #2042 Toggle Form.ShowInTaskbar causes browser reload enhancement up-for-grabs winforms [@amaitland]
- #2056 Prevent accelerator keys to work when typing text [@joaompneves]
- #2074 PipeException occurs occasionally [@amaitland]
- #2151 Wrong displaying the HTML combobox and selecting items when angle transformation applied to browser. up-for-grabs wpf [@amaitland]
- #2156 Feature Request - Update Nuget targets to link unmanaged resources enhancement up-for-grabs [@amaitland]
- #2157 Added default implementation of IRequestHandler  [@martinekvili]
- #2182 WebGL software rendering is broken in CefSharp 57 [@amaitland]
- #2189 Improve IRequestContextHandler.GetCookieManager type checking [@amaitland]
- #2217 FileResourceHandler throws System.AccessViolationException if file doesn't exist bug [@amaitland]
- #2218 Dont discard null Values from arrays [@joaompneves]
- #2219 Fix enums, integer and doubles binding behavior [@joaompneves]
- #2247 Implement Javascript Binding v2 [@amaitland]
- #2248 WPF Improve layout rounding [@amaitland]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`.
  https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- Due to licensing issues default builds do not support proprietary codecs like `H264`, sites like `Netflix/Twitter/Instagram` won't play video/audio. See #1479 for more info.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/wiki/CrashReporting.md for details
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project now uses `GitLink` for better debugging, see #1680
- The `chrome_elf.dll` is now **required**, it's used for crashpad (crash reporting). 
- `WPF/OffScreen` PDF Scrolling issue has been resolved see #1916 for details
- `Chromium` has not implemented the changes in the `3239` branch to enable `MP3` support by default, likely included in version `65` 
- `Javascript Binding` now has basic support for dynamic keyword (using ExpandoObject)
- Added `IDisplayHandler.OnAutoResize`

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- Registered JavaScript objects get lost when navigating to another domain (#1203), see #2247 for details on the new implementation.
- `WinForms` version in certain scenarios fails to load the `Url` passed into the `ChromiumWebBrowser` constructor, see https://github.com/cefsharp/CefSharp/issues/2234#issuecomment-360332625 for workaround.
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- `CefSharp` requires at least `.Net 4.5.2` (Last version to support `.Net 4.0` is `49`)
- Offscreen windows are not automatically transparent. See #2114 for more details.
- `CefBrowserSettings.javascript_open_windows` has been removed upstream (in CEF)
- `ResourceHandler.FromFileName` has been removed (after having been deprecated for a while)
- `IBinder.Bind` is now passed `ExpandoObject` instead of `Dictionary<string, object>` see https://github.com/cefsharp/CefSharp/commit/7a0b06ad0b9fdb0470fc02c04cbeea69bd31e7ff for details on how to update your binder implementation.
",1135454
904,False,True,2017-12-29T12:19:04Z,2017-12-29T12:57:12Z,"December 29, 2017, Chromium 63.0 /  CEF 3.3239.1716.g735b746 (Chromium 63.0.3239.109)

- #1571 High DPI stops redrawing on Resize 
- #2157 Added default implementation of IRequestHandler  [@martinekvili]
- #2182 WebGL software rendering is broken in CefSharp 57 [@amaitland]
- #2189 Improve IRequestContextHandler.GetCookieManager type checking [@amaitland]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`.
  https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- Due to licensing issues default builds do not support proprietary codecs like `H264`, sites like `Netflix/Twitter/Instagram` won't play video/audio. See #1479 for more info.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/wiki/CrashReporting.md for details
- Anyone new to `CefSharp` should read the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This project now uses `GitLink` for better debugging, see #1680
- The `chrome_elf.dll` is now **required**, it's used for crashpad (crash reporting). 
- `WPF/OffScreen` PDF Scrolling issue has been resolved see #1916 for details
- `Chromium` has not implemented the changes in the `3239` branch to enable `MP3` support by default, likely included in version `65` 
- `Javascript Binding` now has basic support for dynamic keyword (using ExpandoObject)
- Added `IDisplayHandler.OnAutoResize`

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- Registered JavaScript objects get lost when navigating to another domain (#1203)
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- `CefSharp` requires at least `.Net 4.5.2` (Last version to support `.Net 4.0` is `49`)
- Offscreen windows are not automatically transparent. See #2114 for more details.
- `CefBrowserSettings.javascript_open_windows` has been removed upstream (in CEF)
- `ResourceHandler.FromFileName` has been removed (after having been deprecated for a while)
- `IBinder.Bind` is now passed `ExpandoObject` instead of `Dictionary<string, object>` see https://github.com/cefsharp/CefSharp/commit/7a0b06ad0b9fdb0470fc02c04cbeea69bd31e7ff for details on how to update your binder implementation.
",1135454
905,False,True,2017-12-12T19:59:44Z,2017-12-12T20:36:36Z,"December 2017, Chromium 62.0 / CEF 3.3071.1649

## Breaking changes

* Offscreen windows are not automatically transparent. See #2114 for more details.
* `CefBrowserSettings.javascript_open_windows` has been removed upstream (in CEF)
* `ResourceHandler.FromFileName` has been removed (after having been deprecated for a while)
* Probably a few others as well. Please test your code thoroughly; we are talking about an upgrade of 5 major Chromium versions here.

## Fixed bugs

* See the ""Full details"" list below.

## Known issues & bugs

* Registered JavaScript objects get lost when navigating to another domain (#1203)

## Contributors

* AgapovAlexsey (@AgapovAlexsey)
* Alex Maitland (@amaitland)
* Chris (@merceyz)
* Eirik Mildestveit Hammerstad (@Hammerstad)
* GrabzIt (@GrabzIt)
* James Pearce (@jamespearce2006)
* Jeroen Janssen (@japj)
* João Neves (@joaompneves)
* Julian Verdurmen (@304NotModified)
* Oscar One (@r3dqu33n)
* Per Lundberg (@perlun)
* Igor Eremyashev (@igor-eremyashev)
* Jan Kurianski (@jankurianski)
* nisbus (@nisbus)
* ymccready (@ymccready)

Thanks to all of you, we couldn't have made this without all of your great support! :+1:

## Full details

* 9d959a51 appveyor.yml: Update api_key
* 55a3f6ad README.md: Fixed typo
* eb3cbe8b Add 62.0.0 branch details
* bff333a2 Change the targets to BeforeBuild (#2130)
* a1598697 Upgraded to CEF 62 (#2203)
* 7876b422, ff749d0f Add support UrlRequestFlags (#2172)
* 049181b2 VS2017 build support (using the VS2015 tooling) (#2179)
* 6b9f9117 README.md: Fixed AppVeyor badge
* 06287a5d README.md: Badges for all releases (#2072)
* 8dd46377 Fixed typos + whitespace cleanups.
* b77878e2 Update CONTRIBUTING.md (#2198)
* 93b08f1c Upgraded CEF to version 60 (#2159)
* 9407ba18 Run tests in the default appdomain (b/c of limitations of VC++)
* 65808ae8 Fix formatting in BindingTest.html
* f029a22f Fix return value serialization for async JS bindings (#2167)
* a4a1cd8e Whitespace: Untabify AsyncExtensions
* d6844e0b AsyncExtensions - return a Task as expected when awaiting the method directly (fixes #2154)
* 653896a5 Update to Cef Version 59.0.0 (#2114)
* 8a144050 WPF: Possible fix for NullReferenceException in OnTooltipTimerTick (fixes #2134)
* bad729ee WPF: Added support for back and forward mouse buttons (fixes #2133)
* 244aab04 Fixed a deadlock and a possible race condition in MethodRunnerQueue (fixes #2105)
* 7e2594d2 Added CefCustomScheme.IsCspBypassing (fixes #2038)
* b82ce078 Prevent merging of header values when using custom handlers (#2099)
* 2bdaa17d Prevent VS from always rebuilding projects that reference CefSharp when using AnyCPU platform (#2083)
* 2cb36801 WPF: Removed debug code for mouse events
* 2c14ac69 Prevent unhandled exception in PointToScreen when not yet visible (#2107)
* 8057f322 Changed labels of badges (#2071)
* d1681162 WPF - Manually calculate GetScreenPoint (fixes #1915)
* b78208b5 Untabify ClientAdapter.cpp
* 13c9c9c4 FolderSchemeHandlerFactory - Change to using File.Read and ResourceHandler.FromStream (fixes #2041)
* 4f311e76 Untabify MethodInterceptorLogger
* f5e2a938 Minor cleanups after #2015
* 402b2b99 Add BindingOptions.MethodInterceptor (#2015)
* 0d48e304 Update DefaultBinder to directly set if Type.IsAssignableFrom is true (fixes #2052)
* e94f063b WPF - Change from storing a reference to the Matrix to having a DpiScaleFactor property
* fe026a8f Add IWebBrowser.GetHost() extension method - make it easier to directly get the IBrowserHost reference
* c2891c5d Add protected virtual methods for the most common IRenderWebBrowser methods that users would need to override.
* b2143f60 Add IWebBrowser.LoadUrlWithPostData extension method (in WebBrowserExtensions) - simplifies calling LoadRequest
* d8520e81 WPF - Hook the parent Window.StateChanged event and call IBrowserHost.WasHidden depending on visibility.
* f93a3875 Use fully qualified cli::array as it appears VS2015 gets confused with the generic std::array (fixes #2049)
* 7ba2de43 Example - RequestHandler: Throw exception on invalid URI (#2047)
* 2b7bdf86 Updated OnTooltipChanged to allow for modifying text (#1953)
* 1609379f Update Readme with correct version of VC++ Version (#2043)
* ab4e5136 Improve ByteArrayResourceHandler and FileResourceHandler comments
* 504d04dc Include FindReplaceMultiResponseFilter in example project, update it's copyright year and tweak it's formatting
* 2cb7753b Add MemoryStreamResponseFilter example
* 79b5a8e5 Add error logging for CefApp::OnRegisterCustomSchemes
* c8d0127f Handle CefStreamReader::CreateForFile returning null
* 16dbb10c Add ThrowExceptionIfCanExecuteJavascriptInMainFrameFalse method to reduce duplication.
* 0067d023 Add UnicodeExamples one equal to 32kb (the default buffer size) and one slightly greater.
* 6691d008 Refactor ResourceHandler, split FileResourceHandler out into it's own class, rather than relaying on ResourceHandlerType
* 5b472f72 Upgrade version numbers to 58
* 7ddca1be Update ISSUE_TEMPLATE.md
* 921c70fc Update CONTRIBUTING.md
* 767b478d Add Experimental option where bound async methods are queued on TaskScheduler.Default.
* 3015bc31 Fix typo on IRenderProcessMessageHandler.OnContextCreated
* 0866fefa Update CONTRIBUTING.md
* ef27fb5c Enable implementation of GetScreenPoint (was commented out)
* dac81cdc Update README.md for 57.0.0 release
* c138ba25 Remove experimental option #1 from WinForms LifeSpanHandler example
* 06da5d28 Update README.md
* 96d583c3 Used an array rather then creating a list then calling ToArray
* 8df4ec53 Expanded proxy support, made it easier to set proxy settings (#2007)
* a683eade Cleanups after #2010
* 9801cc55 Untabify
* 858bfd3c Upgrade to CEF 3.2987.1601
* 2526c818 Added support for PDF scaling (#2012)
* 563505c3 Made it possible to register a ""one-time use"" ResourceHandler (#2010)
* b357b736 Set ResponseLength when Stream.CanSeek
* 440cc7a6 Remove ResourceHandler.FromFileName
* 9bbe75f2 Upgrade to CEF 3.2987.1599
* 25be728b Moved structs into a Structs folder (#2006)
* d1a7f5b6 Update CONTRIBUTING.md
* f98833f5 Update ISSUE_TEMPLATE.md
",1135454
906,False,False,2017-04-11T00:44:50Z,2017-04-18T05:42:49Z,"April 18, 2017, Chromium 57.0 / CEF 3.2987.1601(Chromium 57.0.2987.133)

- #562 Feature Request - Add versions to CefSharp.Core and CefSharp.BrowserSubprocess.Core projects [@merceyz]
- #692 Build Script Update App.Manifest [@merceyz]
- #1723 WPF crashing with open combobox [@taylorjonl]
- #1818 CefSharp.BrowserSubProcess.exe x86 fails strong name verification [@merceyz]
- #1928 V55: VisitUrlCookiesAsync NullReferenceException [@amaitland]
- #1934 Feature Request - Expose CefRegisterWidevineCdm [@spazzarama]
- #1940 WindowOpenDisposition enum doesn't line up with CEF cef_window_open_disposition_t [@mbragg12]
- #1943 Fixed LoadHtml loading the Url even if RegisterHandler returns false [@merceyz] 
- #1946 Add Minimal WinForms Designer Support [@merceyz]
- #1948 V55 unable to access internet through proxy
- #1952 Fixed WPF browser going blank when connecting over RDP [@merceyz]
- #1960 NullReferenceException in ILifeSpanHandler.DoClose [@merceyz] 
- #1962 WPF - Made GetViewRect always round up [@merceyz]
- #1967 Remove IBrowserSettings.CaretBrowsing - was removed from CEF API [@mtschoen]
- #1981 RegisterAsyncJsObject managed methods can now return arrays of structs [@joaompneves]
- #1989 Added minimal WPF designer support [@merceyz]
- #1990 v55 CefSettings.Locale does not localize context menu labels
- #1991 Change Notification - Remove Plugin and replace with WebPluginInfo [@amaitland]
- #1994 DefaultResourceHandlerFactory - Changed from Uri.ToString to Uri.AbsoluteUri [@merceyz]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`.
  https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- Due to licensing issues default builds do not support proprietary codecs like `H264` and `MP3`, sites like `Netflix/Twitter/Instagram` won't play video/audio. See #1479 for more info.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/wiki/CrashReporting.md for details
- As part of this release new sections have been added to the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This release was funded using [Bounty Source](https://www.bountysource.com/issues/42381776-funding-request-release-57-0-0) A big thank you to all those who contributed!
- This project now uses `GitLink` for better debugging, see #1680
- The `chrome_elf.dll` is now **required**, it's used for crashpad (crash reporting). 
- Minimal designer support has been added to the `WPF` and `WinForms` projects (Thanks go to @merceyz)
- `Scheme` handlers can now be registered as `secure`, newly added feature to `CEF`

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- `WPF/OffScreen` PDF Scrolling isn't working properly with the mouse wheel see #1916 for details, needs to be fixed in CEF. Use the `WinForms` version hosted in `WPF` as a workaround for now.
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- `CefSharp` requires at least `.Net 4.5.2` (Last version to support `.Net 4.0` is `49`)
- Removed ` IBrowserSettings.CaretBrowsing ` (CEF API changed)
- Removed ` WindowOpenDisposition.SuppressOpen` (CEF API changed)
- Removed `Plugin` class and replace with WebPluginInfo` (Was duplication in `CefSharp API`)

",1135454
907,False,True,2017-03-30T00:38:26Z,2017-03-30T00:47:11Z,"March 30, 2017, Chromium 57.0 / CEF 3.2987.1597(Chromium 57.0.2987.110)

- #562 Feature Request - Add versions to CefSharp.Core and CefSharp.BrowserSubprocess.Core projects [@merceyz]
- #692 Build Script Update App.Manifest [@merceyz]
- #1723 WPF crashing with open combobox [@taylorjonl]
- #1818 CefSharp.BrowserSubProcess.exe x86 fails strong name verification [@merceyz]
- #1928 V55: VisitUrlCookiesAsync NullReferenceException [@amaitland]
- #1934 Feature Request - Expose CefRegisterWidevineCdm [@spazzarama]
- #1940 WindowOpenDisposition enum doesn't line up with CEF cef_window_open_disposition_t [@mbragg12]
- #1943 Fixed LoadHtml loading the Url even if RegisterHandler returns false [@merceyz] 
- #1946 Add Minimal WinForms Designer Support [@merceyz]
- #1948 V55 unable to access internet through proxy upstream
- #1952 Fixed WPF browser going blank when connecting over RDP [@merceyz]
- #1962 WPF - Made GetViewRect always round up [@merceyz]
- #1967 Remove IBrowserSettings.CaretBrowsing - was removed from CEF API [@mtschoen]
- #1981 RegisterAsyncJsObject managed methods can now return arrays of structs [@joaompneves]
- #1989 Added minimal WPF designer support [@merceyz]
- #1990 v55 CefSettings.Locale does not localize context menu labels
- #1991 Change Notification - Remove Plugin and replace with WebPluginInfo [@amaitland]
- #1994 DefaultResourceHandlerFactory - Changed from Uri.ToString to Uri.AbsoluteUri [@merceyz]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`.
  https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- Due to licensing issues default builds do not support proprietary codecs like `H264` and `MP3`, sites like `Netflix/Twitter/Instagram` won't play video/audio. See #1479 for more info.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/issues/1995/migrate-from-breakpad-to-crashpad for details
- As part of this release new sections have been added to the [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage)
- This release was funded using [Bounty Source](https://www.bountysource.com/issues/42381776-funding-request-release-57-0-0) A big thank you to all those who contributed!
- This project now uses `GitLink` for better debugging, see #1680
- The `chrome_elf.dll` is now **required**, it's used for crashpad (crash reporting). 
- Minimal designer support has been added to the `WPF` and `WinForms` projects (Thanks go to @merceyz)
- `Scheme` handlers can now be registered as `secure`, newly added feature to `CEF`

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- `WPF/OffScreen` PDF Scrolling isn't working properly with the mouse wheel see #1916 for details, needs to be fixed in CEF. Use the `WinForms` version hosted in `WPF` as a workaround for now.
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- `CefSharp` requires at least `.Net 4.5.2` (Last version to support `.Net 4.0` is `49`)
- Removed ` IBrowserSettings.CaretBrowsing ` (CEF API changed)
- Removed ` WindowOpenDisposition.SuppressOpen` (CEF API changed)
- Removed `Plugin` class and replace with WebPluginInfo` (Was duplication in `CefSharp API`)",1135454
908,False,False,2017-02-01T04:01:52Z,2017-02-02T00:51:29Z,"February 02, 2017, Chromium 55.0 / CEF 3.2883.1552(Chromium 55.0.2883.87)
- #1009 Feature Request - Add CefSSLInfo wrapper [@amaitland]
- #1680 Feature Request - Add support for GitLink [@amaitland]
- #1793 Feature Request - Add Ability to retrieve SSL certificate details [@amaitland]
- #1799 WPF/OffScreen PDF Viewer not working [@amaitland]
- #1801 Fix for browser subprocess crash with null reference exception. [@maloshuk]
- #1819 53 Crash running x64 build on processors that do not support vmovaps [@amaitland]
- #1875 Cannot inject script due to CSP (WPF Version) [@amaitland]
- #1876 Unable to customise path for the crash dump process (crashpad) [@amaitland]
- #1877 Added DownloadItem .OriginalUrl [@philipbeber]
- #1878 Add IRequestHandler.OnSelectClientCertificate [@smaranh]
- #1893 Feature Request - Release 55.0.0  [@amaitland]
- #1897 Humanify the ghostdoc comments [@barbeque]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`.
  https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- Due to licensing issues default builds do not support proprietary codecs like `H264` and `MP3`, sites like `Netflix/Twitter/Instagram` won't play video/audio. See #1479 for more info.
- Issue when running `x64` build on older CPUs that don't support `vmovaps` has been resolved see #1819 for details.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/issues/1995/migrate-from-breakpad-to-crashpad for details
- As part of this release a [General Usage Guide](https://github.com/cefsharp/CefSharp/wiki/General-Usage) has been added to the `Wiki`
- This release was funded using [Bounty Source](https://www.bountysource.com/issues/40201096-feature-request-release-55-0-0) A big thank you to all those who contributed!
- This project now uses `GitLink` for better debugging, see #1680
- The `chrome_elf.dll` is now **required**, it's used for crashpad (crash reporting). 

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- `WPF/OffScreen` PDF Scrolling isn't working properly with the mouse wheel see #1916 for details, needs to be fixed in CEF. Use the `WinForms` version hosted in `WPF` as a workaround for now.
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- `CefSharp` requires at least `.Net 4.5.2` (Last version to support `.Net 4.0` is `49`)
- Added `isMainFrame` to `IRequestContextHandler.OnBeforePluginLoad` (CEF API changed)
",1135454
909,False,True,2017-01-16T02:09:42Z,2017-01-16T02:28:37Z,"January 16, 2017, Chromium 55.0 / CEF 3.2883.1545 (Chromium 55.0.2883.87)
- #1009 Feature Request - Add CefSSLInfo wrapper [@amaitland]
- #1680 Feature Request - Add support for GitLink [@amaitland]
- #1793 Feature Request - Add Ability to retrieve SSL certificate details [@amaitland]
- #1799 WPF/OffScreen PDF Viewer not working [@amaitland]
- #1801 Fix for browser subprocess crash with null reference exception. [@maloshuk]
- #1819 53 Crash running x64 build on processors that do not support vmovaps [@amaitland]
- #1875 Cannot inject script due to CSP (WPF Version) [@amaitland]
- #1876 Unable to customise path for the crash dump process (crashpad) [@amaitland]
- #1877 Added DownloadItem .OriginalUrl [@philipbeber]
- #1878 Add IRequestHandler.OnSelectClientCertificate [@smaranh]
- #1897 Humanify the ghostdoc comments [@barbeque]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`.
  https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- Due to licensing issues default builds do not support proprietary codecs like H264 and MP3, sites like `Netflix/Twitter/Instagram` won't play video/audio.
- Issue when running `x64` build on older CPUs that don't support `vmovaps` has been resolved see #1819 for details.
- `CEF` has switched from using breakpad to crashpad for error reporting see https://bitbucket.org/chromiumembedded/cef/issues/1995/migrate-from-breakpad-to-crashpad for details
- `CefSharp` now uses `GitLink` so you can step through the source for easier debugging see #1680

**Known Issues**
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`, there are workarounds listed in #1822
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- `CefSharp` requires at least `.Net 4.5.2` (Last version to support `.Net 4.0` is `49`)
",1135454
910,False,False,2016-12-22T08:27:15Z,2016-12-22T08:44:24Z,"December 22, 2016, Chromium 53.0 / CEF 3.2785.1486 (Chromium 53.0.2785.116)
- #606 Feature Request - Add Support for Custom cursor in WPF  [@amaitland]
- #1880 OnCertificateError callback issue for Chrome v53 [@amaitland]

**Notes**
- This is a bug fix release, see also https://github.com/cefsharp/CefSharp/releases/tag/v53.0.0
- The certificate transparency timebomb that meant many sites that used `SSL` were unable to load has been disabled, see #1880 for more details.
",1135454
911,False,False,2016-10-03T22:46:18Z,2016-10-10T02:36:03Z,"October 10, 2016, Chromium 53.0 / CEF 3.2785.1482 (Chromium 53.0.2785.116)
- #1002 WPF: ChromiumWebBrowser as child to ScrollViewer prevent focus of HTML elements [@amaitland]
- #1634 WPF, OffScreen GPU Problems [@amaitland]
- #1683 SetFocus AccessViolation [@amaitland]
- #1720 Feature Request - Update BrowserSubProcess to be Per-monitor DPI aware [@amaitland]
- #1729 anonymous function callback inside an object parameter [@tuxan]
- #1734 Offscreen popup (dropdown list) merge with the background browser. [@valentin-deschaintre]
- #1748 Feature Request - Add IBrowserProcessHandler.OnScheduleMessagePumpWork [@amaitland]
- #1749 Feature - Add IBinder [@amaitland]
- #1753 Configure directory where msbuild will copy CefSharp files [@intrueder]
- #1764 Fix LifeSpanHandler not Called During Dispose [@dpbackes]
- #1774 PostBuild error on CefSharp.BrowserSubprocess [@amaitland]
- #1775 Dropdown list no longer opens [@amaitland]
- #1780 CefSettings Duplicate Args exception [@amaitland]
- #1788 Fixing nullreferenceexception on ControlExtensions.IsActive [@smcilveen]
- #1790 NullReferenceException from SchemeHandlerFactoryWrapper.Create [@justin-caldicott]
- #1820 VS2015 Unable to build in Debug mode [@amaitland]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`.
  https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- Due to licensing issues default builds do not support proprietary codecs like `H264` and `MP3`, sites like `Netflix/Twitter/Instagram` won't play video/audio.

**Known Issues**
- WPF/Offscreen PDF rendering isn't working see #1799 for tracking of the problem and possible workarounds. Will require an `upstream` fix in `CEF`.
- `WinForms` when running on `Windows 10 Anniversary` pressing certain key combinations freezes the browser see #1822 The issue has been reported `upstream`.
- When running on older CPUs that don't support `vmovaps` your application will crash. This only affects `x64` builds see #1819 for details. Either use an `x86` build or rollback to a previous version for now.
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue for other known issues

**Breaking Changes**
- `Cef.OnContextInitialized` has been moved and is now part of the `IBrowserProcessHandler` interface.
- `Cef.Initialize` param `shutdownOnProcessExit` has been removed (It wasn't used).
- `Cef.Initialize` now takes optional `IBrowserProcessHandler` interface
- `CefSettings.EnableInternalPdfViewerOffScreen()` has been removed, see known issues above.
- `CefSharp` requires at least `.Net 4.5.2` (Last version to support `.Net 4.0` is `49`)
",1135454
912,False,True,2016-09-15T00:51:29Z,2016-09-15T01:00:02Z,"September 15, 2016, Chromium 53.0 / CEF 3.2785.1478 (Chromium 53.0.2785.101)
- CEF version based on the `2785` branch (Chromium `53`): https://bitbucket.org/chromiumembedded/cef/branch/2785
- Related `CefSharp` branch https://github.com/cefsharp/CefSharp/tree/cefsharp/53
- `CEF` release builds sourced from http://opensource.spotify.com/cefbuilds/index.html
- #1002 WPF: ChromiumWebBrowser as child to ScrollViewer prevent focus of HTML elements [@amaitland]
- #1634 WPF, OffScreen GPU Problems [@amaitland]
- #1683 SetFocus AccessViolation [@amaitland]
- #1720 Feature Request - Update BrowserSubProcess to be Per-monitor DPI aware [@amaitland]
- #1729 anonymous function callback inside an object parameter [@tuxan]
- #1734 Offscreen popup (dropdown list) merge with the background browser. [@valentin-deschaintre]
- #1748 Feature Request - Add IBrowserProcessHandler.OnScheduleMessagePumpWork [@amaitland]
- #1749 Feature - Add IBinder [@amaitland]
- #1753 Configure directory where msbuild will copy CefSharp files [@intrueder]
- #1764 Fix LifeSpanHandler not Called During Dispose [@dpbackes]
- #1774 PostBuild error on CefSharp.BrowserSubprocess [@amaitland]
- #1775 Dropdown list no longer opens [@amaitland]
- #1780 CefSettings Duplicate Args exception  [@amaitland]
- #1788 Fixing nullreferenceexception on ControlExtensions.IsActive [@smcilveen]
- #1790 NullReferenceException from SchemeHandlerFactoryWrapper.Create [@justin-caldicott]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`.
  https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html
- Due to licensing issues default builds do not support proprietary codecs like `H264` and `MP3`, sites like `Netflix` won't play video/audio.

**Known Issues**
- WPF/Offscreen PDF rendering isn't working with GPU Acceleration enabled see #1799 for tracking of the problem. Will require an `upstream` fix in `CEF`.
- See https://github.com/cefsharp/CefSharp/issues?q=is%3Aissue+is%3Aopen+label%3Aknown-issue

**Breaking Changes**
- `Cef.OnContextInitialized` has been removed and is now part of the `IBrowserProcessHandler` interface.
- `Cef.Initialize` param `shutdownOnProcessExit` has been removed (It wasn't used).
",1135454
913,False,False,2016-07-14T21:50:49Z,2016-07-14T21:57:22Z,"July 15, 2016, Chromium 51.0 / CEF 3.2704.1432(Chromium 51.0.2704.103)
- CEF version based on the `2704` branch (Chromium `51`): https://bitbucket.org/chromiumembedded/cef/branch/2704
- Related `CefSharp` branch https://github.com/cefsharp/CefSharp/tree/cefsharp/51
- #601 Move CefSharp Dependencies to Subfolder [@amaitland]
- #1338 Feature Request - Add Nupkg support for Win32 Platform [@amaitland]
- #1503 Feature Request - Add IBrowserHost.GetNavigationEntriesAsync  [@amaitland]
- #1572 Feature Request - Upgrade to .Net 4.5.2 [@amaitland]
- #1591 IResourceHandler exception catching [@amaitland]
- #1671 Remove shutdownOnProcessExit [@amaitland]
- #1703 Windows Server 2008 R2 TerminalServices BEX Access Violation [@JJO30]
- #1710 Update Nuget Readme.txt - Added link to .NET 4.5.2 Developer pack [@VorTechS]
- #1714 Feature Request - Add AnyCPU Support [@amaitland]
- #1717 Feature Request - Add FolderSchemeHandlerFactory  [@amaitland]
- #1719 Adding List type conversion [@myrnazhou]
- #1731 Fix bool, number culture, and string escaping in ExecuteScriptAsync with parameters [@chylex]
- #1738 Add overloads for EvaluateScriptAsync to support methodName and args [@PrinceOfEgypt]

**Notes**
- `Chromium` has removed support for `Windows XP`, `Windows Vista`, `Windows Server 2003` and `Windows Server 2008`.
  https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html

**Known Issues**
- `GPU` acceleration in the `WPF` and `OffScreen` versions works again in some circumstances (changes to your `app.manifest` are required) if your still having problems then you'll have to disable `GPU` acceleration, see #1634 for all information related to this issue. If your seeing Flickering/Flashing/Dissapearing/Redraw on page rendering, that's related to this issue.

**Breaking Changes**
- `CefSharp` now requires at least `.Net 4.5.2`
",1135454
914,False,True,2016-07-05T01:23:59Z,2016-07-05T01:29:20Z,"July 05, 2016, Chromium 51.0 / CEF 3.2704.1432(Chromium 51.0.2704.103)
- CEF version based on the `2704` branch (Chromium `51`): https://bitbucket.org/chromiumembedded/cef/branch/2704
- Related `CefSharp` branch https://github.com/cefsharp/CefSharp/tree/cefsharp/51
- #601 Move CefSharp Dependencies to Subfolder [@amaitland]
- #1338 Feature Request - Add Nupkg support for Win32 Platform [@amaitland]
- #1703 Windows Server 2008 R2 TerminalServices BEX Access Violation [@JJO30]
- #1710 Update Nuget Readme.txt - Added link to .NET 4.5.2 Developer pack [@VorTechS]
- #1717 Feature Request - Add FolderSchemeHandlerFactory  [@amaitland]
- #1719 Adding List type conversion [@myrnazhou]
- #1731 Fix bool, number culture, and string escaping in ExecuteScriptAsync with parameters [@chylex]

**Notes**
- `Chromium` has removed support for `Windows XP` and `Windows Vista`.
  https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html

**Known Issues**
- `GPU` acceleration in the `WPF` and `OffScreen` versions works again in some circumstances (Windows 10 with changes to your `app.manifest` are required) if your still having problems then you'll have to disable `GPU` acceleration, see #1634 for all information related to this issue. If your seeing Flickering/Flashing/Dissapearing/Redraw on page rendering, that's related to this issue.

**Breaking Changes**
- `CefSharp` now requires at least `.Net 4.5.2`
",1135454
915,False,True,2016-06-07T03:20:07Z,2016-06-07T03:24:56Z,"June 07, 2016, Chromium 51.0 / CEF 3.2704.1418 (Chromium 51.0.2704.79)
- CEF version based on the `2704` branch (Chromium `51`): https://bitbucket.org/chromiumembedded/cef/branch/2704
- Related `CefSharp` branch https://github.com/cefsharp/CefSharp/tree/cefsharp/51
- #1503 Feature Request - Add IBrowserHost.GetNavigationEntriesAsync  [@amaitland]
- #1572 Feature Request - Upgrade to .Net 4.5.2 [@amaitland]
- #1591 IResourceHandler exception catching [@amaitland]
- #1671 Remove shutdownOnProcessExit [@amaitland]

**Notes**
- `Chromium` has removed support for `Windows XP` and `Windows Vista`.
  https://chrome.googleblog.com/2015/11/updates-to-chrome-platform-support.html

**Known Issues**
- `GPU` acceleration in the `WPF` and `OffScreen` versions works again in some circumstances (changes to your `app.manifest` are required) if your still having problems then you'll have to disable `GPU` acceleration, see #1634 for all information related to this issue. If your seeing Flickering/Flashing/Dissapearing/Redraw on page rendering, that's related to this issue.

**Breaking Changes**
- `CefSharp` now requires at least `.Net 4.5.2`
",1135454
916,False,False,2016-05-30T07:46:29Z,2016-05-31T21:52:34Z,"June 01, 2016, Chromium 49.0 / CEF 3.2623.1401 (Chromium 49.0.2623.110)
- CEF version based on the `2623` branch (Chromium `49`): https://bitbucket.org/chromiumembedded/cef/branch/2623
- Related `CefSharp` branch https://github.com/cefsharp/CefSharp/tree/cefsharp/49
- #1655 :  BrowserSubprocess crashes

**Known Issues**
- There is a known graphics issue with `WPF` and `OffScreen` versions, see #1634 for details, also see #1666 

**Breaking Changes**
- `IResourceHandler` now implements `IDisposable`
",1135454
917,False,False,2016-05-03T10:09:02Z,2016-05-03T10:23:36Z,"May 03, 2016, Chromium 49.0 / CEF 3.2623.1396 (Chromium 49.0.2623.110)
- CEF version based on the `2623` branch (Chromium `49`): https://bitbucket.org/chromiumembedded/cef/branch/2623
- Related `CefSharp` branch https://github.com/cefsharp/CefSharp/tree/cefsharp/49
- #1348 : BrowserSubprocess Out of Memory [@amaitland]
- #1519 : Add IRequestHandler.GetResourceResponseFilter [@amaitland]
- #1542 : Cleanup ManagedCefBrowserAdapater + Remove Duplicate Code [@amaitland]
- #1459 : Feature Request - Implement CefFindHandler  [@amaitland]
- #1586 : Feature Request - OnBeforePopup Add CefPopupFeatures and CefBrowserSettings [@amaitland]
- #1597 : Rewrite IResourceHandler - Expose all methods [@amaitland]
- #1605 : Feature Request - Add Missing Methods to IRequest [@amaitland]
- #1625 : Crash in CookieVisitor::Visit if website sets cookie with invalid DateTime [@YaiEf]
- #1630 : MethodRunnerQueue can lock UI thread [@dga711] 
- #1632 : Fixed Wpf ObjectDisposedException when quickly disposing ChromiumWebBrowser [@vasiliy-vdovichenko]
- #1643 : Add some xml documentation [@dga711]
- #1644 : Add paramArray support to Javascript Binding [@ChrisBardsley]
- #1659 : Updated calls to GetBrowserWrapper()  [@edgchen1]
- #1660 : Fix Issue #1582, Use ToLowerInvariant while converting Javascript Function names to camelCase [@akjana35]
- #1673 : Problem with parameters when calling bound function from js [@amaitland]

**Known Issues**
- There is a known graphics issue with `WPF` and `OffScreen` versions, see #1634 for details, also see #1666 

**Breaking Changes**
- `IResourceHandler` now exposes all of the underlying `CEF API`, for those that need a simple implementation inherit `ResourceHandler` directly. See #1597 for full details (includes link to updated simplified example).
- Missing params added to `ILifeSpanHandler.OnBeforePopup`
",1135454
918,False,False,2016-04-20T21:56:27Z,2016-05-02T11:53:58Z,"###### 47.0.4

May 02, 2016, Chromium 47.0 / CEF 3.2526.1362 (Chromium 47.0.2526.80)
- CEF version based on the `2526` branch (Chromium `47`): https://bitbucket.org/chromiumembedded/cef/branch/2526
- Related `CefSharp` branch https://github.com/cefsharp/CefSharp/tree/cefsharp/47
- #1348 : BrowserSubprocess Out of Memory [@amaitland]
- #1459 : Feature Request - Implement CefFindHandler  [@amaitland]
- #1605 : Feature Request - Add Missing Methods to IRequest [@amaitland]
- #1625 : Crash in CookieVisitor::Visit if website sets cookie with invalid DateTime [@YaiEf]
- #1630 : MethodRunnerQueue can lock UI thread [@dga711] 
- #1632 : Fixed Wpf ObjectDisposedException when quickly disposing ChromiumWebBrowser [@vasiliy-vdovichenko]
- #1659 : Updated calls to GetBrowserWrapper()  [@edgchen1]
- #1660 : Fix Issue #1582, Use ToLowerInvariant while converting Javascript Function names to camelCase [@akjana35]
",1135454
919,False,True,2016-04-10T22:00:41Z,2016-04-11T02:45:47Z,"April 11, 2016, Chromium 49.0 / CEF 3.2623.1396 (Chromium 49.0.2623.110)
- CEF version based on the `2623` branch (Chromium `49`): https://bitbucket.org/chromiumembedded/cef/branch/2623
- Related `CefSharp` branch https://github.com/cefsharp/CefSharp/tree/cefsharp/49
- #1643 : Add some xml documentation [@dga711]
- #1644 : Add paramArray support to Javascript Binding [@ChrisBardsley]

**Note** There was a minor mistake with the `-pre01` packages so they have been delisted from `Nuget.org`. Also here is a known graphics issue with WPF and OffScreen versions, see #1634 for details.
",1135454
920,False,True,2016-04-03T22:03:18Z,2016-04-03T22:22:00Z,"###### 49.0.0-pre01

April 4, 2016, Chromium 49.0 / CEF 3.2623.1396 (Chromium 49.0.2623.110)
- CEF version based on the `2623` branch (Chromium `49`): https://bitbucket.org/chromiumembedded/cef/branch/2623
- Related `CefSharp` branch https://github.com/cefsharp/CefSharp/tree/cefsharp/49
- #1348 : BrowserSubprocess Out of Memory [@amaitland]
- #1519 : Add IRequestHandler.GetResourceResponseFilter [@amaitland]
- #1542 : Cleanup ManagedCefBrowserAdapater + Remove Duplicate Code [@amaitland]
- #1459 : Feature Request - Implement CefFindHandler  [@amaitland]
- #1586 : Feature Request - OnBeforePopup Add CefPopupFeatures and CefBrowserSettings [@amaitland]
- #1597 : Rewrite IResourceHandler - Expose all methods [@amaitland]
- #1605 : Feature Request - Add Missing Methods to IRequest [@amaitland]
- #1625 : Crash in CookieVisitor::Visit if website sets cookie with invalid DateTime [@YaiEf]
- #1630 : MethodRunnerQueue can lock UI thread [@dga711] 
- #1632 : Fixed Wpf ObjectDisposedException when quickly disposing ChromiumWebBrowser [@vasiliy-vdovichenko]

**Note** There is a known graphics issue with `WPF` and `OffScreen` versions, see #1634 for details.
",1135454
921,False,False,2016-02-25T01:25:05Z,2016-02-25T01:28:50Z,"###### 47.0.3

February 25, 2016, Chromium 47.0 / CEF 3.2526.1362 (Chromium 47.0.2526.80)
- CEF version based on the `2526` branch (Chromium `47`): https://bitbucket.org/chromiumembedded/cef/branch/2526
- Related `CefSharp` branch https://github.com/cefsharp/CefSharp/tree/cefsharp/47
- #1589 : Feature Request - Add Missing methods to IMenuModel [@amaitland]
- #1594 : Closing popup window UnhandledException  [@amaitland, @turgayselvi]
",1135454
922,False,False,2016-01-29T00:31:52Z,2016-01-29T00:37:12Z,"January 28, 2016, Chromium 47.0 / CEF 3.2526.1362 (Chromium 47.0.2526.80)
- CEF version based on the `2526` branch (Chromium `47`): https://bitbucket.org/chromiumembedded/cef/branch/2526
- Related `CefSharp` branch https://github.com/cefsharp/CefSharp/tree/cefsharp/47
- #1561: Bug fix: support for drag & drop from input fields.
",1135454
923,False,False,2016-01-22T03:27:42Z,2016-01-22T03:30:49Z,"January 22, 2016, Chromium 47.0 / CEF 3.2526.1362 (Chromium 47.0.2526.80)
- CEF version based on the `2526` branch (Chromium `47`): https://bitbucket.org/chromiumembedded/cef/branch/2526
- Related `CefSharp` branch https://github.com/cefsharp/CefSharp/tree/cefsharp/47
- #1392 : Allow User Specified RenderOptions (WPF) [@JoViehmann]
- #1418 : Implement WPF Touch Scroll [@amaitland]
- #1440 : Implement IFrame.LoadRequest [@amaitland]
- #1444 : Implement Change Preferences at Runtime [@amaitland]
- #1460 : Add IRenderProcessMessageHandler.OnContextCreated [@amaitland]
- #1464 : Add CefRequest::SetReferrer and CefRequest::GetReferrer[URL|Policy] [@amaitland]
- #1469 : Implement OnFocusedNodeChanged [@rlmcneary2]
- #1538 : Send modifier keys during MousewWheel event [@Sharon98]
- #1540 : Add BitmapScalingMode binding and demo [@gayaK]
",1135454
924,False,True,2015-12-22T22:34:31Z,2016-01-01T23:50:16Z,"January 02, 2016, Chromium 47.0 / CEF 3.2526.1362 (Chromium 47.0.2526.80)
- CEF version based on the `2526` branch (Chromium `47`): https://bitbucket.org/chromiumembedded/cef/branch/2526
- Related `CefSharp` branch https://github.com/cefsharp/CefSharp/tree/cefsharp/47
- #1392 : Allow User Specified RenderOptions (WPF) [@JoViehmann]
- #1440 : Implement IFrame.LoadRequest [@amaitland]
- #1444 : Implement Change Preferences at Runtime [@amaitland]
- #1460 : Add IRenderProcessMessageHandler.OnContextCreated [@amaitland]
- #1469 : Implement OnFocusedNodeChanged [@rlmcneary2]
",1135454
925,False,False,2015-12-15T09:12:23Z,2015-12-15T09:17:41Z,"December 15, 2015, Chromium 37.0 / CEF 3.2062.1898
- #1491: Build using VS2013, to make CefSharp v37 work on Windows Server 2003 R2.
",1135454
926,False,False,2015-11-19T09:04:30Z,2015-11-23T11:24:44Z,"November 23, 2015, Chromium 45.0 / CEF 3.2454.1344
- CEF version based on the `2454` branch (Chromium `45`): https://bitbucket.org/chromiumembedded/cef/branch/2454
- Related `CefSharp` branch https://github.com/cefsharp/CefSharp/tree/cefsharp/45
- Upgrade to **VC++ 2013**
- Add support for compiling the source with `VS2015`
- Remove support for compiling from source with `VS2012`
- Internal `PDF Viewer` works again
- Add `Cef.EnableHighDPISupport()`
- Support for Widevine CDM added
- `NPAPI` support removed from `Chromium`
- `FFMPEG` now statically compiled (`ffmpegsumo.dll` has been removed as a result)
- #720  : Video Fullscreen does not work [@amaitland]
- #1255 : Feature default exception strings browser subprocess [@illfang]
- #1272 : Only Enable WCF when JSB is active [@amaitland]
- #1275 : Feature Request - Print to PDF [@arsher]
- #1276 : Make `ICookieManager.FlushStore` Async [@amaitland]
- #1282 : Add `GetGeolocationAsync` Implementation [@amaitland]
- #1283 : Update cef.sdk.profs import to use SolutionDir [@Haraguroicha]
- #1300 : Add `IRequestHandler.OnResourceResponse` [@amaitland]
- #1306 : Upgrade to CEF 3.2454.1326 [@amaitland]
- #1318 : Feature multi binding test [@illfang]
- #1320 : Quickfix format test HTML files [@illfang]
- #1322 : Implement `IDragHandler.OnDraggableRegionsChanged` [@amaitland]
- #1323 : Implement `IContextMenuHandler.RunContextMenu`  [@amaitland]
- #1325 : Implement `IPluginHandler.OnBeforePluginLoad` [@amaitland]
- #1355 : Feature optimized promise creation [@illfang]
- #1372 : `ExecuteScriptAsync` Execute method with params [@amaitland]
- #1386 : Feature Request - Add `CefSettings.UserDataPath` [@amaitland]
- #1387 : Bad response StatusCode with redirection [@amaitland]
- #1399 Add missing XML documentation comments [@Atvaark]
- #1426 Add Support for executing a JavascriptCallback with a Struct as a param 
- #1432 Add Cef.ExecuteProcess [@amaitland]

**Breaking Changes**
- Rename `IComplectionHandler` to `ICompletionCallback`
- Removed `IRequestHandler.OnBeforePluginLoad` (was moved in the `CEF API`)
- Rename `ICookieManager.FlushStore` to `ICookieManager.FlushStoreAsync` (now uses a Task to execute)
",1135454
927,False,True,2015-10-29T22:46:05Z,2015-11-01T09:09:48Z,"November 01, 2015, Chromium 45.0 / CEF 3.2454.1344
- CEF version based on the `2454` branch (Chromium `45`): https://bitbucket.org/chromiumembedded/cef/branch/2454
- Related `CefSharp` branch https://github.com/cefsharp/CefSharp/tree/cefsharp/45
- Upgrade to **VC++ 2013**
- Add support for `VS2015`
- Remove support for `VS2012`
- Internal `PDF Viewer` works again
- Add `Cef.EnableHighDPISupport()`
- Support for Widevine CDM added
- `NPAPI` support removed from `Chromium`
- `FFMPEG` now statically compiled (`ffmpegsumo.dll` has been removed as a result)
- #720  : Video Fullscreen does not work [@amaitland]
- #1255 : Feature default exception strings browser subprocess [@illfang]
- #1272 : Only Enable WCF when JSB is active [@amaitland]
- #1275 : Feature Request - Print to PDF [@arsher]
- #1276 : Make `ICookieManager.FlushStore` Async [@amaitland]
- #1282 : Add `GetGeolocationAsync` Implementation [@amaitland]
- #1283 : Update cef.sdk.profs import to use SolutionDir [@Haraguroicha]
- #1300 : Add `IRequestHandler.OnResourceResponse` [@amaitland]
- #1306 : Upgrade to CEF 3.2454.1326 [@amaitland]
- #1318 : Feature multi binding test [@illfang]
- #1320 : Quickfix format test HTML files [@illfang]
- #1322 : Implement `IDragHandler.OnDraggableRegionsChanged` [@amaitland]
- #1323 : Implement `IContextMenuHandler.RunContextMenu`  [@amaitland]
- #1325 : Implement `IPluginHandler.OnBeforePluginLoad` [@amaitland]
- #1355 : Feature optimized promise creation [@illfang]
- #1372 : `ExecuteScriptAsync` Execute method with params [@amaitland]
- #1386 : Feature Request - Add `CefSettings.UserDataPath` [@amaitland]
- #1387 : Bad response StatusCode with redirection [@amaitland]

**Breaking Changes**
- Rename `IComplectionHandler` to `ICompletionCallback`
- Removed `IRequestHandler.OnBeforePluginLoad` (was moved in the `CEF API`)
- Rename `ICookieManager.FlushStore` to `ICookieManager.FlushStoreAsync` (now uses a Task to execute)
",1135454
928,False,False,2015-10-29T11:35:05Z,2015-10-29T11:37:55Z,"October 29, 2015, Chromium 43.0 / CEF 3.2357.1287
- #1170 : OffScreen Don't create Browser when assigning to OnBeforePopup [@amaitland]
- #1284 : Add support for JSB in Popups [@amaitland]
- #1321 : Add support for JSB with frames [@illfang, @amaitland] 
- #1335 : Missing callback registry for browsers created without registered js objects [@illfang]
- #1336 : IJavascriptCallback.ExecuteAsync never returns when callback no longer exists [@gregmartinhtc]
- #1356 : Feature sanitized and verbose js exception strings [@illfang]
- #1358 : Fix offscreen browser browser settings nullptr [@illfang]
- #1380 : Fix ensure context binding of root object [@illfang]
",1135454
929,False,False,2015-09-20T12:45:04Z,2015-09-20T12:53:07Z,"September 20, 2015, Chromium 43.0 / CEF 3.2357.1287

For details on this release see:
https://github.com/cefsharp/CefSharp/milestones/43.0.0
https://github.com/cefsharp/CefSharp/wiki/ChangeLog
(Due to the large number of changes in this release, the `ChangeLog` is not up to date)

For information about upgrading to `43.0.0` see https://github.com/cefsharp/CefSharp/wiki/CefSharp-43
",1135454
930,False,True,2015-09-09T01:47:33Z,2015-09-09T02:11:37Z,"September 09, 2015, Chromium 43.0 / CEF 3.2357.1287

For details on this release see:
https://github.com/cefsharp/CefSharp/milestones/43.0.0
https://github.com/cefsharp/CefSharp/wiki/ChangeLog
(Change log is a work in process, will be updated at some point before official release)
",1135454
931,False,True,2015-08-19T09:07:58Z,2015-08-20T01:08:03Z,"August 20, 2015, Chromium 43.0 / CEF 3.2357.1287

For details on this release see:
https://github.com/cefsharp/CefSharp/milestones/43.0.0
https://github.com/cefsharp/CefSharp/wiki/ChangeLog
(Change log is a work in process, will be updated at some point before official release)
",1135454
932,False,False,2015-08-03T21:59:44Z,2015-08-03T22:07:14Z,"August 04, 2015, Chromium 41.0 / CEF 3.2272.32
- #1107 : Sign the OffScreen project (using existing snk file)  [@mkosieradzki]
- #1132 : Fixed NullReferenceException on ControlExtensions.IsActiveControl call [@RomanDidenko]
- #1167 : VS2015 BrowserSettings options not available in 41? [@amaitland]
",1135454
933,False,False,2015-06-16T09:00:57Z,2015-06-24T00:40:03Z,"June 24, 2015, Chromium 41.0 / CEF 3.2272.32
- #1067, #1068: Working example of `IKeyboardHandler.OnPreKeyEvent` that invokes WinForms keyboard based accelerators added to `CefSharp.WinForms.Example`.  [@rassilon]

**Breaking Changes**
- `IKeyboardHandler` made isKeyboardShortcut a ref parameter as initially intended.
- Removed `IsLoadingChanged` (Was marked as obsolete, use `NavStateChanged` instead)
",1135454
934,False,True,2015-06-09T04:50:00Z,2015-06-09T05:06:36Z,"June 9, 2015, Chromium 41.0 / CEF 3.2272.32
- #1063: CefSharp 41.0.0-pre01 Release Notification [@amaitland]

**Breaking Changes**
- `IDialogHandler.OnFileDialog` API updated to reflect `new CEF API`
- `IRequestHandler.OnBeforeResourceLoad` changed return type to `CefReturnValue`
",1135454
935,False,False,2015-05-29T05:01:27Z,2015-05-29T05:03:42Z,"May 29, 2015, Chromium 39.0 / CEF 3.2171.2069
- #993: NullReferenceException in ChromiumWebBrowser if not yet in VisualTree [@jamespearce2006]
- #1003: WPF - Handle case where Bitmap in InteropBitmapInfo is null [@jamespearce2006]
- #1018: Update DependencyChecker IsWindowsXp Flag to evaluate Environment [@hvdijk]
- #1019: Allow app to disable transparent background in windowless mode [@jamespearce2006]
- #1033: Auto-close blank popups when download is complete [@jamespearce2006]
- #1044: SetCursor CefCursorType parameter [@cuddlyogre]
- #1049: Make SourceHook virtual for Wpf ChromiumWebBrowser [@Antonyo]
",1135454
936,False,False,2015-04-30T00:26:33Z,2015-04-30T02:39:58Z,"April 30, 2015, Chromium 39.0 / CEF 3.2171.2069
- #913: Resolve: IsLoaded is unreliable [@amaitland]
- #916: WPF Popup - Change to absolute positioning [@svantreeck]
- #923: Added parameter for lowercasing JS functions (or not) [@exinferis]
- #929: Add OnContextInitialized Delegate
- #934: Fixed #583: Make sure IME input is forwarded [@ralphmayr]
- #951: Rename lowerCaseJavascriptNames to camelCaseJavascriptNames [@amaitland]
- #954: Call GetZoomLevel On CEF UI Thread [@rassilon]
- #959: Add BrowserSubProcess dependency checking. [@pushplay]
- #963: Clipboard ops don't work from WinForms menubar [@rassilon]
- #986: Add Visual Studio 2015 support [@Erguotou]
",1135454
937,False,False,2015-04-08T00:13:34Z,2015-04-08T00:24:59Z,"April 07, 2015, Chromium 39.0 / CEF 3.2171.2069
- #791: Focus improvements, take 5 [@rassilon]
- #842: Use device scale factor to support higher DPI on WPF [@bjarteskogoy]
- #852: Feature/device scale factor [@bjarteskogoy]
- #856: Enhance StreamAdapter to more effeciently deal with MemoryStream [@rassilon]
- #857: Rename IResourceHandler to IResourceHandlerFactory. [@rassilon]
- #863: Added svg mime type to ResourceHandler [@Jayman1305]
- #883: Wpf List Box Ctrl+A Issue [@myrnazhou]
- #884: Pass URL of source frame to OnBeforePopup [@rassilon]
- #885: Added a TitleChanged event handler [@perlun]
- #887: Javascript Callbacks - Take 2  [@arsher, @amaitland]
- #889: Passing IsMainFrame as parameter to the OnBeforeBrowse [@myrnazhou]
- #890: Make DefaultFocusHandler public class [@rassilon]
- #892: Don't change .Address when popups display [@rassilon]
- #900: Implement DependencyChecker [@amaitland]
- #908: Upgrade to 3.2171.2069 [@rassilon, @amaitland]
- #911: Cleanup OnBeforeResourceLoad [@amaitland]

**Breaking Changes**
- Rename `IResourceHandler` to `IResourceHandlerFactory`
- Rename `ChromiumWebBrowser.ResourceHandler` to `ChromiumWebBrowser.ResourceHandlerFactory`
- Added `isMainFrame` param to `OnBeforeBrowse`
- Added `isMainFrame` param to `OnBeforeResourceLoad`
- Added `sourceUrl` param to `OnBeforePopup`
- Remove `IResponse` param from `OnBeforeResourceLoad`
",1135454
938,False,False,2015-03-17T12:29:20Z,2015-03-17T12:41:02Z,"March 17, 2015, Chromium 37.0 / CEF 3.2062.1898
- #885: Added a TitleChanged event handler [@perlun]
",1135454
939,False,True,2015-02-27T00:36:06Z,2015-02-27T01:19:25Z,"February 27, 2015, Chromium 39.0 / CEF 3.2171.1979
- #756: Added Drag Drop support to allow dragging objects into the browser (PR to master) [@Bodekaer]
- #759: Fix OffScreen's Address field [@jankurianski]
- #768: Implement CefGeolocationHandler::OnRequestGeolocationPermission [@pushplay]
- #774: Enhancement - FocusHandler Take4 [@amaitland]
- #786: Cleanup/Implement Dispose Pattern [@rassilon]
- #787: Notify CEF when our owning form moves (WM_MOVE or WM_MOVING) [@rassilon]
- #789: Winforms example issue with mouse over titles  [@amaitland]
- #809: Check for null object to prevent NullException in SetFocus [@RadicalLinux]
- #813: WPF Rendering - Implement WritableBitmap and Minor Optimisations [@amaitland]
- #827: Fixed memory leak issues [@dmrzn]
- #834: Expose Cross-Origin Whitelist from Cef.XXX as static methods [@rassilon]
",1135454
940,False,False,2015-02-12T05:31:54Z,2015-02-12T05:38:13Z,"- #798: Added LoadStarted event handler [@perlun]
",1135454
941,False,True,2015-01-22T12:11:04Z,2015-01-22T18:52:49Z,"January 22, 2015, Chromium 39.0 / CEF 3.2171.1972
- #693: Cef 2171 - Upgrade to Chromium 39 [@Bodekaer, @amaitland, @bjarteskogoy, @myrnazhou]
- #715: Extend IJsDialogHandler To Include OnBeforeUnload Dialogs [@daveaton]
- #717: Add a FromStream method to ResourceHandler. [@MantisCore]
- #731: Change c++ file copyright symbol (©) encoding to work on non-english system [@binsys]
",1135454
942,False,True,2014-12-22T07:28:06Z,2014-12-22T08:16:12Z,"December 22, 2014, Chromium 39.0 / CEF 3.2171.1949

Special mention to @peters and @Bodekaer for their help in upgrading/implementing `Cef 2171`. (Apologies if I've forgotten anyone else).
- #662: Implemented WasHidden for the WPF ChromiumWebBrowser [@bjarteskogoy]
- #668: WPF Invalidate on Visible Change [@myrnazhou]
",1135454
943,False,False,2014-12-18T04:10:01Z,2014-12-18T04:14:56Z,"December 18, 2014, Chromium 37.0 / CEF 3.2062.1898
- #664: Add DPI-Aware Manifests for High DPI Support [@jimnoble]
- #673: Feature - CefDragHandler  [@daveaton, @amaitland]
- #674: Rework ResourceHandler [@amaitland]
- #675: Javascript Binding - Only call Connect for main browser (not popups) [@amaitland]
- #678: Implement CefBrowserHost::SetFocus for WinForms [@jankurianski]
- #681: documentation correction -> new CefSettings not new Settings [@ghuntley]
- #683: WinForms - Create ManagedCefBrowserAdapter in Constructor [@amaitland]
- #691: Enhancement - ResourceHandler Encoding [@amaitland]
",1135454
944,False,True,2014-12-04T07:05:24Z,2014-12-05T04:59:58Z,"December 5, 2014, Chromium 37.0 / CEF 3.2062.1898
- #632: Implement Focused property [@sylvain-hamel]
- #645: Fix #641 - Memory leak: JavascriptRootObjectWrapper is not released on Reload [@sylvain-hamel]
- #667: Use the typed enum CefEventFlags for modifiers in keyboard events. [@jankurianski]
",1135454
945,False,True,2014-11-26T07:43:27Z,2014-11-27T03:32:33Z,"November 27, 2014, Chromium 37.0 / CEF 3.2062.1898
- #476: Create an 'IgnoreAttribute' so we can hide properties and methods from RegisterJsObject method [@amaitland]
- #533: Enhancement - Display bitness in Examples [@amaitland]
- #536: Fix: js bindings must be kept by browser, not by process [@sylvain-hamel]
- #539: Cleanup Loading and NavState code [@amaitland]
- #540: Add navigation type to IRequest [@Evgest]
- #543: Fixed #542: Forward Ctrl key state for WPF [@ralphmayr]
- #544: Added commands for cut, copy, paste, select all, redo, and undo [@JCasterline]
- #555: Fixed mouse leave event issue (focus not entirely gone) [@Bodekaer]
- #561: Update ManagedCefBrowserAdapter.h to check for a null pointer in OnInitialized method [@kropewnicki]
- #573: Upgrade to Cef 2062 with JSB 
- #590: CefRenderProcess process creates too many channels and does not close them [@sylvain-hamel]
- #596: Send MouseWheel events with WPF support [@sylvain-hamel, @amaitland]
- #604: Added CefSharp.Offscreen, CefSharp.Offscreen.Example projects.  [@jankurianski]
- #610: Feature - GetResourceHandler [@amaitland]
- #612: Set reader quotas to max value. Any reason not to? [@bjarteskogoy]
- #618: Fix #553 by handling Initial resize and OnSizeChanged [@sylvain-hamel]
- #623: Prevent WPF control from dying in design time. [@bjarteskogoy]
- #629: Update ResourceHandler.cs [@Jayman1305]
- #630: Slightly modified fix for #622 based on PR #626 [@sylvain-hamel and @amaitland]
- #634: Have appveyor set nuget dependency versions based on tags [@jornh]
- #635: Added null checks for managedCefBrowserAdapter [@dhasi]
- #638: Add NavStateChanged EventHandler to WPF control [@amaitland]
- #639: Add IFocusHandler  [@jankurianski]
- #643: Feature: Expose OnCertificateError to allow host application to decide whether or not it should continue [@sylvain-hamel] 
",1135454
946,False,False,2014-10-24T04:57:48Z,2014-10-27T11:59:58Z,"_October 27, 2014, Chromium 33.0 / CEF 3.1750.1738_

Bug fix release based on CEF3.
- #279: Fix the WinForms example to be a tabbed browser [@amaitland]
- #504: x86 release build now generates CefSharp.XML [@jankurianski]
- #505: All projects now target .NET 4 Client Profile. [@jankurianski]
- #512: WinForms: don't report size changed when Size is 0x0. [@jankurianski]
- #513: WinForms Bug - OnSizeChanged [@amaitland]
- #514: Update version to 33.0.1 [@amaitland]
- #526: Nuget - Error if using platform other than x86 or x64 [@amaitland]
",1135454
947,False,True,2014-10-07T01:45:23Z,2014-10-10T09:20:43Z,"_October 10, 2014, Chromium 33.0 / CEF 3.1750.1738_

First pre release based on CEF3 to include Js Binding.
- #310: WIP on JS bindings [@perlun, @JanEggers, and @amaitland]

**Breaking Changes**
- Rename `WebView` to `ChromiumWebBrowser`
- Rename `LoadCompleted` to `FrameLoadEnd`
- Rename `CEF` to `Cef`
",1135454
948,False,False,2014-10-10T07:00:05Z,2014-10-10T07:11:21Z,"_October 10, 2014, Chromium 33.0 / CEF 3.1750.1738_

First official release based on CEF3.
- #213: Drop-down list `(<select>)` not displayed correctly in WPF with 125% or 150% display setting [@brock8503]
- #214: CEF3: OnApplicationExit throws AccessViolationException with WinForms [@JanEggers]
- #236: Fix the WinForms example to support the Enter key for navigating to a new web page [@amaitland]
- #242: CEF3: Keyboard input is sent to wrong WebView instance [@amaitland]
- #276: Load Error in CefSharp3. [@amaitland]
- #278: Text Search in Browser not supported is fixed [@amaitland]
- #301: Fixed warnings [@JanEggers]
- #302: Explicit implement internal interface. [@JanEggers]
- #305: Create MainView and set address quickly fails to load. [@JanEggers]
- #313: Exposing flushcookie api. [@brock8503]
- #318: Added CefRequestHandler.OnBeforePluginLoad [@fraenke75]
- #322: Add Reload(bool ignoreCache) method overload [@amaitland]
- #326: Implemented all CEF3 BrowserSettings [@fraenke75]
- #328: Add Missing key bindings, Ctrl-A, Z and Y [@amaitland]
- #329: WPF Added ViewSource DelegateCommand [@amaitland]
- #330: Wpf Cleanup and Add License [@amaitland]
- #335: Add Print() [@jornh]
- #336: Support Duplicate Headers. [@shaunmarx and @amaitland]
- #339: Adding a name check to avoid unwanted cookie exceptions. [@brock8503]
- #342: Added support for overriding file browse dialogs by implementing the. [@DeanNorth, @amaitland and @jornh]
- #344: Changed WPF Example TabControl to ItemsSource + added keyboard shortcuts etc. [@amaitland and @perlun]
- #354: Add OnBeforeBrowse method [@amaitland]
- #358: Add Stop to WPF WebView [@amaitland]
- #365: Support for manually specifying command line args via ::OnCommandLineProcessing [@Timobile]
- #372: Add OnPluginCrashed to RequestHandler [@amaitland]
- #375: NuDoq / bring xml documentation to the web [@jornh]
- #377: No sync over async  [@jornh]
- #384: Rename WebView to ChromiumWebBrowser [@perlun]
- #387: Implement DownloadHandler actually matching CEF3 API [@amaitland]
- #388: Overriding JsDialogHandler is not hiding Javascript alerts [@jornh and @amaitland]
- #396: Add OnRenderProcessTerminated - Resolves issue #207 [@amaitland]
- #398: Resharped! [@JanEggers]
- #407: Add/license disclaimer [@amaitland]
- #412: Enhancement and Minor api changes take 2 [@amaitland]
- #413: Set Headers now iterates over key [@rlmcneary2]
- #423: Implemented Cut, Copy, Paste and other text based actions for WPF [@taylorjonl]
- #433: Fix crash when responding to cancelled request, take 2 [@numbersint]
- #440: Add DevToolsUrl Property  [@amaitland]
- #443: Implemented OnStatusMessage and event for WPF and WinForms for CefSharp3 [@TheCloudlessSky]
- #449: Fixed access violation when closing popup... [@JanEggers]
- #464: NullReferenceException OnMouseLeave [@Bodekaer]
- #465: Remove call to Application.Current.Dispatcher.CheckAccess() - seems ther... [@amaitland]
- #469: Call RemoveSourceHook before dispose of managedCefBrowserAdapter [@amaitland]
- #471: Fix/Implement WPF Load(url) Method [@amaitland]
- #488: Provide access to settings boolean ignore_certificate_errors [@karlhiramoto]
- #492: Upgrade to Cef 1750 [@peters and @amaitland]
- #499: First 1750 feature - ShowDevTools/CloseDevTools [@amaitland]
",1135454
949,False,True,2014-04-15T19:57:08Z,2014-04-15T19:59:03Z,"_April 15, 2014, Chromium 31.0 / CEF 3.1650.1562_

- Third prerelease based on CEF3. [@perlun]
- #107: WinForms - Added support for IMenuHandler again [@perlun]
- #145: Selecting text using the mouse does not work. [@JanEggers]
- #166: CefSharp for WPF gives blurry screen. [@JanEggers and @perlun]
- #200: Fixed support for popups, which are used for rendering e.g. &lt;select&gt; tags. [@perlun]
- #202: Fix IME input problem. [@shen6041]
- #212: Rendering multiple WebView controls within a single WPF app was broken. [@JanEggers and @perlun]
- #237: Upgrade to latest CEF3 version (Chromium 31). [@jornh]
- #243: Caret can sometimes be visible for more than one WebView at the same time. [@perlun, Sören Höglund and @JanEggers]
- #250: Support VS2013. [@jornh]
- #259: Win32 ""Debug"" build fail with LNK1181 error [@jornh]
- #272: VS2012/libcef_dll_wrapper.lib is missing in folder CEF/Win32/Debug/ [@MartinMa]
- #274: Update Example app Home.html. [@jornh]
- #280: Refactored much of the C++ stuff into C# instead, to make CefSharp more maintainable. [@JanEggers]
- #291: Improved WebView resource cleanup. [@JanEggers]
- #295: Adding cookie expiration granularity to setcookies. [@brock8503]
- #304: Calling browser close in ManagedCefBrowserAdapter destructor [@brock8503]
- #306: WPF ZoomIn/Out Functionality. [@amaitland]
- #312: WinForms WebView, should at least display a page on init. [@jornh]
- #320: Added Ctrl-X Cut support [@amaitland]
- #321: Key Modifier not being sent to Browser [@amaitland]
",1135454
950,False,False,2014-02-05T08:52:52Z,2014-02-05T08:54:11Z,"February 5, 2014, Chromium 25.0.1364.1123
- #80: Fixed the ""process not closing in Windows XP"" bug. [@rastating]
- #184: Additional SchemeHandlerResponse options. [@provegard]
- #202: Fix IME input problem. [@shen6041]
- #211: Handle Chinese IME input. [@shen6041]
- #216: Fixed a problem with <select> controls not being displayed properly when using non-standard DPI, in WPF. [@ta-stott-oe]
- #219: Dropdown values not following the mouse. [@plundberg, issue created and lots of feedback provided by @jimbourekas]
- #242: Keyboard input is sent to wrong WebView instance sometimes. [@plundberg with Sören Höglund]
- #243: Caret can sometimes be visible for more than one WebView at the same time. [@plundberg with Sören Höglund]
",1135454
951,False,True,2013-11-12T11:22:53Z,2013-11-19T14:52:00Z,"November 12, 2013, Chromium 29.0 / CEF 3.1547.1412
- Second public beta version of CEF3-based port. [@plundberg]
- Upgraded to [CEF 3.1547.1412](http://www.magpcss.net/cef_downloads), which provides Chromium 29 support as well as support for x64. [@plundberg]
- Breaking change: Changed ISchemeHandler to use asynchronous processing of requests (to avoid having to perform network traffic/heavy processing on the UI thread) instead of synchronous processing. [@plundberg]
- Added the possibility for a custom scheme handler to override the response HTTP headers. [@plundberg]
- #80: Fixed the ""process not closing in Windows XP"" bug. [@rastating]
- #137: NuGet packages for WPF, using .props and .targets MSBuild tricks to make consumption of the package a lot less painful. [@plundberg]
- #138: Added a [separate browser subprocess](https://code.google.com/p/chromiumembedded/wiki/GeneralUsage#Separate_Sub-Process_Executable) .exe file, which is normally a much more preferable approach than just executing your .NET application's .exe file again. (which is the default with CEF) [@plundberg]
- #150: All schemes were registered as non-standard, as pointed out by @alexwarren. This has now been fixed; the API for registering custom schemes also had to go through a bit of a breakage in the meanwhile since the way this works with CEF made it impossible to use the previous semantics. [@plundberg]
- #157: Made it possible to customize BrowserSettings directly in XAML. [@plundberg, as suggested by Clemens Hoffmann]
- #160: Added support for x64. [@plundberg]
- #161: Make the WPF WebView be transparent (using the alpha channel), so that you can allow HTML content to be rendered on top of WPF content, allowing for some nifty, more complex scenarios. [@dcartwright]
- #184: Additional SchemeHandlerResponse options. [@provegard]
- #209: Support for `ExecuteScriptAsync()` and `EvaluateScript()` in the WPF WebView, making it possible to support more trivial JS integration scenarios. [@plundberg]
- #210: Added support for Windows Forms again. [@uowzd01]
",1135454
952,False,True,2013-08-03T20:46:08Z,2013-11-06T19:37:38Z,"First alpha version of CefSharp 3.
- Only WPF
- No JS bindings
- Quite possibly a number of other issues.

Still, it's an ""early bird"" preview for those who wish to take a look at it.
",1135454
953,False,False,2013-10-02T07:26:14Z,2013-10-08T05:39:22Z,"October 2 2013, Chromium 25.0.1364.1123

#162: Fixed support for HTML <select> drop-downs which probably has been broken since 1.25.1. [@ChadyG]
#165: Add bindings for SetZoomLevel in WPF. [@peters with @plundberg]
#166: Fixed blurriness in CefSharp.Wpf when running in DPI settings different than 100% (i.e. when the user has modified the ""font size"" in the Windows display settings). [@plundberg]
",1135454
954,False,False,2013-09-04T14:39:06Z,2013-09-04T14:41:31Z,"September 4, 2013, Chromium 25.0.1364.1123
- #150: All schemes are registered as non-standard. Not truly fixed, but let's at least remove the is_standard flag for a while to decrease the confusion. [@plundberg with @alexwarren]
- #161: Make the WPF WebView be transparent (using the alpha channel), so that you can allow HTML content to be rendered on top of WPF content, allowing for some nifty, more complex scenarios. [@dcartwright]
- Breaking change: Changed ISchemeHandler to use asynchronous processing of requests (to avoid having to perform network traffic/heavy processing on the UI thread) instead of synchronous processing. [@plundberg]
- Added the possibility for a custom scheme handler to override the response HTTP headers. [@plundberg]
",1135454
955,False,False,2013-08-14T12:11:55Z,2013-08-14T12:46:08Z,"August 14, 2013, Chromium 25.0.1364.1123
- Added signing to CefSharp.WinForms and CefSharp.Wpf [@dabide]
- Add support for parameters of type 'Object' accepting any type of value. [@EMonk72]
- Fix object binding to allow multiple methods with same name. [@EMonk72]
- Reimplemented Javascript-to-.NET binding to support a range of options including C#-style param arrays and optional parameters
  with default values. [@EMonk72]
- Added support for accessing the body of the request in a custom scheme handler. [@kpko]
- Added support for overriding the window.alert(), window.confirm() and window.prompt() methods by using the new IJsDialogHandler
  interface + the new IWebBrowser.JsDialogHandler property, which is presumed to be your own implementation of this interface.
  [@KristinaKoeva]
- Fixed a null pointer exception that occurs when WebView is loaded. [@joaompneves]
- Fixed crash on window deactivate. [@joaompneves]
",1135454
956,False,False,2018-11-28T03:23:17Z,2018-11-28T04:09:21Z,,122715432
957,False,False,2018-11-25T04:53:44Z,2018-11-25T05:40:37Z,,122715432
958,False,False,2018-11-10T00:24:58Z,2018-11-10T01:13:49Z,,122715432
959,False,False,2018-11-09T07:57:27Z,2018-11-09T08:50:54Z,,122715432
960,False,False,2018-11-09T07:12:55Z,2018-11-09T07:56:35Z,,122715432
961,False,False,2018-11-08T20:28:23Z,2018-11-08T20:32:05Z,,122715432
962,False,False,2018-11-08T18:34:47Z,2018-11-08T18:38:31Z,,122715432
963,False,False,2018-11-08T17:25:58Z,2018-11-08T17:29:53Z,,122715432
964,False,False,2018-11-08T16:04:57Z,2018-11-08T16:08:42Z,,122715432
965,False,False,2018-11-08T15:05:01Z,2018-11-08T15:49:48Z,,122715432
966,False,False,2018-11-06T17:04:46Z,2018-11-06T17:14:34Z,,122715432
967,False,False,2018-11-06T16:02:20Z,2018-11-06T16:12:41Z,,122715432
968,False,False,2018-11-06T15:34:21Z,2018-11-06T15:43:30Z,,122715432
969,False,False,2018-11-06T15:02:42Z,2018-11-06T15:11:34Z,,122715432
970,False,False,2018-11-06T08:03:43Z,2018-11-06T08:08:06Z,,122715432
971,False,False,2018-11-05T04:28:50Z,2018-11-05T05:12:10Z,,122715432
972,False,False,2018-11-05T02:43:07Z,2018-11-05T03:26:23Z,,122715432
973,False,False,2018-11-05T01:58:48Z,2018-11-05T02:02:35Z,,122715432
974,False,False,2018-11-05T00:10:49Z,2018-11-05T00:14:26Z,,122715432
975,False,False,2018-11-04T22:11:11Z,2018-11-04T22:14:45Z,,122715432
976,False,False,2018-11-04T16:47:38Z,2018-11-04T16:51:12Z,,122715432
977,False,False,2018-11-04T16:25:42Z,2018-11-04T16:29:18Z,,122715432
978,False,False,2018-11-04T16:16:36Z,2018-11-04T16:20:15Z,,122715432
979,False,False,2018-11-04T14:59:55Z,2018-11-04T15:03:19Z,,122715432
980,False,False,2018-11-04T13:08:58Z,2018-11-04T13:13:51Z,,122715432
981,False,False,2018-11-04T12:50:17Z,2018-11-04T13:02:08Z,,122715432
982,False,False,2018-11-04T06:49:21Z,2018-11-04T07:34:29Z,,122715432
983,False,False,2018-11-03T16:23:10Z,2018-11-03T16:26:32Z,,122715432
984,False,False,2018-11-03T16:16:42Z,2018-11-03T16:20:03Z,,122715432
985,False,False,2018-11-03T16:06:58Z,2018-11-03T16:10:25Z,,122715432
986,False,False,2018-11-03T15:55:02Z,2018-11-03T15:58:57Z,,122715432
987,False,False,2018-11-03T15:45:47Z,2018-11-03T15:49:06Z,,122715432
988,False,False,2018-11-03T15:36:47Z,2018-11-03T15:40:12Z,,122715432
989,False,False,2018-11-03T15:01:38Z,2018-11-03T15:05:08Z,,122715432
990,False,False,2018-11-03T14:43:40Z,2018-11-03T14:47:08Z,,122715432
991,False,False,2018-11-03T14:31:43Z,2018-11-03T14:35:12Z,,122715432
992,False,False,2018-11-03T13:36:41Z,2018-11-03T13:39:18Z,,122715432
993,False,False,2018-11-03T13:29:01Z,2018-11-03T13:31:38Z,,122715432
994,False,False,2018-11-03T03:01:46Z,2018-11-03T03:46:21Z,,122715432
995,False,False,2018-11-02T23:24:16Z,2018-11-02T23:26:48Z,,122715432
996,False,False,2018-11-02T11:40:07Z,2018-11-02T12:25:28Z,,122715432
997,False,False,2018-11-02T11:30:30Z,2018-11-02T11:33:01Z,,122715432
998,False,False,2018-11-02T10:39:47Z,2018-11-02T11:24:21Z,,122715432
999,False,False,2018-11-02T07:07:17Z,2018-11-02T07:53:41Z,,122715432
1000,False,False,2018-11-02T05:03:32Z,2018-11-02T05:48:43Z,,122715432
1001,False,False,2018-10-31T15:26:16Z,2018-10-31T16:19:20Z,,122715432
1002,False,False,2018-10-24T05:40:23Z,2018-10-24T06:36:20Z,,122715432
1003,False,False,2018-10-24T01:48:56Z,2018-10-24T02:43:08Z,,122715432
1004,False,False,2018-10-24T01:03:46Z,2018-10-24T01:06:15Z,,122715432
1005,False,False,2018-10-24T00:56:33Z,2018-10-24T00:59:03Z,,122715432
1006,False,False,2018-10-24T00:34:06Z,2018-10-24T00:36:35Z,,122715432
1007,False,False,2018-10-23T22:42:48Z,2018-10-23T23:38:43Z,,122715432
1008,False,False,2018-10-23T20:42:43Z,2018-10-23T21:38:27Z,,122715432
1009,False,False,2018-10-20T18:14:10Z,2018-10-20T18:16:47Z,,122715432
1010,False,False,2018-10-20T18:07:23Z,2018-10-20T18:10:03Z,,122715432
1011,False,False,2018-10-20T17:58:43Z,2018-10-20T18:01:16Z,,122715432
1012,False,False,2018-10-20T17:33:24Z,2018-10-20T17:36:29Z,,122715432
1013,False,False,2018-10-16T01:13:53Z,2018-10-16T02:08:26Z,,122715432
1014,False,False,2018-10-09T15:50:27Z,2018-10-09T16:43:26Z,,122715432
1015,False,False,2018-09-25T01:28:29Z,2018-09-25T02:20:34Z,,122715432
1016,False,False,2018-09-21T21:40:40Z,2018-09-21T22:33:52Z,,122715432
1017,False,False,2018-09-14T22:20:13Z,2018-09-14T23:13:10Z,,122715432
1018,False,False,2018-09-12T16:59:07Z,2018-09-12T17:54:52Z,,122715432
1019,False,False,2018-08-20T22:11:50Z,2018-08-20T22:12:53Z,,122715432
1020,False,False,2018-07-23T09:59:23Z,2018-07-23T10:52:19Z,,122715432
1021,False,False,2018-06-21T01:19:47Z,2018-06-21T02:10:22Z,,122715432
1022,False,False,2018-06-14T02:23:18Z,2018-06-14T03:23:14Z,,122715432
1023,False,False,2018-06-14T01:48:00Z,2018-06-14T01:51:27Z,,122715432
1024,False,False,2018-06-14T00:50:48Z,2018-06-14T00:53:34Z,,122715432
1025,False,False,2018-06-14T00:27:03Z,2018-06-14T00:30:05Z,,122715432
1026,False,False,2018-06-13T22:36:50Z,2018-06-13T22:39:28Z,,122715432
1027,False,False,2018-06-13T22:23:46Z,2018-06-13T22:26:24Z,,122715432
1028,False,False,2018-06-13T21:04:53Z,2018-06-13T21:07:26Z,,122715432
1029,False,False,2018-06-13T20:19:29Z,2018-06-13T20:22:06Z,,122715432
1030,False,False,2018-06-13T19:47:16Z,2018-06-13T19:49:58Z,,122715432
1031,False,False,2018-06-13T19:17:55Z,2018-06-13T19:20:39Z,,122715432
1032,False,False,2018-06-13T18:52:04Z,2018-06-13T18:54:44Z,,122715432
1033,False,False,2018-06-13T17:30:48Z,2018-06-13T18:12:09Z,,122715432
1034,False,False,2018-06-12T01:42:53Z,2018-06-12T01:45:40Z,,122715432
1035,False,False,2018-06-11T12:30:07Z,2018-06-11T12:32:58Z,,122715432
1036,False,False,2018-06-11T04:39:29Z,2018-06-11T04:42:11Z,,122715432
1037,False,False,2018-06-10T16:45:58Z,2018-06-10T16:48:42Z,,122715432
1038,False,False,2018-06-10T15:45:39Z,2018-06-10T16:41:01Z,,122715432
1039,False,False,2018-06-09T12:08:05Z,2018-06-09T13:49:35Z,,122715432
1040,False,False,2018-06-09T05:05:31Z,2018-06-09T06:01:24Z,,122715432
1041,False,False,2018-06-09T04:58:24Z,2018-06-09T05:01:10Z,,122715432
1042,False,False,2018-06-09T04:47:53Z,2018-06-09T04:50:30Z,,122715432
1043,False,False,2018-06-09T02:37:29Z,2018-06-09T03:37:14Z,,122715432
1044,False,False,2018-06-06T09:30:38Z,2018-06-06T10:26:53Z,,122715432
1045,False,False,2018-05-30T06:34:17Z,2018-05-30T07:28:13Z,,122715432
1046,False,False,2018-05-29T21:09:40Z,2018-05-29T22:04:20Z,,122715432
1047,False,False,2018-05-29T08:46:16Z,2018-05-29T09:47:33Z,,122715432
1048,False,False,2018-05-22T16:12:09Z,2018-05-22T17:20:11Z,,122715432
1049,False,False,2018-05-21T18:47:38Z,2018-05-21T19:52:29Z,,122715432
1050,False,False,2018-03-29T15:02:34Z,2018-03-29T16:03:59Z,,122715432
1051,False,False,2018-03-29T05:56:02Z,2018-03-29T06:53:49Z,,122715432
1052,False,False,2018-03-25T10:24:32Z,2018-03-25T11:22:21Z,,122715432
1053,False,False,2018-03-12T17:15:30Z,2018-03-12T18:27:31Z,,122715432
1054,False,False,2018-03-12T04:00:13Z,2018-03-12T05:14:22Z,,122715432
1055,False,False,2018-03-11T22:33:22Z,2018-03-11T23:50:12Z,,122715432
1056,False,False,2018-03-10T09:41:56Z,2018-03-10T12:01:16Z,,122715432
1057,False,False,2018-03-05T18:50:34Z,2018-03-05T20:31:30Z,,122715432
1058,False,False,2018-03-04T22:06:07Z,2018-03-04T23:42:19Z,,122715432
1059,False,False,2018-03-03T19:30:08Z,2018-03-03T21:22:39Z,,122715432
1060,False,False,2018-03-02T21:52:58Z,2018-03-03T02:00:14Z,,122715432
1061,False,False,2018-03-02T00:52:20Z,2018-03-02T02:31:44Z,,122715432
1062,False,False,2018-02-28T19:35:31Z,2018-02-28T21:15:19Z,,122715432
1063,False,False,2018-02-27T17:38:03Z,2018-02-27T19:38:11Z,,122715432
1064,False,False,2018-02-27T05:19:53Z,2018-02-27T09:36:32Z,,122715432
1065,False,False,2018-02-26T16:15:01Z,2018-02-26T18:34:44Z,,122715432
1066,False,False,2018-02-25T19:32:34Z,2018-02-25T21:44:34Z,,122715432
1067,False,False,2018-02-25T04:56:15Z,2018-02-25T04:58:06Z,,122715432
1068,False,False,2018-02-25T04:06:45Z,2018-02-25T04:10:32Z,,122715432
1069,False,False,2020-03-19T01:51:16Z,2020-03-19T01:53:59Z,"## 6.7.3 (2020-03-18)
### Bug Fixes
* Fix a data race that might cause crash when calling DB::GetCreationTimeOfOldestFile() by a small chance. The bug was introduced in 6.6 Release.

## 6.7.2 (2020-02-24)
### Bug Fixes
* Fixed a bug of IO Uring partial result handling introduced in 6.7.0.


## 6.7.1 (2020-02-13)
### Bug Fixes
* Fixed issue #6316 that can cause a corruption of the MANIFEST file in the middle when writing to it fails due to no disk space.
* Batched MultiGet() ignores IO errors while reading data blocks, causing it to potentially continue looking for a key and returning stale results.

## 6.7.0 (2020-01-21)
### Public API Change
* Added a rocksdb::FileSystem class in include/rocksdb/file_system.h to encapsulate file creation/read/write operations, and an option DBOptions::file_system to allow a user to pass in an instance of rocksdb::FileSystem. If its a non-null value, this will take precendence over DBOptions::env for file operations. A new API rocksdb::FileSystem::Default() returns a platform default object. The DBOptions::env option and Env::Default() API will continue to be used for threading and other OS related functions, and where DBOptions::file_system is not specified, for file operations. For storage developers who are accustomed to rocksdb::Env, the interface in rocksdb::FileSystem is new and will probably undergo some changes as more storage systems are ported to it from rocksdb::Env. As of now, no env other than Posix has been ported to the new interface.
* A new rocksdb::NewSstFileManager() API that allows the caller to pass in separate Env and FileSystem objects.
* Changed Java API for RocksDB.keyMayExist functions to use Holder<byte[]> instead of StringBuilder, so that retrieved values need not decode to Strings.
* A new `OptimisticTransactionDBOptions` Option that allows users to configure occ validation policy. The default policy changes from kValidateSerial to kValidateParallel to reduce mutex contention.

### Bug Fixes
* Fix a bug that can cause unnecessary bg thread to be scheduled(#6104).
* Fix crash caused by concurrent CF iterations and drops(#6147).
* Fix a race condition for cfd->log_number_ between manifest switch and memtable switch (PR 6249) when number of column families is greater than 1.
* Fix a bug on fractional cascading index when multiple files at the same level contain the same smallest user key, and those user keys are for merge operands. In this case, Get() the exact key may miss some merge operands.
* Delcare kHashSearch index type feature-incompatible with index_block_restart_interval larger than 1.
* Fixed an issue where the thread pools were not resized upon setting `max_background_jobs` dynamically through the `SetDBOptions` interface.
* Fix a bug that can cause write threads to hang when a slowdown/stall happens and there is a mix of writers with WriteOptions::no_slowdown set/unset.
* Fixed an issue where an incorrect ""number of input records"" value was used to compute the ""records dropped"" statistics for compactions.

### New Features
* It is now possible to enable periodic compactions for the base DB when using BlobDB.
* BlobDB now garbage collects non-TTL blobs when `enable_garbage_collection` is set to `true` in `BlobDBOptions`. Garbage collection is performed during compaction: any valid blobs located in the oldest N files (where N is the number of non-TTL blob files multiplied by the value of `BlobDBOptions::garbage_collection_cutoff`) encountered during compaction get relocated to new blob files, and old blob files are dropped once they are no longer needed. Note: we recommend enabling periodic compactions for the base DB when using this feature to deal with the case when some old blob files are kept alive by SSTs that otherwise do not get picked for compaction.
* `db_bench` now supports the `garbage_collection_cutoff` option for BlobDB.
* MultiGet() can use IO Uring to parallelize read from the same SST file. This featuer is by default disabled. It can be enabled with environment variable ROCKSDB_USE_IO_URING.
",6934395
1070,False,False,2020-01-27T16:21:13Z,2020-02-11T22:09:41Z,Special release for ARM. (Note: the originally tagged commit for this release was wrong but the tag has been updated a couple of times. You might need to delete your copy of the tag with `git tag -d v5.18.4` to get the new one. See https://git-scm.com/docs/git-tag#_on_re_tagging),6934395
1071,False,False,2020-01-31T21:03:51Z,2020-01-31T21:05:10Z,"# Rocksdb Change Log

## 6.6.4 (2020-01-31)
### Bug Fixes
* Fixed issue #6316 that can cause a corruption of the MANIFEST file in the middle when writing to it fails due to no disk space.
",6934395
1072,False,False,2020-01-24T22:01:40Z,2020-01-28T22:07:40Z,"# Rocksdb Change Log
## 6.6.3 (2020-01-24)
### Bug Fixes
* Fix a bug that can cause write threads to hang when a slowdown/stall happens and there is a mix of writers with WriteOptions::no_slowdown set/unset.

## 6.6.2 (2020-01-13)
### Bug Fixes
* Fixed a bug where non-L0 compaction input files were not considered to compute the `creation_time` of new compaction outputs.

## 6.6.1 (2020-01-02)
### Bug Fixes
* Fix a bug in WriteBatchWithIndex::MultiGetFromBatchAndDB, which is called by Transaction::MultiGet, that causes due to stale pointer access when the number of keys is > 32
* Fixed two performance issues related to memtable history trimming. First, a new SuperVersion is now created only if some memtables were actually trimmed. Second, trimming is only scheduled if there is at least one flushed memtable that is kept in memory for the purposes of transaction conflict checking.
* BlobDB no longer updates the SST to blob file mapping upon failed compactions.
* Fix a bug in which a snapshot read through an iterator could be affected by a DeleteRange after the snapshot (#6062).
* Fixed a bug where BlobDB was comparing the `ColumnFamilyHandle` pointers themselves instead of only the column family IDs when checking whether an API call uses the default column family or not.
* Delete superversions in BackgroundCallPurge.
* Fix use-after-free and double-deleting files in BackgroundCallPurge().

## 6.6.0 (2019-11-25)
### Bug Fixes
* Fix data corruption casued by output of intra-L0 compaction on ingested file not being placed in correct order in L0.
* Fix a data race between Version::GetColumnFamilyMetaData() and Compaction::MarkFilesBeingCompacted() for access to being_compacted (#6056). The current fix acquires the db mutex during Version::GetColumnFamilyMetaData(), which may cause regression.
* Fix a bug in DBIter that is_blob_ state isn't updated when iterating backward using seek.
* Fix a bug when format_version=3, partitioned fitlers, and prefix search are used in conjunction. The bug could result into Seek::(prefix) returning NotFound for an existing prefix.
* Revert the feature ""Merging iterator to avoid child iterator reseek for some cases (#5286)"" since it might cause strong results when reseek happens with a different iterator upper bound.
* Fix a bug causing a crash during ingest external file when background compaction cause severe error (file not found).
* Fix a bug when partitioned filters and prefix search are used in conjunction, ::SeekForPrev could return invalid for an existing prefix. ::SeekForPrev might be called by the user, or internally on ::Prev, or within ::Seek if the return value involves Delete or a Merge operand.
* Fix OnFlushCompleted fired before flush result persisted in MANIFEST when there's concurrent flush job. The bug exists since OnFlushCompleted was introduced in rocksdb 3.8.
* Fixed an sst_dump crash on some plain table SST files.
* Fixed a memory leak in some error cases of opening plain table SST files.
* Fix a bug when a crash happens while calling WriteLevel0TableForRecovery for multiple column families, leading to a column family's log number greater than the first corrutped log number when the DB is being opened in PointInTime recovery mode during next recovery attempt (#5856).

### New Features
* Universal compaction to support options.periodic_compaction_seconds. A full compaction will be triggered if any file is over the threshold.
* `GetLiveFilesMetaData` and `GetColumnFamilyMetaData` now expose the file number of SST files as well as the oldest blob file referenced by each SST.
* A batched MultiGet API (DB::MultiGet()) that supports retrieving keys from multiple column families.
* Full and partitioned filters in the block-based table use an improved Bloom filter implementation, enabled with format_version 5 (or above) because previous releases cannot read this filter. This replacement is faster and more accurate, especially for high bits per key or millions of keys in a single (full) filter. For example, the new Bloom filter has the same false postive rate at 9.55 bits per key as the old one at 10 bits per key, and a lower false positive rate at 16 bits per key than the old one at 100 bits per key.
* Added AVX2 instructions to USE_SSE builds to accelerate the new Bloom filter and XXH3-based hash function on compatible x86_64 platforms (Haswell and later, ~2014).
* Support options.ttl or options.periodic_compaction_seconds with options.max_open_files = -1. File's oldest ancester time and file creation time will be written to manifest. If it is availalbe, this information will be used instead of creation_time and file_creation_time in table properties.
* Setting options.ttl for universal compaction now has the same meaning as setting periodic_compaction_seconds.
* SstFileMetaData also returns file creation time and oldest ancester time.
* The `sst_dump` command line tool `recompress` command now displays how many blocks were compressed and how many were not, in particular how many were not compressed because the compression ratio was not met (12.5% threshold for GoodCompressionRatio), as seen in the `number.block.not_compressed` counter stat since version 6.0.0.
* The block cache usage is now takes into account the overhead of metadata per each entry. This results into more accurate managment of memory. A side-effect of this feature is that less items are fit into the block cache of the same size, which would result to higher cache miss rates. This can be remedied by increasing the block cache size or passing kDontChargeCacheMetadata to its constuctor to restore the old behavior.
* When using BlobDB, a mapping is maintained and persisted in the MANIFEST between each SST file and the oldest non-TTL blob file it references.
* `db_bench` now supports and by default issues non-TTL Puts to BlobDB. TTL Puts can be enabled by specifying a non-zero value for the `blob_db_max_ttl_range` command line parameter explicitly.
* `sst_dump` now supports printing BlobDB blob indexes in a human-readable format. This can be enabled by specifying the `decode_blob_index` flag on the command line.
* A number of new information elements are now exposed through the EventListener interface. For flushes, the file numbers of the new SST file and the oldest blob file referenced by the SST are propagated. For compactions, the level, file number, and the oldest blob file referenced are passed to the client for each compaction input and output file.

### Public API Change
* RocksDB release 4.1 or older will not be able to open DB generated by the new release. 4.2 was released on Feb 23, 2016.
* TTL Compactions in Level compaction style now initiate successive cascading compactions on a key range so that it reaches the bottom level quickly on TTL expiry. `creation_time` table property for compaction output files is now set to the minimum of the creation times of all compaction inputs.
* With FIFO compaction style, options.periodic_compaction_seconds will have the same meaning as options.ttl. Whichever stricter will be used. With the default options.periodic_compaction_seconds value with options.ttl's default of 0, RocksDB will give a default of 30 days.
* Added an API GetCreationTimeOfOldestFile(uint64_t* creation_time) to get the file_creation_time of the oldest SST file in the DB.
* FilterPolicy now exposes additional API to make it possible to choose filter configurations based on context, such as table level and compaction style. See `LevelAndStyleCustomFilterPolicy` in db_bloom_filter_test.cc. While most existing custom implementations of FilterPolicy should continue to work as before, those wrapping the return of NewBloomFilterPolicy will require overriding new function `GetBuilderWithContext()`, because calling `GetFilterBitsBuilder()` on the FilterPolicy returned by NewBloomFilterPolicy is no longer supported.
* An unlikely usage of FilterPolicy is no longer supported. Calling GetFilterBitsBuilder() on the FilterPolicy returned by NewBloomFilterPolicy will now cause an assertion violation in debug builds, because RocksDB has internally migrated to a more elaborate interface that is expected to evolve further. Custom implementations of FilterPolicy should work as before, except those wrapping the return of NewBloomFilterPolicy, which will require a new override of a protected function in FilterPolicy.
* NewBloomFilterPolicy now takes bits_per_key as a double instead of an int. This permits finer control over the memory vs. accuracy trade-off in the new Bloom filter implementation and should not change source code compatibility.
* The option BackupableDBOptions::max_valid_backups_to_open is now only used when opening BackupEngineReadOnly. When opening a read/write BackupEngine, anything but the default value logs a warning and is treated as the default. This change ensures that backup deletion has proper accounting of shared files to ensure they are deleted when no longer referenced by a backup.
* Deprecate `snap_refresh_nanos` option.
* Added DisableManualCompaction/EnableManualCompaction to stop and resume manual compaction.
* Add TryCatchUpWithPrimary() to StackableDB in non-LITE mode.
* Add a new Env::LoadEnv() overloaded function to return a shared_ptr to Env.
* Flush sets file name to ""(nil)"" for OnTableFileCreationCompleted() if the flush does not produce any L0. This can happen if the file is empty thus delete by RocksDB.

### Default Option Changes
* Changed the default value of periodic_compaction_seconds to `UINT64_MAX - 1` which allows RocksDB to auto-tune periodic compaction scheduling. When using the default value, periodic compactions are now auto-enabled if a compaction filter is used. A value of `0` will turn off the feature completely.
* Changed the default value of ttl to `UINT64_MAX - 1` which allows RocksDB to auto-tune ttl value. When using the default value, TTL will be auto-enabled to 30 days, when the feature is supported. To revert the old behavior, you can explictly set it to 0.

### Performance Improvements
* For 64-bit hashing, RocksDB is standardizing on a slightly modified preview version of XXH3. This function is now used for many non-persisted hashes, along with fastrange64() in place of the modulus operator, and some benchmarks show a slight improvement.
* Level iterator to invlidate the iterator more often in prefix seek and the level is filtered out by prefix bloom.
",6934395
1073,False,False,2020-01-10T17:58:14Z,2020-01-10T18:30:59Z,"# Rocksdb Change Log
## 6.5.3 (2020-01-10)
### Bug Fixes
* Fixed two performance issues related to memtable history trimming. First, a new SuperVersion is now created only if some memtables were actually trimmed. Second, trimming is only scheduled if there is at least one flushed memtable that is kept in memory for the purposes of transaction conflict checking.
",6934395
1074,False,False,2019-11-15T21:56:29Z,2019-12-12T22:08:53Z,"## 6.5.2 (2019-11-15)
### Bug Fixes
* Fix a assertion failure in MultiGe4t() when BlockBasedTableOptions::no_block_cache is true and there is no compressed block cache
* Fix a buffer overrun problem in BlockBasedTable::MultiGet() when compression is enabled and no compressed block cache is configured.
* If a call to BackupEngine::PurgeOldBackups or BackupEngine::DeleteBackup suffered a crash, power failure, or I/O error, files could be left over from old backups that could only be purged with a call to GarbageCollect. Any call to PurgeOldBackups, DeleteBackup, or GarbageCollect should now suffice to purge such files.

## 6.5.1 (2019-10-16)
### Bug Fixes
* Revert the feature ""Merging iterator to avoid child iterator reseek for some cases (#5286)"" since it might cause strange results when reseek happens with a different iterator upper bound.
* Fix a bug in BlockBasedTableIterator that might return incorrect results when reseek happens with a different iterator upper bound.
* Fix a bug when partitioned filters and prefix search are used in conjunction, ::SeekForPrev could return invalid for an existing prefix. ::SeekForPrev might be called by the user, or internally on ::Prev, or within ::Seek if the return value involves Delete or a Merge operand.

## 6.5.0 (2019-09-13)
### Bug Fixes
* Fixed a number of data races in BlobDB.
* Fix a bug where the compaction snapshot refresh feature is not disabled as advertised when `snap_refresh_nanos` is set to 0..
* Fix bloom filter lookups by the MultiGet batching API when BlockBasedTableOptions::whole_key_filtering is false, by checking that a key is in the perfix_extractor domain and extracting the prefix before looking up.
* Fix a bug in file ingestion caused by incorrect file number allocation when the number of column families involved in the ingestion exceeds 2.
### New Features
* Introduced DBOptions::max_write_batch_group_size_bytes to configure maximum limit on number of bytes that are written in a single batch of WAL or memtable write. It is followed when the leader write size is larger than 1/8 of this limit.
* VerifyChecksum() by default will issue readahead. Allow ReadOptions to be passed in to those functions to override the readhead size. For checksum verifying before external SST file ingestion, a new option IngestExternalFileOptions.verify_checksums_readahead_size, is added for this readahead setting.
* When user uses options.force_consistency_check in RocksDb, instead of crashing the process, we now pass the error back to the users without killing the process.
* Add an option `memtable_insert_hint_per_batch` to WriteOptions. If it is true, each WriteBatch will maintain its own insert hints for each memtable in concurrent write. See include/rocksdb/options.h for more details.
### Public API Change
* Added max_write_buffer_size_to_maintain option to better control memory usage of immutable memtables.
* Added a lightweight API GetCurrentWalFile() to get last live WAL filename and size. Meant to be used as a helper for backup/restore tooling in a larger ecosystem such as MySQL with a MyRocks storage engine.
* The MemTable Bloom filter, when enabled, now always uses cache locality. Options::bloom_locality now only affects the PlainTable SST format.
### Performance Improvements
* Improve the speed of the MemTable Bloom filter, reducing the write overhead of enabling it by 1/3 to 1/2, with similar benefit to read performance.
",6934395
1075,False,False,2019-10-30T17:32:00Z,2019-10-31T21:55:22Z,"# Rocksdb Change Log
## 6.4.6 (2019-10-16)
### Bug Fixes
* Fix a bug when partitioned filters and prefix search are used in conjunction, ::SeekForPrev could return invalid for an existing prefix. ::SeekForPrev might be called by the user, or internally on ::Prev, or within ::Seek if the return value involves Delete or a Merge operand.

## 6.4.5 (2019-10-01)
### Bug Fixes
* Revert the feature ""Merging iterator to avoid child iterator reseek for some cases (#5286)"" since it might cause strange results when reseek happens with a different iterator upper bound.
* Fix a bug in BlockBasedTableIterator that might return incorrect results when reseek happens with a different iterator upper bound.

## 6.4.4 (2019-09-17)
* Fix a bug introduced 6.3 which could cause wrong results in a corner case when prefix bloom filter is used and the iterator is reseeked.

## 6.4.2 (2019-09-03)
### Bug Fixes
* Fix a bug in file ingestion caused by incorrect file number allocation when the number of column families involved in the ingestion exceeds 2.

## 6.4.1 (2019-08-20)
### Bug Fixes
* Fix a bug where the compaction snapshot refresh feature is not disabled as advertised when `snap_refresh_nanos` is set to 0..

## 6.4.0 (2019-07-30)
### Default Option Change
* LRUCacheOptions.high_pri_pool_ratio is set to 0.5 (previously 0.0) by default, which means that by default midpoint insertion is enabled. The same change is made for the default value of high_pri_pool_ratio argument in NewLRUCache(). When block cache is not explictly created, the small block cache created by BlockBasedTable will still has this option to be 0.0.
* Change BlockBasedTableOptions.cache_index_and_filter_blocks_with_high_priority's default value from false to true.

### Public API Change
* Filter and compression dictionary blocks are now handled similarly to data blocks with regards to the block cache: instead of storing objects in the cache, only the blocks themselves are cached. In addition, filter and compression dictionary blocks (as well as filter partitions) no longer get evicted from the cache when a table is closed.
* Due to the above refactoring, block cache eviction statistics for filter and compression dictionary blocks are temporarily broken. We plan to reintroduce them in a later phase.
* The semantics of the per-block-type block read counts in the performance context now match those of the generic block_read_count.
* Errors related to the retrieval of the compression dictionary are now propagated to the user.
* db_bench adds a ""benchmark"" stats_history, which prints out the whole stats history.
* Overload GetAllKeyVersions() to support non-default column family.
* Added new APIs ExportColumnFamily() and CreateColumnFamilyWithImport() to support export and import of a Column Family. https://github.com/facebook/rocksdb/issues/3469
* ldb sometimes uses a string-append merge operator if no merge operator is passed in. This is to allow users to print keys from a DB with a merge operator.
* Replaces old Registra with ObjectRegistry to allow user to create custom object from string, also add LoadEnv() to Env.
* Added new overload of GetApproximateSizes which gets SizeApproximationOptions object and returns a Status. The older overloads are redirecting their calls to this new method and no longer assert if the include_flags doesn't have either of INCLUDE_MEMTABLES or INCLUDE_FILES bits set. It's recommended to use the new method only, as it is more type safe and returns a meaningful status in case of errors.

### New Features
* Add argument `--secondary_path` to ldb to open the database as the secondary instance. This would keep the original DB intact.
* Compression dictionary blocks are now prefetched and pinned in the cache (based on the customer's settings) the same way as index and filter blocks.
* Added DBOptions::log_readahead_size which specifies the number of bytes to prefetch when reading the log. This is mostly useful for reading a remotely located log, as it can save the number of round-trips. If 0 (default), then the prefetching is disabled.
* Support loading custom objects in unit tests. In the affected unit tests, RocksDB will create custom Env objects based on environment variable TEST_ENV_URI. Users need to make sure custom object types are properly registered. For example, a static library should expose a `RegisterCustomObjects` function. By linking the unit test binary with the static library, the unit test can execute this function.

### Performance Improvements
* Reduce iterator key comparision for upper/lower bound check.
* Improve performance of row_cache: make reads with newer snapshots than data in an SST file share the same cache key, except in some transaction cases.
* The compression dictionary is no longer copied to a new object upon retrieval.

### Bug Fixes
* Fix ingested file and directory not being fsync.
* Return TryAgain status in place of Corruption when new tail is not visible to TransactionLogIterator.
* Fixed a regression where the fill_cache read option also affected index blocks.
* Fixed an issue where using cache_index_and_filter_blocks==false affected partitions of partitioned indexes/filters as well.
",6934395
1076,False,False,2019-10-02T00:04:43Z,2019-10-07T17:29:09Z,"# Rocksdb Change Log
## 6.3.6 (2019-10-01)
* Revert the feature ""Merging iterator to avoid child iterator reseek for some cases (#5286)"" since it might cause strong results when reseek happens with a different iterator upper bound.

## 6.3.5 (2019-09-17)
* Fix a bug introduced 6.3 which could cause wrong results in a corner case when prefix bloom filter is used and the iterator is reseeked.

## 6.3.4 (2019-09-03)
### Bug Fixes
* Fix a bug in file ingestion caused by incorrect file number allocation when the number of column families involved in the ingestion exceeds 2.

## 6.3.3 (2019-08-20)
### Bug Fixes
* Fix a bug where the compaction snapshot refresh feature is not disabled as advertised when `snap_refresh_nanos` is set to 0..

## 6.3.2 (2019-08-15)
### Public API Change
* The semantics of the per-block-type block read counts in the performance context now match those of the generic block_read_count.

### Bug Fixes
* Fixed a regression where the fill_cache read option also affected index blocks.
* Fixed an issue where using cache_index_and_filter_blocks==false affected partitions of partitioned indexes as well.

## 6.3.1 (2019-07-24)
### Bug Fixes
* Fix auto rolling bug introduced in 6.3.0, which causes segfault if log file creation fails.

## 6.3.0 (2019-06-18)
### Public API Change
* Now DB::Close() will return Aborted() error when there is unreleased snapshot. Users can retry after all snapshots are released.
* Index blocks are now handled similarly to data blocks with regards to the block cache: instead of storing objects in the cache, only the blocks themselves are cached. In addition, index blocks no longer get evicted from the cache when a table is closed, can now use the compressed block cache (if any), and can be shared among multiple table readers.
* Partitions of partitioned indexes no longer affect the read amplification statistics.
* Due to the above refactoring, block cache eviction statistics for indexes are temporarily broken. We plan to reintroduce them in a later phase.
* options.keep_log_file_num will be enforced strictly all the time. File names of all log files will be tracked, which may take significantly amount of memory if options.keep_log_file_num is large and either of options.max_log_file_size or options.log_file_time_to_roll is set.
* Add initial support for Get/Put with user timestamps. Users can specify timestamps via ReadOptions and WriteOptions when calling DB::Get and DB::Put.
* Accessing a partition of a partitioned filter or index through a pinned reference is no longer considered a cache hit.
* Add C bindings for secondary instance, i.e. DBImplSecondary.
* Rate limited deletion of WALs is only enabled if DBOptions::wal_dir is not set, or explicitly set to db_name passed to DB::Open and DBOptions::db_paths is empty, or same as db_paths[0].path

### New Features
* Add an option `snap_refresh_nanos` (default to 0) to periodically refresh the snapshot list in compaction jobs. Assign to 0 to disable the feature.
* Add an option `unordered_write` which trades snapshot guarantees with higher write throughput. When used with WRITE_PREPARED transactions with two_write_queues=true, it offers higher throughput with however no compromise on guarantees.
* Allow DBImplSecondary to remove memtables with obsolete data after replaying MANIFEST and WAL.
* Add an option `failed_move_fall_back_to_copy` (default is true) for external SST ingestion. When `move_files` is true and hard link fails, ingestion falls back to copy if `failed_move_fall_back_to_copy` is true. Otherwise, ingestion reports an error.

### Performance Improvements
* Reduce binary search when iterator reseek into the same data block.
* DBIter::Next() can skip user key checking if previous entry's seqnum is 0.
* Merging iterator to avoid child iterator reseek for some cases
* Log Writer will flush after finishing the whole record, rather than a fragment.
* Lower MultiGet batching API latency by reading data blocks from disk in parallel

### General Improvements
* Added new status code kColumnFamilyDropped to distinguish between Column Family Dropped and DB Shutdown in progress.
* Improve ColumnFamilyOptions validation when creating a new column family.

### Bug Fixes
* Fix a bug in WAL replay of secondary instance by skipping write batches with older sequence numbers than the current last sequence number.
* Fix flush's/compaction's merge processing logic which allowed `Put`s covered by range tombstones to reappear. Note `Put`s may exist even if the user only ever called `Merge()` due to an internal conversion during compaction to the bottommost level.
* Fix/improve memtable earliest sequence assignment and WAL replay so that WAL entries of unflushed column families will not be skipped after replaying the MANIFEST and increasing db sequence due to another flushed/compacted column family.
* Fix a bug caused by secondary not skipping the beginning of new MANIFEST.
* On DB open, delete WAL trash files left behind in wal_dir
",6934395
1077,False,False,2019-09-18T21:42:43Z,2019-09-19T18:26:33Z,"# Rocksdb Change Log
## 6.2.4 (9/18/2019)
### Bug Fixes
* Disable snap_refresh_nanos by default. The feature is to be deprecated in the next release.

## 6.2.3 (9/3/2019)
### Bug Fixes
* Fix a bug in file ingestion caused by incorrect file number allocation when the number of column families involved in the ingestion exceeds 2.
",6934395
1078,False,False,2019-06-07T23:23:07Z,2019-08-02T17:51:45Z,"# Rocksdb Change Log
## 6.2.2 (6/7/2019)
### Bug Fixes
* Disable dynamic extension support by default for CMake.

## 6.2.1 (6/4/2019)
### Bug Fixes
* Fix flush's/compaction's merge processing logic which allowed `Put`s covered by range tombstones to reappear. Note `Put`s may exist even if the user only ever called `Merge()` due to an internal conversion during compaction to the bottommost level.

## 6.2.0 (4/30/2019)
### New Features
* Add an option `strict_bytes_per_sync` that causes a file-writing thread to block rather than exceed the limit on bytes pending writeback specified by `bytes_per_sync` or `wal_bytes_per_sync`.
* Improve range scan performance by avoiding per-key upper bound check in BlockBasedTableIterator.
* Introduce Periodic Compaction for Level style compaction. Files are re-compacted periodically and put in the same level.
* Block-based table index now contains exact highest key in the file, rather than an upper bound. This may improve Get() and iterator Seek() performance in some situations, especially when direct IO is enabled and block cache is disabled. A setting BlockBasedTableOptions::index_shortening is introduced to control this behavior. Set it to kShortenSeparatorsAndSuccessor to get the old behavior.
* When reading from option file/string/map, customized envs can be filled according to object registry.
* Add an option `snap_refresh_nanos` (default to 0.5s) to periodically refresh the snapshot list in compaction jobs. Assign to 0 to disable the feature.
* Improve range scan performance when using explicit user readahead by not creating new table readers for every iterator.

### Public API Change
* Change the behavior of OptimizeForPointLookup(): move away from hash-based block-based-table index, and use whole key memtable filtering.
* Change the behavior of OptimizeForSmallDb(): use a 16MB block cache, put index and filter blocks into it, and cost the memtable size to it. DBOptions.OptimizeForSmallDb() and ColumnFamilyOptions.OptimizeForSmallDb() start to take an optional cache object.
* Added BottommostLevelCompaction::kForceOptimized to avoid double compacting newly compacted files in the bottommost level compaction of manual compaction. Note this option may prohibit the manual compaction to produce a single file in the bottommost level.

### Bug Fixes
* Adjust WriteBufferManager's dummy entry size to block cache from 1MB to 256KB.
* Fix a race condition between WritePrepared::Get and ::Put with duplicate keys.
* Fix crash when memtable prefix bloom is enabled and read/write a key out of domain of prefix extractor.
* Close a WAL file before another thread deletes it.
* Fix an assertion failure `IsFlushPending() == true` caused by one bg thread releasing the db mutex in ~ColumnFamilyData and another thread clearing `flush_requested_` flag.
",6934395
1079,False,False,2019-06-04T20:31:32Z,2019-06-04T20:41:57Z,"# Rocksdb Change Log
## 6.1.2 (6/4/2019)
### Bug Fixes
* Fix flush's/compaction's merge processing logic which allowed `Put`s covered by range tombstones to reappear. Note `Put`s may exist even if the user only ever called `Merge()` due to an internal conversion during compaction to the bottommost level.
",6934395
1080,False,False,2019-04-18T16:47:15Z,2019-06-03T21:24:47Z,"# Rocksdb Change Log

## 6.1.1 (4/9/2019)
### New Features
* When reading from option file/string/map, customized comparators and/or merge operators can be filled according to object registry.
### Public API Change
### Bug Fixes
* Fix a bug in 2PC where a sequence of txn prepare, memtable flush, and crash could result in losing the prepared transaction.
* Fix a bug in Encryption Env which could cause encrypted files to be read beyond file boundaries.

## 6.1.0 (3/27/2019)
### New Features
* Introduce two more stats levels, kExceptHistogramOrTimers and kExceptTimers.
* Added a feature to perform data-block sampling for compressibility, and report stats to user.
* Add support for trace filtering.
* Add DBOptions.avoid_unnecessary_blocking_io. If true, we avoid file deletion when destorying ColumnFamilyHandle and Iterator. Instead, a job is scheduled to delete the files in background.

### Public API Change
* Remove bundled fbson library.
* statistics.stats_level_ becomes atomic. It is preferred to use statistics.set_stats_level() and statistics.get_stats_level() to access it.
* Introduce a new IOError subcode, PathNotFound, to indicate trying to open a nonexistent file or directory for read.
* Add initial support for multiple db instances sharing the same data in single-writer, multi-reader mode.
* Removed some ""using std::xxx"" from public headers.

### Bug Fixes
* Fix JEMALLOC_CXX_THROW macro missing from older Jemalloc versions, causing build failures on some platforms.
* Fix SstFileReader not able to open file ingested with write_glbal_seqno=true.
",6934395
1081,False,False,2019-04-23T22:20:22Z,2019-04-23T22:22:29Z,"## 6.0.2 (4/23/2019)
## Bug Fixes needed for Java users
* Fix build failures due to missing JEMALLOC_CXX_THROW macro (#5053)
* Fix compilation on db_bench_tool.cc on Windows (#5227)",6934395
1082,False,False,2019-03-26T18:55:31Z,2019-04-16T20:28:42Z,"# Rocksdb Change Log

## 6.0.1 (3/26/2019)
### New Features
### Public API Change
* Added many new features to the Java API to bring it closer to the C++ API.

### Bug Fixes
* Make BlobDB wait for all background tasks on shutdown.
* Fixed a BlobDB issue where some trash files are not tracked causing them to remain forever.

## 6.0.0 (2/19/2019)
### New Features
* Enabled checkpoint on readonly db (DBImplReadOnly).
* Make DB ignore dropped column families while committing results of atomic flush.
* RocksDB may choose to preopen some files even if options.max_open_files != -1. This may make DB open slightly longer.
* For users of dictionary compression with ZSTD v0.7.0+, we now reuse the same digested dictionary when compressing each of an SST file's data blocks for faster compression speeds.
* For all users of dictionary compression who set `cache_index_and_filter_blocks == true`, we now store dictionary data used for decompression in the block cache for better control over memory usage. For users of ZSTD v1.1.4+ who compile with -DZSTD_STATIC_LINKING_ONLY, this includes a digested dictionary, which is used to increase decompression speed.
* Add support for block checksums verification for external SST files before ingestion.
* Introduce stats history which periodically saves Statistics snapshots and added `GetStatsHistory` API to retrieve these snapshots.
* Add a place holder in manifest which indicate a record from future that can be safely ignored.
* Add support for trace sampling.
* Enable properties block checksum verification for block-based tables.
* For all users of dictionary compression, we now generate a separate dictionary for compressing each bottom-level SST file. Previously we reused a single dictionary for a whole compaction to bottom level. The new approach achieves better compression ratios; however, it uses more memory and CPU for buffering/sampling data blocks and training dictionaries.
* Add whole key bloom filter support in memtable.
* Files written by `SstFileWriter` will now use dictionary compression if it is configured in the file writer's `CompressionOptions`.

### Public API Change
* Disallow CompactionFilter::IgnoreSnapshots() = false, because it is not very useful and the behavior is confusing. The filter will filter everything if there is no snapshot declared by the time the compaction starts. However, users can define a snapshot after the compaction starts and before it finishes and this new snapshot won't be repeatable, because after the compaction finishes, some keys may be dropped.
* CompactionPri = kMinOverlappingRatio also uses compensated file size, which boosts file with lots of tombstones to be compacted first.
* Transaction::GetForUpdate is extended with a do_validate parameter with default value of true. If false it skips validating the snapshot before doing the read. Similarly ::Merge, ::Put, ::Delete, and ::SingleDelete are extended with assume_tracked with default value of false. If true it indicates that call is assumed to be after a ::GetForUpdate.
* `TableProperties::num_entries` and `TableProperties::num_deletions` now also account for number of range tombstones.
* Remove geodb, spatial_db, document_db, json_document, date_tiered_db, and redis_lists.
* With ""ldb ----try_load_options"", when wal_dir specified by the option file doesn't exist, ignore it.
* Change time resolution in FileOperationInfo.
* Deleting Blob files also go through SStFileManager.
* Remove CuckooHash memtable.
* The counter stat `number.block.not_compressed` now also counts blocks not compressed due to poor compression ratio.
* Remove ttl option from `CompactionOptionsFIFO`. The option has been deprecated and ttl in `ColumnFamilyOptions` is used instead.
* Support SST file ingestion across multiple column families via DB::IngestExternalFiles. See the function's comment about atomicity.
* Remove Lua compaction filter.

### Bug Fixes
* Fix a deadlock caused by compaction and file ingestion waiting for each other in the event of write stalls.
* Fix a memory leak when files with range tombstones are read in mmap mode and block cache is enabled
* Fix handling of corrupt range tombstone blocks such that corruptions cannot cause deleted keys to reappear
* Lock free MultiGet
* Fix incorrect `NotFound` point lookup result when querying the endpoint of a file that has been extended by a range tombstone.
* Fix with pipelined write, write leaders's callback failure lead to the whole write group fail.

### Change Default Options
* Change options.compaction_pri's default to kMinOverlappingRatio",6934395
1083,False,False,2019-02-11T22:02:52Z,2019-02-28T18:09:30Z,"# Rocksdb Change Log
## 5.18.3 (2/11/2019)
### Bug Fixes
* Fix possible LSM corruption when both range deletions and subcompactions are used. The symptom of this corruption is L1+ files overlapping in the user key space.

## 5.18.2 (01/31/2019)
### Public API Change
* Change time resolution in FileOperationInfo.
* Deleting Blob files also go through SStFileManager.

## 5.18.0 (11/30/2018)
### New Features
* Introduced `JemallocNodumpAllocator` memory allocator. When being use, block cache will be excluded from core dump.
* Introduced `PerfContextByLevel` as part of `PerfContext` which allows storing perf context at each level. Also replaced `__thread` with `thread_local` keyword for perf_context. Added per-level perf context for bloom filter and `Get` query.
* With level_compaction_dynamic_level_bytes = true, level multiplier may be adjusted automatically when Level 0 to 1 compaction is lagged behind.
* Introduced DB option `atomic_flush`. If true, RocksDB supports flushing multiple column families and atomically committing the result to MANIFEST. Useful when WAL is disabled.
* Added `num_deletions` and `num_merge_operands` members to `TableProperties`.
* Added ""rocksdb.min-obsolete-sst-number-to-keep"" DB property that reports the lower bound on SST file numbers that are being kept from deletion, even if the SSTs are obsolete.
* Add xxhash64 checksum support
* Introduced `MemoryAllocator`, which lets the user specify custom memory allocator for block based table.
* Improved `DeleteRange` to prevent read performance degradation. The feature is no longer marked as experimental.
* Enabled checkpoint on readonly db (DBImplReadOnly).

### Public API Change
* `DBOptions::use_direct_reads` now affects reads issued by `BackupEngine` on the database's SSTs.
* `NO_ITERATORS` is divided into two counters `NO_ITERATOR_CREATED` and `NO_ITERATOR_DELETE`. Both of them are only increasing now, just as other counters.

### Bug Fixes
* Fix corner case where a write group leader blocked due to write stall blocks other writers in queue with WriteOptions::no_slowdown set.
* Fix in-memory range tombstone truncation to avoid erroneously covering newer keys at a lower level, and include range tombstones in compacted files whose largest key is the range tombstone's start key.
* Properly set the stop key for a truncated manual CompactRange
* Fix slow flush/compaction when DB contains many snapshots. The problem became noticeable to us in DBs with 100,000+ snapshots, though it will affect others at different thresholds.
* Fix the bug that WriteBatchWithIndex's SeekForPrev() doesn't see the entries with the same key.
* Fix the bug where user comparator was sometimes fed with InternalKey instead of the user key. The bug manifests when during GenerateBottommostFiles.
* Fix a bug in WritePrepared txns where if the number of old snapshots goes beyond the snapshot cache size (128 default) the rest will not be checked when evicting a commit entry from the commit cache.
* Fixed Get correctness bug in the presence of range tombstones where merge operands covered by a range tombstone always result in NotFound.
* Start populating `NO_FILE_CLOSES` ticker statistic, which was always zero previously.
* The default value of NewBloomFilterPolicy()'s argument use_block_based_builder is changed to false. Note that this new default may cause large temp memory usage when building very large SST files.
* Fix a deadlock caused by compaction and file ingestion waiting for each other in the event of write stalls.
* Make DB ignore dropped column families while committing results of atomic flush.
",6934395
1084,False,False,2018-11-12T21:11:41Z,2018-11-12T21:14:07Z,"# Rocksdb Change Log

# 5.17.2 (10/24/2018)
### Bug Fixes
* Fix the bug that WriteBatchWithIndex's SeekForPrev() doesn't see the entries with the same key.

# 5.17.1 (10/16/2018)
### Bug Fixes
* Fix slow flush/compaction when DB contains many snapshots. The problem became noticeable to us in DBs with 100,000+ snapshots, though it will affect others at different thresholds.
* Properly set the stop key for a truncated manual CompactRange
* Fix corner case where a write group leader blocked due to write stall blocks other writers in queue with WriteOptions::no_slowdown set.

### New Features
* Introduced CacheAllocator, which lets the user specify custom allocator for memory in block cache.

## 5.17.0 (10/05/2018)
### Public API Change
* `OnTableFileCreated` will now be called for empty files generated during compaction. In that case, `TableFileCreationInfo::file_path` will be ""(nil)"" and `TableFileCreationInfo::file_size` will be zero.
* Add `FlushOptions::allow_write_stall`, which controls whether Flush calls start working immediately, even if it causes user writes to stall, or will wait until flush can be performed without causing write stall (similar to `CompactRangeOptions::allow_write_stall`). Note that the default value is false, meaning we add delay to Flush calls until stalling can be avoided when possible. This is behavior change compared to previous RocksDB versions, where Flush calls didn't check if they might cause stall or not.
* Application using PessimisticTransactionDB is expected to rollback/commit recovered transactions before starting new ones. This assumption is used to skip concurrency control during recovery.",6934395
1085,False,False,2018-11-12T21:11:10Z,2018-11-12T21:13:27Z,"# Rocksdb Change Log

# 5.16.6 (10/24/2018)
### Bug Fixes
* Fix the bug that WriteBatchWithIndex's SeekForPrev() doesn't see the entries with the same key.

## 5.16.5 (10/16/2018)
### Bug Fixes
* Fix slow flush/compaction when DB contains many snapshots. The problem became noticeable to us in DBs with 100,000+ snapshots, though it will affect others at different thresholds.
* Properly set the stop key for a truncated manual CompactRange

## 5.16.4 (10/10/2018)
### Bug Fixes
* Fix corner case where a write group leader blocked due to write stall blocks other writers in queue with WriteOptions::no_slowdown set.

## 5.16.3 (10/1/2018)
### Bug Fixes
* Fix crash caused when `CompactFiles` run with `CompactionOptions::compression == CompressionType::kDisableCompressionOption`. Now that setting causes the compression type to be chosen according to the column family-wide compression options.

## 5.16.2 (9/21/2018)
### Bug Fixes
* Fix bug in partition filters with format_version=4.

## 5.16.1 (9/17/2018)
### Bug Fixes
* Remove trace_analyzer_tool from rocksdb_lib target in TARGETS file.
* Fix RocksDB Java build and tests.
* Remove sync point in Block destructor.

## 5.16.0 (8/21/2018)
### Public API Change
* `OnTableFileCreated` will now be called for empty files generated during compaction. In that case, `TableFileCreationInfo::file_path` will be ""(nil)"" and `TableFileCreationInfo::file_size` will be zero.
* Add `FlushOptions::allow_write_stall`, which controls whether Flush calls start working immediately, even if it causes user writes to stall, or will wait until flush can be performed without causing write stall (similar to `CompactRangeOptions::allow_write_stall`). Note that the default value is false, meaning we add delay to Flush calls until stalling can be avoided when possible. This is behavior change compared to previous RocksDB versions, where Flush calls didn't check if they might cause stall or not.

* The merge operands are passed to `MergeOperator::ShouldMerge` in the reversed order relative to how they were merged (passed to FullMerge or FullMergeV2) for performance reasons
* GetAllKeyVersions() to take an extra argument of `max_num_ikeys`.

### New Features
* Changes the format of index blocks by delta encoding the index values, which are the block handles. This saves the encoding of BlockHandle::offset of the non-head index entries in each restart interval. The feature is backward compatible but not forward compatible. It is disabled by default unless format_version 4 or above is used.
* Add a new tool: trace_analyzer. Trace_analyzer analyzes the trace file generated by using trace_replay API. It can convert the binary format trace file to a human readable txt file, output the statistics of the analyzed query types such as access statistics and size statistics, combining the dumped whole key space file to analyze, support query correlation analyzing, and etc. Current supported query types are: Get, Put, Delete, SingleDelete, DeleteRange, Merge, Iterator (Seek, SeekForPrev only).
* Add hash index support to data blocks, which helps reducing the cpu utilization of point-lookup operations. This feature is backward compatible with the data block created without the hash index. It is disabled by default unless BlockBasedTableOptions::data_block_index_type is set to data_block_index_type = kDataBlockBinaryAndHash.

### Bug Fixes
* Fix a bug in misreporting the estimated partition index size in properties block.
* Avoid creating empty SSTs and subsequently deleting them in certain cases during compaction.",6934395
1086,False,False,2018-09-13T17:25:20Z,2018-09-14T17:21:43Z,"# Rocksdb Change Log
### 5.15.10 (9/13/2018)
### Bug Fixes
* Fix RocksDB Java build and tests.

### 5.15.9 (9/4/2018)
### Bug Fixes
* Fix compilation errors on OS X clang due to '-Wsuggest-override'.

## 5.15.8 (8/31/2018)
### Bug Fixes
* Further avoid creating empty SSTs and subsequently deleting them during compaction.

## 5.15.7 (8/24/2018)
### Bug Fixes
* Avoid creating empty SSTs and subsequently deleting them in certain cases during compaction.

## 5.15.6 (8/21/2018)
### Public API Change
* The merge operands are passed to `MergeOperator::ShouldMerge` in the reversed order relative to how they were merged (passed to FullMerge or FullMergeV2) for performance reasons

## 5.15.5 (8/16/2018)
### Bug Fixes
* Fix VerifyChecksum() API not preserving options

## 5.15.4 (8/11/2018)
### Bug Fixes
* Fix a bug caused by not generating OnTableFileCreated() notification for a 0-byte SST.

## 5.15.3 (8/10/2018)
### Bug Fixes
* Fix a bug in misreporting the estimated partition index size in properties block.

## 5.15.2 (8/9/2018)
### Bug Fixes
* Return correct usable_size for BlockContents.

## 5.15.1 (8/1/2018)
### Bug Fixes
* Prevent dereferencing invalid STL iterators when there are range tombstones in ingested files.

## 5.15.0 (7/17/2018)
### Public API Change
* Remove managed iterator. ReadOptions.managed is not effective anymore.
* For bottommost_compression, a compatible CompressionOptions is added via `bottommost_compression_opts`. To keep backward compatible, a new boolean `enabled` is added to CompressionOptions. For compression_opts, it will be always used no matter what value of `enabled` is. For bottommost_compression_opts, it will only be used when user set `enabled=true`, otherwise, compression_opts will be used for bottommost_compression as default.
* With LRUCache, when high_pri_pool_ratio > 0, midpoint insertion strategy will be enabled to put low-pri items to the tail of low-pri list (the midpoint) when they first inserted into the cache. This is to make cache entries never get hit age out faster, improving cache efficiency when large background scan presents.
* For users of `Statistics` objects created via `CreateDBStatistics()`, the format of the string returned by its `ToString()` method has changed.
* The ""rocksdb.num.entries"" table property no longer counts range deletion tombstones as entries.

### New Features
* Changes the format of index blocks by storing the key in their raw form rather than converting them to InternalKey. This saves 8 bytes per index key. The feature is backward compatbile but not forward compatible. It is disabled by default unless format_version 3 or above is used.
* Avoid memcpy when reading mmap files with OpenReadOnly and max_open_files==-1.
* Support dynamically changing `ColumnFamilyOptions::ttl` via `SetOptions()`.
* Add a new table property, ""rocksdb.num.range-deletions"", which counts the number of range deletion tombstones in the table.
* Improve the performance of iterators doing long range scans by using readahead, when using direct IO.
* pin_top_level_index_and_filter (default true) in BlockBasedTableOptions can be used in combination with cache_index_and_filter_blocks to prefetch and pin the top-level index of partitioned index and filter blocks in cache. It has no impact when cache_index_and_filter_blocks is false.

### Bug Fixes
* Fix deadlock with enable_pipelined_write=true and max_successive_merges > 0
* Check conflict at output level in CompactFiles.
* Fix corruption in non-iterator reads when mmap is used for file reads
* Fix bug with prefix search in partition filters where a shared prefix would be ignored from the later partitions. The bug could report an eixstent key as missing. The bug could be triggered if prefix_extractor is set and partition filters is enabled.
* Change default value of `bytes_max_delete_chunk` to 0 in NewSstFileManager() as it doesn't work well with checkpoints.
* Fix a bug caused by not copying the block trailer with compressed SST file, direct IO, prefetcher and no compressed block cache.
* Fix write can stuck indefinitely if enable_pipelined_write=true. The issue exists since pipelined write was introduced in 5.5.0.",6934395
1087,False,False,2018-08-22T00:13:10Z,2018-08-26T20:33:52Z,"## 5.14.3 (8/21/2018)
### Public API Change
* The merge operands are passed to `MergeOperator::ShouldMerge` in the reversed order relative to how they were merged (passed to FullMerge or FullMergeV2) for performance reasons
### Bug Fixes
* Fixes DBImpl::FindObsoleteFiles() calling GetChildren() on the same path",6934395
1088,False,False,2018-08-22T00:13:10Z,2018-08-22T00:37:35Z,"## 5.14.3 (8/21/2018)
### Public API Change
* The merge operands are passed to `MergeOperator::ShouldMerge` in the reversed order relative to how they were merged (passed to FullMerge or FullMergeV2) for performance reasons
### Bug Fixes
* Fixes DBImpl::FindObsoleteFiles() calling GetChildren() on the same path",6934395
1089,False,False,2018-07-04T17:04:41Z,2018-07-04T17:06:35Z,"## 5.14.2 (7/3/2018)
### Bug Fixes
* Change default value of `bytes_max_delete_chunk` to 0 in NewSstFileManager() as it doesn't work well with checkpoints.
* Set DEBUG_LEVEL=0 for RocksJava Mac Release build.

## 5.14.1 (6/20/2018)
### Bug Fixes
* Fix block-based table reader pinning blocks throughout its lifetime, causing memory usage increase.
* Fix bug with prefix search in partition filters where a shared prefix would be ignored from the later partitions. The bug could report an eixstent key as missing. The bug could be triggered if prefix_extractor is set and partition filters is enabled.

## 5.14.0 (5/16/2018)
### Public API Change
* Add a BlockBasedTableOption to align uncompressed data blocks on the smaller of block size or page size boundary, to reduce flash reads by avoiding reads spanning 4K pages.
* The background thread naming convention changed (on supporting platforms) to ""rocksdb:<thread pool priority><thread number>"", e.g., ""rocksdb:low0"".
* Add a new ticker stat rocksdb.number.multiget.keys.found to count number of keys successfully read in MultiGet calls
* Touch-up to write-related counters in PerfContext. New counters added: write_scheduling_flushes_compactions_time, write_thread_wait_nanos. Counters whose behavior was fixed or modified: write_memtable_time, write_pre_and_post_process_time, write_delay_time.
* Posix Env's NewRandomRWFile() will fail if the file doesn't exist.
* Now, `DBOptions::use_direct_io_for_flush_and_compaction` only applies to background writes, and `DBOptions::use_direct_reads` applies to both user reads and background reads. This conforms with Linux's `open(2)` manpage, which advises against simultaneously reading a file in buffered and direct modes, due to possibly undefined behavior and degraded performance.
* Iterator::Valid() always returns false if !status().ok(). So, now when doing a Seek() followed by some Next()s, there's no need to check status() after every operation.
* Iterator::Seek()/SeekForPrev()/SeekToFirst()/SeekToLast() always resets status().

### New Features
* Introduce TTL for level compaction so that all files older than ttl go through the compaction process to get rid of old data.
* TransactionDBOptions::write_policy can be configured to enable WritePrepared 2PC transactions. Read more about them in the wiki.
* Add DB properties ""rocksdb.block-cache-capacity"", ""rocksdb.block-cache-usage"", ""rocksdb.block-cache-pinned-usage"" to show block cache usage.
* Add `Env::LowerThreadPoolCPUPriority(Priority)` method, which lowers the CPU priority of background (esp. compaction) threads to minimize interference with foreground tasks.
* Fsync parent directory after deleting a file in delete scheduler.
* In level-based compaction, if bottom-pri thread pool was setup via `Env::SetBackgroundThreads()`, compactions to the bottom level will be delegated to that thread pool.

### Bug Fixes
* Fsync after writing global seq number to the ingestion file in ExternalSstFileIngestionJob.
* Fix WAL corruption caused by race condition between user write thread and FlushWAL when two_write_queue is not set.
* Fix `BackupableDBOptions::max_valid_backups_to_open` to not delete backup files when refcount cannot be accurately determined.
* Fix memory leak when pin_l0_filter_and_index_blocks_in_cache is used with partitioned filters
* Disable rollback of merge operands in WritePrepared transactions to work around an issue in MyRocks. It can be enabled back by setting TransactionDBOptions::rollback_merge_operands to true.
* Fix bug with prefix search in partition filters where a shared prefix would be ignored from the later partitions. The bug could report an eixstent key as missing. The bug could be triggered if prefix_extractor is set and partition filters is enabled.

### Java API Changes
* Add `BlockBasedTableConfig.setBlockCache` to allow sharing a block cache across DB instances.
* Added SstFileManager to the Java API to allow managing SST files across DB instances.
",6934395
1090,False,False,2018-06-18T17:11:55Z,2018-06-18T17:15:14Z,"### Bug Fixes
* Fix regression bug of Prev() with ReadOptions.iterate_upper_bound.",6934395
1091,False,False,2018-06-18T17:08:42Z,2018-06-18T17:11:15Z,"### Bug Fixes
* Fix regression bug of Prev() with ReadOptions.iterate_upper_bound.",6934395
1092,False,False,2018-06-06T18:16:32Z,2018-06-07T17:27:00Z,"## 5.13.3 (6/6/2018)
### Bug Fixes
* Fix assertion when reading bloom filter of SST files containing range deletions but no data
",6934395
1093,False,False,2018-05-25T23:42:46Z,2018-05-25T23:43:54Z,"## 5.13.2 (5/25/2018)
### Public API Change
* Introduced `CompressionOptions::kDefaultCompressionLevel`, which is a generic way to tell RocksDB to use the compression library's default level. It is now the default value for `CompressionOptions::level`. Previously the level defaulted to -1, which gave poor compression ratios in ZSTD.

### Bug Fixes
* Fix segfault caused by object premature destruction (PR #3898)
* Fix an issue with unnecessary capture in lambda expressions (PR #3904)",6934395
1094,False,False,2018-05-14T19:14:50Z,2018-05-14T19:16:00Z,"## 5.13.1 (4/30/2018)
### New Features
* Add `Env::LowerThreadPoolCPUPriority(Priority)` method, which lowers the CPU priority of background (esp. compaction) threads to minimize interference with foreground tasks.
* Eliminate use of temporary directories in BackupEngine to improve reliability on distributed file systems.

## 5.13.0 (3/20/2018)
### Public API Change
* RocksDBOptionsParser::Parse()'s `ignore_unknown_options` argument will only be effective if the option file shows it is generated using a higher version of RocksDB than the current version.
* Remove CompactionEventListener.

### New Features
* SstFileManager now can cancel compactions if they will result in max space errors. SstFileManager users can also use SetCompactionBufferSize to specify how much space must be leftover during a compaction for auxiliary file functions such as logging and flushing.
* Avoid unnecessarily flushing in `CompactRange()` when the range specified by the user does not overlap unflushed memtables.
* If `ColumnFamilyOptions::max_subcompactions` is set greater than one, we now parallelize large manual level-based compactions.
* Add ""rocksdb.live-sst-files-size"" DB property to return total bytes of all SST files belong to the latest LSM tree.

### Bug Fixes
* Fix a leak in prepared_section_completed_ where the zeroed entries would not removed from the map.
* Fix WAL corruption caused by race condition between user write thread and backup/checkpoint thread.
* Fsync after writing global seq number to the ingestion file in ExternalSstFileIngestionJob.
* Fix memory leak when pin_l0_filter_and_index_blocks_in_cache is used with partitioned filters

### Java API Changes
* Add `BlockBasedTableConfig.setBlockCache` to allow sharing a block cache across DB instances.
",6934395
1095,False,False,2018-04-23T18:43:10Z,2018-04-23T18:47:41Z,"## 5.12.4 (4/23/2018)
### Bug Fixes
* Fix memory leak in two_level_iterator

## 5.12.3 (4/23/2018)
### Bug Fixes
* Fix memory leak when pin_l0_filter_and_index_blocks_in_cache is used with partitioned filters

## 5.12.2 (3/23/2018)
### Bug Fixes
* Fsync after writing global seq number to the ingestion file in ExternalSstFileIngestionJob.

### Java API Changes
* Add `BlockBasedTableConfig.setBlockCache` to allow sharing a block cache across DB instances.

## 5.12.1 (3/16/2018)
### Public API Change
* RocksDBOptionsParser::Parse()'s `ignore_unknown_options` argument will only be effective if the option file shows it is generated using a higher version of RocksDB than the current version.

### New Features
* Avoid unnecessarily flushing in `CompactRange()` when the range specified by the user does not overlap unflushed memtables.

### Bug Fixes
* Fix WAL corruption caused by race condition between user write thread and backup/checkpoint thread.

## 5.12.0 (2/14/2018)
### Public API Change
* Iterator::SeekForPrev is now a pure virtual method. This is to prevent user who implement the Iterator interface fail to implement SeekForPrev by mistake.
* Add `include_end` option to make the range end exclusive when `include_end == false` in `DeleteFilesInRange()`.
* Add `CompactRangeOptions::allow_write_stall`, which makes `CompactRange` start working immediately, even if it causes user writes to stall. The default value is false, meaning we add delay to `CompactRange` calls until stalling can be avoided when possible. Note this delay is not present in previous RocksDB versions.
* Creating checkpoint with empty directory now returns `Status::InvalidArgument`; previously, it returned `Status::IOError`.
* Adds a BlockBasedTableOption to turn off index block compression.
* Close() method now returns a status when closing a db.

### New Features
* Improve the performance of iterators doing long range scans by using readahead.
* Add new function `DeleteFilesInRanges()` to delete files in multiple ranges at once for better performance.
* FreeBSD build support for RocksDB and RocksJava.
* Improved performance of long range scans with readahead.
* Updated to and now continuously tested in Visual Studio 2017.

### Bug Fixes
* Fix `DisableFileDeletions()` followed by `GetSortedWalFiles()` to not return obsolete WAL files that `PurgeObsoleteFiles()` is going to delete.
* Fix Handle error return from WriteBuffer() during WAL file close and DB close.
* Fix advance reservation of arena block addresses.
* Fix handling of empty string as checkpoint directory.",6934395
1096,False,False,2018-04-03T23:45:33Z,2018-04-03T23:47:31Z,"## 5.12.2 (3/23/2018)
### Bug Fixes
* Fsync after writing global seq number to the ingestion file in ExternalSstFileIngestionJob.

### Java API Changes
* Add `BlockBasedTableConfig.setBlockCache` to allow sharing a block cache across DB instances.

## 5.12.1 (3/16/2018)
### Public API Change
* RocksDBOptionsParser::Parse()'s `ignore_unknown_options` argument will only be effective if the option file shows it is generated using a higher version of RocksDB than the current version.

### New Features
* Avoid unnecessarily flushing in `CompactRange()` when the range specified by the user does not overlap unflushed memtables.

### Bug Fixes
* Fix WAL corruption caused by race condition between user write thread and backup/checkpoint thread.

## 5.12.0 (2/14/2018)
### Public API Change
* Iterator::SeekForPrev is now a pure virtual method. This is to prevent user who implement the Iterator interface fail to implement SeekForPrev by mistake.
* Add `include_end` option to make the range end exclusive when `include_end == false` in `DeleteFilesInRange()`.
* Add `CompactRangeOptions::allow_write_stall`, which makes `CompactRange` start working immediately, even if it causes user writes to stall. The default value is false, meaning we add delay to `CompactRange` calls until stalling can be avoided when possible. Note this delay is not present in previous RocksDB versions.
* Creating checkpoint with empty directory now returns `Status::InvalidArgument`; previously, it returned `Status::IOError`.
* Adds a BlockBasedTableOption to turn off index block compression.
* Close() method now returns a status when closing a db.

### New Features
* Improve the performance of iterators doing long range scans by using readahead.
* Add new function `DeleteFilesInRanges()` to delete files in multiple ranges at once for better performance.
* FreeBSD build support for RocksDB and RocksJava.
* Improved performance of long range scans with readahead.
* Updated to and now continuously tested in Visual Studio 2017.

### Bug Fixes
* Fix `DisableFileDeletions()` followed by `GetSortedWalFiles()` to not return obsolete WAL files that `PurgeObsoleteFiles()` is going to delete.
* Fix Handle error return from WriteBuffer() during WAL file close and DB close.
* Fix advance reservation of arena block addresses.
* Fix handling of empty string as checkpoint directory.",6934395
1097,False,False,2018-03-12T18:51:06Z,2018-03-12T18:56:46Z,"## 5.11.2 (02/24/2018)
### Bug Fixes
* Fix bug in iterator readahead causing blocks to incorrectly be considered truncated (corrupted).

## 5.11.1 (02/22/2018)
### New Features
* Follow rsync-style naming convention for BackupEngine tempfiles. This enables some optimizations when run on GlusterFS.

## 5.11.0 (01/08/2018)
### Public API Change
* Add `autoTune` and `getBytesPerSecond()` to RocksJava RateLimiter

### New Features
* Add a new histogram stat called rocksdb.db.flush.micros for memtable flush.
* Add ""--use_txn"" option to use transactional API in db_stress.
* Disable onboard cache for compaction output in Windows platform.
* Improve the performance of iterators doing long range scans by using readahead.

### Bug Fixes
* Fix a stack-use-after-scope bug in ForwardIterator.
* Fix builds on platforms including Linux, Windows, and PowerPC.
* Fix buffer overrun in backup engine for DBs with huge number of files.
* Fix a mislabel bug for bottom-pri compaction threads.
* Fix DB::Flush() keep waiting after flush finish under certain condition.",6934395
1098,False,False,2018-03-12T18:51:06Z,2018-03-12T18:52:33Z,"## 5.11.2 (02/24/2018)
### Bug Fixes
* Fix bug in iterator readahead causing blocks to incorrectly be considered truncated (corrupted).

## 5.11.1 (02/22/2018)
### New Features
* Follow rsync-style naming convention for BackupEngine tempfiles. This enables some optimizations when run on GlusterFS.

## 5.11.0 (01/08/2018)
### Public API Change
* Add `autoTune` and `getBytesPerSecond()` to RocksJava RateLimiter

### New Features
* Add a new histogram stat called rocksdb.db.flush.micros for memtable flush.
* Add ""--use_txn"" option to use transactional API in db_stress.
* Disable onboard cache for compaction output in Windows platform.
* Improve the performance of iterators doing long range scans by using readahead.

### Bug Fixes
* Fix a stack-use-after-scope bug in ForwardIterator.
* Fix builds on platforms including Linux, Windows, and PowerPC.
* Fix buffer overrun in backup engine for DBs with huge number of files.
* Fix a mislabel bug for bottom-pri compaction threads.
* Fix DB::Flush() keep waiting after flush finish under certain condition.",6934395
1099,False,False,2018-03-08T22:53:40Z,2018-03-12T17:33:18Z,"## 5.11.2 (02/24/2018)
### Bug Fixes
* Fix bug in iterator readahead causing blocks to incorrectly be considered truncated (corrupted).

## 5.11.1 (02/22/2018)
### New Features
* Follow rsync-style naming convention for BackupEngine tempfiles. This enables some optimizations when run on GlusterFS.

## 5.11.0 (01/08/2018)
### Public API Change
* Add `autoTune` and `getBytesPerSecond()` to RocksJava RateLimiter

### New Features
* Add a new histogram stat called rocksdb.db.flush.micros for memtable flush.
* Add ""--use_txn"" option to use transactional API in db_stress.
* Disable onboard cache for compaction output in Windows platform.
* Improve the performance of iterators doing long range scans by using readahead.

### Bug Fixes
* Fix a stack-use-after-scope bug in ForwardIterator.
* Fix builds on platforms including Linux, Windows, and PowerPC.
* Fix buffer overrun in backup engine for DBs with huge number of files.
* Fix a mislabel bug for bottom-pri compaction threads.
* Fix DB::Flush() keep waiting after flush finish under certain condition.",6934395
1100,False,False,2018-03-08T22:53:40Z,2018-03-12T17:30:43Z,"## 5.11.2 (02/24/2018)
### Bug Fixes
* Fix bug in iterator readahead causing blocks to incorrectly be considered truncated (corrupted).

## 5.11.1 (02/22/2018)
### New Features
* Follow rsync-style naming convention for BackupEngine tempfiles. This enables some optimizations when run on GlusterFS.

## 5.11.0 (01/08/2018)
### Public API Change
* Add `autoTune` and `getBytesPerSecond()` to RocksJava RateLimiter

### New Features
* Add a new histogram stat called rocksdb.db.flush.micros for memtable flush.
* Add ""--use_txn"" option to use transactional API in db_stress.
* Disable onboard cache for compaction output in Windows platform.
* Improve the performance of iterators doing long range scans by using readahead.

### Bug Fixes
* Fix a stack-use-after-scope bug in ForwardIterator.
* Fix builds on platforms including Linux, Windows, and PowerPC.
* Fix buffer overrun in backup engine for DBs with huge number of files.
* Fix a mislabel bug for bottom-pri compaction threads.
* Fix DB::Flush() keep waiting after flush finish under certain condition.",6934395
1101,False,False,2018-03-01T19:16:05Z,2018-03-01T19:17:55Z,,6934395
1102,False,False,2018-03-01T19:16:05Z,2018-03-01T19:17:09Z,"## 5.10.4 (02/22/2018)
### New Features
* Follow rsync-style naming convention for BackupEngine tempfiles. This enables some optimizations when run on GlusterFS.

### Bug fixes
* Fix regression of Java build break on Windows.

## 5.10.3 (02/21/2018)
### Bug fixes
* Fix build break regression using gcc-7
* Direct I/O writable file should do fsync in Close()

### New Features
* Add rocksdb.iterator.internal-key property

## 5.10.1 (01/18/2018)
### Bug Fixes
* Fix DB::Flush() keep waiting after flush finish under certain condition.

## 5.10.0 (12/11/2017)
### Public API Change
* When running `make` with environment variable `USE_SSE` set and `PORTABLE` unset, will use all machine features available locally. Previously this combination only compiled SSE-related features.

### New Features
* CRC32C is now using the 3-way pipelined SSE algorithm `crc32c_3way` on supported platforms to improve performance. The system will choose to use this algorithm on supported platforms automatically whenever possible. If PCLMULQDQ is not supported it will fall back to the old Fast_CRC32 algorithm.
* Provide lifetime hints when writing files on Linux. This reduces hardware write-amp on storage devices supporting multiple streams.
* Add a DB stat, `NUMBER_ITER_SKIP`, which returns how many internal keys were skipped during iterations (e.g., due to being tombstones or duplicate versions of a key).
* Add PerfContext counters, `key_lock_wait_count` and `key_lock_wait_time`, which measure the number of times transactions wait on key locks and total amount of time waiting.

### Bug Fixes
* Fix IOError on WAL write doesn't propagate to write group follower
* Make iterator invalid on merge error.
* Fix performance issue in `IngestExternalFile()` affecting databases with large number of SST files.
* Fix possible corruption to LSM structure when `DeleteFilesInRange()` deletes a subset of files spanned by a `DeleteRange()` marker.
",6934395
1103,False,False,2018-02-21T23:12:10Z,2018-02-21T23:34:57Z,,6934395
1104,False,False,2018-02-21T23:12:10Z,2018-02-21T23:34:15Z,"## 5.10.3 (02/21/2018)
### Bug fixes
* Fix build break regression using gcc-7
* Direct I/O writable file should do fsync in Close()

### New Features
* Add rocksdb.iterator.internal-key property

## 5.10.1 (01/18/2018)
### Bug Fixes
* Fix DB::Flush() keep waiting after flush finish under certain condition.

## 5.10.0 (12/11/2017)
### Public API Change
* When running `make` with environment variable `USE_SSE` set and `PORTABLE` unset, will use all machine features available locally. Previously this combination only compiled SSE-related features.

### New Features
* CRC32C is now using the 3-way pipelined SSE algorithm `crc32c_3way` on supported platforms to improve performance. The system will choose to use this algorithm on supported platforms automatically whenever possible. If PCLMULQDQ is not supported it will fall back to the old Fast_CRC32 algorithm.
* Provide lifetime hints when writing files on Linux. This reduces hardware write-amp on storage devices supporting multiple streams.
* Add a DB stat, `NUMBER_ITER_SKIP`, which returns how many internal keys were skipped during iterations (e.g., due to being tombstones or duplicate versions of a key).
* Add PerfContext counters, `key_lock_wait_count` and `key_lock_wait_time`, which measure the number of times transactions wait on key locks and total amount of time waiting.

### Bug Fixes
* Fix IOError on WAL write doesn't propagate to write group follower
* Make iterator invalid on merge error.
* Fix performance issue in `IngestExternalFile()` affecting databases with large number of SST files.
* Fix possible corruption to LSM structure when `DeleteFilesInRange()` deletes a subset of files spanned by a `DeleteRange()` marker.",6934395
1105,False,False,2018-01-31T01:15:39Z,2018-02-05T18:54:24Z,"### Public API Change
* When running `make` with environment variable `USE_SSE` set and `PORTABLE` unset, will use all machine features available locally. Previously this combination only compiled SSE-related features.

### New Features
* CRC32C is now using the 3-way pipelined SSE algorithm `crc32c_3way` on supported platforms to improve performance. The system will choose to use this algorithm on supported platforms automatically whenever possible. If PCLMULQDQ is not supported it will fall back to the old Fast_CRC32 algorithm.
* Provide lifetime hints when writing files on Linux. This reduces hardware write-amp on storage devices supporting multiple streams.
* Add a DB stat, `NUMBER_ITER_SKIP`, which returns how many internal keys were skipped during iterations (e.g., due to being tombstones or duplicate versions of a key).
* Add PerfContext counters, `key_lock_wait_count` and `key_lock_wait_time`, which measure the number of times transactions wait on key locks and total amount of time waiting.

### Bug Fixes
* Fix IOError on WAL write doesn't propagate to write group follower
* Make iterator invalid on merge error.
* Fix performance issue in `IngestExternalFile()` affecting databases with large number of SST files.
* Fix possible corruption to LSM structure when `DeleteFilesInRange()` deletes a subset of files spanned by a `DeleteRange()` marker.
* Fix DB::Flush() keep waiting after flush finish under certain condition.",6934395
1106,False,False,2017-12-07T19:47:51Z,2017-12-19T02:02:35Z,"### Public API Change
* `BackupableDBOptions::max_valid_backups_to_open == 0` now means no backups will be opened during BackupEngine initialization. Previously this condition disabled limiting backups opened.
* `DBOptions::preserve_deletes` is a new option that allows one to specify that DB should not drop tombstones for regular deletes if they have sequence number larger than what was set by the new API call `DB::SetPreserveDeletesSequenceNumber(SequenceNumber seqnum)`. Disabled by default.
* API call `DB::SetPreserveDeletesSequenceNumber(SequenceNumber seqnum)` was added, users who wish to preserve deletes are expected to periodically call this function to advance the cutoff seqnum (all deletes made before this seqnum can be dropped by DB). It's user responsibility to figure out how to advance the seqnum in the way so the tombstones are kept for the desired period of time, yet are eventually processed in time and don't eat up too much space.
* `ReadOptions::iter_start_seqnum` was added; if set to something > 0 user will see 2 changes in iterators behavior 1) only keys written with sequence larger than this parameter would be returned and 2) the `Slice` returned by iter->key() now points to the the memory that keep User-oriented representation of the internal key, rather than user key. New struct `FullKey` was added to represent internal keys, along with a new helper function `ParseFullKey(const Slice& internal_key, FullKey* result);`.
* Deprecate trash_dir param in NewSstFileManager, right now we will rename deleted files to <name>.trash instead of moving them to trash directory
* Return an error on write if write_options.sync = true and write_options.disableWAL = true to warn user of inconsistent options. Previously we will not write to WAL and not respecting the sync options in this case.

### New Features
* `DBOptions::writable_file_max_buffer_size` can now be changed dynamically.
* `DBOptions::bytes_per_sync` and `DBOptions::wal_bytes_per_sync` can now be changed dynamically, `DBOptions::wal_bytes_per_sync` will flush all memtables and switch to a new WAL file.
* Support dynamic adjustment of rate limit according to demand for background I/O. It can be enabled by passing `true` to the `auto_tuned` parameter in `NewGenericRateLimiter()`. The value passed as `rate_bytes_per_sec` will still be respected as an upper-bound.
* Support dynamically changing `ColumnFamilyOptions::compaction_options_fifo`.
* Introduce `EventListener::OnStallConditionsChanged()` callback. Users can implement it to be notified when user writes are stalled, stopped, or resumed.
* Add a new db property ""rocksdb.estimate-oldest-key-time"" to return oldest data timestamp. The property is available only for FIFO compaction with compaction_options_fifo.allow_compaction = false.
* Upon snapshot release, recompact bottommost files containing deleted/overwritten keys that previously could not be dropped due to the snapshot. This alleviates space-amp caused by long-held snapshots.
* Support lower bound on iterators specified via `ReadOptions::iterate_lower_bound`.
* Support for differential snapshots (via iterator emitting the sequence of key-values representing the difference between DB state at two different sequence numbers). Supports preserving and emitting puts and regular deletes, doesn't support SingleDeletes, MergeOperator, Blobs and Range Deletes.

### Bug Fixes
* Fix a potential data inconsistency issue during point-in-time recovery. `DB:Open()` will abort if column family inconsistency is found during PIT recovery.
* Fix possible metadata corruption in databases using `DeleteRange()`.
* Fix IOError on WAL write doesn't propagate to write group follower
* Fix calculating filter partition target size
* Fix possible corruption to LSM structure when `DeleteFilesInRange()` deletes a subset of files spanned by a `DeleteRange()` marker.",6934395
1107,False,False,2017-12-07T19:47:51Z,2017-12-19T02:00:52Z,"### Public API Change
* `BackupableDBOptions::max_valid_backups_to_open == 0` now means no backups will be opened during BackupEngine initialization. Previously this condition disabled limiting backups opened.
* `DBOptions::preserve_deletes` is a new option that allows one to specify that DB should not drop tombstones for regular deletes if they have sequence number larger than what was set by the new API call `DB::SetPreserveDeletesSequenceNumber(SequenceNumber seqnum)`. Disabled by default.
* API call `DB::SetPreserveDeletesSequenceNumber(SequenceNumber seqnum)` was added, users who wish to preserve deletes are expected to periodically call this function to advance the cutoff seqnum (all deletes made before this seqnum can be dropped by DB). It's user responsibility to figure out how to advance the seqnum in the way so the tombstones are kept for the desired period of time, yet are eventually processed in time and don't eat up too much space.
* `ReadOptions::iter_start_seqnum` was added; if set to something > 0 user will see 2 changes in iterators behavior 1) only keys written with sequence larger than this parameter would be returned and 2) the `Slice` returned by iter->key() now points to the the memory that keep User-oriented representation of the internal key, rather than user key. New struct `FullKey` was added to represent internal keys, along with a new helper function `ParseFullKey(const Slice& internal_key, FullKey* result);`.
* Deprecate trash_dir param in NewSstFileManager, right now we will rename deleted files to <name>.trash instead of moving them to trash directory
* Return an error on write if write_options.sync = true and write_options.disableWAL = true to warn user of inconsistent options. Previously we will not write to WAL and not respecting the sync options in this case.

### New Features
* `DBOptions::writable_file_max_buffer_size` can now be changed dynamically.
* `DBOptions::bytes_per_sync` and `DBOptions::wal_bytes_per_sync` can now be changed dynamically, `DBOptions::wal_bytes_per_sync` will flush all memtables and switch to a new WAL file.
* Support dynamic adjustment of rate limit according to demand for background I/O. It can be enabled by passing `true` to the `auto_tuned` parameter in `NewGenericRateLimiter()`. The value passed as `rate_bytes_per_sec` will still be respected as an upper-bound.
* Support dynamically changing `ColumnFamilyOptions::compaction_options_fifo`.
* Introduce `EventListener::OnStallConditionsChanged()` callback. Users can implement it to be notified when user writes are stalled, stopped, or resumed.
* Add a new db property ""rocksdb.estimate-oldest-key-time"" to return oldest data timestamp. The property is available only for FIFO compaction with compaction_options_fifo.allow_compaction = false.
* Upon snapshot release, recompact bottommost files containing deleted/overwritten keys that previously could not be dropped due to the snapshot. This alleviates space-amp caused by long-held snapshots.
* Support lower bound on iterators specified via `ReadOptions::iterate_lower_bound`.
* Support for differential snapshots (via iterator emitting the sequence of key-values representing the difference between DB state at two different sequence numbers). Supports preserving and emitting puts and regular deletes, doesn't support SingleDeletes, MergeOperator, Blobs and Range Deletes.

### Bug Fixes
* Fix a potential data inconsistency issue during point-in-time recovery. `DB:Open()` will abort if column family inconsistency is found during PIT recovery.
* Fix possible metadata corruption in databases using `DeleteRange()`.
* Fix IOError on WAL write doesn't propagate to write group follower
* Fix calculating filter partition target size
* Fix possible corruption to LSM structure when `DeleteFilesInRange()` deletes a subset of files spanned by a `DeleteRange()` marker.",6934395
1108,False,False,2017-12-07T03:08:17Z,2017-12-07T03:29:46Z,"### Bug Fixes
* Fix possible corruption to LSM structure when `DeleteFilesInRange()` deletes a subset of files spanned by a `DeleteRange()` marker.",6934395
1109,False,False,2017-12-07T03:08:17Z,2017-12-07T03:28:39Z,"### Bug Fixes
* Fix possible corruption to LSM structure when `DeleteFilesInRange()` deletes a subset of files spanned by a `DeleteRange()` marker.",6934395
1110,False,False,2017-11-29T05:28:31Z,2017-11-29T05:32:04Z,"### Bug Fixes
* Fix IOError on WAL write doesn't propagate to write group follower",6934395
1111,False,False,2017-11-29T05:28:31Z,2017-11-29T05:31:37Z,"### Bug Fixes
* Fix IOError on WAL write doesn't propagate to write group follower",6934395
1112,False,False,2017-11-28T20:25:25Z,2017-11-29T05:27:00Z,"### Bug Fixes
* Fix IOError on WAL write doesn't propagate to write group follower",6934395
1113,False,False,2017-11-28T20:25:25Z,2017-11-29T05:26:23Z,"### Bug Fixes
* Fix IOError on WAL write doesn't propagate to write group follower",6934395
1114,False,False,2017-11-20T21:51:43Z,2017-11-20T21:54:19Z,"## 5.8.6 (11/20/2017)
### Bug Fixes
* Fixed aligned_alloc issues with Windows.

## 5.8.1 (10/23/2017)
### New Features
* Add a new db property ""rocksdb.estimate-oldest-key-time"" to return oldest data timestamp. The property is available only for FIFO compaction with compaction_options_fifo.allow_compaction = false.",6934395
1115,False,False,2017-11-20T21:51:43Z,2017-11-20T21:53:39Z,"## 5.8.6 (11/20/2017)
### Bug Fixes
* Fixed aligned_alloc issues with Windows.

## 5.8.1 (10/23/2017)
### New Features
* Add a new db property ""rocksdb.estimate-oldest-key-time"" to return oldest data timestamp. The property is available only for FIFO compaction with compaction_options_fifo.allow_compaction = false.",6934395
1116,False,False,2017-09-28T15:43:41Z,2017-09-28T15:56:04Z,"## 5.8 (09/28/2017)
### Public API Change
* Users of Statistics::getHistogramString() will see fewer histogram buckets and different bucket endpoints.
* Slice::compare and BytewiseComparator Compare no longer accept Slices containing nullptr.
* Transaction::Get and Transaction::GetForUpdate variants with PinnableSlice added.
### New Features
* Add Iterator::Refresh(), which allows users to update the iterator state so that they can avoid some initialization costs of recreating iterators.
* Replace dynamic_cast<> (except unit test) so people can choose to build with RTTI off. With make, release mode is by default built with -fno-rtti and debug mode is built without it. Users can override it by setting USE_RTTI=0 or 1.
* Universal compactions including the bottom level can be executed in a dedicated thread pool. This alleviates head-of-line blocking in the compaction queue, which cause write stalling, particularly in multi-instance use cases. Users can enable this feature via Env::SetBackgroundThreads(N, Env::Priority::BOTTOM), where N > 0.
* Allow merge operator to be called even with a single merge operand during compactions, by appropriately overriding MergeOperator::AllowSingleOperand.
* Add DB::VerifyChecksum(), which verifies the checksums in all SST files in a running DB.
Block-based table support for disabling checksums by setting BlockBasedTableOptions::checksum = kNoChecksum.
### Bug Fixes
* Fix wrong latencies in rocksdb.db.get.micros, rocksdb.db.write.micros, and rocksdb.sst.read.micros.
* Fix incorrect dropping of deletions during intra-L0 compaction.
* Fix transient reappearance of keys covered by range deletions when memtable prefix bloom filter is enabled.
* Fix potentially wrong file smallest key when range deletions separated by snapshot are written together.",6934395
1117,False,False,2017-08-30T06:08:32Z,2017-08-30T06:12:19Z,"## 5.7.3 (08/29/2017)
### Bug Fixes
* Fix transient reappearance of keys covered by range deletions when memtable prefix bloom filter is enabled.
* Fix potentially wrong file smallest key when range deletions separated by snapshot are written together.",6934395
1118,False,False,2017-08-30T06:08:32Z,2017-08-30T06:11:30Z,"## 5.7.3 (08/29/2017)
### Bug Fixes
* Fix transient reappearance of keys covered by range deletions when memtable prefix bloom filter is enabled.
* Fix potentially wrong file smallest key when range deletions separated by snapshot are written together.
",6934395
1119,False,False,2017-08-15T21:19:55Z,2017-08-15T21:23:22Z,"### Bug Fixes
* Fix incorrect dropping of deletions issue with FIFO compaction.
* Fix LITE build compiler error with missing abort().",6934395
1120,False,False,2017-08-15T21:19:55Z,2017-08-15T21:22:29Z,"### Bug Fixes
* Fix incorrect dropping of deletions issue with FIFO compaction.
* Fix LITE build compiler error with missing abort().",6934395
1121,False,False,2017-08-12T23:15:29Z,2017-08-12T23:23:24Z,"## 5.4.10 (08/12/2017)
### Bug Fixes
* Fix incorrect dropping of deletions during intra-L0 compaction.",6934395
1122,False,False,2017-08-12T23:15:29Z,2017-08-12T23:22:33Z,"## 5.4.10 (08/12/2017)
### Bug Fixes
* Fix incorrect dropping of deletions during intra-L0 compaction.
",6934395
1123,False,False,2017-08-12T21:42:21Z,2017-08-12T23:20:45Z,"## 5.5.6 (08/12/2017)
### Bug Fixes
* Fix incorrect dropping of deletions during intra-L0 compaction.",6934395
1124,False,False,2017-08-12T21:42:21Z,2017-08-12T23:20:17Z,"## 5.5.6 (08/12/2017)
### Bug Fixes
* Fix incorrect dropping of deletions during intra-L0 compaction.",6934395
1125,False,False,2017-08-12T21:35:35Z,2017-08-12T23:18:34Z,"## 5.6.2 (08/12/2017)
### Bug Fixes
* Fix incorrect dropping of deletions during intra-L0 compaction.",6934395
1126,False,False,2017-08-12T21:35:35Z,2017-08-12T23:17:54Z,"## 5.6.2 (08/12/2017)
### Bug Fixes
* Fix incorrect dropping of deletions during intra-L0 compaction.
",6934395
1127,False,False,2017-08-12T01:12:38Z,2017-08-12T02:12:47Z,"## 5.7.1 (08/12/2017)
### Bug Fixes
* Fix incorrect dropping of deletions during intra-L0 compaction.",6934395
1128,False,False,2017-08-12T02:09:12Z,2017-08-12T02:11:58Z,"## 5.7.1 (08/12/2017)
### Bug Fixes
* Fix incorrect dropping of deletions during intra-L0 compaction.",6934395
1129,False,False,2017-07-25T17:11:29Z,2017-07-25T17:15:35Z,"## 5.6.1 (07/25/2017)
### Bug Fixes
* Fix lite build.

## 5.6.0 (06/06/2017)
### Public API Change
* Scheduling flushes and compactions in the same thread pool is no longer supported by setting `max_background_flushes=0`. Instead, users can achieve this by configuring their high-pri thread pool to have zero threads.
* Replace `Options::max_background_flushes`, `Options::max_background_compactions`, and `Options::base_background_compactions` all with `Options::max_background_jobs`, which automatically decides how many threads to allocate towards flush/compaction.
* options.delayed_write_rate by default take the value of options.rate_limiter rate.
* Replace global variable `IOStatsContext iostats_context` with `IOStatsContext* get_iostats_context()`; replace global variable `PerfContext perf_context` with `PerfContext* get_perf_context()`.

### New Features
* Change ticker/histogram statistics implementations to use core-local storage. This improves aggregation speed compared to our previous thread-local approach, particularly for applications with many threads.
* Users can pass a cache object to write buffer manager, so that they can cap memory usage for memtable and block cache using one single limit.
* Flush will be triggered when 7/8 of the limit introduced by write_buffer_manager or db_write_buffer_size is triggered, so that the hard threshold is hard to hit.
* Introduce WriteOptions.low_pri. If it is true, low priority writes will be throttled if the compaction is behind.
* `DB::IngestExternalFile()` now supports ingesting files into a database containing range deletions.

### Bug Fixes
* Shouldn't ignore return value of fsync() in flush.",6934395
1130,False,False,2017-07-25T17:11:29Z,2017-07-25T17:14:22Z,5.6.1 release.,6934395
1131,False,False,2017-07-18T19:54:12Z,2017-07-18T20:53:01Z,"* Change license section of java/rocksjni.pom
* Clear up some files still mentioning PATENTS file
",6934395
1132,False,False,2017-07-18T18:41:17Z,2017-07-18T18:49:59Z,"## 5.5.4 (07/18/2017)
* Change License to Apache + GPLv2
",6934395
1133,False,False,2017-07-17T21:31:15Z,2017-07-17T21:33:08Z,5.5.3 release.,6934395
1134,False,False,2017-07-17T21:31:15Z,2017-07-17T21:32:38Z,"### Bug Fixes
* Fix LITE build error.",6934395
1135,False,False,2017-07-13T18:46:47Z,2017-07-13T19:13:35Z,5.5.2 release.,6934395
1136,False,False,2017-07-13T18:46:47Z,2017-07-13T19:10:54Z,Re-tagging 5.5.1 release. No changes from 5.5.1.,6934395
1137,False,False,2017-07-03T17:19:41Z,2017-07-03T17:20:52Z,"### New Features
* FIFO compaction to support Intra L0 compaction too with CompactionOptionsFIFO.allow_compaction=true.
* DB::ResetStats() to reset internal stats.
* Statistics::Reset() to reset user stats.
* ldb add option --try_load_options, which will open DB with its own option file.
* Introduce WriteBatch::PopSavePoint to pop the most recent save point explicitly.
* Support dynamically change `max_open_files` option via SetDBOptions()
* Added DB::CreateColumnFamilie() and DB::DropColumnFamilies() to bulk create/drop column families.
* Add debugging function `GetAllKeyVersions` to see internal versions of a range of keys.
* Support file ingestion with universal compaction style
* Support file ingestion behind with option `allow_ingest_behind`
* New option enable_pipelined_write which may improve write throughput in case writing from multiple threads and WAL enabled.

### Bug Fixes
* Fix the bug that Direct I/O uses direct reads for non-SST file
",6934395
1138,False,False,2017-07-03T17:14:14Z,2017-07-03T17:17:34Z,5.4.7 release.,6934395
1139,False,False,2017-07-03T17:16:56Z,2017-07-03T17:17:57Z,"### Bug Fixes
* Shouldn't ignore return value of fsync() in flush.

",6934395
1140,False,False,2017-05-30T21:31:07Z,2017-05-30T23:50:29Z,5.4.6 release.,6934395
1141,False,False,2017-05-30T21:31:07Z,2017-05-30T23:47:16Z,"### Bug Fixes
* Fix db_bench with lite build.",6934395
1142,False,False,2017-05-23T19:27:53Z,2017-05-26T20:44:27Z,"### Public API Change
* Support dynamically changing `stats_dump_period_sec` option via SetDBOptions().
* Added ReadOptions::max_skippable_internal_keys to set a threshold to fail a request as incomplete when too many keys are being skipped while using iterators.
* DB::Get in place of std::string accepts PinnableSlice, which avoids the extra memcpy of value to std::string in most of cases.
    * PinnableSlice releases the pinned resources that contain the value when it is destructed or when ::Reset() is called on it.
    * The old API that accepts std::string, although discouraged, is still supported.
* Replace Options::use_direct_writes with Options::use_direct_io_for_flush_and_compaction. See Direct IO wiki for details.

### New Features
* Memtable flush can be avoided during checkpoint creation if total log file size is smaller than a threshold specified by the user.
* Introduce level-based L0->L0 compactions to reduce file count, so write delays are incurred less often.
* (Experimental) Partitioning filters which creates an index on the partitions. The feature can be enabled by setting partition_filters when using kFullFilter. Currently the feature also requires two-level indexing to be enabled. Number of partitions is the same as the number of partitions for indexes, which is controlled by metadata_block_size.
* DB::ResetStats() to reset internal stats.
* Added CompactionEventListener and EventListener::OnFlushBegin interfaces.
* Added DB::CreateColumnFamilie() and DB::DropColumnFamilies() to bulk create/drop column families.
* Facility for cross-building RocksJava using Docker.

### Bug Fixes
* Fix WriteBatchWithIndex address use after scope error.
* Fix WritableFile buffer size in direct IO.
* Add prefetch to PosixRandomAccessFile in buffered io.
* Fix PinnableSlice access invalid address when row cache is enabled.
* Fix huge fallocate calls fail and make XFS unhappy.
* Fix memory alignment with logical sector size.
* Fix alignment in ReadaheadRandomAccessFile.
* Fix bias with read amplification stats (READ_AMP_ESTIMATE_USEFUL_BYTES and READ_AMP_TOTAL_READ_BYTES).
* Fix a manual / auto compaction data race.
* Fix CentOS 5 cross-building of RocksJava.
* Build and link with ZStd when creating the static RocksJava build.
* Fix snprintf's usage to be cross-platform.
* Fix build errors with blob DB.
* Fix readamp test type inconsistency.",6934395
1143,False,False,2017-05-23T19:27:53Z,2017-05-26T20:35:32Z,5.4.5 release.,6934395
1144,False,False,2017-05-19T18:15:12Z,2017-05-19T18:51:38Z,"- Fix RocksJava static build issue.
- Fix RocksJava build for IBM/PPC.",6934395
1145,False,False,2017-05-19T18:15:12Z,2017-05-19T18:50:21Z,"- Fix RocksJava static build issue.
- Fix RocksJava build for IBM/PPC.",6934395
1146,False,False,2017-05-17T17:47:09Z,2017-05-18T17:37:01Z,"- Fix Centos5 cross-building of RocksJava
- Build and link ZStd statically in RocksJava
- Facility for cross-building RocksJava using Docker.",6934395
1147,False,False,2017-05-17T17:47:09Z,2017-05-18T17:35:20Z,"- Fix Centos5 cross-building of RocksJava
- Build and link ZStd statically in RocksJava
- Facility for cross-building RocksJava using Docker.",6934395
1148,False,False,2017-05-02T23:31:54Z,2017-05-03T00:23:09Z,,6934395
1149,False,False,2017-05-02T23:31:54Z,2017-05-03T00:20:39Z,,6934395
1150,False,False,2017-04-12T18:36:12Z,2017-05-02T00:14:47Z,"### Public API Change
* Remove disableDataSync option.
* Remove timeout_hint_us option from WriteOptions. The option has been deprecated and has no effect since 3.13.0.
* Remove option min_partial_merge_operands. Partial merge operands will always be merged in flush or compaction if there are more than one.
* Remove option verify_checksums_in_compaction. Compaction will always verify checksum.

### New Features
* Memtable flush can be avoided during checkpoint creation if total log file size is smaller than a threshold specified by the user.

### Bug Fixes
* Fix the bug that iterator may skip keys",6934395
1151,False,False,2017-04-12T18:36:12Z,2017-05-02T00:10:04Z,,6934395
1152,False,False,2017-03-15T21:30:21Z,2017-03-27T17:29:18Z,,6934395
1153,False,False,2017-03-15T21:30:21Z,2017-03-22T21:15:26Z,"### Public API Change
* NewLRUCache() will determine number of shard bits automatically based on capacity, if the user doesn't pass one. This also impacts the default block cache when the user doesn't explict provide one.
* Change the default of delayed slowdown value to 16MB/s and further increase the L0 stop condition to 36 files.
* (Experimental) Two-level indexing that partition the index and creates a 2nd level index on the partitions. The feature can be enabled by setting kTwoLevelIndexSearch as IndexType and configuring index_per_partition.

### New Features
* Added new overloaded function GetApproximateSizes that allows to specify if memtable stats should be computed only without computing SST files' stats approximations.
* Added new function GetApproximateMemTableStats that approximates both number of records and size of memtables.

### Bug Fixes
* RangeSync() should work if ROCKSDB_FALLOCATE_PRESENT is not set
* Fix wrong results in a data race case in Get()
* Some fixes related to 2PC.
* Fix several bugs in Direct I/O supports.
* Fix a regression bug which can cause Seek() to miss some keys if the return key has been updated many times after the snapshot which is used by the iterator.",6934395
1154,False,False,2017-02-25T00:25:43Z,2017-02-25T00:33:03Z,"### Bug fixes
- Fixed the bug of IO Error when `compaction_readahead_size > 0` in direct I/O
- Fixed the bug of file size mismatch between MANIFEST and real size in direct I/O
- Fix OSX build break after the fallocate change
",6934395
1155,False,False,2017-02-07T21:32:48Z,2017-02-07T22:03:16Z,"### Public API Change
- Support dynamically change `delete_obsolete_files_period_micros` option via SetDBOptions().
- Added EventListener::OnExternalFileIngested which will be called when IngestExternalFile() add a file successfully.
- BackupEngine::Open and BackupEngineReadOnly::Open now always return error statuses matching those of the backup Env.

### Bug Fixes
- Fix the bug that if 2PC is enabled, checkpoints may loss some recent transactions.
- When file copying is needed when creating checkpoints or bulk loading files, fsync the file after the file copying.
",6934395
1156,False,False,2017-01-18T21:25:32Z,2017-01-18T22:23:10Z,"### Bug fixes
- Fixed DeleteRange corruption issue in certain compaction cases
",6934395
1157,False,False,2017-01-06T18:43:45Z,2017-01-06T19:04:34Z,"### Public API Change
- Options::max_bytes_for_level_multiplier is now a double along with all getters and setters.
- Support dynamically change `delayed_write_rate` and `max_total_wal_size` options via SetDBOptions().
- Introduce DB::DeleteRange for optimized deletion of large ranges of contiguous keys.
- Support dynamically change `delayed_write_rate` option via SetDBOptions().
- Options::allow_concurrent_memtable_write and Options::enable_write_thread_adaptive_yield are now true by default.
- Remove Tickers::SEQUENCE_NUMBER to avoid confusion if statistics object is shared among RocksDB instance. Alternatively DB::GetLatestSequenceNumber() can be used to get the same value.
- Options.level0_stop_writes_trigger default value changes from 24 to 32.
- New compaction filter API: CompactionFilter::FilterV2(). Allows to drop ranges of keys.
- Removed flashcache support.
- DB::AddFile() is deprecated and is replaced with DB::IngestExternalFile(). DB::IngestExternalFile() remove all the restrictions that existed for DB::AddFile.

### New Features
- Add avoid_flush_during_shutdown option, which speeds up DB shutdown by not flushing unpersisted data (i.e. with disableWAL = true). Unpersisted data will be lost. The options is dynamically changeable via SetDBOptions().
- Add memtable_insert_with_hint_prefix_extractor option. The option is mean to reduce CPU usage for inserting keys into memtable, if keys can be group by prefix and insert for each prefix are sequential or almost sequential. See include/rocksdb/options.h for more details.
- Add LuaCompactionFilter in utilities.  This allows developers to write compaction filters in Lua.  To use this feature, LUA_PATH needs to be set to the root directory of Lua.
- No longer populate ""LATEST_BACKUP"" file in backup directory, which formerly contained the number of the latest backup. The latest backup can be determined by finding the highest numbered file in the ""meta/"" subdirectory.
",6934395
1158,False,False,2016-12-20T08:41:31Z,2016-12-12T21:21:45Z,"We have skipped releasing 4.12.x and went directly to 4.13.5

## 4.13.5

### Public API Change
- Fix a regression in compaction performance.
- Disallow calling IngestExternalFile() on a dropped column family.
- Add EventListener::OnExternalFileIngested() event that will be called for files that are successfully ingested.

## 4.13.4

### Public API Change
- Removed flashcache support.

## 4.13.0 (10/18/2016)

### Public API Change
- DB::GetOptions() reflect dynamic changed options (i.e. through DB::SetOptions()) and return copy of options instead of reference.
- Added Statistics::getAndResetTickerCount().

### New Features
- Add DB::SetDBOptions() to dynamic change base_background_compactions and max_background_compactions.
- Added Iterator::SeekForPrev(). This new API will seek to the last key that is less than or equal to the target key.

## 4.12.0 (9/12/2016)

### Public API Change
- CancelAllBackgroundWork() flushes all memtables for databases containing writes that have bypassed the WAL (writes issued with WriteOptions::disableWAL=true) before shutting down background threads.
- Merge options source_compaction_factor, max_grandparent_overlap_bytes and expanded_compaction_factor into max_compaction_bytes.
- Remove ImmutableCFOptions.
- Add a compression type ZSTD, which can work with ZSTD 0.8.0 or up. Still keep ZSTDNotFinal for compatibility reasons.

### New Features
- Introduce NewClockCache, which is based on CLOCK algorithm with better concurrent performance in some cases. It can be used to replace the default LRU-based block cache and table cache. To use it, RocksDB need to be linked with TBB lib.
- Change ticker/histogram statistics implementations to accumulate data in thread-local storage, which improves CPU performance by reducing cache coherency costs. Callers of CreateDBStatistics do not need to change anything to use this feature.
- Block cache mid-point insertion, where index and filter block are inserted into LRU block cache with higher priority. The feature can be enabled by setting BlockBasedTableOptions::cache_index_and_filter_blocks_with_high_priority to true and high_pri_pool_ratio > 0 when creating NewLRUCache.
",6934395
1159,False,False,2016-09-28T02:42:17Z,2016-09-28T17:10:06Z,"We abandoned release candidates 4.10.x and directly go to 4.11.2 from 4.9, to make sure the latest release is stable. In 4.11.2, we fixed several data corruption related bugs in 4.9.0.

## 4.11.2 (9/15/2016)

### Bug fixes
- Segfault when failing to open an SST file for read-ahead iterators.
- WAL without data for all CFs is not deleted after recovery.

## 4.11.1 (8/30/2016)

### Bug Fixes
- Mitigate the regression bug of deadlock condition during recovery when options.max_successive_merges hits.
- Fix data race condition related to hash index in block based table when putting indexes in the block cache.

## 4.11.0 (8/1/2016)

### Public API Change
- options.memtable_prefix_bloom_huge_page_tlb_size => memtable_huge_page_size. When it is set, RocksDB will try to allocate memory from huge page for memtable too, rather than just memtable bloom filter.

### New Features
- A tool to migrate DB after options change. See include/rocksdb/utilities/option_change_migration.h.
- Add ReadOptions.background_purge_on_iterator_cleanup. If true, we avoid file deletion when destorying iterators.

## 4.10.0 (7/5/2016)

### Public API Change
- options.memtable_prefix_bloom_bits changes to options.memtable_prefix_bloom_bits_ratio and deprecate options.memtable_prefix_bloom_probes
- enum type CompressionType and PerfLevel changes from char to unsigned char. Value of all PerfLevel shift by one.
- Deprecate options.filter_deletes.

### New Features
- Add avoid_flush_during_recovery option.
- Add a read option background_purge_on_iterator_cleanup to avoid deleting files in foreground when destroying iterators. Instead, a job is scheduled in high priority queue and would be executed in a separate background thread.
- RepairDB support for column families. RepairDB now associates data with non-default column families using information embedded in the SST/WAL files (4.7 or later). For data written by 4.6 or earlier, RepairDB associates it with the default column family.
- Add options.write_buffer_manager which allows users to control total memtable sizes across multiple DB instances.
",6934395
1160,False,False,2016-07-26T18:13:22Z,2016-08-17T17:58:29Z,"### Public API changes
- Add bottommost_compression option, This option can be used to set a specific compression algorithm for the bottommost level (Last level containing files in the DB).
- Introduce CompactionJobInfo::compression, This field state the compression algorithm used to generate the output files of the compaction.
- Deprecate BlockBaseTableOptions.hash_index_allow_collision=false
- Deprecate options builder (GetOptions()).

### New Features
- Introduce NewSimCache() in rocksdb/utilities/sim_cache.h. This function creates a block cache that is able to give simulation results (mainly hit rate) of simulating block behavior with a configurable cache size.
",6934395
1161,False,False,2016-07-06T21:35:32Z,2016-07-26T21:36:24Z,"### Public API Change
- Allow preset compression dictionary for improved compression of block-based tables. This is supported for zlib, zstd, and lz4. The compression dictionary's size is configurable via CompressionOptions::max_dict_bytes.
- Delete deprecated classes for creating backups (BackupableDB) and restoring from backups (RestoreBackupableDB). Now, BackupEngine should be used for creating backups, and BackupEngineReadOnly should be used for restorations. For more details, see https://github.com/facebook/rocksdb/wiki/How-to-backup-RocksDB%3F
- Expose estimate of per-level compression ratio via DB property: ""rocksdb.compression-ratio-at-levelN"".
  Added EventListener::OnTableFileCreationStarted. EventListener::OnTableFileCreated will be called on failure case. User can check creation status via TableFileCreationInfo::status.

### New Features
- Add ReadOptions::readahead_size. If non-zero, NewIterator will create a new table reader which performs reads of the given size.
",6934395
1162,False,False,2016-05-26T23:05:04Z,2016-05-31T19:16:36Z,"### Public API Changes
- Change default of BlockBasedTableOptions.format_version to 2. It means default DB created by 4.6 or up cannot be opened by RocksDB version 3.9 or earlier.
- Added strict_capacity_limit option to NewLRUCache. If the flag is set to true, insert to cache will fail if no enough capacity can be free. Signature of Cache::Insert() is updated accordingly.
- Tickers [NUMBER_DB_NEXT, NUMBER_DB_PREV, NUMBER_DB_NEXT_FOUND, NUMBER_DB_PREV_FOUND, ITER_BYTES_READ] are not updated immediately. The are updated when the Iterator is deleted.
- Add monotonically increasing counter (DB property ""rocksdb.current-super-version-number"") that increments upon any change to the LSM tree.

### New Features
- Add CompactionPri::kMinOverlappingRatio, a compaction picking mode friendly to write amplification.
- Deprecate Iterator::IsKeyPinned() and replace it with Iterator::GetProperty() with prop_name=""rocksdb.iterator.is.key.pinned""
",6934395
1163,False,False,2016-04-25T23:05:08Z,2016-04-26T17:04:47Z,"### Public API Changes
- Add a new perf context level between kEnableCount and kEnableTime. Level 2 now does not include timers for mutexes.
- Statistics of mutex operation durations will not be measured by default. If you want to have them enabled, you need to set Statistics::stats_level_ to kAll.
- DBOptions::delete_scheduler and NewDeleteScheduler() are removed, please use DBOptions::sst_file_manager and NewSstFileManager() instead

### New Features
- ldb tool now supports operations to non-default column families.
- Add kPersistedTier to ReadTier.  This option allows Get and MultiGet to read only the persited data and skip mem-tables if writes were done with disableWAL = true.
- Add DBOptions::sst_file_manager. Use NewSstFileManager() in include/rocksdb/sst_file_manager.h to create a SstFileManager that can be used to track the total size of SST files and control the SST files deletion rate.
",6934395
1164,False,False,2016-04-08T00:43:47Z,2016-04-12T23:15:20Z,"### New Features
- Dynamic slow-down on writes.  When slow down on writes is triggered, RocksDB will dynamically optimize the slow-down per write based on the estimated pending compaction bytes.  If the number of pending compaction bytes keeps increasing, then RocksDB will slow down on writes more to make compaction able to catch up to avoid write stall.
- Introduce CompactionJobInfo::compaction_reason, this field include the reason to trigger the compaction.
- Added a new parameter --path to ldb tool. --path accepts the name of either MANIFEST, SST or a WAL file. Either --db or --path can be used when calling ldb.

### Public API Changes
- Deprecate options.soft_rate_limit and add options.soft_pending_compaction_bytes_limit.
- If options.max_write_buffer_number > 3, writes will be slowed down when writing to the last write buffer to delay a full stop.
- Increase default options.delayed_write_rate to 2MB/s.
- Change names in CompactionPri and add a new one.
",6934395
1165,False,False,2016-03-15T20:35:22Z,2016-03-15T20:41:53Z,"### New Features
- CompactionFilter has new member function called IgnoreSnapshots which allows CompactionFilter to be called even if there are snapshots later than the key.
- RocksDB will now persist options under the same directory as the RocksDB database on successful DB::Open, CreateColumnFamily, DropColumnFamily, and SetOptions.
- Introduce LoadLatestOptions() in rocksdb/utilities/options_util.h. This function can construct the latest DBOptions / ColumnFamilyOptions used by the specified RocksDB intance.
- Introduce CheckOptionsCompatibility() in rocksdb/utilities/options_util.h. This function checks whether the input set of options is able to open the specified DB successfully.

### Public API Changes
- When options.db_write_buffer_size triggers, only the column family with the largest column family size will be flushed, not all the column families.
",6934395
1166,False,False,2016-01-29T20:49:13Z,2016-02-24T01:32:19Z,"### New Features
- Introduce CreateLoggerFromOptions(), this function create a Logger for provided DBOptions. 
- Add GetAggregatedIntProperty(), which returns the sum of the GetIntProperty of all the column families. 
- Add MemoryUtil in rocksdb/utilities/memory.h.  It currently offers a way to get the memory usage by type from a list rocksdb instances.

### Public API Changes
- CompactionFilter::Context includes information of Column Family ID
- The need-compaction hint given by TablePropertiesCollector::NeedCompact() will be persistent and recoverable after DB recovery. This introduces a breaking format change. If you use this experimental feature, including NewCompactOnDeletionCollectorFactory() in the new version, you may not be able to directly downgrade the DB back to version 4.0 or lower.
- TablePropertiesCollectorFactory::CreateTablePropertiesCollector() now takes an option Context, containing the information of column family ID for the file being written.
- Remove DefaultCompactionFilterFactory.
",6934395
1167,False,False,2015-11-17T21:52:04Z,2015-11-17T23:27:31Z,"### New Features
- Added single delete operation as a more efficient way to delete keys that have not been overwritten.
- Added experimental AddFile() to DB interface that allow users to add files created by SstFileWriter into an empty Database, see include/rocksdb/sst_file_writer.h and DB::AddFile() for more info.
- Added support for opening SST files with .ldb suffix which enables opening LevelDB databases.
- CompactionFilter now supports filtering of merge operands and merge results.

### Public API Changes
- Added SingleDelete() to the DB interface.
- Added AddFile() to DB interface.
- Added SstFileWriter class.
- CompactionFilter has a new method FilterMergeOperand() that RocksDB applies to every merge operand during compaction to decide whether to filter the operand.
- We removed CompactionFilterV2 interfaces from include/rocksdb/compaction_filter.h. The functionality was deprecated already in version 3.13.
",6934395
1168,False,False,2015-10-08T18:15:18Z,2015-11-17T19:06:42Z,"### New Features
- Added single delete operation as a more efficient way to delete keys that have not been overwritten.
- Added experimental AddFile() to DB interface that allow users to add files created by SstFileWriter into an empty Database, see include/rocksdb/sst_file_writer.h and DB::AddFile() for more info.
- Added support for opening SST files with .ldb suffix which enables opening LevelDB databases.
- CompactionFilter now supports filtering of merge operands and merge results.

### Public API Changes
- Added SingleDelete() to the DB interface.
- Added AddFile() to DB interface.
- Added SstFileWriter class.
- CompactionFilter has a new method FilterMergeOperand() that RocksDB applies to every merge operand during compaction to decide whether to filter the operand.
- We removed CompactionFilterV2 interfaces from include/rocksdb/compaction_filter.h. The functionality was deprecated already in version 3.13.
",6934395
1169,False,False,2015-10-15T22:05:20Z,2015-10-21T04:13:10Z,"### New Features
- Added support for transactions.  See include/rocksdb/utilities/transaction.h for more info.
- DB::GetProperty() now accepts ""rocksdb.aggregated-table-properties"" and ""rocksdb.aggregated-table-properties-at-levelN"", in which case it returns aggregated table properties of the target column family, or the aggregated table properties of the specified level N if the ""at-level"" version is used.
- Add compression option kZSTDNotFinalCompression for people to experiment ZSTD although its format is not finalized.
- We removed the need for LATEST_BACKUP file in BackupEngine. We still keep writing it when we create new backups (because of backward compatibility), but we don't read it anymore.

### Public API Changes
- Removed class Env::RandomRWFile and Env::NewRandomRWFile().
- Renamed DBOptions.num_subcompactions to DBOptions.max_subcompactions to make the name better match the actual functionality of the option.
- Added Equal() method to the Comparator interface that can optionally be overwritten in cases where equality comparisons can be done more efficiently than three-way comparisons.
- Previous 'experimental' OptimisticTransaction class has been replaced by Transaction class.
",6934395
1170,False,False,2015-09-01T01:05:28Z,2015-09-01T16:49:59Z,"### New Features
- RollbackToSavePoint() in WriteBatch/WriteBatchWithIndex
- Add NewCompactOnDeletionCollectorFactory() in utilities/table_properties_collectors, which allows rocksdb to mark a SST file as need-compaction when it observes at least D deletion entries in any N consecutive entries in that SST file.  Note that this feature depends on an experimental NeedCompact() API --- the result of this API will not persist after DB restart.
- Add DBOptions::delete_scheduler. Use NewDeleteScheduler() in include/rocksdb/delete_scheduler.h to create a DeleteScheduler that can be shared among multiple RocksDB instances to control the file deletion rate of SST files that exist in the first db_path.

### Public API Changes
- Deprecated WriteOptions::timeout_hint_us. We no longer support write timeout. If you really need this option, talk to us and we might consider returning it.
- Deprecated purge_redundant_kvs_while_flush option.
- Removed BackupEngine::NewBackupEngine() and NewReadOnlyBackupEngine() that were deprecated in RocksDB 3.8. Please use BackupEngine::Open() instead.
- Deprecated Compaction Filter V2. We are not aware of any existing use-cases. If you use this filter, your compile will break with RocksDB 3.13. Please let us know if you use it and we'll put it back in RocksDB 3.14.
- Env::FileExists now returns a Status instead of a boolean
- Add statistics::getHistogramString() to print detailed distribution of a histogram metric.
- Add DBOptions::skip_stats_update_on_db_open.  When it is on, DB::Open() will run faster as it skips the random reads required for loading necessary stats from SST files to optimize compaction.
",6934395
1171,False,False,2015-08-04T00:49:53Z,2015-08-05T22:22:17Z,"### New Features
- Added experimental support for optimistic transactions.  See include/rocksdb/utilities/optimistic_transaction.h for more info.
- Added a new way to report QPS from db_bench (check out --report_file and --report_interval_seconds)
- Added a cache for individual rows. See DBOptions::row_cache for more info.
- Several new features on EventListener (see include/rocksdb/listener.h):
  - OnCompationCompleted() now returns per-compaciton job statistics, defined in include/rocksdb/compaction_job_stats.h.
  - Added OnTableFileCreated() and OnTableFileDeleted().
- Add compaction_options_universal.enable_trivial_move to true, to allow trivial move while performing universal compaction. Trivial move will happen only when all the input files are non overlapping.

### Public API Changes
- EventListener::OnFlushCompleted() now passes FlushJobInfo instead of a list of parameters.
- DB::GetDbIdentity() is now a const function.  If this function is overridden in your application, be sure to also make GetDbIdentity() const to avoid compile error.
- Move listeners from ColumnFamilyOptions to DBOptions.
- Add max_write_buffer_number_to_maintain option
- DB::CompactRange()'s parameter reduce_level is changed to change_level, to allow users to move levels to lower levels if allowed. It can be used to migrate a DB from options.level_compaction_dynamic_level_bytes=false to options.level_compaction_dynamic_level_bytes.true.
- Change default value for options.compaction_filter_factory and options.compaction_filter_factory_v2 to nullptr instead of DefaultCompactionFilterFactory and DefaultCompactionFilterFactoryV2.
- If CancelAllBackgroundWork is called without doing a flush after doing loads with WAL disabled, the changes which haven't been flushed before the call to CancelAllBackgroundWork will be lost.
- WBWIIterator::Entry() now returns WriteEntry instead of `const WriteEntry&`
- options.hard_rate_limit is deprecated.
- When options.soft_rate_limit or options.level0_slowdown_writes_trigger is triggered, the way to slow down writes is changed to: write rate to DB is limited to to options.delayed_write_rate.
- DB::GetApproximateSizes() adds a parameter to allow the estimation to include data in mem table, with default to be not to include. It is now only supported in skip list mem table.
- DB::CompactRange() now accept CompactRangeOptions instead of multiple paramters. CompactRangeOptions is defined in include/rocksdb/options.h.
- CompactRange() will now skip bottommost level compaction for level based compaction if there is no compaction filter, bottommost_level_compaction is introduced in CompactRangeOptions to control when it's possbile to skip bottommost level compaction. This mean that if you want the compaction to produce a single file you need to set bottommost_level_compaction to BottommostLevelCompaction::kForce.
- Add Cache.GetPinnedUsage() to get the size of memory occupied by entries that are in use by the system.
- DB:Open() will fail if the compression specified in Options is not linked with the binary. If you see this failure, recompile RocksDB with compression libraries present on your system. Also, previously our default compression was snappy. This behavior is now changed. Now, the default compression is snappy only if it's available on the system. If it isn't we change the default to kNoCompression.
- We changed how we account for memory used in block cache. Previously, we only counted the sum of block sizes currently present in block cache. Now, we count the actual memory usage of the blocks. For example, a block of size 4.5KB will use 8KB memory with jemalloc. This might decrease your memory usage and possibly decrease performance. Increase block cache size if you see this happening after an upgrade.
- Add BackupEngineImpl.options_.max_background_operations to specify the maximum number of operations that may be performed in parallel. Add support for parallelized backup and restore.
",6934395
1172,False,False,2015-06-11T22:49:11Z,2015-06-11T22:54:52Z,"### Fixes
- Adjust the way we compensate for tombstones when choosing compactions. Previous heuristics led to pathological behavior in some cases.
- Don't let two L0->L1 compactions run in parallel (only affected through experimental feature SuggestCompactRange)
",6934395
1173,False,False,2015-06-03T17:21:52Z,2015-06-03T17:32:00Z,"Just a single change to fix the Java linking (github issue #606)
",6934395
1174,False,False,2015-05-20T01:42:17Z,2015-05-21T17:58:36Z,"### New Features
- Added a new API Cache::SetCapacity(size_t capacity) to dynamically change the maximum configured capacity of the cache. If the new capacity is less than the existing cache usage, the implementation will try to lower the usage by evicting the necessary number of elements following a strict LRU policy.
- Added an experimental API for handling flashcache devices (blacklists background threads from caching their reads) -- NewFlashcacheAwareEnv
- If universal compaction is used and options.num_levels > 1, files are compacted in upper levels with smaller files based on options.target_file_size_base. The limitation of file size when using universal compaction is greatly mitigated by using more levels. You can set num_levels = 1 to make universal compaction behave as before. If you set num_levels > 1 and want to roll back to a previous version, you need to compact all files to a big file in level 0 (by setting target_file_size_base to be large and CompactRange(<cf_handle>, nullptr, nullptr, true, 0) and reopen the DB with the same version to rewrite the manifest, and then you can open it using previous releases.
- More information about rocksdb background threads are available in Env::GetThreadList(), including the number of bytes read / written by a compaction job, mem-table size and current number of bytes written by a flush job and many more.  Check include/rocksdb/thread_status.h for more detail.

### Public API changes
- TablePropertiesCollector::AddUserKey() is added to replace TablePropertiesCollector::Add(). AddUserKey() exposes key type, sequence number and file size up to now to users.
- DBOptions::bytes_per_sync used to apply to both WAL and table files. As of 3.11 it applies only to table files. If you want to use this option to sync WAL in the background, please use wal_bytes_per_sync
",6934395
1175,False,False,2015-05-01T23:45:34Z,2015-05-04T21:23:34Z,"## Bug fixes since 3.10.1:
- Make sure RocksDB is compiled with fallocate support
- Fix possible hang in DB::Write()
- Fix a possibility of SIGSEGV in CompactRange()
",6934395
1176,False,False,2015-03-27T01:48:59Z,2015-04-03T17:28:24Z,"## 3.10.0 (4/3/2015)

### New Features
- GetThreadStatus() is now able to report detailed thread status, including:
  - Thread Operation including flush and compaction.
  - The stage of the current thread operation.
  - The elapsed time in micros since the current thread operation started.
    More information can be found in include/rocksdb/thread_status.h.  In addition, when running db_bench with --thread_status_per_interval, db_bench will also report thread status periodically.
- Changed the LRU caching algorithm so that referenced blocks (by iterators) are never evicted. This change made parameter removeScanCountLimit obsolete. Because of that NewLRUCache doesn't take three arguments anymore. table_cache_remove_scan_limit option is also removed
- By default we now optimize the compilation for the compilation platform (using -march=native). If you want to build portable binary, use 'PORTABLE=1' before the make command.
- We now allow level-compaction to place files in different paths by
  specifying them in db_paths along with the target_size.
  Lower numbered levels will be placed earlier in the db_paths and higher
  numbered levels will be placed later in the db_paths vector.
- Potentially big performance improvements if you're using RocksDB with lots of column families (100-1000)
- Added BlockBasedTableOptions.format_version option, which allows user to specify which version of block based table he wants. As a general guidline, newer versions have more features, but might not be readable by older versions of RocksDB.
- Added new block based table format (version 2), which you can enable by setting BlockBasedTableOptions.format_version = 2. This format changes how we encode size information in compressed blocks and should help with memory allocations if you're using Zlib or BZip2 compressions.
- MemEnv (env that stores data in memory) is now available in default library build. You can create it by calling NewMemEnv().
- Add SliceTransform.SameResultWhenAppended() to help users determine it is safe to apply prefix bloom/hash.
- Block based table now makes use of prefix bloom filter if it is a full fulter.
- Block based table remembers whether a whole key or prefix based bloom filter is supported in SST files. Do a sanity check when reading the file with users' configuration.
- Fixed a bug in ReadOnlyBackupEngine that deleted corrupted backups in some cases, even though the engine was ReadOnly
- options.level_compaction_dynamic_level_bytes, an experimental feature to allow RocksDB to pick dynamic base of bytes for levels. With this feature turned on, we will automatically adjust max bytes for each level. The goal of this feature is to have lower bound on size amplification. For more details, see comments in options.h. 
- Added an abstract base class WriteBatchBase for write batches
- Fixed a bug where we start deleting files of a dropped column families even if there are still live references to it

### Public API changes
- Deprecated skip_log_error_on_recovery and table_cache_remove_scan_count_limit options.
- Logger method logv with log level parameter is now virtual

### RocksJava
- Added compression per level API.
- MemEnv is now available in RocksJava via RocksMemEnv class.
- lz4 compression is now included in rocksjava static library when running `make rocksdbjavastatic`.
- Overflowing a size_t when setting rocksdb options now throws an IllegalArgumentException, which removes the necessity for a developer to catch these Exceptions explicitly.
",6934395
1177,False,False,2015-02-09T21:49:22Z,2014-12-11T18:34:41Z,"### Public API changes
- New API to create a checkpoint added. Given a directory name, creates a new
  database which is an image of the existing database.
  *New API LinkFile added to Env. If you implement your own Env class, an
  implementation of the API LinkFile will have to be provided.
- MemTableRep takes MemTableAllocator instead of Arena

### Improvements
- RocksDBLite library now becomes smaller and will be compiled with -fno-exceptions flag.
",6934395
1178,False,False,2014-11-14T19:23:00Z,2014-11-21T00:08:26Z,"# Public API changes
- BackupEngine::NewBackupEngine() was deprecated; please use BackupEngine::Open() from now on.
- BackupableDB/RestoreBackupableDB have new GarbageCollect() methods, which will clean up files from corrupt and obsolete backups.
- BackupableDB/RestoreBackupableDB have new GetCorruptedBackups() methods which list corrupt backups.

# Cleanup
- Bunch of code cleanup, some extra warnings turned on (-Wshadow, -Wshorten-64-to-32, -Wnon-virtual-dtor)

# New features
- CompactFiles and EventListener, although they are still in experimental state
- Full ColumnFamily support in RocksJava.
",6934395
1179,False,False,2014-11-07T01:07:52Z,2014-11-11T20:21:57Z,"- Introduce SetOptions() API to allow adjusting a subset of options dynamically online
- Introduce 4 new convenient functions for converting Options from string: GetColumnFamilyOptionsFromMap(), GetColumnFamilyOptionsFromString(), GetDBOptionsFromMap(), GetDBOptionsFromString()
- Remove WriteBatchWithIndex.Delete() overloads using SliceParts
- When opening a DB, if options.max_background_compactions is larger than the existing low pri pool of options.env, it will enlarge it. Similarly, options.max_background_flushes is larger than the existing high pri pool of options.env, it will enlarge it.
",6934395
1180,False,False,2014-10-30T06:45:16Z,2014-10-30T07:06:28Z,"### Bug Fixes
- Fix a corner case that causes MANIFEST corruption when RocksDB cannot open new files during the compaction but before the compaction completes RocksDB becomes able to open new files once again.

### New Features
- Allow dynamic disable / enable RocksDB auto-compaction.

### Internal Improvements
- Use fallocate(FALLOC_FL_PUNCH_HOLE) to release unused blocks at the end of file.
",6934395
1181,False,False,2014-10-15T17:57:43Z,2014-10-20T22:26:33Z,"### New features
- Support more column families without performance bottlenecks
- Provide new way of passing options to RocksDB
- Make some options dynamically changeable
- Bunch of new Java bindings APIs

### Disk format changes
- If you're using RocksDB on ARM platforms and you're using default bloom filter, there is a disk format change you need to be aware of. There are three steps you need to do when you convert to new release: 1. turn off filter policy, 2. compact the whole database, 3. turn on filter policy

### Behavior changes
- We have refactored our system of stalling writes.  Any stall-related statistics' meanings are changed. Instead of per-write stall counts, we now count stalls per-epoch, where epochs are periods between flushes and compactions. You'll find more information in our Tuning Perf Guide.
- When disableDataSync=true, we no longer sync the MANIFEST file.
- Add identity_as_first_hash property to CuckooTable. SST file needs to be rebuilt to be opened by reader properly.

### Public API changes
- Change target_file_size_base type to uint64_t from int.
- Remove allow_thread_local. This feature was proved to be stable, so we are turning it always-on.
",6934395
1182,False,False,2014-10-08T17:21:10Z,2014-10-08T17:24:25Z,"RocksDB 3.5 including one bug fix that affected deployments that are triggering manual flushes.
",6934395
1183,False,False,2014-09-03T18:32:42Z,2014-09-12T16:59:38Z,"### New Features
- Add include/utilities/write_batch_with_index.h, providing a utility class to query data out of WriteBatch when building it.
- new ReadOptions.total_order_seek to force total order seek when block-based table is built with hash index.

### Public API changes
- The Prefix Extractor used with V2 compaction filters is now passed user key to SliceTransform::Transform instead of unparsed RocksDB key.
- Move BlockBasedTable related options to BlockBasedTableOptions from Options. Change corresponding JNI interface. Options affected include: no_block_cache, block_cache, block_cache_compressed, block_size, block_size_deviation, block_restart_interval, filter_policy, whole_key_filtering. filter_policy is changed to shared_ptr from a raw pointer.
- Remove deprecated options: disable_seek_compaction and db_stats_log_interval
- OptimizeForPointLookup() takes one parameter for block cache size. It now builds hash index, bloom filter, and block cache.
",6934395
1184,False,False,2014-08-18T23:42:05Z,2014-08-28T15:32:46Z,"### New Features
- Support Multiple DB paths in universal style compactions
- Add feature of storing plain table index and bloom filter in SST file.
- CompactRange() will never output compacted files to level 0. This used to be the case when all the compaction input files were at level 0.

### Public API changes
- DBOptions.db_paths now is a vector of a DBPath structure which indicates both of path and target size
- NewPlainTableFactory instead of bunch of parameters now accepts PlainTableOptions, which is defined in include/rocksdb/table.h
- Moved include/utilities/_.h to include/rocksdb/utilities/_.h
- Statistics APIs now take uint32_t as type instead of Tickers. Also make two access functions getTickerCount and histogramData const
- Add DB property rocksdb.estimate-num-keys, estimated number of live keys in DB.
- Add DB::GetIntProperty(), which returns DB properties that are integer as uint64_t.

### Other notes
- Fixed a data race bug that might cause segment fault
- Fixed a bug of manual compaction.
",6934395
1185,False,False,2014-07-29T00:14:25Z,2014-07-29T18:15:33Z,"### New Features
- <b>JSON API prototype</b>.
- <b>Performance improvement on HashLinkList</b>:  We addressed performance outlier of HashLinkList caused by skewed bucket by switching data in the bucket from linked list to skip list. Add parameter threshold_use_skiplist in NewHashLinkListRepFactory().
- <b>More effective on storage space reclaim</b>:  RocksDB is now able to reclaim storage space more effectively during the compaction process.  This is done by compensating the size of each deletion entry by the 2X average value size, which makes compaction to be triggerred by deletion entries more easily.
- <b>TimeOut API to write</b>:  Now WriteOptions have a variable called timeout_hint_us.  With timeout_hint_us set to non-zero, any write associated with this timeout_hint_us may be aborted when it runs longer than the specified timeout_hint_us, and it is guaranteed that any write completes earlier than the specified time-out will not be aborted due to the time-out condition.
- <b>rate_limiter option</b>: We added an option that controls total throughput of flush and compaction. The throughput is specified in bytes/sec. Flush always has precedence over compaction when available bandwidth is constrained.

### Public API changes
- Removed NewTotalOrderPlainTableFactory because it is not used and implemented semantically incorrect.
",6934395
1186,False,False,2014-06-19T23:40:32Z,2014-06-27T19:13:14Z,"New Features in RocksDB 3.2:
- PlainTable now supports a new key encoding: for keys of the same prefix, the prefix is only written once. It can be enabled through encoding_type paramter of NewPlainTableFactory()
- Add AdaptiveTableFactory, which is used to convert from a DB of PlainTable to BlockBasedTabe, or vise versa. It can be created using NewAdaptiveTableFactory()

Public API changes
- We removed seek compaction as a concept from RocksDB because:
- Add two paramters to NewHashLinkListRepFactory() for logging on too many entries in a hash bucket when flushing.
- Added new option BlockBasedTableOptions::hash_index_allow_collision. When enabled, prefix hash index for block-based table will not store prefix and allow hash collision, reducing memory consumption.

All the commits: https://github.com/facebook/rocksdb/compare/3.1.fb...3.2.fb
",6934395
1187,False,False,2014-05-21T22:25:05Z,2014-05-22T17:26:17Z,"New features in RocksDB 3.1:
- Materialize hash index
- FIFO Compaction

Change LOG: https://github.com/facebook/rocksdb/blob/3.1.fb/HISTORY.md
All the commits: https://github.com/facebook/rocksdb/compare/3.0.fb...3.1.fb
",6934395
1188,False,False,2014-05-08T00:49:23Z,2014-05-19T21:24:44Z,"New features in RocksDB 3.0:
- Column Family support (https://github.com/facebook/rocksdb/wiki/Column-Families)
- Ability to use different checksum function in block based table. You can choose between crc32 and xxHash.
- ReadOptions::prefix_seek and ReadOptions::prefix are deprecated
- Full change log: https://github.com/facebook/rocksdb/blob/3.0.fb/HISTORY.md
  .
",6934395
1189,False,False,2014-04-05T00:00:25Z,2014-05-21T22:32:06Z,"RocksDB 2.8 release is mostly focused on improving performance for in-memory use cases
",6934395
1190,False,False,2018-10-17T17:30:53Z,2018-10-17T17:30:58Z,"* Fixing `setup.py` resources
* Switching to pycroptodome
* Fixing communication API
* Adding `exploits/routers/asus/asuswrt_lan_rce.py` module
* Fixing `exploits/routers/asus/infosvr_backdoor_rce.py` module
* Adding credentials used by Mirai botnet
* Fixing 3com Officeconnect RCE module
* Fixing `exploits/routers/billion/billion_5200w_rce.py` module
* Fixing `exploits/routers/cisco/catalyst_2960_rocem.py` module
* Fixing `exploits/routers/cisco/firepower_management60_rce.py` module
* Fixing `exploits/routers/dlink/dir_815_850l_rce.py` module
* Fixing `exploits/routers/multi/tcp_32764_rce.py` module
* Fixing `exploits/routers/ubiquiti/airos_6_x.py` module
* Adding `OptEncoder` option
* Fixing `use` command issue
* Adding tests `tests/exploits/cameras/cisco/test_video_surv_path_traversal.py`
* Adding tests for modules default values
* Adding tests `tests/exploits/routers/asus/test_infosvr_backdoor_rce.py`
* Adding tests `tests/exploits/routers/billion/test_billion_5200w_rce.py`
* Adding tests `tests/exploits/routers/cisco/test_firepower_management60_rce.py`
* Adding tests `tests/exploits/routers/cisco/test_secure_acs_bypass.py`
* Adding tests `tests/exploits/routers/dlink/test_dcs_930l_auth_rce.py`
* Adding tests `tests/exploits/routers/technicolor/test_tg784_authbypass.py`
* Adding tests `tests/exploits/routers/dlink/test_dsl_2730b_2780b_526b_dns_change.py`
* Fixing `exploits/routers/ipfire/ipfire_proxy_rce.py` module
* Fixing `exploits/routers/ipfire/ipfire_shellshock.py` module
* Adding `exploits/routers/linksys/eseries_themoon_rce.py` module",55058317
1191,False,False,2018-07-09T19:09:31Z,2018-07-09T19:10:05Z,"* Improving tcp communication
* Adding `encoders/python/hex` module
* Adding `encoders/perl/hex` module
* Adding `exploits/routers/mikrotik/winbox_auth_bypass_creds_disclosure` module",55058317
1192,False,False,2018-06-25T16:37:13Z,2018-06-25T16:37:47Z,"* Adding `payloads/cmd/python_bind_udp` module
* Adding `payloads/python/bind_udp` module
* Adding `payloads/python/reverse_udp` module
* Adding `payloads/cmd/python_reverse_udp` module
* Adding `payloads/python/reverse_udp` module
* Adding `payloads/cmd/php_bind_tcp` module
* Adding `payloads/php/bind_tcp` module
* Adding `payloads/cmd/awk_bind_udp` module
* Adding `tests` for payloads
* Adding `docs` for payloads
* Fixing OptBool option
* Fixing Telnet communication
* Adding `setup.py`
* Adding `tests` for udp based exploits
* Fixing `exploits/routers/zte/zxv10_rce` module
* Fixing `exploits/generic/heartbleed` module
* Adding `encoders/perl/base64` module
* Adding `encoders/php/base64` module
* Adding `encoders/php/hex` module
* Adding `encoders/python/base64` module
* Fixing `.github/ISSUE_TEMPLATE.md`
",55058317
1193,False,False,2018-06-11T07:07:28Z,2018-06-11T07:08:22Z,"* Adding `.github/ISSUE_TEMPLATE.md` template
* Adding `.github/PULL_REQUEST_TEMPLATE.md` template
* Adding documentation to `exploits/routers/dlink/dsl_2750b_rce` module
* Adding documentation to `creds` modules
* Adding `generic/upnp/ssdp_msearch` module
* Fixing `exploits/routers/multi/tcp_32764_info_disclosure` module
* Fixing `exploits/routers/multi/tcp_32764_rce` module
* Fixing readme ubuntu installation instruction
* Fixing UDP & TCP based modules
* Adding `payloads/x86/bind_tcp` payload
* Adding `payloads/x86/reverse_tcp` payload
* Adding `payloads/x64/bind_tcp` payload
* Adding `payloads/x64/reverse_tcp` payload",55058317
1194,False,False,2018-05-28T14:18:32Z,2018-05-28T17:17:36Z,"* Expand targets by adding exploits for IoT class devices e.g. cameras, printers, smart kitchen appliances.
* `payloads` modules
* `shell()` function for establishing reverse-shell connection.
* Now you can easily lookup exploits using `search` command. e.g. `search dlink`
* Supporting `requests` sessions in `http_request()`
* `Option()` validation using `validators` module 
e.g. ```foo = Option(1, ""foo"", validators=validators.integer)```
* tests has been moved out of `routersploit` directory
* Refactor of `Dockerfile`
* Add new set of default credentials
* Add vendor scanners
* Countless of fixes in numerous exploit modules.
* Numerous new exploits.",55058317
1195,False,False,2016-08-20T13:46:28Z,2016-08-20T13:47:10Z,"## New features
- Threaded support for scanners which makes them waaay faster! (see [scanners/autopwn](https://github.com/reverse-shell/routersploit/blob/master/routersploit/modules/scanners/autopwn.py) implementation for details).
",55058317
1196,False,False,2016-07-21T17:51:49Z,2016-07-21T18:12:38Z,"## New features
- Validators for exploit's options to transform its values #89 
- Adding global options (_setg_ command) #97 
- Creating new modules from template #88
- Additional sub-commands to _show_ command #87 
- ""help"" command #30 
- Tokenizer #11 
- Ctrl+C  new prompt, Ctrl+D rsf kill #90 

## Bug fixes
- Disable check in scanner module #85 
- SSHException: Channel closed #81 
- Error 104 : Connection reset by peer #75 
- Multiple minor fixes

## New modules
-   routersploit/modules/exploits/dlink/dir_300_645_815_upnp_rce.py
-   routersploit/modules/exploits/dlink/multi_hnap_rce.py
-   routersploit/modules/exploits/dlink/dcs_930l_auth_rce.py
-   routersploit/modules/exploits/dlink/dir_645_815_rce.py
-   routersploit/modules/exploits/thomson/twg850_password_disclosure.py
-   routersploit/modules/exploits/zte/f609_config_disclosure.py
-   routersploit/modules/exploits/thomson/twg849_info_disclosure.py
-   routersploit/modules/exploits/tplink/wdr740nd_wdr740n_backdoor.py
-   routersploit/modules/exploits/multi/ssh_auth_keys.py
-   routersploit/modules/exploits/tplink/wdr740nd_wdr740n_path_traversal.py
-   routersploit/modules/exploits/zte/f460_f660_backdoor.py
-   routersploit/modules/exploits/ipfire/ipfire_proxy_rce.py
-   routersploit/modules/exploits/ipfire/ipfire_shellshock.py
-   routersploit/modules/exploits/3com/3cradsl72_info_disclosure.py
-   routersploit/modules/exploits/3com/ap8760_password_disclosure.py
-   routersploit/modules/exploits/3com/imc_info_disclosure.py
-   routersploit/modules/exploits/3com/imc_path_traversal.py
-   routersploit/modules/exploits/3com/officeconnect_info_disclosure.py
-   routersploit/modules/exploits/3com/officeconnect_rce.py
-   routersploit/modules/exploits/dlink/dir_300_320_600_615_info_disclosure.py
-   routersploit/modules/exploits/2wire/4011g_5012nv_path_traversal.py
-   routersploit/modules/exploits/dlink/dsl_2640b_dns_change.py
-   routersploit/modules/exploits/dlink/dsl_2730b_2780b_526b_dns_change.py
-   routersploit/modules/exploits/dlink/dsl_2740r_dns_change.py
-   routersploit/modules/exploits/shuttle/915wm_dns_change.py
-   routersploit/modules/exploits/cisco/dpc2420_info_disclosure.py
-   routersploit/modules/exploits/cisco/ucm_info_disclosure.py
-   routersploit/modules/exploits/cisco/unified_multi_path_traversal.py
-   routersploit/modules/exploits/cisco/video_surv_path_traversal.py
-   routersploit/modules/exploits/huawei/e5331_mifi_info_disclosure.py
-   routersploit/modules/exploits/huawei/hg530_hg520b_password_disclosure.py
-   routersploit/modules/exploits/huawei/hg630a_default_creds.py
-   routersploit/modules/exploits/huawei/hg866_password_change.py
-   routersploit/modules/exploits/huawei/hg520_info_dislosure.py
-   routersploit/modules/exploits/netcore/udp_53413_rce.py
-   routersploit/modules/exploits/quantum/dxi_privkey.py
-   routersploit/modules/exploits/multi/tcp_32764_info_disclosure.py
-   routersploit/modules/exploits/multi/tcp_32764_rce.py
-   routersploit/modules/exploits/multi/heartbleed.py
",55058317
1197,False,False,2016-05-07T12:55:05Z,2016-05-07T12:55:50Z,"## New features
- Feeding `Exploit` with text file containing multiple targets definition
- Static analysis for modules #34 #56 
- `http_request()` default timeout #74 
- Verbosity level to `utils.print_*()` functions #12 
- `exit` command #19 
- Muting all the module's noise during execution of  `check()` #17 

## Bug fixes
- Interpreter line wrapping #54 
- Unexpected crash of `AutoPwnd` scanner #48 
- False positives during vulnerability scan #20 
- Multiple bug fixes for various exploits.

## New modules
- Shellshock #68 
- ZTE F660 Config Disclosure #66 
- ZTE F6XX Default root password #66 
- Misfortune Cookie Authentication Bypass #46 
- AirOS 6.x #35 
- Linksys E1500/2500 #5 
- Comtrend CT 5361T Password Disclosure vulnerability #3 
- Update of default users and default passwords lists.
",55058317
1198,False,False,2016-04-26T17:58:47Z,2016-04-26T18:07:50Z,"RouterSploit v1.0.0 Wildest Dreams
",55058317
1199,False,False,2016-04-26T17:59:43Z,2016-04-26T18:05:55Z,"Routersploit v.2.0.0 Bad Blood
",55058317
1200,False,False,2020-03-08T17:58:19Z,2020-03-08T18:00:04Z,,85126896
1201,False,False,2019-10-04T14:06:26Z,2019-10-04T14:06:27Z,"## Changelog

0a50e6d Missing dependency: github.com/karrick/godirwalk@v1.11.3 fixes #243 (#244)
4b4a3c4 version bump: v2.7.1

",85126896
1202,False,False,2019-09-30T17:35:22Z,2019-09-30T17:35:45Z,"## Changelog

0f1e543 Ignore directories in disk resolver (#241)
607219b version bump: v2.7.0

",85126896
1203,False,False,2019-08-26T01:27:11Z,2019-08-26T01:29:34Z,"## Changelog

bcc60f5 Improve file resolution with the Disk and fallback resolver (#231)
ba53cc4 Improve test cases for file resolution (#233)
b6d537d generated goreleaser
7ae8e31 generated goreleaser
8adea80 version bump: v2.5.4
6863f05 version bump: v2.6.0

",85126896
1204,False,False,2019-08-23T18:31:52Z,2019-08-23T18:32:10Z,"## Changelog

dc520c9 Revert ""box.Open: Do not call file.NewFileR when IsDir true, fix #198 (#201)"" (#217)
662c20c box.Open: Do not call file.NewFileR when IsDir true, fix #198 (#201)
012c9d5 fix: support for errcheck linter (#219)
d766515 remove gorelease deprecation warning
9966810 version bump: v2.5.3

",85126896
1205,False,False,2019-06-28T15:35:53Z,2019-06-28T15:36:32Z,"## Changelog

0e984b9 check file is not a directory when returned as a file (#214)
9eb7a3d version bump: v2.5.2

",85126896
1206,False,False,2019-06-24T18:09:46Z,2019-06-24T18:09:57Z,"## Changelog

754aff3 dep diet
e4f52d8 version bump: v1.30.1

",85126896
1207,False,False,2019-06-24T18:09:01Z,2019-06-24T18:09:13Z,"## Changelog

e41610b version bump: v2.5.1

",85126896
1208,False,False,2019-06-24T18:07:34Z,2019-06-24T18:07:44Z,"## Changelog

59bc120 version bump: v1.30.0

",85126896
1209,False,False,2019-06-24T18:06:37Z,2019-06-24T18:06:53Z,"## Changelog

bded308 dep deit (#212)
4c93d01 version bump: v2.4.0
c779ef6 version bump: v2.5.0

",85126896
1210,False,False,2019-06-14T02:32:37Z,2019-06-14T02:32:46Z,"## Changelog

4b81a88 version bump: v1.26.0

",85126896
1211,False,False,2019-06-14T02:29:56Z,2019-06-24T18:06:20Z,"## Changelog

88c258f Remove genny as a dependency (#209)
a708569 version bump: v2.4.0

",85126896
1212,False,False,2019-06-05T18:50:24Z,2019-06-05T18:50:34Z,"## Changelog

f58136c cleaning file path (#206)
dfd81c5 version bump: v2.3.2

",85126896
1213,False,False,2019-06-03T19:14:45Z,2019-06-03T19:14:55Z,"## Changelog

6afa88b adds RootsOptions to PackOptions (#208)
53c9ca9 version bump: v2.3.1

",85126896
1214,False,False,2019-06-03T19:11:28Z,2019-06-03T19:11:37Z,"## Changelog

70dc714 deprecate packr2 build/install
b129dd9 version bump: v2.3.0

",85126896
1215,False,False,2019-06-03T18:29:19Z,2019-06-03T18:29:54Z,"## Changelog

e226b8c Issue-154: unclosed gzip.Reader (#197)
88b4515 dep bump (#207)
9819ef1 mods
580fa2f version bump: v2.2.1

",85126896
1216,False,False,2019-04-16T16:11:52Z,2019-04-16T16:12:15Z,"## Changelog

cda4ac2 version bump: v2.2.0

",85126896
1217,False,False,2019-04-16T16:11:01Z,2019-04-16T16:11:17Z,"## Changelog

4191867 upgrade envy
49bac90 version bump: v1.25.0

",85126896
1218,False,False,2019-04-04T19:42:56Z,2019-04-04T19:43:07Z,"## Changelog

8d46ddb Adds support for `packr2 build cmd/main.go` style commands (#188)
cef464b version bump: v2.1.0

",85126896
1219,False,False,2019-04-04T15:08:44Z,2019-04-04T15:08:56Z,"## Changelog

68c69bd version bump: v1.24.1

",85126896
1220,False,False,2019-04-04T15:07:45Z,2019-04-04T15:08:02Z,"## Changelog

43e5233 add godoc links
53a870e added packd note
2b94572 added some FAQs
18ac51d comments
11df0b0 contruct every part of directory sturcture (#186)
d3b2e05 error if not in GOPATH and modules aren't on (#184)
8b7150f missing `
e0e2368 remove withstack and fix windows (#187)
68a5fdc version bump: v2.0.10

",85126896
1221,False,False,2019-03-29T15:14:31Z,2019-03-29T15:15:20Z,"## Changelog

36da986 version bump: v2.0.9

",85126896
1222,False,False,2019-03-22T16:34:20Z,2019-03-22T16:34:35Z,"## Changelog

ace500e Fix go.mod relative import paths
24be500 Fix go.mod relative import paths (#180)
d08fdc0 Merge branch 'master' of https://github.com/gobuffalo/packr
5ae2777 deps
f6e369d version bump: v2.0.8

",85126896
1223,False,False,2019-03-19T17:33:40Z,2019-03-19T17:34:25Z,"## Changelog

f2dbd32 Fix link to http.FileSystem (#174)
1021ff3 When on Go v1.12, Consult `go env GOMOD` To Find Location of go.mod (#176)
fefbc1d version bump: v2.0.7

",85126896
1224,False,False,2019-03-15T12:42:34Z,2019-03-15T12:42:45Z,"## Changelog

7d61b05 version bump: v1.24.0

",85126896
1225,False,False,2019-03-15T12:41:09Z,2019-03-15T12:41:58Z,"## Changelog

205b2f4 try to thin deps
f2a347b version bump: v2.0.6

",85126896
1226,False,False,2019-03-15T12:10:55Z,2019-03-15T12:11:12Z,"## Changelog

4e08ef2 version bump: v2.0.5

",85126896
1227,False,False,2019-03-13T14:32:00Z,2019-03-13T14:32:25Z,"## Changelog

ea6e877 version bump: v2.0.4

",85126896
1228,False,False,2019-03-13T14:31:18Z,2019-03-13T14:31:36Z,"## Changelog

4d4ff04 version bump: v1.23.0

",85126896
1229,False,False,2019-02-27T19:27:49Z,2019-02-27T19:28:09Z,"## Changelog

6f8539a Merge pull request #168 from gobuffalo/fix-issues-with-open
46e1b89 open works correctly with files w/o ext and open works with / prefix. fixes #159 fixes #161
98c7db8 updated testing matrix
5aa3f2d version bump: v2.0.3

",85126896
1230,False,False,2019-02-25T15:49:33Z,2019-02-25T15:49:50Z,"## Changelog

905bd74 Add Azure Pipelines
a9e4e58 Merge branch 'master' into remove-movinglater
a13c03d Merge pull request #164 from gobuffalo/azure-pipelines
df7aa55 Merge pull request #165 from gobuffalo/remove-movinglater
cf62fce delete travis file
2166712 deps
5c2395d install
2a45927 remove travis files
7ce12f3 replace movinglater
1ae8f67 test v2
024a2ba version bump: v2.0.2

",85126896
1231,False,False,2019-02-07T17:42:41Z,2019-02-07T17:42:58Z,"## Changelog

5d76993 Add build tags to generated packr files
3828d63 Merge branch 'master' into no-files-for-no-boxes
275b0e5 Merge pull request #155 from techknowlogick/patch-1
719d7cc Merge pull request #156 from gobuffalo/no-files-for-no-boxes
5e6b40e Packr files shouldn't be created if no box is used fixes #134
adbd428 Update v2/jam/store/disk_tmpl.go
a1404b9 Update v2/jam/store/disk_tmpl.go
d93b0e1 version bump: v2.0.1

",85126896
1232,False,False,2019-01-31T16:06:12Z,2019-01-31T16:06:27Z,"## Changelog

e4e6ba1 version bump: v1.22.0

",85126896
1233,False,False,2019-01-31T16:05:26Z,2019-01-31T16:05:46Z,"## Changelog

375ed6b Packr2: Stat().Name() incorrect when packed fixes #150 (#151)
d5dafc5 Too many redirects when unknown path #147 (#148)
3f85f9a adding power support (#143)
edfdec2 disk Generate() do import replacement on GoPaths before SrcDirs, prevents bad replacement of imports starting with GoPath (#146)
2745c04 generated goreleaser
5c8d936 packr2 not parsing flags correctly fixes #141 (#144)
b0dc8ae prep for v2 (#149)
78067fa version bump: v2.0.0

",85126896
1234,False,True,2019-01-20T17:20:19Z,2019-01-20T17:20:36Z,"## Changelog

ca554a0 Merge branch 'master' into adding_power_support
5d9a970 added missing 386 and amd64
1a86879 adding power support
806d5b4 generated goreleaser
5c8d936 packr2 not parsing flags correctly fixes #141 (#144)
1be4d65 version bump: v2.0.0-rc.15

",85126896
1235,False,True,2019-01-14T16:31:56Z,2019-01-14T16:32:38Z,"## Changelog

f9dae4b Fix and add tests for box paths relative to an imported package (#127)
8720b06 expose the Pack and Clean functions in jam (#140)
59cfa74 version bump: v2.0.0-rc.14

",85126896
1236,False,False,2018-12-12T21:57:50Z,2018-12-12T21:58:00Z,"## Changelog

2992c90 updated packd
6794593 version bump: v1.21.9

",85126896
1237,False,True,2018-12-12T21:56:33Z,2018-12-12T21:56:45Z,"## Changelog

f0ddc12 fixes issue with lowercase ""walked"" files (#131)
f67b7b6 version bump: v2.0.0-rc.13

",85126896
1238,False,False,2018-12-07T17:31:49Z,2018-12-07T18:20:15Z,"## Changelog

153c849 version bump: v1.21.8

",85126896
1239,False,False,2018-12-06T00:01:26Z,2018-12-12T21:56:59Z,"## Changelog

0d0ecce version bump: v1.21.7

",85126896
1240,False,True,2018-12-07T16:55:31Z,2018-12-07T16:55:40Z,"## Changelog

887cfe3 updated envy
899fe0e version bump: v2.0.0-rc.12

",85126896
1241,False,True,2018-12-07T16:50:59Z,2018-12-07T16:51:13Z,"## Changelog

fcc041e updated deps
883a065 version bump: v2.0.0-rc.11

",85126896
1242,False,True,2018-12-05T23:57:37Z,2018-12-05T23:58:57Z,"## Changelog

27ecd5c version bump: v2.0.0-rc.10

",85126896
1243,False,False,2018-12-05T23:56:54Z,2018-12-05T23:57:06Z,"## Changelog

e682ab6 fixes an issue with Clean (#126)
0e24589 version bump: v1.21.6

",85126896
1244,False,True,2018-12-03T22:43:03Z,2018-12-03T22:43:14Z,"## Changelog

2ab732c packr2 traverses non existing paths when vendoring fixes #123 (#124)
61ae660 use a box map (#120)
9c1551c version bump: v2.0.0-rc.9

",85126896
1245,False,True,2018-11-27T21:26:10Z,2018-11-27T21:26:28Z,"## Changelog

690b84b fixes issue with colliding global boxes (#122)
aabccdc version bump: v2.0.0-rc.8

",85126896
1246,False,True,2018-11-24T09:19:08Z,2018-11-24T09:19:26Z,"## Changelog

4c9f03b version bump: v2.0.0-rc.7

",85126896
1247,False,False,2018-11-24T09:15:00Z,2018-11-24T09:15:18Z,"## Changelog

1c7a346 Remove extra shoulders.md
ba3c3ae version bump: v1.21.5

",85126896
1248,False,False,2018-11-24T09:12:45Z,2018-11-24T09:13:02Z,"## Changelog

7eba836 version bump: v1.21.4

",85126896
1249,False,False,2018-11-20T15:09:31Z,2018-11-20T15:09:40Z,"## Changelog

7c2dcc2 version bump: v1.21.3

",85126896
1250,False,False,2018-11-20T15:08:56Z,2018-11-20T15:09:06Z,"## Changelog

22d9bb6 fixes issue with lowercase extra files (#119)
fb4295e updated deps
dcfa8c5 version bump: v2.0.0-rc.6

",85126896
1251,False,False,2018-11-19T17:33:02Z,2018-11-19T17:33:12Z,"## Changelog

17c8598 version bump: v1.21.2

",85126896
1252,False,True,2018-11-19T17:32:17Z,2018-11-19T17:32:27Z,"## Changelog

a5b8d78 Potential bug with packr2 go flag parsing fixes #115 (#117)
1346a4b packr2 has issues with case-sensitive paths fixes #116 (#118)
77b6a86 version bump: v2.0.0-rc.5

",85126896
1253,False,True,2018-11-17T21:48:54Z,2018-11-17T21:49:03Z,"## Changelog

2387036 version bump: v2.0.0-rc.4

",85126896
1254,False,False,2018-11-17T21:48:27Z,2018-11-17T21:48:36Z,"## Changelog

fc79754 updated deps and packr1 clean
46ffd42 version bump: v1.21.1

",85126896
1255,False,True,2018-11-16T22:03:25Z,2018-11-16T22:03:35Z,"## Changelog

53314ca improved the fix command (#112)
f8030c8 packr2 ignores go.mod fixes #113 (#114)
a79c607 version bump: v2.0.0-rc.3

",85126896
1256,False,True,2018-11-15T16:05:12Z,2018-11-15T16:05:28Z,"## Changelog

9dd3c94 adds --store-cmd flag to let 3rd party binaries pack the found boxes (#111)
3b6f925 version bump: v2.0.0-rc.2

",85126896
1257,False,True,2018-11-14T22:01:15Z,2018-11-14T22:01:26Z,"## Changelog

89efbb7 version bump: v2.0.0-rc.1

",85126896
1258,False,False,2018-11-14T22:00:38Z,2018-11-14T22:00:48Z,"## Changelog

c3de660 generated goreleaser
7f30a6d generated goreleaser
9a3a932 generated goreleaser
949ca5a updated deps
ff30daf updated deps
3db846b updated goreleaser
478641e v2.0.0 (#94)
4bb970e version bump: v1.21.0

",85126896
1259,False,False,2018-11-12T17:37:45Z,2018-11-12T17:37:55Z,"## Changelog

04ea9bb generated goreleaser
df50f07 updated deps
a7a1388 version bump: v1.20.0

",85126896
1260,False,True,2018-11-04T17:46:54Z,2018-11-04T17:47:03Z,"## Changelog

33e2052 Merge branch 'master' into small-fixes
26cd84e Revert ""fixed""
72a8068 Revert ""this actually fixes it, i think""
86d393e fixed
d11ab5d fixes issues with it not properly walking boxes
cf1833a generated goreleaser
cb27230 generated goreleaser
2aa3df1 reverted the http case insensitive fix for the time being
dba58c3 reverts lower case issue
24b8c9e this actually fixes it, i think
757bcf9 version bump: v1.18.0
24c6a0c version bump: v1.19.0
432e889 version bump: v2.0.0-beta.18

",85126896
1261,False,False,2018-11-03T22:40:12Z,2018-11-03T22:40:20Z,"## Changelog

26cd84e Revert ""fixed""
72a8068 Revert ""this actually fixes it, i think""
86d393e fixed
cf1833a generated goreleaser
2aa3df1 reverted the http case insensitive fix for the time being
24b8c9e this actually fixes it, i think
24c6a0c version bump: v1.19.0

",85126896
1262,False,False,2018-11-03T22:00:24Z,2018-11-03T22:00:48Z,"## Changelog

cb27230 generated goreleaser
dba58c3 reverts lower case issue
757bcf9 version bump: v1.18.0

",85126896
1263,False,True,2018-11-02T19:34:20Z,2018-11-02T19:34:30Z,"## Changelog

50bdccf addeds name box lookup for imported boxes
23900ed version bump: v2.0.0-beta.17

",85126896
1264,False,True,2018-10-31T20:00:25Z,2018-10-31T20:00:41Z,"## Changelog

25a6b92 Fix typo (#100)
c0ef0b7 Merge branch 'master' into small-fixes
816688b generated goreleaser
66e5ae1 packr with http.FileServer serves files as case-sensitive fixes #102 (#104)
a0c822b updated deps
3c45721 version bump: v1.17.0
6b12e1c version bump: v2.0.0-beta.16

",85126896
1265,False,False,2018-10-31T19:48:25Z,2018-10-31T19:48:42Z,"## Changelog

25a6b92 Fix typo (#100)
816688b generated goreleaser
66e5ae1 packr with http.FileServer serves files as case-sensitive fixes #102 (#104)
3c45721 version bump: v1.17.0

",85126896
1266,False,True,2018-10-30T15:39:54Z,2018-10-30T15:40:19Z,"## Changelog

eda54d1 fixed IsProspect
d5fd1f9 fixed issues with box resolution
26ca9c8 version bump: v2.0.0-beta.15

",85126896
1267,False,True,2018-10-29T19:10:41Z,2018-10-29T19:10:51Z,"## Changelog

0cd05f2 don't pack packr
308ded3 fixed a comment
c895144 version bump: v2.0.0-beta.14

",85126896
1268,False,True,2018-10-29T17:01:33Z,2018-10-29T17:01:42Z,"## Changelog

307b340 make sure the global file is fmt'd
6617a4d version bump: v2.0.0-beta.13

",85126896
1269,False,True,2018-10-29T16:49:18Z,2018-10-29T16:49:27Z,"## Changelog

b1d6928 version bump: v2.0.0-beta.12

",85126896
1270,False,True,2018-10-29T16:46:56Z,2018-10-29T16:47:06Z,"## Changelog

b5dc2dc fixed list to show path and not name
b9ed05c version bump: v2.0.0-beta.11

",85126896
1271,False,True,2018-10-29T16:35:13Z,2018-10-29T16:35:23Z,"## Changelog

5a8e4f1 resolved issues with http box
50e9cb0 version bump: v2.0.0-beta.10

",85126896
1272,False,True,2018-10-29T14:59:25Z,2018-10-29T14:59:34Z,"## Changelog

5dfc23b added http tests around gzip
cdcb303 version bump: v2.0.0-beta.9

",85126896
1273,False,True,2018-10-29T14:34:16Z,2018-10-29T14:34:26Z,"## Changelog

4763b57 Merge branch 'master' into small-fixes
f8360b1 Merge branch 'master' into small-fixes
4afadd1 change Resolve interface method name
5d42ec8 generated goreleaser
5f6de44 generated goreleaser
7d61c28 updated deps
7702224 updated deps
d440c3f updated deps
320451b updated packd
6a8a286 updated v2 deps
1091bbe use packd.File
460713f version bump: v1.15.1
9d26d64 version bump: v1.16.0
42402c1 version bump: v2.0.0-beta.8

",85126896
1274,False,False,2018-10-28T16:22:29Z,2018-10-28T16:22:38Z,"## Changelog

5d42ec8 generated goreleaser
320451b updated packd
9d26d64 version bump: v1.16.0

",85126896
1275,False,False,2018-10-27T19:56:57Z,2018-10-27T19:57:06Z,"## Changelog

5f6de44 generated goreleaser
d440c3f updated deps
460713f version bump: v1.15.1

",85126896
1276,False,True,2018-10-27T19:08:25Z,2018-10-27T19:08:35Z,"## Changelog

d5528a4 Merge branch 'master' into small-fixes
20f0e52 backed the in InMemory resolver with a packd.MemoryBox
1ae258c generated goreleaser
3f634da moved all virtual file stuff to packd
dfa2dca updated deps
1d383a0 updated packd
e6e0866 version bump: v1.15.0
2aa5c67 version bump: v2.0.0-beta.7

",85126896
1277,False,False,2018-10-27T18:28:38Z,2018-10-27T18:28:47Z,"## Changelog

1ae258c generated goreleaser
3f634da moved all virtual file stuff to packd
e6e0866 version bump: v1.15.0

",85126896
1278,False,True,2018-10-27T15:12:49Z,2018-10-27T15:12:59Z,"## Changelog

e473f62 Merge branch 'master' into small-fixes
c1ffd8f generated goreleaser
4ef61d6 this backports some changes from the version of v1 in v2 to make the transition easier (#99)
bdf71cb updated deps
f810618 version bump: v1.14.0
2b67af8 version bump: v2.0.0-beta.6

",85126896
1279,False,False,2018-10-27T15:11:23Z,2018-10-27T15:11:32Z,"## Changelog

0f75def Add Packer utility installation step (#97)
c1ffd8f generated goreleaser
4ef61d6 this backports some changes from the version of v1 in v2 to make the transition easier (#99)
f810618 version bump: v1.14.0

",85126896
1280,False,True,2018-10-27T14:25:26Z,2018-10-27T14:25:37Z,"## Changelog

866d209 updated deps
d3d903a version bump: v2.0.0-beta.5

",85126896
1281,False,True,2018-10-27T12:50:43Z,2018-10-27T12:50:52Z,"## Changelog

07a314c added LegacyBox
c171cf2 version bump: v2.0.0-beta.4

",85126896
1282,False,True,2018-10-27T12:45:15Z,2018-10-27T12:45:32Z,"## Changelog

c0918aa updated to use packd interfaces
88d6e43 version bump: v2.0.0-beta.3

",85126896
1283,False,True,2018-10-27T12:22:48Z,2018-10-27T12:22:57Z,"## Changelog

67d3450 back ported Find and FindString
1f57f87 version bump: v2.0.0-beta.2

",85126896
1284,False,False,2018-10-26T19:26:27Z,2018-10-26T19:26:38Z,"## Changelog

0f75def Add Packer utility installation step (#97)
50e27cc Merge branch 'master' into small-fixes
0b7ffb3 Merge branch 'master' into small-fixes
24dec8f Merge branch 'small-fixes' of https://github.com/gobuffalo/packr into small-fixes
d18f13c Merge branch 'small-fixes' of https://github.com/gobuffalo/packr into small-fixes
5eb87c5 Revert ""wip""
8c182ef a little more logging and cleaning up of errors and stuff
b6233fc added a --legacy flag to pack boxes in the legacy style
d405e2c added a clean command
16d67d9 added a pointer resolver
3d702ee added back keys for the global map
7867a2b added deprecation notices
24e27b3 added gometalinter.json
3202365 added more deprecated stuff
12da1f0 added tests/implementations for the deprecated old Pack* methods
f5f7cdd added the builder package back and deprecated it
a6c4e1c adds support for a silent flag
be1b276 all good stuff
e046bd3 bunch o'stuff
33f148f cleaned old -packr.go files
c27235c deleted the _old folder
ac53c3d deprecated String, Bytes, MustString, and MustBytes in favor of Find and FindString
0057872 embed disk in legacy
9b21c8f exposed HexGzipString and UnHexGzipString functions
d1ef268 fix travis
f450aff fixed broken tests on mac
061aa0f fixed issue with named go files
188f742 fixes #75
12fc71f fixes releaser template
d60133c fixes tests on windows
04fa04b generated goreleaser
9bddd28 generated goreleaser
283d9a1 getting a parser from files now works
efe7803 got walk and list working
4a63198 hopefully sped up the parser
cefa441 internalize the hex package since it was only recently introduced
ff88175 make sure ci-test deps on deps
5c101ae make sure goreleaser is setup
12b3600 make sure that legacy comment matches exactly the old version
5ac31f8 more windows fixes
0501c8e more windows fixes
e6e37e4 more windows fixes
c78e1c4 moved to a v2/ structure
fa08d25 no longer need to have files named ""a_""
e01e38c parser can now follow imports for finding boxes
576cd2c parser is ready now
5b19313 removed the Ident type in favor or strings and helper funcs
d2b72a8 removed the env.go file
da3c131 removed the registry resolver stuff
d72858a renamed callingDir ResolutionDir
3a85ca2 renamed costello to jam
a509f35 see if that fixes travis
88dfeab set GO111MODULE on
e80ddb4 small fixes
ce486a1 started to clean up the logging a bit
b2d018c stop fmt'ing the import files
df10469 stopped using init to load packr boxes
b3faf4f travis should run both sets of tests
0f6c6f1 travis?
39a2dfe trying to fix some windows issues
0e62f7d updated README
48c6d45 updated README
2c63644 use ResolutionDir instead of callingDir
4fd9834 use a legacy store instead of the older build
2fac24e vendored encoding/hex for 1.9 support
4053aff version bump: v2.0.0-beta.1
a540729 wip
bc29283 wip
01ecc99 wip
9c2c31f wip
05a253d wip
af23f7e wip getting visitor to work with New and NewBox
b12366b wip on the disk store implementation
c281b62 wip parser. added back visitor
76353a9 wrote a packr fix command to rewrite imports

",85126896
1285,False,False,2018-09-24T03:11:23Z,2018-09-24T03:11:32Z,"## Changelog

dc82dde updated deps
5a2cbb5 version bump: v1.13.7

",85126896
1286,False,False,2018-09-24T02:55:48Z,2018-09-24T02:55:57Z,"## Changelog

34adf8d Add sections in README about portable releases (#95)
2b3e29d Fix issue with an ignored name being a file. (#90)
7ff3146 fix travis
bae0815 update travis go versions
bb4172e updated deps
346a6e0 version bump: v1.13.6

",85126896
1287,False,False,2018-09-05T18:54:00Z,2018-09-05T18:54:11Z,"## Changelog

6c8156e version bump: v1.13.5

",85126896
1288,False,False,2018-09-05T18:31:24Z,2018-09-05T18:31:33Z,"## Changelog

23af2f3 set up release tool
3edfe96 version bump: v1.13.4

",85126896
1289,False,False,2018-08-23T13:00:44Z,2018-08-23T13:02:31Z,"## Changelog

ee1318b Switch order in box.find to lookup for directories (#87)
3932e03 Merge pull request #84 from johanbrandhorst/patch-1
57fb539 Make generated files comply with gofmt
500395e Comply with standard generated file header (#83)

",85126896
1290,False,False,2018-08-14T22:43:19Z,2018-08-14T22:44:12Z,"## Changelog

1aab567 updated deps

",85126896
1291,False,False,2018-08-08T19:02:26Z,2018-08-08T19:02:54Z,"## Changelog

4399355 removed the checked-in packr.go files

",85126896
1292,False,False,2018-08-08T18:48:46Z,2018-08-08T18:50:42Z,"## Changelog

883bad0 checkin packr files for vgo
48bc2d0 Adds a new WalkPrefix function (#79)

",85126896
1293,False,False,2018-07-29T13:15:38Z,2018-07-29T13:16:10Z,,85126896
1294,False,False,2018-07-22T18:22:49Z,2018-07-22T18:23:07Z,,85126896
1295,False,False,2018-06-09T16:21:07Z,2018-06-09T16:27:43Z,"## Changelog

[32mbd47f28[m changed the comment on the generated files slightly
[32m0bf9d54[m Merge pull request #69 from spenczar/codegen_comment
[32mbb70584[m Add code generation comment to top of generated files

---
Automated with [GoReleaser](https://github.com/goreleaser)
Built with go version go1.10.2 darwin/amd64
",85126896
1296,False,False,2018-04-13T17:35:21Z,2018-04-13T17:35:44Z,"## Changelog

[32m7f40749[m add support for adding box by var or const (#60)
[32mf2c6d7a[m support customizable ignored folders

---
Automated with [GoReleaser](https://github.com/goreleaser)
Built with go version go1.10 darwin/amd64
",85126896
1297,False,False,2018-04-10T17:32:07Z,2018-04-10T17:32:41Z,"## Changelog

[32m1da2bc3[m fix: generated gofmtd code (#59)

---
Automated with [GoReleaser](https://github.com/goreleaser)
Built with go version go1.10 darwin/amd64
",85126896
1298,False,False,2018-04-09T16:56:49Z,2018-04-09T16:57:25Z,"## Changelog

[32me1c38da[m added verbose flag
[32m4884052[m added some debug functionality

---
Automated with [GoReleaser](https://github.com/goreleaser)
Built with go version go1.10 darwin/amd64
",85126896
1299,False,False,2018-04-09T16:03:19Z,2018-04-09T16:04:39Z,"## Changelog

[32m1018a98[m Added .idea directory to base names skipped by Builder's Run() method (#58)

---
Automated with [GoReleaser](https://github.com/goreleaser)
Built with go version go1.10 darwin/amd64
",85126896
1300,False,False,2018-03-25T16:32:40Z,2018-03-25T16:33:45Z,"## Changelog

[32m3402a16[m Fix relative path finding (gobuffalo/buffalo#982) (#55)
[32m09d0f14[m fixed the tags display during release

---
Automated with [GoReleaser](https://github.com/goreleaser)
Built with go version go1.10 darwin/amd64
",85126896
1301,False,False,2018-03-14T19:22:46Z,2018-03-14T19:24:10Z,"## Changelog

[32m3b045e9[m added the ability to add string or bytes to a box

---
Automated with [GoReleaser](https://github.com/goreleaser)
Built with go version go1.10 darwin/amd64
",85126896
1302,False,False,2018-03-12T15:59:26Z,2018-03-12T16:00:06Z,"## Changelog

[32md1edcde[m Merge pull request #52 from gobuffalo/fix-panic
[32mc3fc88e[m panic: runtime error: invalid memory address or nil pointer dereference fixes #51

---
Automated with [GoReleaser](https://github.com/goreleaser)
Built with go version go1.10 darwin/amd64
",85126896
1303,False,False,2018-02-15T23:17:14Z,2018-02-15T23:18:16Z,"## Changelog

[32m6434a29[m Merge pull request #46 from dinedal/master
[32m174d2e6[m Merge branch 'master' into master
[32m97ad100[m [FIX] Cleanup code
[32m4915f0d[m Remove dependency on gobuffalo/envy

---
Automated with [GoReleaser](https://github.com/goreleaser)
Built with go version go1.10rc2 darwin/amd64
",85126896
1304,False,False,2018-01-31T23:01:38Z,2018-01-31T23:07:58Z,"## Changelog

[32m64c3dd4[m fixed broken tests

---
Automated with [GoReleaser](https://github.com/goreleaser)
Built with go version go1.9 darwin/amd64
",85126896
1305,False,False,2018-01-31T14:20:57Z,2018-01-31T14:26:45Z,"## Changelog

[32m6de5183[m revert version 2, it caused too many problems. :(
[32mbb02b15[m Revert ""add note about accessing box from init""
[32m971e0b0[m add note about accessing box from init
[32mcd5d3b2[m Packr embed silently fails when project dir is a symlink fixes #38
[32m1da615c[m support boxes packaged with v1
[32mb3669df[m improved the lookupKey function
[32mcdb2c8d[m whack a mole
[32m03ce178[m let's hope this fixes the windows issues
[32m90d1cf5[m lets see if this works for the windows tests
[32md6055a2[m windows drives me insane sometimes
[32m1d9970a[m sigh, windows!
[32m74cc95c[m fixed windows regex
[32mb8164d1[m prevent name collisions for packed files
[32mb614e0c[m removed the deploy from travis stuff

---
Automated with [GoReleaser](https://github.com/goreleaser)
Built with go version go1.9 darwin/amd64
",85126896
1306,False,False,2018-01-10T11:56:37Z,2018-01-10T16:18:53Z,"## Changelog

[32me75b842[m Remove buffalo/render dependency

---
Automated with [GoReleaser](https://github.com/goreleaser)
Built with go version go1.9 darwin/amd64
",85126896
1307,False,False,2018-01-04T15:55:14Z,2018-01-04T15:56:30Z,"## Changelog

* Merge pull request #34 from jasonish/directory-404
* error on virtual directory that does not exist
* Merge pull request #35 from jasonish/ignore-packr_go
* ignore -packr.go files in box directory
*  added the --rm-dist flag

---
Automated with [GoReleaser](https://github.com/goreleaser)
Built with go version go1.9 darwin/amd64
",85126896
1308,False,False,2018-01-02T18:04:27Z,2018-01-02T18:05:00Z,"## Changelog

[32m60f8243[m added .grifter to the ignore list

---
Automated with [GoReleaser](https://github.com/goreleaser)
Built with go version go1.9 darwin/amd64
",85126896
1309,False,False,2018-01-02T17:56:46Z,2018-01-02T17:57:08Z,"## Changelog

[32m25442cf[m added goreleaser

---
Automated with [GoReleaser](https://github.com/goreleaser)
Built with go version go1.9 darwin/amd64
",85126896
1310,False,False,2019-12-21T08:01:37Z,2019-12-22T04:31:04Z,,40359871
1311,False,False,2019-08-02T16:53:32Z,2019-08-04T08:19:04Z,"* add submask
* fix libconfig/libqueue/libvector on MSVC
* refine Makefile to support debug/release
* refine librtsp/librtmp network protocol
* refine code arch folder
",40359871
1312,False,False,2019-04-27T10:36:17Z,2019-05-19T15:57:56Z,"update: libsort, libfile, libposix4win, libgevent, libskt, libmacro
",40359871
1313,False,False,2019-03-04T16:46:20Z,2019-03-04T16:59:54Z,"libposix4win: add windows posix support
libthread: refine with atomic/lock
libconfig: fix lua parse
librpc: refactor
liblog/libfile/libmacro/libuvc support build with vs2010 on windows
",40359871
1314,False,False,2019-01-05T12:06:59Z,2019-01-06T05:34:18Z,,40359871
1315,False,False,2018-12-02T12:55:53Z,2018-12-02T16:40:23Z,"* add librtmp
* minor fix of libqueue/libtime",40359871
1316,False,False,2018-10-21T14:16:52Z,2018-10-21T14:20:55Z,,40359871
1317,False,False,2018-09-16T17:09:58Z,2018-09-23T07:27:54Z,,40359871
1318,False,False,2019-08-09T22:02:42Z,2019-08-09T22:04:51Z,"## 3.0.2
- Add FastGRNN node to ELL, train_classifier.py and the onnx_importer.",69389961
1319,False,False,2019-07-23T18:13:11Z,2019-07-23T18:42:21Z,"## 3.0.1
- Fix make_vad.py so the VAD model works properly.
- Fix smoothing of classifier output.
- Improvements to noise mixing in audio training scripts
- Use featurizer metadata to get correct defaults for some audio script parameters
- Improvements and code clean up in view_audio.py
- make_dataset will fill the featurizer internal buffer before returning features so it doesn't featurize zeros.
- onnx_importer: fixes to ConstantFill, Reshape, Slice, Transpose, and support for constant folding involving Cast, and Mul and fix handling of nodes with multiple outputs.
- Fix bug causing OptimizeReorderDataNodesTransformation to fail caused by input port and memory layout mismatch
- move to SWIG 4.0.0.",69389961
1320,False,False,2019-06-14T14:37:07Z,2019-06-14T14:55:39Z,"## 3.0.0
- Improve Python API so Map and CompiledMap have a way of calling compute on models with multiple inputs and outputs (see ComputeMultiple)
- Improve Python Callback handling so Python apps can handle models with any number of and type of callbacks.
- Simplify datasetFromImages.py so it can create training, testing and validation set from one set of images on disk.
- Update repurposing tutorial setup to take advantage of dataFromImages.py changes
- Update index.md to fix bug in Linux instructions
- Fix FFTNode so that behavior is identical to NumPy behavior
- Update make_featurizer.py to calculate features correctly",69389961
1321,False,False,2019-05-31T21:29:23Z,2019-05-31T21:32:08Z,"## 2.5.4
- Add support for ONNX GlobalAveragePooling
- Publish 13 new audio models trained using Azure ML
- Add ONNX importer support for ConstantOfShape
- Add a -mean option to audio test runs to output mean prediction score
- Fix InputNode unarchival to correctly set the memory layout",69389961
1322,False,False,2019-05-17T23:28:20Z,2019-05-17T23:30:28Z,"## 2.5.3
- Fixed build break in C++ tutorial on Windows
",69389961
1323,False,False,2019-05-17T22:38:20Z,2019-05-17T22:47:02Z,"## 2.5.2
- Moved to LLVM 8.0
- Added Asparagus and Pear models to the gallery, removed Elderflower
- Added support for image preprocessing metadata and image normalization defaults for pytorch + imagenet
- Updated find_ell.py (and thus other python tools) to work if your working directory contains ELL's build output",69389961
1324,False,False,2019-05-11T00:15:09Z,2019-05-11T00:21:18Z,"- Fixed API wrapper for PortMemoryLayout to produce correct extent
- Fixed processing of ConcatenationNode in importer engine
- Added four build target aliases that build groups of targets: bindings, libraries, tests, and tools
- Add support for ONNX Cast operator (thanks to Ehsan Azar for PR #218)
- Fixed build error on macOS (GitHub issue #216)",69389961
1325,False,False,2019-04-27T18:45:53Z,2019-04-27T18:47:57Z,"- Improve audio python library and update audio training tutorial
- Add support for non-unrolled loops in the Value library
- Add new methods to Python API to support FastGRNN models
- Add easy node-creation functions
- Fix bugs in ReinterpretLayoutNode
- Fix importing of DenseNet models
- Improve FFT and MelFilterBank nodes so that non-power of 2 sized input buffers can be processed
- Fix darknet importer
- Add shuffling of test and validation sets to audio train_classifier
- Update OpenBLASSetup.cmake so it can find a locally built version of OpenBLAS
- Fix compiling for cortex-m4 targets
- Add a link back to the original model file name in our emitted header file
- Clean up Python API, removing ""TensorShape"" specific API in favor of the more general PortMemoryLayout
- Fix bug in Microphone and WavReader classes so they properly handle auto-resampling of audio with multiple channels
- Add an -auto_scale option to audio scripts to control whether audio is scaled or not before featurization
- Add ability to mix noise with audio during make_dataset process
- Add support for shuffling and cleaning the audio training list
- Add many new options to audio train_classifier, including ability to control learning rate schedulers
- Fix link error when building on a Mac
- Fix exception in DetectLowPrecisionConvolutionTransformation when running Compile in Debug mode",69389961
1326,False,False,2019-03-02T01:12:42Z,2019-03-02T01:30:24Z,"* Initial release of the `finetune` utility
* Remove stale references to VS 2015
* Add logging of build tool options
* Improve error reporting of `compile` failures
* Suppress alias analysis on emitted IR code
* Improve logging in ELL pythonlibs
* Remove volatile attribute from memcpy, memmove, and memset LLVM intrinsic calls
* Allow compilation of models with more than one input or output
* Fix parsing of boolean command-line arguments
* Add a RAM requirement for audio tutorial
* Add support for optimized models 
* Fix ONNX import of no-op concat blocks
* Gallery updates for Pi3 specific ELL models 
* Added documentation detailing ELL's versioning strategy",69389961
1327,False,False,2019-01-10T22:41:28Z,2019-01-10T23:09:48Z,"* Move to LLVM 6.0.1
* Move ELL to C++17
* Add support for python 3.7
* Add support for more ONNX operations
* Added instructions for Raspbian Lite (https://microsoft.github.io/ELL/tutorials/Raspberry-Pi-setup/)
* Add new OpenBLAS include path for Ubuntu 18.04
* Fix reorder data node optimization pass 
* Fix debugCompiler to work with gallery models 
* Improve reordering of data for simple and Winograd depthwise convolutions
* Fixes for ""Getting started with image classification on Raspberry Pi using C++"" tutorial
* Fix importing of depthwise separable models
* Fix ""Repurposing a pretrained image classifier"" tutorial 

Addresses #166 and #182.

",69389961
1328,False,False,2018-08-06T21:05:56Z,2018-08-06T21:12:55Z,"* Initial version of the ONNX importer
* Tools now have a `-v`/`--verbose` option that will control the output of additional helpful logging data
* Demo helper script has been modified to print labels to STDOUT instead of drawing on the image. This is useful for some training sets like CIFAR
* Couple of new options for `wrap.py`:
  * `--convolution_method`: this lets you specify the convolution method (it just passes the value on to the `compile` executable)
  * `--llvm-format` gets a new option: `obj`. This, along with `--no-llc-tool` and `--no-opt-tool` let you skip the time-consuming `llc` and `opt` steps. To retain compatibility with `compile`, the object file suffix is now `.o`.
",69389961
1329,False,False,2018-07-17T18:33:12Z,2018-07-17T18:58:18Z,"* Fixed typos in some tutorials (thanks @lisaong )
* Added support for emitting relocatable object code
* Added Travis-CI support (thanks @lisaong )
* Updated profiler to work with models from the ELL gallery
* Fix build break for VS2017.7.3 in StlContainerReferenceIterator
* Fix python interface implementation for LSTM layer nodes
* Fix crash in retarget trainer (issue #141)
* Fix docs for opencv setup on raspberry pi
* Improve support for running models on Raspberry Pi Zero
* `make_profiler.sh` can now be run from anywhere
* Various bug fixes (#161, #157, #149)",69389961
1330,False,False,2018-05-16T21:00:04Z,2018-05-16T21:20:34Z,"* Fix importing CNTK models with a Softmax layer
* Add a Reset function to LSTM and GRU models to clear the state",69389961
1331,False,False,2018-04-30T23:40:02Z,2018-05-02T20:24:38Z,"* Fixes issue #140 
* Helps issue #138 by fixing importing of Darknet models with Fully Connected layers
* Simplified and improved LLVM IR optimization in emitted code
* Fix importer for next round of separable darknet models in CNTK
* Improved Winograd convolution implementation
* Fix building the profiler tool
* Fix running `build.sh` without any command line args
* Miscellaneous bug fixes",69389961
1332,False,False,2018-04-18T17:31:03Z,2018-04-18T23:34:39Z,"* Fix issue #137 
* Added resnet models to gallery
* Add support for naive depthwise separable convolution layers",69389961
1333,False,False,2018-04-12T23:23:25Z,2018-04-13T05:27:05Z,"* Added more fine grained profiling support for emitted code
* Make `find_package` for LLVM more resilient to finding the version that ELL needs
* Updated [Setting up your Raspberry Pi device for tutorials](https://microsoft.github.io/ELL/tutorials/Setting-up-your-Raspberry-Pi) to move to Raspbian Stretch
* Updated links to YOLOv2 configuration and weights in [Getting started with object detection using region of interest networks](https://microsoft.github.io/ELL/tutorials/Getting-started-with-object-detection-using-region-of-interest-networks/)
* Added better support for importing models from older versions of CNTK",69389961
1334,False,False,2018-04-06T21:25:07Z,2018-04-06T21:29:46Z,"* New tutorials available:
  * [Getting started with object detection using region of interest networks](https://microsoft.github.io/ELL/tutorials/Getting-started-with-object-detection-using-region-of-interest-networks/)
  * [Getting started with audio keyword classification on the Raspberry Pi](https://microsoft.github.io/ELL/tutorials/Getting-started-with-audio-keyword-classification-on-the-Raspberry-Pi/)
* Updated importer to handle the importing of resnet models
* Miscellaneous bug fixes.",69389961
1335,False,False,2018-02-07T00:33:49Z,2018-02-07T00:35:05Z,"* New tutorial available: [Repurposing a pretrained image classifier
](https://microsoft.github.io/ELL/tutorials/Repurposing-a-pretrained-image-classifier/)
* Updated [Boosting classifier accuracy by grouping categories
](https://microsoft.github.io/ELL/tutorials/Boosting-classifier-accuracy-by-grouping-categories/) to illustrate how to use callbacks for an asynchronous programming model.
* `find_ell.py` shouldn't import `ell` automatically. Should help address issues like #130.
* Added support for importing region detection layers from Darknet models.
* Miscellaneous bug fixes.
",69389961
1336,False,False,2018-01-26T21:42:12Z,2018-01-26T21:55:01Z,"- Fix a bunch of bugs
- Add RegionDetectionLayer that supports darknet regions - see [YOLO9000: Better, Faster, Stronger](https://arxiv.org/abs/1612.08242)
- Side-by-side tutorial fixes
- Add convenience class that wraps the callback style API for C++ apps
- Add __init__.py to output of wrap.py so it is easier to import compiled modules
- GRU based audio models are working",69389961
1337,False,False,2018-01-19T19:46:16Z,2018-01-19T19:50:01Z,"* Added Hard Sigmoid activation type to Python interfaces
* Speed up Retarget Trainer
* Wrap.py fixes for C++ interfaces
* Cleanup and (minor) optimization of FFTNode
* Cleanup headers in utilities, emitters, and model to speed up builds
* Python logging instead of print
",69389961
1338,False,False,2018-01-12T01:03:39Z,2018-01-12T01:08:16Z,"* Signal processing function and nodes
* Updated archive name for Map
* Fix bug in predict wrapper to support loop execution
* drivetest distributed testing enhancements
",69389961
1339,False,False,2018-01-09T01:42:26Z,2018-01-09T01:56:06Z,"* Raspberry Pi Zero support (by Eric Tang, #123)
* model_test segfault fix for VS 2017
* New interface for emitting control-flow instructions
* IRLocalValue classes to simplify emitting IR
* Rename DynamicMap to Map
* SWIG generation of step-based user programming model
* Fix to #125 
* ccache support",69389961
1340,False,False,2017-12-22T22:51:55Z,2017-12-22T22:57:35Z,"* Math library updates to unify Vector, Matrix, and Tensor Operations functions
* ProtoNNTrainer V2
* Support the ""Step"" programming model in ell.py
* Fix Javascript code for the ELL_* SWIG interface change
* Customization fixes for compile.exe

 ",69389961
1341,False,False,2017-12-15T01:25:09Z,2017-12-16T01:11:11Z,"* Multi-node retarget support.
* Renamed python namespaces to use lowercase ""ell"".
* New ""dr"" models to the gallery.
 ",69389961
1342,False,False,2017-11-30T22:03:47Z,2017-11-30T22:47:13Z,"* macOS build fix.
* prefer OpenBLAS libraries by default.
* in-progress work on steppable maps.",69389961
1343,False,False,2017-11-30T03:21:04Z,2017-11-30T18:45:01Z,"- 6 new ""dcda"" 64x64 ILSVRC2012 models in the gallery.
- Property-bag-type metadata and archiver improvements.
- Renamed ELL python model to ""ell"" (lowercase).
- Support for combining ELL models into the same C++ application.
- Fix 32 bit Linux build.
",69389961
1344,False,False,2017-11-22T01:29:58Z,2017-11-22T01:42:41Z,"* Improved support for ProtoNN trainer and compiling ProtoNN models are now available. Introductory tutorial [here](https://microsoft.github.io/ELL/tutorials/Introducing-ProtoNN/).
* Added the following models:
  * stacked: dsf_I128x128x3CMCMCMCMCMCCCMC1AS, dst_I128x128x3CMCMCMCMCMCCCMC1AS, dsb_I128x128x3CMCMCMCMCMCCCMC1AS
  * no maxpool: dscs2_I128x128x3CCCCCCC1AS, ddcs2_I128x128x3CCCCCCCCCCCCCC1AS
* Laying the foundation for RNN, LSTM, and GRU layers
* Improved steppable maps. Tutorial soon.
* Added the `datasetFromImages` tool, which aids in creating ELL compatible datasets from images, which can then be used by ELL's trainers to produce a trained predictor.
* Fixes for bugs and compiler warnings throughout the codebase
",69389961
1345,False,False,2017-11-13T19:34:07Z,2017-11-13T21:13:06Z,"Fixes to import tutorial.
IRMapCompiler fixes.
Logging support.
Math library updates.
Early retargeting work (in progress).
Early protoNN work (in progress).",69389961
1346,False,False,2017-10-27T20:58:44Z,2017-10-27T21:07:06Z,Corrected naming of 64x64 stacked models.,69389961
1347,False,False,2017-10-27T19:29:31Z,2017-10-27T19:41:27Z,Minor fixes to tutorials.,69389961
1348,False,False,2017-10-26T20:04:50Z,2017-10-26T20:07:24Z,"Tutorial updates.
64x64 stacked convolutional models.",69389961
1349,False,False,2017-10-23T18:23:05Z,2017-10-26T00:44:34Z,Minor fixes and tutorial text updates.,69389961
1350,False,False,2017-10-02T23:12:26Z,2017-10-02T23:13:49Z,,69389961
1351,False,False,2017-08-04T18:34:46Z,2017-10-02T18:01:35Z,,69389961
1352,False,False,2020-03-13T03:15:14Z,2020-03-13T03:27:20Z,"- ✨ Add BERTEmbeddingV2.
- 💥 Migrate documents to https://readthedoc.org for the version control.",166495086
1353,False,False,2019-12-27T09:00:44Z,2019-12-27T09:06:13Z,"- ✨ Add Scoring task. ([#303])
- ✨ Add tokenizers.
- 🐛 Fixing multi-label classification model loading. #304",166495086
1354,False,False,2019-10-18T08:05:32Z,2019-10-18T08:09:11Z,"Unfortunately, we renamed again for consistency and clarity. Here is the new naming style.

| Backend          | pypi version   | desc           |
| ---------------- | -------------- | -------------- |
| TensorFlow 2.x   | kashgari 2.x.x | coming soon    |
| TensorFlow 1.14+ | kashgari 1.x.x | current version |
| Keras            | kashgari 0.x.x | legacy version |

If you are using the kashgari-tf version. You only need to run this command to install the new version.

```bash
pip uninstall -y kashgari-tf
pip install kashgari
```

Here is how the existing versions changes

| Supported Backend | Kashgari Versions | Kahgsari-tf Version |
| ----------------- | ----------------- | ------------------- |
| TensorFlow 2.x    | kashgari 2.x.x    | -                   |
| TensorFlow 1.14+  | kashgari 1.0.1    | -                   |
| TensorFlow 1.14+  | kashgari 1.0.0    | 0.5.5               |
| TensorFlow 1.14+  | -                 | 0.5.4               |
| TensorFlow 1.14+  | -                 | 0.5.3               |
| TensorFlow 1.14+  | -                 | 0.5.2               |
| TensorFlow 1.14+  | -                 | 0.5.1               |
| Keras (legacy)    | kashgari 0.2.6    | -                   |
| Keras (legacy)    | kashgari 0.2.5    | -                   |
| Keras (legacy)    | kashgari 0.x.x    | -                   |

- 💥Renaming pypi package name to `kashgari`.
- ✨Allows custom average types, logs to an array for easy access to the last epoch.
- ✨Add min_count parameter to the base_processor.
- ✨Add `disable_auto_summary` config.",166495086
1355,False,False,2019-09-30T14:20:33Z,2019-09-30T14:21:45Z,"- ✨ Add shuffle parameter to fit function (#249 )
- ✨ Improved type hinting for the loaded model (#248)
- 🐛 Fix loading models with CRF layers (#244, #228)
- 🐛 Fix the configuration changes during embedding save/load (#224)
- 🐛 Fix stacked embedding save/load (#224)
- 🐛 Fix evaluate function where the list has int instead of str (#222)
- 💥 Renaming `model.pre_processor` to `model.processor`
- 🚨 Removing TensorFlow and numpy warnings
- 📝 Add docs how to specify which CPU or GPU
- 📝 Add docs how to compile model with custom optimizer
",166495086
1356,False,False,2019-08-11T15:35:08Z,2019-08-11T15:39:13Z,- 🐛 Fixing CuDNN Error (#198),166495086
1357,False,False,2019-08-10T05:43:03Z,2019-08-10T06:25:21Z,"- 💥 Add CuDNN Cell config, disable auto CuDNN cell. (#182, #198)",166495086
1358,False,False,2019-07-15T11:00:17Z,2019-07-15T11:00:35Z,"- 📝 Rewrite documents with mkdocs
- 📝 Add Chinese documents
- ✨ Add `predict_top_k_class` for classification model to get predict probabilities ([#146](https://github.com/BrikerMan/Kashgari/issues/146))
- 🚸 Add `label2idx`, `token2idx` properties to Embeddings and Models
- 🚸 Add `tokenizer` property for BERT Embedding. ([#136](https://github.com/BrikerMan/Kashgari/issues/136))
- 🚸 Add `predict_kwargs` for models `predict()` function
- ⚡️ Change multi-label classification's default loss function to binary_crossentropy ([#151](https://github.com/BrikerMan/Kashgari/issues/151))",166495086
1359,False,False,2019-07-12T10:06:10Z,2019-07-12T10:07:47Z,"- 📝 Add tf.keras version info
- 🐛 Fixing lstm issue in labeling model ([#125](https://github.com/BrikerMan/Kashgari/issues/125))

[Code Compare](https://github.com/BrikerMan/Kashgari/compare/v0.2.4...v0.2.5)",166495086
1360,False,False,2019-07-11T09:52:07Z,2019-07-11T10:24:31Z,"🎉🎉 tf.keras version 🎉🎉

- 🎉 Rewrite Kashgari using `tf.keras`. Discussion: [#77](https://github.com/BrikerMan/Kashgari/issues/77)
- 🎉 Rewrite Documents.
- ✨ Add TPU support.
- ✨ Add TF-Serving support.
- ✨ Add advance customization support, like multi-input model.
- 🐎 Performance optimization.",166495086
1361,False,False,2019-06-06T09:47:52Z,2019-06-06T09:55:27Z,"* Add BERT output feature layer finetune support. Discussion: #103
* Add BERT output feature layer number selection, default 4 according to BERT paper.
* Fix BERT embedding token index offset issue #104.",166495086
1362,False,False,2019-03-05T08:58:58Z,2019-03-05T09:01:20Z,* fix missing `sequence_labeling_tokenize_add_bos_eos` consig,166495086
1363,False,True,2019-03-05T08:54:29Z,2019-03-05T08:54:57Z,"* multi-label classification for all classification models
* support cuDNN cell for sequence labeling
* add option for output `BOS` and `EOS` in sequence labeling result, fix #31 ",166495086
1364,False,False,2019-02-28T03:09:47Z,2019-02-28T03:15:04Z,"* add `AVCNNModel`, `KMaxCNNModel`, `RCNNModel`, `AVRNNModel`, `DropoutBGRUModel`, `DropoutAVRNNModel` model to classification task.
* fix several small bugs",166495086
1365,False,False,2019-02-22T09:45:16Z,2019-02-22T09:47:04Z,"* fix BERT Embedding  model's `to_json` function, issue #19 ",166495086
1366,False,False,2019-02-22T03:04:53Z,2019-02-22T03:23:03Z,"* remove class candidates filter to fix #16
* overwrite init function in CustomEmbedding
* add parameter check to custom_embedding layer
* add `keras-bert` version to setup.py file",166495086
1367,False,False,2019-02-04T12:03:06Z,2019-02-04T12:04:41Z,"* add `output_dict`, `debug_info` params to text_classification model
* add `output_dict`, `debug_info` and `chunk_joiner `params to text_classification model
* fix possible crash at data_generator",166495086
1368,False,False,2019-01-31T08:10:57Z,2019-01-31T08:13:28Z,"* fix sequence labeling evaluate result output
* refactor model save and load function",166495086
1369,False,False,2017-09-26T10:46:52Z,2017-10-17T20:59:33Z,"This is a complete rewrite of the plugin.

",31244986
1370,False,False,2017-04-30T07:39:23Z,2017-04-30T07:43:59Z,"<a name""4.2.3""></a>
### 4.2.3 (2017-04-30)


#### Bug Fixes

* **build:** create correct asset path in CSS file ([357eea9d](https://github.com/ritz078/embed.js/commit/357eea9d))

",31244986
1371,False,False,2017-03-28T15:30:45Z,2017-03-28T15:33:37Z,"<a name""4.2.2""></a>
### 4.2.2 (2017-03-28)


#### Bug Fixes

* **build:** create correct asset path in CSS file (#236) ([4657c73f](https://github.com/ritz078/embed.js/commit/4657c73f))

",31244986
1372,False,False,2017-03-17T17:16:23Z,2017-03-17T17:20:04Z,"<a name""4.2.1""></a>
### 4.2.1 (2017-03-17)


#### Bug Fixes

* **postinstall:** install selenium while running tests (#231) ([6370209c](https://github.com/ritz078/embed.js/commit/6370209c))

",31244986
1373,False,False,2017-03-16T15:54:50Z,2017-03-16T15:59:49Z,"<a name""4.2.0""></a>
## 4.2.0 (2017-03-16)


#### Features

* **facebook:** add support for facebook videos and posts (#229) ([37a302ac](https://github.com/ritz078/embed.js/commit/37a302ac))

",31244986
1374,False,False,2017-03-08T11:03:19Z,2017-03-08T11:04:48Z,"<a name""4.1.17""></a>
### 4.1.17 (2017-03-08)


#### Bug Fixes

* **ustream:** corrects the url for ustream (#215) ([6b9e165a](https://github.com/ritz078/embed.js/commit/6b9e165a))",31244986
1375,False,False,2017-02-28T06:38:37Z,2017-02-28T06:40:02Z,"<a name""4.1.16""></a>

### 4.1.16 (2017-02-28)

#### Bug Fixes
- **dist:** create build before publishing ([182b288a](https://github.com/ritz078/embed.js/commit/182b288a))
",31244986
1376,False,False,2017-02-25T17:08:24Z,2017-02-25T17:14:51Z,"<a name""4.1.15""></a>

### 4.1.15 (2017-02-25)
",31244986
1377,False,False,2015-12-14T16:54:57Z,2015-12-14T16:59:05Z,"Bug-fixes
- **ejs** Accepts `.` in the class name
- Set `highlightCode` and `tweetsEmbed` to `false` by default.
",31244986
1378,False,False,2015-12-11T18:44:04Z,2015-12-11T18:46:02Z,"<a name""3.0.4""></a>

### 3.0.4 (2015-12-11)

#### Bug Fixes
- **version:** fixed automatic versioning ([e2b6224b](https://github.com/ritz078/embed.js/commit/e2b6224b))
",31244986
1379,False,False,2015-12-11T18:04:49Z,2015-12-11T18:07:17Z,"<a name""3.2.1""></a>

### 3.2.1 (2015-12-11)

#### Bug Fixes
- **instagram and flickr:** fixed issue of inline embedding ([d41fbef5](https://github.com/ritz078/embed.js/commit/d41fbef5))
",31244986
1380,False,False,2015-12-11T17:27:21Z,2015-12-11T17:29:13Z,"<a name""3.2.0""></a>

## 3.2.0 (2015-12-11)

#### Features
- version bump :smile: ([30787589](https://github.com/ritz078/embed.js/commit/30787589))
",31244986
1381,False,False,2015-12-11T17:17:25Z,2015-12-11T17:19:20Z,"<a name""3.1.1""></a>

### 3.1.1 (2015-12-11)

#### Bug Fixes
- **instagram:** fixed issue with instagram embed ([c63abb22](https://github.com/ritz078/embed.js/commit/c63abb22))
",31244986
1382,False,False,2015-12-11T08:35:28Z,2015-12-11T08:37:24Z,"<a name""3.1.0""></a>

## 3.1.0 (2015-12-11)

#### Bug Fixes
- **package:** replaced multiple main files with one ([fdf3b200](https://github.com/ritz078/embed.js/commit/fdf3b200))
",31244986
1383,False,False,2015-11-25T20:36:28Z,2015-11-25T20:40:46Z,"<a name""2.1.0""></a>

## 2.1.0 (2015-11-25)

#### Bug Fixes
- **autoplay:** Enabled when opening via preview ([f90416fb](https://github.com/ritz078/embed.js/commit/f90416fb))
- **babel:** added cachedirectory option to babel-loader ([5abdb64e](https://github.com/ritz078/embed.js/commit/5abdb64e))
- **css:**
  - added ejs-embed class to all embeds ([e9fdb880](https://github.com/ritz078/embed.js/commit/e9fdb880))
  - added display block to all iframes to remove padding at bottom ([bbccf07e](https://github.com/ritz078/embed.js/commit/bbccf07e))
  - Added color variable and minor changes ([59667b69](https://github.com/ritz078/embed.js/commit/59667b69))
  - Fixed css emoji sprite path and add input as callback value ([cb5c667d](https://github.com/ritz078/embed.js/commit/cb5c667d))
- **destroy:** replace text with original text on destroy ([fdfa2212](https://github.com/ritz078/embed.js/commit/fdfa2212))
- **embed all:** Changed selector from attribute name to class name ([5d72dc8b](https://github.com/ritz078/embed.js/commit/5d72dc8b))
- **gist:** Fixed inline embedding of github gist ([b2d6a005](https://github.com/ritz078/embed.js/commit/b2d6a005))
- **image:** Fixed default return bug in image embed and remove dead code ([75cff1ad](https://github.com/ritz078/embed.js/commit/75cff1ad))
- **inject:** removed rollup-plugin-inject from gruntfile.js ([0c2d59c2](https://github.com/ritz078/embed.js/commit/0c2d59c2))
- **instances:** Clash in options due to value change of options object ([e4a3fc21](https://github.com/ritz078/embed.js/commit/e4a3fc21))
- **markdown:**
  - fixed conflict arising due to inline image embed and native image embed. ([59b7afe0](https://github.com/ritz078/embed.js/commit/59b7afe0))
  - Accept heading without space if gfm set to true ([e011633e](https://github.com/ritz078/embed.js/commit/e011633e))
- **marked:** url parsing conflict between marked and native url parsing ([eb6997f2](https://github.com/ritz078/embed.js/commit/eb6997f2))
- **package:**
  - added stage-2 preset to dev dependency ([5ad90127](https://github.com/ritz078/embed.js/commit/5ad90127))
  - added transform-regenerator in dev dependencies ([4039f7cb](https://github.com/ritz078/embed.js/commit/4039f7cb))
- **preview:** Replace image with background-image for preview thumbnail ([01cc8f9e](https://github.com/ritz078/embed.js/commit/01cc8f9e))
- **smiley:** Smiley at last was not rendered due to conflict with marked ([e6072a08](https://github.com/ritz078/embed.js/commit/e6072a08))
- **travis:**
  - fixed parsing error due to incorrect indentation ([98d0d8a1](https://github.com/ritz078/embed.js/commit/98d0d8a1))
  - fixed parsing error due to incorrect indentation ([851b6f0c](https://github.com/ritz078/embed.js/commit/851b6f0c))
  - specifies brances for building and some minor code refactoring ([a911cd5f](https://github.com/ritz078/embed.js/commit/a911cd5f))
- **webpack-dev:** Removed grunt serve that ran webpack dev server ([36dbc9c1](https://github.com/ritz078/embed.js/commit/36dbc9c1))

#### Features
- **custom template:** added support for creating custom templates ([8372621d](https://github.com/ritz078/embed.js/commit/8372621d))
- **destroy:** Added destroy method to the plugin ([9f23b01b](https://github.com/ritz078/embed.js/commit/9f23b01b))
- **gist:**
  - Added github gist embedding support ([c19b0273](https://github.com/ritz078/embed.js/commit/c19b0273))
  - Feature to embed github gists added ([6f56fcbc](https://github.com/ritz078/embed.js/commit/6f56fcbc))
- **globalSettings:** Added support to set global options and render by attribute name ([2f87292a](https://github.com/ritz078/embed.js/commit/2f87292a))
- **inline:** Twitter inline embedding support added ([b3a9ec3e](https://github.com/ritz078/embed.js/commit/b3a9ec3e))
- **inline code:** Added inline code block embedding feature ([dc57a7f1](https://github.com/ritz078/embed.js/commit/dc57a7f1))
- **inline embed:**
  - Added functionality for inline embedding of youtube and vimeo videos ([31f3793a](https://github.com/ritz078/embed.js/commit/31f3793a))
  - Feature to allow inline embedding started ([99cb21fc](https://github.com/ritz078/embed.js/commit/99cb21fc))
- **map:**
  - Inline embedding of map added ([92564fbb](https://github.com/ritz078/embed.js/commit/92564fbb))
  - Added support for map embed with option place, view and streetview ([9a5d8b4c](https://github.com/ritz078/embed.js/commit/9a5d8b4c))
- **markdown:** Markdown parsing support added using marked.js ([74f7881d](https://github.com/ritz078/embed.js/commit/74f7881d))
- **rel:** Added option to provide rel attribute in link and added fix for media query ([0951dfb0](https://github.com/ritz078/embed.js/commit/0951dfb0), closes [#47](https://github.com/ritz078/embed.js/issues/47))
- **rollup:** replacing webpack with rollup in the build process ([2e316ced](https://github.com/ritz078/embed.js/commit/2e316ced))
- **rollup.js:** Integrated rollup.js in the build process ([243f10dc](https://github.com/ritz078/embed.js/commit/243f10dc))
- **url:** added buff.ly support to the url module ([12b944f8](https://github.com/ritz078/embed.js/commit/12b944f8))
",31244986
1384,False,False,2019-02-19T11:11:46Z,2019-02-19T11:14:56Z,"```
     ___  __          __
    / _ )/ /_ _____  / /__
   / _  / / // / _ \/  '_/
  /____/_/\_, /_//_/_/\_\
         /___/    v0.6.1
```

## How to install Blynk library: [⇨ link ⇦](http://help.blynk.cc/getting-started-library-auth-token-code-examples/how-to-install-blynk-library-for-arduino)

# In this release
- **Changes**
  * Switch default SSL port to `443`

- **Improvements**
  * Fix Bluetooth/BLE connection bug

⚡️ Regularly update your **IDE**, **Libraries** and **Boards**!

Full list of supported hardware is available [here](https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md)

**⚡️ If you like Blynk, don't forget to give us a github star! ⚡️**
",32791821
1385,False,False,2019-02-01T17:18:42Z,2019-02-01T17:43:36Z,"```
     ___  __          __
    / _ )/ /_ _____  / /__
   / _  / / // / _ \/  '_/
  /____/_/\_, /_//_/_/\_\
         /___/    v0.6.0
```

## How to install Blynk library: [⇨ link ⇦](http://help.blynk.cc/getting-started-library-auth-token-code-examples/how-to-install-blynk-library-for-arduino)

# In this release
- **New boards support**
  * **ESP32** Bluetooth `Serial Port Profile` support
  * **MKR 1400** support via **TinyGSM** library
  * **MKR 1400** support via MKRGSM library
  * **MKR 1500** support via MKRNB library
  * Basic **Blynk.Inject** support for **MKR1010**

- **Changes**
  * **TinyGSM** updated to **v0.3.6**
  * Switch default SSL port to `443`
  * **Blynk.Inject**: AP SSID is now randomized
  * Separate info field for `FIRMWARE_VERSION`, allow dynamic `BOARD_TEMPLATE_ID`

- **Improvements**
  * Improve ESP8266 and ESP32, Arduino boards detection
  * Fix float formatting in some cases
  * Use internal float format function for all TI boards (i.e. Energia IDE)
  * Fix some warnings, examples, etc.
  * Added `BLYNK_NO_DEFAULT_BANNER` option
  * Better-looking webpage for **Blynk.Inject**
  * New TinyGSM examples

⚡️ Regularly update your **IDE**, **Libraries** and **Boards**!

Full list of supported hardware is available [here](https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md)

**⚡️ If you like Blynk, don't forget to give us a github star! ⚡️**
",32791821
1386,False,False,2018-09-05T18:14:05Z,2018-09-05T18:20:01Z,"```
     ___  __          __
    / _ )/ /_ _____  / /__
   / _  / / // / _ \/  '_/
  /____/_/\_, /_//_/_/\_\
         /___/    v0.5.4
```

## How to install Blynk library: [⇨ link ⇦](http://help.blynk.cc/getting-started-library-auth-token-code-examples/how-to-install-blynk-library-for-arduino)

# In this release
- **New boards support**
  * Arduino **MKR WiFi 1010**
  * Arduino **MKR ETH** shield
  * Arduino **MKR VIDOR 4000** (use the example for `MKR WiFi 1010`)
  * Arduino **UNO WiFi Rev.2** (use the example for `MKR WiFi 1010`)

- **Changes**
  * Increase default `BLYNK_TIMEOUT_MS` to `3000`ms (most boards)
  * Add `BlynkTimer` to Linux example
  * Add a check for ESP8266 Core version
  * Improved WiFi connection speed in some cases
  * Improve email example
  * WiFi Provisioning: increase default brightness of indicator LED
  * WiFi Provisioning: Use built-in `Ticker.h` for ESP32

- **Bugfixes**
  * Fix `Terminal` on Particle
  * WiFi Provisioning: Fix reset button and indication for ESP32, ESP8266, MKR1000
  * WiFi Provisioning: Fix WiFi password length limited (increased to 64)

⚡️ If you're using Blynk WiFi Provisioning, it’s **highly recommended to upgrade**
⚡️ Regularly update your IDE, Libraries and Boards (**Core v2.4.2+ for ESP8266 is required**)

Full list of supported hardware is available [here](https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md)

**⚡️ If you like Blynk, don't forget to give us a github star! ⚡️**
",32791821
1387,False,False,2018-06-11T14:44:12Z,2018-06-11T14:45:22Z,"```
     ___  __          __
    / _ )/ /_ _____  / /__
   / _  / / // / _ \/  '_/
  /____/_/\_, /_//_/_/\_\
         /___/    v0.5.3
```

## How to install Blynk library: [⇨ link ⇦](http://help.blynk.cc/getting-started-library-auth-token-code-examples/how-to-install-blynk-library-for-arduino)

# In this release
- **New boards support**
  * Arduino MKR GSM 1400

- **New features**
  * [TinyGSM](https://github.com/vshymanskyy/TinyGSM) updated to 0.3.5
  * All Arduino MKR devices now support 128 Vpins
  * `terminal.clear()` support
  * Add `setDeviceName` for ESP32 BLE
  * Cloud OTA support for ESP32
  * Board info is now parseable from firmware binary (for OTA)
  * **Important.** When `BlynkTimer` struggles to run multiple times (due to a blocked loop), it just skips all the missed intervals, and calls your function only once. This now differs from `SimpleTimer`, which could call your function multiple times in this scenario.

- **Bugfixes**
  * Fix ESP32 BLE advertisement for iOS
  * Fix NTP time for ESP8266 SSL
  * Fix `param[index].asInt()` crash if index out of bound
  * Fix `WidgetTerminal` data length handling
  * ESP8266 now uses native `dtostrf` function

[PlatformIO](http://platformio.org/lib/show/415/Blynk), [Particle](https://build.particle.io/libs/blynk/), [ARM mbed](https://os.mbed.com/users/vshymanskyy/code/Blynk/) and [OpenWRT](https://github.com/vshymanskyy/blynk-library-openwrt) packages have been updated accordingly.
Full list of supported hardware is available [here](https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md)

**⚡️ If you like Blynk, don't forget to give us a github star! ⚡️**
",32791821
1388,False,False,2018-04-02T19:51:04Z,2018-04-02T19:57:42Z,"```
     ___  __          __
    / _ )/ /_ _____  / /__
   / _  / / // / _ \/  '_/
  /____/_/\_, /_//_/_/\_\
         /___/    v0.5.2
```

## How to install Blynk library: [⇨ link ⇦](http://help.blynk.cc/getting-started-library-auth-token-code-examples/how-to-install-blynk-library-for-arduino)

# In this release
- **General improvements**
  * [TinyGSM](https://github.com/vshymanskyy/TinyGSM) updated to 0.3.2
  * Switched port to 80 for Particle platform
  * Updated port in examples
- **Bugfixes:**
  * Fix linux: 100% CPU load, not working

[PlatformIO](http://platformio.org/lib/show/415/Blynk), [Particle](https://build.particle.io/libs/blynk/), [ARM mbed](https://os.mbed.com/users/vshymanskyy/code/Blynk/) and [OpenWRT](https://github.com/vshymanskyy/blynk-library-openwrt) packages have been updated accordingly.
Full list of supported hardware is available [here](https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md)

[JavaScript](https://github.com/vshymanskyy/blynk-library-js) and [Python](https://github.com/vshymanskyy/blynk-library-python) libraries were updated to use port 80.

**⚡️ If you like Blynk, don't forget to give us a github star! ⚡️**
",32791821
1389,False,False,2018-02-20T16:38:55Z,2018-02-20T16:48:51Z,"```
     ___  __          __
    / _ )/ /_ _____  / /__
   / _  / / // / _ \/  '_/
  /____/_/\_, /_//_/_/\_\
         /___/    v0.5.1
```

## How to install Blynk library: [⇨ link ⇦](http://help.blynk.cc/getting-started-library-auth-token-code-examples/how-to-install-blynk-library-for-arduino)

# In this release
- **New hardware support:**
  * TI CC3220 (Energia IDE)
- **General improvements**
  * **Blynk switched to using port `80` by default.** 🎉
  * Certificates added for easier switching from Blynk Cloud to Let's Encrypt
  * Add `setMin` & `setMax` to widgets
- **Bugfixes:**
  * Fix `pinMode` command
  * Fix ESP32 WiFi credentials provisioning

[PlatformIO](http://platformio.org/lib/show/415/Blynk), [Particle](https://build.particle.io/libs/blynk/), [ARM mbed](https://os.mbed.com/users/vshymanskyy/code/Blynk/) and [OpenWRT](https://github.com/vshymanskyy/blynk-library-openwrt) packages have been updated accordingly.
Full list of supported hardware is available [here](https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md)

**⚡️ If you like Blynk, don't forget to give us a github star! ⚡️**
",32791821
1390,False,False,2017-12-21T12:19:41Z,2017-12-21T12:20:41Z,"```
     ___  __          __
    / _ )/ /_ _____  / /__
   / _  / / // / _ \/  '_/
  /____/_/\_, /_//_/_/\_\
         /___/    v0.5.0
```

# How to install Blynk library.

☝️ **Blynk library should be installed manually** 

Follow the instructions:

 1. Download **Blynk_Release_vXX.zip** (scroll down to the Downloads section)
 2. Unzip the archive. You will notice that archive contains several folders and several libraries.
 3. Copy all of these libraries to ```your_sketchbook_folder``` of Arduino IDE. To find the location of ```your_sketchbook_folder```, go to top menu in Arduino IDE: 
Windows: ```File → Preferences```
Mac OS: ```Arduino → Preferences```

The structure of your your_sketchbook_folder should now look like this, (*along with your other sketches if you have them*):

```
your_sketchbook_folder/libraries/Blynk
your_sketchbook_folder/libraries/BlynkESP8266_Lib
...
your_sketchbook_folder/tools/BlynkUpdater
your_sketchbook_folder/tools/BlynkUsbScript
...
```
☝️ **Note that**: 

- all ```libraries``` should go to ```libraries``` folder
- all ```tools``` should go to ```tools``` folder


# In this release

- **New hardware support:**
  * **ESP32**
    * **[Bluetooth LE](https://community.blynk.cc/t/beta-esp32-ble-initial-support/19908)** initial support + example
    * SSL (secure connection) support + example
    * App Export example for ESP32 (with WiFi credentials provisioning)
  * **ESP8266**
    * SSL stability improvement (still not perfect due to [a bug in ESP Core](https://github.com/esp8266/Arduino/issues/3002))
    * SSL now checks certificate chain (previously fingerprint was used). Needs [2.4.0-rc2](https://github.com/esp8266/Arduino/releases/tag/2.4.0-rc2)
    * **BIG stability improvements** in Shield mode (AT commands)
  * Realtek **RTL8710** / Ameba support
  * Arduino [**UNO WiFi**](https://store.arduino.cc/arduino-uno-wifi) support
  * WIZnet **WizFi310** support
  * Improved **ARM mbed** support
  * Improved **Linux** support
  * All frameworks are now enabled for **Platform.IO** library
- **General improvements**
  * **Forget about “flood errors”. Probably ;)**
  * Library is now easier to port/run on 3rd party hardware
  * We now use a single implementation of **BlynkFifo**
  * Better diagnostic/debug prints
  * NeoPixel lib is no longer included in Blynk release zip package.
- **Bugfixes:**
  * Unexpected ""Login timeout"" during redirect (#374)
  * 100% CPU load on linux/raspberry
  * Compile Error with Arduino 101 (#369). Please keep in mind that #304 is still there...
  * Call `BLYNK_DISCONNECTED()` on unsuccessful write (#371)
  * RFDuino uses BLEPeripheral now
  * Travis CI build is fixed

[PlatformIO](http://platformio.org/lib/show/415/Blynk), [Particle](https://build.particle.io/libs/blynk/), [ARM mbed](https://os.mbed.com/users/vshymanskyy/code/Blynk/) and [OpenWRT](https://github.com/vshymanskyy/blynk-library-openwrt) packages have been updated accordingly.
Full list of supported hardware is available [here](https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md)

**⚡️ If you like Blynk, don't forget to give us a github star! ⚡️**
",32791821
1391,False,False,2017-10-24T22:00:29Z,2017-10-24T22:02:37Z,"```
     ___  __          __
    / _ )/ /_ _____  / /__
   / _  / / // / _ \/  '_/
  /____/_/\_, /_//_/_/\_\
         /___/    v0.4.10
```

# How to install Blynk library.

☝️ **Blynk library should be installed manually** 

Follow the instructions:

 1. Download **Blynk_Release_vXX.zip** (scroll down to the Downloads section)
 2. Unzip the archive. You will notice that archive contains several folders and several libraries.
 3. Copy all of these libraries to ```your_sketchbook_folder``` of Arduino IDE. To find the location of ```your_sketchbook_folder```, go to top menu in Arduino IDE: 
Windows: ```File → Preferences```
Mac OS: ```Arduino → Preferences```

The structure of your your_sketchbook_folder should now look like this, (*along with your other sketches if you have them*):

```
your_sketchbook_folder/libraries/Blynk
your_sketchbook_folder/libraries/BlynkESP8266_Lib
...
your_sketchbook_folder/tools/BlynkUpdater
your_sketchbook_folder/tools/BlynkUsbScript
...
```
☝️ **Note that**: 

- all ```libraries``` should go to ```libraries``` folder
- all ```tools``` should go to ```tools``` folder


# In this release
- **Improvements:**
  - Updated examples for OTA
  - Updated examples for RTC
- **Major fixes:**
  - Fix Raspi Linux build
  - `logEvent()` support for Particle
  - Crash when adding an uninitialized value to virtualWrite

Full list of supported hardware is [here](https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md)

**⚡️ If you like Blynk, don't forget to give us a github star! ⚡️**
",32791821
1392,False,False,2017-06-19T19:40:25Z,2017-06-19T20:14:16Z,"```
     ___  __          __
    / _ )/ /_ _____  / /__
   / _  / / // / _ \/  '_/
  /____/_/\_, /_//_/_/\_\
         /___/    v0.4.8
```

# How to install Blynk library.

☝️ **Blynk library should be installed manually** 

Follow the instructions:

 1. Download **Blynk_Release_vXX.zip** (scroll down to the Downloads section)
 2. Unzip the archive. You will notice that archive contains several folders and several libraries.
 3. Copy all of these libraries to ```your_sketchbook_folder``` of Arduino IDE. To find the location of ```your_sketchbook_folder```, go to top menu in Arduino IDE: 
Windows: ```File → Preferences```
Mac OS: ```Arduino → Preferences```

The structure of your your_sketchbook_folder should now look like this, (*along with your other sketches if you have them*):

```
your_sketchbook_folder/libraries/Blynk
your_sketchbook_folder/libraries/BlynkESP8266_Lib
...
your_sketchbook_folder/tools/BlynkUpdater
your_sketchbook_folder/tools/BlynkUsbScript
...
```
☝️ **Note that**: 

- all ```libraries``` should go to ```libraries``` folder
- all ```tools``` should go to ```tools``` folder


# In this release
- **Improvements & new features:**
  - More readable warning ""ESP is not responding"" instead of ""Cannot disable echo"".
  - **BlynkTimer** updated
  - ```Table.updateRow()``` support
- **Major fixes:**
  - ```BLYNK_APP_CONNECTED```, ```BLYNK_APP_DISCONNECTED``` (#313)
  - Big improvements on Particle stability (+ fix of #322)
- Updated examples & documentation

Full list of supported hardware is [here](https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md)

⚡️ If you like Blynk, don't forget to give us a github star! ⚡️
",32791821
1393,False,False,2017-04-09T12:26:00Z,2017-04-09T12:35:02Z,"```
     ___  __          __
    / _ )/ /_ _____  / /__
   / _  / / // / _ \/  '_/
  /____/_/\_, /_//_/_/\_\
         /___/    v0.4.7
```

# How to install Blynk library.

☝️ **Blynk library should be installed manually** 

Follow the instructions:

 1. Download **Blynk_Release_vXX.zip** (scroll down to the Downloads section)
 2. Unzip the archive. You will notice that archive contains several folders and several libraries.
 3. Copy all of these libraries to ```your_sketchbook_folder``` of Arduino IDE. To find the location of ```your_sketchbook_folder```, go to top menu in Arduino IDE: 
Windows: ```File → Preferences```
Mac OS: ```Arduino → Preferences```

The structure of your your_sketchbook_folder should now look like this, (*along with your other sketches if you have them*):

```
your_sketchbook_folder/libraries/Blynk
your_sketchbook_folder/libraries/BlynkESP8266_Lib
...
your_sketchbook_folder/tools/BlynkUpdater
your_sketchbook_folder/tools/BlynkUsbScript
...
```
☝️ **Note that**: 

- ```libraries``` should go to ```libraries``` folder
- ```tools``` should go to ```tools``` folder


# In this release
- **New hardware:**
  - Particle RPi
  - Generic [Arduino Client examples](https://github.com/blynkkk/blynk-library/tree/master/examples/More/ArduinoClient)
- **Improvements:**
  - **SimpleTimer** replaced by **BlynkTimer**. BlynkTimer is also available for **Linux and Particle**
  - ```virtualWrite``` with ```double``` now sends 6 decimal digits
  - Arduino IDE: added [Example Builder](http://examples.blynk.cc/) tool
  - Fixed ButtonInterrupt example
  - All examples updated
- **Internal updates:**
  - All docs and wiki now moved to http://help.blynk.cc/

Full list of supported hardware is [here](https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md)

⚡️ If you like Blynk, don't forget to give us a github star! ⚡️
",32791821
1394,False,False,2017-03-06T12:04:43Z,2017-03-06T12:05:28Z,"```
     ___  __          __
    / _ )/ /_ _____  / /__
   / _  / / // / _ \/  '_/
  /____/_/\_, /_//_/_/\_\
         /___/    v0.4.6
```

# How to install Blynk library.

☝️ **Blynk library should be installed manually** 

Follow the instructions:

 1. Download **Blynk_Release_vXX.zip** (scroll down to the Downloads section)
 2. Unzip the archive. You will notice that archive contains several folders and several libraries.
 3. Copy all of these libraries to ```your_sketchbook_folder``` of Arduino IDE. To find the location of ```your_sketchbook_folder```, go to top menu in Arduino IDE: 
Windows: ```File → Preferences```
Mac OS: ```Arduino → Preferences```

The structure of your your_sketchbook_folder should now look like this, (*along with your other sketches if you have them*):

```
your_sketchbook_folder/libraries/Blynk
your_sketchbook_folder/libraries/BlynkESP8266_Lib
...
your_sketchbook_folder/tools/BlynkUpdater
your_sketchbook_folder/tools/BlynkUsbScript
...
```
☝️ **Note that**: 

- ```libraries``` should go to ```libraries``` folder
- ```tools``` should go to ```tools``` folder


# In this release
- **New hardware:**
  - Feather M0 WiFi
  - AirBoard BLE
- **Improvements:**
  - New GSM example
  - Added links to new Example Browser
  - Arduino IDE updater tool fix
  - Fix debug prints on some platforms
  - UIP_Ethernet link updated
- **Internal updates:**
  - Export ""scripts"" folder for PlatformIO
  - Merged MBED/Particle into main repo
  - Fix BLE NUS description json
  - Updated WiFi provisioning

Full list of supported hardware: https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md

",32791821
1395,False,False,2017-01-11T11:20:23Z,2017-01-12T00:02:19Z,"```
     ___  __          __
    / _ )/ /_ _____  / /__
   / _  / / // / _ \/  '_/
  /____/_/\_, /_//_/_/\_\
         /___/    v0.4.4
```

### How to install library

**Blynk library should be installed manually** 

1. Download **Blynk_Release_v0.4.4.zip** (scroll down to the Downloads section)
2. Unzip it. This archive contains several libraries.
3. Copy them to  **sketchbook folder** of Arduino IDE.
To find exact sketchbook folder location, go to `File -> Preferences` top menu in Arduino IDE.

The structure of your sketchbook folder should look like this, along with your saved sketches:

```
sketchbook/libraries/Blynk
sketchbook/libraries/BlynkESP8266_Lib
...
sketchbook/tools/BlynkUpdater
sketchbook/tools/BlynkUsbScript
...
```

### In this release
- **New hardware:**
  - Energia BLE
  - TI LaunchPad MSP432
- **New features:**
  - **[Sketch Builder](http://examples.blynk.cc)**
  - Support overriding `BLYNK_RUN_YIELD`
  - New RTC mechanism
    (**things changed, please update your existing code accordingly to new examples**)
  - Preparation for OTA support
- **Bugs fixed:**
  - Fix Photon hanging, improve Particle cloud responsiveness
  - Less workarounds all over the code
  - Better usb-ser script
  - LED color example fixed
  - Updated IDE tools

Full list of supported hardware: https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md

",32791821
1396,False,False,2016-12-26T17:34:15Z,2016-12-26T17:48:42Z,"```
     ___  __          __
    / _ )/ /_ _____  / /__
   / _  / / // / _ \/  '_/
  /____/_/\_, /_//_/_/\_\
         /___/    v0.4.3
```

### In this release
- **New features:**
  - Update to Arduino IDE **1.8.0**
  - Add **Check for updates** to Tools menu [beta]
  - Add **Run USB script** to Tools menu [beta]
  - `BLYNK_APP_CONNECTED()` support (will be available soon)
  - Add `.config()` support for Particle
- **Bugs fixed:**
  - Fix syncVirtual with multiple pins
  - Improved GSM/GPRS support
  - Fix virtualWrite issue with `F()` strings
  - Travis CI updated

Full list of supported hardware: https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md

### ATTENTION!

The **Blynk_Release_v0.4.3.zip** package contains several libraries.
You need to copy them manually to your **sketchbook folder**.
Find exact sketchbook location in `File -> Preferences`.

The structure should look like this, along with your saved sketches:

```
sketchbook/libraries/Blynk
sketchbook/libraries/BlynkESP8266_Lib
...
sketchbook/tools/BlynkUpdater
sketchbook/tools/BlynkUsbScript
...
```
",32791821
1397,False,False,2016-12-16T19:50:07Z,2016-12-16T19:56:04Z,"```
     ___  __          __
    / _ )/ /_ _____  / /__
   / _  / / // / _ \/  '_/
  /____/_/\_, /_//_/_/\_\
         /___/    v0.4.2
```

### In this release
- Improved **SIM900** compatibility
- Improved **SIM800/SIM900** examples
- Improved BLE examples: fixed need to remove `SPI.h` in some cases
- Added direct links to libraries in Library Manager
- Updated [TinyGSM](https://github.com/vshymanskyy/TinyGSM) library to v0.1.4
- Travis CI updated

[Full list of supported hardware](https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md)

### ATTENTION!

```
The Blynk_Release_v0.4.2.zip package contains several libraries.
You need to copy them manually to your libraries folder.

The structure should look like this:
~\Arduino\libraries\Blynk
~\Arduino\libraries\BlynkESP8266_Lib
~\Arduino\libraries\Adafruit_NeoPixel
~\Arduino\libraries\SimpleTimer
~\Arduino\libraries\Time
~\Arduino\libraries\TinyGSM
```
",32791821
1398,False,False,2016-12-08T12:19:26Z,2016-12-08T12:40:39Z,"```
     ___  __          __
    / _ )/ /_ _____  / /__
   / _  / / // / _ \/  '_/
  /____/_/\_, /_//_/_/\_\
         /___/    v0.4.1
```

### In this release, just new fancy ASCII art logos!

Joking ;)
- **New hardware support:**
  - **SIM800/SIM900** (TCP stream and HTTP API examples)
  - Arduino **GSM Shield** (HTTP API)
  - Samsung ARTIK
- **New features:**
  - `Blynk.begin()` now **blocks** until server is connected
  - Unlimited count of parameters for `virtualWrite()` and `setProperty()`
  - `Blynk.syncVirtual()` now supports multiple virtual pins
  - `CUSTOM_BOARD` support for App Export
  - Re-written HTTP API examples
- **Widgets:**
  - Widgets now support `setLabel()` and `setColor()`
  - **WebHook widget** example for GET method
  - **Map widget** example
- **Infrastructure:**
  - Use `delay(0)` instead of `yield()` for better portability
  - Boards detector now detects even more boards
  - Updated `blynk-ser.sh` script
  - Indenter script updated
  - Add board description generator sketch
  - Add build test script for **all** boards from the menu in Arduino/Energia IDE
  - Added `.gitattributes`
  - Travis CI updated

Full list of supported hardware: https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md

### ATTENTION!

```
The Blynk_Release_v0.4.1.zip package contains several libraries.
You need to copy them manually to your libraries folder.

The structure should look like this:
~\Arduino\libraries\Blynk
~\Arduino\libraries\BlynkESP8266_Lib
~\Arduino\libraries\Adafruit_NeoPixel
~\Arduino\libraries\SimpleTimer
~\Arduino\libraries\Time
~\Arduino\libraries\TinyGSM
```
",32791821
1399,False,False,2016-10-26T19:03:18Z,2016-10-26T19:09:02Z,"### In this release
- **New hardware support:**
  - **OpenWrt** (package repository [here](https://github.com/vshymanskyy/blynk-library-openwrt) )
  - **App Export** support for **Arduino MKR1000**
  - **ESP32** Dev Board
  - BBC Micro:Bit (with BLE)
  - DFRobot Bluno
  - DFRobot BLE-Link module
  - Microduino/mCookie Bluetooth LE module
- **New features:**
  - **Geo DNS** redirect
  - **GPS Stream** widget
  - **Energia IDE:** device detection and simplified example structure
  - Server can now print warnings with `BLYNK_CMD_DEBUG_PRINT`
- Indicator LED animation generator for App export
- Fixed more build warnings
- Arduino Yun is using `BridgeClient` now
- Spaces **win**. All tabs converted to spaces ;)

Full list of supported hardware: https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md

### ATTENTION!

```
The Blynk_Release_v0.4.0.zip package contains several libraries.
You need to copy them manually to your libraries folder.

The structure should look like this:
~\Arduino\libraries\Blynk
~\Arduino\libraries\BlynkESP8266_Lib
~\Arduino\libraries\Adafruit_NeoPixel
~\Arduino\libraries\SimpleTimer
~\Arduino\libraries\Time
```
",32791821
1400,False,False,2016-10-03T16:38:00Z,2016-10-03T16:47:14Z,"### ATTENTION!

```
The Blynk_Release_v0.3.10.zip package contains several libraries.
You need to copy them manually to your libraries folder.

The structure should look like this:
~\Arduino\libraries\Blynk
~\Arduino\libraries\BlynkESP8266_Lib
~\Arduino\libraries\Adafruit_NeoPixel
~\Arduino\libraries\SimpleTimer
~\Arduino\libraries\Time
```

### In this release
- **New hardware support:**
  - STM32F103 Blue Pill
  - HC-05/HC-06 bluetooth modules support
- **New features:**
  - **App Export** (publishing) + **myPlant App** example!
- Github PR and Issue templates
- Removed deprecated BlynkSimpleSerial

Full list of supported hardware: https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md
",32791821
1401,False,False,2016-09-13T21:01:16Z,2016-09-13T21:03:38Z,"### ATTENTION!

```
The Blynk_Release_v0.3.9.zip package contains several libraries.
You need to copy them manually to your libraries folder.

The structure should look like this:
~\Arduino\libraries\Blynk
~\Arduino\libraries\BlynkESP8266_Lib
~\Arduino\libraries\SimpleTimer
~\Arduino\libraries\Time
```

### In this release
- **New features:**
  - `setProperty` support
  - **TimeInput** widget
  - **Player** widget
  - **Table** widget
  - Arduino IDE 1.6.11 support
  - Energia IDE 1.6.10 (E18) support
- New library format (1.5.x)
- Fixed SimpleTimer for some boards like Edison
- Fixed CC3000 DHCP regression
- Fixed some warnings during compilation
- Updated Travis build system (switch to PlatformIO 3.0 Build System)
- New and updated examples

Full list of supported hardware: https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md
",32791821
1402,False,False,2016-07-11T17:16:20Z,2016-07-11T17:42:19Z,"### ATTENTION!

```
The Blynk_Release_v0.3.8.zip package contains several libraries.
You need to copy them manually to your libraries folder.

The structure should look like this:
~\Arduino\libraries\Blynk
~\Arduino\libraries\BlynkESP8266_Lib
~\Arduino\libraries\SimpleTimer
~\Arduino\libraries\Time
```

### In this release
- **New boards support:**
  - Fishino.it
- **Bluetooth Smart (4.0 LE) support** _[ BETA ]_
  - RedBear Duo
  - RedBearLab BLE Mini
  - RedBearLab BLE Nano
  - Simblee BLE
  - RFDuino BLE
- `BlynkSimpleSerial` class is deprecated now!
  - _Please use our new, better USB/Serial examples_
- Fixed 128 Virtual Pins for ESP8266
- Fixed `Bridge.virtualWrite(pin, ...)` with multiple parameters
- Enabled SSL fingerprint check for ESP8266
- Fixed info sending for Arduino WiFi Shield and ESP8266 WiFi Shield
- Auto-generate Ethernet MAC address based on Auth Token
- Remove CC3000 socket inactivity timeout
- Updated Travis build system

Full list of supported hardware: https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md
",32791821
1403,False,False,2016-05-25T21:53:24Z,2016-05-25T21:57:54Z,"### ATTENTION!

```
The Blynk_v0.3.7.zip package contains several libraries.
You need to copy them manually to your libraries folder.

The structure should look like this:
~\Arduino\libraries\Blynk
~\Arduino\libraries\BlynkESP8266_Lib
~\Arduino\libraries\SimpleTimer
~\Arduino\libraries\Time
```

### In this release
- **Bluetooth Smart (4.0 LE) support** _[ BETA ]_
  - Arduino 101
  - RedBearLab Blend Micro
  - nRF8001 (Adafruit Bluefruit LE, etc)
  - HM-10/HC-08 BLE modules
- Fix for RN-XV WiFi
- Fix Teensy USB

Full list of supported hardware: http://community.blynk.cc/t/hardware-supported-by-blynk/16
",32791821
1404,False,False,2016-05-16T17:15:37Z,2016-05-16T17:33:45Z,"### ATTENTION!

```
Blynk_v0.3.6.zip package contains several libraries.
You need to copy them manually to your libraries folder.

The structure should look like this:
~\Arduino\libraries\Blynk
~\Arduino\libraries\BlynkESP8266_Lib
~\Arduino\libraries\SimpleTimer
~\Arduino\libraries\Time
```

### In this release
- New hardware support:
  - Teensy 3.2/3.1
  - Oak by Digistump
  - chipKIT Uno32
- New features:
  - 128 Virtual Pins on some platforms!
  - Eliminate `printf()` usage on some platforms
  - Compile-time hardware detection
  - Platformio CI & Arduino Builder build-script generators
- Improved examples, keywords and documentation
  - DHT11, DHT22
  - Intel Galileo
  - State synchronisation
  - Menu widget
  - HTTP API
- Some minor fixes in the core

Full list of supported hardware: http://community.blynk.cc/t/hardware-supported-by-blynk/16
",32791821
1405,False,False,2016-03-19T12:57:18Z,2016-03-19T13:02:29Z,"```
ATTENTION!
The Blynk_v0.3.4.zip package contains several libraries.
You need to copy them manually to your libraries folder.

The structure should look like this:
~\Arduino\libraries\Blynk
~\Arduino\libraries\BlynkESP8266_HardSer
~\Arduino\libraries\BlynkESP8266_SoftSer
~\Arduino\libraries\SimpleTimer
~\Arduino\libraries\Time
```

In this release:
- New hardware support:
  - Arduino MKR1000
- New features:
  - `Blynk.sms()` support
- Fixed RTC widget
- Switched to **blynk-cloud.com**
- Improved examples, keywords and documentation
- Some minor fixes

Full list of supported hardware: http://community.blynk.cc/t/hardware-supported-by-blynk/16
",32791821
1406,False,False,2016-02-27T21:59:14Z,2016-02-29T12:18:23Z,"```
ATTENTION!
The Blynk_v0.3.3.zip package contains several libraries.
You need to copy them manually to your libraries folder.

The structure should look like this:
~\Arduino\libraries\Blynk
~\Arduino\libraries\BlynkESP8266_HardSer
~\Arduino\libraries\BlynkESP8266_SoftSer
~\Arduino\libraries\SimpleTimer
~\Arduino\libraries\Time
```

In this release:
- New hardware support:
  - RedBear DUO
  - ESP8266 SSL support (experimental)
  - WeMos D1, Node MCU
  - Arduino Ethernet Shield 2
  - Arduino WiFi101 Shield
  - TI Stellaris LM4F120 LaunchPad (over USB)
  - SparkFun ESP8266 Thing
  - SparkFun Photon RedBoard
  - Particle Photon
  - WiPy (bundled with uPython library)
- New features:
  - RTC widget
  - `virtualWrite` can handle multiple values (up to 4, for multi-channel widgets)
  - Heartbeat period customization
  - Sync API: `syncAll()` and `syncVirtual()`
  - `BLYNK_CONNECTED()` handler
- `blynk_ctrl.py` now supports reading values from the server
- Improved examples, keywords and documentation
- Many minor fixes

Full list of supported hardware: http://community.blynk.cc/t/hardware-supported-by-blynk/16
",32791821
1407,False,False,2015-09-24T13:07:32Z,2015-09-24T17:03:20Z,"```
The Blynk_v0.3.1.zip package contains several libraries.
You need to copy them manually to your libraries folder.

The structure should look like this:
~\Arduino\libraries\Blynk
~\Arduino\libraries\BlynkESP8266_HardSer
~\Arduino\libraries\BlynkESP8266_SoftSer
~\Arduino\libraries\SimpleTimer
```

In this release:
- New boards support:
  - TI CC3200-LaunchXL
  - TI Tiva C Connected
- Preliminary ARM mbed support (we will release a separate library for that)
- Slightly optimized Flash/RAM usage + speed of parser
- Better examples
- ESP8266 as a shield support was re-factored, stability improved
- The package comes with some dependency libraries
- Many minor fixes

Full list of supported hardware: http://community.blynk.cc/t/hardware-supported-by-blynk/16
",32791821
1408,False,False,2015-07-09T12:34:13Z,2015-07-09T13:56:53Z,"- New functions:
  - Terminal widget support
  - ""Named pins"" support
  - Gateway implementation in Python [prototype]
- Improvements:
  - Arduino WiFi shield stability
  - Flood detection improvement
  - Minor bugfixes
",32791821
1409,False,False,2015-08-05T15:40:03Z,2015-08-05T15:41:57Z,"This is a major functionality and device support release.
- **New features:**
  - Flexible network connection control
    - Ability to manage WiFi connection manually
    - Connect to open WiFi networks
    - Control Blynk cloud connection (on/off)
    - ... details here: http://community.blynk.cc/t/new-features-on-master-branch-v0-2-5-beta/1014
  - **Direct-Connect** - connect directly to the device
    (device is like a server with a pre-configured dashboard)
  - Support `#define`'d virtual pin numbers in `BLYNK_READ` and `BLYNK_WRITE`
  - Use `V0`, `V1`, `V2` ... synonyms for virtual pins for better code readability
  - **blynk_ctrl.py** Python script for automating sending commands to devices
- **New hardware support:**
  - Arduino Leonardo, Micro, Mini (descriptions added)
  - Intel Edison (Galileo not tested, but should work)
  - **RedBearLab**
    - CC3200
    - WiFi Mini
  - **LinkIt ONE**
  - LightBlue Bean
    (experts only!!! tested with PC as a BLE<->TCP gateway, apps are not ready for BLE yet)
  - \+ general Energia WiFi support
- **Many improvements and bugfixes**

Full list of supported hardware: http://community.blynk.cc/t/hardware-supported-by-blynk/16

BTW, I released Espruino and Node.js client (alpha stage): https://github.com/vshymanskyy/blynk-library-js
",32791821
1410,False,False,2015-06-30T18:06:21Z,2015-06-28T13:29:00Z,"- New hardware support:
  - ESP8266 as a shield (running AT firmware)
  - RN-XV WiFly
  - Seeed Studio Ethernet Shield V2.0 (W5200)
  - \+ You can implement your own connection type easily (User_Defined_Connection example)!
- Major connection stability improvement:
  - ESP8266 standalone
  - Particle Core (Spark Core)
- Lots of small changes based on the community feedback
  - String class support in Arduino-like platforms
  - Better examples
  - Updated documentation
- Fixed some compilation errors (ENC28J60 + HanRun, ESP8266)
- Travis CI + PlatformIO
",32791821
1411,False,True,2015-06-16T16:31:37Z,2015-06-16T17:07:32Z,"- New hardware support:
  - ESP8266 as a shield (running AT firmware)
  - RN-XV WiFly
  - Seeed Studio Ethernet Shield V2.0 (W5200)
- Lots of small changes based on the community feedback
- Fixed some compilation errors (ENC28J60+HanRun, ESP8266)
- Updated documentation and examples
",32791821
1412,False,False,2015-05-12T16:52:30Z,2015-05-12T16:54:04Z,"Updated and restructured examples.
Improved trouble detection.
",32791821
1413,False,False,2015-05-01T09:24:21Z,2015-05-01T11:48:22Z,"Bridge
SSL using gateway script
",32791821
1414,False,False,2020-03-20T13:13:46Z,2020-03-20T13:15:14Z,"* Fixed a SyntaxError ""'return' with argument inside generator"" for PIO Unified Debugger when Python 2.7 is used
* Fixed an issue when ``lib_archive = no`` was not honored in [""platformio.ini""](https://docs.platformio.org/page/projectconf.html)
* Fixed a TypeError ""super(type, obj): obj must be an instance or subtype of type"" when device monitor is used with a custom dev-platform filter ([issue #3431](https://github.com/platformio/platformio-core/issues/3431))",19606299
1415,False,False,2020-03-19T20:38:05Z,2020-03-19T20:45:04Z,"* Initial support for an official [PlatformIO for CLion IDE](https://docs.platformio.org/page/integration/ide/clion.html) plugin:

  - Smart C and C++ editor
  - Code refactoring
  - On-the-fly code analysis
  - ""New PlatformIO Project"" wizard
  - Building, Uploading, Testing
  - Integrated debugger (inline variable view, conditional breakpoints, expressions, watchpoints, peripheral registers, multi-thread support, etc.)

* [Device Monitor 2.0](https://docs.platformio.org/page/core/userguide/device/cmd_monitor.html)

  - Added **PlatformIO Device Monitor Filter API** (dev-platforms can extend base device monitor with a custom functionality, such as exception decoding) ([pull #3383](https://github.com/platformio/platformio-core/pull/3383))
  - Configure project device monitor with [monitor_filters](https://docs.platformio.org/page/projectconf/section_env_monitor.html#monitor-filters) option
  - [Capture device monitor output to a file](https://docs.platformio.org/page/core/userguide/device/cmd_monitor.html#capture-output-to-a-file) with ``log2file`` filter ([issue #670](https://github.com/platformio/platformio-core/issues/670))
  - Show a timestamp for each new line with ``time`` filter ([issue #981](https://github.com/platformio/platformio-core/issues/981))
  - Send a text to device on ENTER with ``send_on_enter`` filter ([issue #926](https://github.com/platformio/platformio-core/issues/926))
  - Show a hexadecimal representation of the data (code point of each character) with ``hexlify`` filter

* New standalone (1-script) [PlatformIO Core Installer](https://github.com/platformio/platformio-core-installer)
* Initial support for [Renode](https://docs.platformio.org/page/plus/debug-tools/renode.html) simulation framework ([issue #3401](https://github.com/platformio/platformio-core/issues/3401))
* Added support for Arm Mbed ""module.json"" ``dependencies`` field ([issue #3400](https://github.com/platformio/platformio-core/issues/3400))
* Improved support for Arduino ""library.properties"" ``depends`` field
* Fixed an issue when quitting from PlatformIO IDE does not shutdown PIO Home server
* Fixed an issue ""the JSON object must be str, not 'bytes'"" when PIO Home is used with Python 3.5 ([issue #3396](https://github.com/platformio/platformio-core/issues/3396))
* Fixed an issue when Python 2 does not keep encoding when converting "".ino"" ([issue #3393](https://github.com/platformio/platformio-core/issues/3393))
* Fixed an issue when ``""libArchive"": false`` in ""library.json"" does not work ([issue #3403](https://github.com/platformio/platformio-core/issues/3403))
* Fixed an issue when not all commands in [compilation database ""compile_commands.json""](https://docs.platformio.org/page/integration/compile_commands.html) use absolute paths ([pull #3415](https://github.com/platformio/platformio-core/pull/3415))
* Fixed an issue when unknown transport is used for [PIO Unit Testing](https://docs.platformio.org/page/plus/unit-testing.html) engine ([issue #3422](https://github.com/platformio/platformio-core/issues/3422))",19606299
1416,False,False,2020-02-17T12:25:27Z,2020-02-17T12:27:01Z,"* Improved VSCode template with special ``forceInclude`` field for direct includes via ``-include`` flag ([issue #3379](https://github.com/platformio/platformio-core/issues/3379))
* Improved support of PIO Home on card-sized PC (Raspberry Pi, etc.) ([issue #3313](https://github.com/platformio/platformio-core/issues/3313))
* Froze ""marshmallow"" dependency to 2.X for Python 2 ([issue #3380](https://github.com/platformio/platformio-core/issues/3380))
* Fixed ""TypeError: unsupported operand type(s)"" when system environment variable is used by project configuration parser ([issue #3377](https://github.com/platformio/platformio-core/issues/3377))
* Fixed an issue when Library Dependency Finder (LDF) ignores custom ""libLDFMode"" and ""libCompatMode"" options in [library.json](http://docs.platformio.org/page/librarymanager/config.html)
* Fixed an issue when generating of compilation database ""compile_commands.json"" does not work with Python 2.7 ([issue #3378](https://github.com/platformio/platformio-core/issues/3378))
",19606299
1417,False,False,2020-02-12T14:42:13Z,2020-02-12T14:54:11Z,"* [PlatformIO Home 3.1](http://docs.platformio.org/page/home/index.html):

  - Project Manager
  - Project Configuration UI for [""platformio.ini""](https://docs.platformio.org/page/projectconf.html)

* [PIO Check](http://docs.platformio.org/page/plus/pio-check.html) – automated code analysis without hassle:

  - Added support for [PVS-Studio](https://docs.platformio.org/page/plus/check-tools/pvs-studio.html) static code analyzer

* Initial support for [Project Manager](https://docs.platformio.org/page/userguide/project/index.html) CLI:

  - Show computed project configuration with a new [platformio project config](https://docs.platformio.org/page/userguide/project/cmd_config.html) command or dump to JSON with ``platformio project config --json-output`` ([issue #3335](https://github.com/platformio/platformio-core/issues/3335))
  - Moved ``platformio init`` command to [platformio project init](https://docs.platformio.org/page/userguide/project/cmd_init.html)

* Generate [compilation database ""compile_commands.json""](https://docs.platformio.org/page/faq.html#compilation-database-compile-commands-json) ([issue #2990](https://github.com/platformio/platformio-core/issues/2990))
* Control debug flags and optimization level with a new [debug_build_flags](https://docs.platformio.org/page/projectconf/section_env_debug.html#debug-build-flags) option
* Install a dev-platform with ALL declared packages using a new ``--with-all-packages`` option for [pio platform install](https://docs.platformio.org/page/userguide/platforms/cmd_install.html) command  ([issue #3345](https://github.com/platformio/platformio-core/issues/3345))
* Added support for ""pythonPackages"" in [platform.json](https://docs.platformio.org/page/platforms/creating_platform.html#manifest-file-platform-json) manifest (PlatformIO Package Manager will install dependent Python packages from PyPi registry automatically when dev-platform is installed)
* Handle project configuration (monitor, test, and upload options) for PIO Remote commands ([issue #2591](https://github.com/platformio/platformio-core/issues/2591))
* Added support for Arduino's library.properties ``depends`` field ([issue #2781](https://github.com/platformio/platformio-core/issues/2781))
* Autodetect monitor port for boards with specified HWIDs ([issue #3349](https://github.com/platformio/platformio-core/issues/3349))
* Updated SCons tool to 3.1.2
* Updated Unity tool to 2.5.0
* Made package ManifestSchema compatible with marshmallow >= 3 ([issue #3296](https://github.com/platformio/platformio-core/issues/3296))
* Warn about broken library manifest when scanning dependencies ([issue #3268](https://github.com/platformio/platformio-core/issues/3268))
* Do not overwrite custom items in VSCode's ""extensions.json"" ([issue #3374](https://github.com/platformio/platformio-core/issues/3374))
* Fixed an issue when ``env.BoardConfig()`` does not work for custom boards in extra scripts of libraries ([issue #3264](https://github.com/platformio/platformio-core/issues/3264))
* Fixed an issue with ""start-group/end-group"" linker flags on Native development platform ([issue #3282](https://github.com/platformio/platformio-core/issues/3282))
* Fixed default PIO Unified Debugger configuration for [J-Link probe](http://docs.platformio.org/page/plus/debug-tools/jlink.html)
* Fixed an issue with LDF when header files not found if ""libdeps_dir"" is within a subdirectory of ""lib_extra_dirs"" ([issue #3311](https://github.com/platformio/platformio-core/issues/3311))
* Fixed an issue ""Import of non-existent variable 'projenv''"" when development platform does not call ""env.BuildProgram()"" ([issue #3315](https://github.com/platformio/platformio-core/issues/3315))
* Fixed an issue when invalid CLI command does not return non-zero exit code
* Fixed an issue when Project Inspector crashes when flash use > 100% ([issue #3368](https://github.com/platformio/platformio-core/issues/3368))
* Fixed a ""UnicodeDecodeError"" when listing built-in libraries on macOS with Python 2.7 ([issue #3370](https://github.com/platformio/platformio-core/issues/3370))
* Fixed an issue with improperly handled compiler flags with space symbols in VSCode template ([issue #3364](https://github.com/platformio/platformio-core/issues/3364))
* Fixed an issue when no error is raised if referred parameter (interpolation) is missing in a project configuration file ([issue #3279](https://github.com/platformio/platformio-core/issues/3279))",19606299
1418,False,False,2019-11-07T14:54:21Z,2019-11-07T15:01:25Z,"* [PIO Check](http://docs.platformio.org/page/plus/pio-check.html) – automated code analysis without hassle:
  - Potential NULL pointer dereferences
  - Possible indexing beyond array bounds
  - Suspicious assignments
  - Reads of potentially uninitialized objects
  - Unused variables or functions
  - Out of scope memory usage.
* [PlatformIO Home 3.0](http://docs.platformio.org/page/home/index.html) and Project Inspection
  - Static Code Analysis
  - Firmware File Explorer
  - Firmware Memory Inspection
  - Firmware Sections & Symbols Viewer.
* Added support for [Build Middlewares](http://docs.platformio.org/page/projectconf/advanced_scripting.html#build-middlewares): configure custom build flags per specific file, skip any build nodes from a framework, replace build file with another on-the-fly, etc.
* Extend project environment configuration in ""platformio.ini"" with other sections using a new [extends](http://docs.platformio.org/page/projectconf/section_env_advanced.html#extends) option ([issue #2953](https://github.com/platformio/platformio-core/issues/2953))
* Generate ``.ccls`` LSP file for [Emacs](https://docs.platformio.org/page/ide/emacs.html) cross references, hierarchies, completion and semantic highlighting
* Added ``--no-ansi`` flag for [PIO Core](http://docs.platformio.org/page/userguide/index.html) to disable ANSI control characters
* Added ``--shutdown-timeout`` option to [PIO Home Server](http://docs.platformio.org/page/userguide/cmd_home.html)
* Fixed an issue with project generator for [CLion IDE](http://docs.platformio.org/page/ide/clion.html) when 2 environments were used ([issue #2824](https://github.com/platformio/platformio-core/issues/2824))
* Fixed default PIO Unified Debugger configuration for [J-Link probe](http://docs.platformio.org/page/plus/debug-tools/jlink.html)
* Fixed an issue when configuration file options partly ignored when using custom ``--project-conf`` ([issue #3034](https://github.com/platformio/platformio-core/issues/3034))
* Fixed an issue when installing a package using custom Git tag and submodules were not updated correctly ([issue #3060](https://github.com/platformio/platformio-core/issues/3060))
* Fixed an issue with linking process when ``$LDSCRIPT`` contains a space in path
* Fixed security issue when extracting items from TAR archive ([issue #2995](https://github.com/platformio/platformio-core/issues/2995))
* Fixed an issue with project generator when ``src_build_flags`` were not respected ([issue #3137](https://github.com/platformio/platformio-core/issues/3137))
* Fixed an issue when booleans in ""platformio.ini"" are not parsed properly ([issue #3022](https://github.com/platformio/platformio-core/issues/3022))
* Fixed an issue with invalid encoding when generating project for Visual Studio ([issue #3183](https://github.com/platformio/platformio-core/issues/3183))
* Fixed an issue when Project Config Parser does not remove in-line comments when Python 3 is used ([issue #3213](https://github.com/platformio/platformio-core/issues/3213))
* Fixed an issue with a GCC Linter for PlatformIO IDE for Atom ([issue #3218](https://github.com/platformio/platformio-core/issues/3218))",19606299
1419,False,False,2019-08-30T12:41:59Z,2019-08-30T12:53:31Z,"* Added support for multi-environment PlatformIO project for [CLion IDE](http://docs.platformio.org/page/ide/clion.html) ([issue #2824](https://github.com/platformio/platformio-core/issues/2824))
* Generate ``.ccls`` LSP file for [Vim](http://docs.platformio.org/en/page/vim.html) cross references, hierarchies, completion and semantic highlighting ([issue #2952](https://github.com/platformio/platformio-core/issues/2952))
* Added support for [PLATFORMIO_DISABLE_COLOR](http://docs.platformio.org/page/envvars.html#envvar-PLATFORMIO_DISABLE_COLOR) system environment variable which disables color ANSI-codes in a terminal output ([issue #2956](https://github.com/platformio/platformio-core/issues/2956))
* Updated SCons tool to 3.1.1
* Remove ProjectConfig cache when ""platformio.ini"" was modified outside
* Fixed an issue with PIO Unified Debugger on Windows OS when debug server is piped
* Fixed an issue when [--upload-port](http://docs.platformio.org/page/userguide/cmd_run.html#cmdoption-platformio-run-upload-port) CLI flag does not override declared  [upload_port](http://docs.platformio.org/page/projectconf/section_env_upload.html#upload-port) option in [""platformio.ini"" (Project Configuration File)](https://docs.platformio.org/page/projectconf.html)",19606299
1420,False,False,2019-08-23T13:24:28Z,2019-08-23T13:26:53Z,* Fixed an issue with a broken [LDF](http://docs.platformio.org/page/librarymanager/ldf.html) when checking for framework compatibility [issue #2940](https://github.com/platformio/platformio-core/issues/2940),19606299
1421,False,False,2019-08-22T11:25:40Z,2019-08-22T11:29:09Z,"* Print [debug tool](http://docs.platformio.org/page/plus/debugging.html#tools-debug-probes) name for the active debugging session
* Do not shutdown PIO Home Server for ""upgrade"" operations ([issue #2784](https://github.com/platformio/platformio-core/issues/2784))
* Improved computing of project check sum (structure, configuration) and avoid unnecessary rebuilding
* Improved printing of tabulated results
* Automatically normalize file system paths to UNIX-style for Project Generator ([issue #2857](https://github.com/platformio/platformio-core/issues/2857))
* Ability to set ""databaseFilename"" for VSCode and C/C++ extension ([issue #2825](https://github.com/platformio/platformio-core/issues/2825))
* Renamed ""enable_ssl"" setting to [strict_ssl](http://docs.platformio.org/page/userguide/cmd_settings.html#strict-ssl)
* Fixed an issue with incorrect escaping of Windows slashes when using [PIO Unified Debugger](http://docs.platformio.org/page/plus/debugging.html) and ""piped"" openOCD
* Fixed an issue when ""debug"", ""home"", ""run"", and ""test"" commands were not shown in ""platformio --help"" CLI
* Fixed an issue with PIO Home's ""No JSON object could be decoded"" ([issue #2823](https://github.com/platformio/platformio-core/issues/2823))
* Fixed an issue when [library.json](http://docs.platformio.org/page/librarymanager/config.html) had priority over project configuration for [LDF](http://docs.platformio.org/page/librarymanager/ldf.html) ([issue #2867](https://github.com/platformio/platformio-core/issues/2867))",19606299
1422,False,False,2019-07-10T13:22:53Z,2019-07-10T13:32:34Z,"[Migration Guide from 3.0 to 4.0](http://docs.platformio.org/page/migration.html).

* [PlatformIO Plus Goes Open Source](https://community.platformio.org/t/platformio-plus-goes-open-source-improving-embedded-development-community-worldwide/8240/4)

  - Built-in [PIO Unified Debugger](http://docs.platformio.org/page/plus/debugging.html)
  - Built-in [PIO Unit Testing](http://docs.platformio.org/page/plus/unit-testing.html)

* **Project Configuration**

  - New project configuration parser with a strict options typing ([API](https://github.com/platformio/platformio-core/blob/develop/platformio/project/options.py))
  - Unified workspace storage ([workspace_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#workspace-dir) -> ``.pio``) for PlatformIO Build System, Library Manager, and other internal services ([issue #1778](https://github.com/platformio/platformio-core/issues/1778))
  - Share common (global) options between project environments using [[env]](http://docs.platformio.org/page/projectconf/section_env.html#global-scope-env) section ([issue #1643](https://github.com/platformio/platformio-core/issues/1643))
  - Include external configuration files with [extra_configs](http://docs.platformio.org/page/projectconf/section_platformio.html#extra-configs) option ([issue #1590](https://github.com/platformio/platformio-core/issues/1590))
  - Custom project ``***_dir`` options declared in [platformio](http://docs.platformio.org/page/projectconf/section_platformio.html) section have higher priority than [Environment variables](http://docs.platformio.org/page/envvars.html)
  - Added support for Unix shell-style wildcards for [monitor_port](http://docs.platformio.org/page/projectconf/section_env_monitor.html#monitor-port) option ([issue #2541](https://github.com/platformio/platformio-core/issues/2541))
  - Added new [monitor_flags](http://docs.platformio.org/page/projectconf/section_env_monitor.html#monitor-flags) option which allows passing extra flags and options to [platformio device monitor](http://docs.platformio.org/page/userguide/cmd_device.html#cmd-device-monitor) command ([issue #2165](https://github.com/platformio/platformio-core/issues/2165))
  - Added support for [PLATFORMIO_DEFAULT_ENVS](http://docs.platformio.org/page/envvars.html#envvar-PLATFORMIO_DEFAULT_ENVS) system environment variable ([issue #1967](https://github.com/platformio/platformio-core/issues/1967))
  - Added support for [shared_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#shared-dir) where you can place an extra files (extra scripts, LD scripts, etc.) which should be transferred to a [PIO Remote](http://docs.platformio.org/page/plus/pio-remote.html) machine

* **Library Management**

  - Switched to workspace ``.pio/libdeps`` folder for project dependencies instead of ``.piolibdeps``
  - Save libraries passed to [platformio lib install](http://docs.platformio.org/page/userguide/lib/cmd_install.html) command into the project dependency list ([lib_deps](http://docs.platformio.org/page/projectconf/section_env_library.html#lib-deps)) with a new ``--save`` flag ([issue #1028](https://github.com/platformio/platformio-core/issues/1028))
  - Install all project dependencies declared via [lib_deps](http://docs.platformio.org/page/projectconf/section_env_library.html#lib-deps) option using a simple [platformio lib install](http://docs.platformio.org/page/userguide/lib/cmd_install.html) command ([issue #2147](https://github.com/platformio/platformio-core/issues/2147))
  - Use isolated library dependency storage per project build environment ([issue #1696](https://github.com/platformio/platformio-core/issues/1696))
  - Look firstly in built-in library storages for a missing dependency instead of PlatformIO Registry ([issue #1654](https://github.com/platformio/platformio-core/issues/1654))
  - Override default source and include directories for a library via [library.json](http://docs.platformio.org/page/librarymanager/config.html) manifest using ``includeDir`` and ``srcDir`` fields
  - Fixed an issue when library keeps reinstalling for non-latin path ([issue #1252](https://github.com/platformio/platformio-core/issues/1252))
  - Fixed an issue when [lib_compat_mode = strict](http://docs.platformio.org/page/librarymanager/ldf.html#ldf-compat-mode) does not ignore libraries incompatible with a project framework

* **Build System**

  - Switched to workspace ``.pio/build`` folder for build artifacts instead of ``.pioenvs``
  - Switch between [Build Configurations](http://docs.platformio.org/page/projectconf/build_configurations.html) (``release`` and ``debug``) with a new project configuration option [build_type](http://docs.platformio.org/page/projectconf/section_env_build.html#build-type)
  - Custom [platform_packages](http://docs.platformio.org/page/projectconf/section_env_general.html#platform) per a build environment with an option to override default ([issue #1367](https://github.com/platformio/platformio-core/issues/1367))
  - Print platform package details, such as version, VSC source and commit ([issue #2155](https://github.com/platformio/platformio-core/issues/2155))
  - Control a number of parallel build jobs with a new [-j, --jobs](http://docs.platformio.org/page/userguide/cmd_run.html#cmdoption-platformio-run-j) option
  - Override default [""platformio.ini"" (Project Configuration File)](https://docs.platformio.org/page/projectconf.html) with a custom using ``-c, --project-conf`` option for [platformio run](http://docs.platformio.org/page/userguide/cmd_run.html), [platformio debug](http://docs.platformio.org/page/userguide/cmd_debug.html), or [platformio test](http://docs.platformio.org/page/userguide/cmd_test.html) commands ([issue #1913](https://github.com/platformio/platformio-core/issues/1913))
  - Override default development platform upload command with a custom [upload_command](http://docs.platformio.org/page/projectconf/section_env_upload.html#upload-command) ([issue #2599](https://github.com/platformio/platformio-core/issues/2599))
  - Configure a shared folder for the derived files (objects, firmwares, ELFs) from a build system using [build_cache_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#build-cache-dir) option ([issue #2674](https://github.com/platformio/platformio-core/issues/2674))
  - Fixed an issue when ``-U`` in ``build_flags`` does not remove macro previously defined via ``-D`` flag ([issue #2508](https://github.com/platformio/platformio-core/issues/2508))

* **Infrastructure**

  - Python 3 support ([issue #895](https://github.com/platformio/platformio-core/issues/895))
  - Significantly speedup back-end for PIO Home. It works super fast now!
  - Added support for the latest Python ""Click"" package (CLI) ([issue #349](https://github.com/platformio/platformio-core/issues/349))
  - Added options to override default locations used by PlatformIO Core ([core_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#core-dir), [globallib_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#globallib-dir), [platforms_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#platforms-dir), [packages_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#packages-dir), [cache_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#cache-dir)) ([issue #1615](https://github.com/platformio/platformio-core/issues/1615))
  - Removed line-buffering from [platformio run](http://docs.platformio.org/page/userguide/cmd_run.html) command which was leading to omitting progress bar from upload tools ([issue #856](https://github.com/platformio/platformio-core/issues/856))
  - Fixed numerous issues related to ""UnicodeDecodeError"" and international locales, or when project path contains non-ASCII chars ([issue #143](https://github.com/platformio/platformio-core/issues/143), [issue #1342](https://github.com/platformio/platformio-core/issues/1342), [issue #1959](https://github.com/platformio/platformio-core/issues/1959), [issue #2100](https://github.com/platformio/platformio-core/issues/2100))

* **Integration**

  - Support custom CMake configuration for CLion IDE using ``CMakeListsUser.txt`` file
  - Fixed an issue with hardcoded C standard version when generating project for CLion IDE ([issue #2527](https://github.com/platformio/platformio-core/issues/2527))
  - Fixed an issue with Project Generator when an include path search order is inconsistent to what passed to the compiler ([issue #2509](https://github.com/platformio/platformio-core/issues/2509))
  - Fixed an issue when generating invalid ""Eclipse CDT Cross GCC Built-in Compiler Settings"" if a custom [PLATFORMIO_CORE_DIR](http://docs.platformio.org/page/envvars.html#envvar-PLATFORMIO_CORE_DIR) is used ([issue #806](https://github.com/platformio/platformio-core/issues/806))

* **Miscellaneous**

  - Deprecated ``--only-check`` PlatformIO Core CLI option for ""update"" sub-commands, please use ``--dry-run`` instead
  - Fixed ""systemd-udevd"" warnings in [99-platformio-udev.rules](http://docs.platformio.org/page/faq.html#platformio-udev-rules) ([issue #2442](https://github.com/platformio/platformio-core/issues/2442))
  - Fixed an issue when package cache (Library Manager) expires too fast ([issue #2559](https://github.com/platformio/platformio-core/issues/2559))",19606299
1423,False,False,2019-04-23T09:47:27Z,2019-04-23T09:56:04Z,"* [PIO Unified Debugger](https://docs.platformio.org/page/plus/debugging.html): improved debugging in ``debug_load_mode = modified`` and fixed an issue with useless project rebuilding
* Project Generator: fixed a VSCode C/C++'s ""Cannot find"" warning when CPPPATH folder does not exist
* Fixed an ""IndexError: list index out of range"" for Arduino sketch preprocessor ([issue #2268](https://github.com/platformio/platformio-core/issues/2268))
* Fixed an issue when invalid ""env_default"" in [""platformio.ini"" (Project Configuration File)](https://docs.platformio.org/page/projectconf.html) results into unhandled errors ([issue #2265](https://github.com/platformio/platformio-core/issues/2265))",19606299
1424,False,False,2019-04-01T18:55:22Z,2019-04-01T18:55:41Z,"* Project Generator: fixed a warning ""Property !!! WARNING !!! is not allowed"" for VSCode ([issue #2243](https://github.com/platformio/platformio-core/issues/2243))
* Fixed an issue when PlatformIO Build System does not pick up ""mbed_lib.json"" files from libraries ([issue #2164](https://github.com/platformio/platformio-core/issues/2164))
* Fixed an error with conflicting declaration of a prototype (Arduino sketch preprocessor)
* Fixed ""FileExistsError"" when [platformio ci](https://docs.platformio.org/en/latest/userguide/cmd_ci.html) command is used in pair with ``--keep-build-dir`` option
* Fixed an issue with incorrect order of project ""include"" and ""src"" paths in ``CPPPATH`` ([issue #1914](https://github.com/platformio/platformio-core/issues/1914))",19606299
1425,False,False,2019-04-01T18:52:11Z,2019-04-01T18:53:31Z,"* Project Generator: added new targets for [CLion IDE](http://docs.platformio.org/en/latest/ide/clion.html) ""BUILD_VERBOSE"" and ""MONITOR"" (serial port monitor) ([issue #359](https://github.com/platformio/platformio-core/issues/359))
* Fixed an issue with slow updating of PlatformIO Core packages on Windows
* Fixed an issue when [platformio ci](https://docs.platformio.org/en/latest/userguide/cmd_ci.html) recompiles project if ``--keep-build-dir`` option is passed ([issue #2109](https://github.com/platformio/platformio-core/issues/2109))
* Fixed an issue when ``$PROJECT_HASH`` template was not expanded for the other directory ``***_dir`` options in [""platformio.ini"" (Project Configuration File)](https://docs.platformio.org/page/projectconf.html) ([issue #2170](https://github.com/platformio/platformio-core/issues/2170))",19606299
1426,False,False,2019-01-23T18:51:48Z,2019-01-23T18:58:43Z,"* Improved Project Generator for [Desktop IDEs](https://docs.platformio.org/en/latest/ide.html):
  - Use full path to PlatformIO CLI when generating a project ([issue #1674](https://github.com/platformio/platformio-core/issues/1674))
  - [CLion](https://docs.platformio.org/en/latest/ide/clion.html): Improved project portability using ""${CMAKE_CURRENT_LIST_DIR}"" instead of full path
  - [Eclipse](https://docs.platformio.org/en/latest/ide/eclipse.html): Provide language standard to a project C/C++ indexer ([issue #1010](https://github.com/platformio/platformio-core/issues/1010))
* Fixed an issue with incorrect detecting of compatibility (LDF) between generic library and Arduino or ARM mbed frameworks
* Fixed ""Runtime Error: Dictionary size changed during iteration"" ([issue #2003](https://github.com/platformio/platformio-core/issues/2003))
* Fixed an error ""Could not extract item..."" when extracting TAR archive with symbolic items on Windows platform ([issue #2015](https://github.com/platformio/platformio-core/issues/2015))",19606299
1427,False,False,2018-12-12T14:19:25Z,2018-12-12T14:23:30Z,"* Ignore *.asm and *.ASM files when building Arduino-based library (compatibility with Arduino builder)
* Fixed spurious project's ""Problems"" for [PlatformIO IDE for VSCode](http://docs.platformio.org/page/ide/vscode.html) when ARM mbed framework is used
* Fixed an issue with a broken headers list when generating "".clang_complete"" for [Emacs](http://docs.platformio.org/page/ide/emacs.html) ([issue #1960](https://github.com/platformio/platformio-core/issues/1960))",19606299
1428,False,False,2018-11-29T16:02:58Z,2018-11-29T16:08:49Z,"* Improved IntelliSense for [PlatformIO IDE for VSCode](http://docs.platformio.org/page/ide/vscode.html) via passing extra compiler information for C/C++ Code Parser (resolves issues with spurious project's ""Problems"")
* Fixed an issue with VSCode IntelliSense warning about the missed headers located in [include](http://docs.platformio.org/page/projectconf/section_platformio.html#include-dir) folder
* Fixed incorrect wording when initializing/updating project
* Fixed an issue with incorrect order for library dependencies ``CPPPATH`` ([issue #1914](https://github.com/platformio/platformio-core/issues/1914))
* Fixed an issue when Library Dependency Finder (LDF) does not handle project [src_filter](http://docs.platformio.org/page/projectconf/section_env_build.html#src-filter) ([issue #1905](https://github.com/platformio/platformio-core/issues/1905))
* Fixed an issue when Library Dependency Finder (LDF) finds spurious dependencies in ``chain+`` and ``deep+`` modes ([issue #1930](https://github.com/platformio/platformio-core/issues/1930))",19606299
1429,False,False,2018-10-29T12:10:57Z,2018-10-29T12:14:07Z,"* Generate an [include](http://docs.platformio.org/page/projectconf/section_platformio.html#include-dir) and [test](http://docs.platformio.org/page/projectconf/section_platformio.html#test-dir) directories with a README file when initializing a new project
* Support in-line comments for multi-line value (``lib_deps``, ``build_flags``, etc) in [“platformio.ini” (Project Configuration File)](https://docs.platformio.org/page/projectconf.html)
* Added ``$PROJECT_HASH`` template variable for [build_dir](http://docs.platformio.org/en/latest/projectconf/section_platformio.html#projectconf-pio-build-dir). One of the use cases is setting a global storage for project artifacts using [PLATFORMIO_BUILD_DIR](http://docs.platformio.org/en/latest/envvars.html#envvar-PLATFORMIO_BUILD_DIR) system environment variable. For example, ``/tmp/pio-build/$PROJECT_HASH`` (Unix) or ``%TEMP%/pio-build/$PROJECT_HASH`` (Windows)
* Improved a loading speed of PIO Home ""Recent News""
* Improved [PIO Unified Debugger](https://docs.platformio.org/en/page/plus/debugging.html) for ""mbed"" framework and fixed issue with missed local variables
* Introduced [""Release"" and ""Debug"" Build Configurations](http://docs.platformio.org/page/projectconf/build_configurations.html)
* Build project in ""Debug Mode"" including debugging information with a new ``debug`` target using [platformio run](https://docs.platformio.org/page/userguide/cmd_run.html) command or [targets](http://docs.platformio.org/page/projectconf/section_env_general.html#targets) option in ``platformio.ini``. The last option allows avoiding project rebuilding between ""Run/Debug"" modes. ([issue #1833](https://github.com/platformio/platformio-core/issues/1833))
* Process ``build_unflags`` for the cloned environment when building a static library
* Report on outdated [99-platformio-udev.rules](http://docs.platformio.org/page/faq.html#platformio-udev-rules) ([issue #1823](https://github.com/platformio/platformio-core/issues/1823))
* Show a valid error when the Internet is off-line while initializing a new project ([issue #1784](https://github.com/platformio/platformio-core/issues/1784))
* Do not re-create "".gitignore"" and "".travis.yml"" files if they were removed from a project
* Fixed an issue when dynamic build flags were not handled correctly ([issue #1799](https://github.com/platformio/platformio-core/issues/1799))
* Fixed an issue when ``pio run -t monitor`` always uses the first ``monitor_port`` even with multiple environments ([issue #1841](https://github.com/platformio/platformio-core/issues/1841))
* Fixed an issue with broken includes when generating ``.clang_complete`` and space is used in a path ([issue #1873](https://github.com/platformio/platformio-core/issues/1873))
* Fixed an issue with incorrect handling of a custom package name when using [platformio lib install](http://docs.platformio.org/page/userguide/lib/cmd_install.html) or [platformio platform install](http://docs.platformio.org/page/userguide/platforms/cmd_install.html) commands
",19606299
1430,False,False,2018-08-06T15:46:23Z,2018-08-06T15:50:15Z,"* [Program Memory Usage](http://docs.platformio.org/en/latest/faq.html#program-memory-usage)

  - Print human-readable memory usage information after a build and before uploading
  - Print detailed memory usage information with ""sections"" and ""addresses"" in [verbose mode](http://docs.platformio.org/en/latest/userguide/cmd_run.html#cmdoption-platformio-run-v)
  - Check maximum allowed ""program"" and ""data"" sizes before uploading/programming ([issue #1412](https://github.com/platformio/platformio-core/issues/1412))

* [PIO Unit Testing](http://docs.platformio.org/page/plus/unit-testing.html):

  - Documented [Project Shared Code](http://docs.platformio.org/page/plus/unit-testing.html#shared-code)
  - Force building of project source code using [test_build_project_src](http://docs.platformio.org/page/projectconf/section_env_test.html#test_build_project_src) option
  - Fixed missed ``UNIT_TEST`` macro for unit test components/libraries

* Check package structure after unpacking and raise error when antivirus tool blocks PlatformIO package manager ([issue #1462](https://github.com/platformio/platformio-core/issues/1462))
* Lock interprocess requests to PlatformIO Package Manager for install/uninstall operations ([issue #1594](https://github.com/platformio/platformio-core/issues/1594))
* Fixed an issue with [PIO Remote](http://docs.platformio.org/page/plus/pio-remote.html) when upload process depends on the source code of a project framework
* Fixed an issue when ``srcFilter`` field in [library.json](http://docs.platformio.org/page/librarymanager/config.html) breaks a library build ([issue #1735](https://github.com/platformio/platformio-core/issues/1735))",19606299
1431,False,False,2018-07-03T12:11:32Z,2018-07-03T12:41:29Z,"* Improved removing of default build flags using [build_unflags](http://docs.platformio.org/page/projectconf/section_env_build.html#build-unflags) option ([issue #1712](https://github.com/platformio/platformio-core/issues/1712))
* Export ``LIBS``, ``LIBPATH``, and ``LINKFLAGS`` data from project dependent libraries to the global build environment
* Don't export ``CPPPATH`` data of project dependent libraries to framework's build environment ([issue #1665](https://github.com/platformio/platformio-core/issues/1665))
* Handle ""architectures"" data from ""library.properties"" manifest in [lib_compat_mode = strict](http://docs.platformio.org/en/page/librarymanager/ldf.html#compatibility-mode)
* Added workaround for Python SemVer package's [issue #61](https://github.com/rbarrois/python-semanticversion/issues/61) with caret range and pre-releases
* Replaced conflicted ""env"" pattern by ""sysenv"" for [""platformio.ini"" Dynamic Variables""](http://docs.platformio.org/page/projectconf/dynamic_variables.html) ([issue #1705](https://github.com/platformio/platformio-core/issues/1705))
* Removed ""date&time"" when processing project with [platformio run](http://docs.platformio.org/page/userguide/cmd_run.html) command ([issue #1343](https://github.com/platformio/platformio-core/issues/1343))
* Fixed issue with invalid LD script if path contains space
* Fixed preprocessor for Arduino sketch when function returns certain type ([issue #1683](https://github.com/platformio/platformio-core/issues/1683))
* Fixed issue when [platformio lib uninstall](http://docs.platformio.org/page/userguide/lib/cmd_uninstall.html) removes initial source code ([issue #1023](https://github.com/platformio/platformio-core/issues/1023))",19606299
1432,False,False,2018-06-01T14:01:46Z,2018-06-01T14:05:23Z,"* [PlatformIO Home](http://docs.platformio.org/page/home/index.html) - interact with PlatformIO ecosystem using modern and cross-platform GUI:
  - ""Recent News"" block on ""Welcome"" page
  - Direct import of development platform's example
* Simplify configuration for [PIO Unit Testing](http://docs.platformio.org/page/plus/unit-testing.html): separate main program from a test build process, drop requirement for ``#ifdef UNIT_TEST`` guard
* Override any option from board manifest in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf/section_env_board.html#more-options) ([issue #1612](https://github.com/platformio/platformio-core/issues/1612))
* Configure a custom path to SVD file using [debug_svd_path](http://docs.platformio.org/page/projectconf/section_env_debug.html#debug-svd-path) option
* Custom project [description](http://docs.platformio.org/en/latest/projectconf/section_platformio.html#description) which will be used by [PlatformIO Home](http://docs.platformio.org/page/home/index.html)
* Updated Unity tool to 2.4.3
* Improved support for Black Magic Probe in ""uploader"" mode
* Renamed ""monitor_baud"" option to ""monitor_speed""
* Fixed issue when a custom [lib_dir](http://docs.platformio.org/page/projectconf/section_platformio.html#lib-dir) was not handled correctly ([issue #1473](https://github.com/platformio/platformio-core/issues/1473))
* Fixed issue with useless project rebuilding for case insensitive file systems (Windows)
* Fixed issue with ``build_unflags`` option when a macro contains value (e.g., ``-DNAME=VALUE``)
* Fixed issue which did not allow to override runtime build environment using extra POST script
* Fixed ""RuntimeError: maximum recursion depth exceeded"" for library manager ([issue #1528](https://github.com/platformio/platformio-core/issues/1528))",19606299
1433,False,False,2018-03-13T10:00:29Z,2018-03-13T10:19:47Z,"* [PlatformIO Home](http://docs.platformio.org/page/home/index.html) - interact with PlatformIO ecosystem using modern and cross-platform GUI:
  - Multiple themes (Dark & Light)
  - Ability to specify a name for new project
* Control [PIO Unified Debugger](http://docs.platformio.org/en/latest/plus/debugging.html) and its firmware loading mode using [debug_load_mode](http://docs.platformio.org/en/latest/projectconf/section_env_debug.html#debug-load-mode) option
* Added aliases (off, light, strict) for [LDF Compatibility Mode](http://docs.platformio.org/page/librarymanager/ldf.html)
* Search for a library using PIO Library Registry ID ``id:X`` (e.g. ``pio lib search id:13``)
* Show device system information (MCU, Frequency, RAM, Flash, Debugging tools) in a build log
* Show all available upload protocols before firmware uploading in a build log
* Handle ""os.mbed.com"" URL as a Mercurial (hg) repository
* Improved support for old mbed libraries without manifest
* Fixed project generator for Qt Creator IDE ([issue #1303](https://github.com/platformio/platformio-core/issues/1303), [issue #1323](https://github.com/platformio/platformio-core/issues/1323))
* Mark project source and library directories for CLion IDE ([issue #1359](https://github.com/platformio/platformio-core/issues/1359), [issue #1345](https://github.com/platformio/platformio-core/issues/1345), [issue #897](https://github.com/platformio/platformio-core/issues/897))
* Fixed issue with duplicated ""include"" records when generating data for IDE ([issue #1301](https://github.com/platformio/platformio-core/issues/1301))",19606299
1434,False,False,2018-01-18T13:12:25Z,2018-01-18T13:22:19Z,"* New ``test_speed`` option to control a communication baudrate/speed between [PIO Unit Testing](http://docs.platformio.org/page/plus/unit-testing.html) engine and a target device ([issue #1273](https://github.com/platformio/platformio-core/issues/1273))
* Show full library version in ""Library Dependency Graph"" including VCS information ([issue #1274](https://github.com/platformio/platformio-core/issues/1274))
* Configure a custom firmware/program name in build directory ([example](http://docs.platformio.org/page/projectconf/advanced_scripting.html#custom-firmware-program-name))
* Renamed ``envs_dir`` option to ``build_dir`` in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf/section_platformio.html#build-dir)
* Refactored code without ""arrow"" dependency (resolve issue with ""ImportError: No module named backports.functools_lru_cache"")
* Improved support of PIO Unified Debugger for Eclipse Oxygen
* Improved a work in off-line mode
* Fixed project generator for CLion and Qt Creator IDE ([issue #1299](https://github.com/platformio/platformio-core/issues/1299))
* Fixed PIO Unified Debugger for mbed framework
* Fixed library updates when a version is declared in VCS format (not SemVer)",19606299
1435,False,False,2017-12-28T15:26:12Z,2017-12-28T15:28:02Z,"PlatformIO Core 3.5.0 introduces many new features and performance improvements. The notable changes are as follows:

* [PlatformIO Home](http://docs.platformio.org/page/home/index.html) - interact with PlatformIO ecosystem using modern and cross-platform GUI:
  - Library Manager:
    * Search for new libraries in PlatformIO Registry
    * ""1-click"" library installation, per-project libraries, extra storages
    * List installed libraries in multiple storages
    * List built-in libraries (by frameworks)
    * Updates for installed libraries
    * Multiple examples, trending libraries, and more.
  - PlatformIO Projects
  - PIO Account
  - Development platforms, frameworks and board explorer
  - Device Manager: serial, logical, and multicast DNS services
* Integration with [Jenkins CI](http://docs.platformio.org/page/ci/jenkins.html)
* New [include](http://docs.platformio.org/page/projectconf/section_platformio.html#include-dir) folder for project's header files ([issue #1107](https://github.com/platformio/platformio-core/issues/1107))
* Depend on development platform using VSC URL (Git, Mercurial and Subversion) instead of a name in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf/section_env_general.html#platform). Drop support for ``*_stage`` dev/platform names (use VCS URL instead).
* Reinstall/redownload package with a new ``-f, --force`` option for [platformio lib install](http://docs.platformio.org/page/userguide/lib/cmd_install.html) and [platformio platform install](http://docs.platformio.org/page/userguide/platforms/cmd_install.html) commands ([issue #778](https://github.com/platformio/platformio-core/issues/778))
* Handle missed dependencies and provide a solution based on PlatformIO Library Registry ([issue #781](https://github.com/platformio/platformio-core/issues/781))
* New setting [projects_dir](http://docs.platformio.org/page/userguide/cmd_settings.html#projects-dir) that allows to override a default PIO Home Projects location ([issue #1161](https://github.com/platformio/platformio-core/issues/1161))
* [Library Dependency Finder (LDF)](http://docs.platformio.org/page/librarymanager/ldf.html):
  - Search for dependencies used in [PIO Unit Testing](http://docs.platformio.org/page/plus/unit-testing.html) ([issue #953](https://github.com/platformio/platformio-core/issues/953))
  - Parse library source file in pair with a header when they have the same name ([issue #1175](https://github.com/platformio/platformio-core/issues/1175))
  - Handle library dependencies defined as VCS or SemVer in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf/section_env_general.html#platform) ([issue #1155](https://github.com/platformio/platformio-core/issues/1155))
  - Added option to configure library [Compatible Mode](http://docs.platformio.org/page/librarymanager/ldf.html#compatibility-mode) using [library.json](http://docs.platformio.org/page/librarymanager/config.html)
* New options for [platformio device list](http://docs.platformio.org/page/userguide/cmd_device.html#platformio-device-list)  command:
  - ``--serial`` list available serial ports (default)
  - ``--logical`` list logical devices
  - ``--mdns`` discover multicast DNS services ([issue #463](https://github.com/platformio/platformio-core/issues/463))
* Other bug fixes and performance improvements.

See [PlatformIO 3.5 Release Notes](http://docs.platformio.org/page/history.html) for details.",19606299
1436,False,False,2017-08-02T13:51:45Z,2017-08-02T13:57:57Z,"* Pre/Post extra scripting for advanced control of PIO Build System ([issue #891](https://github.com/platformio/platformio-core/issues/891))
* New [lib_archive](http://docs.platformio.org/page/projectconf/section_env_library.html#lib-archive) option to control library archiving and linking behavior ([issue #993](https://github.com/platformio/platformio-core/issues/993))
* Add ""inc"" folder automatically to CPPPATH when ""src"" is available (works for project and library) ([issue #1003](https://github.com/platformio/platformio-core/issues/1003))
* Use a root of library when filtering source code using [library.json](http://docs.platformio.org/page/librarymanager/config.html)  and ``srcFilter`` field
* Added ``monitor_*`` options to white-list for [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf.html) ([issue #982](https://github.com/platformio/platformio-core/issues/982))
* Do not ask for board ID when initializing project for desktop platform
* Handle broken PIO Core state and create new one
* Fixed an issue with a custom transport for [PIO Unit Testing](http://docs.platformio.org/page/plus/unit-testing.html) when multiple tests are present
* Fixed an issue when can not upload firmware to SAM-BA based board (Due)",19606299
1437,False,False,2017-06-26T16:58:30Z,2017-06-26T17:04:23Z,"* [PIO Unified Debugger](http://docs.platformio.org/page/plus/debugging.html)

  - ""1-click"" solution, zero configuration
  - Support for 100+ embedded boards
  - Multiple architectures and development platforms
  - Windows, MacOS, Linux (+ARMv6-8)
  - Built-in into [PlatformIO IDE for Atom](http://docs.platformio.org/page/ide/atom.html) and [PlatformIO IDE for VScode](http://docs.platformio.org/page/ide/vscode.html)
  - Integration with [Eclipse](http://docs.platformio.org/page/ide/eclipse.html) and [Sublime Text](http://docs.platformio.org/page/ide/sublimetext.html)

* Filter [PIO Unit Testing](http://docs.platformio.org/page/plus/unit-testing.html) tests using a new ``test_filter`` option in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf.html) or [platformio test --filter](http://docs.platformio.org/page/userguide/cmd_test.html#cmdoption-platformio-test-f) command ([issue #934](https://github.com/platformio/platformio-core/issues/934))
* Custom ``test_transport`` for [PIO Unit Testing](http://docs.platformio.org/page/plus/unit-testing.html) Engine
* Configure Serial Port Monitor in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf.html) ([issue #787](https://github.com/platformio/platformio-core/issues/787))
* New [monitor](http://docs.platformio.org/page/userguide/cmd_run.html#cmdoption-platformio-run-t) target which allows to launch Serial Monitor automatically after successful ""build"" or ""upload"" operations ([issue #788](https://github.com/platformio/platformio-core/issues/788))
* Project generator for [VIM](http://docs.platformio.org/page/ide/vim.html)
* Multi-line support for the different options in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf.html), such as: ``build_flags``, ``build_unflags``, etc. ([issue #889](https://github.com/platformio/platformio-core/issues/889))
* Handle dynamic ``SRC_FILTER`` environment variable from [library.json extra script](http://docs.platformio.org/page/librarymanager/config.html#extrascript)
* Notify about multiple installations of PIO Core ([issue #961](https://github.com/platformio/platformio-core/issues/961))
* Improved auto-detecting of mbed-enabled media disks
* Automatically update Git-submodules for development platforms and libraries that were installed from repository
* Add support for ``.*cc`` extension ([issue #939](https://github.com/platformio/platformio-core/issues/939))
* Handle ``env_default`` in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/page/projectconf.html) when re-initializing a project ([issue #950](https://github.com/platformio/platformio-core/issues/950))
* Use root directory for PIO Home when path contains non-ascii characters ([issue #951](https://github.com/platformio/platformio-core/issues/951), [issue #952](https://github.com/platformio/platformio-core/issues/952))
* Don't warn about known ``boards_dir`` option ([pull #949](https://github.com/platformio/platformio-core/pull/949))
* Escape non-valid file name characters when installing a new package (library) ([issue #985](https://github.com/platformio/platformio-core/issues/985))
* Fixed infinite dependency installing when repository consists of multiple libraries ([issue #935](https://github.com/platformio/platformio-core/issues/935))
* Fixed linter error ""unity.h does not exist"" for Unit Testing ([issue #947](https://github.com/platformio/platformio-core/issues/947))
* Fixed issue when [Library Dependency Finder (LDF)](http://docs.platformio.org/page/librarymanager/ldf.html) does not handle custom ``src_dir`` ([issue #942](https://github.com/platformio/platformio-core/issues/942))
* Fixed cloning a package (library) from a private Git repository with custom user name and SSH port ([issue #925](https://github.com/platformio/platformio-core/issues/925))",19606299
1438,False,False,2017-05-27T09:56:42Z,2017-05-27T10:01:36Z,* Hotfix for recently updated Python Requests package (2.16.0),19606299
1439,False,False,2017-03-27T11:39:43Z,2017-03-27T11:45:05Z,"* PlatformIO Library Registry statistics with new [pio lib stats](http://docs.platformio.org/page/userguide/lib/cmd_stats.html) command

  - Recently updated and added libraries
  - Recent and popular keywords
  - Featured libraries (today, week, month)

* List built-in libraries based on development platforms with a new [pio lib builtin](http://docs.platformio.org/page/userguide/lib/cmd_builtin.html) command
* Show detailed info about a library using [pio lib show](http://docs.platformio.org/page/userguide/lib/cmd_show.html) command ([issue #430](https://github.com/platformio/platformio-core/issues/430))
* List supported frameworks, SDKs with a new [pio platform frameworks](http://docs.platformio.org/en/latest/userguide/platforms/cmd_frameworks.htmll) command
* Visual Studio Code extension for PlatformIO ([issue #619](https://github.com/platformio/platformio-core/issues/619))
* Added new options ``--no-reset``, ``--monitor-rts`` and ``--monitor-dtr`` to [pio test](http://docs.platformio.org/en/latest/userguide/cmd_test.html) command (allows to avoid automatic board's auto-reset when gathering test results)
* Added support for templated methods in ``*.ino to *.cpp`` converter ([pull #858](https://github.com/platformio/platformio-core/pull/858))
* Package version as ""Repository URL"" in manifest of development version (``""version"": ""https://github.com/user/repo.git""``)
* Produce less noisy output when ``-s/--silent`` options are used for [platformio init](http://docs.platformio.org/page/userguide/cmd_init.html) and [platformio run](http://docs.platformio.org/page/userguide/cmd_run.html) commands ([issue #850](https://github.com/platformio/platformio-core/issues/850))
* Use C++11 by default for CLion IDE based projects ([pull #873](https://github.com/platformio/platformio-core/pull/873))
* Escape project path when Glob matching is used
* Do not overwrite project configuration variables when system environment variables are set
* Handle dependencies when installing non-registry package/library (VCS, archive, local folder) ([issue #913](https://github.com/platformio/platformio-core/issues/913))
* Fixed package installing with VCS branch for Python 2.7.3 ([issue #885](https://github.com/platformio/platformio-core/issues/885))",19606299
1440,False,False,2016-12-07T21:49:54Z,2016-12-07T22:34:02Z,"- Changed default [LDF Mode](http://docs.platformio.org/en/latest/librarymanager/ldf.html#ldf-mode) from `chain+` to `chain`
",19606299
1441,False,False,2016-12-07T20:08:44Z,2016-12-07T22:33:19Z,"- [PIO Remote™](http://docs.platformio.org/en/latest/plus/pio-remote.html).
  **Your devices are always with you!**
  - Over-The-Air (OTA) Device Manager
  - OTA Serial Port Monitor
  - OTA Firmware Updates
  - Continuous Deployment
  - Continuous Delivery
- Integration with [Cloud IDEs](http://docs.platformio.org/en/latest/ide.html#cloud-ide)
  - Cloud9
  - Codeanywhere
  - Eclipse Che
- [PIO Account](http://docs.platformio.org/en/latest/userguide/account/index.html) and [PLATFORMIO_AUTH_TOKEN](http://docs.platformio.org/en/latest/envvars.html#envvar-PLATFORMIO_AUTH_TOKEN) environment variable for CI systems ([issue #808](https://github.com/platformio/platformio-core/issues/808), [issue #467](https://github.com/platformio/platformio-core/issues/467))
- Inject system environment variables to configuration settings in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/en/stable/projectconf.html) ([issue #792](https://github.com/platformio/platformio-core/issues/792))
- Custom boards per project with `boards_dir` option in [Project Configuration File ""platformio.ini""](http://docs.platformio.org/en/stable/projectconf.html) ([issue #515](https://github.com/platformio/platformio-core/issues/515))
- Unix shell-style wildcards for [upload_port](http://docs.platformio.org/en/latest/projectconf.html#upload-port) ([issue #839](https://github.com/platformio/platformio-core/issues/839))
- Refactored [Library Dependency Finder (LDF)](http://docs.platformio.org/en/stable/librarymanager/ldf.html) C/C++ Preprocessor for conditional syntax (`#ifdef`, `#if`, `#else`, `#elif`, `#define`, etc.) ([issue #837](https://github.com/platformio/platformio-core/issues/837))
- Added new [LDF Modes](http://docs.platformio.org/en/latest/librarymanager/ldf.html#ldf-mode): `chain+` and `deep+` and set `chain+` as default
- Added global `lib_extra_dirs` option to `[platformio]` section for [Project Configuration File ""platformio.ini""](http://docs.platformio.org/en/stable/projectconf.html) ([issue #842](https://github.com/platformio/platformio-core/issues/842))
- Enabled caching by default for API requests and Library Manager (see [enable_cache](http://docs.platformio.org/en/latest/userguide/cmd_settings.html#enable-cache) setting)
- Native integration with VIM/Neovim using [neomake-platformio](https://github.com/coddingtonbear/neomake-platformio) plugin
- Changed a default exit combination for Device Monitor from `Ctrl+]` to `Ctrl+C`
- Improved detecting of ARM mbed media disk for uploading
- Improved Project Generator for CLion IDE when source folder contains nested items
- Improved handling of library dependencies specified in `library.json` manifest ([issue #814](https://github.com/platformio/platformio-core/issues/814))
- Improved [Library Dependency Finder (LDF)](http://docs.platformio.org/en/stable/librarymanager/ldf.html) for circular dependencies
- Show vendor version of a package for [platformio platform show](http://docs.platformio.org/en/stable/userguide/platforms/cmd_show.html) command ([issue #838](https://github.com/platformio/platformio-core/issues/838))
- Fixed unable to include SSH user in `lib_deps` repository url ([issue #830](https://github.com/platformio/platformio-core/issues/830))
- Fixed merging of "".gitignore"" files when re-initialize project ([issue #848](https://github.com/platformio/platformio-core/issues/848))
- Fixed issue with `PATH` auto-configuring for upload tools
- Fixed `99-platformio-udev.rules` checker for Linux OS
",19606299
1442,False,False,2016-09-19T18:12:56Z,2016-09-19T18:23:53Z,"- New! Dynamic variables/templates for [Project Configuration File ""platformio.ini""](http://docs.platformio.org/en/stable/projectconf.html) ([issue #705](https://github.com/platformio/platformio/issues/705))
- Summary about processed environments ([issue #777](https://github.com/platformio/platformio/issues/777))
- Implemented LocalCache system for API and improved a work in off-line mode
- Improved Project Generator when custom `--project-option` is passed to [platformio init](http://docs.platformio.org/en/stable/userguide/cmd_init.html) command
- Deprecated `lib_force` option, please use [lib_deps](http://docs.platformio.org/en/stable/projectconf.html#lib-deps) instead
- Return valid exit code from `plaformio test` command
- Fixed Project Generator for CLion IDE using Windows OS ([issue #785](https://github.com/platformio/platformio/issues/785))
- Fixed SSL Server-Name-Indication for Python < 2.7.9 ([issue #774](https://github.com/platformio/platformio/issues/774))",19606299
1443,False,False,2016-09-07T23:00:07Z,2016-09-08T12:00:47Z,"- Disabled temporary SSL for PlatformIO services
  [issue #772](https://github.com/platformio/platformio/issues/772)
",19606299
1444,False,False,2016-09-07T17:50:47Z,2016-09-08T11:55:22Z,"- [PlatformIO Plus](https://pioplus.com)
  - Local and Embedded [Unit Testing](http://docs.platformio.org/en/latest/unit_testing.html)
    ([issue #408](https://github.com/platformio/platformio/issues/408),
    [issue #519](https://github.com/platformio/platformio/issues/519))
- Decentralized Development Platforms
  - Development platform manifest ""platform.json"" and
    [open source development platforms](https://github.com/platformio?utf8=✓&query=platform-)
  - [Semantic Versioning](http://semver.org/) for platform commands,
    development platforms and dependent packages
  - Custom package repositories
  - External embedded board configuration files, isolated build scripts
    ([issue #479](https://github.com/platformio/platformio/issues/479))
  - Embedded Board compatibility with more than one development platform
    ([issue #456](https://github.com/platformio/platformio/issues/456))
- Library Manager 3.0
  - Project dependencies per build environment using [lib_deps](http://docs.platformio.org/en/latest/projectconf.html#lib-deps) option
    ([issue #413](https://github.com/platformio/platformio/issues/413))
  - [Semantic Versioning](http://semver.org/) for library commands and
    dependencies
    ([issue #410](https://github.com/platformio/platformio/issues/410))
  - Multiple library storages: Project's Local, PlatformIO's Global or Custom
    ([issue #475](https://github.com/platformio/platformio/issues/475))
  - Install library by name
    ([issue #414](https://github.com/platformio/platformio/issues/414))
  - Depend on a library using VCS URL (GitHub, Git, ARM mbed code registry, Hg, SVN)
    ([issue #498](https://github.com/platformio/platformio/issues/498))
  - Strict search for library dependencies
    ([issue #588](https://github.com/platformio/platformio/issues/588))
  - Allowed `library.json` to specify sources other than PlatformIO's Repository
    ([issue #461](https://github.com/platformio/platformio/issues/461))
  - Search libraries by headers/includes with `platformio lib search --header` option
- New Intelligent Library Build System
  - [Library Dependency Finder](http://docs.platformio.org/en/latest/faq.html#how-works-library-dependency-finder-ldf)
    that interprets C/C++ Preprocessor conditional macros with deep search behavior
  - Check library compatibility with project environment before building
    ([issue #415](https://github.com/platformio/platformio/issues/415))
  - Control Library Dependency Finder for compatibility using
    [lib_compat_mode](http://docs.platformio.org/en/latest/projectconf.html#lib-compat-mode)
    option
  - Custom library storages/directories with
    [lib_extra_dirs](http://docs.platformio.org/en/latest/projectconf.html#lib-extra-dirs) option
    ([issue #537](https://github.com/platformio/platformio/issues/537))
  - Handle extra build flags, source filters and build script from
    [library.json](http://docs.platformio.org/en/latest/librarymanager/config.html)
    ([issue #289](https://github.com/platformio/platformio/issues/289))
  - Allowed to disable library archiving (`*.ar`)
    ([issue #719](https://github.com/platformio/platformio/issues/719))
  - Show detailed build information about dependent libraries
    ([issue #617](https://github.com/platformio/platformio/issues/617))
  - Support for the 3rd party manifests (Arduino IDE ""library.properties""
    and ARM mbed ""module.json"")
- Removed `enable_prompts` setting. Now, all PlatformIO CLI is non-blocking!
- Switched to SSL PlatformIO API
- Renamed `platformio serialports` command to `platformio device`
- Build System: Attach custom Before/Pre and After/Post actions for targets
  ([issue #542](https://github.com/platformio/platformio/issues/542))
- Allowed passing custom project configuration options to `platformio ci`
  and `platformio init` commands using `-O, --project-option`.
- Print human-readable information when processing environments without
  `-v, --verbose` option
  ([issue #721](https://github.com/platformio/platformio/issues/721))
- Improved INO to CPP converter
  ([issue #659](https://github.com/platformio/platformio/issues/659),
  [issue #765](https://github.com/platformio/platformio/issues/765))
- Added `license` field to [library.json](http://docs.platformio.org/en/latest/librarymanager/config.html)
  ([issue #522](https://github.com/platformio/platformio/issues/522))
- Warn about unknown options in project configuration file `platformio.ini`
  ([issue #740](https://github.com/platformio/platformio/issues/740))
- Fixed wrong line number for INO file when `#warning` directive is used
  ([issue #742](https://github.com/platformio/platformio/issues/742))
- Stopped supporting Python 2.6
",19606299
1445,False,False,2016-08-02T18:25:50Z,2016-08-02T19:37:00Z,"- Improved support for [Microchip PIC32](http://docs.platformio.org/en/stable/platforms/microchippic32.html) development platform and ChipKIT boards
  [issue #438](https://github.com/platformio/platformio/issues/438)
- Added support for Pinoccio Scout board
  [issue #52](https://github.com/platformio/platformio/issues/52)
- Added support for [Teensy USB Features](http://docs.platformio.org/en/stable/platforms/teensy.html#usb-features)
  (HID, SERIAL_HID, DISK, DISK_SDFLASH, MIDI, etc.)
  [issue #722](https://github.com/platformio/platformio/issues/722)
- Switched to built-in GCC LwIP library for Espressif development platform
- Added support for local `--echo` for Serial Port Monitor
  [issue #733](https://github.com/platformio/platformio/issues/733)
- Updated `udev` rules for the new STM32F407DISCOVERY boards
  [issue #731](https://github.com/platformio/platformio/issues/731)
- Implemented firmware merging with base firmware for Nordic nRF51 development platform
  [issue #500](https://github.com/platformio/platformio/issues/500),
  [issue #533](https://github.com/platformio/platformio/issues/533)
- Fixed Project Generator for ESP8266 and ARM mbed based projects
  (resolves incorrect linter errors)
- Fixed broken LD Script for Element14 chipKIT Pi board
  [issue #725](https://github.com/platformio/platformio/issues/725)
- Fixed firmware uploading to Atmel SAMD21-XPRO board using ARM mbed framework
  [issue #732](https://github.com/platformio/platformio/issues/732)
",19606299
1446,False,False,2016-07-12T16:37:00Z,2016-07-12T16:47:47Z,"-   Added support for Arduino M0, M0 Pro and Tian boards ([issue #472](https://github.com/platformio/platformio/issues/472))
-   Added support for Microchip chipKIT Lenny board
-   Updated Microchip PIC32 Arduino framework to v1.2.1
-   Documented [uploading of EEPROM data](http://docs.platformio.org/en/latest/platforms/atmelavr.html#upload-eeprom-data) (from EEMEM directive)
-   Added `Rebuild C/C++ Project Index` target to CLion and Eclipse IDEs
-   Improved project generator for [CLion IDE](http://docs.platformio.org/en/latest/ide/clion.html)
-   Added `udev` rules for OpenOCD CMSIS-DAP adapters ([issue #718](https://github.com/platformio/platformio/issues/718))
-   Auto-remove project cache when PlatformIO is upgraded
-   Keep user changes for `.gitignore` file when re-generate/update project data
-   Ignore `[platformio]` section from custom project configuration file when [platformio ci –project-conf](http://docs.platformio.org/en/latest/userguide/cmd_ci.html) command is used
-   Fixed missed `--boot` flag for the firmware uploader for ATSAM3X8E Cortex-M3 MCU based boards (Arduino Due, etc) ([issue #710](https://github.com/platformio/platformio/issues/710))
-   Fixed missing trailing `\` for the source files list when generate project for [Qt Creator IDE](http://docs.platformio.org/en/latest/ide/qtcreator.html) ([issue #711](https://github.com/platformio/platformio/issues/711))
-   Split source files to `HEADERS` and `SOURCES` when generate project for [Qt Creator IDE](http://docs.platformio.org/en/latest/ide/qtcreator.html) ([issue #713](https://github.com/platformio/platformio/issues/713))
",19606299
1447,False,False,2016-06-28T15:04:20Z,2016-06-28T15:12:02Z,"-   New ESP8266-based boards: Generic ESP8285 Module, Phoenix 1.0 & 2.0, WifInfo
-   Added support for Arduino M0 Pro board ([issue #472](https://github.com/platformio/platformio/issues/472))
-   Added support for Arduino MKR1000 board ([issue #620](https://github.com/platformio/platformio/issues/620))
-   Added support for Adafruit Feather M0, SparkFun SAMD21 and SparkFun SAMD21 Mini Breakout boards ([issue #520](https://github.com/platformio/platformio/issues/520))
-   Updated Arduino ESP8266 core for Espressif platform to 2.3.0
-   Better removing unnecessary flags using `build_unflags` option ([issue #698](https://github.com/platformio/platformio/issues/698))
-   Fixed issue with `platformio init --ide` command for Python 2.6
",19606299
1448,False,False,2016-06-15T15:46:56Z,2016-06-15T15:48:04Z,"- Fixed issue with `platformio init --ide` command
",19606299
1449,False,False,2016-06-15T14:57:39Z,2016-06-15T15:10:44Z,"- Added support for ST Nucleo L031K6 board to ARM mbed framework
- Process `build_unflags` option for ARM mbed framework
- Updated Intel ARC32 Arduino framework to v1.0.6
  ([issue #695](https://github.com/platformio/platformio/issues/695))
- Improved a check of program size before uploading to the board
- Fixed issue with ARM mbed framework `-u _printf_float` and
  `-u _scanf_float` when parsing `$LINKFLAGS`
- Fixed issue with ARM mbed framework and extra includes for the custom boards,
  such as Seeeduino Arch Pro
",19606299
1450,False,False,2016-06-13T18:32:07Z,2016-06-13T18:57:24Z,"- Re-submit a package to PyPI
",19606299
1451,False,False,2016-06-13T16:49:55Z,2016-06-13T16:58:17Z,"-   Added support for [emonPi](https://github.com/openenergymonitor/emonpi), the OpenEnergyMonitor system ([issue #687](https://github.com/platformio/platformio/issues/687))
-   Added support for [SPL](http://platformio.org/frameworks/spl) framework for STM32F0 boards ([issue #683](https://github.com/platformio/platformio/issues/683))
-   Added support for [Arduboy DevKit](https://www.arduboy.com), the game system the size of a credit card
-   Updated ARM mbed framework package to v121
-   Check program size before uploading to the board ([issue #689](https://github.com/platformio/platformio/issues/689))
-   Improved firmware uploading to Arduino Leonardo based boards ([issue #691](https://github.com/platformio/platformio/issues/691))
-   Fixed issue with `-L relative/path` when parsing `build_flags` ([issue #688](https://github.com/platformio/platformio/issues/688))
",19606299
1452,False,False,2016-06-03T21:26:01Z,2016-06-03T21:28:44Z,"- Show `udev` warning only for the Linux OS while uploading firmware
",19606299
1453,False,False,2016-06-03T18:04:04Z,2016-06-03T18:09:06Z,"- Added support for [Arduboy](https://www.arduboy.com), the game system the size of a credit card
- Updated [99-platformio-udev.rules](https://github.com/platformio/platformio/blob/develop/scripts/99-platformio-udev.rules) for Linux OS
- Refactored firmware uploading to the embedded boards with SAM-BA bootloader
",19606299
1454,False,False,2016-06-02T17:57:09Z,2016-06-02T18:07:49Z,"-   Simplified [Continuous Integration with AppVeyor]([issue #671])
-   Automatically add source directory to `CPPPATH` of Build System
-   Added support for Silicon Labs SLSTK3401A (Pearl Gecko) and
  MultiTech mDot F411 ARM mbed based boards
-   Added support for MightyCore ATmega8535 board ([issue #585](https://github.com/platformio/platformio/issues/585))
-   Added `stlink` as the default uploader for STM32 Discovery boards
  ([issue #665](https://github.com/platformio/platformio/issues/665))
-   Use HTTP mirror for Package Manager in a case with SSL errors
  ([issue #645](https://github.com/platformio/platformio/issues/645))
-   Improved firmware uploading to Arduino Leonardo/Due based boards
-   Fixed bug with `env_default` when `pio run -e` is used
-   Fixed issue with `src_filter` option for Windows OS ([issue #652](https://github.com/platformio/platformio/issues/652))
-   Fixed configuration data for TI LaunchPads based on msp430fr4133 and
  msp430fr6989 MCUs ([issue #676](https://github.com/platformio/platformio/issues/676))
-   Fixed issue with ARM mbed framework and multiple definition errors
  on FRDM-KL46Z board ([issue #641](https://github.com/platformio/platformio/issues/641))
-   Fixed issue with ARM mbed framework when abstract class breaks
  compile for LPC1768 ([issue #666](https://github.com/platformio/platformio/issues/666))
",19606299
1455,False,False,2016-04-30T15:20:45Z,2016-04-30T15:32:06Z,"- Handle prototype pointers while converting `*.ino` to `.cpp`
  ([issue #639](https://github.com/platformio/platformio/issues/639))
",19606299
1456,False,False,2016-04-28T15:23:50Z,2016-04-28T15:51:48Z,"-   Project generator for [CodeBlocks IDE](http://docs.platformio.org/en/latest/ide/codeblocks.html)  ([issue #600](https://github.com/platformio/platformio/issues/600))
-   New [Lattice iCE40 FPGA](http://docs.platformio.org/en/latest/platforms/lattice_ice40.html) development platform with support for Lattice iCEstick FPGA Evaluation Kit and BQ IceZUM Alhambra FPGA ([issue #480](https://github.com/platformio/platformio/issues/480))
-   New [Intel ARC 32-bit](http://docs.platformio.org/en/latest/platforms/intel_arc32.html) development platform with support for Arduino/Genuino 101 board ([issue #535](https://github.com/platformio/platformio/issues/535))
-   New [Microchip PIC32](http://docs.platformio.org/en/latest/platforms/microchippic32.html) development platform with support for 20+ different PIC32 based boards ([issue #438](https://github.com/platformio/platformio/issues/438))
-   New RTOS and build Framework named [Simba](http://docs.platformio.org/en/latest/frameworks/simba.html) ([issue #412](https://github.com/platformio/platformio/issues/412))
-   New boards for [ARM mbed](http://docs.platformio.org/en/latest/frameworks/mbed.html) framework: ST Nucleo F410RB, ST Nucleo L073RZ and BBC micro:bit
-   Added support for Arduino.Org boards: Arduino Leonardo ETH, Arduino Yun Mini, Arduino Industrial 101 and Linino One ([issue #472](https://github.com/platformio/platformio/issues/472))
-   Added support for Generic ATTiny boards: ATTiny13, ATTiny24, ATTiny25, ATTiny45 and ATTiny85 ([issue #636](https://github.com/platformio/platformio/issues/636))
-   Added support for MightyCore boards: ATmega1284, ATmega644, ATmega324, ATmega164, ATmega32, ATmega16 and ATmega8535 ([issue #585](https://github.com/platformio/platformio/issues/585))
-   Added support for [TI MSP430](http://docs.platformio.org/en/latest/platforms/timsp430.html) boards: TI LaunchPad w/ msp430fr4133 and TI LaunchPad w/ msp430fr6989
-   Updated Arduino core for Espressif platform to 2.2.0 ([issue #627](https://github.com/platformio/platformio/issues/627))
-   Updated native SDK for ESP8266 to 1.5 ([issue #366](https://github.com/platformio/platformio/issues/366))
-   PlatformIO Library Registry in JSON format! Implemented `--json-output` and `--page` options for platformio lib search](http://docs.platformio.org/en/latest/userguide/lib/cmd_search.html) command ([issue #604](https://github.com/platformio/platformio/issues/604))
-   Allowed to specify default environments [env_default](http://docs.platformio.org/en/latest/projectconf.html#env-default) which should be processed by default with `platformio run` command ([issue #576](https://github.com/platformio/platformio/issues/576))
-   Allowed to unflag(remove) base/initial flags using [build_unflags](http://docs.platformio.org/en/latest/projectconf.html#build-unflags) option ([issue #559](https://github.com/platformio/platformio/issues/559))
-   Allowed multiple VID/PID pairs when detecting serial ports ([issue #632](https://github.com/platformio/platformio/issues/632))
-   Automatically add `-DUSB_MANUFACTURER` with vendor’s name ([issue #631](https://github.com/platformio/platformio/issues/631))
-   Automatically reboot Teensy board after upload when Teensy Loader GUI is used ([issue #609](https://github.com/platformio/platformio/issues/609))
-   Refactored source code converter from `*.ino` to `*.cpp` ([issue #610](https://github.com/platformio/platformio/issues/610))
-   Forced `-std=gnu++11` for Atmel SAM development platform ([issue #601](https://github.com/platformio/platformio/issues/601))
-   Don’t check OS type for ARM mbed-enabled boards and ST STM32 development platform before uploading to disk ([issue #596](https://github.com/platformio/platformio/issues/596))
-   Fixed broken compilation for Atmel SAMD based boards except Arduino Due ([issue #598](https://github.com/platformio/platformio/issues/598))
-   Fixed firmware uploading using serial port with spaces in the path
-   Fixed cache system when project’s root directory is used as `src_dir` ([issue #635](https://github.com/platformio/platformio/issues/635))
",19606299
1457,False,False,2016-03-22T21:02:57Z,2016-03-22T21:10:25Z,"-   Launched [PlatformIO Community Forums](http://community.platformio.org) ([issue #530](https://github.com/platformio/platformio/issues/530))
-   Added support for ARM mbed-enabled board Seed Arch Max (STM32F407VET6) ([issue #572](https://github.com/platformio/platformio/issues/572))
-   Improved DNS lookup for PlatformIO API
-   Updated Arduino Wiring-based framework to the latest version for Atmel AVR/SAM development platforms
-   Updated “Teensy Loader CLI” and fixed uploading of large .hex files ([issue #568](https://github.com/platformio/platformio/issues/568))
-   Updated the support for Sanguino Boards ([issue #586](https://github.com/platformio/platformio/issues/586))
-   Better handling of used boards when re-initialize/update project
-   Improved support for non-Unicode user profiles for Windows OS
-   Disabled progress bar for download operations when prompts are disabled
-   Fixed multiple definition errors for ST STM32 development platform and ARM mbed framework ([issue #571](https://github.com/platformio/platformio/issues/571))
-   Fixed invalid board parameters (reset method and baudrate) for a few ESP8266 based boards
-   Fixed “KeyError: ‘content-length’” in PlatformIO Download Manager ([issue #591](https://github.com/platformio/platformio/issues/591))
",19606299
1458,False,False,2016-03-07T16:34:43Z,2016-03-07T16:38:04Z,"-   Project generator for [NetBeans IDE]([issue #541])
-   Created package for Homebrew Mac OS X Package Manager: `brew install platformio` ([issue #395](https://github.com/platformio/platformio/issues/395))
-   Updated Arduino core for Espressif platform to 2.1.0 ([issue #544](https://github.com/platformio/platformio/issues/544))
-   Added support for the ESP8266 ESP-07 board to [Espressif]([issue #527])
-   Improved handling of String-based `CPPDEFINES` passed to extra `build_flags` ([issue #526](https://github.com/platformio/platformio/issues/526))
-   Generate appropriate project for CLion IDE and CVS ([issue #523](https://github.com/platformio/platformio/issues/523))
-   Use `src_dir` directory from [Project Configuration File platformio.ini](http://docs.platformio.org/en/latest/projectconf.html) when initializing project otherwise create base `src` directory ([issue #536](https://github.com/platformio/platformio/issues/536))
-   Fixed issue with incorrect handling of user’s build flags where the base flags were passed after user’s flags to GCC compiler ([issue #528](https://github.com/platformio/platformio/issues/528))
-   Fixed issue with Project Generator when optional build flags were passed using system environment variables: [PLATFORMIO_BUILD_FLAGS](http://docs.platformio.org/en/latest/envvars.html#platformio-build-flags) or [PLATFORMIO_BUILD_SRC_FLAGS](http://docs.platformio.org/en/latest/envvars.html#platformio-build-src-flags)
-   Fixed invalid detecting of compiler type ([issue #550](https://github.com/platformio/platformio/issues/550))
-   Fixed issue with updating package which was deleted manually by user ([issue #555](https://github.com/platformio/platformio/issues/555))
-   Fixed incorrect parsing of GCC `-include` flag ([issue #552](https://github.com/platformio/platformio/issues/552))
",19606299
1459,False,False,2016-02-17T20:53:08Z,2016-02-17T20:57:53Z,"-   Added support for the new ESP8266-based boards (ESPDuino, ESP-WROOM-02, ESPresso Lite 1.0 & 2.0, SparkFun ESP8266 Thing Dev, ThaiEasyElec ESPino) to [Espressif](http://docs.platformio.org/en/latest/platforms/espressif.html) development platform
-   Added `board_f_flash` option to [Project Configuration File platformio.ini](http://docs.platformio.org/en/latest/projectconf.html) which allows to specify [custom flash chip frequency](http://docs.platformio.org/en/latest/platforms/espressif.html#custom-flash-frequency) for Espressif development platform ([issue #501](https://github.com/platformio/platformio/issues/501))
-   Added `board_flash_mode` option to [Project Configuration File platformio.ini](http://docs.platformio.org/en/latest/projectconf.html) which allows to specify [custom flash chip mode](http://docs.platformio.org/en/latest/platforms/espressif.html#custom-flash-mode) for Espressif development platform
-   Handle new environment variables [PLATFORMIO_UPLOAD_PORT](http://docs.platformio.org/en/latest/envvars.html#platformio-upload-port) and [PLATFORMIO_UPLOAD_FLAGS]([issue #518])
-   Fixed issue with `CPPDEFINES` which contain space and break PlatformIO IDE Linter ([IDE issue #34](https://github.com/platformio/platformio-atom-ide/issues/34))
-   Fixed unable to link C++ standard library to Espressif platform build ([issue #503](https://github.com/platformio/platformio/issues/503))
-   Fixed issue with pointer (`char* myfunc()`) while converting from `*.ino` to `*.cpp` ([issue #506](https://github.com/platformio/platformio/issues/506))
",19606299
1460,False,False,2016-02-02T17:52:38Z,2016-02-02T17:54:12Z,"-   Better integration of PlatformIO Builder with PlatformIO IDE Linter
-   Fixed issue with removing temporary file while converting `*.ino` to `*.cpp`
-   Fixed missing dependency (mbed framework) for Atmel SAM development platform ([issue #487](https://github.com/platformio/platformio/issues/487))
",19606299
1461,False,False,2016-01-29T18:34:47Z,2016-01-29T18:45:25Z,"-   Corrected RAM size for NXP LPC1768 based boards ([issue #484](https://github.com/platformio/platformio/issues/484))
-   Exclude only `test` and `tests` folders from build process
-   Reverted `-Wl,-whole-archive` hook for ST STM32 and mbed
",19606299
1462,False,False,2016-01-29T13:50:33Z,2016-01-29T18:44:17Z,"- Fixed a bug with Project Initialization in PlatformIO IDE
",19606299
1463,False,False,2016-01-29T12:43:35Z,2016-01-29T12:49:20Z,"-   [PlatformIO IDE](http://docs.platformio.org/en/latest/ide/atom.html) for Atom ([issue #470](https://github.com/platformio/platformio/issues/470))
-   Added `pio` command line alias for `platformio` command ([issue #447](https://github.com/platformio/platformio/issues/447))
-   Added SPL-Framework support for Nucleo F401RE board ([issue #453](https://github.com/platformio/platformio/issues/453))
-   Added `upload_resetmethod` option to [Project Configuration File platformio.ini](http://docs.platformio.org/en/latest/projectconf.html) and allowed to [change default upload reset method](http://docs.platformio.org/en/latest/platforms/espressif.html#custom-reset-method) for Espressif development platform ([issue #444](https://github.com/platformio/platformio/issues/444))
-   Allowed to force output of color ANSI-codes or to disable progress bar even if the output is a `pipe` (not a `tty`) using [Environment variables](http://docs.platformio.org/en/latest/envvars.html)  ([issue #465](https://github.com/platformio/platformio/issues/465))
-   Set 1Mb SPIFFS for Espressif boards by default ([issue #458](https://github.com/platformio/platformio/issues/458))
-   Exclude `test*` folder by default from build process
-   Generate project for IDEs with information about installed libraries
-   Fixed builder for mbed framework and ST STM32 platform
",19606299
1464,False,False,2016-01-06T12:56:31Z,2016-01-06T13:00:22Z,"-   Initial support for Arduino Zero board ([issue #356](https://github.com/platformio/platformio/issues/356))
-   Added support for completions to Atom text editor using `.clang_complete`
-   Generate default targets for [supported IDE](http://docs.platformio.org/en/latest/ide.html) (CLion, Eclipse IDE, Emacs, Sublime Text, VIM): Build, Clean, Upload, Upload SPIFFS image, Upload using Programmer, Update installed platforms and libraries ([issue #427](https://github.com/platformio/platformio/issues/427))
-   Updated Teensy Arduino Framework to 1.27 ([issue #434](https://github.com/platformio/platformio/issues/434))
-   Fixed uploading of EEPROM data using `uploadeep` target for Atmel AVR development platform
-   Fixed project generator for CLion IDE ([issue #422](https://github.com/platformio/platformio/issues/422))
-   Fixed package `shasum` validation on Mac OS X 10.11.2 ([issue #429](https://github.com/platformio/platformio/issues/429))
-   Fixed CMakeLists.txt `add_executable` has only one source file ([issue #421](https://github.com/platformio/platformio/issues/421))
",19606299
1465,False,False,2015-12-30T18:25:12Z,2015-12-30T18:33:40Z,"**Happy New Year!**
-   Moved SCons to PlatformIO packages. PlatformIO does not require
  SCons to be installed in your system. Significantly simplified
  installation process of PlatformIO. `pip install platformio` rocks!
-   Implemented uploading files to file system of ESP8266 SPIFFS
  (including OTA) ([issue #382](https://github.com/platformio/platformio/issues/382))
-   Added support for the new Adafruit boards Bluefruit Micro and
  Feather ([issue #403](https://github.com/platformio/platformio/issues/403))
-   Added support for RFDuino ([issue #319](https://github.com/platformio/platformio/issues/319))
-   Project generator for [Emacs](http://docs.platformio.org/en/latest/ide/emacs.html) text editor ([pull #404](https://github.com/platformio/platformio/pull/404))
-   Updated Arduino framework for Atmel AVR development platform to
  1.6.7
-   Documented [firmware uploading for Atmel AVR development platform using Programmers](https://github.com/platformio/platformio/pull/417): AVR ISP, AVRISP mkII, USBtinyISP, USBasp,
  Parallel Programmer and Arduino as ISP
-   Fixed issue with current Python interpreter for Python-based tools
  (issue #417)
",19606299
1466,False,False,2015-12-21T18:56:06Z,2015-12-21T19:13:12Z,"-   Restored support for Espressif ESP8266 ESP-01 1MB board (ready
  for OTA)
-   Fixed invalid ROM size for ESP8266-based boards ([issue #396](https://github.com/platformio/platformio/issues/396))
",19606299
1467,False,False,2015-12-21T15:42:01Z,2015-12-21T15:52:25Z,"-   Removed `SCons` from requirements list. PlatformIO will try to
  install it automatically, otherwise users need to install it
  manually
-   Fixed `ChunkedEncodingError` when SF connection is broken ([issue
  #356](https://github.com/platformio/platformio/issues/356))
",19606299
1468,False,False,2015-12-18T18:30:42Z,2015-12-18T18:37:00Z,"-   Added support for the new ESP8266-based boards (SparkFun ESP8266
  Thing, NodeMCU 0.9 & 1.0, Olimex MOD-WIFI-ESP8266(-DEV), Adafruit
  HUZZAH ESP8266, ESPino, SweetPea ESP-210, WeMos D1, WeMos D1 mini)
  to [Espressif](http://docs.platformio.org/en/latest/platforms/espressif.html) development platform
-   Created public [platformio-pkg-ldscripts](https://github.com/platformio/platformio-pkg-ldscripts.git) repository for LD scripts.
  Moved common configuration for ESP8266 MCU to
  `esp8266.flash.common.ld` ([issue #379](https://github.com/platformio/platformio/issues/379))
-   Improved documentation for [Espressif](http://docs.platformio.org/en/latest/platforms/espressif.html) development platform: OTA
  update, custom Flash Size, Upload Speed and CPU frequency
-   Fixed reset method for Espressif NodeMCU (ESP-12E Module) ([issue
  #380](https://github.com/platformio/platformio/issues/380))
-   Fixed issue with code builder when build path contains spaces
  ([issue #387](https://github.com/platformio/platformio/issues/387))
-   Fixed project generator for Eclipse IDE and “duplicate path entries
  found in project path” ([issue #383](https://github.com/platformio/platformio/issues/383))
",19606299
1469,False,False,2015-12-15T18:54:31Z,2015-12-15T18:56:58Z,"-   Install only required packages depending on build environment
  ([issue #308](https://github.com/platformio/platformio/issues/308))
-   Added support for Raspberry Pi [WiringPi](http://docs.platformio.org/en/latest/frameworks/wiringpi.html) framework ([issue #372](https://github.com/platformio/platformio/issues/372))
-   Implemented Over The Air (OTA) upgrades for [Espressif](http://docs.platformio.org/en/latest/platforms/espressif.html)
  development platform. ([issue #365](https://github.com/platformio/platformio/issues/365))
-   Updated [CMSIS framework](http://docs.platformio.org/en/latest/frameworks/cmsis.html) and added CMSIS support for Nucleo F401RE
  board ([issue #373](https://github.com/platformio/platformio/issues/373))
-   Added support for Espressif ESP8266 ESP-01-1MB board (ready for OTA)
-   Handle `upload_flags` option in [platformio.ini]([issue #368])
-   Improved PlatformIO installation on the Mac OS X El Capitan
",19606299
1470,False,False,2015-12-08T17:28:22Z,2015-12-08T17:31:33Z,"-   Improved code builder for parallel builds (up to 4 times faster
  than before)
-   Generate [.travis.yml](http://docs.platformio.org/en/latest/ci/travis.html) CI and .gitignore files for embedded projects
  by default ([issue #354](https://github.com/platformio/platformio/issues/354))
-   Removed prompt with “auto-uploading” from [platformio init](http://docs.platformio.org/en/latest/userguide/cmd_init.html) command
  and added `--enable-auto-uploading` option ([issue #352](https://github.com/platformio/platformio/issues/352))
-   Fixed incorrect behaviour of [platformio serialports monitor](http://docs.platformio.org/en/latest/userguide/cmd_serialports.html#platformio-serialports-monitor) in
  pair with PySerial 3.0
",19606299
1471,False,False,2015-12-01T17:02:16Z,2015-12-01T17:13:26Z,"- Restored `PLATFORMIO` macros with the current version
",19606299
1472,False,False,2015-12-01T15:51:04Z,2015-12-01T17:13:07Z,"-   Added support for the new boards: Atmel ATSAMR21-XPRO, Atmel
  SAML21-XPRO-B, Atmel SAMD21-XPRO, ST 32F469IDISCOVERY, ST
  32L476GDISCOVERY, ST Nucleo F031K6, ST Nucleo F042K6, ST Nucleo
  F303K8 and ST Nucleo L476RG
-   Updated Arduino core for Espressif platform to 2.0.0 ([issue #345](https://github.com/platformio/platformio/issues/345))
-   Added to FAQ explanation of [Can not compile a library that compiles
  without issue with Arduino IDE](http://docs.platformio.org/en/latest/faq.html#building) // ([issue #331](https://github.com/platformio/platformio/issues/331))
-   Fixed ESP-12E flash size ([pull #333](https://github.com/platformio/platformio/pull/333))
-   Fixed configuration for LowPowerLab MoteinoMEGA board ([issue
  #335](https://github.com/platformio/platformio/issues/335))
-   Fixed “LockFailed: failed to create appstate.json.lock” error for
  Windows
-   Fixed relative include path for preprocessor using `build_flags`
  ([issue #271](https://github.com/platformio/platformio/issues/271))
",19606299
1473,False,False,2015-11-18T18:11:40Z,2015-11-18T18:17:40Z,"-   Added support of [libOpenCM3](http://docs.platformio.org/en/latest/frameworks/libopencm3.html) framework for Nucleo F103RB board
  ([issue #309](https://github.com/platformio/platformio/issues/309))
-   Added support for Espressif ESP8266 ESP-12E board (NodeMCU) ([issue
  #310](https://github.com/platformio/platformio/issues/310))
-   Added support for pySerial 3.0 ([issue #307](https://github.com/platformio/platformio/issues/307))
-   Updated Arduino AVR/SAM frameworks to 1.6.6 ([issue #321](https://github.com/platformio/platformio/issues/321))
-   Upload firmware using external programmer via [platformio run
  –target program](http://docs.platformio.org/en/latest/userguide/cmd_run.html#cmdoption-platformio-run-t) target ([issue #311](https://github.com/platformio/platformio/issues/311))
-   Fixed handling of upload port when `board` option is not specified
  in [platformio.ini]([issue #313])
-   Fixed firmware uploading for [nordicrf51](http://docs.platformio.org/en/latest/platforms/nordicnrf51.html) development platform
  ([issue #316](https://github.com/platformio/platformio/issues/316))
-   Fixed installation on Mac OS X El Capitan ([issue #312](https://github.com/platformio/platformio/issues/312))
-   Fixed project generator for CLion IDE under Windows OS with invalid
  path to executable ([issue #326](https://github.com/platformio/platformio/issues/326))
-   Fixed empty list with serial ports on Mac OS X ([isge #294](https://github.com/platformio/platformio/issues/294))
-   Fixed compilation error `TWI_Disable not declared` for Arduino Due
  board ([issue #329](https://github.com/platformio/platformio/issues/329))
",19606299
1474,False,False,2015-10-13T17:40:46Z,2015-10-13T17:45:50Z,"-   Full support of [CLion IDE](http://docs.platformio.org/en/latest/ide/clion.html) including code auto-completion ([issue
  #132](https://github.com/platformio/platformio/issues/132))
-   PlatformIO [command completion in Terminal](http://docs.platformio.org/en/latest/faq.html#command-completion-in-terminal) for `bash` and `zsh`
-   Added support for ubIQio Ardhat board ([pull #302](https://github.com/platformio/platformio/pull/302))
-   Install SCons automatically and avoid
  `error: option --single-version-externally-managed not recognized`
  ([issue #279](https://github.com/platformio/platformio/issues/279))
-   Use Teensy CLI Loader for upload of .hex files on Mac OS X ([issue
  #306](https://github.com/platformio/platformio/issues/306))
-   Fixed missing [framework-mbed](http://docs.platformio.org/en/latest/frameworks/mbed.html) package for [teensy](http://docs.platformio.org/en/latest/platforms/teensy.html) platform ([issue
  #305](https://github.com/platformio/platformio/issues/305))
",19606299
1475,False,False,2015-10-02T15:24:02Z,2015-10-02T15:27:33Z,"-   Added support for LightBlue Bean board ([pull #292](https://github.com/platformio/platformio/pull/292))
-   Added support for ST Nucleo F446RE board ([pull #293](https://github.com/platformio/platformio/pull/293))
-   Fixed broken lock file for “appstate” storage ([issue #288](https://github.com/platformio/platformio/issues/288))
-   Fixed ESP8266 compile errors about RAM size when adding 1 library
  ([issue #296](https://github.com/platformio/platformio/issues/296))
",19606299
1476,False,False,2015-09-10T17:44:53Z,2015-09-10T17:48:49Z,"-   Allowed to use ST-Link uploader for mbed-based projects
-   Explained how to use `lib` directory from the PlatformIO based
  project in `readme.txt` which will be automatically generated using
  [platformio init](http://docs.platformio.org/en/latest/userguide/cmd_init.html) command ([issue #273](https://github.com/platformio/platformio/issues/273))
-   Found solution for “pip/scons error: option
  –single-version-externally-managed not recognized” when install
  PlatformIO using `pip` package manager ([issue #279](https://github.com/platformio/platformio/issues/279))
-   Fixed firmware uploading to Arduino Leonardo board using Mac OS
  ([issue #287](https://github.com/platformio/platformio/issues/287))
-   Fixed SConsNotInstalled error for Linux Debian-based distributives
",19606299
1477,False,False,2015-09-06T15:17:53Z,2015-09-06T15:21:27Z,"-   Fixed critical issue when [platformio init –ide](http://docs.platformio.org/en/latest/userguide/cmd_init.html) command hangs
  PlatformIO ([issue #283](https://github.com/platformio/platformio/issues/283))
",19606299
1478,False,False,2015-09-05T20:05:34Z,2015-09-05T20:07:47Z,"-   Added [native](http://docs.platformio.org/en/latest/platforms/native.html), [linux_arm](http://docs.platformio.org/en/latest/platforms/linux_arm.html), [linux_i686](http://docs.platformio.org/en/latest/platforms/linux_i686.html), [linux_x86_64](http://docs.platformio.org/en/latest/platforms/linux_x86_64.html),
  [windows_x86](http://docs.platformio.org/en/latest/platforms/windows_x86.html) development platforms ([issue #263](https://github.com/platformio/platformio/issues/263))
-   Added [PlatformIO Demo](http://docs.platformio.org/en/latest/demo.html) page to documentation
-   Simplified [installation](http://docs.platformio.org/en/latest/installation.html) process of PlatformIO ([issue #274](https://github.com/platformio/platformio/issues/274))
-   Significantly improved [Project Generator](http://docs.platformio.org/en/latest/userguide/cmd_init.html#cmdoption-platformio-init--ide) which allows to integrate
  with [the most popular IDE](http://docs.platformio.org/en/latest/ide.html)
-   Added short `-h` help option for PlatformIO and sub-commands
-   Updated [mbed](http://docs.platformio.org/en/latest/frameworks/mbed.html) framework
-   Updated `tool-teensy` package for [Teensy](http://docs.platformio.org/en/latest/platforms/teensy.html) platform ([issue #268](https://github.com/platformio/platformio/issues/268))
-   Added FAQ answer when [Program “platformio” not found in PATH]([issue #272])
-   Generate “readme.txt” for project “lib” directory ([issue #273](https://github.com/platformio/platformio/issues/273))
-   Use toolchain’s includes pattern `include*` for Project Generator
  ([issue #277](https://github.com/platformio/platformio/issues/277))
-   Added support for Adafruit Gemma board to [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html#boards) platform ([pull
  #256](https://github.com/platformio/platformio/pull/256))
-   Fixed includes list for Windows OS when generating project for
  [Eclipse IDE]([issue #270])
-   Fixed `AttributeError: 'module' object has no attribute 'packages'`
  ([issue #252](https://github.com/platformio/platformio/issues/252))
",19606299
1479,False,False,2015-07-30T15:56:13Z,2015-07-30T16:05:52Z,"-   Integration with [Atom IDE](http://docs.platformio.org/en/latest/ide/atom.html)
-   Support for off-line/unpublished/private libraries ([issue #260](https://github.com/platformio/platformio/issues/260))
-   Disable project auto-clean while building/uploading firmware using
  [platformio run –disable-auto-clean](http://docs.platformio.org/en/latest/userguide/cmd_run.html#cmdoption--disable-auto-clean) option ([issue #255](https://github.com/platformio/platformio/issues/255))
-   Show internal errors from “Miniterm” using [platformio serialports
  monitor](http://docs.platformio.org/en/latest/userguide/cmd_serialports.html#platformio-serialports-monitor) command ([issue #257](https://github.com/platformio/platformio/issues/257))
-   Fixed [platformio serialports monitor –help][platformio serialports
  monitor](http://docs.platformio.org/en/latest/userguide/cmd_serialports.html#platformio-serialports-monitor) information with HEX char for hotkeys ([issue #253](https://github.com/platformio/platformio/issues/253))
-   Handle “OSError: [Errno 13] Permission denied” for PlatformIO
  installer script ([issue #254](https://github.com/platformio/platformio/issues/254))
",19606299
1480,False,False,2015-07-17T11:54:55Z,2015-07-17T11:59:37Z,"-   Project generator for [CLion IDE]([issue #132])
-   Updated `tool-bossac` package to 1.5 version for [atmelsam](http://docs.platformio.org/en/latest/platforms/atmelsam.html) platform ([issue
  #251](https://github.com/platformio/platformio/issues/251))
-   Updated `sdk-esp8266` package for [espressif](http://docs.platformio.org/en/latest/platforms/espressif.html) platform 
-   Fixed incorrect arguments handling for [platformio serialports
  monitor](http://docs.platformio.org/en/latest/userguide/cmd_serialports.html#platformio-serialports-monitor) command ([issue #248](https://github.com/platformio/platformio/issues/248))
",19606299
1481,False,False,2015-07-01T15:03:44Z,2015-07-01T15:07:02Z,"-   Allowed to exclude/include source files from build process using
  [src_filter]([issue #240])
-   Launch own extra script before firmware building/uploading processes
  ([issue #239](https://github.com/platformio/platformio/issues/239))
-   Specify own path to the linker script (ld) using [build_flags](http://docs.platformio.org/en/latest/projectconf.html#build-flags)
  option ([issue #233](https://github.com/platformio/platformio/issues/233))
-   Specify library compatibility with the all platforms/frameworks
  using `*` symbol in [library.json](http://docs.platformio.org/en/latest/librarymanager/config.html)
-   Added support for new embedded boards: _ST 32L0538DISCOVERY and
  Delta DFCM-NNN40_ to [Framework mbed](http://docs.platformio.org/en/latest/frameworks/mbed.html)
-   Updated packages for [Framework Arduino (AVR, SAM, Espressif and
  Teensy cores](http://docs.platformio.org/en/latest/frameworks/arduino.html), [Framework mbed](http://docs.platformio.org/en/latest/frameworks/mbed.html), [Espressif ESP8266 SDK]([issue
  #246])
-   Fixed `stk500v2_command(): command failed` ([issue #238](https://github.com/platformio/platformio/issues/238))
-   Fixed IDE project generator when board is specified ([issue #242](https://github.com/platformio/platformio/issues/242))
-   Fixed relative path for includes when generating project for IDE
  ([issue #243](https://github.com/platformio/platformio/issues/243))
-   Fixed ESP8266 native SDK exception ([issue #245](https://github.com/platformio/platformio/issues/245))
",19606299
1482,False,False,2015-06-21T18:51:38Z,2015-06-21T18:57:22Z,"- Fixed broken link to SCons installer
",19606299
1483,False,False,2015-06-09T19:21:21Z,2015-06-09T19:35:09Z,"-   Automatically detect upload port using VID:PID board settings
  ([issue #231](https://github.com/platformio/platformio/issues/231))
-   Improved detection of build changes
-   Avoided `LibInstallDependencyError` when more then 1 library is
  found ([issue #229](https://github.com/platformio/platformio/issues/229))
",19606299
1484,False,False,2015-06-03T16:54:52Z,2015-06-03T16:59:38Z,"-   Added Silicon Labs EFM32 [siliconlabsefm32](http://docs.platformio.org/en/latest/platforms/siliconlabsefm32.html) development platform
  ([issue #226](https://github.com/platformio/platformio/issues/226))
-   Integrate PlatformIO with [Circle CI](https://circleci.com) and [Shippable CI](https://shippable.com)
-   Described in documentation how to [create/register own board](http://docs.platformio.org/en/latest/platforms/creating_board.html) for
  PlatformIO
-   Disabled “nano.specs” for ARM-based platforms ([issue #219](https://github.com/platformio/platformio/issues/219))
-   Fixed “ConnectionError” when PlatformIO SF Storage is off-line
-   Fixed resolving of C/C++ std libs by Eclipse IDE ([issue #220](https://github.com/platformio/platformio/issues/220))
-   Fixed firmware uploading using USB programmer (USBasp) for
  [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html) platform ([issue #221](https://github.com/platformio/platformio/issues/221))
",19606299
1485,False,False,2015-05-27T16:27:02Z,2015-05-27T16:28:25Z,"- Fixed libraries order for ""Library Dependency Finder"" under Linux OS 
",19606299
1486,False,False,2015-05-22T18:49:14Z,2015-05-22T19:04:48Z,"## _Made in [Paradise](https://twitter.com/ikravets/status/592356377185619969)_ 
-   PlatformIO as [Continuous Integration](http://docs.platformio.org/en/latest/ci/index.html) (CI) tool for embedded
  projects ([issue #108](https://github.com/platformio/platformio/issues/108))
-   Initialise PlatformIO project for the specified IDE ([issue
  #151](https://github.com/platformio/platformio/issues/151))
-   PlatformIO CLI 2.0: “platform” related commands have been moved to
  `platformio platforms` subcommand ([issue #158](https://github.com/platformio/platformio/issues/158))
-   Created [PlatformIO gitter.im](https://gitter.im/platformio/platformio) room ([issue #174](https://github.com/platformio/platformio/issues/174))
-   Global `-f, --force` option which will force to accept any
  confirmation prompts ([issue #152](https://github.com/platformio/platformio/issues/152))
-   Run project with [platformio run –project-dir](http://docs.platformio.org/en/latest/userguide/cmd_run.html#cmdoption--project-dir) option without
  changing the current working directory ([issue #192](https://github.com/platformio/platformio/issues/192))
-   Control verbosity of [platformio run](http://docs.platformio.org/en/latest/userguide/cmd_run.html#cmdoption-platformio-run-v) command via `-v/--verbose`
  option
-   Add library dependencies for build environment using
  [install_libs](http://docs.platformio.org/en/latest/projectconf.html#install-libs) option in `platformio.ini` ([issue #134](https://github.com/platformio/platformio/issues/134))
-   Specify libraries which are compatible with build environment using
  [use_libs](http://docs.platformio.org/en/latest/projectconf.html#use-libs) option in `platformio.ini` ([issue #148](https://github.com/platformio/platformio/issues/148))
-   Add more boards to PlatformIO project with [platformio init
  –board](http://docs.platformio.org/en/latest/userguide/cmd_init.html#cmdoption--board) command ([issue #167](https://github.com/platformio/platformio/issues/167))
-   Choose which library to update ([issue #168](https://github.com/platformio/platformio/issues/168))
-   Specify [platformio init –env-prefix](http://docs.platformio.org/en/latest/userguide/cmd_init.html#cmdoption--env-prefix) when initialise/update
  project ([issue #182](https://github.com/platformio/platformio/issues/182))
-   Added new Armstrap boards ([issue #204](https://github.com/platformio/platformio/issues/204))
-   Updated SDK for [espressif](http://docs.platformio.org/en/latest/platforms/espressif.html) development platform to v1.1 ([issue
  #179](https://github.com/platformio/platformio/issues/179))
-   Disabled automatic updates by default for platforms, packages and
  libraries ([issue #171](https://github.com/platformio/platformio/issues/171))
-   Fixed bug with creating copies of source files ([issue #177](https://github.com/platformio/platformio/issues/177))
",19606299
1487,False,False,2015-05-15T11:00:51Z,2015-05-15T11:04:50Z,"-   Added support of [Framework mbed](http://platformio.org/#!/frameworks/mbed) for Teensy 3.1 ([issue #183](https://github.com/platformio/platformio/issues/183))
-   Added GDB as alternative uploader to [ststm32](http://docs.platformio.org/en/latest/platforms/ststm32.html) platform ([issue
  #175](https://github.com/platformio/platformio/issues/174))
-   Added [examples](https://github.com/platformio/platformio/tree/develop/examples) with preconfigured IDE projects ([issue #154](https://github.com/platformio/platformio/issues/154))
-   Fixed firmware uploading under Linux OS for Arduino Leonardo board
  ([issue #178](https://github.com/platformio/platformio/issues/178))
-   Fixed invalid “mbed” firmware for Nucleo F411RE ([issue #185](https://github.com/platformio/platformio/issues/185))
-   Fixed parsing of includes for PlatformIO Library Dependency Finder
  ([issue #189](https://github.com/platformio/platformio/issues/189))
-   Fixed handling symbolic links within source code directory ([issue
  #190](https://github.com/platformio/platformio/issues/190))
-   Fixed cancelling any previous definition of name, either built in or
  provided with a `-D` option ([issue #191](https://github.com/platformio/platformio/issues/191))
",19606299
1488,False,False,2015-04-11T16:53:49Z,2015-04-11T17:05:14Z,"-   Added [espressif](http://docs.platformio.org/en/latest/platforms/espressif.html) development platform with ESP01 board
-   Integrated PlatformIO with AppVeyor Windows based Continuous
  Integration system ([issue #149](https://github.com/platformio/platformio/issues/149))
-   Added support for Teensy LC board to [teensy](http://docs.platformio.org/en/latest/platforms/teensy.html) platform
-   Added support for new Arduino based boards by _SparkFun, BQ,
  LightUp, LowPowerLab, Quirkbot, RedBearLab, TinyCircuits,
  WickedDevice_ to [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html#boards) platform
-   Upgraded [Arduino Framework](http://docs.platformio.org/en/latest/frameworks/arduino.html) to 1.6.3 version ([issue #156](https://github.com/platformio/platformio/issues/156))
-   Upgraded [Energia Framework](http://docs.platformio.org/en/latest/frameworks/energia.html) to 0101E0015 version ([issue
  #146](https://github.com/platformio/platformio/issues/146))
-   Upgraded [Arduino Framework with Teensy Core](http://docs.platformio.org/en/latest/frameworks/arduino.html) to
  1.22 version ([issue #162](https://github.com/platformio/platformio/issues/162), [issue #170](https://github.com/platformio/platformio/issues/170))
-   Fixed exceptions with PlatformIO auto-updates when Internet
  connection isn’t active
",19606299
1489,False,False,2015-03-27T15:04:36Z,2015-03-27T15:07:18Z,"-   Moved PlatformIO source code and repositories from [Ivan Kravets](https://github.com/ivankravets)
  account to [PlatformIO Organisation](https://github.com/platformio) ([issue #138](https://github.com/platformio/platformio/issues/138))
-   Added support for new Arduino based boards by _SparkFun, RepRap,
  Sanguino_ to [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html#boards) platform ([issue #127](https://github.com/platformio/platformio/issues/127), [issue
  #131](https://github.com/platformio/platformio/issues/131))
-   Added integration instructions for [Visual Studio](http://docs.platformio.org/en/latest/ide/visualstudio.html) and [Sublime
  Text](http://docs.platformio.org/en/latest/ide/sublimetext.html) IDEs
-   Improved handling of multi-file `*.ino/pde` sketches ([issue
  #130](https://github.com/platformio/platformio/issues/130))
-   Fixed wrong insertion of function prototypes converting `*.ino/pde`
  ([issue #137](https://github.com/platformio/platformio/issues/137), [issue #140](https://github.com/platformio/platformio/issues/140))
",19606299
1490,False,False,2015-03-20T20:30:06Z,2015-03-20T21:29:29Z,"-   Added full support of [mbed](http://docs.platformio.org/en/latest/frameworks/mbed.html) framework including libraries: _RTOS,
  Ethernet, DSP, FAT, USB_.
-   Added [freescalekinetis](http://docs.platformio.org/en/latest/platforms/freescalekinetis.html) development platform with Freescale
  Kinetis Freedom boards
-   Added [nordicnrf51](http://docs.platformio.org/en/latest/platforms/nordicnrf51.html) development platform with supported boards
  from _JKSoft, Nordic, RedBearLab, Switch Science_
-   Added [nxplpc](http://docs.platformio.org/en/latest/platforms/nxplpc.html) development platform with supported boards from _CQ
  Publishing, Embedded Artists, NGX Technologies, NXP, Outrageous
  Circuits, SeeedStudio, Solder Splash Labs, Switch Science, u-blox_
-   Added support for _ST Nucleo_ boards to [ststm32](http://docs.platformio.org/en/latest/platforms/ststm32.html) development
  platform
-   Created new [Frameworks](http://docs.platformio.org/en/latest/frameworks/index.html) page in documentation and added to
  [PlatformIO Web Site](http://platformio.org) ([issue #115](https://github.com/ivankravets/platformio/issues/115))
-   Introduced online [Embedded Boards Explorer](http://platformio.org/#!/boards)
-   Automatically append define `-DPLATFORMIO=%version%` to builder
  ([issue #105](https://github.com/ivankravets/platformio/issues/105))
-   Renamed `stm32` development platform to [ststm32](http://docs.platformio.org/en/latest/platforms/ststm32.html)
-   Renamed `opencm3` framework to [libopencm3](http://docs.platformio.org/en/latest/frameworks/libopencm3.html)
-   Fixed uploading for [atmelsam](http://docs.platformio.org/en/latest/platforms/atmelsam.html) development platform
-   Fixed re-arranging the `*.ino/pde` files when converting to `*.cpp`
  ([issue #100](https://github.com/ivankravets/platformio/issues/100))
",19606299
1491,False,False,2015-03-05T13:05:40Z,2015-03-05T13:50:15Z,"-   Implemented `PLATFORMIO_*` environment variables ([issue #102](https://github.com/ivankravets/platformio/issues/102))
-   Added support for _SainSmart_ boards to [atmelsam](http://docs.platformio.org/en/latest/platforms/atmelsam.html#boards) development
  platform
-   Added [Project Configuration](http://docs.platformio.org/en/latest/projectconf.html) option named [envs_dir](http://docs.platformio.org/en/latest/projectconf.html#envs-dir)
-   Disabled “prompts” automatically for _Continuous Integration_
  systems ([issue #103](https://github.com/ivankravets/platformio/issues/103))
-   Fixed firmware uploading for [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html#boards) boards which work within
  `usbtiny` protocol
-   Fixed uploading for _Digispark_ board ([issue #106](https://github.com/ivankravets/platformio/issues/106))
",19606299
1492,False,False,2015-02-27T21:06:31Z,2015-02-27T21:09:46Z,"**PlatformIO 1.0 - recommended for production**
-   Changed development status from `beta` to `Production/Stable`
-   Added support for _ARM_-based credit-card computers: [Raspberry
  Pi](http://www.raspberrypi.org), [BeagleBone](http://beagleboard.org) and [CubieBoard](http://cubieboard.org)
-   Added [atmelsam](http://docs.platformio.org/en/latest/platforms/atmelsam.html) development platform with supported boards:
  _Arduino Due and Digistump DigiX_ ([issue #71](https://github.com/ivankravets/platformio/issues/71))
-   Added [stm32](http://docs.platformio.org/en/latest/platforms/stm32.html) development platform with supported boards:
  _Discovery kit for STM32L151/152, STM32F303xx, STM32F407/417 lines_
  and [libOpenCM3 Framework](http://www.libopencm3.org) ([issue #73](https://github.com/ivankravets/platformio/issues/73))
-   Added [teensy](http://docs.platformio.org/en/latest/platforms/teensy.html) development platform with supported boards: _Teensy
  2.x & 3.x_ ([issue #72](https://github.com/ivankravets/platformio/issues/72))
-   Added new _Arduino_ boards to [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html#boards) platform: _Arduino NG,
  Arduino BT, Arduino Esplora, Arduino Ethernet, Arduino Robot
  Control, Arduino Robot Motor and Arduino Yun_
-   Added support for _Adafruit_ boards to [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html#boards) platform:
  _Adafruit Flora and Adafruit Trinkets_ ([issue #65](https://github.com/ivankravets/platformio/issues/65))
-   Added support for _Digispark_ boards to [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html#boards) platform:
  _Digispark USB Development Board and Digispark Pro_ ([issue #47](https://github.com/ivankravets/platformio/issues/47))
-   Covered code with tests ([issue #2](https://github.com/ivankravets/platformio/issues/2))
-   Refactored _Library Dependency Finder_ (issues [#48](https://github.com/ivankravets/platformio/issues/48), [#50](https://github.com/ivankravets/platformio/issues/50),
  [#55](https://github.com/ivankravets/platformio/pull/55))
-   Added [src_dir](http://docs.platformio.org/en/latest/projectconf.html#src-dir) option to `[platformio]` section of
  [platformio.ini](http://docs.platformio.org/en/latest/projectconf.html) which allows to redefine location to project’s
  source directory ([issue #83](https://github.com/ivankravets/platformio/issues/83))
-   Added `--json-output` option to [platformio boards](http://docs.platformio.org/en/latest/userguide/cmd_boards.html) and
  [platformio search](http://docs.platformio.org/en/latest/userguide/cmd_search.html) commands which allows to return the output in
  [JSON](http://en.wikipedia.org/wiki/JSON) format ([issue #42](https://github.com/ivankravets/platformio/issues/42))
-   Allowed to ignore some libs from _Library Dependency Finder_ via
  `ignore_libs <http://docs.platformio.org
-   Allowed to ignore some libs from _Library Dependency Finder_ via
  [ignore_libs](http://docs.platformio.org/en/latest/projectconf.html#ignore-libs) option
-   Improved [platformio run](http://docs.platformio.org/en/latest/userguide/cmd_run.html) command: asynchronous output for build
  process, timing and detailed information about environment
  configuration ([issue #74](https://github.com/ivankravets/platformio/issues/74))
-   Output compiled size and static memory usage with [platformio run](http://docs.platformio.org/en/latest/userguide/cmd_run.html)
  command ([issue #59](https://github.com/ivankravets/platformio/issues/59))
-   Updated framework-arduino AVR & SAM to 1.6 stable version
-   Fixed an issue with the libraries that are git repositories ([issue
  #49](https://github.com/ivankravets/platformio/issues/49))
-   Fixed handling of assembly files ([issue #58](https://github.com/ivankravets/platformio/issues/58))
-   Fixed compiling error if space is in user’s folder ([issue #56](https://github.com/ivankravets/platformio/issues/56))
-   Fixed
  AttributeError: 'module' object has no attribute 'disable_warnings'
  when a version of requests package is less then 2.4.0
-   Fixed bug with invalid process’s “return code” when PlatformIO has
  internal error ([issue #81](https://github.com/ivankravets/platformio/issues/81))
-   Several bug fixes, increased stability and performance improvements
",19606299
1493,False,False,2015-01-06T16:33:36Z,2015-01-06T16:37:43Z,"- Fixed an issue with `--json-output` (issue #42)
- Fixed an exception during [platformio upgrade](http://docs.platformio.org/en/latest/userguide/cmd_upgrade.html) under Windows OS (issue #45)
",19606299
1494,False,False,2015-01-02T21:18:14Z,2015-01-02T21:22:31Z,"- Added `--json-output` option to
  [platformio list](http://docs.platformio.org/en/latest/userguide/cmd_list.html),
  [platformio serialports list](http://docs.platformio.org/en/latest/userguide/cmd_serialports.html) and
  [platformio lib list](http://docs.platformio.org/en/latest/userguide/cmd_lib_list.html)
  commands which allows to return the output in [JSON](http://en.wikipedia.org/wiki/JSON) format
  (issue #42)
- Fixed missing auto-uploading by default after [platformio init](http://docs.platformio.org/en/latest/userguide/cmd_init.html) command
",19606299
1495,False,False,2015-01-01T18:57:47Z,2015-01-01T19:07:38Z,"- Implemented [platformio boards](http://docs.platformio.org/en/latest/userguide/cmd_boards.html)
  command (issue #11)
- Added support of _Engduino_ boards for
  [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html#engduino)
  platform (issue #38)
- Added `--board` option to [platformio init](http://docs.platformio.org/en/latest/userguide/cmd_init.html)
  command which allows to initialise project with the specified embedded boards
  (issue #21)
- Added [example with uploading firmware](http://docs.platformio.org/en/latest/projectconf.html#examples)
  via USB programmer (USBasp) for
  [atmelavr](http://docs.platformio.org/en/latest/platforms/atmelavr.html)
  _MCUs_ (issue #35)
- Automatic detection of port on [platformio serialports monitor](http://docs.platformio.org/en/latest/userguide/cmd_serialports.html#platformio-serialports-monitor) (issue #37)
- Allowed auto-installation of platforms when prompts are disabled (issue #43)
- Fixed urllib3's _SSL_ warning under Python <= 2.7.2 (issue #39)
- Fixed bug with _Arduino USB_ boards (issue #40)
",19606299
1496,False,False,2014-12-10T21:12:27Z,2014-12-10T21:16:30Z,"## 0.9.2 (2014-12-10)
- Replaced ""dark blue"" by ""cyan"" colour for the texts (issue #33)
- Added new setting [enable_prompts](http://docs.platformio.ikravets.com/en/latest/userguide/cmd_settings.html)
  and allowed to disable all _PlatformIO_ prompts (useful for cloud compilers)
  (issue #34)
- Fixed compilation bug on _Windows_ with installed _MSVC_ (issue #18)
",19606299
1497,False,False,2014-12-04T22:04:38Z,2014-12-04T22:25:49Z,"- Ask user to install platform (when it hasn't been installed yet) within
  [platformio run](http://docs.platformio.ikravets.com/en/latest/userguide/cmd_run.html) and [platformio show](http://docs.platformio.ikravets.com/en/latest/userguide/cmd_show.html) commands
- Improved [main documentation](http://docs.platformio.ikravets.com)
- Fixed ""_OSError: [Errno 2] No such file or directory_"" within
  [platformio run](http://docs.platformio.ikravets.com/en/latest/userguide/cmd_run.html)
  command when PlatformIO isn't installed properly
- Fixed example for [Eclipse IDE with Tiva board](https://github.com/ivankravets/platformio/tree/develop/examples/ide-eclipse)
  (issue #32)
- Upgraded [Eclipse Project Examples](https://github.com/ivankravets/platformio/tree/develop/examples/ide-eclipse)
  to latest _Luna_ and _PlatformIO_ releases
",19606299
1498,False,False,2014-10-19T14:59:44Z,2014-12-01T22:00:34Z,"- Avoided trademark issues in [library.json](http://docs.platformio.ikravets.com/en/latest/librarymanager/config.html)
  with the new fields: [frameworks](http://docs.platformio.ikravets.com/en/latest/librarymanager/config.html#frameworks),
  [platforms](http://docs.platformio.ikravets.com/en/latest/librarymanager/config.html#platforms)
  and [dependencies](http://docs.platformio.ikravets.com/en/latest/librarymanager/config.html#dependencies)
  (issue #17)
- Switched logic from ""Library Name"" to ""Library Registry ID"" for all
  [platformio lib](http://docs.platformio.ikravets.com/en/latest/userguide/lib/index.html)
  commands (install, uninstall, update and etc.)
- Renamed `author` field to [authors](http://docs.platformio.ikravets.com/en/latest/librarymanager/config.html#authors)
  and allowed to setup multiple authors per library in [library.json](http://docs.platformio.ikravets.com/en/latest/librarymanager/config.html)
- Added option to specify ""maintainer"" status in [authors](http://docs.platformio.ikravets.com/en/latest/librarymanager/config.html#authors) field
- New filters/options for [platformio lib search](http://docs.platformio.ikravets.com/en/latest/userguide/lib/cmd_search.html)
  command: `--framework` and `--platform`
",19606299
1499,False,False,2014-12-01T21:04:54Z,2014-12-01T21:57:39Z,"- Implemented [platformio settings](http://docs.platformio.ikravets.com/en/latest/userguide/cmd_settings.html) command
- Improved [platformio init](http://docs.platformio.ikravets.com/en/latest/userguide/cmd_init.html) command.
  Added new option `--project-dir` where you can specify another path to
  directory where new project will be initialized (issue #31)
- Added _Migration Manager_ which simplifies process with upgrading to a
  major release
- Added _Telemetry Service_ which should help us make _PlatformIO_ better
- Implemented _PlatformIO AppState Manager_ which allow to have multiple
  `.platformio` states.
- Refactored _Package Manager_
- Download Manager: fixed SHA1 verification within _Cygwin Environment_
  (issue #26)
- Fixed bug with code builder and built-in Arduino libraries
  (issue #28)
",19606299
1500,False,False,2014-10-06T20:28:12Z,2014-10-06T20:31:24Z,"- Fixed bug with order for includes in conversation from INO/PDE to CPP
- Automatic detection of port on upload (issue #15)
- Fixed lib update crashing when no libs are installed (issue #19)
",19606299
1501,False,False,2014-09-24T19:25:58Z,2014-09-24T19:31:01Z,"- Implemented new `[platformio]` section for Configuration File with `home_dir`
  option (issue #14)
- Implemented _Library Manager_ (issue #6)
",19606299
1502,False,False,2014-08-09T20:21:02Z,2014-08-09T20:25:43Z,"- Implemented `serialports monitor` (issue #10)
- Fixed an issue `ImportError: No module named platformio.util` (issue #9)
- Fixed bug with auto-conversation from Arduino *.ino to *.cpp
",19606299
1503,False,False,2014-08-04T08:56:43Z,2014-08-04T09:04:46Z,"- Improved nested lookups for libraries
- Disabled default warning flag ""-Wall""
- Added auto-conversation from *.ino to valid *.cpp for Arduino/Energia
  frameworks (issue #7)
- Added [Arduino example](https://github.com/ivankravets/platformio/tree/develop/examples/arduino-adafruit-library)
  with external library (Adafruit CC3000)
- Implemented `platformio upgrade` command and ""auto-check"" for the latest
  version (issue #8)
- Fixed issue with ""auto-reset"" for Raspduino board
- Fixed bug with nested libs building
",19606299
1504,False,False,2014-07-31T13:26:35Z,2014-07-31T13:28:25Z,"- Implemented `serialports` command
- Allowed to put special build flags only for `src` files via
  `srcbuild_flags` environment option
- Allowed to override some of settings via system environment variables
  such as: `$PIOSRCBUILD_FLAGS` and `$PIOENVS_DIR`
- Added `--upload-port` option for `platformio run` command
- Implemented (especially for [SmartAnthill](http://smartanthill.ikravets.com/))
  `platformio run -t uploadlazy` target (no dependencies to framework libs,
  ELF and etc.)
- Allowed to skip default packages via `platformio install --skip-default-package` flag
- Added tools for Raspberry Pi platform
- Added support for Microduino and Raspduino boards in `atmelavr` platform
",19606299
1505,False,False,2014-06-21T20:10:39Z,2014-06-21T20:15:40Z,"- Fixed auto-installer for Windows OS (bug with %PATH% customisations)  
",19606299
1506,False,False,2014-06-21T19:31:46Z,2014-06-21T19:34:53Z,"## 0.3.0 (2014-06-21)
- Allowed to pass multiple ""SomePlatform"" to install/uninstall commands
- Added ""IDE Integration"" section to README with Eclipse project examples
- Created auto installer script for _PlatformIO_ (issue #3)
- Added ""Super-Quick"" way to Installation section (README)
- Implemented ""build_flags"" option for environments (issue #4)
",19606299
1507,False,False,2014-06-15T19:06:33Z,2014-06-15T19:15:58Z,"## 0.2.0 (2014-06-15)
- Resolved [issue #1 ""Build referred libraries""](https://github.com/ivankravets/platformio/issues/1)
- Renamed project's ""libs"" directory to ""lib""
- Added [arduino-internal-library](https://github.com/ivankravets/platformio/tree/develop/examples/arduino-internal-library) example
- Changed to beta status
",19606299
1508,False,False,2014-06-13T19:16:19Z,2014-06-15T19:15:35Z,"## 0.1.0 (2014-06-13)
- Birth! First alpha release
",19606299
1509,False,False,2020-03-10T08:52:19Z,2020-03-10T09:00:36Z,"We are pleased to announce the release of Zephyr RTOS version 2.2.0.

Major enhancements with this release include:

* Initial support for the 64-bit ARMv8-A architecture (Experimental).
* CANopen protocol support through 3rd party CANopenNode stack
* LoRa support was added through integration of the Semtech LoRaWAN endpoint
  stack and addition of a new SX1276 LoRa modem driver
* A new and redesigned GPIO API has been introduced, and all in-tree users have been ported to it

The following sections provide detailed lists of changes by component.

## Security Vulnerability Related

The following security vulnerabilities (CVEs) were addressed in this release:

  * Fix CVE-2020-10019
  * Fix CVE-2020-10021
  * Fix CVE-2020-10023
  * Fix CVE-2020-10024
  * Fix CVE-2020-10026
  * Fix CVE-2020-10027
  * Fix CVE-2020-10028
  * Fix CVE-2020-10058

More detailed information can be found in:
https://docs.zephyrproject.org/latest/security/vulnerabilities.html

## API Changes

### Deprecated in this release

* Settings

  * SETTINGS_USE_BASE64, encoding values in base64 is marked for removal.

### Stable API changes in this release

* GPIO

  * GPIO API has been reworked to support flags known from Linux DTS GPIO
    bindings. They will typically be defined in the board DTS file

    - GPIO_ACTIVE_LOW, GPIO_ACTIVE_HIGH used to set pin active level
    - GPIO_OPEN_DRAIN, GPIO_OPEN_SOURCE used to configure pin as open drain or
      open source
    - GPIO_PULL_UP, GPIO_PULL_DOWN used to configure pin bias

  * Reading / writing of pin logical level is supported by gpio_pin_get,
    gpio_pin_set functions.
  * Reading / writing of pin physical level is supported by gpio_pin_get_raw,
    gpio_pin_set_raw functions.
  * New set of port functions that operate simultaneously on multiple pins
    that belong to the same controller.
  * Interrupts should be configured by a dedicated
    gpio_pin_interrupt_configure() function. Configuring interrupts via
    gpio_pin_configure() is still supported but this feature will be removed
    in future releases.
  * New set of flags allows to set arbitrary interrupt configuration (if
    supported by the driver) based on pin physical or logical levels.
  * New set of flags to configure pin as input, output or in/out as well as set
    output initial state.
  * Majority of the old GPIO API has been deprecated. While the care was taken
    to preserve backward compatibility due to the scope of the work it was not
    possible to fully achieve this goal. We recommend to switch to the new GPIO
    API as soon as possible.
  * Areas where the deprecated API may behave differently to the original old
    implementation are:

    - Configuration of pin interrupts, especially involving GPIO_INT_ACTIVE_LOW
      and GPIO_POL_INV flags.
    - Behavior of gpio_pin_configure() when invoked without interrupt related
      flags. In the new implementation of this deprecated functionality the
      interrupts remain unmodified. In the original implementation some of the
      GPIO drivers would disable the interrupts.

  * Several drivers that rely on the functionality provided by the GPIO API
    were reworked to honor pin active level. Any external users of these
    drivers will have to update their DTS board files.

    - bluetooth/hci/spi.c
    - display/display_ili9340.c
    - display/ssd1306.c
    - ieee802154/ieee802154_mcr20a.c
    - ieee802154/ieee802154_rf2xx.c
    - lora/sx1276.c
    - wifi/eswifi/eswifi_core.c
    - majority of the sensor drivers

* PWM

  * The pwm_pin_set_cycles(), pwm_pin_set_usec(), and
    pwm_pin_set_nsec() functions now take a flags parameter. The newly
    introduced flags are PWM_POLARITY_NORMAL and PWM_POLARITY_INVERTED
    for specifying the polarity of the PWM signal. The flags parameter
    can be set to 0 if no flags are required (the default is
    PWM_POLARITY_NORMAL).
  * Similarly, the pwm_pin_set_t PWM driver API function function now
    takes a flags parameter. The PWM controller driver must check the
    value of the flags parameter and return -ENOTSUP if any
    unsupported flag is set.

* USB

  * The usb_enable() function, which was previously invoked automatically
    by the USB stack, now needs to be explicitly called by the application
    in order to enable the USB subsystem.
  * The usb_enable() function now takes a parameter, usb_dc_status_callback
    which can be set by the application to a callback to receive status events
    from the USB stack. The parameter can also be set to NULL if no callback is required.

* nRF flash driver

  * The nRF Flash driver has changed its default write block size to 32-bit
    aligned. Previous emulation of 8-bit write block size can be selected using
    the CONFIG_SOC_FLASH_NRF_EMULATE_ONE_BYTE_WRITE_ACCESS Kconfig option.
    Usage of 8-bit write block size emulation is only recommended for
    compatibility with older storage contents.

* Clock control

  * The callback prototype (clock_control_cb_t) has now additional argument
    (clock_control_subsys_t) indicating which clock subsystem got started.

### Removed APIs in this release

* Shell

  * SHELL_CREATE_STATIC_SUBCMD_SET (deprecated), replaced by
    SHELL_STATIC_SUBCMD_SET_CREATE
  * SHELL_CREATE_DYNAMIC_CMD (deprecated), replaced by SHELL_DYNAMIC_CMD_CREATE

* Newtron Flash File System (NFFS) was removed. NFFS was removed since it has
    serious issues, not fixed since a long time. Where it was possible
    NFFS usage was replaced by LittleFS usage as the better substitute.

## Kernel

* Addressed some race conditions observed on SMP-enabled systems
* Propagate a distinct error code if a workqueue item is submitted that
  has already been completed
* Disable preemption when handing fatal errors
* Fix an issue with the sytsem call stack frame if the system call is
  preempted and then later tries to Z_OOPS()
* add k_thread_stack_space_get() system call for analyzing thread stack
  space. Older methods which had problems in some cases or on some
  architectures like STACK_ANALYZE() are now deprecated.
* Many kernel object APIs now optionally return runtime error values
  instead of relying on assertions. Whether these return values, fail
  assertions, or do no checking at all is controlled by the new
  Kconfig options ASSERT_ON_ERRORS, NO_RUNTIME_CHECKS, RUNTIME_ERROR_CHECKS.
* Cleanups to the arch_cpu_start() API
* Spinlock validation now dumps the address of the incorrectly used spinlock
* Various improvements to the assertion mechanism
* k_poll() may be passed 0 events, in which case it just puts the caller to
  sleep
* Add k_thread_foreach_unlocked() API
* Add an assertion if k_sleep() is called from an ISR
* Numerous 64-bit fixes, mostly related to data type sizes
* k_mutex_unlock() is now correctly a rescheduling point
* Calling k_thread_suspend() on the current thread now correctly invokes
  the scheduler
* Calling k_thread_suspend() on any thread cancels any pending timeouts for
  that thread
* Fix edge case in meta-IRQ preemption of co-operative threads

## Architectures

* ARC:

  * Fixed several irq-handling related issues

* ARM:

  * Added initial support for ARMv8-A 64-bit architecture (Experimental)
  * Added support for Direct Dynamic Interrupts in ARM Cortex-M
  * Fixed several critical bugs in ARM Cortex-R architecture port
  * Fixed several critical bugs in Stack Limit checking for ARMv8-M
  * Added QEMU emulation support for ARM Cortex-A53
  * Enhanced QEMU emulation support for ARM Cortex-R architecture
  * Enhanced test coverage for ARM-specific kernel features
  * Added support for GIC SGI and PPI interrupt types
  * Refactored GIC driver to support multiple GIC versions

* POSIX:

  * N/A

* RISC-V:

  * N/A

* x86:

  * Fix an issue with Kconfig values larger than INT_MAX
  * Fix an issue where callee-saved registers could be unnecessarily
    saved on the stack when handling exceptions on x86_64
  * Fix a potential race with saving RFLAGS on context switch on x86_64
  * Enable 64-bit mode and X2APIC for the 'acrn' target
  * Add a poison value of 0xB9 to RIP if a thread is dispatched on multiple
    cores
  * Implement CONFIG_USERSPACE on x86_64
  * Fix an issue where reserved memory could be overwritten when loading the
    Zephyr image on qemu_x86_64
  * x86_64 will now exit QEMU when encountering a fatal error, much like
    32-bit already does
  * Cleanups and improvements to exception debug messages

## Boards & SoC Support

* Added support for these SoC series:

   * Atmel SAM4E
   * Atmel SAMV71
   * Broadcom BCM58400
   * NXP i.MX RT1011
   * Silicon Labs EFM32GG11B
   * Silicon Labs EFM32JG12B
   * ST STM32F098xx
   * ST STM32F100XX
   * ST STM32F767ZI
   * ST STM32L152RET6
   * ST STM32L452XC
   * ST STM32G031
   * Intel Apollolake Audio DSP

* Added support for these Xtensa boards:

   * Up Squared board Audio DSP

* Added support for these ARM boards:

   * Atmel SAM 4E Xplained Pro
   * Atmel SAM E54 Xplained Pro
   * Atmel SAM V71 Xplained Ultra
   * Broadcom BCM958401M2
   * Cortex-A53 Emulation (QEMU)
   * Google Kukui EC
   * NXP i.MX RT1010 Evaluation Kit
   * Silicon Labs EFM32 Giant Gecko GG11
   * Silicon Labs EFM32 Jade Gecko
   * ST Nucleo F767ZI
   * ST Nucleo G474RE
   * ST Nucleo L152RE
   * ST Nucleo L452RE
   * ST STM32G0316-DISCO Discovery kit
   * ST STM32VLDISCOVERY

* Removed support for these ARM boards:

     * TI CC2650


* Added support for these following shields:

     * ST7789V Display generic shield
     * TI LMP90100 Sensor Analog Frontend (AFE) Evaluation Board (EVB)

* Removed support for these following shields:

     * Link board CAN

## Drivers and Sensors

* ADC

  * Added LMP90xxx driver with GPIO

* Audio

  * N/A

* Bluetooth

  * Update SPI driver to new GPIO API
  * Minor fixes to H:5 (Three-wire UART) driver

* CAN

  * Support for CAN_2 on STM32, but no simultaneous use of CAN_1 and CAN_2.
  * Support for STM32F3 and STM32F4 series
  * Added SocketCAN support to mcux flexcan driver
  * Fixed bit timing conversion in stm32 driver
  * Introduced can-primary device tree alias

* Clock Control

  * Modified driver for nRF platform to use single device with multiple
    subsystems, one for each clock source.

* Console

  * N/A

* Counter

  * The counter_read() API function is deprecated in favor of
    counter_get_value(). The new API function adds a return value for
    indicating whether the counter was read successfully.
  * Added missing syscalls

* Crypto

  * Added AES GCM, ECB, and CBC support to crypto_mtls_shim
  * Added stm32 CRYP driver

* Debug

  * N/A

* Display

  * Added generic display driver sample
  * Added support for BGR565 pixel format
  * Added support for LVGL v6.1
  * Introduced KSCAN based ft5336 touch panel driver
  * Added support for LVGL touch input device

* DMA

  * dw: renaming cavs drivers into DesignWare
  * stm32: improvements over channels support

* EEPROM

  * Added EEPROM driver for STM32L0 and STM32L1 SoC series
  * Added EEPROM simulator (replacing native_posix EEPROM driver)

* Entropy

  * Added support for sam0
  * Added LiteX PRBS module driver

* ESPI

  * N/A

* Ethernet

  * Support for SiLabs Giant Gecko GG11 Ethernet driver
  * Fixed Ethernet networking for LiteX VexRiscv

* Flash

  * Added Nordic JEDEC QSPI NOR flash driver
  * Unified native_posix flash driver with drivers/flash/flash_simulator
  * fixed: erase native_posix flash in initialization
  * extend MCUX flash drive to support LPC55xxx devices
  * stm32: Replace register accesses for Flash driver to use STM32Cube
  * Nios2: qspi unaligned read support
  * sam0: Add support for SAME54
  * Added the flash driver of the stm32f1x family

* GPIO

  * Updated all drivers to the new API
  * Added LiteX GPIO driver

* Hardware Info

  * N/A

* I2C

  * Enabled interrupts by default in stm32 driver
  * Added I2C shell with scan command
  * Added LiteX I2C controller driver
  * Added STM32G0X support to stm32 driver
  * Added support for bus idle timeout property to mcux lpspi driver
  * Added support for SAME54 to sam0 driver

* I2S

  * N/A

* IEEE 802.15.4

  * Add support for IEEE 802.15.4 rf2xxx driver

* Interrupt Controller

  * Added support for multiple GIC versions
  * Renamed s1000 driver to cavs
  * Added SweRV Programmable Interrupt Controller driver
  * Fixed invalid channel bug for RV32M1 interrupt controller

* IPM

  * N/A

* Keyboard Scan

  * Added ft5336 touch panel driver

* LED

  * N/A

* LED Strip

  * Fixed up ws2812 driver

* LoRa

  * Added APIs and drivers needed to support LoRa technology by reusing the
    LoRaMac-node library.

* Modem

  * Add support for generic GSM modem

* Neural Net

  * N/A

* PCIe

  * N/A

* Pinmux

  * Removed CC2650 driver

* PS/2

  * N/A

 * PTP Clock

   * N/A

* PWM

  * Added RV32M1 timer/PWM driver
  * Added LiteX PWM peripheral driver
  * Added support for intverted PWM signals

* Sensor

  * Fixed DRDY interrupt in lis3mdl driver
  * Added nxp kinetis temperature sensor driver
  * Reworked ccs811 driver
  * Fixed tmp007 driver to use i2c_burst_read
  * Introduced sensor shell module
  * Added ms5607 driver

* Serial

  * nRF UARTE driver support TX only mode with receiver permanently disabled.
  * Enabled shared interrupts support in uart_pl011 driver
  * Implemented configure API in ns16550 driver
  * Removed cc2650 driver
  * Added async API system calls

* SPI

  * Added support for samv71 to sam driver
  * Added support for same54 support to sam0 driver
  * Added PM busy state support in DW driver
  * Added Gecko SPI driver
  * Added mcux flexcomm driver

* Timer

  * Optimized reads of MTIME/MTIMECMP on 64-bit RISC-V
  * Added per-core ARM architected timer driver
  * Added support for same54 to sam0 rtc timer driver

* USB

  * Add support for SAMV71 SoC
  * Add support for SAME54 SoC
  * Extend USB device support to all NXP IMX RT boards

* Video

  * N/A

* Watchdog

  * Added SiLabs Gecko watchdog driver
  * Added system calls
  * Fixed callback call on stm32 wwdg enable

* WiFi

  * Reworked offloading mechanism in eswifi and simplelink drivers

## Networking

* Add support to configure OpenThread Sleepy End Device (SED)
* Add 64-bit support to net_buf APIs
* Add support for IEEE 802.15.4 rf2xxx driver
* Add TLS secure renegotiation support
* Add support for Timestamp and Record Route IPv4 options.
  They are only used for ICMPv4 Echo-Request packets.
* Add sample cloud application that shows how to connect to Azure cloud
* Add optional timestamp resource to some of the LWM2M IPSO objects
* Add support to poll() which can now return immediately when POLLOUT is set
* Add support to PPP for enabling connection setup to Windows
* Add signed certificate support to echo-server sample application
* Add support for handling multiple simultaneous mDNS requests
* Add support for SiLabs Giant Gecko GG11 Ethernet driver
* Add support for generic GSM modem which uses PPP to connect to data network
* Add UTC offset and timezone support to LWM2M
* Add RX time statistics support to packet socket
* Update ACK handling in IEEE 802.154 nrf5 driver and OpenThread
* Update MQTT PINGREQ count handling
* Update wpan_serial sample to support more boards
* Update Ethernet e1000 driver debugging prints
* Update OpenThread to use settings subsystem
* Update IPv6 to use interface prefix in routing
* Update socket offloading support to support multiple registered interfaces
* Fix checks when waiting network interface to come up in configuration
* Fix zperf sample issue when running out of network buffers
* Fix PPP IPv4 Control Protocol (IPCP) handling
* Fix native_posix Ethernet driver to read data faster
* Fix PPP option handling
* Fix MQTT to close connection faster
* Fix 6lo memory corruption during uncompression
* Fix echo-server sample application accept handling
* Fix Websocket to receive data in small chunks
* Fix Virtual LAN (VLAN) support to add link local address to network interface
* Various fixes to new TCP stack implementation
* Remove NATS sample application

## CAN Bus

* CANopen protocol support through 3rd party CANopenNode stack.
* Added native ISO-TP subsystem.
* Introduced CAN-PRIMARY alias.
* SocketCAN for MCUX flexcan.

## Bluetooth

* Host:

  * GAP: Add dynamic LE scan listener API
  * GAP: Pre-allocate connection objects for connectable advertising and
    whitelist initiator.
  * GAP: Fixes for multi-identity support
  * GAP: RPA timeout handling fixes
  * GAP: Add remote version information
  * GATT: Add return value to cfg_write callback
  * L2CAP: move channel processing to the system workqueue
  * L2CAP: multiple fixes for credit-based flowcontrol
  * SMP: Add pairing_accept callback
  * SMP: Fix Security Manager timeout handling

* Mesh:

  * Add support for Mesh Configuration Database
  * Multiple fixes to Friendship feature
  * Add support for sending segmented control messages
  * Add support for sending reliable model publication messages

* BLE split software Controller:

  * Multiple fixes, including all those required to pass qualification
  * Implemented software-deferred privacy for platforms without built-in
    address resolution support
  * Added dynamic TX power control, including a set of vendor-specific commands
    to read and write the TX power
  * Added a Kconfig option, BT_CTLR_PARAM_CHECK, to enable addtional parameter
    checking
  * Added basic support for SMI (Stable Modulation Index)
  * Ticker: Implemented dynamic rescheduling
  * Nordic: switched to using a single clock device for clock control
  * openisa: Added encryption and decryption support

* BLE legacy software Controller:

  * Multiple fixes
  * Added dynamic TX power control support

## USB Device Stack

* Stack:

  * API: Add support for user device status callback
  * Rework switching to alternate interface
  * Make USB Descriptor power options configurable
  * Derive USB device Serial Number String from HWINFO (required by USB MSC)
  * Move USB transfer functions to appropriate file as preparation for
    the rework
  * Windows OS compatibility: Set USB version to 2.1 when using BOS descriptor
  * Convert VBUS control to new GPIO API

* Classes:

  * CDC ACM: Memory and performance improvements, avoid ZLP during IN transactions
  * DFU: Limit upload length during DFU_UPLOAD to the request buffer size
  * Loopback: Re-trigger usb_write after interface configuration event

## Build and Infrastructure

* The minimum Python version supported by Zephyr's build system and tools is
  now 3.6.
* Renamed :file:`generated_dts_board.h` and :file:`generated_dts_board.conf` to
  :file:`devicetree.h` and :file:`devicetree.conf`, along with various related
  identifiers. Including :file:`generated_dts_board.h` now generates a warning
  saying to include :file:`devicetree.h` instead.

## Libraries / Subsystems

* LoRa

  * LoRa support was added through official LoRaMac-node reference
    implementation.

* Logging

  * Improvements in immediate mode: less interrupts locking, better RTT usage,
    logging from thread context.
  * Improved notification about missing log_strdup.

* mbedTLS updated to 2.16.4

HALs
****

* HALs are now moved out of the main tree as external modules and reside in
  their own standalone repositories.

## Documentation

* settings: include missing API subgoups into the documentation
* Documentation for new boards and samples.
* Improvements and clarity of API documentation.

## Tests and Samples

* Added sample for show settings subsystem API usage

## Issue Related Items

These GitHub issues were addressed since the previous 2.1.0 tagged
release:

* #23351 - boards: nucle_g474re: west flash doesn't work
* #23321 - Bluetooth: LE SC OOB authentication in central connects using different RPA
* #23310 - GUI: LVGL: possible NULL dereference
* #23281 - UART console input does not work on SAM E5x
* #23268 - Unnecessary privileged stacks with CONFIG_USERSPACE=y
* #23244 - kernel.scheduler fails on frdmkw41z
* #23231 - RISCV Machine Timer consistently interrupts long running system after soft reset
* #23221 - status register value always reads 0x0000 in eth_mcux_phy_setup
* #23209 - Bug in tls_set_credential
* #23208 - Can not flash test images into up_squared board.
* #23202 - Macro value for 10 bit ADC is wrong in MEC driver.
* #23198 - rf2xx driver uses mutex in ISR
* #23173 - west flash --nobuild,   west flash-signed
* #23172 - Common west flash, debug arguments like --hex-file can't be used from command line
* #23169 - ""blinky"" sample fails to build for BBC MicroBit (DT_ALIAS_LED0_GPIOS_CONTROLLER undefined)
* #23168 - Toolchain docs: describe macOS un-quarantine procedure
* #23165 - macOS setup fails to build for lack of ""elftools"" Python package
* #23148 - bme280 sample does not compile
* #23147 - tests/drivers/watchdog/wdt_basic_api failed on mec15xxevb_assy6853 board.
* #23121 - Bluetooth: Mesh: Proxy servers only resends segments to proxy
* #23110 - PTS: Bluetooth: GATT/SR/GAS/BV-07-C
* #23109 - LL.TS Test LL/CON/SLA/BV-129-C fails (split)
* #23072 - #ifdef __cplusplus missing in tracking_cpu_stats.h
* #23069 - Bluetooth: controller: Assert in data length update procedure
* #23050 - subsys/bluetooth/host/conn.c: conn->ref is not 0 after disconnected
* #23047 - cdc_acm_composite sample doesn't catch DTR from second UART
* #23035 - dhcpv4_client sample not working on sam e70
* #23023 - Bluetooth: GATT CCC problem (GATT Server)
* #23015 - Ongoing LL control procedures fails with must-expire latency (BT_CTLR_CONN_META)
* #23004 - Can't use west to flash test images into up_squared board.
* #23002 - unknown type name 'class'
* #22999 - pend() assertion can allow user threads to crash the kernel
* #22985 - Check if Zephyr is affected by SweynTooth vulnerabilities
* #22982 - PTS: Test framework: Bluetooth: GATT/SR/GAS/BV-01-C,  GATT/SR/GAS/BV-07-C - BTP Error
* #22979 - drivers: hwinfo: Build fails on some SoC
* #22977 - ARM Cortex-M4 stack offset when not using Floating point register sharing
* #22968 - Bluetooth: controller: LEGACY: ASSERTION failure on invalid packet sequence
* #22967 - Bluetooth: controller: ASSERTION FAIL on invalid packet sequence
* #22945 - Bluetooth: controller: ASSERTION FAIL Radio is on during flash operation
* #22933 - k_delayed_work_submit_to_queue returns error code when resubmitting previously completed work.
* #22931 - GPIO callback is not triggered for tests/drivers/gpio/gpio_basic_api on microchip mec15xxevb_assy6853 board
* #22930 - PTS: Test Framework :Bluetooth: SM/MAS/PKE/BV-01-C INCONCLUSIV
* #22929 - PTS: Test Framework :Bluetooth: SM/SLA/SIP/BV-01-C Error
* #22928 - PTS: Test Framework: Bluetooth: SM/MAS/SIGN/BV-03-C, SM/MAS/SIGN/BI-01-C - INCONCLUSIV
* #22927 - PTS: Test Framework: Bluetooth:  SM/MAS/SIP/BV-02-C-INCONCLUSIV
* #22926 - Bluetooth: Cannot establish security and discover GATT when using Split LL
* #22914 - tests/arch/arm/arm_irq_vector_table crashes for nRF5340
* #22912 - [Coverity CID :208406] Macro compares unsigned to 0 in subsys/net/l2/ppp/ppp_l2.c
* #22902 - eth_mcux_phy_setup called before ENET clock being enabled causes CPU to hang
* #22893 - Problem using 3 instances of SPIM on NRF52840
* #22890 - IP networking does not work on ATSAME70 Rev. B
* #22888 - Can't flash test image into iotdk board.
* #22885 - Sanitycheck timeout all test cases on mec15xxevb_assy6853 board.
* #22874 - sanitycheck: when someone instance get stuck because of concurrent.futures.TimeoutErro exception, it always stuck
* #22858 - WDT_DISABLE_AT_BOOT, if enabled by default, degrades functionality of the watchdog
* #22855 - drivers: enc28j60: waits for wrong interrupt
* #22847 - Test gpio_basic_api hangs on cc3220sf_launchxl
* #22828 - kernel: fatal: interrupts left locked in TEST mode
* #22822 - mesh: typo in condition in comp_add_elem of cfg_srv
* #22819 - #define _current in kernel_structs.h leaks into global namespace
* #22814 - mcuboot doesn't build with zephyr v2.1.0
* #22803 - k_delayed_work_cancel documentation inconsistent with behavior
* #22801 - Bluetooth: Split LL: Reconnection problem
* #22786 - Bluetooth: SM/MAS/PROT/BV-01-C FAIL
* #22784 - system hangs in settings_load() nrf52840 custom board
* #22774 - Set USB version to 2.1 when CONFIG_USB_DEVICE_BOS is set
* #22730 - CONFIG_BT_SETTINGS writes bt/hash to storage twice
* #22722 - posix: redefinition of symbols while porting zeromq to zephyr
* #22720 - armv8-m: userspace: some parts in userspace enter sequence need to be atomic
* #22698 - log_stack_usage: prints err: missinglog_strdup()
* #22697 - nrf52 telnet_shell panic. Mutex using in ISR.
* #22693 - net: config: build break when CONFIG_NET_NATIVE=n
* #22689 - driver: modem: sara-u2  error when connecting
* #22685 - armv8-m: userspace: syscall return sequence needs to be atomic
* #22682 - arm: cortex-a: no default board for testing
* #22660 - gpio: legacy level interrupt disable API not backwards compatible
* #22658 - [Coverity CID :208189] Self assignment in soc/xtensa/intel_apl_adsp/soc.c
* #22657 - [Coverity CID :208191] Dereference after null check in subsys/canbus/isotp/isotp.c
* #22656 - [Coverity CID :208192] Out-of-bounds access in tests/subsys/canbus/isotp/implementation/src/main.c
* #22655 - [Coverity CID :208193] Unchecked return value in tests/bluetooth/mesh/src/microbit.c
* #22654 - [Coverity CID :208194] Arguments in wrong order in tests/subsys/canbus/isotp/implementation/src/main.c
* #22653 - [Coverity CID :208196] Out-of-bounds access in drivers/eeprom/eeprom_simulator.c
* #22652 - [Coverity CID :208197] Pointless string comparison in tests/drivers/gpio/gpio_basic_api/src/main.c
* #22651 - [Coverity CID :208198] Logical vs. bitwise operator in boards/xtensa/up_squared_adsp/bootloader/boot_loader.c
* #22650 - [Coverity CID :208199] Arguments in wrong order in tests/subsys/canbus/isotp/conformance/src/main.c
* #22649 - [Coverity CID :208200] Bad bit shift operation in drivers/interrupt_controller/intc_exti_stm32.c
* #22648 - [Coverity CID :208201] Out-of-bounds write in soc/xtensa/intel_apl_adsp/soc.c
* #22647 - [Coverity CID :208202] Arguments in wrong order in samples/subsys/canbus/isotp/src/main.c
* #22646 - [Coverity CID :208203] Missing break in switch in drivers/interrupt_controller/intc_exti_stm32.c
* #22645 - [Coverity CID :208204] Arguments in wrong order in samples/subsys/canbus/isotp/src/main.c
* #22644 - [Coverity CID :208205] Improper use of negative value in tests/subsys/canbus/isotp/implementation/src/main.c
* #22642 - [Coverity CID :208207] Arguments in wrong order in tests/subsys/canbus/isotp/conformance/src/main.c
* #22641 - [Coverity CID :208208] Arguments in wrong order in tests/subsys/canbus/isotp/implementation/src/main.c
* #22640 - [Coverity CID :208209] 'Constant' variable guards dead code in drivers/gpio/gpio_sx1509b.c
* #22636 - Provide Linux-style IS_ERR()/PTR_ERR()/ERR_PTR() helpers
* #22626 -  tests/drivers/counter/counter_basic_api failed on frdm_k64f board.
* #22624 - tests/kernel/semaphore/semaphore failed on iotdk board.
* #22623 - tests/kernel/timer/timer_api failed on mimxrt1050_evk board.
* #22616 - Zephyr doesn't build if x86_64 SDK toolchain isn't install
* #22584 - drivers: spi: spi_mcux_dspi: bus busy status ignored in async
* #22563 - Common west flash/debug etc. arguments cannot be set in CMake
* #22559 - crash in semaphore tests on ARC nsim_em and nsim_sem
* #22557 - document guidelines/principles related to DT usage in Zephyr
* #22556 - document DT macro generation rules
* #22543 - No way to address a particular FTDI for OpenOCD
* #22542 - GEN_ABSOLUTE_SYM cannot handle value larger than INT_MAX on qemu_x86_64
* #22539 - bt_gatt: unable to save SC: no cfg left
* #22535 - drivers: lora: Make the SX1276 driver independent of loramac module
* #22534 - sanitycheck qemu_x86_coverage problem with SDK 0.11.1
* #22532 - Doc build warning lvgl/README.rst
* #22525 - stm32f7xx.h: No such file or directory
* #22522 - GPIO test code tests/drivers/gpio/gpio_basic_api does not compile for microchip board mec15xxevb_assy6853
* #22519 - sanitycheck failures for native_posix
* #22514 - Bluetooth: gatt: CCC cfg not flushed if device was previously paired
* #22510 - Build warnings in samples/net/cloud/google_iot_mqtt
* #22489 - Request to enable CONFIG_NET_PKT_RXTIME_STATS for SOCK_RAW
* #22486 - Do we have driver for Texas Instruments DRV2605 haptic driver for ERM and LRA actuators?
* #22484 - Linker error when building google_iot_mqtt sample with zephyr-sdk 0.11.1
* #22482 - Unable to use LOG_BACKEND_DEFINE macro from log_backend.h using C++
* #22478 - Bluetooth - peripheral_dis - settings_runtime_set not working
* #22474 - boards that have Kconfig warnings on hello_world.
* #22466 - Add hx711 sensor
* #22462 - onoff: why client must be reinitialized after each transition
* #22455 - How to assign USB endpoint address manually in stm32f4_disco for CDC ACM class driver
* #22452 - not driver found in can bus samples for olimexino_stm32
* #22447 - samples: echo_client sample breaks for UDP when larger than net if MTU
* #22444 - [Coverity CID :207963] Argument cannot be negative in tests/net/socket/websocket/src/main.c
* #22443 - [Coverity CID :207964] Dereference after null check in subsys/canbus/canopen/CO_driver.c
* #22442 - [Coverity CID :207965] Missing break in switch in drivers/i2c/i2c_ll_stm32_v1.c
* #22440 - [Coverity CID :207970] Out-of-bounds access in samples/net/sockets/websocket_client/src/main.c
* #22439 - [Coverity CID :207971] Negative array index read in subsys/net/l2/ppp/ipcp.c
* #22438 - [Coverity CID :207973] Out-of-bounds access in tests/net/socket/websocket/src/main.c
* #22437 - [Coverity CID :207974] Out-of-bounds read in tests/net/socket/websocket/src/main.c
* #22436 - [Coverity CID :207975] Logically dead code in subsys/net/l2/ppp/ipcp.c
* #22435 - [Coverity CID :207977] Logically dead code in subsys/canbus/canopen/CO_driver.c
* #22434 - [Coverity CID :207978] Dereference after null check in subsys/canbus/canopen/CO_driver.c
* #22433 - [Coverity CID :207980] Untrusted loop bound in tests/net/socket/websocket/src/main.c
* #22432 - [Coverity CID :207982] Explicit null dereferenced in tests/lib/onoff/src/main.c
* #22430 - [Coverity CID :207985] Argument cannot be negative in subsys/net/lib/websocket/websocket.c
* #22424 - RFC: API Change: clock_control
* #22417 - Build warnings with atsamr21_xpro
* #22410 - arch: arm64: ARM64 port not working on real target
* #22390 - Unable to build http_get with TLS enabled on cc32xx
* #22388 - Build warnings in http_get on cc3220sf_launchxl
* #22366 - Bug in sockets.c (subsys\net\lib\sockets)
* #22363 - drivers: clock_control: clock_stm32_ll_h7.c Move Power Configuration code
* #22360 - test_mqtt_disconnect in mqtt_pubsub fails
* #22356 - An application hook for early init
* #22343 - stm32f303 - irq conflict between CAN and USB
* #22317 - samples/arc_secure_services fails on nsim_sem
* #22316 - samples/philosophers coop_only scenario times out on nsim_sem and nsim_em
* #22307 - net: ip: net_pkt_pull(): packet corruption when using CONFIG_NET_BUF_DATA_SIZE larger than 256
* #22304 - ARM Cortex-M STMF401RE: execution too slow
* #22299 - The file flash_stm32wbx.c generates compilation error
* #22297 - nucleo_wb55rg:samples/bluetooth/peripheral/sample.bluetooth.peripheral fails to build on master
* #22290 - ARC crashes due to concurrent system calls
* #22280 - incorrect linker routing
* #22275 - arm: cortex-R & M: CONFIG_USERSPACE: intermittent Memory region write access failures
* #22272 - aggregated devicetree source file needs to be restored to build directory
* #22268 - timer not working when duration is too high
* #22265 - Simultaneous BLE pairings getting the same slot in keys structure
* #22259 - Bluetooth: default value 80 on BT_ACL_RX_COUNT clamped to 64
* #22258 - sanitycheck fails to merge OVERLAY_CONFIG properly
* #22257 - test wdt_basic_api failed on nucleo_f746zg
* #22245 - STM32G4xx: Wrong SystemCoreClock variable
* #22243 - stm32g431rb: PLL setting result to slow exccution
* #22210 - Bluetooth -  bt_gatt_get_value_attr_by_uuid
* #22207 - Bluetooth ：Mesh：Provison init should after proxy
* #22204 - CONFIG_BT_DEBUG_LOG vs atomic_ operations
* #22202 - bt_rand() is called over HCI when BT_HOST_CRYPTO=y, even if BT_CTLR_LE_ENC=n
* #22197 - dts: gen_defines.py bails out on new path property type
* #22188 - drivers: espi: xec : eSPI driver should not send VWire SUS_ACK automatically in all cases
* #22177 - Adafruit M0 boards are not set up to correctly flash in their code partitions
* #22171 - West bossac runner inorrectly tries to include an offset parameter when flashing
* #22128 - frdm_k82f:samples/drivers/spi_fujitsu_fram/sample.drivers.spi.fujitsu_fram fails
* #22107 - mdns support with avahi as client
* #22106 - intermittent emulator exit on samples/userspace/shared_mem on qemu_x86_64
* #22088 - Bluetooth Mesh friendship is cleared due to no Friend response reception
* #22086 - L2CAP/SMP: Race condition possible in native posix central when bonding.
* #22085 - HCI/CCO/BV-07-C & HCI/GEV/BV-01-C failing in EDTT
* #22066 - tests/kernel/mem_pool/mem_pool_threadsafe fails reliably on m2gl025_miv
* #22062 - Adafruit Feather M0 does not flash correctly - incorrect flash code offset and bossa version incompatibility
* #22060 - Build fails with gnuarmemb under windows
* #22051 - Bluetooth Central: Discovery of 128bit primary service fails with later versions of gcc.
* #22048 - Failing LL.TS Data Length Update Tests (split)
* #22037 - qemu_cortex_r5 excludes too many tests
* #22036 - sanitycheck for qemu_cortex_r5 fails
* #22026 - west: openocd runner fails for boards without support/openocd.cfg
* #22014 - RTC prescaler overflow on nRF(52)
* #22010 - Bluetooth 'central' failure on native_posix
* #22003 - 'central' failure on nrf52_pca10040
* #21996 - Native POSIX or QEMU X86 emulation does not detect Bluetooth HCI Vendor-Specific Extensions
* #21989 - websocket: recv_msg always returns full message length on last call
* #21974 - make include hierarchy consistent with expected usage
* #21970 - net: dns: mDNS resolving fails when responder is also enabled
* #21967 - json: json_obj_parse will modify the input string
* #21962 - drivers: usb: usb_dc_stm32: does not compile for stm32f3_disco board
* #21949 - net: TCP: echo server deadlock from TCP packet
* #21935 - SPI - STM32: transceive() should handle null tx buffer
* #21917 - cmake error with CONFIG_COUNTER and CONFIG_BT both enabled (nrf52 board)
* #21914 - net: dns: Answers to multiple mDNS queries sent in parallel aren't properly handled
* #21888 - Print unmet Kconfig dependency
* #21875 - sanitycheck warning for silabs,gecko-spi-usart.yaml
* #21869 - IPv6 neighbors get added too eagerly
* #21859 - Bluetooth LE Disconnect event not received
* #21854 - HCI-UART: Bluetooth ACL data packets with 251 bytes not acknowledged
* #21846 - RFC: API: Counter: counter_read() has no way of indicating failure
* #21837 - net: socket: Add dependency to mbedtls
* #21813 - tests/kernel/timer/timer_api failed on frdm_k64f board.
* #21812 - tests/arch/arm/arm_irq_advanced_features failed on reel_board.
* #21800 - Xtensa doesn't save SCOMPARE1 register on context switch
* #21790 - tests/kernel/timer/timer_api fails on nucleo_g071rb board
* #21789 - Merge topic-gpio back to master
* #21784 - sanitycheck prints some build errors directly to the console
* #21780 - OpenThread fails on nRF52840 Dongle (nrf52840_pca10059)
* #21775 - echo_server and 802154 not build for NRF52811
* #21768 - Make [CONFIG_NET_SOCKETS_SOCKOPT_TLS] dependent on [CONFIG_MBEDTLS] in menuconfig
* #21764 - [SARA-R4] MQTT publisher not working - Impossible to connect to broker
* #21763 - at86rf2xx radio driver does not report whether a TX was ACKed
* #21756 - tests/kernel/obj_tracing failed on mec15xxevb_assy6853 board.
* #21755 - tests/drivers/adc/adc_api  failed on  mec15xxevb_assy6853 board.
* #21745 - tests: counter_basic_api: Failed on stm32 based boards
* #21744 - dumb_http_server_mt with overlay-tls.conf does not connect
* #21735 - ARM: Cortex-M: IRQ lock/unlock() API non-functional but accessible from user mode
* #21716 - nucleo_g431rb: Hello world not working
* #21715 - nucleo_g431rb: Blinky too slow / wrong clock setup?
* #21713 - CDC ACM USB class issue with high transfer rate and ZLP
* #21702 - [Coverity CID :206599] Out-of-bounds access in tests/bluetooth/uuid/src/main.c
* #21700 - [Coverity CID :206606] Out-of-bounds access in tests/bluetooth/uuid/src/main.c
* #21699 - [Coverity CID :206608] Dereference null return value in tests/net/icmpv4/src/main.c
* #21695 - Documentation issues on v1.14-branch block backport
* #21681 - nucleo_g431rb / STM32G4: Flashing works only once
* #21679 - SPI broken on stm32f412 on master
* #21676 - [Coverity CID :206389] Logically dead code in subsys/testsuite/ztest/src/ztest.c
* #21674 - [Coverity CID :206392] Side effect in assertion in tests/kernel/timer/starve/src/main.c
* #21673 - [Coverity CID :206393] Unintentional integer overflow in drivers/sensor/ms5607/ms5607.c
* #21672 - [Coverity CID :206394] Logically dead code in subsys/testsuite/ztest/src/ztest.c
* #21660 - Sample projects do not build for Nucleo WB55RG
* #21659 - at86rf2xx radio driver not (reliably) sending ACKs
* #21650 - _TEXT_SECTION_NAME_2 on ARM Cortex-R
* #21637 - sanitycheck failed issue in parallel running.
* #21629 - error with 'west update' on Windows 10
* #21623 - DT: accept standard syntax for phandle in chosen node
* #21618 - CI failing to complete tests
* #21617 - Allow per module prj.conf
* #21614 - host toolchain for x86 fails on empty CMAKE_C_FLAGS
* #21607 - BME680 Sensor is not building
* #21601 - '!radio_is_ready()' failed
* #21599 - CONFIG_HEAP_MEM_POOL_SIZE and k_malloc, k_free not working in nrf51_pca10028
* #21597 - sht3xd build error on olimexino_stm32
* #21591 - Timeout error for the Microchip board during Sanitycheck
* #21586 - Bluetooth Mesh fail to transmit messages after some time on nRF52840
* #21581 - GNU ARM Embedded link broken in Getting Started
* #21571 - CONFIG_BT_CENTRAL doesnot work fine with nrf51_pca10028
* #21570 - how to select usb mps for SAME70 board
* #21568 - mps2_an385:tests/kernel/tickless/tickless_concept/kernel.tickless.concept  fail
* #21552 - Constant disconnects while attempting BT LE multi-central application.
* #21551 - gpio: xec: GPIO Interrupt is not triggered for range GPIO240_276
* #21546 - SPI broken for STM32L1
* #21536 - tests/subsys/fs/fat_fs_api fails on native_posix_64
* #21532 - can not build the image ,No targets specified and no makefile found
* #21514 - Logging - strange behaviour with RTT on nRF53
* #21510 - re-v
* #21493 - System tick is not running
* #21483 - sanitycheck messages in CI are not informative anymore
* #21475 - sanitycheck: hardware map generation unexpected exit during the first attempt
* #21466 - doc: extract_content.py not copying images in a table
* #21450 - sample.net.cloud.google_iot_mqtt test is failing for frdm_k64f
* #21448 - nrf52840 errata_98 / 89 mixup
* #21443 - ""HCI_USB"" sample doesn't compile with ""nucleo_wb55rg"" board
* #21438 - sanitycheck reports ""FAILED: N/A"" for failed or hung tests
* #21432 - watchdog subsystem has no system calls
* #21431 - missing async uart.h system calls
* #21429 - Impossible to override syscalls
* #21426 - civetweb triggers an error on Windows with Git 2.24
* #21422 - Added nucleo-f767zi board support and would like to share
* #21419 - RFC: API Change: usb: Make users call usb_enable. Provide global status callback.
* #21418 - Crash when suspending system
* #21410 - bt_ctlr_hci: Tx Buffer Overflow on LL/CON/MAS/BV-04-C, LL/CON/SLA/BV-05-C & LL/CON/SLA/BV-06-C
* #21409 - sanitycheck: cmd.exe colorized output
* #21385 - board frdm_kl25z build passed, but can't flash
* #21384 - RFC: API Change: PWM: add support for inverted PWM signals
* #21379 - Bluetooth: Mesh: Node Reset Not Clear Bind Key Information
* #21375 - GATT: gatt_write_ccc_rsp with error (0x0e) removes always beginning from subscriptions head
* #21365 - implicit casts in API headers must be replaced for C++ support
* #21351 - tests/drivers/counter/counter_basic_api  failed on mimxrt1050_evk board.
* #21341 - conditions required for safe call of kernel operations from interrupts
* #21339 - Expired IPv6 router causes an infinite loop
* #21335 - net: TCP: Socket echo server does not accept incoming connections when TLS is enabled
* #21328 - Apparent network context leak with offloading driver (u-blox Sara r4)
* #21325 - Where should the Digital-Input, Output, ADC driver be added?
* #21321 - error update for project civetweb
* #21318 - CONFIG_SYS_POWER_MANAGEMENT Makes Build Fail for nRF5340 and nRF9160
* #21317 - intermittent SMP crashes on x86_64
* #21306 - ARC: syscall register save/restore needs backport to 1.14
* #21301 - Coverage report generated for qemu_x86 board is incomplete
* #21300 - pyocd flash failing on bbc_microbit
* #21299 - bluetooth: Controller does not release buffer on central side after peripheral reset
* #21290 - Compiler warnings in flash.h: invalid conversion from 'const void*' to 'const flash_driver_api*'
* #21281 - logging: msg_free may erroneously call log_free
* #21278 - How to use pwm in nrf52832 for rgb led
* #21275 - kl2x soc fixup is missing I2C_1 labels
* #21257 - tests/net/net_pkt failed on mimxrt1050_evk board.
* #21240 - Error west flash
* #21229 - cc1plus: warning: '-Werror=' argument '-Werror=implicit-int' is not valid for C++
* #21202 - Required upgrade of HAL
* #21186 - Gatt discover callback gives invalid pointer to primary and secondary service UUID.
* #21185 - zero-latency IRQ behavior is not documented?
* #21181 - devicetree should support making properties with defaults required
* #21177 - Long ATT MTU reports wrong length field in write callback.
* #21171 - Module Request: Optiga Trust X
* #21167 - libraries.libc.newlib test fails
* #21165 - Bluetooth: Mesh: Friend Clear message from a Friend node
* #21162 - Sanitycheck corrupted test case names in test-report.xml files
* #21161 - question: openthread with other boards
* #21148 - nrf51: uart_1 does not compile
* #21139 - west: runners: blackmagicprobe: Keyboard Interrupt shouldn't kill the process
* #21131 - Bluetooth: host: Subscriptions not removed upon unpair
* #21126 - drivers: spi_nrfx_spim: Incorrect handling of extended SPIM configuration
* #21123 - sanitycheck halt some test cases with parallel running.
* #21121 - netusb: RNDIS host support
* #21115 - Request a new repository for the Xtensa HAL
* #21105 - Bluetooth API called before finished initialization.
* #21103 - Bluetooth: host: Reduce overhead of GATT subscriptions
* #21099 - echo server qemu_x86 e1000 cannot generate coverage reports
* #21095 - [Coverity CID :206086] Out-of-bounds access in drivers/timer/cortex_m_systick.c
* #21094 - native_posix doesn't call main function that's defined in C++
* #21082 - tests/kernel/timer/timer_api failing on several nRF5x SoCs
* #21074 - Enhance 802.1Qav documentation
* #21058 - BLE: Enable/Disable Automatic sending of Connection Parameter update request on Timeout.
* #21057 - BLE: No Valid Parameter check in send_conn_le_param_update()
* #21045 - log_backend.h missing include for UTIL_CAT in LOG_BACKEND_DEFINE macro
* #21036 - Add SMP function similar to bt_conn_get_info
* #21025 - sam_e70_xplained reboots after 35secs
* #20981 - mempool: MPU fault
* #20974 - file resources exceeded with sanitycheck
* #20953 - usb: nrf: usb on reel board becomes unavailable if USB cable is not connected at first
* #20927 - ztest_1cpu_user_unit_test() doesn't work
* #20915 - doc: Kconfig section in board_porting.rst should be moved or removed
* #20904 - kernel.timer.tickless is failed due to missing TEST_USERSPACE flag
* #20886 - [Coverity CID :205826] Memory - corruptions in tests/subsys/fs/nffs_fs_api/common/nffs_test_utils.c
* #20885 - [Coverity CID :205819] Memory - corruptions in tests/subsys/fs/nffs_fs_api/common/nffs_test_utils.c
* #20884 - [Coverity CID :205799] Memory - corruptions in tests/subsys/fs/nffs_fs_api/common/nffs_test_utils.c
* #20877 - [Coverity CID :205823] Null pointer dereferences in tests/kernel/fifo/fifo_timeout/src/main.c
* #20802 - reschedule not done after mutex unlock
* #20770 - irq locking in logging backend can cause missing interrupts
* #20755 - mcuboot: add as module and verify functionality
* #20749 - samples:sample.net.dns_resolve.mdns:frdmk64f ipv4dns handler has not result
* #20748 - build warnings on lpcxpresso54114_m0/m4 board
* #20746 - Bluetooth: Mesh: Friend node Adding another Friend Update
* #20724 - Packed pointer warning in LL Controller
* #20698 - Bluetooth: host: Skip pre-scan done by bt_conn_create_le if not needed
* #20697 - Confusing warning during cmake
* #20673 - guiconfig not working properly?
* #20640 -  Bluetooth: l2cap do not recover when faced with long packets and run out of buffers
* #20629 - when CONFIG_BT_SETTINGS is enabled, stack stores id in flash memory each power up of device (call to bt_enable)
* #20618 - Can unicast address be relayed when send message over gatt proxy?
* #20576 - DTS overlay files must include full path name
* #20561 - Crypto API: Separate IV from ciphertext based on struct cipher_ctx::flags
* #20535 - [Coverity CID :205619]Null pointer dereferences in /tests/net/ieee802154/fragment/src/main.c
* #20497 - [Coverity CID :205638]Integer handling issues in /drivers/pwm/pwm_mchp_xec.c
* #20490 - [Coverity CID :205651]Uninitialized variables in /drivers/dma/dma_stm32.c
* #20484 - Tests/kernel/gen_isr_table failing when enabling WDT driver
* #20426 - sensors: grove temperature and light drivers out of date
* #20414 - nRF51 issues with the split link layer
* #20411 - samples: lis3mdl trigger not working with x_nucleo_iks01a1
* #20388 - Allow for runtime reconfiguration of SPI master / slave
* #20355 - west build for zephyr/samples/net/sockets/echo_server/ on qemu_xtensa target outputs elf with panic
* #20315 - zperf TCP uploader fails
* #20286 - Problem building for ESP32
* #20278 - Something is wrong when trying ST7789V sample
* #20264 - Bluetooth: Delay advertising events instead of dropping them on collision
* #20256 - settings subsystem sample
* #20217 - Extend qemu_cortex_r5 test coverage
* #20172 - devicetree support for compound elements
* #20161 - Facing issue to setup zephyr on ubuntu
* #20153 - BLE small throughput
* #20140 - CMake: syscall macro's are not generated for out of tree DTS_ROOT
* #20125 - Add system call to enter low power mode and reduce latency for deep sleep entry
* #20026 - sanitycheck corrupts stty in some cases
* #20017 - Convert GPIO users to new GPIO API
* #19982 - Periodically wake up log process thread consume more power
* #19922 - Linear time to give L2CAP credits
* #19869 - Implement tickless capability for xlnx_psttc_timer
* #19761 - tests/net/ieee802154/fragment failed on reel board.
* #19737 - No Function In Zephyr For Reading BLE Channel Map?
* #19666 - remove kernel/include and arch/*/include from default include path
* #19643 - samples/boards/arc_secure_services fails on nsim_sem
* #19545 - usb: obtain configuration descriptor's bmAttributes and bMaxPower from DT
* #19540 - Allow running and testing network samples in automatic way
* #19492 - sanitycheck: unreliable/inconsistent catch of ASSERTION FAILED
* #19488 - Reference and sample codes to get started with the friendship feature in ble mesh
* #19473 - Missing NULL parameter check in k_pipe_get
* #19361 - BLE Scan fails to start when running in parallel with BLE mesh
* #19342 - Bluetooth: Mesh: Persistent storage of Virtual Addresses
* #19245 - Logging: Assert with LOG_IMMEDIATE
* #19100 - LwM2M sample with DTLS: does not connect
* #19053 - 2.1 Release Checklist
* #18962 - [Coverity CID :203909]Memory - corruptions in /subsys/mgmt/smp_shell.c
* #18867 - zsock_poll() unnecessarily wait when querying for ZSOCK_POLLOUT
* #18852 - west flash fails for cc1352r_launchxl
* #18635 - isr4 repeatedly gets triggered after test passes in tests/kernel/gen_isr_table
* #18583 - hci_usb: NRF52840 connecting addtional peripheral fails
* #18551 - address-of-temporary idiom not allowed in C++
* #18530 - Convert GPIO drivers to new GPIO API
* #18483 - Bluetooth: length variable inconsistency in keys.c
* #18452 - [Coverity CID :203463]Memory - corruptions in /tests/lib/ringbuffer/src/main.c
* #18447 - [Coverity CID :203400]Integer handling issues in /tests/lib/fdtable/src/main.c
* #18410 - [Coverity CID :203448]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_onoff_switch.c
* #18378 - [Coverity CID :203537]Error handling issues in /samples/subsys/nvs/src/main.c
* #18280 - tests/drivers/adc/adc_api fails on frdmkl25z
* #18173 - ARM: Core Stack Improvements/Bug fixes for 2.1 release
* #18169 - dts: bindings: inconsistent file names and base.yaml include of general device controllers
* #18137 - Add section on IRQ generation to doc/guides/dts/index.rst
* #17852 - Cmsis_rtos_v2_apis test failed on iotdk board.
* #17838 - state DEVICE_PM_LOW_POWER_STATE of Device Power Management
* #17787 - openocd unable to flash hello_world to cc26x2r1_launchxl
* #17731 - Dynamically set TX power of BLE Radio
* #17689 - On missing sensor, Init hangs
* #17543 - dtc version 1.4.5 with ubuntu 18.04 and zephyr sdk-0.10.1
* #17310 - boards: shields: use Kconfig.defconfig system for shields
* #17309 - enhancements to device tree generation
* #17102 - RFC: rework GPIO interrupt configuration
* #16935 - Zephyr doc website: Delay search in /boards to the end of the search.
* #16851 - west flash error on zephyr v1.14.99
* #16735 - smp_svr sample does not discover services
* #16545 - west: diagnose dependency version failures
* #16482 - mcumgr seems to compromise BT security
* #16472 - tinycrypt ecc-dh and ecc-dsa should not select entropy generator
* #16329 - ztest teardown function not called if test function is interrupted
* #16239 - Build: C++ compiler warning '-Wold-style-definition'
* #16235 - STM32: Move STM32 Flash driver to CMSIS STM32Cube definitions
* #16232 - STM32: implement pinmux api
* #16202 - Improve help for west build target
* #16034 - Net packet size of 64 bytes doesn't work.
* #16023 - mcuboot: enabling USB functionality in MCUboot crashes zephyr application in slot0
* #16011 - Increase coverage of tests
* #15906 - WEST ERROR: extension command build was improperly defined
* #15841 - Support AT86RF233
* #15729 - flash: should write_protection be emulated?
* #15657 - properly define kernel <--> arch APIs
* #15611 - gpio/pinctrl: GPIO and introduce PINCTRL API to support gpio, pinctrl DTS nodes
* #15593 - How to use gdb to view the stack of a thread
* #15580 - SAMD21 Adafruit examples no longer run on boards
* #15435 - device fails to boot when spi max frequency set above 1000000
* #15278 - CANopen Support
* #15229 - network tests have extremely restrictive whitelist
* #15171 - BLE Throughput
* #14927 - checkpatch: not expected behavior for multiple git commit check.
* #14922 - samples/boards/altera_max10/pio: Error configuring GPIO PORT
* #14753 - nrf52840_pca10056: Leading spurious 0x00 byte in UART output
* #14668 - net: icmp4: Zephyr strips record route and time stamp options
* #14650 - missing system calls in Counter driver APIs
* #14639 - All tests should be SMP-safe
* #14632 - Default for TLS_PEER_VERIFY socket option are set to required, may lead to confusion when running samples against self-signed certs
* #14621 - BLE controller: Add support for Controller(SW deferred)-based Privacy
* #14287 - USB HID Get_Report and Set_Report
* #14206 - user mode documentation enhancements
* #13991 - net: Spurious driver errors due to feeding packets into IP stack when it's not fully initialized (assumed reason)
* #13943 - net: QEMU Ethernet drivers are flaky (seemingly after ""net_buf"" refactor)
* #13941 - Alternatives for OpenThread settings
* #13894 - stm32f429i_disc1: Add DTS for USB controller
* #13403 - USBD event and composite-device handling
* #13232 - native_posix doc: Add mention of virtual USB
* #13151 - Update documentation on linking Zephyr within a flash partition
* #12968 - dfu/mcuboot: solution for Set pending: don't crash when image slot corrupt
* #12860 - No test builds these files
* #12814 - TCP connet Net Shell function seems to not working when using NET_SOCKETS_OFFLOAD
* #12635 - tests/subsys/fs/nffs_fs_api/common/nffs_test_utils.c fail with Assertion failure on nrf52840
* #12553 - List of tests that keep failing sporadically
* #12537 - potential over-use of k_spinlock
* #12490 - Produced ELF does not follow the linux ELF spec
* #12359 - Default address selection for IPv6 should follow RFC 6724
* #12331 - Proposal to improve the settings subsystem
* #12134 - I cannot see a Zephyr way to change the clock frequency at runtime
* #12130 - Is zephyr targeting high-end phone or pc doing open ended computation on the roadmap?
* #12027 - Make icount work for real on x86_64
* #11751 - Rework exception & fatal error handling framework
* #11519 - Add at least build test for cc1200
* #11490 - setup_ipv6() treats event enums as bitmasks
* #11296 - Possible ways to implement clock synchronisation over BLE
* #11213 - NFFS: Handle unexpected Power Off
* #11172 - ARM Cortex A Architecture support - ARMv8-A
* #10996 - Add device tree support for usb controllers on x86
* #10821 - ELCE: DT, Kconfig, EDTS path forward
* #10534 - Can we get rid of zephyr-env.sh?
* #10423 - log_core.h error on pointer-to-int-cast on 64bit system
* #10339 - gpio: Cleanup flags
* #10305 - RFC: Add pin mask for gpio_port_xxx
* #9947 - CMake build architecture documentation
* #9904 - System timer handling with low-frequency timers
* #9873 - External flash driver for the MX25Rxx
* #9748 - NFFS issue after many writes by btsettings
* #9506 - Ztest becomes unresponsive while running SMP tests
* #9349 - Support IPv6 privacy extension RFC 4941
* #9333 - Support for STM32 L1-series
* #9330 - network: clean up / implement supervisor to manage net services
* #9194 - generated syscall header files don't have ifndef protection
* #8833 - OpenThread: Minimal Thread Device (MTD) option is not building
* #8539 - Categorize Kconfig options in documentation
* #8262 - [Bluetooth] MPU FAULT on sdu_recv
* #8242 - File system (littlefs & FAT) examples
* #8236 - DTS Debugging is difficult
* #7305 - CMake improvements to modularize gperf targets
* #6866 - build: requirements: No module named yaml and elftools
* #6562 - Question: Is QP™ Real-Time Frameworks/RTOS or libev supported in Zephyr? Or any plan?
* #6521 - Scheduler needs spinlock-based synchronization
* #6496 - Question: Is dynamical module loader supported in Zephyr? Or any plan?
* #6389 - OpenThread: otPlatRandomGetTrue() implementation is not up to spec, may lead to security issues
* #6327 - doc: GPIO_INT config option dependencies aren't clear
* #6293 - Refining Zephyr's Device Driver Model
* #6157 - SMP lacks low-power idle
* #6084 - api: pinmux/gpio: It isn't possible to set pins as input and output simultaneously
* #5943 - OT: utilsFlashWrite does not take into account the write-block-size
* #5695 - C++ Support doesn't work
* #5436 - Add LoRa Radio Support
* #5027 - Enhance Testing and Test Coverage
* #4973 - Provide Linux-style ERR_PTR/PTR_ERR/IS_ERR macros
* #4951 - Prevent full rebuilds on Kconfig changes
* #4917 - Reintroduce generic ""outputexports"" target after CMake migration
* #4830 - device tree: generate pinmux
* #3943 - x86: scope SMAP support in Zephyr
* #3866 - To optimize the layout of the meta data of mem_slab & mem_pool
* #3810 - application/kernel rodata split
* #3717 - purge linker scripts of macro-based meta-language
* #3701 - xtensa: scope MPU enabling
* #3636 - Define region data structures exposed by linker script
* #3490 - Move stm32 boards dts file to linux dts naming rules
* #3488 - Dissociate board names from device tree file names
* #3469 - Unify flash and code configuration across targets
* #3429 - Add TSL2560 ambient light sensor driver
* #3428 - Add HTU21D humidity sensor driver
* #3427 - Add MPL3115A2 pressure sensor driver
* #3397 - LLDP: Implement local MIB support for optional TLVs
* #3276 - Dynamic Frequency Scaling
* #3156 - xtensa: Support C++
* #3098 - extend tests/kernel/arm_irq_vector_table to other platforms
* #3044 - How to create a Zephyr ROM library
* #2925 - cross-platform support for interrupt tables/code in RAM or ROM
* #2814 - Add proper support for running Zephyr without a system clock
* #2807 - remove sprintf() and it's brethen
* #2664 - Running SanityCheck in Windows
* #2338 - ICMPv6 ""Packet Too Big"" support
* #2307 - DHCPv6
* #1903 - Wi-Fi Host Stack
* #1897 - Thread over BLE
* #1583 - NFFS requires 1-byte unaligned accesses to flash
* #1511 - qemu_nios2 should use the GHRD design
* #1468 - Move NATS support from sample to a library + API
* #1205 - C++ usage",59771425
1510,False,True,2020-02-29T19:20:47Z,2020-02-29T19:27:06Z,"```
Alberto Escolar Piedras (1):
      doc: release notes: Content for POSIX arch

Alexander Wachter (8):
      doc: hwinfo: Clarify return values.
      drivers: hwinfo: Introduce HWINFO_HAS_DRIVER Kconfig symbol
      tests: hwinfo: Make the tests depending on HWINFO_HAS_DRIVER
      drivers: hwinfo: Exclude NRF53 non-secure from hwinfo driver
      boards: Remove ""supported: -hwinfo"" from all boards
      SoC: stm32: Include LL utilities if HWINFO is selected
      drivers: hwinfo: Don't disable CLOE on SAM3x seies
      SoC: SAM3x and SAM4: Add the Flash Controller to the DT

Andries Kruithof (1):
      Bluetooth: controller: split: Fix regression errors

Andrzej Puzdrowski (1):
      doc/reference/runtime_conf/settings: reference missing API group

Carles Cufi (1):
      Bluetooth: tester: Fix GATT service registration

Christian Taedcke (1):
      editorconfig: Set max_line_length to 80

Dag Bjarvin (1):
      Bluetooth: controller: Merge 2 lines

Daniel Leung (2):
      xtensa: save/restore scompare1 during context switch
      soc: mec1501: wait for UART FIFO clear before deep sleep

Dariusz Lisik (1):
      tracing: fixes C++ compilation issue

Dominik Ermel (2):
      tests/subsys/fs/fat: Incorrect mount path has been tested
      subsys/mgmt: Fix incorrect buffer space check

Erwan Gouriou (1):
      doc: Update shields section in V2.2 release note

Francois Ramu (4):
      driver: watchdog: stm32 install watchdog
      driver: clock: stm32: boost voltage when clock exceeds 150MHz
      driver: clock: stm32: boost voltage when clock exceeds 80MHz
      west.yml: update hal stm32g4xx and stm32l4R/stm32l4S modules

Gerard Marull-Paretas (1):
      lib/timeutil: add missing header required for s64_t

Ioannis Glaropoulos (1):
      tests: arch: arm_thread_swap: test FPSCR preservation in FP_SHARING

Jennifer Williams (1):
      samples: subsys: nvs: unchecked return values CID#203537

Joakim Andersson (3):
      Bluetooth: shell: Update help text of `bt init` command
      Bluetooth: tests: shell: Remove config not supported on native_posix
      Bluetooth: tests: shell: Add missing dependency in mesh.conf

Johan Hedberg (1):
      release: Zephyr 2.2.0-rc3

Jukka Rissanen (1):
      doc: release notes: Add information about GSM modem

Luiz Augusto von Dentz (1):
      Bluetooth: GATT: Fix not clearing CF_OUT_OF_SYNC

Luuk Bosma (2):
      arch: arm: aarch32: clear CPACR for every CPU that has a FPU
      arch: arm: aarch32: clear CONTROL.FPCA for every CPU that has a FPU

Martí Bolívar (7):
      doc: west: add examples for each topology
      doc: west: update structure page
      doc: west: 'west installation' is now 'west workspace'
      doc: dts/macros.rst: ""clocks"" macro fixes
      scripts: run_common: rename unknown_args to user_runner_args
      scripts: run_common: rename 'args' to 'user_args'
      scripts: run_common: fix command line --hex-file and friends

Morten Priess (1):
      Bluetooth: controller: Prevent LLCP handling of must-expire events

Ravi kumar Veeramally (2):
      net: ipv4: Fix parsing of IPv4 header options
      tests: net: Add wrong options length case

Rubin Gerritsen (1):
      bluetooth: Fix wrong warning text for unsupported Zephyr HCI commands

Stephanos Ioannidis (1):
      boards: qemu_cortex_r5: Add board documentation

Tobias Svehagen (2):
      Bluetooth: Mesh: Fix bug with storing node in CDB
      Bluetooth: Mesh: Fix handling of app index and local device key

Trond Einar Snekvik (1):
      Bluetooth: Mesh: Group resends in proxy nodes

Vinayak Kariappa Chettimada (5):
      Bluetooth: controller: legacy: Fix Tx pool corruption
      Bluetooth: controller: legacy: Fix assert on DLE procedure stall
      Bluetooth: controller: Add Kconfig for Optimize for Speed
      tests: Bluetooth: shell: Fix conditional compile error
      Bluetooth: controller: legacy: Fix cond. compile error

Wolfgang Puffitsch (1):
      manifest: EDTT: update manifest to point to new revision in EDTT
```",59771425
1511,False,True,2020-02-25T20:39:45Z,2020-02-25T20:43:42Z,"```
Abhishek Shah (5):
      arch: arm: aarch64: linker: Discard plt and got sections
      arch: arm: aarch64: linker.ld: move vector table to text segment
      arch: arm64: Add MMU support
      arch: arm64: mmu: Add zephyr execution regions
      soc: arm64: qemu-cortex-a53: Add MMU support

Alberto Escolar Piedras (1):
      manifest: EDTT: Update to latest version with HCI command fixes

Alexander Wachter (4):
      canbus: isotp: Fix NULL deref after overflow
      tests: canbus: isotp: Fix wrong variable used for assert
      doc: release-notes: Release-notes for CAN bus
      doc: release-notes: Added LoRa to the release-notes

Alexey Brodkin (8):
      west: openocd: Allow to specify FTDI instance by its serial number
      board: arc: Enable selection of FTDI instance by its serial number
      runners: opeocd: Allow loading Elf-files
      board: arc: Switch to generic OpenOCD runner
      board: arc: hsdk: Initialize core0 in the end
      board: arc: emsdp: Fix JTAG TAP id 0x200444b1 -> 0x200044b1
      board: arc: Disable gap filling in output .hex
      boards: arc: Load Elf with OpenOCD by default

Anas Nashif (6):
      ci: add license check using github actions
      CODEOWNERS: add owner for .github/
      ci: do not run Documentation/License for ci-tools
      cmake: report extra version (rcX)
      test: object_tracing: account for pre-existing threads
      ci: support license check with topic branch with v3

Andrei Emeltchenko (1):
      dts: Move IPM bindings to the right place

Andrei Gansari (1):
      drivers: eth_mcux phy_setup moved after SMI init

Andrew Boie (8):
      x86: fix large Kconfig values on 64-bit
      samples: arc_secure_services: fix sample.yaml
      tests: syscalls: exclude one case on nsim_sem
      tests: syscalls: add torture test
      revert: ""program local APIC LDR register for...""
      revert: ""change IO APIC to logical destination...""
      samples: pi: fix sample.yaml
      kernel: remove problematic pend() assertion

Andries Kruithof (3):
      Bluetooth: controller: split: fix HCI read_max_data_len
      Bluetooth: controller: split: fix LL/CON/MAS/BV-74-C tx timing
      manifest: EDTT: update manifest to point to new revision in EDTT

Andrzej Głąbek (1):
      samples: fade_led: Fix definition of PWM_FLAGS

Andrzej Puzdrowski (2):
      settings: Include entire API into doxygen
      manifest: mcuboot 1.5.0 revision

Andy Ross (1):
      kernel/thread: Don't clobber arch initialization of switch_handle

Armando Visconti (2):
      driver/sensor: lis3mdl: Fix DRDY interrupt
      boards/shields: x_nucleo_iks01a1: connect irq to DRDY pin

Aurelien Jarno (3):
      usb: cdc_acm: TX memory and performance improvements
      usb: cdc_acm: do not call usb_transfer if there is nothing to transfer
      usb: cdc_acm: do not send ZLP for IN transactions

Carles Cufi (28):
      boards: bbc_microbit: Set log buffer size conditionally
      boards: em_starterkit: Enable ARC_HAS_SECURE in normal image
      boards: esp32: Conditionally enable RNG
      boards: frdm_kw41z: Override ADC vref choice properly
      boards: mps2_an385: Conditionally set ztest stack size
      boards: odroid_go: Conditionally enable RNG
      boards: olimex_stm32_e407: Remove stale entropy Kconfig settings
      boards: olimex_stm32_p405: Remove stale entropy Kconfig settings
      boards: qemu_cortex_m0: Set log buffer size conditionally
      boards: qemu_xtensa: Conditionally set IPM console stack size
      boards: sam4s_xplained: Enable generic GPIO
      boards: xt-sim*: Conditionally set IPM console stack size
      boards: xt-sim_intel_s1000: Fix board definition
      tests: bluetooth: tester: Clean up configuration
      tests: bluetooth: tester: Add a config for the 52840 DK
      Bluetooth: tests: tester: Add an init log message
      Bluetooth: tester: Add logging in core handlers
      Bluetooth: tester: Add abundant logging in GAP
      Bluetooth: tester: Update GAP cmds/evts to the latest BTP spec
      Bluetooth: tester: Update GATT cmds/evts to the latest BTP spec
      Bluetooth: tester: Tweak nRF52840 config
      Bluetooth: tester: Fix packet field name
      Bluetooth: tester: Ensure the app is bondable by default
      Bluetooth: tester: Disable forcing of MITM
      Bluetooth: tester: Implement the GAP_SET_BONDABLE command
      Bluetooth: tester: Implement the GAP_PASSKEY_CONFIRM command
      Bluetooth: tester: Implement the GAP_SET_MITM command
      Bluetooth: tester: Add missing log_strdup

Carlo Caione (1):
      board: qemu_cortex_a53: Enable default testing

Cristi Caciuloiu (2):
      bluetooth: controller: openisa: encryption and decryption using CAUv3
      bluetooth: controller: openisa: update west.yml to point to HAL

Daniel Leung (2):
      boards: up_squared_adsp: fix mis-used logical operator
      interrupt_controller: dw: fix base address not defined in config

Emil Obalski (1):
      usb: Fix for set/reset endpoints

Erwan Gouriou (5):
      soc: stm32h7: Move PWR init code in soc init function
      drivers/clock_control: stm32: HSE_BYPASS code cleanup
      board: stm32h474i_disco: Small fixes on m4 core
      drivers: interrupt_controller: stm32: Missing break statement
      dts: stm32f3: Remap USB IRQ to avoid conflict with CAN

Francisco Munoz (2):
      boards: mec15xxevb_assy6853: Disable KSCAN to avoid test case issues
      boards: mec1501modular_assy6885: Disable KSCAN to avoid test case issues

George Stefan (2):
      bluetooth: controller: openisa/RV32M1: fix LL scheduling
      boards: riscv: rv32m1_vega: remove no MESH limitation

Gerson Fernando Budke (12):
      samples: net: sockets: echo_client: Add atsamr21_xpro config
      samples: net: sockets: echo_client: Add sam4s_xplained config
      samples: net: sockets: echo_client: Add sam_v71_xult config
      samples: net: sockets: echo_client: Update README.rst
      samples: net: sockets: echo_server: Add atsamr21_xpro config
      samples: net: sockets: echo_server: Add sam4e_xpro config
      samples: net: sockets: echo_server: Add sam_v71_xult config
      samples: net: sockets: echo_server: Update README.rst
      boards: arm: atsamr21_xpro: Add echo server/client link
      soc: arm: atmel: sam4e: Add missing usart dts_fixup
      soc: arm: atmel: sam4e: Fix USART1 soc_pinmap
      boards: arm: sam4e_xpro: Fix SAM-BA link on doc

Glenn Engel (1):
      logging: Fixes c++ compile error using LOG_BACKEND_DEFINE

Göran Weinholt (4):
      drivers: modem: sara-r4: continually signal the modem to power off
      drivers: modem: sara-r4: support for network indication on SARA modems
      drivers: modem: sara-r4: support for 2G on the SARA R412M modem
      drivers: gpio_pca95xx: add missing gpio_utils.h include

Hans Wilmers (2):
      drivers: modem: sara-r4: adjust send and receive lengths
      drivers: modem: sara-r4: fix modem reset

Henrik Brix Andersen (2):
      samples: canbus: canopen: fix python package install instructions
      doc: release-notes-2.2: add EEPROM release notes for v2.2

Inbar Anson Bratspiess (1):
      net: socket: Release fd on failure in accept()

Ioannis Glaropoulos (24):
      kernel: fatal: unlock IRQs in early return points in z_fatal_error
      tests: arch: arm_irq_vector_table: fix test for nRF53-based platforms
      tests: arch: arm_irq_vector_table: minor inline comment updates
      arch: arm: core: aarch32: fix wrong indentation in thread.c
      arch: arm: update file header info for arm/aarch32/exc.h
      arch: aarch32: document exception priority scheme for 32-bit ARM
      arch: aarch32: define macro for PendSV IRQ priority level
      arch: arm: aarch32: cortex-m: introduce offset for stack info start
      arch: arm: cortex-m: move PSPLIM clearing in the relevant function
      arch: arm: cortex-m: fix PSPLIM configuring in context-switch
      arch: arm: userspace: set PSPLIM to guard default stack in SVCall
      arch: arm: userspace: no PSPLIM clearing in z_arm_do_syscall() enter
      arch: arm: userspace: lock swap to set PSP & PSPLIM in syscall return
      arch: arm: aarch32: no PSLIM clearing in z_arm_userspace_enter()
      arch: arm: userspace: lock swap to set PSP, PSPLIM in userspace enter
      arch: arm: mpu: protect RNR when reading RBAR, RASR in ARMv7-M driver
      tests: arch: arm: add test-suite to verify syscall internals
      doc: release notes: change kernel to RTOS
      doc: release: v2.2.0 release notes for ARM architecture
      doc: release: move CC2650 removal to Boards' section
      doc: release notes: add list of ARM boards
      doc: release notes: list of ARM SoCs added during v2.2 release cycle
      boards: arm: silabs_exx32: correct Kconfig option prompt
      doc: release notes: add missing ARM Board in v2.2 release notes

Joakim Andersson (17):
      Bluetooth: HCI: Fix size of evt_type parameter
      Bluetooth: host: Fix scanner using wrong identity to resolve peer
      Bluetooth: host: Fix handling of scan start failed
      Bluetooth: host: Rename scan recv callback info struct
      Bluetooth: GATT: Fix gatt indicate using wrong pointer for attribute
      Bluetooth: EDTT: Remove use of deprecated defines
      Bluetooth: EDTT: Replace printk with logging
      Bluetooth: EDTT: Enable disabled tests
      Bluetooth: EDTT: Remove ncmd and opcode from EDTT command response
      Bluetooth: GATT: Document settings_load and service register requirement
      Bluetooth: GATT: Fix invalid DB hast written to settings storage
      Bluetooth: test: Delay SMP pairing distribution phase when testing
      Bluetooth: host: Rename acl context id to index
      Bluetooth: host: Fix missing connection id checks
      Bluetooth: host: Document bt_conn_unref responsibility of caller
      Bluetooth: samples: central_hr: Move connected callback
      Bluetooth: samples: Unref conn object on create connection timeout

Johan Hedberg (1):
      release: Zephyr 2.2.0-rc2

Johann Fischer (2):
      boards: pca10056: fix pin properties for spi2 node
      usb: loopback: re-trigger usb_write after interface configuration

Jukka Rissanen (11):
      drivers: modem: gsm: Add context to DEVICE_INIT()
      drivers: modem: gsm: Add misc fixes like line ending char set
      drivers: modem: gsm: Add setting of MCC number
      drivers: modem: gsm: Command handlers should return value
      sample: net: gsm_modem: Add sample.yaml file
      net: stats: Add RX time statistics for packet sockets
      net: ppp: ipcp: Remove dead code
      doc: net: Add networking changes to 2.2 release note
      doc: release-note: Move CANBUS to own chapter
      samples: net: gsm_modem: Add README file
      doc: net: Add information about GSM modem support

Kamil Piszczek (1):
      bluetooth: host: fix RPMsg driver headroom configuration

Krzysztof Chruscinski (1):
      debug: stack: Add missing log_strdup

Kumar Gala (12):
      doc: Add reference in toplevel README.rst to install_py_requirements
      scripts/requirements: Remove unused packages
      github: Update doc build action
      github: Add GH workflow to build daily docs and docs on release
      github: Fix daily/release doc publish workflow
      ci: Bump to SDK 0.11.2 and CI image 0.11.4
      github: Add debug to try diagnose workflow failure
      github: For now limit doc publish to master
      github: add more debug to see why aws sync is failing
      Revert ""github: For now limit doc publish to master""
      github: doc-publish: remove debug flag
      drivers: spi: sifive: Fix comment to match ifdef

Luiz Augusto von Dentz (8):
      Bluetooth: L2CAP: Fix not queueing in case there are no credits
      Bluetooth: SMP: Fix failing to pass SM/MAS/PROT/BV-01-C
      Bluetooth: GATT: Move functions related to bt_gatt_clear
      Bluetooth: GATT: Fix not clearing stored data when unpairing
      Bluetooth: GATT: Fix not clearing SC when disconnecting
      Bluetooth: Setting: Make bt_settings_encode_key take a const address
      kernel: work: Return error if timeout cannot be aborted
      tests: work_q: Add tests for resubmit from handler

Maksim Masalski (1):
      tests: remove duplicate names for tests

Martí Bolívar (17):
      doc: report west version when it is found
      scripts: zephyr_module: hack to match west 0.7 output
      dts: fix up type comments in binding-template.yaml
      doc: remove 'Creating redirect:' build output
      cmake/flash: persist python runners state in YAML
      cmake/flash: fix obsolete help text for missing west
      scripts: west_commands: fix argument handling with runners.yaml
      scripts: fix west sign when ZEPHYR_BASE is unset
      doc: split devicetree docs into multiple pages
      doc: dts: clean up introduction
      doc: dts: add design goals defining the scope of DT
      doc: dts: pacify checkpatch in macros.rst
      doc: dts/bindings.rst improvements
      doc: dts/intro.rst improvements
      doc: dts/macros.rst improvements
      doc: dts/howtos.rst tweaks
      cmake: flash: three runners.yaml fixes

Maureen Helm (1):
      tests: counter: Extend counter_basic_api timeout

Michael Scott (30):
      drivers: modem: socket: allow partial packet reads
      drivers: modem: socket: introduce locking
      drivers: modem: socket: add wait_data and data_ready functions
      drivers: modem: socket: reset is_polled in modem_socket_put()
      drivers: modem: socket: add modem_socket_next_packet_size
      drivers: modem: socket: add is_connected field to modem_socket
      drivers: modem: cmd_handler: cleanup parse_params()
      drivers: modem: cmd_handler: save 1 char for NUL in match_buf
      drivers: modem: cmd_handler: remove extra comment
      drivers: modem: cmd_handler: fix findcrlf() indentation
      drivers: modem: sara-r4: return send bytes from send_socket_data
      drivers: modem: sara-r4: space for NUL in buffer is optional
      drivers: modem: sara-r4: dont unblock on sockread
      drivers: modem: sara-r4: cleanup offload_recvfrom timeout
      drivers: modem: sara-r4: remove interface up / down
      drivers: modem: sara-r4: add offloaded DNS handling
      drivers: modem: sara-r4: make room for NUL in match_buf
      drivers: modem: sara-r4: use 120s connection timeout
      drivers: modem: sara-r4: manage sock->is_connected
      drivers: modem: sara-r4: use new socket functions
      drivers: modem: sara-r4: fix error text in net_offload_dummy_get
      drivers: modem: sara-r4: handle read limits
      drivers: modem: sara-r4: update functions to return POSIX values
      boards/shields: sparkfun_sara_r4: enable SARA_R4_NET_STATUS
      drivers: modem: cmd_handler: honor num of params in parse_params
      drivers: modem: cmd_handler: add return value to modem commands
      drivers: modem: sara-r4: disable hex mode for binary data
      drivers: modem: sara-r4: use +USO[RF|RD] based on proto
      drivers: modem: sara-r4: fix APN setting for U2 modem
      net: config: init: fix NET_NATIVE=n behavior

Nathaniel Graff (1):
      doc: release notes: RISC-V release notes for 2.2

Nicholas Lowell (1):
      posix: fix unistd.h extern C brace mismatch

Nick Ward (1):
      lib: posix: clock: Fix nanosecond rollover logic

Oane Kingma (2):
      dts/arm/silabs: EFM32GG11B: correct flash erase block size
      boards/arm/efm32gg_stk3701a: correct NVS example storage partition size

Peter A. Bigot (1):
      devicetree: add nexus map for Arduino analog input header

Peter Bigot (8):
      tests: drivers: gpio_basic_api: fix deprecated API level test
      tests: drivers: gpio_basic_api: add README
      tests: gpio_basic_api: fix filter to exclude boards without overlay
      sensors: grove_temperature: convert to devicetree bindings
      sensors: grove_light: convert to devicetree bindings
      drivers: gpio_sx1509b: correct handling of initialized output
      gpio: restore missing legacy devicetree direction flag
      kernel: work_q: fix return value in non-error case

Piotr Mienkowski (4):
      doc: release-notes-2.2: Update GPIO API section
      boards: remove outdated documentation about partition linking
      doc: Update ""Linking Zephyr Within a Partition"" section
      doc: update BOOTLOADER_MCUBOOT description

Ravi kumar Veeramally (3):
      net: pkt: Restore pkt cursor after cloning
      tests: net: Simple test for net_pkt clone
      net: ppp: Fix integer handling coverity issue

Robert Lubos (2):
      samples: net: telnet: Add BLE IPSP overlay config
      shell: telnet: Replace timer with a delayed work

Romit Dasgupta (1):
      boards: arm: Replaces a non-working web link

Rubin Gerritsen (1):
      bluetooth: Add decoding for BLE 5.2 version string

Sebastian Bøe (1):
      cmake: Fix zephyr-sdk's with a single toolchain

Stephanos Ioannidis (18):
      arch: arm: aarch64: linker.ld: Remove redundant text section offset
      arch: arm: Fix incorrect Cortex-R interrupt state control logic.
      tests: sleep: Add tick margin definition
      tests: sleep: Increase tick margin for Xilinx QEMU
      boards: qemu_cortex_r5: Remove ignore tags for working tests
      CODEOWNERS: Add Cortex-R arch codeowner
      CODEOWNERS: Add ARM GIC interrupt controller driver codeowner
      CODEOWNERS: Add Xilinx ZynqMP platform codeowner
      arch: arm: aarch64: linker.ld: Clean-up
      arch: arm: aarch64: linker.ld: Fix ROM section names
      arch: arm: aarch64: Fix _vector_end symbol placement
      arch: arm: cortex_r: linker.ld: Clean-up
      arch: arm: cortex_r: linker.ld: Fix ROM section names
      tests: lib: mem_alloc: Fix incorrect newlib variant usage
      tests: lib: mem_alloc: Increase malloc heap size for newlib test
      sanitycheck: Update section names for memory size calculation
      doc: release: Add ARM GIC release notes
      doc: release: Add ARM Cortex-R release notes

Stephen Pliaskin (1):
      Bluetooth: Mesh: typo in condition in comp_add_elem of cfg_srv

Torsten Rasmussen (1):
      cmake: Invoke west topdir only with version >= 0.7.1

Trond Einar Snekvik (1):
      Bluetooth: Mesh: GATT Proxy Spec 1.0.1 changes

Ulf Magnusson (5):
      kconfig: Clarify Kconfig.defconfig explanation in Kconfig.zephyr
      kconfig: rv32m1: Remove redundant ENTROPY_GENERATOR dependency
      kconfig: Replace defconfig singe-symbol 'if's with 'depends on'
      kconfig: Replace non-defconfig single-symbol 'if's with 'depends on'
      doc: dts: Add lots of documentation for generated macros

Vinayak Kariappa Chettimada (8):
      Bluetooth: controller: split: Fix PHY update tx pause
      Bluetooth: controller: split: Fix regression in privacy port
      Bluetooth: controller: split: Fix assert on invalid packet sequence
      Bluetooth: controller: split: nRF: Use ticker compat mode as default
      Bluetooth: controller: Fix BT_TICKER_EXT dependency
      Bluetooth: controller: split: Fix radio in use during flash op
      Bluetooth: controller: Fix ticker resolve collision implementation
      Bluetooth: controller: split: Fix assert on DLE procedure stall

Vincent Wan (3):
      west.yml: hal_ti: fix SemaphoreP_create/construct to initialize count
      drivers: gpio_cc32xx: avoid unnecessarily disabling interrupts in isr
      drivers: gpio_cc32xx: disable interrupts before changing interrupt type

Wayne Ren (2):
      arch: arc: fix the bug of irq_offload
      arch: arc: fix the bug that idle thread blocks other threads

Yihui Xiong (1):
      usb: Set USB version to 2.1 when using BOS

Zide Chen (2):
      interrupt_controller: change IO APIC to logical destination mode
      interrupt_controller: program local APIC LDR register for xAPIC
```
",59771425
1512,False,True,2020-02-08T18:30:07Z,2020-02-08T18:35:01Z,"```
Adam Kondraciuk (1):
      drivers: flash: nrfx: Change write_block_size parameter to 32-bits

Ahmed Hussein (1):
      Bluetooth: Mesh: Enable Segmented Control Messages

Alberto Escolar Piedras (16):
      nrf52_bsim: Use HW models from new west module
      samples & tests: Correct main() type
      samples/userspace/prod_consumer: Fix main() type
      POSIX arch: Fix C++ main() linkage issue
      tests filesystem.fat.api: Do not run on native_posix_64
      manifest: Add EDTT to manifest
      Bluetooth: tests: Add edtt_ble_test_app
      tests: bsim_bt: Also compile edtt_ble_test_app in CI
      tests: bsim_bt: Add EDTT based BT stack tests
      CODEOWNERS: Add aescolar to tests/bluetooth/bsim_bt/
      manifest: EDTT: Update to latest version
      tests: bluetooth: EDDT tests: Disable inquiry HCI tests
      run_ci.sh: Set EDTT_PATH
      ci: Run also BT edtt_ble_test_app tests
      doc: getting_started: Add missing native_posix dependencies
      native_posix: timer: Improve arch_busy_wait() doc

Alex Porosanu (4):
      bluetooth: controller: refactor CMake related files
      samples: bluetooth: hci_uart: add VEGABoard configuration
      Bluetooth: controller: split: openisa: fix missing include
      samples: bluetooth: add missing VEGABoard overlays

Alexander Wachter (8):
      can: Introduce can-primary alias
      net: icmpv6: fix add own IP addr to nbr cache
      canopen: CO_driver: Fix Coverity issues (NULL deref, dead code)
      can: isotp: Add ISO-TP library
      tests: subsys: can: Add tests for iso tp
      doc: networking: Add ISO-TP documentation
      samples: canbus: isotp: Add sample code for the ISO-TP lib
      drivers: lora: build with newlib

Alexey Brodkin (1):
      kconfig: Make BUILD_NO_GAP_FILL independent

Anas Nashif (126):
      sanitycheck: parse testcase names correctly
      tests: fix test identifiers
      sanitycheck: output a sort list of tests
      tests: samples: portability: fix test tags and identifiers
      sanitycheck: print testsuite tree
      tests: kernel: split pending testing
      tests: spi: fix test function name
      tests: document test identifier rules
      release: post release patch level = 99
      release: fix sanitycheck release file
      sanitycheck: enable size tracking with size related options
      tests: fifo: assert of NULL from k_fifo_get
      tests: obj tracing: fix counting
      kernel: kernel.h doxygen cleanup
      sanitycheck: export compile commands on --cmake-only
      soc: mec1501: fix build failure
      modules: support tests/samples/boards in modules
      doc: modules: document out-of-tree samples/tests
      ci: run sanitycheck on tests and samples
      sanitycheck: move hardware map generation out of main
      sanitycheck: handle flashing issues with --device-testing
      requirements: require tabulate and anytree modules for sanitycheck
      sanitycheck: output hardware registery after scanning
      sanitycheck: fix typo
      saniytcheck: fixed pylint issues
      sanitycheck: move job setting to main()
      sanitycheck: use outdir from TS instance
      sanitycheck: cleanup setting binary options
      sanitycheck: use logging module for all console output
      sanitycheck: reduce usage of global options
      sanitycheck: reenable --timestamps option with loggging module
      sanitycheck: use logger instead of print
      sanitycheck: consistent output from logger
      sanitycheck: move global info() into Testsuite class
      sanitycheck: all output from flasher goes to logger.debug
      sanitycheck: do not use gloabl options
      sanitycheck: move log_info_* to ProjectBuilder class
      sanitycheck: get rid of more global options
      sanitycheck: remove unused globals
      sanitycheck: pylint issues
      sanitycheck: fix legacy device testing support
      sanitycheck: use colorama module for colors
      sanitycheck: remove commented out code
      sanitycheck: fix reporting of timeouts
      ci: run sanitycheck in verbose mode
      sanitycheck: cleanup hardware map display
      kernel: update SCHED_CPU_MASK Kconfig doc
      sanitycheck: support pre/post flash scripts
      sanitycheck: define schema for hardware map
      samples: sensor: fix test identifier
      kernel: use 'thread' for thread  variable consistently
      kernel: msgq: rename parameters q->msgq
      sanitycheck: add Digilent to device discovery
      sanitycheck: use Unknown instead of N/A for fail reason
      sanitycheck: when timing out in handler, show correct log file
      sanitycheck: log errors when executing binaries
      sanitycheck: run pre/post script using dedicated function
      sanitycheck: more debug messages
      sanitycheck: close pipe file handles
      sanitycheck: report overflow on SRAM overflow
      sanitycheck: additional scripting hook after flashing
      arc: remove old macro used for event logger
      tracing: remove duplicate tracing of thread creation
      tracing: better positioning of tracing points
      tracing: ctf: fix arguments to ctf_top_thread_info
      sanitycheck: do not log stderr from BinaryHandler
      samples: remove i2c scanner
      i2c: add i2c shell with scan cmd
      sensor: tmp007: fix read and use i2c_burst_read
      sanitycheck: set extra_args from command line
      x86: qemu_x86_64: workaround SMP issues in x86
      cmake: print version to stdout, not stderr
      sanitycheck: support runtime artifact cleanup
      ci: do not display timestamps
      base: add error checking macros
      kernel: mutex: add error checking
      kernel: semaphore: k_sem_init error checking
      kernel: semaphore: optimize code
      kernel: pipe: runtime error checking
      kernel: work_q: error handling
      kernel: mem_slab: error handling
      kernel: msgq: error handling
      kernel: stack: error handling
      kernel: queue: runtime error handling
      tests: test k_sem_init()
      ci: use latest docker (0.11.0)
      sanitycheck: support excluding platforms
      sanitycheck: fix reporting of timeouts
      net: remove sample implementing NATS
      sanitycheck: change distribution of tests per set
      samples: drivers: fix build of spi_fujitsu_fram sample
      mec1501modular: allow building on macOS
      samples: remove extra colon from test identifier
      samples: shared_mem: exclude qemu_x86_64
      kernel: thread: fix string for _THREAD_PRESTART
      CODEOWNERS: add @nashif for docs
      sanitycheck: minor comment and style cleanup
      sanitycheck: show which threads are stuck
      coverage: do not dump coverage data by default
      usb: dw: fix undefined callback variable
      intel_s1000: various fixes for build errors
      intel_s1000_crb: we not can build this with zephyr sdk
      samples: net: set CONFIG_NET_BUF_RX_COUNT to 64
      doc: update gsg with sdk v0.11.1
      doc: fix links to www.zephyrproject.org
      west.yml: hal_nxp: update to latest state of module
      sanitycheck: point to correct gcov path
      requirements: require gcovr >= 4.2
      doc: add a note about required lcov version
      tracing: move tracing under subsys/
      tracing: move headers under include/tracing
      tests: tracing: move tracing under tests/subsys
      doc: fixed path for ctf metadata
      tracing: enable TRACING_ISR by default
      tests: tracing: cleanup configuration
      tracing: TRACING implies THREAD_NAME, STACK_INFO
      tests: tracing: remove implied config options
      tracing: Kconfig cleanup and reorg
      tracing: remove useless conditional in cmake file
      tracing: move systemview into its own folder
      tracing: cleanup and split segger/rtt configuration options
      tracing: move systemview headers under sysview/
      tracing: move ctf headers under ctf/
      tracing: move cpu stats to tracing formatting choice in Kconfig
      tracing: avoid building tracing code when not applicable
      CODEOWNERS: adapt for debug and tracing

Andrei Emeltchenko (32):
      drivers: ipm: Cleanup IPM Kconfig
      ipm: Correct IPM API error codes
      tests: logging: Fix build errors
      tests: logging: Remove unneeded excludes
      samples: wpan_serial: Allow to use other 15.4 devices
      samples: wpan_serial: Create cc2520 overlay
      samples: wpan_serial: Update README
      samples: wpan_serial: Take into account bytes written
      samples: wpan_serial: Use logger hexdump helper
      samples: wpan_serial: Refactor wpan_serial
      samples: wpan_serial: Allow to build for more boards
      samples: wpanusb: Allow to build for general boards also
      tests: Remove posix exclude
      tests: Remove posix arch_exclude for libcxx
      doc: native_posix: Add mention about virtual USB
      usb: usb_device: Remove old extensive logs
      usb: trivial: Correct coding style
      tests: usb: Use hexdump logger helper for bos test
      usb: Fix usb tests reporting error
      tests: usb: General cleanup
      usb: netusb: Set interface NET_IF_NO_AUTO_START
      arch: xtensa: Use reset-vector.S in booloader code
      boards: up_squared_adsp: Add logging frontend
      log: Add Intel ADSP logging backend
      west: Add signing support using the rimage tool from SOF
      doc: up_squared_adsp: Add documentation for the board
      boards: up_squared_adsp: Remove ignore_tag
      boards: up_squared_adsp: Update logging frontend
      boards: up_squared_adsp: Update logging tools
      soc: intel_apl_adsp: Fix memory corruption
      soc: intel_apl_adsp: Remove LOG_IMMEDIATE default
      logging: log_backend_adsp: Cleanup logging

Andrei Gansari (19):
      soc: enable secure mode for LPC55xxx
      drivers: eth_mcux enable checksum and autonegotiation
      dts: remove artificial include
      dts: lpc55s69 all flash regions
      modules: HAS_MCUX_IAP config
      dts: nxp,lpc-iap.yaml
      dts: lpc55s6x flash controller add
      soc: enables flash on LPC55xxx SoCs
      drivers: soc_flash_mcux enabled for LPC
      gpio: Update mcux lpc driver to use new gpio api
      tests: gpio_basic_api fix bad message
      tests: add LPC boards to gpio_basic_api
      tests: lpc devices test pins enablement
      drivers: gpio_mcux_lpc GPIO interrupts
      cmake: allow boards to have extra cmake parametes
      boards: suppress dtc simple_bus_reg warning on LPC
      cmake: pass extra dtc flags to python scripts
      scripts: simple-bus warning suppression
      doc: device tree - document pre_dt_board.cmake

Andrei Stoica (4):
      Bluetooth: controller: enable dynamic TXP over LL_SPLIT arch (#17731)
      Bluetooth: controller: enable dynamic TXP over LEGACY arch (#17731)
      docs: Bluetooth: HCI_VS: Updated docs on VS HCI commands
      Bluetooth: samples: Added dynamic Tx power ctrl sample (#17731)

Andrew Boie (77):
      x86: don't use privilege stack areas as a guard
      ztest: fix ztest_1cpu_user_unit_test()
      kernel: fix k_mem_partition data types
      kernel: use uintptr_t for kobject data
      lib: os: don't cast mutex pointers to u32_t
      kernel: fix some bad casts in userspace.c
      kernel: fix 64-bit for kobject generation
      kernel: k_object key pointer should be void *
      kernel: don't use u32_t for data sizes
      kernel: fix 64-bit issues in syscall_handler.h
      tests: mem_protect: don't cast pointers to u32_t
      samples: shared_mem: 64-bit fixes
      tests: adjust resource pool sizes for 64-bit
      tests: mem_protect: fix corruption issue
      tests: userspace: fix 64-bit issues
      kernel: use size_t for thread stack sizes
      x86: improve exception debugging
      x86: up-level QEMU arch_system_halt()
      x86: fix stack traces on x86_64
      drivers: watchdog: add system calls
      tests: queue: fix SMP issue
      tests: mem_protect: fix cast warning
      tests: timing_info: use only 1 cpu for userspace
      tests: thread_init: disable SMP
      ztest: do teardown in main thread
      lib: os: make snprintk fns generally available
      sanitycheck: clean up TTY on exit
      sanitycheck: fix early messages
      sanitycheck: allow outdir to be overwritten
      sanitycheck: use abs path for logs
      drivers: watchdog: fix system call handlers build
      irq: add note about irq_lock/unlock access
      userspace: fix incorrect linker routing
      kernel: show what spinlock was used incorrectly
      tests: userspace: use 1cpu for some cases
      tests: futex: use one cpu
      tests: mem_protect: use one cpu
      tests: dynamic_thread: disable on x86
      samples: drivers: crypto: fix test failure
      tests: userspace: work around x86_64 bug
      x86: enable recoverable exceptions on 64-bit
      x86: add MSR defintions needed for syscalls
      x86: use BIT() macros for cr0/cr4 bits
      x86: use MSRs for %gs
      x86: add GDT descriptors for user mode
      x86: implement 64-bit exception recovery logic
      x86: add support for 64-bit thread ptables
      x86: expose APIs for dumping MMU entry flags
      x86: optimize locations of psp and thread ptables
      x86: up-level some user mode functions
      x86: add linker directives for 64-bit user mode
      x86: add system call functions for 64-bit
      x86: up-level speculative attack mitigations
      x86: add CONFIG_X86_USERSPACE for Intel64
      x86: fix 64-bit issues in thread_stack.h
      x86: don't use privilege stack areas as a guard
      x86: implement hw-based oops for both variants
      x86: remove retpoline code
      x86: implement user mode on 64-bit
      x86: mitigate swapgs Spectre V1 attacks
      x86: disable usermode on 64-bit unless no meltdown
      kernel: cleanup and formally define CPU start fn
      x86: move some per-cpu initialization to C
      sanitycheck: improve summary output
      tests: userspace: test syscall irq context
      drivers: serial: add async API system calls
      tests: uart_async_api: run in user mode
      x86: implement kernel page table isolation
      samples: shared_mem: fix exception printouts
      mempool: use k_malloc heap for ISR allocations
      codeowners: add myself as owning user mode samples
      debug: openocd: fix x86_64 build
      kernel: move timing externs to public header
      drivers: loapic_timer: simplify TSC read
      test: static_idt: skip for 64-bit
      kernel: overhaul unused stack measurement
      x86: organize 64-bit ESF

Andries Kruithof (4):
      Bluetooth: controller: Refactor time calculation for LL DLE procedure
      Bluetooth: controller: split: Fix LENGTH_REQ PDU prepare
      Bluetooth: controller: split: Refactor DLE prepare
      Bluetooth: controller: split: Fix DLE preparation routine

Andrzej Głąbek (13):
      drivers: spi_nrfx_spim: Fix handling of extended SPIM configuration (2)
      drivers: spi: nrfx: Move MISO lines pull configuration to DT
      samples: boards: Merge nrf91/ with nrf52/ and rename it to nrf/
      soc: nrf5340: Fix busy waiting on nRF5340 application core
      modules: hal_nordic: Update nrfx to version 2.1.0
      Revert ""soc: nrf5340: Fix busy waiting on nRF5340 application core""
      modules: hal: nordic: Fix nrfx log messages
      samples/subsys/usb/hid-mouse: Convert to use the new GPIO API
      boards: nrf52840_pca10090: Convert to use the new GPIO API
      boards: nrf52833_pca10100: Update to use the new GPIO API
      boards: nrf5340_dk_nrf5340: Update to use the new GPIO API
      boards: actinius_icarus: Update to use the new GPIO API
      boards: degu_evk: Update to use the new GPIO API

Andrzej Puzdrowski (31):
      dfu/img_util: fix flash_sector_from_off
      tests/subsys/dfu/img_util: progressively erase testcase
      drivers/flash: protection API clarification
      drivers/flash: remove NRF flash protection emulation
      manifest: add reference to mcuboot project
      drivers/flash: group nRF sub-option under menuconfig
      tests/subsys/settings: remove nffs related testsuite
      tests/lib/gui/lvgl: use littlefs
      samples/subsys/mgmt/mcumgr/smp_svr: use LitleFS as FS back-end
      samples/subsys/shell/fs: remove nffs configuration
      tests/subsys/settings/functional/file: use littlefs
      tests/subsys/fs: disable multi-fs testsuite
      tests/fs: remove nffs testsuite
      fs: remove NFFS subsystem
      manifest: remove nffs reference
      boards: remove NFFS mentions from comments/doc
      doc: cleanup after NFFS removal
      tests/subsys/fs/multi-fs: suppres kconfig issue
      doc/releases: NFFS removal record
      drivers/flash/flash_simulator: erase posix flash in initialization
      doc/release: nrf flash driver change record
      samples/subsys: add sample for the settings
      doc/subsys/settings: improve settings API doc
      samples/subsys/settings: add the readme doc
      samples/subsys/settings: add test harness
      samples/subsys/settings: FS and native_posix support
      samples/subsys/settings: add nrf targets supports
      manifest: mcuboot upgrade
      doc: include settings RT API
      samples/subsys/settings: corrected doc on how to build and run
      manifest: mcuboot version with fixed USB recovery

Andy Ross (23):
      kernel/sched: Move thread suspend and abort under the scheduler lock
      Revert ""x86: qemu_x86_64: workaround SMP issues in x86""
      kernel: arch: Clarify output switch handle requirements in arch_switch
      kernel/sched: Correct IPI usage
      kernel/sched: Address thread abort termination delay issue on SMP
      kernel/swap: Add SMP ""wait for switch"" synchronization
      kernel/queue: Fix SMP race
      samples/userspace/shared_mem: Fix SMP race
      subsys/logging: Fix xtensa simcall assembly
      arch/x86_64: Poison instruction pointer of running threads
      kernel/sem: Fix SMP race
      samples/userspace/shared_mem: Add volatile to interthread data
      tests/mem_protect/stackprot: Need a delay under SMP
      kernel/sched: Properly synchronize pend()
      kernel/sched: Put k_thread_start() under a single lock
      kernel/sched: Re-fix SMP wait-for-switch on interrupt exit
      kernel/sched: Re-add IPI calls on k_wakeup() and k_thread_priority_set()
      samples: Add MetaIRQ dispatch sample
      kernel/smp: arch/x86_64: Address race with CPU migration
      arch/x86_64: Save RFLAGS during arch_switch()
      tests/kernel/smp: current CPU is not atomic
      kernel/fatal: Fatal errors must not be preempted
      kernel/userspace: Move syscall_frame field to thread struct

Antony Pavlov (7):
      boards: arm: nucleo_f030r8: use smaller board image
      boards/arm: dts: fix formatting
      boards: stm32f030_demo: Set pinmux.c compilation under switch CONFIG_PINMUX
      boards: stm32f030_demo: reduce kernel memory usage
      boards: arm: nucleo_f030r8: doc: fix st.com refs
      soc: arm: stm32l1: Add STM32L152Xe stuff
      boards: arm: add initial support for NUCLEO-L152RE board

Armando Visconti (12):
      drivers/i2c: Kconfig.stm32: Enable interrupts usage by default
      sample/board: 96b_argonkey: update to use new GPIO API
      driver/sensor: lis2dw12: update to use new GPIO API
      driver/sensor: lps22hh: update to use new GPIO API
      driver/sensor: lsm6dso: update to use new GPIO API
      driver/sensor: iis3dhhc: update to use new GPIO API
      sample/board: sensortile_box: update to use new GPIO API
      board/shields: x-nucleo-iks01a3: fix drdy/irq flags in overlay files
      driver/sensor: lis3mdl: update to use new GPIO API
      driver/sensor: stts751: update to use new GPIO API
      driver/sensor: lis2mdl: update to use new GPIO API
      driver/sensor: lis2ds12: update to use new GPIO API

Arnaud Pouliquen (2):
      CODEOWNERS: update arnop2 ownership name
      checkpatch: suppress mailback option in conf file

Asger Munk Nielsen (4):
      Bluetooth: controller: SW deferred privacy
      Bluetooth: controller: SW deferred privacy build test
      Bluetooth: controller: SW deferred privacy IRK size define
      Bluetooth: Controller: Add unit test of SW privacy feature

Audun Korneliussen (2):
      drivers: uart: Enable rx byte counting timer only in active power state
      subsys/fs/fatfs: Add kconfig option for FAT LFN (Long Filename)

Aurelien Jarno (5):
      samples: mesh_badge: fix unknown sensor status message
      samples: mesh_badge: fix property ID
      samples: mesh_badge: fix temperature format
      Bluetooth: Mesh: fix next_period computation
      Bluetooth: Mesh: Fix PreviousAddress endianess in Friend Request

Barry Solomon (1):
      usb: make usb descriptor power options configurable

Benjamin Valentin (16):
      i2c: sam0: Add support for SAME54
      usb: sam0: Support more then one USB IRQ
      usb: sam0: Add support for MCLK
      usb: sam0: use TRIM registers when available
      spi: sam0: Add support for SAME54
      tests: spi_loopback: Add atsame54_xpro configuration
      timer: sam0_rtc_timer: Add support for SAME54
      flash: sam0: Add support for SAME54
      flash: sam0: Define LOCK_REGIONS in dts
      drivers: entropy: sam: Add support for sam0
      soc: atmel_sam0: add SAM TRNG to DTS
      soc: atmel_sam0: update dts_fixup.h for TRNG
      boards: atsame54_xpro: Add SAM E54 Xplained Pro Evaluation Kit
      dts: atmel_sam0: fix location of flash and sram blocks
      soc: atmel_sam0: remove obsolete include
      soc: atmel_sam0: remove CONFIG_ENTROPY_NAME from dts_fixup.h

Benoit Leforestier (1):
      Driver: Flash STM32: Don't use semaphore if multithreading isn't defined

Brett Witherspoon (3):
      dts: bindings: add GPIO binding for BoosterPack header
      boards: cc1352r1_launchxl / cc26x2r1_launchxl: add BoosterPack connector
      boards: shields: add TI BOOSTXL-ULPSENSE

Brooks Prumo (3):
      include: Fixes #1205, C++ usage of sensor.h
      include: dfu: Add extern ""C"" in mcuboot.h
      tests: Remove erroneous # before extern ""C""

Carles Cufi (26):
      doc: relnotes: Add sections for Stable API Changes
      doc: API: Document the modification of stable APIs
      shell: Remove deprecated macros
      Bluetooth: Always use full path to hci_driver.h
      dts: bindings: qspi-nor: Replace tabs with spaces
      boards: arm: degu_evk: Fix default configuration
      boards: arm: atsamr21_xpro: Fix default configuration
      drivers: ieee802154: rf2xx: Enable sub-GHz L2 conditionally
      boards: bbc_microbit: Convert GPIO flags to new API
      samples: micro:bit: Convert sound sample to new GPIO API
      samples: micro:bit: Convert pong sample to new GPIO API
      samples: micro:bit: Convert line_follower_robot sample to new GPIO API
      samples: net: lwm2m_client: Convert to new GPIO API
      samples: led_apa102c_bitbang: Convert to new GPIO API
      samples: led_apa102c_bitbang: Clean conditional expression
      samples: lcd_hd44780: Convert to new GPIO API
      tests: bluetooth: mesh: Convert to new GPIO API
      drivers: display: mb_display: Convert to the new GPIO API
      boards: reel_board: Use the new GPIO flags in the DT source
      samples: reel_board: mesh_badge: Convert to the new GPIO API
      drivers: modem: ublox-sara-r4: Convert to the new GPIO API
      drivers: modem: wncm14a2a: Convert to the new GPIO API
      samples: nrf: mesh: onoff-app: Convert to the new GPIO API
      samples: nrf: onoff_level_light: Convert to new GPIO API
      drivers: audio: tlv320dac310x: Convert to the new GPIO API
      samples: net: google_iot: Fix logging warnings

Carlo Caione (21):
      interrupt_controller: shared_irq: DT_<COMPAT> is deprecated
      interrupt_controller: gic: Support PPIs
      arch: arm: Move ARM code to AArch32 sub-directory
      arch: arm: Fix header guards
      aarch32: Add header shims to support old file locations
      samples: cmsis_rtos_v1: Grow stack size to the maximum allowed
      drivers: uart_pl011: Enable shared interrupts support
      drivers: timer: Add per-core ARM architected timer
      arch: arm64: Introduce ARM64 (AArch64) architecture
      arch: arm64: Support aarch64-gcc compiler
      tests: testsuite: Add Cortex-A case
      tests: benchmarks: Add ARM64 case
      arch: arm64: Add support for qemu_cortex_a53 board
      arch: arm64: Support zephyr toolchain
      arch: arm64: Support all the ELn
      arch: arm64: Enable tracing
      arch: arm64: Fix logging test
      arch: arm64: Enable config option to switch from EL3 to EL1
      arch: arm64: Dump registers content on fatal error
      arch: arm64: Fix cmsis_rtos tests
      arch: arm64: Enable shared IRQ line for UART

Christian Hirsch (1):
      drivers: counter: fix nRF prescaler overflow

Christian Taedcke (15):
      west: openocd: Add config file dir to search path
      sanitycheck: Add option to use gcovr for coverage
      net: ppp: Reset flag is_ipv6cp_up in ipv6cp_down
      net: ppp: Reset flag is_ipcp_up in ipcp_down
      net: ppp: Enable connection setup for windows
      drivers: spi: Add Gecko SPI driver
      boards: efr32mg_sltb004a: Add support for spi nor flash
      boards: efr32_slwstk6061a: Add support for spi nor flash
      net: if: Add option to set ppp as default network if
      net: ipv6: Set INET6 addr family before routing the rx packet
      net: ipv6: Add routing according to interface prefix
      arm: exx32: Add Silabs EFM32JG12B soc files
      board: efm32pg_stk3402a: Add option to compile for EFM32JG12B
      soc: silabs_exx32: Support all gpio ports on efm32jg and efm32pg
      boards: efr32mg_sltb004a: Enable watchdog

Christopher Friedt (1):
      Bluetooth: controller: define adv channel access address as macro in pdu.h

Daniel Leung (56):
      counter: mchp_xec: update driver for counter tests
      tests: counter_basic_api: fix for counting down counters
      json: fix unnamed fields in initializers for GCC < 4.6
      cmake: extra_flags: fix EXTRA_CPPFLAGS being applied as macros
      logging: fix warning of array subscript having type `char`
      west.yml: add hal_xtensa as a module
      xtensa: add support to build HAL as part of build process
      subsys/random: fix unused value warning
      cmake: xtools: use SoC name in path to xtensa toolchain
      boards: intel_s1000_crb: ignore net/bluetooth for testing
      xtensa: define UINT32_C macro for XCC
      soc: intel_s1000: move XCC fixes into its own directory
      soc: intel_s1000: add dummy atexit() for Clang++
      soc: intel_s1000: provide dummy version of _gettimeofday_r()
      soc: intel_s1000: fix XCC build error when CONFIG_LOG_MINIMAL=y
      soc: intel_s1000: add dummy sys_reboot() for test with XCC
      samples: intel_s1000_crb/audio: fix return for non-void function
      tests: application_development/libxcc: exclude using XCC...
      cmake: ld: use linker prefix for undefined symbols
      toolchain: xcc: use Clang if exists
      boards: intel_s1000_crb/doc: update XCC install instructions
      xtensa: fix atomic_cas reporting value swapped even when not
      dts: arm: mec1501hsz: rename I2C nodes
      i2c: mchp_xec: define driver instaces based on device tree...
      sched: smp: fix thread marked dead but still running
      tests: gpio_basic_api: add overlay for mec15xxevb_assy6853
      boards: arm/mec15xxevb_assy6853: add LEDs in DTS
      drivers: gpio_mchp_xec: update to use new GPIO API
      tests: gpio_basic_api: add board overlay for em_starterkit
      boards: arc/em_starterkit: update DTS to new GPIO API
      boards: arc/emsdp: update DTS to new GPIO API
      drivers: gpio_dw: update to use new GPIO API
      drivers: gpio_pcal9535a: update to use new GPIO API
      drivers: gpio: rename PCAL9535A to PCA95XX
      drivers: gpio_pca95xx: use I2C burst write
      drivers: gpio_pca95xx: roll header file into source file
      drivers: gpio_pca95xx: endianness awareness
      drivers: gpio_pca95xx: update cache after successful write
      drivers: gpio_pca95xx: guard read/write with semaphore
      drivers: gpio_pca95xx: no longer support config by port
      dts: add binding for PCA95xx series I2C-based GPIO expanders
      gpio: pca95xx: convert kconfig to DTS
      drivers: gpio_pca95xx: factor device declaration into macros
      boards: mec15xxevb_assy6853: add DTS for PCA9555
      dts: x86/apollo_lake: update UART and I2C unit address
      gpio: intel_apl: convert to new GPIO API
      x86: apollo_lake: changes GPIO definition in DTS
      samples: gpio: add board overlay for up_squared
      tests: gpio_basic_api: add board overlay for up_squared
      tests: gpio_api_1pin: add board overlay for up_squared
      samples: up_squared/gpio_counter: update to new GPIO API
      tests: intel_s1000_crb: update to new GPIO API
      dts: cpu: add binding for Cadence Tensilica Xtensa LX4 CPU
      boards: up_squared_adsp: provide default memctl in linker script
      boards: up_squared_adsp: provide start address for bootloader
      Revert ""arch: xtensa: Use reset-vector.S in booloader code""

Danny Oerndrup (1):
      spinlock: Make SPIN_VALIDATE a Kconfig option.

David B. Kinder (5):
      doc: remove extra space after nested list
      doc: fix indent issues in release process doc
      doc: tweak search to to understate certain docs
      doc: document python build scripts
      doc: remove documentation reviewer

David D (4):
      drivers: spi: Fixing null-pointer dereference in stm32
      test: drivers: spi: added a test case
      net: pkt: Fixed packet buffer corruption in net_pkt_pull()
      test: net: pkt: Added a test case for net_pkt_pull()

David Leach (2):
      doc: releases: Release notes for v2.2 - initial (empty) draft
      doc: update release tagging procedures

Diego Sueiro (2):
      subsys/shell: Introduce the Sensor Shell Module
      samples/subsys/shell: Introduce Sensor Shell module

Dominik Ermel (10):
      tests: settings: Reducing duplicated code in FS tests
      settings: file: Fix possible success status while failed to write
      settings: Moving initialization code to proper backend sources
      drivers: sensors: qdec_nrfx: Fix compilation after HAL update
      Bluetooth: Selecting ENTROPY_GENERATOR for crypto
      settings: Deprecate base64 in fs backed settings
      tests/fs: NFFS has been replaced with Littlefs in multifs tests
      kconfig: Remove log backend options from MCUMGR configuration
      settings: Reduction of settings_src_register function
      settings: settings_register static table does not need mutex

Dominik Kilian (1):
      debug: tracing: Fix time returned by CPU stats module

Emil Obalski (11):
      usb: Cleanup for multiplied defines
      usb: Rename defines to match present naming convention
      usb: samples: Do not depend remote wakeup on SoCs
      drivers: hwinfo: Depend HWINFO_NRF on all SoCs
      drivers: hwinfo: Use HAL for reading deviceID.
      usb: Add mutex to usb_enable
      usb: samples: Application calling usb_enable by itself
      usb: api: Add user device status callback
      doc: release notes: Update contents for 2.2.0
      usb: hid: Make it possible to specify HID debug level
      usb: audio: Fixed switching to alternate interface

Erik Brockhoff (2):
      Bluetooth: controller: split: ULL filter API modifications
      bluetooth: controller: fixing issue with white list clear

Erik Johnson (2):
      logging: Added explicit cast to u16_t of LOG_CURRENT_MODULE_ID()
      logging: Added explicit casts of buffer in hexdump delegates

Erwan Gouriou (60):
      tests/kernel: timer_api: Enable Test userspace
      samples: lsm6dsl: Add a harness_config
      modules: stm32 hal: Rename USE_STM32_HAL_CRYPT and _CRYPT_EX
      modules: modules: stm32 hal: Provide help section to HAL/LL symbols
      drivers/eeprom: stm32: Enables only for L1 series
      soc: stm32f446 : update default gpio configuration
      boards: nucleo_f746zg: Update reference for user manual
      cmake: make shield list available to Kconfig
      script/Kconfig: kconfig functions: Add shields_list_contains function
      boards: Kconfig: Enable use of shield conditional Kconfig files
      boards/shields: x_nucleo_idb05a1: Move to conditional Kconfig
      boards/shields: Move wnc_m14a2a to conditional Kconfig
      doc/guides: shields: Document possibility to enable several shields
      boards/shields: x_nucleo_iks01ax: move to conditional Kconfig
      boards/shields: waveshare_epaper: Move to conditional Kconfig
      boards/shields: ssd1306: Factorize and move to conditional Kconfig
      boards/shields: sparkfun_sara_r4: Move to conditional Kconfig
      boards/shields: link_board_eth: Move to conditional Kconfig
      boards/shields: link_board_can: Move to conditional Kconfig
      boards/shields: frdm_kw41z: Move to conditional Kconfig
      boards/shields: fdrm_cr20a: Move to conditional Kconfig
      boards/shields: dfrobot_can_bus_v2_0: Move to Kconfig.shield format
      boards/shields: adafruit_2_8_tft_touch_v2: Move to Kconfig.defconfig
      doc/guides: shields: Document shield conditional configuration
      Revert ""spi: stm32: Enable sending 16bits at a time in 8bit mode if possible""
      scripts: requirements: Request version 0.24.0 for pyocd
      boards: nucleo_g071rb: Enable comman line flashing using pyocd
      west.yml: Update hal_stm32 with latest STM32Cube packages
      drivers: flash: stm32: Update SR define
      tests/kernel: timer_api: Remove build_only tickless variant
      boards: nucleo_f207zg: Enable automatic flashing
      drivers/usb/device: stm32: Update due to API change on F0/F3/L0
      dts: stm32: Define stm32l073 as stm32l072 superset
      boards: nucleo_wb55rg: Add openocd support and set to default runner
      west.yml: hal_stm32: stm32 hci lib update
      samples: bluetooth: Add nucleo_wb55rg as test target for peripheral
      samples: bluetooth/peripheral: Fix test variant name
      drivers/flash: stm32: Fix faulty register access
      tests: drivers: counter: counter_basic_api: Fix single_shot_alarm
      board: nucleo_l152re: Limit sysfreq to 16MHz
      drivers/gpio: stm32: Update to new GPIO api
      drivers/gpio: stm32: various clean up
      drivers/gpio: stm32: exti: Clear triggers when not requested
      boards: stm32: Update board definition using new GPIO api
      tests: gpio_basic_api: Enable test on stm32 boards
      boards: stm32: Fix buttons and leds configuration
      boards: stm32h747i_disco: Add arduino connector header
      drivers/interrupt_controller: stm32: Clean set api from unused arg
      drivers/interrup_controller: stm32: stm32_exti_enable could be void
      boards: stm32mp157c_dk2: Add led and button to dts
      tests: gpio_api_1pin: Tune RAM console size for stm32mp157c_dk2
      CODEWONERS: Update for gpio_stm32 driver
      drivers/spi: spi_context.h: Update to new GPIO API
      drivers: sensors: vl53l0x: update to new GPIO API
      drivers/wifi: eswifi: Update to new GPIO API
      drivers: hci: spi: update to new GPIO API
      drivers/gpio: stm32: Align arguments types on few api functions
      samples/bluetooth: hci_spi: convert to new GPIO  API
      boards: stm32: Remove useless CONFIG_BOARD_FOO from _defconfig files
      drivers/adc: stm32: Don't enable ADC instance by default in driver

Evgeniy Didin (1):
      arc: hsdk: Set SRAM_BASE_ADDRESS in defconfig

Fabio Utzig (1):
      dfu: allow MCUBoot configured without scratch

Feng Cheng (1):
      drivers: flash: Add the flash driver of the stm32f1x family

Filip Brozovic (5):
      drivers: i2c: add STM32G0X I2C support
      soc: arm: stm32g0: add hw flow control property for usart1 to dts fixup
      stm32: clock_control: fix APB2 peripheral clock control on stm32g0
      soc: arm: stm32g0: add STM32G031 SoC series
      boards: stm32g0316-disco: add support for the ST STM32G0316-DISCO board

Flavio Ceolin (15):
      syscalls: Remove gen_syscall_header.py
      x86: fatal: Explicitely include syscall header
      syscalls: Remove references to __syscall_inline
      driver: uart: ns16550: Setting default options
      scripts: sanitycheck: Simplify if statement
      west: runners: stm32: Remove unecessary assignment
      driver: uart: ns16550: Simplify drv_cmd function
      tests: tags: Add entropy and random tags
      console: uart: Ifdef an include
      random: entropy: Return error in csrand
      random: rand32_ctr_drbg: Handle error in initialize function
      tests: logging: Add missing header
      testsuite: Ifdef an include
      doc: security: Add hardening tool information
      west.yml: update mbedtls to latest stable release

Francois Ramu (11):
      west.yml: update hal stm32g4xx module
      dts: bindings: dma controller supports mem2mem transfer
      drivers: dma: wrong return type of dma_stm32_width_config function
      driver: dma: update for different dma channels
      driver: dma: split header file differently
      soc: arm: stm32: define the heap size when enabling dma feature
      dts: bindings: dma add support for controller
      soc: arm: st_stm32: add stm32g474 series
      soc: arm: st_stm32: configure stm32g431 series
      boards: stm32: add nucleo board stm32g474re
      soc: arm: stm32g4 disable sleep mode

Frank Li (2):
      boards: mm_swiftio: add board support for SwiftIO
      runners: pyocd: add --tool-opt parameter

François Delawarde (4):
      bluetooth: host: Add flag to prevent client resubscription on reconnect
      settings: Fix settings runtime read callback return value
      bluetooth: host: Fix simultaneous pairings getting the same keys slot
      bluetooth: host: Add workaround for USB HCI controllers

Gerson Fernando Budke (40):
      dts: ieee802154: rf2xx: Add DTS support
      drivers: ieee802154: rf2xx: Add initial driver
      board: atsamr21_xpro: Add at86rf233 dts binding
      board: atsamr21_xpro: Update yaml with ieee802154
      board: atsamr21_xpro: Update config
      drivers: ieee802154: rf2xx: Add GPIO dependency
      CODEOWNERS: Add @nandojve for /drivers/ieee802154/rf2xx
      samples: wpanusb: Add atsamr21_xpro board support
      board: atsamr21_xpro: Update docs
      samples: wpan_serial: Add rf2xx transceiver overlay
      samples: wpan_serial: Fix device binding error msg
      samples: wpan_serial: Update doc with build instructions
      drivers: ieee802154: rf2xx: Fix missing auto ACKs
      drivers: ieee802154: rf2xx: Add missing handle_ack call
      west.yml: update hal_atmel for SAM4E/SAMV71
      dts: arm: atmel: Add samv71 device tree
      soc: arm: atmel: Add samv71 mcu
      boards: arm: Add sam_v71_xult board
      CODEOWNERS: add owner for the samv71 platform
      drivers: gpio: Add samv71 defines
      tests: drivers: adc: Add support to samv71 soc
      drivers: usb: sam: Add support to samv71 soc
      drivers: spi: sam: Enable generic config
      boards: arm: Fix sam_e70_xplained spi conf warning
      drivers: spi: sam: Add support to samv71 soc
      soc: atmel: sam: Add spi pinmap
      dts: arm: atmel: Add sam4e device tree
      soc: arm: atmel: Add sam4e mcu
      boards: arm: Add sam4e_xpro board
      CODEOWNERS: add owner for the same4 platform
      west.yml: Enable missing tests for SAMV71
      drivers: gpio: Add sam4e defines
      drivers: spi: sam: Add sam4e chip select config
      drivers: spi: sam: Add SPI CS soc_pinmap for sam4e soc
      boards: sam4e_xpro: Enable spi0 bus in dts file
      boards: sam4e_xpro: Add spi supported in yaml file
      dts: arm: atmel: Add sam4s spi component info
      soc: arm: sam4s: Add spi driver support
      boards: sam4s_xplained: Enable spi0 bus in dts file
      boards: sam4s_xplained: Add spi supported in yaml file

Hake Huang (1):
      test: benchmarkis add frdmk82f board config

Hans Wilmers (1):
      sensor: tmp116: Add support for tmp117, fix calculation issues

Henrik Brix Andersen (82):
      dts: bindings: nxp: lpi2c: add bus idle timeout property
      soc: arm: nxp: add dts fixups for lpi2c bus timeouts
      drivers: i2c: lpspi: add support for the bus idle timeout property
      boards: reel_board: add all LEDs to device tree
      boards: decawave_dwm1001_dev: add PWM LED
      boards: nrf52832_mdk: add RGB PWM LED to dts
      boards: nrf52840_mdk: add RGB PWM LED to dts
      boards: nrf52840_papyr: add RGB PWM LED to dts
      boards: actinius_icarus: add RGB LED to dts
      drivers: pwm: mcux_ftm: only emit warning on period change from zero
      drivers: pwm: mcux_ftm: use DT_INST_* defines instead of dts fixups
      soc: arm: nxp: remove unused DT_FTM_* dts fixups
      soc: nxp: ke1xf: rename ftm instances to pwm to match other SoCs
      boards: nxp: pinmux: enable ftm pwm outputs based on DT_INST_* defines
      drivers: pwm: add support for inverted PWM signals
      samples: fade_led: add support for PWM flags
      samples: blink_led: add support for PWM flags
      samples: rgb_led: add support for PWM flags
      drivers: pwm: shell: add PWM flags support
      drivers: pwm: mcux_ftm: add support for inverted polarity pwm signals
      dts: nxp: kinetis-ftm: add PWM flags cell
      doc: release notes: Update contents for 2.2
      drivers: adc: mcux_adc12: fix DT_INST_2_* usage
      drivers: adc: support for adc channel gain factor of 128
      drivers: adc: add LMP90xxx ADC driver with GPIO
      boards: shields: lmp90100_evb: add TI LMP90100 EVB shield
      samples: shields: lmp90100_evb: add rtd sample
      boards: arm: reel_board: add spi cs gpio
      dts: bindings: add binding for RV32M1 Timer/PWM module
      modules: vega: add option for indicating the presence of RV32M1 TPM
      west: update openisa hal
      dts: riscv: rv32m1: add timer/pwm modules
      soc: riscv: rv32m1: enable peripheral clocks for Timer/PWM modules
      drivers: pwm: add driver for the RV32M1 Timer/PWM module
      CODEOWNERS: take ownership of the RV32M1 Timer/PWM driver
      soc: riscv: rv32m1: enable the RV32M1 Timer/PWM driver
      boards: riscv: rv32m1_vega: enable PWM support for the RGB LED
      boards: riscv: rv32m1_vega: document PWM support
      Revert ""boards: nxp: pinmux: enable ftm pwm outputs based on DT_INST_* defines""
      tests: board_shell: enable sensor shell
      dts: bindings: add binding for the NXP Kinetis SoC temperature sensor
      drivers: sensor: add driver for the nxp kinetis temperature sensor
      dts: nxp: ke1xf: add temperature sensor nodes
      boards: twr_ke18f: enable internal temperature sensor
      soc: nxp: k6x: enable bandgap buffer if temperature sensor is enabled
      dts: nxp: k6x: add temperature sensor nodes
      boards: frdm_k64f: enable internal temperature sensor
      drivers: can: flexcan: use initialization from MCUX v2.7.0
      modules: add CANopenNode
      canbus: canopen: add zephyr driver layer for CANopenNode
      canbus: canopen: add object dictionary storage
      canbus: canopen: add LED indicator support
      samples: canbus: add CANopen sample
      doc: update doc footer copyright year
      doc: release-notes-2.2: mention CANopen protocol support
      drivers: counter: add missing syscalls
      tests: drivers: counter: add user mode test
      dts: arm: nxp: k6x: fix rtc dts node
      soc: arm: nxp: kinetis: k6x: enable RTC device
      boards: arm: frdm_k64f: list counter support
      soc: arm: nxp: ke1xf: remove unused SPI dts fixups
      drivers: counter: add counter_get_value(), deprecate counter_read()
      doc: release-notes-2.2: mention deprecation of counter_read()
      dts: arm: nxp: ke1xf: fix LPO clock frequency
      dts: arm: stm32f3: add can controller
      drivers: pinmux: stm32f3: add CAN_1 pins
      boards: stm32f3_disco: enable canbus
      boards: arm: efm32wg_stk3800: add jlink flash runner support
      soc: nxp: kinetis: kl2x: move watchdog init to z_arm_watchdog_init
      soc: nxp: kinetis: kw4xz: move watchdog init to z_arm_watchdog_init
      soc: arm: nxp: kinetis: unify CONFIG_WDOG_INIT Kconfig option
      soc: arm: nxp: kinetis: disable watchdog init if bootloader is enabled
      west: commands: sign: look for imgtool.py in path
      soc: arm: nxp: ke1xf: add option for keeping watchdog enabled at boot
      drivers: gpio_ht16k33: update to use new GPIO API
      drivers: led: ht16k33: update to use new GPIO API
      boards: shields: lmp90100_evb: add ngpios to dts
      drivers: gpio: lmp90xxx: update to use new GPIO API
      drivers: adc: lmp90xxx: update to use new GPIO API
      adc: common: handle gain of 128 in adc_gain_invert()
      canbus: canopen: process RPDOs in real-time thread
      samples: canbus: canopen: reduce default timeout in main thread

Håkon Øye Amundsen (4):
      scripts: cmake: move print from python to cmake
      Bluetooth: select BT_RPMSG_NRF53 for non-secure variant of nrf5340
      soc: nordic: add HAS_HW_NRF_ACL for nrf53 net core
      cmake: allow appending dependencies to report targets

Ioannis Glaropoulos (25):
      soc: arm: framework for common fixed MPU region configuration
      soc: arm: nordic_nrf: remove custom fixed MPU region definition
      soc: arm: atmel: remove custom fixed MPU region definition
      soc: arm: nxp: remove custom fixed MPU region definition
      soc: arm: nxp kinetis: force custom fixed MPU region configuration
      soc: arm: silabs: remove custom fixed MPU region definition
      soc: arm: arm: remove custom fixed MPU region definition
      soc: arm: stm32: remove custom fixed MPU region definition
      arch: arm: introduce support for dynamic direct interrupts
      arch: arm: cortex-m: implement support for dynamic direct interrupts
      doc: list dynamic direct interrupts as ARM supported API
      tests: arch: arm: move ZLI test to arm_irq_advanced_features suite
      tests: arch: arm: add test-suite for dynamic direct IRQs
      doc: interrupts: add documentation section for zero-latency IRQs
      dts: arm: nrf5340: adding device_type property in sram nodes
      soc: arm: nrf5340: introduce and define SRAM partitions for APP MCU
      soc: arm: nrf5340: move shared SRAM to the upper part of App MCU SRAM
      boards: arm: nrf5340_dk: include soc.h in nrf5340_cpunet_reset.c
      soc: arm: arm: Select CPU DWT feature symbol for ARM Cortex-M SoCs
      soc: arm: remove explicit selection of already selected symbols
      tests: arch: arm: interrupt: add test-case for user mode IRQ locking
      arch: arm: cortex-m: linker.ld: do not indent preprocessor directives
      arch: arm: cortex-m: properly name ROM sections in the linker
      arch: arm: cortex-m: move openocd sections after _vector_end
      arch: arm: mpu: no dynamic MPU re-program in swap if not required

Ioannis Konstantelias (1):
      drivers: watchdog: Fix callback call on STM32 WWDG enable

Ismael Fillonneau (2):
      drivers: nrf: avoid UARTE pm infinite loop
      drivers: spi: nrfx: factorise spi_context_lock()

Ivo Clarysse (5):
      drivers: can: stm32: Fix bit timing conversion
      drivers: pinmux: stm32f4: add CAN_2 pins
      dts: arm: stm32f4: add CAN_2 controller
      drivers: can: stm32: Support CAN_2 interface
      boards: stm32f4_disco: enable canbus

Jack Dähn (1):
      cmake: Fix CMAKE_BUILD_TYPE and OPTIMIZATION_FLAG match check

Jack Rosenthal (2):
      soc: stm32f0: Add support for STM32F098xx SOC
      board: arm: Add google_kukui board

Jacob Siverskog (2):
      Bluetooth: host: Rethink how unpair all works
      doc/reference/runtime_conf: improve example snippets

Jan Tore Guggedal (1):
      drivers: sensor: bme280: Add CS control when using SPI

Jan Van Winkel (21):
      drivers/flash/flash_simulator: Added file back end for posix arch
      drivers/flash: Removed native posix flash driver
      gui: Added support for LVGL v6.1
      tests: gui: Enable new LVGL features in tests
      modules: gui: Updated LVGL version to v6.1.1
      debug: asan: Added leak suppression for SDL2 & X11
      shields: display: Added generic shield for ST7789V
      samples: display: Use ST7789V generic shield
      drivers: display_st7789v: Name pixel format choice
      boards/shields: st7789v: Use conditional Kconfig
      samples: display: Enable display support in ST7789V sample
      samples: display: Build for st7789v_waveshare_240x240
      samples: display: Added generic display shield sample
      samples: display: Remove ILI9340 sample
      samples: display: Remove ST7789V sample
      samples: display: Move LVGL sample
      driver: display: Clarified byte order of pixel formats
      driver: display: Added BGR565 pixel format
      drivers: display: Set mcux elcdif pixel format to BGR565
      samples: display: Added support for BGR565
      drivers: display: Add support for RGB565 to SDL display

Jennifer Williams (3):
      samples: boards: Add readme for gpio counter.
      driver: uart: ns16550: implement configure API
      drivers: uart: ns16550: move from hard-coded to configurable

Jim Shu (2):
      tests/kernel/fatal: add volatile to prevent compiler optimization
      riscv_machine_timer: optimize MTIME/MTIMECMP registers access in riscv64

Joakim Andersson (81):
      Bluetooth: GATT: Fix discover callback invalid pointer
      Bluetooth: Host: Check that bluetooth device is ready
      Bluetooth: Samples: Switch to synchronous bt_init before main loop
      Bluetooth: UUID: Expose bt_uuid_to_str to application
      Bluetooth: Host: Fix duplicate whitelist entries issue
      Bluetooth: HCI: Add utility to extract PB and BC flags from data header
      Bluetooth: HCI: Handle invalid ACL flags.
      Bluetooth: host: Check for device ready for whitelist API
      Bluetooth: shell: Fix whitelist clear shell command argument count
      Bluetooth: shell: Add command to print all bonds available
      Bluetooth: shell: Add command to print all connections available
      Bluetooth: controller: Fix rx buffer leak for LL Version priority event
      Bluetooth: controller: Fix controller address check
      Bluetooth: controller: Return FICR as a static address IR
      Bluetooth: Host: Fix issues with host IRK handling
      Bluetooth: HCI: Check length of VS command complete
      Bluetooth: Change remote version event from prio to normal event type
      Bluetooth: host: Refactor host auto initiated LL procedures
      net: buf: Add push functions for supported bit-variants
      Bluetooth: samples: peripheral_esp: Use common 24-bit functions
      Bluetooth: mesh: Use 24-bit functions
      Bluetooth: controller: Use 24-bit functions for LL Features
      Bluetooth: mesh: Add comment explaining use of byte order
      Bluetooth: host: Use direct connection if not host resolving list
      Bluetooth: controller: Fix bug in LE create conn with filter policy
      Bluetooth: host: Document behaviour of the whitelist initiator.
      Bluetooth: GATT: Document notify callback return parameters
      Bluetooth: host: Remove toggling advertiser on advertise data update
      tests: net: ipv6: Fix net_buf asserts in fragment unittest
      tests: net: buf: Fix byteorder test writing beyond buffer
      tests: net: arp: Fix net_buf assert in ARP unit test
      assert: Add option to disable condition from assertion message
      assert: Move __ASSERT_LOC so it can be used when asserts are disabled
      assert: Add verbose option to assertion messages
      assert: Add option to disable assertion messages
      assert: Disable line number printing together with file printing
      Bluetooth: assert: Change printed expression to printing line and file
      net: buf: Switch from net buf assert to system assert
      assert: Completely remove file info and condition expression
      kernel: panic: Option ASSERT_NO_FILE_INFO controls panic or oops print
      Bluetooth: host: Add BT_BUF_SIZE to include HCI reserve for buf size
      Bluetooth: host: Add config option for discardable buffer size.
      Bluetooth: host: Lower the size of the num_complete buffer
      Bluetooth: host: Fix conn object assigned to wrong connection
      Bluetooth: host: Clear auto-conn state when failed to get conn object
      Bluetooth: host: Refactor stopping directed advertiser
      Bluetooth: host: Fix error code when calling API before init
      Bluetooth: host: Reserve conn object for connecting with whitelist
      Bluetooth: host: Reserve conn object for connectable advertiser
      Bluetooth: host: Stop using existing conn object when creating new conn
      Bluetooth: host: Document connection object behaviour
      Bluetooth: Kconfig: Fix error in buffer pool sizes
      Bluetooth: HCI: Fix allow Zephyr VS HCI commands in host-only build
      Bluetooth: host: Disconnect connection if no conn object is available
      Bluetooth: host: Ifdef starting of background scanner in init
      Bluetooth: host: Set conn state before sending HCI command
      Bluetooth: host: Refactor initiator to common code and initiator state
      Bluetooth: host: Handle scanner active at RPA timeout
      Bluetooth: host: Handle starting roles with different random address
      Bluetooth: host: Handle initiator at RPA timeout
      Bluetooth: shell: Add shell command for advertise with identity option
      Bluetooth: host: Fix advertiser with identity switches to RPA
      Bluetooth: host: Refactor use of #ifdef to IS_ENABLED()
      samples: smp_svr: Handle advertise start in disconnected callback.
      Bluetooth: host: Fix net buf assert on att encrypt change event
      Bluetooth: L2CAP: Add destroy callback to fixed L2CAP channels
      Bluetooth: ATT: Fix ATT corrupting mem_slab structure after free
      Bluetooth: L2CAP: Reset channel status before destroy callback
      Bluetooth: host: Fix app notified connected but no connection exists
      Bluetooth: host: Fix out of range parameters provided to the controller
      Bluetooth: Fix infinite recursion in host-based bt_rand
      Bluetooth: Fix controller RPA calling into host with host-based crypto
      Bluetooth: shell: Add support for pairing accept callback
      Bluetooth: tests: Update hci_prop_evt for LE Set Random Address command
      Bluetooth: host: Drop directed adv reports for NRPA passive scanner
      Bluetooth: host: Prevent adv overwriting passive scan identity address
      Bluetooth: host: Document privacy-disabled directed advertising reports
      Bluetooth: host: Scanner must be disabled to update to NRPA address
      Bluetooth: host: Refresh advertiser NRPA when active scan is using NRPA
      Bluetooth: tests: Add privacy configuration for test basic_conn_encrypt
      Bluetooth: samples: peripheral_dis: Sample requires BT_SETTINGS

Johan Hedberg (14):
      tests: mesh: Fix build for bbc_microbit
      Bluetooth: Mesh: Make model publication struct more compact
      Bluetooth: L2CAP: Make channel ops const
      Bluetooth: L2CAP: Remove bogus NULL checks
      Bluetooth: L2CAP: Fix checking for STATUS_OUT
      Bluetooth: shell: Fix floating point usage
      Bluetooth: shell: Add printing of remote version information
      Bluetooth: Mesh: Fix provisioning buffer initialization
      CODEOWNERS: Add @dcpleung as owner for /dts/xtensa/intel/
      arch: xtensa: Add support for Intel Apollolake
      soc: xtensa: Add SoC definition for Audio DSP on Intel Apollolake
      boards: xtensa: Add board definition for Audio DSP on Up Squared
      Bluetooth: Mesh: Support reliable sending when publishing
      release: Zephyr 2.2.0-rc1

Johann Fischer (46):
      boards: nrf52833_pca10100: fix arduino SPI configuration
      drivers: usb_dc_nrfx: free memory if event is intended to be dropped
      drivers: usb_dc_nrfx: remove not relevant bashing comments
      usb: derive USB device Serial Number String from HWINFO
      tests: usb: adapt descriptor test to new Serial Number placeholder
      usb: initialize USB descriptor earlier
      drivers: ssd1306: derive buffer length from width and height attributes
      drivers: ssd1306: cleanup and make functions static
      drivers: ssd16xx: derive buffer length from width and height attributes
      drivers: display_st7789v: fix style, move init function to the bottom
      drivers: display_st7789v: obtain resolution and offsets from DT
      drivers: display_st7789v: make functions static, cleanup
      drivers: display_st7789v: obtain panel settings and parameters from DT
      drivers: display_st7789v: remove obsolete Kconfig options
      drivers: display_st7789v: remove obsolete display_st7789v_tl019fqv01.c
      shields: st7789v_generic: add TL019FQV01 parameter and settings properties
      shields: st7789v_generic: rename shield to TL019FQV01
      shields: st7789v_generic: add support for Waveshare 1.3inch display
      reel_board: enable SPI and display controller driver by default
      drivers: ssd1306: add choice symbol to controller type choice
      drivers: ssd1306: fix partial buffer write for SH1106 controller
      shields: ssd1306: add support for SH1106 based 128x64 display
      shields: ssd1306: add table with supported displays
      shields: remove link board can
      samples: lvgl: write initial content before blanking_off
      shields: waveshare_epaper: set LVGL_BITS_PER_PIXEL to 1
      drivers: display: add support for GD7965 display controller
      shields: add support for GDEW075T7 display
      usb: move USB transfer functions to appropriate file
      usb: rework USB transfer logging
      drivers: apds9960: convert to new GPIO API
      drivers: ti_hdc: convert to new GPIO API
      drivers: amg88xx: convert to new GPIO API
      drivers: ssd1306: convert to new GPIO API
      usb: convert VBUS control to new GPIO API
      drivers: enc424j600: convert to new GPIO API
      drivers: enc28j60: convert to new GPIO API
      drivers: st7789v: convert to new GPIO API
      drivers: ili9340: convert to new GPIO API
      samples: fxos8700-hid: convert to new GPIO API
      samples: hid-cdc: convert to new GPIO API
      dts: ili9340: update gpio property description
      drivers: ieee802154_mcr20a: convert to new GPIO API
      drivers: ssd16xx: convert to new GPIO API
      samples: wifi: add config to test winc1500 driver
      drivers: gd7965: convert to new GPIO API

Jonas Eriksson (2):
      soc: stm32f1: Add support for stm32f1xx SoCs
      boards: arm: Add stm32vl_disco support

Jonas Norling (4):
      net: iface: Remove expired router from list of active routers
      drivers: eth: native_posix: Don't sleep when there is data to read
      net: ipv6: nbr: Factor out parsing of ll address option
      net: ipv6: nbr: Add neighbor when responding to NS

Jose Alberto Meza (13):
      drivers: i2c: xec: Adhere to MCHP I2C spec recomendations
      drivers: espi: xec: Enable OOB channel by default
      soc: arm: mchp: Add missing definition for SoC pins
      boards: arm: mchp: Enable additional drivers for MEC15xxEVB board
      drivers: pwm: xec: Use unique log module identifier for PWM
      soc: arm: microchip: Allow to support only light sleep
      boards: mec1501modular: Enable additional drivers for modular MEC1501
      drivers: espi: xec: Add support for eSPI OOB channel operations
      samples: drivers: espi: Showcase eSPI OOB channel APIs
      dts: arm: microchip: Adjust DT IRQ priorities
      soc: arm: microchip: Update fixup for priorities
      drivers: espi: xec: Use DT IRQ priority values
      drivers: espi: xec: Allow to intercept eSPI host suspend/reset warnings

Jose Manuel Pacheco Luna (4):
      riscv: enabled spi-0 in defconfig and dtsi files
      riscv: Configured pinmux for Arduino header SPI
      tests: spi_loopback: Add rv32m1 configuration
      boards: rv32m1_vega: Documentation and sanity test support

Josh Gao (4):
      usb: usb_dc_native_posix: fix control transfers with data.
      libc: permit users to supply their own malloc.
      doc: s/devicetree/device tree/
      logging: fix LOG_HEXDUMP_* in C++.

Jukka Rissanen (35):
      net: Verify correctness of iface_api inside L2 driver API
      net: config: Wait network interface to come up
      samples: net: echo-server: Generate coverage report
      samples: net: zperf: Ignore out of net_buf issue
      eth: mcux: Do not set carrier ON if interface is not known
      net: sockets: tls: Mark accepted socket correctly in accept()
      samples: net: google_iot_mqtt: Do not compile by sanitycheck
      net: stats: Fix RX time statistics update
      sys_clock: Fix typo in SYS_CLOCK_HW_CYCLES_TO_NS64() macro
      net: stats: Fix RX traffic class time statistics update
      samples: bluetooth: ipsp: Mark accepted socket correctly in accept()
      kernel: poll: Allow 0 event input
      tests: kernel: poll: Add checks when having zero events
      net: socket: poll() with POLLOUT can return immediately
      tests: net: poll: Add test case for POLLOUT
      tests: net: poll: Fix the test name and add proper tag
      drivers: eth: mcux: Disable HW accel checksum calc
      tests: net: icmpv4: Test NULL ptr in proper time
      net: dns: Support multiple simultaneous mDNS requests
      samples: net: dns: Small refactoring
      drivers: modem: gsm: Fix uart_pipe.h location
      net: websocket: Fix receiving websocket data
      tests: net: websocket: Add RX unit tests for websocket API
      tests: net: websocket: Add TX unit tests for websocket API
      samples: net: websocket: Verify the received data properly
      net: ipv6: When sending NS, use correct destination address
      net: ethernet: Set link local address to VLAN interfaces
      drivers: ethernet: Set the context iface ptr to main interface
      samples: net: echo-server: Fix compile error for missing IP proto
      drivers: modem: gsm: Use modem log level instead of ppp
      samples: net: modem: Fix the name of the app
      samples: net: modem: Remove extra DTS setting from cmake
      samples: net: modem: Add net and modem shells
      drivers: modem: gsm: Add support for getting modem info
      drivers: modem: Fix gpio compile errors with modem shell

Julien D'ascenzio (2):
      boards: arm: nucleo_l452re: add user button
      boards: arm: nucleo_l452re: fix USART2 RX pin

Justin Brzozoski (1):
      net: mqtt: Maintain count of PINGREQ awaiting response

Kamil Lazowski (1):
      drivers: flash: add Nordic JEDEC QSPI NOR flash driver

Kamil Piszczek (2):
      modules: nordic: pick proper timer for nfct on nrf5340
      soc: arm: nordic: nrf53: add nfct hw in kconfig

Karsten Koenig (2):
      drivers: can: mcp2515: Switch to new GPIO API
      samples: drivers: CAN: Switch to new GPIO API

Kevin Townsend (1):
      drivers: hmc5883l: update to new GPIO API

Kim Bøndergaard (1):
      net: mqtt: struct mqtt_sec_config: Declare hostname with const

Kim Sekkelund (1):
      Bluetooth: host: cfg_write callback to return error code

Kiran Paramaswaran (2):
      Bluetooth: Host: Adding valid param check in send_conn_le_param_update()
      Bluetooth: Host: Enable/Disable Automatic Sending of Conn Parameter update

Krzysztof Chruscinski (27):
      drivers: clock_control: nrf: Fix race condition in clock start
      drivers: clock_control: nrf: Add protection to getting item from list
      drivers: clock_control: nrf: Switch to single clock device
      sys: util: Add IF_ENABLED() macro
      tests: unit: util: Add test for IF_ENABLED()
      various: Cleanup COND_CODE_1 usage or replace with IF_ENABLED()
      west.yml: Update hal_nordic to align to clock_control
      logging: log_output: Improve immediate mode handling
      logging: Use single byte log_output buffer in an immediate mode
      tests: subsys: logging: Add test suite for immediate mode
      soc: arm: nordic: Remove enabling of temperature sensor
      logging: Fix synchronous logging in thread context
      tests: logging: log_core: Extended test_log_strdup_gc
      logging: Fix false strdup buffer freeing
      drivers: sensor: hts221: Return error on not supported channel
      drivers: sensor: shell: Improved shell support for sensors
      logging: rtt: Improve synchronous mode
      tests: drivers: counter: Add delay for clock stabilization
      kernel: device: Add const qualifier to device_config
      tests: drivers: counter: counter_basic_api: Fix teardown function
      soc: arm: nordic_nrf: nrf52: Add workaround for anomaly 132
      logging: Fix forcing printk processing with RTT
      drivers: serial: nrf_uarte: Allow TX only instance
      logging: Add source name to error message about missing log_strdup
      shell: Fix SHELL_COND_CMD_ARG_REGISTER macro with NULL handler
      drivers: clock_control: Add subsys argument to the callback
      doc: release-notes-2.2: mention clock_control callback prototype change

Kuba Sanak (2):
      boards: arm: Make Adafruit boards use their DT-defined code partion.
      flashing: don't give bossac offset parameter unless explicitly provided

Kumar Gala (87):
      boards: lpcxpresso55s69: Fix use of deprecated macro
      scripts: dts: Remove deprecated extract_dts_includes.py script
      include: Fix use of <misc/FOO.h> -> <sys/FOO.h>
      include: Fix use of <gpio.h> -> <drivers/gpio.h>
      include: Fix use of <i2c.h> -> <drivers/i2c.h>
      include: Fix use of <sys_io.h> -> <sys/sys_io.h>
      include: Fix use of <json.h> -> <data/json.h>
      include: Fix use of <atomic.h> -> <sys/atomic.h>
      include: Fix use of <flash_map.h> -> <storage/flash_map.h>
      include: Fix use of <nvs/nvs.h> -> <fs/nvs.h>
      include: Fix use of <fs.h> -> <fs/fs.h>
      include: Fix use of <power.h> -> <power/power.h>
      include: Fix use of <base64.h> -> <sys/base64.h>
      include: Fix use of <crc.h> -> <sys/crc.h>
      west.yml: Update modules for include fixes
      include: Remove compat include headers
      sanitycheck: Fix process termination with newer ninja version
      doc: Update warning regex to handler newer sphinx output
      doc: add .known-issue regex for struct bt_mesh_model_pub warnings
      doc: Fix warnings associated with 'unbalanced grouping commands'
      bluetooth: doc: Cleanup warnings with doc build
      ci: use v0.10.1 docker image
      dts: dht: Remove title as its deprecated
      dts: silabs,gecko-spi-usuart: Remove title as its deprecated
      dts: gpio: ti,boosterpack: Remove title as its deprecated
      arm: Removed support for CC2650
      cmake: Introduce optional Kconfig for toolchains
      toolchain: Have Kconfig NEWLIB_LIBC_NANO depend on toolchain support
      west.yml: Update ci-tools
      toolchain: Fix selection of HAS_NEWLIB_LIBC_NANO for zephyr SDK
      ci: move to using SDK 0.11.0
      boards: qemu_cortex_r5: remove CI workaround
      libc: Move xtensa reentrant syscall impl to common libc-hooks
      ci: Bump docker image and SDK support to 0.11.1
      toolchain: Bump min SDK version to 0.11.1
      libc: fix build issue with posix fs APIs on xtensa
      drivers: dma: stm32: Fix compiler warning
      drivers: gpio_mcux: Fix interrupt handling
      gpio: Reorder code in drivers/gpio.h
      gpio: Handle logical conversion in gpio api layer
      drivers: gpio_mcux: Update for handling local layer in core
      drivers: gpio_gecko: Update for handling local layer in core
      drivers: gpio_sam: Update for handling local layer in core
      drivers: gpio_nrfx: Update for handling local layer in core
      drivers: gpio_cc13xx_cc26xx: Add gpio_driver_data to driver data
      drivers: gpio_cc32xx: Add gpio_driver_data to driver data
      drivers: gpio_cmsdk_ahb: Add gpio_driver_data to driver data
      drivers: gpio_dw: Add gpio_driver_data to driver data
      drivers: gpio_esp32: Add gpio_driver_data to driver data
      drivers: gpio_ht16k33: Add gpio_driver_data to driver data
      drivers: gpio_imx: Add gpio_driver_data to driver data
      drivers: gpio_intel_apl: Add gpio_driver_data to driver data
      drivers: gpio_mchp_xec: Add gpio_driver_data to driver data
      drivers: gpio_mcux_lpc: Add gpio_driver_data to driver data
      drivers: gpio_pcal9535a: Add gpio_driver_data to driver data
      drivers: gpio_rv32m1: Add gpio_driver_data to driver data
      drivers: gpio_sam0: Add gpio_driver_data to driver data
      drivers: gpio_sifive: Add gpio_driver_data to driver data
      drivers: gpio_stellaris: Add gpio_driver_data to driver data
      drivers: gpio_stm32: Add gpio_driver_data to driver data
      drivers: gpio_sx1509b: Add gpio_driver_data to driver data
      drivers: gpio_mmio32: Add gpio_driver_data to driver data
      drivers: gpio_cmsdk_ahb: update to use new GPIO API
      drivers: mmio32: update to use new GPIO API
      tests: gpio_api_1pin: Exclude mps2_an385/mps2_an521
      drivers: stellaris: update to use new GPIO API
      libc: newlibc: Implement dummy _gettimeofday to link
      boards: xtensa: fix device tree build warnings
      dts: introduce macro's to help with changing unit-addr
      boards: arc: nsim: cleanup dts warnings
      boards: em_starterkit: cleanup dts warnings
      scripts/sanitycheck: be more fair with dividing subsets
      ci: github: west: Add a GH workflow to run the west command tests
      boards: adafruit_trinket_m0: Remove tweak to flash address
      flash: nxp_lpc: Fix build issue with LPC Flash driver
      flash: sam0: Fix build issue.
      flash: sam: Limit flash driver to SAME70 SoCs
      samples: flash_shell: Enable on all platforms with a flash driver
      drivers: serial: stm32: Fix possible issue with mixed enum
      ci: bump docker image to 0.11.3 for west 0.7.0
      boards: shrink image sizes
      ci: github: doc: Add a GH workflow to test build the docs
      tracing: usb: Fix build issues.
      sanitycheck: make pyserial optional
      boards: qemu_cortex_r5: Reduce memory footprint when running
      github: Rename GitHub workflow action
      sam0: flash: Fix build issue reported by flash_shell sample

Kwon Tae-young (15):
      dts: arm: stm32: add dts support for EEPROM of STM32L1
      drivers: eeprom: add driver support for EEPROM of STM32L1
      test: driver: eeprom: add board support for eeprom test cases
      doc: arm: 96b_wistrio: add EEPROM support to the boards doc
      tests: eeprom: add testcase for supported boards
      samples: i2c_scanner: support output like i2c_detect
      boards: arm: 96b_wistrio: Use stm32flash runner
      dts: arm: stm32: add dts support for EEPROM of STM32L0
      drivers/eeprom: stm32: Added support for L0 Series
      boards: nucleo_l053r8: Added EEPROM support
      include: drivers: lora: Added support for RSSI and SNR in the recv API
      drivers: lora: sx1276: Added support for RSSI and SNR in recv
      samples: lora/receive: Added support for RSSI, SNR
      soc: stm32l1: Add support for STM32 IWDG
      boards: nucleo_l152re: Enable IWDG

Laczen JMS (4):
      drivers/flash: nios2_qspi byte read access
      drivers/flash: nios2_qspi add unaligned read test
      drivers: eeprom: Add support for eeprom simulator
      drivers: eeprom: Unified simulator and native_posix

Lauren Murphy (1):
      hardening: Introducing hardenconfig tool

Lingao Meng (1):
      Bluetooth: Mesh: Fixes Friend Add Another Update

Loic Poulain (1):
      drivers: counter: mcux_gpt: Add count-up flag

Luiz Augusto von Dentz (27):
      net: buf: Add net_buf_simple_init_with_data
      sys: byteorder: Add 24 bit variants
      net: buf: Add support for 24 bit data type
      sys: byteorder: Add 48 bit variants
      net: buf: Add support for 48 bit data type
      net: buf: Add support for 64 bit data type
      tests: buf: Add byte order tests
      Bluetooth: L2CAP: Queue packets when a segment could not be allocated
      Bluetooth: conn: Add debug variant to buffer allocation
      Bluetooth: L2CAP: Use NET_BUF_TX_COUNT as fragment count
      Bluetooth: Use NET_BUF_RX_COUNT if NET_L2_BT is enabled
      Bluetooth: L2CAP: Add dedicated pool for disconnect request
      Bluetooth: L2CAP: Ignore packets received while disconnecting
      Bluetooth: L2CAP: Offload processing of tx_queue to a work
      net: bt: Disconnect in case of errors sending a packet
      net: bt: Don't wait for buffer indefinatelly
      Bluetooth: L2CAP: Introduce BT_L2CAP_STATUS_SHUTDOWN flag
      Bluetooth: L2CAP: Fix data leaks when segment cannot be sent
      Bluetooth: L2CAP: Document cases where -EAGAIN is returned
      Bluetooth: L2CAP: Add define for signalling timeout
      Bluetooth: L2CAP: Remove use of k_sem for credits
      Bluetooth: L2CAP: Fix using s16_t to represent credits
      Bluetooth: GATT: Allocate request from a memory slab
      Bluetooth: GATT: Remove _peer member from bt_gatt_subscribe_params
      Bluetooth: shell: Fix not reseting value_handle if subscription fails
      Bluetooth: ATT: Use k_mem_slab for connection context
      Bluetooth: shell: Advertise when registering HRS service

Lyle Zhu (1):
      driver: interrupt_controller: Filter invalid channel for RV32M1 SOC

Magne Værnes (1):
      samples: net: echo_client/_server: Fix bug in socket close

Maksim Masalski (6):
      sanitycheck: hardware map added support of the microchip board
      docs: mec15xxevb assy6853 updated set up manual
      docs: mec15xxevb assy6853 updated set up manual
      drivers: spi: Support PM busy state where relevant in DW
      docs: error in mec15xxevb assy6853 in set up manual
      docs: mec15xxevb assy6853 updated sequence events

Manivannan Sadhasivam (10):
      include: Add initial LoRa API
      drivers: Add basic LoRa driver support
      drivers: lora: Add SX1276 LoRa Modem support
      boards: arm: 96b_wistrio: Add on-board SX1276 LoRa Modem suppport
      samples: drivers: Add LoRa sender sample
      samples: drivers: Add LoRa receiver sample
      CODEOWNERS: Add entry for LoRa support
      modules: Add LoRaMac Stack and drivers
      west: Add LoRaMac-node module
      boards: arm: 96b_wistrio: Use STM32_OSPEEDR_VERY_HIGH_SPEED for SPI1_SCK

Marciano C. Preciado (1):
      drivers: nrf: Catch for nRF53 serial interference

Marcin Niestroj (13):
      net: ppp: lcp: drop dead code path checking nack_buf
      net: ppp: ip{,v6}cp: drop possible double free of nack_buf
      net: ppp: ipcp: reject all not recognized and not acceptable options
      net: ppp: lcp: reject all not recognized and not acceptable options
      net: ppp: fsm: use size of whole structure instead of each field
      net: ppp: fsm: prevent double free in Discard-Req handler
      net: ppp: fsm: fix sending Protocol-Reject
      spi: stm32: deduplicate code creating SPI instances
      shell: fix race condition in shell instance initialization
      scripts/sanitycheck: fix merging OVERLAY_CONFIG extra args
      power: device: use ARRAY_SIZE() for getting number of core_devices
      power: device: deduplicate suspending code
      shell: device: show PM state in device list

Marcin Szymczyk (4):
      soc: nrf: update dts_fixup.h to I2C DT
      soc: nrf: update dts_fixup.h to SPI DT
      soc: nrf53: add power management
      soc: nrf91: add power management

Marcio Montenegro (2):
      Samples: Bluetooth: Add ST BLE Demo sample
      Samples: Bluetooth: st_ble_demo: Update to new GPIO API

Marco Peter (1):
      drivers: flash: Build STM32 flash support only when selected

Marco Sterbik (1):
      bluetooth: fix removal of needed subscriptions

Marek Pieta (2):
      Bluetooth: controller: Fix Kconfig dependency
      Bluetooth: ATT: Fix handling ATT response

Markus Fuchs (7):
      net: tls: Add SSL/TLS secure renegotiation support
      dts: arm: stm32f4: Add CRYP support for STM32F4xx SoC series
      drivers: crypto: Add STM32 CRYP crypto driver
      samples: drivers: crypto: Add STM32 driver support
      include: crypto: Add Galois/Counter Mode (GCM) support
      drivers: crypto: crypto_mtls_shim: Add AES-GCM support
      samples: crypto: Add AES-GCM sample

Martin Jaeger (4):
      drivers: pinmux: stm32l0: More I2C pinmuxes added
      dts: arm: stm32l452 dtsi files updated
      boards: arm: nucleo_l452re added
      boards: nucleo_g431rb: Default serial port fixed

Martin Lesund (1):
      net: lwm2m: implement utc_offset and timezone

Martin Rieva (2):
      Bluetooth: Host: Add CONFIG_BT_BONDING_REQUIRED flag
      Bluetooth: Host: Add generic pairing query callback

Martí Bolívar (24):
      drivers: clock_control: clock_control_on should be blocking
      scripts: add new west build ""build.cmake-args"" config option
      net: lwm2m: add optional timestamp resources to some IPSO objects
      cmake: require python 3.6 or later
      doc: update GSG and Linux guides for move to Python 3.6
      doc: releases: add python 3.6 requirement to notes
      scripts: west build: slight --help tweak
      boards: bbc_microbit: add nrfjprog flash support
      scripts: runners: improve error handling CLI
      scripts: runners: defer ensure_snr() to run in nrfjprog
      scripts: runners: nrfjprog: restrict when we guess snr
      scripts: runners: nrfjprog: sort SNR list before prompting
      modules: fail on invalid ZEPHYR_EXTRA_MODULES
      gen_defines: emit output for all nodes in dependency order
      gen_defines: don't emit comments with ""# "" lines
      scripts: grutils: tweak sort keys to group siblings
      drivers: led_strip: modernize and fix up ws2812 drivers/sample
      scripts: west_commands: skip bossac tests unless on linux
      scripts: west_commands: fix help text for flash
      doc: west: move manifest command docs to manifest.rst
      doc: west: add docs for west manifest --validate
      doc: west: add ""git."" prefix to URL hosts
      doc: west: document manifest import feature
      doc: west: 0.7.0 documentation

Mateusz Holenko (5):
      samples: philosophers: Disable networking
      tests: no-multithreading: Disable networking
      boards: litex_vexriscv: Enable networking
      boards: litex_vexriscv: dts: Reorder liteeth registers
      drivers: i2c_bitbang: read SDA on high clock

Maureen Helm (48):
      boards: arm: Extend usb device support to all nxp imx rt boards
      dts: Add spi bindings and nodes for lpc socs
      drivers: spi: Add configs for instances 7 and 8
      drivers: spi: Add mcux flexcomm driver
      soc: nxp_lpc: Enable the mcux flexcomm spi driver
      boards: lpcxpresso55s69: Enable spi instance 8
      boards: lpcxpresso54114: Enable spi instance 5
      tests: spi_loopback: Add lpc board configurations
      boards: arm: Add arduino header to all frdm boards
      boards: arm: Add arduino header to all mimxrt boards
      drivers: serial: Rename lpc usart shim driver
      drivers: serial: Use generated dts macros in mcux flexcomm driver
      west.yaml: Update hal_nxp to MCUXpresso SDK 2.7.0
      dts: boards: Define dts aliases at soc level for kinetis socs
      dts: boards: Define dts aliases at soc level for i.mx rt socs
      dts: boards: Define dts aliases at soc level for i.mx 6/7 socs
      dts: boards: Define dts aliases at soc level for lpc socs
      drivers: i2c: Refactor mcux lpi2c driver to use generated dts macros
      drivers: serial: Refactor mcux lpuart driver to use generated dts macros
      drivers: gpio: Refactor mcux igpio driver to use generated dts macros
      drivers: counter: Refactor mcux gpt driver to use generated dts macros
      soc: nxp_kinetis: Remove extra blank line at end of ke1xf dts fixup
      soc: nxp_imx: Fix counter_basic_api test for i.mx rt boards
      drivers: i2c: Refactor mcux i2c driver to use generated dts macros
      drivers: serial: Refactor mcux uart driver to use generated dts macros
      drivers: serial: Refactor mcux lpsci driver to use generated dts macros
      drivers: spi: Refactor mcux dspi driver to use generated dts macros
      drivers: counter: Refactor mcux rtc driver to use generated dts macros
      drivers: watchdog: Refactor mcux wdog driver to use generated dts macros
      gui: Add BGR565 pixel format support to lvgl
      drivers: kscan: Extend callback arguments to 32-bits
      dts: Add bindings for ft5336 touch panel controller
      drivers: kscan: Introduce ft5336 touch panel driver
      gui: Add support for lvgl touch input device
      boards: Configure ft5336 touch panel on i.mx rt boards
      samples: display: Enhance lvgl sample to support touch input
      gpio: Update mcux igpio driver to use new gpio api
      boards: mimxrt1020_evk: Fix button label to match silkscreen
      tests: gpio: Enable gpio_basic_api test on mimxrt1050_evk
      gpio: Update rv32m1 gpio driver to use new gpio api
      tests: gpio: Enable gpio_basic_api test on rv32m1_vega_ri5cy
      disk: Convert usdhc driver to new gpio api
      drivers: sensor: Convert fxos8700 to new gpio api
      drivers: sensor: Convert fxas21002 to new gpio api
      boards: arm: Convert hexiwear_k64 to new gpio api
      disk: Convert sdhc spi driver to new gpio api
      boards: arm: Remove redundant CONFIG_BOARD_* from all frdm defconfigs
      boards: arm: Remove redundant CONFIG_BOARD_* from imx rt defconfigs

Maximus Liu (1):
      Bluetooth: Mesh: Fixes wrong subnet used for Friend Clear

Michael Scott (5):
      net: if: Make sure iface->if_dev is not null when accessing L2
      net: mqtt: mqtt_live should only return success when ping sent
      samples: net: mqtt_publisher: handle EAGAIN from mqtt_live()
      samples: net: mqtt_publisher: add return value to wait()
      samples: net: echo_client: handle net if mtu

Mieszko Mierunski (4):
      drivers: uart: Switch timeout values to s32_t in UART async API
      drivers: nrf: Fix forever timeout handling in UART async API.
      tests: uart: Add forever timeout test for UART Async API.
      drivers: sam: UART async API change timeout to signed value.

Mikkel Jakobsen (1):
      drivers: spi: spi_mcux_dspi: fix missing context unlock on busy bus

Mohamed ElShahawi (1):
      drivers: gpio_esp32: update to use new GPIO API

Moonkwun Jung (1):
      dts: arm: st: h7: fix stm32h7 separate cores

Morten Priess (4):
      bluetooth: controller: Implemented dynamic re-scheduling in ticker
      bluetooth: controller: Added use of slot_window for ADV
      Bluetooth: controller: split: Force central cleanup on MIC error
      Bluetooth: controller: Remove compiler specific warning

Nathaniel Graff (2):
      drivers: gpio_sifive: Update for new GPIO API
      drivers: gpio_sifive: Disable interrupts

NavinSankar Velliangiri (1):
      drivers: wifi: Fix the use of net_pkt_write() in eswifi driver

Nicholas Lowell (3):
      debug: tracing: Remove unneeded prototypes
      tracing: ctf: fix arguments to ctf_top_thread_info
      pthread: wrap header with extern C

Nick Ward (2):
      samples: bluetooth: peripheral_hr: Fix advertising UUID16 service list
      mcumgr: BT SMP transport config for authenticated requirement

Nicolas Pitre (1):
      test_pipe_contexts: fix mempool size issue and async pipe coverage

Oane Kingma (7):
      soc/arm/silabs_exx32: Add support for EFM32GG11B SoC
      boards/arm: Add initial support for SiLabs Giant Gecko GG11 STK
      drivers/ethernet: Add support for SiLabs Giant Gecko GG11
      drivers/serial: Add more USART ports for Silabs EFM32GG11B
      drivers/watchdog: Add support for SiLabs Gecko Watchdog
      dts / boards / soc: Add support for SiLabs Gecko watchdog
      boards: efr32_slwstk6061a: Enable watchdog

Oleg Zhurakivskyy (42):
      samples: sockets: echo: Include stdlib.h
      drivers: eth: e1000: Minor cleanup of the naming in e1000_tx()
      drivers: eth: e1000: Minor cleanup of the naming in e1000_rx()
      drivers: eth: e1000: Sanitize the RX descriptor length
      drivers: eth: e1000: Add a hexdump of the received/sent data
      net: buf: Use __ASSERT() in NET_BUF_ASSERT()
      net: buf: Add an assert in net_buf_alloc_len()
      net: core: Drop NET_ASSERT_INFO() macro
      net: tcp2: Fix the clang compilation warnigs for native_posix
      net: tcp2: Fix the snprintf() format specification
      net: tcp2: Add a support for net_buf reservation
      net: tcp2: Support arbitrary payloads in TCP windows
      net: tcp2: Support tracking of net_buf_clone()
      net: tcp2: Support arbitrary payloads in tcp_csum().
      net: tcp2: Delete unused tcp_pkt_linearize()
      net: tcp2: Use CONFIG_NET_BUF_DATA_SIZE for network buffer size
      net: tcp2: Use CONFIG_NET_TCP_INIT_RETRANSMISSION_TIMEOUT
      net: tcp2: Drop snprintf() and use snprintk()
      drivers: eth: e1000: Include sys/types.h for ssize_t
      net: tp: Add a support for arbitrary payloads in tp_output()
      net: tp: Rename tcp_recv() into tp_tcp_recv()
      net: tcp2: Rename tcp_pkt_received() into tcp_recv()
      net: tcp2: Refactor tcp_flags()
      net: tcp2: Refactor tcp_th()
      net: tcp2: Support arbitrary requests in tcp_win_pop()
      net: tcp2: Support arbitrary length in tcp_win_append()
      net: tcp2: Update tcp_conn_state()
      net: tcp2: Set the net_context to NET_CONTEXT_CONNECTED once
      net: tcp2: Add diagnostic information to tcp_chain()
      net: tcp2: Nullify the packet pointer on a state change
      net: tcp2: Do not access freed TCP connection in tcp_conn_unref()
      net: tcp2: Do not bail-out on unconsumed flags
      net: tcp2: Refactor tcp_data_len()
      net: tcp2: Fix the diagnostic in tcp_options_check()
      net: tcp2: Update tcp_recv() logic
      net: tcp2: Add the interrupt locking in _tcp_send()
      net: tcp2: Add len and evaluate data for the incoming packet
      net: tcp2: Turn on ACK for the outgoing data packet
      net: tcp2: Evaluate the sequence number in SYN_RECEIVED
      net: tcp2: Drop the restriction on PSH in SYN_RECEIVED
      net: tcp2: Immediately ACK the data in SYN_RECEIVED
      net: tcp2: Guard on th being NULL in SYN_RECEIVED

Olof Johansson (3):
      riscv: use standard MSTATUS
      interrupt_controller: plic: use shared symbol for DT_*
      gen_defines: close files before exit

Olof Kindgren (1):
      drivers: interrupt_controller: Add SweRV PIC support

Patrik Flykt (7):
      drivers: modem: Support GSM modems and PPP
      drivers: modem: Implement uart_pipe interface for GSM modem
      net: l2: ppp: Assign IPv4 address received with IPCP
      samples: net: Create sample app for GSM modems
      samples: net: echo_client: Add Kconfig option to run a number of times
      west: Update required net-tools revision
      scripts: net: Add script for running sample tests

Paul Sokolovsky (5):
      include: net: ethernet.h: Clarify checksum offloading options
      Revert ""samples: sockets: Don't open the socket if the test protocol is enabled""
      CODEOWNERS: Add @pfalcon for subsys/net/lib/config/
      samples: sockets: big_http_download: Increase stack size.
      include: crypto: Cleanup docstrings

Pauli Salmenrinne (1):
      boards: stm32f411e_disco: Add pwm to drive green led

Pavlo Hamov (1):
      libc: syscall: make aliases WEAK by default

Pawel Czarnecki (2):
      drivers: entropy: Add driver for LiteX PRBS module
      boards: litex_vexriscv: Enable LiteX PRBS driver

Pawel Dunaj (2):
      drivers: uart_rtt: Handle PM callback properly
      drivers: wdt_nrfx: Handle PM callback properly

Peter A. Bigot (30):
      kernel: init: provide access to kernel startup state
      treewide: avoid use of unsupported C++ specifiers
      include/drivers: remove implicit casts from api pointer initialization
      include: respect line limit in api pointer initialization
      cmake: toolchain: generalize exclusion of CXX options
      treewide: avoid address-of-compound-literal idiom in headers
      drivers: sensor: mcp9808: fix various problems and improve test
      drivers: sensor: ccs811: uncrustify
      drivers: sensor: ccs811: use device tree for control GPIOs
      drivers: sensor: ccs811: deassert WAKEn when not active
      drivers: sensor: ccs811: make measurement drive mode configurable
      drivers: sensor: ccs811: bypass APP_START when not in boot mode
      drivers: sensor: ccs811: abstract read of status/error
      drivers: sensor: ccs811: reset sensor when driver is initialized
      drivers: sensor: ccs811: rework data fetch to prepare for non-polled use
      drivers: sensor: ccs811: support triggers
      drivers: sensor: ccs811: add interface for BASELINE management
      drivers: sensor: ccs811: cleanup of raw reading processing
      drivers: sensor: ccs811: support update of environmental conditions
      drivers: sensor: ccs811: provide access to sensor results
      drivers: sensor: ccs811: enable drive mode 4
      drivers: sensor: ccs811: provide API to fetch configuration and versions
      samples: sensor: ccs811: add Linaro copyright statements
      samples: sensor: ccs811: update for new capabilities
      lib: os: onoff: add API for on-off service request and release management
      samples: drivers: spi_flash: switch nrf52840_pca10056 to Nordic QSPI
      devicetree: add voltage-divider binding
      adc: provide API to help with conversions
      samples: boards: nrf: add battery measurement sample
      x86: apollo_lake: add nexus map for GPIO nodes

Peter Bigot (201):
      boards: bbc_microbit: reference board variations
      drivers: clock_control: nrf_power_clock: use unsigned reference count
      samples: nrf52: replace power_mgr with system_off
      dts: edtlib: remove diagnostic on required with default
      kernel: sched: assert when k_sleep invoked from interrupt context
      samples: sensors: isl29035: add sample
      boards: nrf52840_pca10056: use correct maximum write speed for flash
      dts: bindings: generalize JEDEC SPI NOR descriptions
      samples: drivers: spi_flash: increase test data length
      sensor: dht: convert from Kconfig to devicetree
      samples: sensor: dht: add sample
      samples: sensor: lps22hh: add standalone sample
      kernel: move test of kernel startup state to more visible location
      doc: avoid non-standard value for Kconfig predefines
      tests: kernel: timer: fix coverity side expression complaint
      samples: sensor: adt7420: fix frdm_k64f devicetree overlay
      samples: sensor: adt7420: add nrf52_pca10040 devicetree overlay
      samples: sensor: adt7420: rework for trigger testing
      drivers: sensor: mpu6050: convert to devicetree
      samples: sensor: mpu6050: convert to devicetree
      drivers: sensor: ak8975: remove legacy reference to MPU6050
      drivers: sensor: ccs811: accommodate old firmware
      samples/subsys/fs/fat_fs: increase main stack size
      drivers: sensor: bma280: convert from Kconfig to devicetree
      samples/drivers/display: remove redundant include
      west.yml: update mcumgr to use full path to flash.h header
      west.yml: update mcuboot to use full path to driver headers
      treewide: use full path to adc.h header
      treewide: use full path to adc/lmp90xxx.h header
      treewide: use full path to can.h header
      treewide: use full path to clock_control.h header
      treewide: use full path to clock_control/arm_clock_control.h header
      treewide: use full path to clock_control/stm32_clock_control.h header
      treewide: use full path to console/ipm_console.h header
      treewide: use full path to console/uart_mcumgr.h header
      treewide: use full path to console/uart_pipe.h header
      treewide: use full path to counter.h header
      treewide: use full path to entropy.h header
      treewide: use full path to flash.h header
      treewide: use full path to gpio.h header
      treewide: use full path to gpio/gpio_esp32.h header
      treewide: use full path to gpio/gpio_mmio32.h header
      treewide: use full path to hwinfo.h header
      treewide: use full path to i2c.h header
      treewide: use full path to ieee802154/cc1200.h header
      treewide: use full path to ieee802154/cc2520.h header
      treewide: use full path to ipm.h header
      treewide: use full path to kscan.h header
      treewide: use full path to led/ht16k33.h header
      treewide: use full path to pinmux.h header
      treewide: use full path to ps2.h header
      treewide: use full path to pwm.h header
      treewide: use full path to sensor.h header
      treewide: use full path to spi.h header
      treewide: use full path to uart.h header
      treewide: use full path to usb/usb_dc.h header
      treewide: use full path to watchdog.h header
      treewide: use full path to wifi/winc1500.h header
      cmake: remove include/drivers from include lists
      sanitycheck: leave non-tty terminal unmodified on exit
      doc: scheduler: define reschedule point
      doc: generate documentation for asynchronous SPI API
      doc: reference: add discussion of terms that define API behavior
      west.yml: update hal_nxp to use full path to driver headers
      samples: littlefs: correct to use SPI NOR flash memory on nrf52840_pca10056
      boards: define Arduino SPI standard chip select for Nordic boards
      toolchain: gcc: respect existing deprecated macro define
      gpio: use named types to distinguish pin sets from pin values
      gpio: put back deprecation comments
      gpio: add error return when blocking might occur
      test/drivers/gpio: add tests for new API
      tests/drivers/gpio: replace legacy API in callback manage tests
      tests/drivers/gpio: replace legacy API in callback tests
      tests/drivers/gpio_basic_api: improve support for pull test
      drivers: gpio: add named flag set for disconnected GPIO
      drivers/gpio: document that unsupported DEBOUNCE should be ignored
      drivers: gpio_mcux: fix handling of unsupported configurations
      drivers: gpio_sx1509b: update to use new GPIO API
      tests/drivers/gpio_basic_api: improve test validation diagnostic
      tests: gpio_basic_api: fix misplacement of debounce flag
      drivers/gpio: use more clear expression for GPIO direction mask
      drivers: gpio_sam0: update to new GPIO API
      boards: atmel sam0: update devicetree to new GPIO flags
      tests/drivers/gpio_basic_api: delay before checking pull effect
      gpio: unify assert checks for pin and interrupt configuration
      gpio: avoid disabling interrupts when supporting legacy code
      drivers: sensor: hts221: update to new GPIO API
      drivers: gpio: rv32m1: fix interrupt clear
      drivers: gpio: sam: fix pull reconfiguration
      drivers: gpio: gecko: fix interrupt clear
      tests: drivers: gpio: clean up testcase descriptions
      tests: gpio_basic_api: add more board support
      tests: gpio_basic_api: simplify handling of callback pin check
      drivers: gpio: utils: filter pin notifications based on callback
      drivers: gpio: sx1509b: relax conditions on pin specification
      gpio: support logic-level output at initialization
      samples: blinky: update to start with LED on
      tests: gpio_basic_api: update for output initialization to logic level
      boards: particle_*: update for new GPIO API
      drivers: gpio_sx1509b: fix consistency issue in toggle implementation
      drivers: sensor: sht3xd: convert to new GPIO APIO
      drivers: gpio_sx1509b: add support for pin configuration on device init
      boards: nrf52_pca20020: initialize IO extender pins on startup
      drivers: gpio: provide typedefs for flags and devicetree properties
      drivers: sensor: lsm6dsl: update to new GPIO API
      drivers: sensor: bmi160: convert to new GPIO API
      drivers: sensor: dht: update to new GPIO API
      drivers: sensor: hts221: cleanup related to devicetree and trigger idiom
      sensor: adxl362: update for new GPIO API
      sensor: adxl372: update for new GPIO API
      drivers: sensor: isl29035: update to new GPIO API
      drivers: sensor: mcp9808: update to new GPIO API
      drivers: gpio: fix const qualifier on driver data pointers
      dts: binding: gpio: add default for ngpios property
      drivers: gpio: add support for device-specific pin validation
      drivers: gpio_nrfx: add support for pin validation
      drivers: gpio_sx1509b: add support for pin validation
      drivers: gpio_cc13xx_cc26xx: add support for pin validation
      drivers: gpio_cc32xx: add support for pin validation
      drivers: gpio_cmsdk_ahb: add support for pin validation
      drivers: gpio_dw: add support for pin validation
      drivers: gpio_esp32: add support for pin validation
      drivers: gpio_gecko: add hard-coded support for pin validation
      drivers: gpio_ht16k33: add hard-coded support for pin validation
      drivers: gpio_imx: add support for pin validation
      x86: apollo_lake: correct NW GPIO controller offset and span
      drivers: gpio_intel_apl: add support for pin validation
      drivers: gpio_mchp_xec: add support for pin validation
      drivers: gpio_mcux: add support for pin validation
      drivers: gpio_mcux_igpio: add support for pin validation
      drivers: gpio_mcux_lpc: add support for pin validation
      drivers: gpio_mmio32: add support for pin validation
      drivers: gpio_pca95xx: add support for pin validation
      drivers: gpio_rv32m1: add support for pin validation
      drivers: gpio_sam: add support for pin validation
      drivers: gpio_sam0: add support for pin validation
      drivers: gpio_sifive: add support for pin validation
      drivers: gpio_stellaris: add support for pin validation
      drivers: gpio_stm32: add support for pin validation
      tests: gpio_basic_api: add overlay for hifive1_revb testing
      sensor: adt7420: update for new GPIO API
      drivers: sensor: lis2dh: convert to new GPIO API
      sensors: ccs811: update to new API
      drivers: sensor: bmg160: convert to new GPIO API
      drivers: sensor: bmc150_magn: convert to new GPIO API
      drivers: sensor: sx9500: convert to new GPIO API
      drivers: sensor: tmp007: convert to new GPIO API
      drivers: sensor: lsm9ds0_gyro: convert to new GPIO API
      drivers: sensor: mpu6050: convert to new GPIO API
      samples: canbus: convert to new GPIO API
      boards: 96b_nitrogen: replace legacy devicetree active flags
      boards: bl652_dvk: replace legacy devicetree active flags
      boards: bl654_dvk: replace legacy devicetree active flags
      boards: decawave_dwm1001_dev: replace legacy devicetree active flags
      boards: efm32gg_stk3701a: replace legacy devicetree active flags
      boards: frdm_k22f: replace legacy devicetree active flags
      boards: frdm_k82f: replace legacy devicetree active flags
      boards: holyiot_yj16019: replace legacy devicetree active flags
      boards: mimxrt1010_evk: replace legacy devicetree active flags
      boards: nucleo_f767zi: replace legacy devicetree active flags
      boards: nucleo_l152re: replace legacy devicetree active flags
      boards: nucleo_l452re: replace legacy devicetree active flags
      boards: steval_fcu001v1: replace legacy devicetree active flags
      boards: stm32f030_demo: replace legacy devicetree active flags
      boards: stm32g0316_disco: replace legacy devicetree active flags
      boards: stm32l1_disco: replace legacy devicetree active flags
      boards: twr_kv58f220m: replace legacy devicetree active flags
      boards: shields: lmp90100_evb: replace legacy devicetree active flags
      boards: shields: dfrobot_can_bus_v2_0: remove reference to legacy flag
      drivers: eeprom_at2x: update for new GPIO API
      drivers: lora: update for new GPIO API
      drivers: sensor: bma280: convert to new GPIO API
      samples: drivers: espi: update to new GPIO API
      tests: drivers: gpio: eliminate binding warning
      gpio: clean up API documentation
      gpio: remove unused internal API
      gpio: do not deprecate internal direction mask
      boards: particle_boron: update for new GPIO API
      drivers: modem: clean up pin configuration
      west.yml: update mcuboot to use non-deprecated GPIO flags
      gpio: replace gpio pin write/read with set/get
      tests: gpio_basic_api: update for deprecation
      gpio: deprecate legacy gpio pin read/write functions
      gpio: replace GPIO_DIR flags
      boards: replace GPIO_PUD_PULL flags in devicetree source
      drivers: gpio_cc13xx_cc26xx: replace GPIO_PUD_PULL macros
      gpio: replace GPIO_INT_LEVEL flag
      gpio: mark deprecated flag macros
      drivers: bluetooth: hci: replace deprecated gpio_pin callback API
      drivers: led: ht16k33: reorder pin interrupt configuration
      drivers: sensor: lis3mdl: replace deprecated gpio_pin callback API
      doc: release-notes-2.2: update for GPIO deprecations
      gpio: deprecate gpio pin callback enable and disable API
      gpio: remove legacy read/write API functions
      gpio: remove port access op support
      gpio: use reduced-size role typedef for public API pin indexes
      gpio: rename typedef for devicetree flags
      gpio: clean up internal API function prototypes
      samples: boards: nrf: update battery sample for new GPIO API
      lib: os: onoff: documentation clarifications
      tests: lib: os: onoff: address Coverity complaint

Peter van der Perk (1):
      drivers: can: Add SocketCAN support to mcux flexcan driver

Piotr Mienkowski (19):
      boards: mps2_an521: remove board.h
      samples: gpio: remove redundant application
      tests: remove pinmux_basic_api test
      api: gpio: Align GPIO dt-bindings flags with Linux DTS
      gpio: add new functions to set/get pin/port values
      gpio: add gpio_pin_interrupt_configure function
      tests: add gpio_api_1pin testcase
      drivers: gpio_gecko: update to use new GPIO API
      drivers: gpio_sam: update to use new GPIO API
      drivers: gpio_nrfx: update to use new GPIO API
      drivers: gpio_mcux: update to use new GPIO API
      samples: blinky: update to use new GPIO API
      samples: button: update to use new GPIO API
      tests: gpio_api_1pin: fix port related testcases
      gpio: add new asserts verifying flag configurations
      drivers: gpio_mcux: clean up interrupt code
      samples: threads: update to use new GPIO API
      samples: convert bluetooth mesh samples to new gpio API
      drivers: ieee802154_rf2xx: convert to the new GPIO API

Piotr Zierhoffer (1):
      doc: Trivial fix of GSG formatting

Pushpal Sidhu (4):
      spi: stm32: Add ll_func_set_fifo_threshold_16bit helper
      spi: stm32: remove spi_stm32_next_tx helper
      spi: stm32: Enable sending 16bits at a time in 8bit mode if possible
      pinmux: stm32: l4: Make SPI SCK and MOSI pins Very High Speed

Radoslaw Koppel (1):
      kernel: thread: k_thread_foreach_unlocked: Implement

Ravi kumar Veeramally (7):
      net: ipv4: Add IPv4 options length to net pkt
      net: icmpv4: Add support for Timestamp and RR
      tests: net: icmpv4: Add unit tests
      samples: net: mqtt: Add a sample to connect to Azure
      samples: net: cloud: Move cloud based samples
      samples: net: echo_server: Add signed certs and keys
      samples: net: echo_server: Do not bail out on Accept errors

Rihards Skuja (1):
      runners: openocd: don't throw when no config is provided

Robert Lubos (30):
      drivers: ieee802154_nrf5: Add ACK handling
      net: openthread: Process real ACK frame instead of fake one
      net: openthread: Allow to configure SED
      samples: net: Remove redundant frdm_kw41z configs from echo samples
      drivers: ieee802154_kw41z: Create a fake ACK frame for upper layers
      net: config: Initialize semaphore before it's used
      net: openthread: Update OpenThread version and better CMake integration
      net: openthread: Move OT CMake configuration into OT repo
      cmake: dts fixups
      net: openthread: Use settings subsystem
      net: mqtt: Close the socket right after sending disconnect message
      samples: net: mqtt_publisher: Remove mqtt_input after mqtt_disconnect
      net: mqtt: Add keep alive timeout helper
      net: sockets: tls: Add missing symbols for a few options
      west.yml: Update hal_nordic to get recent 802.15.4 radio driver
      boards: nrf52811_pca10056: Enable nRF 802.15.4 driver by default
      net: 6lo: Fix memory corruption during uncompression
      tests: net: ieee802154: Set LL addresses on a packet
      boards: qemu_x86: Add ieee802154 capability
      net: sockets: Rework ioctl poll helpers error handling
      net: mqtt: Make mqtt_live return the mqtt_ping result
      modules: nordic: Allow separate nRF 802.15.4 radio driver build
      sockets: tls: Fix Kconfig mbedTLS dependencies
      tests: net: mqtt: Fix failure at disconnect
      net: sockets: Extend ioctl poll protocol with offloading feature
      net: sockets: Remove socket offloading interface
      net: sockets: Fix gethostname socket.h/unistd.h clash
      drivers: wifi: simplelink: Rework offloading mechanism
      drivers: modem: ublox-sara-r4: Rework offloading mechanism
      drivers: wifi: eswifi: Rework offloading mechanism

Robert Winkler (6):
      drivers: i2c: Add driver for LiteX I2C controller
      boards: litex_vexriscv: Enable LiteX I2C driver
      drivers: pwm: Add driver for LiteX PWM peripherial
      boards: litex_vexriscv: Enable LiteX PWM driver
      drivers: gpio: Add LiteX GPIO driver
      boards: litex_vexriscv: Enable LiteX GPIO driver

Roland Ma (2):
      dts: arm: st: Add dts and soc additions for stm32 F767ZI board
      boards: arm: Add board definition for stm32 nucleo_f767zi

Rubin Gerritsen (4):
      boards: arm: nordic: nrf5340_dk_nrf5340 uart dts config for BLE
      samples: bluetooth: hci_uart: add config for nrf5340_dk_nrf5340_cpuapp
      bluetooth: controller: Guard zephyr LL specific configurations
      bluetooth: controller: Guard SW based privacy config by Zephyr LL

Ruslan Mstoi (2):
      drivers: eth: native_posix: Yield to avoid deadlocks in RX
      net: tcp2: Double main stack size to fix QEMU crash

Ryan QIAN (5):
      driver: gpio: gpio_mcux_igpio: check presence of IRQ macro first
      soc: arm: nxp_imx: rt: add device support i.MX RT1010
      boards: arm: add board support for mimxrt1010_evk
      boards: arm: mimxrt1010_evk: Extend usb device support
      west: update the head of hal_nxp

Sahaj Sarup (2):
      arm: 96b_stm32_sensor_mez: spi: Enable SPI4
      arm: board: 96b_stm32_sensor_mez: enable USART3

Sarvesh Patkar (1):
      drivers: flash: stm32: Update flash driver implementation

Scott Branden (2):
      arm: Add Broadcom Valkyrie SoC support
      boards: arm: Add bcm958401m2 board

Scott Worley (1):
      soc : mec1501 : Deep and light sleep example

Sean Nyekjaer (2):
      boards: atsamd20_xpro: fix sercom muxing sercom0
      boards: atsamd20_xpro: add cs-gpio for one spi device

Sebastian Bøe (13):
      cmake: Change the DTS preprocessing work directory
      cmake: toolchain: Don't add -Werror=implicit-int to CXX builds
      cmake: Fix cache directory detection
      cmake: assert: Reduce the verbosity of the assert warning
      west: Fix defining modules without a module.yml
      cmake: toolchain: Fix 'host' toolchain variant
      cmake: Support passing syscall include directories through CMake
      samples: Add sample 'application_development/out_of_tree_driver'
      cmake: Add option for exporting build metadata to Make
      dtc: Support opting-out of installing dtc
      cmake: Add target for generating header files
      gen_isr_tables: Improve error message
      cmake: Have gperf be opt-out instead of mandatory

Siddharth Chandrasekaran (7):
      drivers/crypto: Add support for AES CBC mode in mbedTLS shim
      drivers/crypto: Add support for AES ECB mode in mbedTLS shim
      samples: crypto: Refactor variables for clarity
      samples: crypto: Add AES ECB mode sample
      drivers/crypto: Add macro to simplify access to ctx->drv_sessn_state
      crypto: api: New capability flag CAP_NO_IV_PREFIX
      drivers/crypto: mbedTLS_shim add support for CAP_NO_IV_PREFIX

Song Qiang (2):
      drivers: dma: stm32: add missing fifo operation
      drivers: dma: stm32: add missing assignment for fifo threshold

Stanislav Poboril (2):
      tests/drivers/gpio: Added udoo_neo_full_m4 board to gpio_basic_api test
      gpio: Update imx gpio driver to use new gpio api

Stephanos Ioannidis (32):
      soc: same70: Fix incorrect default config value
      cmake: Add GCC -Og flag fallback to -O0.
      samples: Remove stale 'random' driver sample.
      scripts: dts: Support GIC interrupt type-specific IRQ number fix up.
      boards: arm: qemu_cortex_r5: Use arm-generic-fdt machine type.
      boards: qemu_cortex_r5: Add a temporary hack to support CI testing.
      boards: qemu_cortex_r5: Remove ignored tags for working tests.
      drivers: interrupt_controller: Refactor GIC configurations
      interrupt_controller: gic: Support multiple GIC versions
      drivers: watchdog: Make WDT_DISABLE_AT_BOOT default to y
      arch: arm: Enable CMSIS-Core for Cortex-R by default
      cmake: qemu: Use chardev for console
      dts: xilinx_zynqmp: Refactor dts to specify RPU and APU separately.
      dts: xilinx_zynqmp: Fix incorrect RPU device tree specification.
      soc: arm: xilinx_zynqmp: Refactor for multi-arch support.
      boards: qemu_cortex_r5: Remove ignore tags for working tests
      x86: intel64: Split 'locore' and 'main' kernel images for QEMU
      arch: arm: Fix Cortex-R power management interrupt handling
      arch: arm: Rewrite Cortex-R reset vector function.
      soc: arm: xilinx_zynqmp: Relocate platform-specific initialisation.
      arch: arm: cortex_m: Add CPU DWT feature symbol
      soc: arm: atmel_sam: Select CPU DWT feature symbol
      soc: arm: psoc6: Select CPU DWT feature symbol
      soc: arm: microchip_mec: Select CPU DWT feature symbol
      soc: arm: nordic_nrf: Select CPU DWT feature symbol
      soc: arm: nxp_imx: Select CPU DWT feature symbol
      soc: arm: nxp_kinetis: Select CPU DWT feature symbol
      soc: arm: nxp_lpc: Select CPU DWT feature symbol
      soc: arm: silabs_exx32: Select CPU DWT feature symbol
      soc: arm: st_stm32: Select CPU DWT feature symbol
      soc: arm: ti_lm3s6965: Select CPU DWT feature symbol
      soc: arm: ti_simplelink: Select CPU DWT feature symbol

Steven Slupsky (1):
      drivers: i2c_slave: eeprom: fixes incorrect declaration

Steven Wang (2):
      sanitycheck: remove ""--detailed-report"" from help message.
      kernel/mutex: code improvement

Sverre Storvold (1):
      Bluetooth: host: Add calling of read_remote_version

Tedd Ho-Jeong An (1):
      boards: up_squared_adsp: Add scripts for diagnostic driver

Thomas Ebert Hansen (1):
      Bluetooth: controller: Fix settings dependency

Thomas Schmid (3):
      sensor: add ms5607 sensor
      drivers: adc: adc_stm32: fix clock setup
      drivers: sensor: ms5607: fix potential integer overlow

Timor Gruber (1):
      doc: cmake: fixed 'strip_prefix' inconsistency

Tobias Svehagen (3):
      Bluetooth: Mesh: Add database for managing nodes and keys
      Bluetooth: samples: Add mesh_provisioner sample
      drivers: modem: Add support for different line endings

Tomasz Bursztyka (30):
      drivers/interrupt_controller: Adopt file naming as other drivers
      drivers/interrupt_controller: Split Kconfig for clarity
      drivers/interrupt_controller: Renaming s1000 to cavs
      include/drivers: Move 2 specific intc headers into public location
      drivers/dma: Rename CAVS driver to DesignWare
      dts: Add the bindings for DesignWare DMA node
      dts: Setup DMA node for the Intel S1000
      driver/dma: No need to store IRQ number in DW driver
      soc/xtensa: Generate DW DMA DT aliases from DTS options
      drivers/dma: Use DTS generated option when configuring DW driver
      dts: Add the 2 other DW DMA nodes to intel s1000
      drivers/dma: Make initialization function generic in DW driver
      soc/xtensa: Generate 2 other DW DMA DT aliases from DTS options
      drivers/dma: Add support for 3 instances instead of only one.
      driver/spi: Make DT aliases consistent for the DW drivers
      drivers/gpio: Fix indentation in DW driver
      drivers/interrupt_controller: Normalize DT aliases consitently for DW
      drivers/interrupt_controller: No need for runtime base address in DW
      drivers/interrupt-controller: Make irqs DT configured in DW
      soc/xtensa: Removing useless DMA definitions for intel s1000
      drivers/usb: Fixing style issues in DW driver
      dts/bindings: Adding DesignWare USB node description
      dts/xtensa: Adding USB node to Intel s1000
      soc/xtensa: Configuring the DW USB DT aliases in Intel s1000
      drivers/usb: Switching to DTS based configuration for DW driver
      soc/xtensa: Removing useless USB definitions for Intel s1000
      CODEOWNERS: Adding owner on DW DMA driver
      drivers/wifi: Switch WINC1500 to new GPIO API
      drivers/ieee802154: Adapt cc2520 driver to new GPIO API
      drivers/ieee802154: Adapt cc1200 driver to new GPIO API

Torsten Rasmussen (5):
      cmake: Zephyr module processing set modules path
      scripts: using Path and PurePath for path handling in zephyr modules
      cmake: use zephyr_library_app_memory for mem partition placement
      cmake: locating zephyr modules in CMAKE_BINARY_DIR
      dts: added cryptocell to the dts file for nRF9160

Trond Einar Snekvik (7):
      Bluetooth: Mesh: Clean up sample config
      Bluetooth: Mesh: Refactor CCM
      Bluetooth: Mesh: Model start callback
      Bluetooth: Add dynamic le scan listener interface
      Bluetooth: Mesh: Skip publish if update fails
      Bluetooth: Move Mesh CCM into a separate module
      Bluetooth: host: Skip set passive scan when not scanning with identity

Ulf Magnusson (171):
      kconfig: Remove redundant 'default n' and 'prompt' properties
      kconfig: Remove assignments to promptless SOC_FAMILY_ARM symbol
      doc: kconfig: Touch up preprocessor docs and put it on a separate page
      doc: kconfig: Move extension docs from porting guide to user guide
      doc: kconfig: Move menuconfig/guiconfig docs to user guide
      doc: application: Remove accidental backslashes in Kconfig sample
      doc: kconfig: Put all documentation on setting symbols on a new page
      doc: kconfig: Add Kconfig intro to index page
      scripts: dts: Accept 'status = ""ok""'
      samples: syslog_net: Remove ref. to CONFIG_SYS_LOG_BACKEND_NET_SERVER
      drivers: entropy: rv32m1: Turn pointless 'menuconfig' into 'config'
      kconfig: Make FLASH_LOAD_OFFSET/SIZE non-configurable when DT is used
      kconfig: Improve USE_CODE_PARTITION prompt and help string
      kconfig: Rename USE_CODE_PARTITION to USE_DT_CODE_PARTITION
      kconfig: Factor out HAS_FLASH_LOAD_OFFSET dependency
      kconfig: Remove assignments to promptless CPU_MINUTEIA symbol
      riscv: kconfig: Remove assignment to promptless CONFIG_64BIT symbol
      scripts: gen_defines.py: Improve output formatting and shorten main()
      scripts: gen_defines.py: Move flash-related code into separate function
      ci: run_ci: Use lowercase for internal vars
      ci: run_ci: Remove semicolons at ends of lines
      bsim_bt: compile.sh: Use lowercase for internal vars
      bsim_bt: basic_conn.sh: Use lowercase for internal vars
      bsim_bt: basic_conn_split.sh: Use lowercase for internal vars
      zephyr-env.sh: Use lowercase for internal vars
      zephyr_env.sh: Remove semicolons at ends of lines
      bt_sim: basic_conn_encrypted.sh: Use lowercase for internal vars
      bt_sim: basic_conn_encrypted_split.sh: Use lowercase for internal vars
      bsim_bt: run_parallel.sh: Use lowercase for internal vars
      bsim_bt: run_parallel.sh: Remove semicolons at ends of lines
      tests: net: all: check_net_options.sh: Use lowercase for internal vars
      global: Remove leading/trailing blank lines in files
      doc: genrest: Use a separate index page for all symbols
      openisa_rv32m1: kconfig: Remove base address/size symbols
      scripts: edtlib.py: Deprecate 'title:'
      dts: bindings: Remove 'title:' and put all info. into 'description:'
      west.yml: Update ci-tools to whitelist STACK_SIZE
      doc: kconfig: Cover a common gotcha related to ""stuck"" symbol values
      doc: kconfig: Mention guiconfig on tips page
      kconfig: Remove assignments to promptless SOC_FAMILY_NRF symbol
      scripts: edtlib: Rename 'child-bus:'/'parent-bus:' to 'bus:'/'on-bus:'
      dts: bindings: Replace 'child-bus:'/'parent-bus:' with 'bus:'/'on-bus:'
      scripts: edtlib: Support nested nodes on buses
      sensors: lps2hh: Fix misspelled GPIOS_CONTROLLER references
      tests: build_all: Add LPS22HH sensor
      doc: extract_content.py: Detect included files in a more robust way
      dts: bindings: Remove redundant document separators
      dts: bindings: Remove ""provides a base representation"" from bindings
      kconfiglib: Update to hide tracebacks for expected errors
      boards: up_squared: kconfig: Remove unused board variant symbols
      kconfig: Remove some redundant single-item menus and ifs
      kconfig: Fix some formatting nits
      kconfig: Remove '# Hidden' comments on promptless symbols
      kconfig: Remove '# hidden' comments on promptless symbols
      kconfig: NXP IMX: Remove unused HAS_IMX_{RDC,CCM} symbols
      drivers: spi: kconfig: Turn pointless 'menuconfig' into 'config'
      dts/bindings: ti,tmp116: Use 'required' instead of 'category' key
      dts/bindings: ti,tmp116: Remove unused 'alert-gpios' property
      kconfig: Remove redundant $ZEPHYR_BASE from 'source's
      kconfig: Remove '# hidden' comment on ARCH_HAS_CUSTOM_BUSY_WAIT
      dts: gen_defines.py: Clean up 'reg' code
      devicetree: Remove DT_SRAM_{BASE_ADDRESS,SIZE}, use CONFIG_* versions
      dts: edtlib: Add 'type: path' for path references
      doc: dts: Fix outdated list of generated macro names
      doc: dts: Add missing documentation for some /chosen properties
      doc: dts: Explain better how devicetree and Kconfig fit together
      doc: dts: Linkify Kconfig syms and explain a Kconfig reference gotcha
      scripts: kconfig: lint.py: Improve error reporting
      Bluetooth: tests: Fix typo'd CONFIG_ARCH_POSIX in comment
      Bluetooth: tests: Remove references to CONFIG_SYS_LOG(_DEFAULT_LEVEL)
      west.yml: Update ci-tools to add misc. new CI checks
      kconfig: Fix wrong max argument count for some preprocessor functions
      boards: litex_vexriscv: Remove unused /chosen/zephyr,timer property
      dts: edtlib: Improve error for wrong reg/ranges/interrupts size
      dts: edtlib: Add helper for testing error messages and test _slice()
      dts: gen_defines.py: Add helper for outputting {} initializers
      tests: all: Remove assignment to promptless NET_GPTP_CLOCK_ACCURACY
      menuconfig: Update to work around resizing crash on macOS
      tests: bluetooth: kconfig: Do not assign promptless BT_CONN symbol
      tests: bluetooth: kconfig: Do not assign promptless BT_RPA symbol
      tests: userspace: Do not assign promptless THREAD_USERSPACE_LOCAL_DATA
      tests: net: kconfig: Do not assign promptless NET_ROUTE symbol
      boards: Kconfig: SAM: Do not assign promptless SOC_FAMILY_SAM0 symbol
      bluetooth: kconfig: Do not assign promptless BT_DEBUG
      boards: arm: kconfig: Do not assign promptless CPU_HAS_FPU
      console: kconfig: Do not assign promptless CONSOLE_HAS_DRIVER
      boards: arm: nxp_imx: kconfig: Do not assign promptless SOC_FAMILY_IMX
      samples: minimal: kconfig: Do not assign promptless MEMORY_PROTECTION
      dts: gen_defines.py: Add should_write() helper for properties
      boards: minnowboard: kconfig: Do not assign promptless CPU_ATOM symbol
      boards: kconfig: Do not assign promptless SERIAL_HAS_DRIVER
      tests: net: kconfig: Do not assign promptless NET_L2_IEEE802154_MGMT
      boards: stm32: kconfig: Do not assign promptless ENTROPY_HAS_DRIVER
      boards: exp432p401r: Do not assign promptless HAS_MSP432P4XXSDK symbol
      boards: sam: kconfig: Do not assign promptless SOC_FAMILY_SAM symbol
      boards: stm32: kconfig: Do not assign promptless SOC_FAMILY_STM32
      tests: bluetooth: kconfig: Do not assign promptless BT_MESH_PROV
      tests: counter: kconfig: Fix debug log level enabling
      doc: dts: Add more details, implementation notes, and examples
      dts: Remove generation of <BOARD>.dts_compiled
      doc: dts: Say <BOARD> instead of BOARD
      doc: dts: Use definition list for compatible/label/ref
      doc: dts: Remove 'title:' from binding example
      boards: cy8ckit: kconfig: Do not assign promptless SOC_FAMILY_PSOC6
      boards: kconfig: Do not assign promptless SOC_FAMILY_EXX32
      boards: kconfig: Do not assign promptless SOC_FAMILY_TISIMPLELINK
      boards: cc322xsf_launchxl: Do not assign promptless HAS_CC3220SDK sym
      samples: sht3xd: kconfig: Do not assign promptless SHT3XD_TRIGGER
      tests: all: kconfig: Do not assign promptless NET_L2_IEEE802154_SUB_GHZ
      shell: kconfig: Fix SEGGER_SYSTEMVIEW/SHELL_BACKEND_RTT build issue
      dts: gen_defines.py: Rename *_dev() to *_node()
      boards: x86: minnowboard: Do not assign promptless X86_NO_SPECTRE_V4
      tests: net: all: kconfig: Do not assign promptless NET_RAW_MODE
      tests: net: all: kconfig: Do not assign promptless NET_ROUTING
      tests: net: all: kconfig: Do not assign promptless NET_INIT_PRIO
      boards: kconfig: Fix enabling USE_SEGGER_RTT for various boards
      dts: Rename generated_dts_board*.{h,conf} to devicetree*.{h,conf}
      dts: Add include/generated_dts_board.h for backwards compatibility
      doc: release-notes-2.2: Mention generated_dts_board* renaming
      scripts: kconfig.py: Detect all assignments to promptless symbols
      scripts: kconfig.py: Rename verify_*() functions to check_*()
      scripts: kconfig.py: Use err() helper for warnings-turned-errors
      scripts: kconfig.py: Simplify write_kconfig_filenames()
      doc: Move Documentation Guidelines right after Documentation Generation
      doc: Link to Documentation Generation from Documentation Guidelines
      kernel: kconfig: Make SCHED_IPI_SUPPORTED invisible
      doc: build overview: Improve diagram, fix errors/stale info, misc.
      kconfig/cmake: Improve reconfiguration behavior
      console: kconfig: Have CONSOLE_{GETCHAR,GETLINE} depend on UART_CONSOLE
      soc: psoc6: kconfig: Do not select CPU_CORTEX_M_HAS_DWT on Cortex-M0
      doc: kconfig: Explain why zephyr/.config assigns promptless symbols
      Bluetooth: shell: kconfig: Do not select FLASH_SHELL from BT_SHELL
      kconfig: Show unsatisfied deps. when assignments don't take
      dts: bindings: nxp,lpc-iap: Remove deprecated 'title' field
      kconfig.py: Convert to use f-strings
      shell: kconfig: Have SHELL_BACKEND_RTT depend on USE_SEGGER_RTT
      console: kconfig: Have CONSOLE_HANDLER dep. on SERIAL_SUPPORT_INTERRUPT
      kconfig: Turn pointless 'menuconfig's into 'config's
      dts: gen_defines.py: Convert to use f-strings
      usb: netusb: Replace IS_ENABLED(VERBOSE_DEBUG) with just VERBOSE_DEBUG
      kernel: kconfig: Fix broken references to TICKLESS_KERNEL
      gui: kconfig: Fix broken refs to LVGL_OBJ_PRELOAD_DEF_ANIMATION_*
      Bluetooth: host: kconfig: Fix broken ref. to BT_CTLR_TX_BUFFER_SIZE
      canbus: canopen: Fix broken CANOPEN_STORAGE_HANDLER_ERASES_EEPROM ref.
      dts: bindings: semtech,sx1276: Remove redundant document separator
      global: Fix up leading/trailing blank lines in files
      dts: bindings: ps2: Replace 'should be 1/0' comments with 'const: 1/0'
      dts: gen_defines.py: Do not crash on 'type: path' properties
      console: Have CONSOLE_GET{CHAR,LINE} dep. on SERIAL_SUPPORT_INTERRUPT
      west.yml: Update ci-tools to avoid Kconfiglib-related false positive
      doc: genrest.py: Convert to use f-strings
      soc: ti_simplelink: kconfig: Refactor CCFG flash block handling
      dts: edtlib: Turn Node.instance_no into EDT.compat2enabled
      kconfig.py: Flag selects with unsatisfied deps and remove whitelisting
      kconfig.py: Add a description at the top of the file
      kconfig.py: Error/warning formatting nits
      dts: edtlib: Add an EDT.dts_source attribute that holds the source code
      dts: gen_defines.py: Save final devicetree to zephyr/zephyr.dts
      doc: devicetree: Update outdated diagram and mention zephyr.dts
      scripts: kconfig: lint.py: Add check for missing CONFIG_ prefix
      kconfig/devicetree: Print path to headers when configuring
      include: gcc.h: Add a __WARN() macro with a custom warning on expansion
      scripts: gen_defines.py: Add out_dev() flag for deprecated macros
      kconfig: modules: Remove redundant MBEDTLS dep on. TLS menu
      kconfig: modules: Avoid including Kconfig.tls-generic twice
      kconfig: arm: Remove 'if CPU_CORTEX_R' within 'if CPU_CORTEX_R'
      kconfig: Remove duplicated ARM_MPU dependency on CUSTOM_SECTION_ALIGN
      kconfig: Remove assignments to CONFIG_<arch> syms and hide them
      kconfig/cmake: Check that one of the CONFIG_<arch> symbols is set
      kconfig: Remove redundant SPI_DW dep on SPI_DW_ACCESS_WORD_ONLY
      kconfig: Replace some single-symbol 'if's with 'depends on'

Vikrant More (11):
      samples: mesh: removed redundant code, blank lines & comments
      samples: mesh: nrf52: implementation based on single pointer
      samples: mesh: nrf52: rename enum attributes
      samples: mesh: nrf52: separately save default & last target values
      samples: mesh: nrf52: used constrain functions whereever possible
      samples: mesh: nrf52: added separate update_vnd_led_gpio()
      samples: mesh: nrf52: corrected sequence of get & publish messages
      samples: mesh: nrf52: removed redundant global variable
      samples: mesh: nrf52: added some more macros support
      samples: mesh: nrf52: minor improvement in MOVE  msg handlers
      samples: mesh: nrf52: added some preprocessor directive

Vinayak Kariappa Chettimada (34):
      arm: soc: nRF51: Remove ISR_STACK_SIZE assignment
      samples: Bluetooth: Increase ISR_STACK_SIZE value
      Bluetooth: controller: legacy: Fix HCI LE Add Device to Whitelist
      Bluetooth: controller: split: Fix HCI LE Add Device to Whitelist
      Bluetooth: controller: split: conn handle invalidation on release
      Bluetooth: controller: split: Fix missing version ind state reset
      Bluetooth: controller: split: Fix Tx Ctrl PDU leak
      Bluetooth: controller: split: Fix length and ping rsp
      Bluetooth: controller: split: Fix compiler warnings
      Bluetooth: controller: legacy: Fix Tx Ctrl PDU leak
      Bluetooth: controller: legacy: Fix length and ping rsp
      Bluetooth: controller: legacy: Fix compiler warnings
      Bluetooth: controller: nordic: Tune tIFS switching
      Bluetooth: controller: split: Reduce time to setup tIFS switch
      Bluetooth: controller: legacy: Fix tx_time calculation for length update
      Bluetooth: controller: split: Use define instead of magic number
      Bluetooth: controller: split: Move statements close to related context
      Bluetooth: controller: split: Fix assert in PDU Rx quota increment
      Bluetooth: controller: split: Pass scanner LLL context in event
      Bluetooth: controller: Add Kconfig option for parameter checking
      Bluetooth: controller: Add set adv param cmd param validation
      Bluetooth: controller: legacy: Fix controller address check
      Bluetooth: controller: split: Fix controller privacy address check
      Bluetooth: controller: Fix CONFIG_BT_CTLR_TX_BUFFER_SIZE range
      Bluetooth: controller: legacy: Fix redundant priv variable check
      Bluetooth: controller: split: Fix ull_disable hang
      Bluetooth: controller: split: Revert conn handle invalidation
      Bluetooth: controller: split: Revert Move invalidation of connection handle
      Bluetooth: controller: split: Update lll_conn_flush interface
      Bluetooth: controller: Clean up nrf cmake include
      Bluetooth: host: Invalid role used in finding connections
      Bluetooth: Add HCI Error codes defined in BT 5.2 Spec.
      Bluetooth: host: Added new LE Feature Support bit masks
      Bluetooth: controller: split: Fix uninitialized advertiser rl_idx

Vincent Wan (14):
      west.yml: update hal_ti to include build for TI Power Manager
      samples: http_get: connect without TLS by default on cc3220sf_launchxl
      tests: kernel: gen_isr_table: exclude from testcase.yaml
      boards: Kconfig: rename BOARD_DEPRECATED to BOARD_DEPRECATED_RELEASE
      soc: kconfig: add SOC_DEPRECATED_RELEASE
      kconfig: deprecate TI cc2650_sensortag and cc2650 SoC
      samples: http_get: fix build warnings on cc32xx
      samples: http_get: exclude cc32xx for sample.net.sockets.http_get.posix
      gpio: Update cc32xx gpio driver to use new gpio api
      gpio: Update cc13x2/cc26x2 gpio driver to use new gpio api
      tests: drivers: gpio_basic_api: add overlays for cc32xx and cc1352r1
      drivers: gpio: cc32xx: add assertions to check number of pins
      sockets: tls: set TLS_CREDENTIALS when using non-native stack
      west.yml: update hal_ti to include build for TI RF driver

Vladimir Atanasov (1):
      soc/kl2x: added I2C_1 labels

Wayne Ren (3):
      arch: arc: fix the bug where regular irq comes out in user mode
      arch: arc: fix the bug where firq comes out in user mode
      arch: arc: fix the bug where buffer validate should be atomic

Wentong Wu (15):
      Style: remove extern on the function declarations in the header
      power: correct log level for power management
      power: active all devices if not all devices enter suspend state
      power: add DEVICE_PM_LOW_POWER_STATE for device power management
      Style: remove extern on the function declarations in the header
      Power: change sys_pm_force_power_state only works for one shot
      power: add system power management direct force mode.
      power: policy: recover deep sleep states from residency policy.
      tracing: add infrastructure for collection of tracing data
      scripts: add script to capture tracing data with UART backend
      scripts: add script for usb backend to receive tracing data
      tracing: ctf: adapt ctf implementation to tracing infrastructure
      tracing: add TRACING_ISR Kconfig
      tracing: add TRACING_TEST Kconfig option
      tests: tracing: add test cases for tracing infrastructure

Wolfgang Puffitsch (6):
      Bluetooth: controller: split: Move invalidation of connection handle
      Bluetooth: host: Refactor checks in update_ccc for efficiency
      Bluetooth: controller: split: Fix tx_time calculation for length update
      Bluetooth: host: Guard calls to bt_conn functions
      Bluetooth: controller: Add feature bits for SMI support
      Bluetooth: controller: Support SMI TX flag as setting

Yannis Damigos (3):
      olimexino_stm32: Use stm32flash runner
      usb_dc_stm32: Convert usb disconnect gpio to new gpio api
      uart_stm32: Fix flow misspelling

Yasushi SHOJI (2):
      soc: posix: Fix function name typo
      boards: posix: Fix a typo

Yihui Xiong (1):
      boards: add ADC config to nrf52840_mdk

ZhongYao Luo (5):
      bluetooth: h5: Fix memory access error
      bluetooth: h5:  Handling the the zero length ack packet
      bluetooth: h5: sending priority events through bt_recv_pri
      bluetooth: l2cap_br: l2cap channel used wrong cid when removing
      Bluetooth: RFCOMM: Fix length errors when payload exceeds 127

Zide Chen (2):
      arch/x86_64: make sysapic.h available for x86_64 as well
      boards/x86/acrn: build it in x86_64 mode and switch to X2APIC

box zheng (1):
      tests : Ensure the IRQ is disabled before enabling it at run time

Øyvind Rønningstad (12):
      cmake: Add the TEXT_START location to zephyr_linker_sources()
      cmake: Add sorting of linker snippets by key
      arm: linker.ld: Port the vector table to zephyr_linker_sources()
      arm: linker.ld: Port KINETIS_FLASH_CONFIG to zephyr_linker_sources()
      arm: linker.ld: Port NXP_IMX_RT_BOOT_HEADER to zephyr_linker_sources()
      arm: linker.ld: Port the CC32xx flash header to zephyr_linker_sources()
      arc: linker.ld: Port vector table to zephyr_linker_sources()
      cortex_m: linker.ld: Port secure entry funcs to zephyr_linker_sources()
      arm, x86, riscv: linker.ld: Move TEXT_SECTION_OFFSET
      riscv: linker.ld: Port vector table to zephyr_linker_sources()
      extensions.cmake: Replace TEXT_START with ROM_START
      arch: common: Delete isr_tables.ld which was a copy of intlist.ld

Łukasz Hejnak (2):
      samples: drivers: soc_flash_nrf: add test harness
      samples: drivers: soc_flash_nrf: Tagged sample with nrf9160
```",59771425
1513,False,False,2019-12-09T03:06:06Z,2019-12-09T03:15:46Z,"We are pleased to announce the release of Zephyr kernel version 2.1.0.

Major enhancements with this release include:

* Normalized APIs across all architectures.
* Expanded support for ARMv6-M architecture.
* Added support for numerous new boards and shields.
* Added numerous new drivers and sensors.
* Added new TCP stack implementation (experimental).
* Added BLE support on Vega platform (experimental).
* Memory size improvements to Bluetooth host stack.

The following sections provide detailed lists of changes by component.

Security Vulnerability Related
******************************

No security vulnerabilities received.

Kernel
******

* Add arch abstraction for irq_offload()
* Add architecture interface headers and normalized APIs across all arches
* Show faulting CPU on fatal error message
* Improve C++ compatibility
* Modified arch API namespace to allow automatic arch API documentation
  generation
* Use logging for userspace errors

Architectures
*************

* ARC:

  * Increased the exception handling stack size
  * Implement DIRECT IRQ support
  * Implement z_arch_system_halt()

* ARM:

  * Added support for memory protection features (user mode and
    hardware-based stack overflow detection) in ARMv6-M architecture
  * Added QEMU support for ARMv6-M architecture
  * Extended test coverage for ARM-specific kernel features in ARMv6-M
    architecture
  * Enhanced runtime MPU programming in ARMv8-M architecture, making
    the full partitioning of kernel SRAM memory a user-configurable
    feature.
  * Added CMSIS support for Cortex-R architectures.
  * Updated CMSIS headers to version 5.6
  * Added missing Cortex-R CPU device tree bindings.
  * Fixed incorrect Cortex-R device tree specification.
  * Fixed several bugs in ARM architecture implementation

* POSIX:

  * Added support for CONFIG_DYNAMIC_INTERRUPTS (native_posix
    & nrf52_bsim)

* RISC-V:

  * Add support to boot multicore system

* x86:

  * Add basic ACPI and non-trivial memory map support
  * Add SMP support (64-bit mode only)
  * Inline direct ISR functions

Boards & SoC Support
********************

* Added support for these SoC series:

.. rst-class:: rst-columns

   * Atmel SAMD51, SAME51, SAME53, SAME54
   * Nordic Semiconductor nRF53
   * NXP Kinetis KV5x
   * STMicroelectronics STM32G4

* Added support for these ARM boards:

  .. rst-class:: rst-columns

     * actinius_icarus
     * cc3235sf_launchxl
     * decawave_dwm1001_dev
     * degu_evk
     * frdm_k22f
     * frdm_k82f
     * mec1501modular_assy6885
     * nrf52833_pca10100
     * nrf5340_dk_nrf5340
     * nucleo_g431rb
     * pico_pi_m4
     * qemu_cortex_r0
     * sensortile_box
     * steval_fcu001v1
     * stm32f030_demo
     * stm32l1_disco
     * twr_kv58f220m

* Added support for these following shields:

  .. rst-class:: rst-columns

     * adafruit_2_8_tft_touch_v2
     * dfrobot_can_bus_v2_0
     * link_board_eth
     * ssd1306_128x32
     * ssd1306_128x64
     * waveshare_epaper
     * x_nucleo_idb05a1

* Added CAN support for Olimexino STM32 board

Drivers and Sensors
*******************

* ADC

  * Added support for STM32G4X in STM32 driver
  * Added Microchip XEC ADC driver

* Bluetooth

  * Added RPMsg transport HCI driver

* CAN

  * Added API to read the bus-state and error counters
  * Added API for bus-off recovery
  * Optimizations for the MCP2515 driver
  * Bug fixes

* Clock Control

  * Added support for nRF52833 in nRF driver
  * Added support for STM32G4X in STM32 driver

* Console

  * Removed deprecated function console_register_line_input

* Counter

  * Added support for STM32L1 and STM32G4X in STM32 driver
  * Removed QMSI driver
  * Added Microchip XEC driver

* Display

  * Enhanced SSD1306 driver to support build time selection
  * Enhanced SSD16XX driver to use bytestring property for LUT and parameters

* DMA

  * Added generic STM32 driver
  * Removed QMSI driver

* EEPROM

  * Added EEPROM device driver API
  * Added Atmel AT24 (and compatible) I2C EEPROM driver
  * Added Atmel AT25 (and compatible) SPI EEPROM driver
  * Added native_posix EEPROM emulation driver

* Entropy

  * Added RV32M1 driver
  * Added support for STM32G4X in STM32 driver

* Ethernet

  * Added MAC address configuration and carrier state detection to STM32 driver
  * Added ENC424J600 driver
  * Removed DesignWare driver

* Flash

  * Added deep-power-down mode support in SPI NOR driver
  * Fixed STM32 driver for 2MB parts
  * Added support for STM32G4X in STM32 driver
  * Removed QMSI driver

* GPIO

  * Added support for STM32G4X in STM32 driver
  * Removed QMSI, SCH, and SAM3 drivers

* Hardware Info

  * Added LiteX DNA driver

* I2C

  * Converted remaining drivers to device tree
  * Added support for STM32G4X in STM32 driver
  * Fixed DesignWare driver for 64-bit
  * Removed QMSI driver
  * Added proper error handling in XEC driver

* I2S

  * Refactored STM32 driver

* IEEE 802.15.4

  * Added CC13xx / CC26xx driver

* Interrupt Controller

  * Added support for SAME54 to SAM0 EIC driver
  * Added support for STM32G4X in STM32 driver
  * Converted RISC-V plic to use multi-level irq support

* IPM

  * Added nRFx driver

* Keyboard Scan

  * Added Microchip XEC driver

* LED

  * Removed non-DTS support from LP5562, PCA9633, and LP3943 drivers

* Modem

  * Added simple power management to modem receiver

* Pinmux

  * Added support for STM32G4X in STM32 driver
  * Removed QMSI driver

* PS/2

  * Added Microchip XEC driver

* PWM

  * Added PWM shell
  * Added Microchip XEC driver
  * Removed QMSI driver

* Sensor

  * Fixed raw value scaling and SPI burst transfers in LIS2DH driver
  * Converted various drivers to device tree
  * Fixed fractional part calculation in ENS210 driver
  * Added OPT3001 light sensor driver
  * Added SI7060 temperature sensor driver
  * Added TMP116 driver
  * Implemented single shot mode in SHT3XD driver
  * Added single/double tap trigger support in LIS2DW12 driver

* Serial

  * Added support for SAME54 to SAM0 driver
  * Added support for STM32G4X in STM32 driver
  * Added support for 2 stop bits in nRF UARTE and UART drivers
  * Removed QMSI driver
  * Added ESP32 driver with FIFO/interrupt support

* SPI

  * Added support for nRF52833 in nRFx driver
  * Added support for STM32G4X in STM32 driver
  * Added RV32M1 driver
  * Added Microchip XEC driver
  * Added LiteX driver
  * Removed Intel Quark driver

* Timer

  * Fixed starving clock announcements in SYSTICK and nRF drivers
  * Fixed clamp tick adjustment in tickless mode in various drivers
  * Fixed calculation of absolute cycles in SYSTICK driver
  * Fixed lost ticks from unannounced elapsed in nRF driver
  * Fixed SMP bug in ARC driver
  * Added STM32 LPTIM driver
  * Changed CC13X2/CC26X2 to use RTC instead of SYSTICK for system clock

* USB

  * Added support for nRF52833 in nRFx driver
  * Added support for STM32G4X in STM32 driver
  * Enabled ZLP hardware handling for variable-length data storage

* Video

  * Added MCUX CSI and Aptina MT9M114 drivers
  * Added software video pattern generator driver

* Watchdog

  * Added support for SAME54 to SAM0 driver
  * Converted drivers to use device tree
  * Removed QMSI driver
  * Added STM32 WWDG driver
  * Added Microchip XEC driver

* WiFi

  * Implemented TCP/UDP socket offload with TLS in Inventek eS-WiFi driver

Networking
**********

* Added new TCP stack implementation. The new TCP stack is still experimental
  and is turned off by default. Users wanting to experiment with it can set
  :option:`CONFIG_NET_TCP2` Kconfig option.
* Added support for running MQTT protocol on top of a Websocket connection.
* Added support for enabling DNS in LWM2M.
* Added support for resetting network statistics in net-shell.
* Added support for getting statistics about the time it took to receive or send
  a network packet.
* Added support for sending a PPP Echo-Reply packet when a Echo-Request packet
  is received.
* Added CC13xx / CC26xx device drivers for IEEE 802.15.4.
* Added TCP/UDP socket offload with TLS for eswifi network driver.
* Added support for sending multiple SNTP requests to increase reliability.
* Added support for choosing a default network protocol in socket() call.
* Added support for selecting either native IP stack, which is the default, or
  offloaded IP stack. This can save ROM and RAM as we do not need to enable
  network functionality that is not going to be used in the network device.
* Added support for LWM2M client initiated de-register.
* Updated the supported version of OpenThread.
* Updated OpenThread configuration to use mbedTLS provided by Zephyr.
* Various fixes to TCP connection establishment.
* Fixed delivery of multicast packets to all listening sockets.
* Fixed network interface initialization when using socket offloading.
* Fixed initial message id seed value for sent CoAP messages.
* Fixed selection of network interface when using ""net ping"" command to send
  ICMPv4 echo-request packet.
* Networking sample changes for:

  .. rst-class:: rst-columns

     - http_client
     - dumb_http_server_mt
     - dumb_http_server
     - echo_server
     - mqtt_publisher
     - zperf

* Network device driver changes for:

  .. rst-class:: rst-columns

     - Ethernet enc424j600 (new driver)
     - Ethernet enc28j60
     - Ethernet stm32
     - WiFi simplelink
     - Ethernet DesignWare (removed)

Bluetooth
*********

* Host:

  * Reworked the Host transmission path to improve memory footprint and remove potential deadlocks
  * Document HCI errors for connected callback
  * GATT: Added a ``bt_gatt_is_subscribed()`` function to check if attribute has been subscribed
  * GATT: Added an initializer for GATT CCC structures
  * HCI: Added a function to get the connection handle of a connection
  * Added ability to load CCC settings on demand to reduce memory usage
  * Made the time to run slave connection parameters update procedure configurable
  * Folded consecutive calls to bt_rand into one to reduce overhead
  * Added key displacement feature for key storage
  * Reduced severity of unavoidable warnings
  * Added support C++20 designated initializers
  * Mesh: Add the model extension concept as described in the Mesh Profile Specification
  * Mesh: Added support for acting as a Provisioner

* BLE split software Controller:

  * Numerous bug fixes
  * Fixed several control procedure (LLCP) handling issues
  * Added experimental BLE support on Vega platform.
  * Added a hook for flushing in LLL
  * Implemented the LLL reset functions in a call from ll_reset
  * Made the number of TX ctrl buffers configurable
  * Added support for Zero Latency IRQs

* BLE legacy software Controller:

  * Multiple bug fixes

Build and Infrastructure
************************

* Deprecated kconfig functions dt_int_val, dt_hex_val, and dt_str_val.
  Use new functions that utilize eDTS info such as dt_node_reg_addr.
  See :zephyr_file:`scripts/kconfig/kconfigfunctions.py` for details.

* Deprecated direct use of the ``DT_`` Kconfig symbols from the generated
  ``generated_dts_board.conf``.  This was done to have a single source of
  Kconfig symbols coming from only Kconfig (additionally the build should
  be slightly faster).  For Kconfig files we should utilize functions from
  :zephyr_file:`scripts/kconfig/kconfigfunctions.py`.  See
  :ref:`kconfig-functions` for usage details.  For sanitycheck yaml usage
  we should utilize functions from
  :zephyr_file:`scripts/sanity_chk/expr_parser.py`.  Its possible that a
  new function might be required for a particular use pattern that isn't
  currently supported.

* Various parts of the binding format have been simplified. The format is
  better documented now too.

  See :ref:`legacy_binding_syntax` for more information.

Libraries / Subsystems
***********************

* Random

  * Add cryptographically secure random functions
  * Add bulk fill random functions

HALs
****

* HALs are now moved out of the main tree as external modules and reside in
  their own standalone repositories.

Documentation
*************

* A new Getting Started Guide simplifies and streamlines the ""out of
  box"" experience for developers, from setting up their development
  environment through running the blinky sample.
* Many additions and updates to architecture, build, and process docs including
  sanity check, board porting, Bluetooth, scheduling, timing,
  peripherals, configuration, and user mode.
* Documentation for new boards and samples.
* Improvements and clarity of API documentation.

Tests and Samples
*****************

* We have implemented additional tests and significantly expanded the amount
  of test cases in existing tests to increase code coverage.

Issue Related Items
*******************

These GitHub issues were addressed since the previous 2.0.0 tagged
release:

.. comment  List derived from GitHub Issue query: ...
   * :github:`issuenumber` - issue title

* #18964 - [Coverity CID :203911]Memory - corruptions in /tests/bluetooth/uuid/src/main.c
* #18963 - [Coverity CID :203910]Memory - corruptions in /tests/bluetooth/uuid/src/main.c
* #18959 - [Coverity CID :203907]Parse warnings in /include/bluetooth/conn.h
* #18923 - (BLE) Dynamic TX Power Control
* #18906 - Problem on build when calling objcopy to generate isrList.bin
* #18865 - Fatal Usage Fault When Bluetooth And OpenThread Are Enabled On NRF52840 Multiprotocol Support
* #18828 - Bluetooth: controller: crash terminating link during encryption procedure
* #18821 - Documentation: parent vs child in DeviceTree nodes
* #18819 - Bluetooth: LL split assert upon disconnection
* #18814 - Module Request: LoRaMac-Node
* #18813 - fs: nvs: Cannot delete entries
* #18808 - Docs for gpmrb board incorrectly refer to up_squared board
* #18804 - Channel Selection Algorithm Modification In Zephyr
* #18802 - Bluetooth: UUID: Missing tests and confusing documentation
* #18799 - bt_uuid_create_le() and bt_uuid_create() have endianness issues, and only one of them is needed
* #18795 - FS:NVS: garbage collection when restart
* #18784 - Can not build link_board_can shield
* #18774 - (nRF51) NVS example doesn't work
* #18765 - LwM2M: DNS handling via offload socket API is broken
* #18760 - hello_world sample instructions don't work
* #18739 - k_uptime_get_32() does not behave as documented
* #18732 - net: mDNS name resolving issue between 2 Zephyr nodes
* #18726 - arc: should not rely on that ERET has a copy of ilink
* #18725 - arc: the IRM bit of SEC_STAT is not handled corrected
* #18724 - arc: interrupt stack is not  switched correctly
* #18717 - USB broken on disco l475 iot board
* #18705 - SMP fails to allocate buffer and pairing times out
* #18693 - POSIX: Some headers were missing from PR #16621
* #18687 - [Coverity CID :203623]Memory - illegal accesses in /tests/subsys/settings/fcb_init/src/settings_test_fcb_init.c
* #18686 - [Coverity CID :203622]Parse warnings in /opt/zephyr-sdk-0.10.3/nios2-zephyr-elf/nios2-zephyr-elf/include/c++/8.3.0/bits/refwrap.h
* #18685 - [Coverity CID :203621]Parse warnings in /opt/zephyr-sdk-0.10.3/nios2-zephyr-elf/nios2-zephyr-elf/include/c++/8.3.0/bits/refwrap.h
* #18684 - [Coverity CID :203620]Parse warnings in /opt/zephyr-sdk-0.10.3/nios2-zephyr-elf/nios2-zephyr-elf/include/c++/8.3.0/bits/refwrap.h
* #18683 - [Coverity CID :190988]Memory - illegal accesses in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/drivers/imx/fsl_elcdif.c
* #18682 - [Coverity CID :190984]Memory - illegal accesses in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/drivers/imx/fsl_elcdif.c
* #18681 - [Coverity CID :190979]Memory - illegal accesses in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/drivers/imx/fsl_elcdif.c
* #18680 - [Coverity CID :190959]Memory - illegal accesses in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/drivers/imx/fsl_elcdif.c
* #18679 - [Coverity CID :198643]Incorrect expression in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/MKE18F16/fsl_clock.c
* #18678 - [Coverity CID :198642]Incorrect expression in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/MKE18F16/fsl_clock.c
* #18677 - [Coverity CID :198641]Incorrect expression in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/MKE18F16/fsl_clock.c
* #18676 - [Coverity CID :190994]Incorrect expression in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/MK64F12/fsl_clock.c
* #18675 - [Coverity CID :190982]Incorrect expression in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/MK64F12/fsl_clock.c
* #18674 - [Coverity CID :190962]Incorrect expression in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/MK64F12/fsl_clock.c
* #18673 - [Coverity CID :190947]Incorrect expression in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/MK64F12/fsl_clock.c
* #18672 - [Coverity CID :198948]Control flow issues in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/LPC55S69/fsl_clock.c
* #18671 - [Coverity CID :198947]Integer handling issues in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/LPC55S69/fsl_clock.c
* #18670 - [Coverity CID :182600]Integer handling issues in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/LPC54114/fsl_clock.c
* #18669 - [Coverity CID :158891]Memory - illegal accesses in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/components/phyksz8081/fsl_phy.c
* #18668 - [Coverity CID :203544]Integer handling issues in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nordic/nrfx/drivers/src/nrfx_usbd.c
* #18667 - [Coverity CID :203513]Integer handling issues in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nordic/nrfx/drivers/src/nrfx_usbd.c
* #18666 - [Coverity CID :203506]Integer handling issues in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nordic/nrfx/drivers/src/nrfx_usbd.c
* #18665 - [Coverity CID :203436]Memory - illegal accesses in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nordic/nrfx/drivers/src/nrfx_usbd.c
* #18664 - [Coverity CID :203416]Uninitialized variables in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/fs/littlefs/lfs.c
* #18663 - [Coverity CID :203413]Null pointer dereferences in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/fs/littlefs/lfs.c
* #18662 - [Coverity CID :61908]Insecure data handling in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/crypto/mbedtls/library/ssl_tls.c
* #18658 - Bluetooth BR/EDR encryption key negotiation vulnerability
* #18654 - cc3220sf_launchxl fails tests/kernel/interrupt/arch.interrupt
* #18645 - Disconnect because of data packets during encryption procedure
* #18615 - sam e70 xplained failed to build hello world
* #18599 - tests/kernel/fifo/fifo_timeout fails on cc3220sf_launchxl
* #18598 - tests/net/trickle failed on multiple plartforms
* #18595 - USB CDC endless loop with BLE on NRF52
* #18593 - tests/arch/arm/arm_zero_latency_irqs fails on cc3220sf_launchxl
* #18592 - (nRF51) The RSSI signal does not rise above -44 dBm
* #18590 - tests/kernel/fatal/kernel.common.stack_sentinel fails on FRDM-KW41Z
* #18587 - tests/kernel/fifo/fifo_timeout/kernel.fifo.timeout fails to run on lpcxpresso54114_m4
* #18584 - BT LL assert on LL/CON/ADV/BV-04-C
* #18580 - Bluetooth: Security fail on initial pairing
* #18574 - Some platforms: “reel_board”, “frdm_k64f” and “sam_e70_xplained”  are be built failure
* #18572 - Bluetooth: GATT: Unable to indicate by UUID
* #18563 - log_strdup missing error messages seen when running wifi sample
* #18547 - Bluetooth: GATT: Fix using variable size storage for CCC
* #18546 - Hard Fault when connecting to BLE device
* #18524 - No disconnection event during ""heavy"" indication stream
* #18522 - BLE: Mesh: When transport send seg_msg to LPN
* #18521 - BLE: Mesh: when friend send msg to LPN
* #18508 - tests/net/trickle failed on frdm_k64f board
* #18476 - Custom module with west
* #18462 - potential buffer overrun in logging infrastructure
* #18461 - [Coverity CID :203487]Parse warnings in /usr/lib/gcc/x86_64-redhat-linux/8/include/stdint-gcc.h
* #18460 - [Coverity CID :203527]Parse warnings in /usr/include/unistd.h
* #18459 - [Coverity CID :203509]Null pointer dereferences in /tests/subsys/usb/desc_sections/src/desc_sections.c
* #18458 - [Coverity CID :203422]Memory - illegal accesses in /tests/subsys/fs/littlefs/src/testfs_util.c
* #18457 - [Coverity CID :203419]Security best practices violations in /tests/net/traffic_class/src/main.c
* #18456 - [Coverity CID :203401]Security best practices violations in /tests/net/traffic_class/src/main.c
* #18455 - [Coverity CID :203490]Error handling issues in /tests/net/socket/net_mgmt/src/main.c
* #18454 - [Coverity CID :203499]Null pointer dereferences in /tests/net/icmpv6/src/main.c
* #18453 - [Coverity CID :203480]Null pointer dereferences in /tests/net/context/src/main.c
* #18446 - [Coverity CID :203532]Incorrect expression in /tests/kernel/sched/schedule_api/src/user_api.c
* #18445 - [Coverity CID :203507]Error handling issues in /tests/kernel/mutex/sys_mutex/src/main.c
* #18444 - [Coverity CID :203516]Memory - corruptions in /tests/kernel/mem_protect/userspace/src/main.c
* #18443 - [Coverity CID :203454]Error handling issues in /tests/kernel/mem_protect/sys_sem/src/main.c
* #18442 - [Coverity CID :203465]Memory - corruptions in /tests/kernel/mem_protect/protection/src/main.c
* #18439 - [Coverity CID :203437]Incorrect expression in /tests/kernel/fp_sharing/float_disable/src/k_float_disable.c
* #18438 - [Coverity CID :203407]Incorrect expression in /tests/kernel/fp_sharing/float_disable/src/k_float_disable.c
* #18437 - [Coverity CID :203478]Program hangs in /tests/kernel/common/src/sflist.c
* #18436 - [Coverity CID :203424]Control flow issues in /tests/kernel/common/src/sflist.c
* #18434 - [Coverity CID :203486]Memory - corruptions in /tests/bluetooth/uuid/src/main.c
* #18433 - [Coverity CID :203431]Memory - corruptions in /tests/bluetooth/uuid/src/main.c
* #18432 - [Coverity CID :203502]Error handling issues in /tests/bluetooth/tester/src/gap.c
* #18431 - [Coverity CID :203391]Null pointer dereferences in /tests/bluetooth/gatt/src/main.c
* #18430 - [Coverity CID :203540]Incorrect expression in /tests/arch/arm/arm_zero_latency_irqs/src/arm_zero_latency_irqs.c
* #18429 - [Coverity CID :203525]Incorrect expression in /tests/arch/arm/arm_thread_swap/src/arm_thread_arch.c
* #18428 - [Coverity CID :203479]Incorrect expression in /tests/arch/arm/arm_thread_swap/src/arm_thread_arch.c
* #18427 - [Coverity CID :203392]Incorrect expression in /tests/arch/arm/arm_thread_swap/src/arm_thread_arch.c
* #18426 - [Coverity CID :203455]Incorrect expression in /tests/arch/arm/arm_ramfunc/src/arm_ramfunc.c
* #18424 - [Coverity CID :203489]Memory - corruptions in /tests/application_development/gen_inc_file/src/main.c
* #18423 - [Coverity CID :203473]Null pointer dereferences in /subsys/usb/usb_descriptor.c
* #18421 - [Coverity CID :203504]Uninitialized variables in /subsys/net/lib/sockets/sockets_net_mgmt.c
* #18420 - [Coverity CID :203468]Control flow issues in /subsys/net/lib/sockets/sockets_net_mgmt.c
* #18419 - [Coverity CID :203397]Control flow issues in /subsys/net/lib/sockets/sockets_net_mgmt.c
* #18418 - [Coverity CID :203445]Error handling issues in /subsys/net/lib/sockets/getnameinfo.c
* #18417 - [Coverity CID :203501]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_timer.c
* #18416 - [Coverity CID :203475]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_timer.c
* #18415 - [Coverity CID :203420]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_timer.c
* #18414 - [Coverity CID :203496]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_push_button.c
* #18413 - [Coverity CID :203488]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_push_button.c
* #18412 - [Coverity CID :203482]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_push_button.c
* #18411 - [Coverity CID :203450]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_onoff_switch.c
* #18410 - [Coverity CID :203448]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_onoff_switch.c
* #18409 - [Coverity CID :203427]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_onoff_switch.c
* #18408 - [Coverity CID :203533]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_light_control.c
* #18407 - [Coverity CID :203519]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_light_control.c
* #18406 - [Coverity CID :203511]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_buzzer.c
* #18405 - [Coverity CID :203426]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_buzzer.c
* #18404 - [Coverity CID :203414]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_buzzer.c
* #18403 - [Coverity CID :203539]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_accelerometer.c
* #18402 - [Coverity CID :203530]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_accelerometer.c
* #18401 - [Coverity CID :203438]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_accelerometer.c
* #18400 - [Coverity CID :203483]Control flow issues in /subsys/net/lib/conn_mgr/events_handler.c
* #18399 - [Coverity CID :203457]Control flow issues in /subsys/net/l2/ppp/lcp.c
* #18398 - [Coverity CID :203514]Control flow issues in /subsys/net/l2/ppp/ipv6cp.c
* #18397 - [Coverity CID :203512]Memory - corruptions in /subsys/net/l2/ppp/ipv6cp.c
* #18396 - [Coverity CID :203435]Error handling issues in /subsys/net/l2/ppp/fsm.c
* #18395 - [Coverity CID :203471]Memory - corruptions in /subsys/net/l2/ethernet/gptp/gptp_mi.c
* #18394 - [Coverity CID :203464]Memory - corruptions in /subsys/net/l2/ethernet/gptp/gptp_mi.c
* #18393 - [Coverity CID :203541]Integer handling issues in /subsys/net/ip/6lo.c
* #18392 - [Coverity CID :203494]Integer handling issues in /subsys/fs/littlefs_fs.c
* #18391 - [Coverity CID :203403]Memory - corruptions in /subsys/disk/disk_access_usdhc.c
* #18390 - [Coverity CID :203441]Null pointer dereferences in /subsys/bluetooth/mesh/transport.c
* #18389 - [Coverity CID :203396]Null pointer dereferences in /subsys/bluetooth/mesh/access.c
* #18388 - [Coverity CID :203545]Memory - corruptions in /subsys/bluetooth/host/smp.c
* #18387 - [Coverity CID :203536]Memory - corruptions in /subsys/bluetooth/host/smp.c
* #18385 - [Coverity CID :203534]Memory - corruptions in /subsys/bluetooth/host/hci_core.c
* #18384 - [Coverity CID :203495]Control flow issues in /subsys/bluetooth/host/gatt.c
* #18383 - [Coverity CID :203447]Memory - corruptions in /subsys/bluetooth/host/att.c
* #18382 - [Coverity CID :203524]Incorrect expression in /subsys/bluetooth/controller/ticker/ticker.c
* #18381 - [Coverity CID :203393]Control flow issues in /subsys/bluetooth/controller/ll_sw/ull_conn.c
* #18380 - [Coverity CID :203461]Null pointer dereferences in /subsys/bluetooth/controller/ll_sw/ull.c
* #18379 - [Coverity CID :203493]Control flow issues in /soc/arm/st_stm32/stm32h7/soc_m7.c
* #18377 - [Coverity CID :203535]Error handling issues in /samples/net/sockets/civetweb/src/main.c
* #18376 - [Coverity CID :203462]Error handling issues in /samples/net/sockets/civetweb/src/main.c
* #18375 - [Coverity CID :203440]Null pointer dereferences in /samples/net/nats/src/main.c
* #18374 - [Coverity CID :203523]Error handling issues in /samples/drivers/counter/alarm/src/main.c
* #18372 - [Coverity CID :203543]Memory - illegal accesses in /samples/bluetooth/eddystone/src/main.c
* #18371 - [Coverity CID :203542]Error handling issues in /lib/posix/pthread.c
* #18370 - [Coverity CID :203469]Memory - corruptions in /drivers/wifi/eswifi/eswifi_core.c
* #18369 - [Coverity CID :203425]Memory - corruptions in /drivers/wifi/eswifi/eswifi_core.c
* #18368 - [Coverity CID :203411]Memory - corruptions in /drivers/wifi/eswifi/eswifi_core.c
* #18367 - [Coverity CID :203409]Memory - corruptions in /drivers/wifi/eswifi/eswifi_core.c
* #18366 - [Coverity CID :203452]Control flow issues in /drivers/timer/xlnx_psttc_timer.c
* #18365 - [Coverity CID :203434]Control flow issues in /drivers/timer/xlnx_psttc_timer.c
* #18364 - [Coverity CID :203467]Memory - corruptions in /drivers/sensor/lis2dh/lis2dh_trigger.c
* #18363 - [Coverity CID :203492]Memory - corruptions in /drivers/net/ppp.c
* #18362 - [Coverity CID :203412]Control flow issues in /drivers/net/ppp.c
* #18361 - [Coverity CID :203515]Uninitialized variables in /drivers/flash/flash_stm32l4x.c
* #18360 - [Coverity CID :203531]Memory - corruptions in /drivers/espi/espi_mchp_xec.c
* #18359 - [Coverity CID :203521]Memory - illegal accesses in /drivers/espi/espi_mchp_xec.c
* #18358 - [Coverity CID :203497]Memory - corruptions in /drivers/espi/espi_mchp_xec.c
* #18357 - [Coverity CID :203485]Memory - illegal accesses in /drivers/espi/espi_mchp_xec.c
* #18356 - [Coverity CID :203430]Integer handling issues in /drivers/espi/espi_mchp_xec.c
* #18355 - [Coverity CID :203466]Memory - illegal accesses in /drivers/can/can_mcux_flexcan.c
* #18354 - [Coverity CID :203449]Memory - illegal accesses in /boards/posix/native_posix/cmdline_common.c
* #18353 - [Coverity CID :203522]Null pointer dereferences in /arch/arm/core/cortex_m/fault.c
* #18352 - devicetree: support multiple values in io-channels
* #18334 - DNS resolution is broken for some addresses in master/2.0-pre
* #18326 - Bluetooth: Mesh: LPN: Remove msg from cache on rejection Enhancement
* #18320 - tests/drivers/can/api/peripheral.can fail on FRDM-K64F
* #18306 - Unable to reconnect paired devices with controller privacy disabled (host privacy enabled)
* #18301 - menuconfig target can corrupt build configuration
* #18298 - Unable to build mesh-demo for BBC micro:bit
* #18292 - tests/net/lib/dns_addremove failed on frdm_k64f board.
* #18284 - tests/kernel/fp_sharing/float_disable and tests/kernel/mutex/mutex_api and tests/kernel/sleep  fails on twr_ke18f
* #18283 - tests/crypto/tinycrypt_hmac_prng and tests/crypto/mbedtls  and tests/posix/fs  build failure on mimxrt1015_evk
* #18281 - tests/kernel/mem_protect/protection fails on LPC54114_m4
* #18272 - xtensa ASM2 has no support for dynamic interrupts
* #18269 - Documentation improvement for macOS
* #18263 - flash sector erase fails on stm32f412
* #18261 - CONFIG_TIMESLICING=n breaks kernel
* #18258 - sys_get_be64() is missing from sys/byteorder.h
* #18253 - Network samples echo_client doesn't work if only IPv4 enabled.
* #18246 - Build failures with current tree
* #18238 - drivers/modem/modem_socket: modem_socket_put() sock_fd parameter not handled correctly
* #18232 - drivers: can: mcux: TX callback and can_detach don't work propperly
* #18231 - MCUBoot not cleaning up properly before booting Zephyr?
* #18228 - stm32h747i_disco: Fix SYS_CLOCK_TICKS_PER_SEC
* #18212 - README file missing for civetweb sample
* #18205 - tests/net/socket/udp fails when code coverage is enabled on qemu_x86
* #18202 - Disable Duplicate scan, no longer available
* #18201 - bug: west flash with --hex-file param used to work w/o path specified
* #18198 - SDK 0.10.2 rv32m1_vega samples/subsys/logging/logger build fails
* #18194 - [zephyr 1.14][MESH/NODE/CFG/HBP/BV-05-C] Zephyr does not send Heartbeat message on friendship termination
* #18188 - [zephyr 1.14] Re-enabling CCC gets broken when used along with Robust Caching
* #18183 - [zephyr 1.14][GATT/SR/GAS/BV-07-C] GATT Server does not inform change-unaware client about DB changes
* #18181 - Some platforms(e.g. sam_e70_xplained) will be flashed failure if the platforms have not generated HEX file although they are built successfully.
* #18178 - BLE Mesh When Provisioning Use Input OOB Method
* #18171 - gen_defines creates identical labels for multicell pwms definition
* #18155 - i2c_ll_stm32_v1: I2C_CR1:STOP is not cleared
* #18154 - Qemu: mps2+: missing documentation
* #18150 - [zephyr 1.14] Host does not change the RPA
* #18141 - arc: the caculation of exception stack is wrong
* #18140 - xtensa passes NULL esf on fatal error
* #18132 - getting_started should indicate upgrade rather than just install west
* #18131 - devicetree should check input against declared type
* #18092 - Assert in BT controller on RPA timeout
* #18090 - [zephyr 1.14][MESH/NODE/FRND/FN/BV-08-C] Mesh Friend queues more messages than indicates it's Friend Cache
* #18080 - LWM2M bootstrap issue
* #18059 - k_busy_wait passed milliseconds instead of microseconds
* #18052 - z_fatal_error missing log_strdup
* #18048 - [zephyr 1.14] Zephyr with privacy does not disconnect device with unresolvable RPA
* #18042 - Only corporate members can join the slack channel
* #18034 - It's impossible to build Zephyr via cmake/make with west 0.6.0 installed
* #18029 - why kconfiglib.py doesn't throw error for file drivers/serial/Kconfig.nrfx
* #18021 - Socket vtable can access null pointer callback function
* #18019 - BT scan via shell fatal error
* #18013 - BLE Mesh On Net Buffer free issue
* #18011 - arc:  the offset generation of accl_regs is wrong
* #18009 - Dead link in documentation
* #18005 - BLE Mesh When Friend Clear Procedure Timeout
* #18002 - Flash using open source stlink, instead of SEGGER jlink?
* #17997 - fix extern ""C"" use throughout Zephyr
* #17996 - BUILD_ASSERT not active in three of five shippable platforms
* #17990 - BLE Mesh When IV update test procedure
* #17979 - Security level cannot be elevated after re-connection with privacy
* #17977 - BLE Mesh When IV Update Procedure
* #17971 - [zephyr 1.14] Unable to register GATT service that was unregistered before
* #17967 - drivers/pwm/pwm_api test failed on frdm_k64f board.
* #17965 - kernel/sleep/ test failed on reel_board.
* #17962 - BLE Mesh Recommended memory allocation due to who is assigned who releases the strategy
* #17956 - Is POSIX I/O supported on peripheral?
* #17951 - RFC: update FS API for readdir consistency
* #17948 - Bluetooth: privacy: Reconnection issue
* #17944 - [zephyr 1.14]  LE Enhanced Connection Complete indicates Resolved Public once connected to Public peer address
* #17936 - Bluetooth: Mesh: The canceled buffer is not free, causing a memory leak
* #17932 - BLE Mesh When Friend Send Seg Message To LPN
* #17926 - CAN | nrf52 | device tree error: zephyrproject/zephyr/dts/bindings/can/microchip,mcp2515.yaml (in 'reg'): 'category' from !included file overwritten ('required' replaced with 'optional')
* #17923 - SPI1 on nrf52_pca10040 is dead by default
* #17922 - Driver: modem helper should make it easier to implement a modem
* #17920 - Bluetooth: Security problem
* #17907 - BLE Mesh when resend use GATT bearer
* #17899 - tests/kernel/mem_protect/stackprot/kernel.memory_protection fails on nsim_em
* #17897 - k_busy_wait not working when using 32KHz timer driver
* #17891 - fs/nvs: nvs_init can hang if no nvs_ate available
* #17882 - [zephyr 1.14]  Database Out of Sync error is not returned as expected
* #17880 - Unable to re-connect to privacy enabled peer when using stack generated Identity
* #17876 - BME680 sensor sample not building
* #17870 - Incorrect report received lenght and offset in async API
* #17869 - Unlocking nested k_sched_lock() cause forced preemption
* #17864 - cpp_synchronization sample not working on nucleo_l476rg
* #17861 - Tester application lacks BTP Discover All Primary Services handler
* #17857 - GATT: Incorrect byte order for GATT database hash
* #17853 - kernel panic in tests/kernel/sched/schedule_api
* #17851 - riscv/m2gl025: timer tests broken
* #17843 - Bluetooth: controller: v1.14.x release conformance test failures
* #17821 - Mesh Bug on access.c
* #17820 - Mesh  bug report In access.c
* #17816 - LVGL V5.3 build error if CONFIG_LVGL_COLOR_16_SWAP=y
* #17812 - pthread_cond_timedwait interprets timeout wrong
* #17809 - Bluetooth Mesh message cached too early when LPN
* #17802 - [zephyr 1.14] Address type 0x02 is used by LE Create Connection in device privacy mode
* #17800 - Bluetooth: GATT: Write Without Reponse to invalid handle asserts
* #17794 - Timeutil_api test fails with sanitycheck on iotdk board.
* #17790 - MEC1501 configure warnings in eSPI (dts)
* #17789 - Bluetooth: host: conn.c missing parameter copy
* #17787 - openocd unable to flash hello_world to cc26x2r1_launchxl
* #17784 - failing network tests with code coverage enabled in qemu_x86 not failing when run with gdb
* #17783 - network tests failing with code coverage enabled in qemu_x86 (coverage.c)
* #17782 - network tests failing with 'unexpected eof' with code coverage enabled in qemu_x86 (TSS)
* #17778 - Microchip XEC rtos Timer breaks gpios and k_sleep?
* #17772 - Compilation error of soc/arm/nxp_imx/rt/soc.c
* #17764 - Broken link to latest development version of docs
* #17751 - build is broken for mec15xxevb_assy6853
* #17738 - STATIC_ASSERT no longer defined when CONFIG_NEWLIB_LIBC is enabled
* #17732 - cannot use bt_conn_security in connected callback
* #17727 - how to make zephyr as a ble mesh provisioner to other BLE based board having ble mesh
* #17726 - How to make Zephyr as a ble mesh provisioner ?
* #17723 - Advertiser never clears state flags
* #17715 - Missing 'reg-names' string in riscv32-litex-vexriscv.dtsi
* #17703 - Add prop 'clock-frequency' to STM32  targets
* #17697 - usb_dc_nrfx driver gets stuck after USB3CV HID Tests are performed on hid sample
* #17692 - Proper way for joining a multicast group (NRF52840/OpenThread)
* #17690 - samples/subsys/shell/fs does not work?
* #17671 - ADC not supported by nrf52840_pca10059 DTS file
* #17665 - Missing 'label' on most nodes with 'compatible = ""pwm-leds""'
* #17664 - Missing 'clocks' on most nodes with 'compatible = ""nxp,kinetis-usbd""'
* #17663 - Missing 'label' on most nodes with 'compatible = ""fixed-clock""'
* #17662 - Missing 'label' on nodes with 'compatible = ""jedec,spi-nor""'
* #17657 - subsis/disk/disk_access_spi_sdhc: response data eaten by idle byte consumption
* #17650 - devicetree: missing preferred instance presence macro
* #17635 - UnicodeDecodeError is raised while executing west build
* #17630 - efr32mg_sltb004a tick clock error
* #17613 - POSIX arch: occasional failures of tests/kernel/sched/schedule_api on CI
* #17608 - NMP timeout when uploading image with mcumgr over BLE under Linux
* #17600 - Enable Mesh Friend support in Bluetooth tester application
* #17595 - two userspace tests fail if stack canaries are enabled in board configuration
* #17591 - ARM: z_arch_except() is too permissive in user mode
* #17590 - ARC: unable to induce kernel_oops or stack check fail errors from user mode
* #17586 - stack canary storage area should be read-only to user mode?
* #17584 - k_mutex is not SMP-safe
* #17581 - linker script packing failure with subsys/fb fonts and native_posix_64
* #17564 - Missing 'stdlib.h' include when C++ standard library is used.
* #17559 - Assertion failed: zephyr toolchain variant invalid
* #17557 - samples/net/wifi fails to build on cc3220sf_launchxl
* #17555 - CONFIG_LOG doesn't work on x86_64 due to no working backends
* #17554 - pyocd flash does not support the -b option for board ID so that the sanitycheck script can’t specified the board ID to flash when the host connected with multiple boards.
* #17550 - SimpleLink WiFi host driver should revert back to using static memory model
* #17547 - incorrect documentation for debugging nsim_em / nsim_sem
* #17543 - dtc version 1.4.5 with ubuntu 18.04 and zephyr sdk-0.10.1
* #17534 - Race condition in GATT API.
* #17532 - List of missing device tree properties with 'category: required' in the binding for the node
* #17525 - L2CAP: On insufficient authentication error received, Zephyr does unauthenticated pairing
* #17511 - _bt_br_channels_area  section missing in sanitycheck whitelist
* #17508 - RFC: Change/deprecation in display API
* #17507 - system timer drivers using the ""new"" API should not be configured with CONFIG_TICKLESS_KERNEL
* #17497 - Bluetooth: Mesh: How to Write provision and configure data to flash?
* #17488 - CDC_ACM USB on nRF device fails after suspend
* #17487 - v1.14-branch: SDK 0.10.1 support?
* #17486 - nRF52: SPIM: Errata work-around status?
* #17485 - sanitycheck: Over-zealous checking for binary sections
* #17483 - mec15xxevb_assy6853 board documentation is erroneous
* #17480 - holyiot_yj16019 cannot compile IEEE 802.15.4 L2
* #17478 - net/buf test fails for qemu_x86_64
* #17475 - [RTT] compile error when RTT console enabled
* #17463 - Bluetooth: API limits usage of MITM flags in Pairing Request
* #17460 - sample: gui/lvgl
* #17450 - net: IPv6/UDP datagram with unspecified addr and zero hop limit causes Zephyr to quit
* #17439 - sanitycheck: nrf52840-pca10056 (dev kit) picks up sample/drivers items which will fail due to missing HW
* #17427 - net: IPv4/UDP datagram with zero src addr and TTL causes Zephyr to segfault
* #17419 - arch:arc: remove the extra vairables used in irq and exception handling
* #17415 - Settings Module - settings_line_val_read() returning -EINVAL instead of 0 for deleted setting entries
* #17410 - k_work should have a user_data field
* #17408 - LwM2M: engine doesn't support offloaded TLS stack
* #17401 - LwM2M: requires that CONFIG_NET_IPV* be enabled (can't use 100% offloaded IP stack)
* #17399 - LwM2M: Can't use an alternate mbedtls implementation
* #17381 - DTS compatible property processing assumes specific driver exists
* #17379 - Wrong hex file generated for MCUboot
* #17378 - samples: net: echo-server: no return packet
* #17376 - device tree diagnostic failure in enum
* #17368 - Time Slicing cause system sleep short time
* #17366 - Regression: sanitycheck coverage generation defaults will error out for POSIX arch targets
* #17365 - Documentation: sanitycheck coverage generation instructions lead to errors and no coverage report for POSIX boards
* #17363 - SPI driver does not reset master mode fault on STM32
* #17353 - Configuring with POSIX_API disables NET_SOCKETS_POSIX_NAMES
* #17342 - CODEOWNERS is broken (III)
* #17340 - Bluetooth Mesh: Unable to receive messages when RPL is full.
* #17338 - kernel objects address check in elf_helper.py
* #17313 - drivers: usb_dc_mcux_ehci does not compile
* #17307 - device tree bindings disallow strings that begin with integers
* #17294 - DB corruption when adding/removing service
* #17288 - Bluetooth: controller: Fix handling of L2CAP start frame with zero PDU length
* #17284 - unrecognized binary sections: ['_settings_handlers_area']
* #17281 - sanitycheck error on mimxrt1050_evk samples/gui/lvgl/sample.gui.lvgl with no network connection
* #17280 - How to use UART1 for nrf52_pca10040
* #17277 - no code coverage for k_float_disable() in user mode
* #17266 - CDC_ACM USB not recognized by windows as serial port
* #17262 - insufficient code coverage for lib/os/base64.c
* #17251 - w25q: erase operations must be erase-size aligned
* #17250 - After first GC operation the 1st sector had become scratch and the 2nd sector had became write sector.
* #17231 - Posix filesystem wrapper leaks internal FS desc structures
* #17226 - [Coverity CID :61894]Security best practices violations in /home/aasthagr/zephyrproject/modules/crypto/mbedtls/library/rsa.c
* #17225 - [Coverity CID :61905]Insecure data handling in /home/aasthagr/zephyrproject/modules/crypto/mbedtls/library/ssl_cli.c
* #17224 - [Coverity CID :78542]Null pointer dereferences in /home/aasthagr/zephyrproject/modules/crypto/mbedtls/library/rsa.c
* #17223 - [Coverity CID :149311]Control flow issues in /home/aasthagr/zephyrproject/modules/crypto/mbedtls/library/cipher.c
* #17222 - [Coverity CID :173947]Uninitialized variables in /home/aasthagr/zephyrproject/modules/lib/mcumgr/cborattr/src/cborattr.c
* #17221 - [Coverity CID :173979]Control flow issues in /home/aasthagr/zephyrproject/modules/lib/tinycbor/src/cborparser.c
* #17220 - [Coverity CID :173986]Control flow issues in /home/aasthagr/zephyrproject/modules/lib/mcumgr/cborattr/src/cborattr.c
* #17219 - [Coverity CID :174014]Incorrect expression in /home/aasthagr/zephyrproject/modules/lib/tinycbor/src/cborparser.c
* #17218 - [Coverity CID :186031]Control flow issues in /home/aasthagr/zephyrproject/modules/lib/mcumgr/cmd/fs_mgmt/src/fs_mgmt.c
* #17217 - [Coverity CID :186038]Control flow issues in /home/aasthagr/zephyrproject/modules/lib/mcumgr/cmd/img_mgmt/src/img_mgmt.c
* #17216 - [Coverity CID :186052]Control flow issues in /home/aasthagr/zephyrproject/modules/lib/mcumgr/cmd/fs_mgmt/src/fs_mgmt.c
* #17215 - [Coverity CID :186054]Control flow issues in /home/aasthagr/zephyrproject/modules/lib/mcumgr/cmd/img_mgmt/src/img_mgmt_state.c
* #17214 - [Coverity CID :186060]Control flow issues in /home/aasthagr/zephyrproject/modules/lib/mcumgr/cmd/img_mgmt/src/img_mgmt_state.c
* #17213 - [Coverity CID :186188]Memory - illegal accesses in /home/aasthagr/zephyrproject/modules/lib/open-amp/open-amp/lib/rpmsg/rpmsg.c
* #17212 - [Coverity CID :187076]Control flow issues in /home/aasthagr/zephyrproject/modules/hal/silabs/gecko/emlib/src/em_cmu.c
* #17211 - [Coverity CID :188746]Memory - illegal accesses in /home/aasthagr/zephyrproject/modules/hal/cypress/PDL/3.1.0/drivers/source/cy_syslib.c
* #17210 - [Coverity CID :190643]Error handling issues in /home/aasthagr/zephyrproject/modules/debug/segger/systemview/SEGGER_SYSVIEW.c
* #17209 - [Coverity CID :190927]Uninitialized variables in /home/aasthagr/zephyrproject/modules/lib/open-amp/open-amp/lib/remoteproc/remoteproc.c
* #17208 - [Coverity CID :190941]Insecure data handling in /home/aasthagr/zephyrproject/modules/crypto/mbedtls/library/ssl_tls.c
* #17207 - [Coverity CID :190963]Code maintainability issues in /home/aasthagr/zephyrproject/modules/fs/nffs/src/nffs_restore.c
* #17206 - [Coverity CID :190975]Memory - illegal accesses in /home/aasthagr/zephyrproject/modules/lib/open-amp/open-amp/lib/include/openamp/rpmsg.h
* #17205 - [Coverity CID :190999]Insecure data handling in /home/aasthagr/zephyrproject/modules/lib/open-amp/open-amp/lib/rpmsg/rpmsg_virtio.c
* #17204 - [Coverity CID :191000]Memory - corruptions in /home/aasthagr/zephyrproject/modules/lib/open-amp/open-amp/lib/remoteproc/remoteproc.c
* #17203 - [Coverity CID :198951]Code maintainability issues in /home/aasthagr/zephyrproject/modules/debug/segger/systemview/SEGGER_SYSVIEW.c
* #17202 - [Coverity CID :199436]Uninitialized variables in /subsys/net/lib/sockets/sockets.c
* #17201 - [Coverity CID :199437]Null pointer dereferences in /tests/net/ip-addr/src/main.c
* #17200 - [Coverity CID :199438]Memory - illegal accesses in /drivers/interrupt_controller/exti_stm32.c
* #17190 - net-mgmt should pass info element size to callback
* #17188 - k_uptime_delta returns wrong times
* #17182 - ""tests/subsys/usb/device/"" fails on reel_board.
* #17177 - ARM: userspace/test_bad_syscall fails on ARMv8-M
* #17176 - deprecated counter_set_alarm is referenced in documentation
* #17172 - insufficient code coverage for lib/os/mempool.c
* #17170 - x86_64 crash with spinning child thread
* #17167 - ARC crash with spinning user thread
* #17166 - arch/x86: eliminate support for CONFIG_REALMODE
* #17158 - Bluetooth: Update PICS for latest PTS 7.4.1
* #17147 - UARTE device has no API when run on nrf52810
* #17114 - drivers: usb_dc_stm32 broken after west update
* #17111 - nucleo_f030r8 build error
* #17095 - Building with Xtensa toolchain fails
* #17092 - Bluetooth: GAP/IDLE/NAMP/BV-01-C requires Read by UUID
* #17065 - Misspelled CONFIG use in is_rodata() for CONFIG_RISCV32
* #17063 - tests/kernel/tickless/tickless_concept (qemu_x86) fails even outside of CI
* #17057 - Bluetooth: Mesh: Implementation doesn't conform to latest errata and 1.0.1 version
* #17055 - net: Incorrect data length after the connection is established
* #17053 - Bluetooth Mesh: Periodic Publishing
* #17043 - compile ""hello-world"" sample for esp32 board error
* #17041 - [1.14] Bluetooth: Mesh: RPL handling is not in line with the spec
* #17038 - code relocation generating different memory layout cause user mode not working
* #17037 - MQTT with TLS support over SOCKS
* #17031 - Compiler warnings in settings module in Zephyr 1.14
* #17017 - #16827 Breaks Ethernet on FRDM-K64F
* #17015 - #15910 Breaks Ethernet on STM32F7
* #17013 - Bluetooth: Add error reason to pairing failed callbacks
* #17007 - USB mass demo format fails on frdm_k64f
* #16989 - Errors when building application in Eclipse
* #16971 - DFU supported for hci_uart sample ?
* #16946 - characteristic value handle vs characteristic handle
* #16944 - Insufficient test coverage for lib/os/json.c
* #16943 - Missing test coverage for lib/os/crc*.c
* #16934 - drivers: flash: stm32l4: Erase wait time is not enough
* #16931 - logging: Assertion when in panic mode
* #16926 - NXP LPC54102（LPC54114）: question about dual core(M4 and M0) running on flash
* #16924 - Add DNS server added/removed events to net_mgmt
* #16915 - stack_sentinel: rare ASSERTION FAIL [!(z_arch_curr_cpu()->nested != 0U)] @ ZEPHYR_BASE/kernel/thread.c:429  Threads may not be created in ISRs
* #16911 - tests/kernel/sched/schedule_api crash on qemu_x86_64 with SCHED_MULTIQ enabled
* #16907 - native_posix build fails with X86_64 on macOS
* #16901 - No test coverage for CONFIG_ZERO_LATENCY_IRQS
* #16899 - fs/nvs: might loop-up if storage was not erased before first run
* #16898 - bluetooth stack change affects timer behavior
* #16894 - ARM: alignment problems in libc/newlib
* #16893 - Bluetooth: Multiple local IDs, privacy problem
* #16887 - ARM: threads' privilege stack alignment is not optimal
* #16872 - Bluetooth: LL: Peripheral crashes after a while with multiple Centrals
* #16864 - Bluetooth: Mesh: Rx buffer exhaustion causes deadlock
* #16862 - arc: -mfpu=fpuda_all is not set when CONFIG_FLOAT is configured
* #16861 - nRF52: UARTE: Data corruption right after resuming device
* #16830 - Bluetooth: controller: Follow up on ticker conflict resolution
* #16823 - k_busy_wait() on nRF5x boards isn't waiting long enough
* #16803 - Deferred bt_conn_tx causes sysworkq deadlock
* #16799 - Bluetooth: L2CAP: Interpretation of SCID and DCID in Disconnect is wrong
* #16797 - [Zephyr v1.14.0] stm32: MCUboot bootloader results in Hardware exception
* #16793 - kernel timeout_list repeatedly add a thread
* #16787 - [Coverity CID :198945]Null pointer dereferences in /subsys/bluetooth/controller/ll_sw/ull_conn.c
* #16786 - [Coverity CID :198946]Memory - corruptions in /subsys/bluetooth/host/gatt.c
* #16785 - [Coverity CID :198949]Error handling issues in /tests/net/socket/register/src/main.c
* #16779 - [Zephyr v1.14] ARM: fix the start address of MPU guard in stack-fail checking (when building with no user mode)
* #16778 - Build failures in various mimxrt boards
* #16773 - DTS: generated output for each flash-controller
* #16770 - Complete FP support for ARC
* #16761 - nrf52840 usb driver with openthread
* #16760 - K_THREAD_STACK_EXTERN() confuses gen_kobject_list.py
* #16750 - counter:  lack of interrupt when CC=0
* #16749 - IRQ_CONNECT and irq_enable calls in the SiFive UART driver is misconfigured
* #16747 - bluetooth: peripheral: RX buffer size issues
* #16746 - boards: nrf52840_pca10059: Configure NFC pins as GPIOs by default
* #16745 - PTHREAD_MUTEX_DEFINE(): don't store into the _k_mutex section
* #16739 - spi: stm32: pinmux: default configuration does not opt for low power consumption
* #16734 - Bluetooth: GATT: Writing 1 byte to a CCC access invalid memory
* #16733 - soc/stm32: Remove useless package digit for STM32 SoC Kconfig symbols
* #16720 - drivers/loapic_timer.c is buggy, needs cleanup
* #16716 - soc: stm32: Is the setting of NUM_IRQS in the F3 series wrong?
* #16707 - Problem with k_sleep
* #16695 - code coverage: kernel/device.c
* #16687 - basic disco sample fails
* #16678 - LPN establishment of Friendship never completes if there is no response to the initial Friend Poll
* #16676 - Settings enhancements
* #16672 - nrf: spi: Excess current
* #16670 - Memory reports do not work when Nordic proprietary LL is selected
* #16661 - Symmetric multiprocessing (SMP) for ARC HS cores
* #16639 - eth: pinging frdm k64f eventually leads to unresponsive ethernet device
* #16634 - GATT indicate API inconsistent when using characteristic declaration attribute as argument
* #16631 - SDK_VERSION
* #16624 - Building Grub fails when using gcc9
* #16623 - Building with Openthread fails
* #16607 - Building hello_world fails for xtensa: xt-xcc ERROR parsing -Wno-address-of-packed-member:  unknown flag
* #16606 - Fault in CPU stats
* #16604 - Zephyr fails to build with CPU load measurement enabled
* #16603 - Bluetooth: Gatt Discovery: BT_GATT_DISCOVER_PRIMARY returns all services while BT_GATT_DISCOVER_SECONDARY returns none
* #16602 - Bluetooth: GATT Discovery: Descriptor Discovery by range Seg Fault
* #16600 - Bluetooth: Mesh: Proxy SAR timeout is not implemented
* #16594 - net: dns: Zephyr is unable to unpack mDNS answers produced by another Zephyr node
* #16584 - [Coverity CID :198863]Error handling issues in /subsys/net/lib/sntp/sntp.c
* #16583 - [Coverity CID :198864]Parse warnings in /subsys/logging/log_backend_rtt.c
* #16582 - [Coverity CID :198865]Null pointer dereferences in /drivers/usb/device/usb_dc_stm32.c
* #16581 - [Coverity CID :198866]Null pointer dereferences in /subsys/net/lib/dns/llmnr_responder.c
* #16580 - [Coverity CID :198867]Parse warnings in /tests/subsys/fs/nffs_fs_api/common/nffs_test_system_01.c
* #16579 - [Coverity CID :198868]Parse warnings in /drivers/watchdog/wdt_qmsi.c
* #16578 - [Coverity CID :198869]Parse warnings in /subsys/shell/shell_rtt.c
* #16577 - [Coverity CID :198870]Error handling issues in /subsys/net/lib/lwm2m/lwm2m_obj_firmware_pull.c
* #16576 - [Coverity CID :198871]Parse warnings in /drivers/i2c/i2c_qmsi_ss.c
* #16575 - [Coverity CID :198872]Parse warnings in /tests/subsys/settings/nffs/src/settings_setup_nffs.c
* #16574 - [Coverity CID :198873]Incorrect expression in /tests/drivers/uart/uart_async_api/src/test_uart_async.c
* #16573 - [Coverity CID :198874]Null pointer dereferences in /drivers/usb/device/usb_dc_stm32.c
* #16572 - [Coverity CID :198875]Memory - corruptions in /drivers/flash/flash_simulator.c
* #16571 - [Coverity CID :198876]Parse warnings in /tests/subsys/fs/multi-fs/src/test_nffs.h
* #16570 - [Coverity CID :198877]Null pointer dereferences in /subsys/net/ip/net_if.c
* #16569 - [Coverity CID :198878]Error handling issues in /samples/net/sockets/echo_server/src/tcp.c
* #16568 - [Coverity CID :198879]Parse warnings in /tests/subsys/fs/fat_fs_dual_drive/src/test_fat_mount.c
* #16567 - [Coverity CID :198880]Possible Control flow issues in /samples/net/lwm2m_client/src/lwm2m-client.c
* #16566 - [Coverity CID :198881]Parse warnings in /drivers/serial/uart_qmsi.c
* #16565 - [Coverity CID :198882]Parse warnings in /drivers/console/rtt_console.c
* #16564 - [Coverity CID :198883]Parse warnings in /drivers/gpio/gpio_qmsi_ss.c
* #16563 - [Coverity CID :198884]Parse warnings in /drivers/counter/counter_qmsi_aon.c
* #16524 - FXOS8700 is not well supported in twr_ke18f
* #16519 - USAGE FAULT occurs when i2c_write is called
* #16518 - USB_UART_DTR_WAIT not working on nrf52840_pca10059
* #16508 - tests/subsys/storage/flash_map  Instruction bus error on frdmk64 board
* #16506 - tests/posix/fs missing ff.h
* #16501 - Code Coverage for qemu_x86 is not getting generated due to a build error
* #16493 - [Coverity CID :198640]Resource leaks in /tests/net/socket/register/src/main.c
* #16492 - [Coverity CID :198644]Incorrect expression in /tests/drivers/uart/uart_async_api/src/test_uart_async.c
* #16487 - tests/kernel/timer/timer_api/kernel.timer  sporadically (high frequency) fails in CI on qemu-xtensa
* #16483 - net: ipv6: udp: Zephyr replies to datagram with illegal checksum 0
* #16478 - Bluetooth: Improper bonded peers handling
* #16470 - Superfluous USB suspend after USB configured
* #16463 - tests/subsys/settings/fcb_init fails on second run
* #16453 - sockets: getaddrinfo: AF_UNSPEC handling was recently broken
* #16432 - Weird link error of the console sample!
* #16428 - samples/gui/lvgl does not work on PCA10056
* #16426 - Missing included dependencies in many header files
* #16419 - Bluetooth: XTAL feature regression
* #16418 - drivers: watchdog: sam0: check if timeout is valid
* #16417 - issues with can filter mode set
* #16416 - sram size for RT1015 and RT1020 needs to be update.
* #16415 - Build errors with C++
* #16414 - Backport west build --pristine
* #16413 - Missing dependency in cmake
* #16412 - on reel_board the consumption increases because TX pin is floating
* #16411 - bad regex for west version check in host-tools.cmake
* #16389 - ninja flash to intel quark d2000 zephyr
* #16387 - STM32wb55 bluetooth samples fail
* #16379 - net: ipv6: udp: Zephyr replies with illegal UDP checksum zero
* #16375 - net: ipv4: udp: Zephyr does not reply to a valid datagram with checksum zero
* #16366 - Build error on QEMU x86 and quark_se_c1000_devboard
* #16365 - lwm2m: enable with CONFIG_NET_RAW_MODE
* #16363 - Error building x_nucleo_iks01a1 sample on nucleo_wb55rg after activating I2C Bus
* #16360 - ARM: Implement configurable MPU-based stack overflow guards
* #16354 - net: ipv6: Zephyr does not reply to fragmented packet
* #16341 - Bluetooth: GATT Server failed to send Service Change Indication
* #16339 - openthread: off-by-one error when calculating ot_flash_offset for settings
* #16327 - doc: networking: overview has out of date info for LwM2M
* #16326 - USB3CV Chapter 9 Tests failures
* #16323 - net: ipv6: tcp: unexpected reply to malformed HBH in TCP/IPv6 SYN
* #16318 - net: Network Offloading: Particle Boron
* #16316 - ST modules organization
* #16313 - LMP Response Timeout / LL Response Timeout (0x22) after ~40s when using LE Secure Connections
* #16307 - cannot move location counter backwards error happen
* #16303 - mbedtls: config-tls-generic.h: MBEDTLS_PLATFORM_NO_STD_FUNCTIONS seems ungrounded
* #16296 - dts generation in correct for 2 registers and no-size
* #16289 - Driver: modem ublox-sara-r4 not compiling
* #16278 - [Zepyhr v1.14.0] Unable to update FW with mcumgr over UART
* #16276 - net: ipv4: Zephyr replies to link-layer broadcast packet
* #16275 - setting_init crashes on qemu_x86 when setting BT_SETTINGS
* #16273 - Calling k_work_submit can reenable interrupts
* #16272 - bluetooth mesh proxy filter
* #16268 - Add 32K RAM support for nRF51822 REVC/microbit board
* #16257 - net: icmpv4: Zephyr sends echo reply with multicast source address
* #16243 - std::vector push_back() not working correctly
* #16240 - USB Bluetooth and DFU classes cannot be enabled simultaneously on nRF52840
* #16238 - k_cycle_get_32() API is useless in some Zephyr configurations
* #16236 - [docs] Windows installation guide, git part, is installed with non-intended configuration
* #16234 - tests/benchmarks/latency_measure can not calculate the real time thread switch for twr_ke18f
* #16229 - tests/kernel/common fails at test_atomic on twr_ke18f board
* #16227 - Zephyr env: unset var in conditional activation
* #16226 - ARM: IsInIsr(): inconsistencies between doc and implementation
* #16225 - tests/kernel/msgq/msgq_api twr_ke18f fails with assert
* #16224 - tests/subsys/storage/flash_map meet mpu hardfault in twr_ke18f board.
* #16216 - tests/kernel/timer/timer_api fails on nrf51_pca10028 board
* #16215 - FIFO queue data seems to get overwritten
* #16211 - NVS: sector erase at startup (2-sectors configuration)
* #16204 - Build STM32 : generate hex file fail
* #16191 - boards/arm/{olimexino_stm32, stm32_min_dev}: USB pinmux setup is skipped
* #16185 - Compile error using entropy.h in C++ code
* #16177 - STM32: Could not compile with CONFIG_PINMUX=n
* #16170 - CI fails because warning in LOG_ERR() in drivers/i2s_ll_stm32.c
* #16164 - [Coverity CID :198584]Uninitialized variables in /drivers/led/ht16k33.c
* #16163 - [Coverity CID :198587]Incorrect expression in /tests/subsys/usb/desc_sections/src/desc_sections.c
* #16162 - [Coverity CID :198588]Control flow issues in /drivers/gpio/gpio_cc13xx_cc26xx.c
* #16161 - [Coverity CID :198589]Control flow issues in /drivers/i2c/i2c_sam0.c
* #16160 - [Coverity CID :198590]Control flow issues in /drivers/i2c/i2c_sam0.c
* #16159 - [Coverity CID :198591]Control flow issues in /drivers/sensor/adxl362/adxl362.c
* #16158 - LwM2M: Fix incorrect last_block handling in the firmware write callback
* #16156 - Remove the LWM2M maximum number of instances limitation
* #16155 - drivers: can: wrong value used for filter mode set
* #16154 - Fix various issues with handling of floating values within the LWM2M subsystem
* #16148 - ARM: Enable building with TRUSTED_EXECUTION_SECURE
* #16145 - question: Using OpenThread API in Zephyr application
* #16143 - posix: clock_settime calculates the base time incorrectly
* #16142 - NET: llmnr responder sends malformed packets
* #16141 - posix: CONFIG_POSIX_API and CONFIG_NET_SOCKETS_POSIX_NAMES don't make sense to use together, and conflict when doing so
* #16138 - is this right for clock announcing in every CORE?
* #16132 - The nRF mesh APP report “Invalid Publish Parameters”
* #16110 - net: arp: request from own hardware but different IP address not dropped
* #16107 - Using bt_gatt_read() with 'by_uuid' method returns 3 extra bytes
* #16103 - nrf5 802.15.4 driver requires Log subsys to be enabled
* #16098 - net: arp: sender hardware address not used by ICMP/TCP/UDP
* #16090 - mpu align support for code relocation on non-XIP system
* #16089 - Mcux Ethernet driver does not detect carrier anymore (it's alway on)
* #16080 - Zephyr UART shell crashes on start if main() is blocked
* #16079 - SAM0/SAMR SERIAL subsystem broken?
* #16078 - Shell subsystem or SERIAL no longer works on SAM0/SAMR
* #16072 - boards/up_squared: k_sleep() too long with local APIC timer
* #16054 - Bluetooth sample app 'peripheral' failing to build for nRF52840
* #16052 - Adafruit Trinket M0 Bossac Offset is Wrong
* #16046 - modules are being processed too late.
* #16042 - NDP should be enhanced with Security, RFC 3971
* #16027 - support for no-flash systems
* #16025 - webusb example app not reading data
* #16012 - Source IP address for DHCP renewal messages is unset
* #16010 - Coverage reporting fails on many tests
* #16006 - The ArgonKey board documentation needs to align to the official information
* #16002 - the spi base reg address in arc_iot.dtsi has an error
* #16001 - ARC iotdk supports MPU and fpu in hardware but not enabled in kconfig
* #16000 - We need a CI check for commas in CODEOWNERS
* #15998 - CODEOWNERS is broken (Again)
* #15997 - Fix compile warning in samples/net/sockets/dumb_http_server
* #15996 - tests/kernel/sched/schedule_api/testcase.yaml#kernel.sched.slice_reset fails on nrf52840_pca10056, nrf52_pca10040, nrf51_pca10028
* #15991 - [Coverity CID :198389]Memory - illegal accesses in /subsys/settings/src/settings_runtime.c
* #15990 - [Coverity CID :198390]Memory - illegal accesses in /subsys/settings/src/settings_runtime.c
* #15989 - [Coverity CID :198391]Memory - illegal accesses in /subsys/settings/src/settings_runtime.c
* #15988 - [Coverity CID :198392]Insecure data handling in /tests/net/socket/getaddrinfo/src/main.c
* #15987 - [Coverity CID :198393]Error handling issues in /tests/net/socket/socket_helpers.h
* #15986 - [Coverity CID :198394]Error handling issues in /tests/net/socket/socket_helpers.h
* #15985 - [Coverity CID :198395]Memory - corruptions in /soc/arm/microchip_mec/mec1501/soc.c
* #15983 - Kernel tests assume SYS_CLOCK_TICKS_PER_SEC=100
* #15981 - ARM: k_float_disable() as system call
* #15975 - Openthread - fault with dual network interfaces
* #15971 - Fail to connect sample bluetooth HID with Tizen OS (BT_HCI_ERR_DIFF_TRANS_COLLISION)
* #15970 - samples: microbit pong demo
* #15964 - ARM: Cortex-M: enhance Sharing Floating-Point Registers Mode
* #15961 - bug:  west: 'west flash' doesn't use specified hex file
* #15941 - Stale 1.3.99 documentation under /latest
* #15924 - Bluetooth: PTS: GATT server tests fail after merge of #15524
* #15922 - BLE mesh:The Provisioner APP can't find the micro:bit which is running the mesh sample
* #15918 - stm32f7 GPIO Ports F & G Disabled by Default
* #15917 - USB disconnect/reconnect
* #15916 - [BLE] Mesh example qemu kernel panic
* #15911 - Stack size is smaller than it should be
* #15909 - stm32f7: DTCM included in sram0
* #15906 - WEST ERROR: extension command build was improperly defined
* #15904 - concerns with use of CONFIG_BT_MESH_RPL_STORE_TIMEOUT in examples
* #15893 - code coverage is not tested in CI
* #15884 - tests/net/socket/getaddrinfo fails on mps2_an385
* #15878 - tests/net/lib/mqtt_publisher/net.mqtt.tls fails to build on sam_e70_xplained
* #15877 - all qemu_x86_64 tests hang on Ubuntu 18.04
* #15864 - disk partitioning should not specified in DTS
* #15844 - Network management API should support user space
* #15842 - cdc_acm: stm32: uart_fifo_fill() can't transmit data out
* #15835 - ""#if XIP"" block in qemu_x86 DTS always evaluates to false
* #15831 - qemu_x86 DTS does not reflect actual emulated hardware layout
* #15827 - ARM: Update ARM CMSIS to latest  version
* #15823 - Build failure for spi_loopback on atsamr21_xpro
* #15817 - nrf52: HFXO is not turned off as expected
* #15814 - [Coverity CID :186196]Unchecked return value in  samples/sensor/lsm6dsl/src/main.c
* #15794 - mps2_an385 crashes if CONFIG_INIT_STACKS=y and CONFIG_COVERAGE=y
* #15789 - Networking documentation missing
* #15778 - [Coverity CID :198001]Control flow issues in /subsys/bluetooth/host/mesh/settings.c
* #15777 - [Coverity CID :198002]Null pointer dereferences in /subsys/net/l2/ethernet/arp.c
* #15776 - [Coverity CID :198003]Error handling issues in /tests/net/net_pkt/src/main.c
* #15775 - [Coverity CID :198005]Memory - corruptions in /subsys/bluetooth/shell/gatt.c
* #15774 - [Coverity CID :198006]Control flow issues in /subsys/bluetooth/host/settings.c
* #15773 - [Coverity CID :198007]Memory - corruptions in /subsys/bluetooth/host/hci_core.c
* #15772 - [Coverity CID :198009]Memory - corruptions in /subsys/bluetooth/shell/gatt.c
* #15771 - [Coverity CID :198010]Control flow issues in /samples/boards/nrf52/mesh/onoff_level_lighting_vnd_app/src/storage.c
* #15770 - [Coverity CID :198011]Incorrect expression in /tests/subsys/usb/desc_sections/src/desc_sections.c
* #15769 - [Coverity CID :198012]Memory - corruptions in /drivers/flash/flash_simulator.c
* #15768 - [Coverity CID :198013]Control flow issues in /subsys/bluetooth/host/mesh/settings.c
* #15767 - [Coverity CID :198014]Memory - corruptions in /drivers/flash/flash_simulator.c
* #15766 - [Coverity CID :198016]Security best practices violations in /subsys/settings/src/settings_runtime.c
* #15765 - [Coverity CID :198018]Control flow issues in /subsys/bluetooth/host/mesh/settings.c
* #15764 - [Coverity CID :198019]Security best practices violations in /subsys/settings/src/settings_runtime.c
* #15763 - [Coverity CID :198021]Control flow issues in /drivers/clock_control/clock_stm32_ll_mp1x.c
* #15762 - [Coverity CID :198022]Security best practices violations in /subsys/settings/src/settings_runtime.c
* #15759 - usb: cdc_acm: uart_line_ctrl_set(dev, LINE_CTRL_DTR, &dtr) should always return 0 if USB port is not opened by host
* #15751 - Incorrect flash map
* #15749 - [question] errors using custom command in CMakeLists.txt
* #15748 - 'ninja flash' does not work for IMXRT1052 target
* #15736 - Generalize and improve async context for SPI, ADC, etc.
* #15734 - Power management doesn't work with CONFIG_I2C=y on nRF52
* #15733 - Bluetooth: controller: Central Encryption setup overlaps Length Request procedure
* #15728 - tests/benchmarks/timing_info: wrong value for context switch duration
* #15720 - ""z_clock_elapsed"" implementation seems to be missing #linking #sched
* #15719 - tests/ztests/mock/ : Stuck at test_parameter_tests
* #15714 - samples/bluetooth/peripheral: could not connect with disco_l475_iot1 board
* #15710 - [question] how about the current consumption on NRF52DK running power_mgr sample?
* #15709 - CODEOWNERS ignored in GitHub
* #15706 - tunslip6: main: open: No such file or directory
* #15698 - bluetooth: bt_conn: No proper ID handling
* #15696 - [question] why bt_setting is dependant of printk in menuconfig?
* #15679 - Can GPTP support multiple slave nodes
* #15678 - Watchdog peripheral api docs aren't generated correctly.
* #15675 - DTS question about pinmix/GPIO
* #15672 - net: socket send return error(-110) when http request 100 times
* #15668 - Support request: Issue with documentation warning
* #15664 - Zephyr modules failure report
* #15652 - document the mailing list for nightly build results
* #15639 - [question] how to get the bd_addr from scan callback as shown on nrf-connect app?
* #15637 - Support of device tree gpio-map
* #15627 - Application compiled with CONFIG_POSIX_API doesn't have access to POSIX headers
* #15625 - target_compile_features in CMakeLists.txt triggers an error
* #15622 - NXP RT10XX: Load code to ITCM
* #15612 - bt_set_id_addr() to allow public address as argument
* #15608 - [question] my board won't boot without debugger attached but no issue using nordic SDK
* #15607 - nRF52: 2.4 GHz proprietary RF support
* #15606 - trickle.c can't work for multiple triggerings
* #15605 - Unaligned memory access by ldrd
* #15601 - pwm: nRF default prescalar value is wrong
* #15597 - [question] How to include mesh related header files in my own source file
* #15596 - net: Zephyr's SNTP API time precision is not adequate
* #15594 - net shell ""net tcp send"" command failed when repeated many times
* #15588 - Does zephyr support different time slices for each thread?
* #15587 - Zephyr was unable to find the toolchain
* #15580 - SAMD21 Adafruit examples no longer run on boards
* #15571 - Fix sanitycheck failures for v2m_musca_b1_nonsecure
* #15570 - Unbonded peripheral gets 'Tx Buffer Overflow' when erasing bond on master
* #15565 - undefined references to 'sys_rand32_get'
* #15558 - support for power-of-two MPUs on non-XIP systems
* #15551 - CMake enables -fmacro-prefix-map on GCC 7
* #15549 - [FCB question] Is it true that fcb storage won't overwrite old records which limits the max num?
* #15546 - tests/kernel/mem_protect/protection/: Reached unreachable code
* #15526 - Unhandled identity in bt_conn_create_slave_le
* #15522 - Extra padding in IPv4 link local ARP packets
* #15520 - tests/ztest/mock: test_multi_value_test:  Unused mocked return value
* #15516 - Implementation of CONFIG_MAX_PTHREAD_COUNT
* #15513 - nRF timer unnecessary configuration?
* #15508 - No space to store CCC cfg
* #15507 - NRF52840: usb composite MSC + HID (with CONFIG_ENABLE_HID_INT_OUT_EP)
* #15504 -  Can I use one custom random static bd_addr before provision?
* #15501 - smp_svr build issue
* #15499 - gpio_intel_apl: gpio_pin_read() pin value doesn't match documentation
* #15497 - USB DFU: STM32: usb dfu mode doesn't work
* #15495 - tests/drivers/spi/spi_loopback/peripheral.spi fails to build on several boards
* #15486 - usb composite MSC + HID (with CONFIG_ENABLE_HID_INT_OUT_EP)
* #15483 - add mpu and fpu support for arc iotdk
* #15481 - object_access in common-rom.ld missed GROUP_LINK_IN(ROMABLE_REGION)
* #15477 - Zephyr network stack will up the Ethernet interface after its driver initialized (regardless of actual status)
* #15472 - DNS resolver sample sends only one A query
* #15465 - Fix build failures for test_newlib &   tests/lib/mem_alloc/libraries.libc.newlib w/ARM gcc
* #15451 - doc: settings Misleading examples
* #15448 - help to use zephyr-ninja flash of st_nucleo_l476rg
* #15447 - sanitycheck --coverage -p qemu_x86: Fatal failures with tests/kernel/pipe/pipe/kernel.pipe
* #15446 - ssanitycheck --coverage -p mps2_an385: Some remaing test cases that are still failing
* #15444 - Error initiating sdhc disk
* #15443 - usb_dc_stm32: Missing semaphore initialization and missing pin remapping configuration
* #15419 - reset and halt function
* #15411 - tests/kernel/critical:  Continuous reboot at test_critical
* #15408 - [Coverity CID :197596]Memory - corruptions in /tests/net/lib/mqtt_packet/src/mqtt_packet.c
* #15391 - [Coverity CID :197613]Possible Control flow issues in /subsys/net/ip/net_core.c
* #15374 - PR 15230 introduces test failure for particle_argon
* #15373 - IPv4 link local packets are not sent with ARP ethernet type
* #15355 - Driver for U-Blox SARA modem (used by Particle Boron)
* #15354 - counter: stm32: Issue with LSE clock source selection
* #15339 - RISC-V: RV32M1: Load access fault when accessing GPIO port E
* #15334 - Unable to reset nRF52840 from nRF9160 on pca10090 DK
* #15331 - CONFIG_CODE_DATA_RELOCATION does not work with Cache enabled MCUs.
* #15316 - printf causing usage fault
* #15315 - doc: simplify cmake examples thanks to cmake's new -B option
* #15305 - add QEMU target for armv8-M with MPU support
* #15282 - Enhance networking tests/net/all tests
* #15279 - mempool alignment might cause a memory block allocated twice
* #15272 - sanitycheck reports build errors as ""handler crash""
* #15246 - doc: confusion about dtc version
* #15232 - tests/bluetooth/tester fails build if CONFIG_TEST_USERSPACE=n
* #15193 - tests/net/socket/getaddrinfo tests too little
* #15180 - testing flash driver clients in CI
* #15159 - undefined reference to 'bsearch' #stdlib
* #15156 - GH labels reorg
* #15144 - West: how to set up for external modules
* #15139 - implement sys_sem that can reside in user memory
* #15133 - Is the level2 interrupt supported for ARM cortex-M0P core?
* #15119 - GPIO callback not disabled from an interrupt
* #15116 - nrfx_twim: (nRF52) driver unable to perform i2c_burst_write() correctly
* #15115 - ARM: Cortex-M: enhance non-sharing floating point services
* #15074 - ARM: Fix/Enhance Floating Point for ARM Cortex-M architecture
* #15046 - Native_posix: command line handling: Hint users why an option does not exist
* #15003 - init_iface in net_if.c should check api->init
* #14997 - Convert samples/sensor/bme280/src/main.c to use printk instead of printf
* #14970 - samples/drivers/watchdog: Not showing ""Waiting for reset..."" for nrf boards
* #14918 - olimexino stm32 CAN errors
* #14904 - Sanitycheck report not clear if built or ran a test
* #14828 - ARM: MPU-based HW thread stack protection not working properly when building with CONFIG_FLOAT
* #14826 - USB reset in suspended state
* #14791 - Bluetooth: GATT Notification callbacks should have conn as argument
* #14769 - kernel/userspace.c: Improve code coverage to 100%
* #14744 - ARM: Core Stack Improvements/Bug fixes for 2.0 release
* #14736 - kernel/include/kswap.h: Improve code coverage to 100%
* #14734 - kernel/include/kernel_structs.h: Improve code coverage to 100%
* #14733 - kernel/work_q.c: Improve code coverage to 100%
* #14731 - kernel/userspace_handler.c: Improve code coverage to 100%
* #14730 - kernel/userspace.c: Improve code coverage to 100%
* #14729 - kernel/timer.c: Improve code coverage to 100%
* #14728 - kernel/timeout.c: Improve code coverage to 100%
* #14727 - kernel/thread_abort.c: Improve code coverage to 100%
* #14726 - kernel/thread.c: Improve code coverage to 100%
* #14725 - kernel/system_work_q.c: Improve code coverage to 100%
* #14724 - kernel/stack.c: Improve code coverage to 100%
* #14723 - kernel/sem.c: Improve code coverage to 100%
* #14722 - kernel/sched.c: Improve code coverage to 100%
* #14721 - kernel/queue.c: Improve code coverage to 100%
* #14720 - kernel/poll.c: Improve code coverage to 100%
* #14719 - kernel/pipes.c: Improve code coverage to 100%
* #14718 - kernel/mutex.c: Improve code coverage to 100%
* #14717 - kernel/msg_q.c: Improve code coverage to 100%
* #14716 - kernel/mempool.c: Improve code coverage to 100%
* #14715 - kernel/mem_slab.c: Improve code coverage to 100%
* #14713 - kernel/mem_domain.c: Improve code coverage to 100%
* #14712 - kernel/mailbox.c: Improve coverage to 100%
* #14711 - kernel/idle.c: Improve code coverage to 100%
* #14710 - kernel/errno.c: Improve code coverage to 100%
* #14709 - kernel/device.c: Improve code coverage to 100%
* #14708 - kernel/include/ksched.h: Improve code coverage to 100%
* #14707 - kernel/include/kernel_offsets.h: Improve code coverage to 100%
* #14706 - kernel/include/kernel_internal.h: Imrpove code coverage to 100%
* #14705 - kernel/smp.c: Improve code coverage to 100%
* #14704 - kernel/int_latency_bench.c: Improve code coverage to 100%
* #14703 - kernel/compiler_stack_protect.c: Improve code coverage to 100%
* #14702 - kernel/atomic_c.c : Improve code coverage to 100%
* #14675 - Bluetooth: Controller privacy support (platforms with HW acceleration)
* #14652 - Gitlint is more strict than checkpatch.pl
* #14633 - undefined reference to 'mbedtls_debug_set_threshold' when MBEDTLS_DEBUG is enabled
* #14605 - mimxrt1060_evk cpp_synchronization meets Hardware exception
* #14604 - BLE disconnection caused by channel map request or connection parameter update request
* #14599 - Can you add a ADC sample?
* #14588 - static IP support on cc3220sf_launchxl
* #14547 - Kconfig shell prompt configuration
* #14517 - LPCXpresso55S69 board support
* #14493 - implement Zephyr futexes
* #14467 - New HTTP API implementation
* #14459 - usb: samples: mass: doesn't build with FLASH overlay
* #14292 - Typo ""QPSI"" in QSPI macros in some stm32 drivers
* #14283 - tests/drivers/watchdog/wdt_basic_api fails on test_wdt_callback_1() for Ardruino and quark_se_c1000_ss_devboard:arc
* #14123 - Particle boards need a board initialization module for antenna configuration
* #14082 - Update Segger host library to V2.52f
* #14037 - Generic device driver object type
* #14034 - Support for PPP protocol
* #13963 - up_squared: evaluate removal of SBL-related special configurations
* #13935 - tests/crypto/rand32/crypto.rand32.random_hw_xoroshiro: Usage fault ""Fatal fault in ISR! Spinning...""
* #13897 - CONFIG_LOG_IMMEDIATE leads to unobvious faults in unrelated rotines due to stack overflow
* #13817 -  tests/ztest/test/mock fails to complete on nios2
* #13799 - usb cdc acm fails when writing big chunks of data on stm32
* #13766 - mimxrt1060_evk tests/kernel/fatal meet many unwanted exceptions
* #13749 - Can CONFIG_SOC_WATCH-related code be removed?
* #13610 - kernel: Non-deterministic and very high ISR latencies
* #13602 - How to get the port number for an ephemeral (randomly assigned) port
* #13574 - Missing documentation for fcb and nffs
* #13560 - STM32 USB: netusb: kernel crash when testing example echo_server with nucleo_f412zg  (ECM on Windows)
* #13444 - Build failure when including both socket.h and posix/time.h
* #13441 - optimize x86 userspace page table memory usage
* #13347 - tests/drivers/watchdog/wdt_basic_api fails on test_wdt_callback_1() for Quark SE / arc
* #13316 - Notification enabled before connection
* #13288 - Disable JTAG debug port for free use GPIO PA15, PB3, PB4 on STM32F1 series
* #13197 - LwM2M: support Connectivity Monitoring object (object id 4)
* #13148 - Build on nucleo_stm32f429zi
* #13097 - openthread default configuration
* #13075 - Review memory protection Kconfig policies for consistency and sanity
* #13065 - CONFIG_BT leads Fatal fault in ISR on esp32
* #13003 - context switch in x86 memory domains needs optimization
* #12942 - openthread: sleepy end device not supported by zephyr router
* #12825 - SystemView Feature Not working
* #12728 - docs: Hard to find guidelines for ext/ maintenance
* #12681 - BLE Split Link Layer
* #12633 - tests/boards/altera_max10/i2c_master failed with ""failed to read HPD control"" on altera_max10
* #12602 - STM32F415RG Support
* #12553 - List of tests that keep failing sporadically
* #12542 - nrf timers unstable with ticks faster than 100 Hz
* #12478 - tests/drivers/ipm/peripheral.mailbox failing sporadically on qemu_x86_64 (timeout)
* #12261 - i2c_ll_stm32_v1 driver gets stuck
* #12257 - GNU Arm Embedded Toolchain 8-2018-q4-major can't produce hex files on Windows
* #12245 - LWM2M registration timeout
* #12228 - 	How to build images for client or server in bluetooth mesh examples?
* #12160 - settings: NVS back-end
* #12129 - Include: Clean up header file namespace
* #12119 - 64bit architecture support
* #12044 - [Question] [Blutooth Mesh] How proxy client create the proxy PDU
* #12039 - clock_control: API should allow callback to be specified
* #11993 - drivers: Supporting driver-specific extensions to existing generic APIs
* #11922 - ADC generic driver missing features: calibration, reference voltage value
* #11918 - Dynamic pin configuration
* #11740 - LL_ASSERT in event_common_prepare in Zephyr v1.13
* #11712 - Add support for newlib-nano
* #11681 - Mesh Friend does not reply within ReceiveWindow
* #11626 - k_busy_wait exits early on Nordic chips
* #11617 - net: ipv4: udp: broadcast delivery not supported
* #11535 - serial: uart_irq_tx_ready() needs better documentation or correction of the test
* #11455 - cdc_acm uart_fifo_fill sample app doesn't comply with the documentation
* #11107 - clock_control: API should support asynchronous and synchronous variants of turning on clocks
* #10965 - wncm14a2a modem should be moved to a shield configuration
* #10942 - Declaring an API Stable
* #10935 - Support all UARTs on ESP32 WROOM module
* #10915 - ESP 32 failed to boot while running  crypto/rand32 tests
* #10896 - Add STM32 ADC driver
* #10739 - Cannot flash to STM32 Nucleo F446RE with SEGGER JLink
* #10664 - FOTA: nRF52: integration of samples/bluetooth/mesh & smp_srv
* #10657 - tests/net/ieee802154/crypto does not work as expected
* #10603 - Hard to find ""todo""
* #10463 - can: stm32: Update to new API
* #10450 - usb/stm32: use dts extracted information to populate clock settings
* #10420 - gcc: ""Exec format error"" - WSL in Windows 10 1803
* #10150 - Getting LLVM work on ARM
* #9954 - samples/hello_world build failed on Windows/MSYS
* #9898 - 1.14 Release Checklist
* #9762 - Bluetooth mesh reliability issue?
* #9570 - Network stack cleanup: deep TCP cleanup
* #9509 - Unable to upload firmware over serial with mcumgr
* #9333 - Support for STM32 L1-series
* #9247 - Get ST Disco and Eval boards compliant with default configuration guidelines
* #9070 - bluetooth ：BR ：The sample is incomplete
* #9047 - Interrupt APIs.
* #8978 - soc: Intel S1000: add low power memory management support
* #8851 - Allow creation of Zephyr libraries outside of Zephyr tree
* #8734 - USB: DFU timeout on nRF52840 due to long flash erase
* #8728 - Network stack cleanup: Net IF
* #8726 - Network stack cleanup: TCP
* #8725 - Network stack cleanup: Net Context
* #8723 - Network stack cleanup
* #8722 - Network stack cleanup: connection
* #8464 - sdk_version file missing
* #8419 - Bluetooth: tester: LPN Poll issue
* #8404 - Bluetooth: controller: Reuse get_entropy_isr API
* #8275 - when zephyr can support popular IDE develop?
* #8125 - About BMI160 reading issue.
* #8081 - Bluetooth: Deprecate TinyCrypt and use mbedTLS
* #8062 - [Coverity CID :186196] Error handling issues in /samples/sensor/mcp9808/src/main.c
* #7908 - tests/boards/altera_max10/qspi fails on max10
* #7589 - Migrate Websocket to BSD sockets
* #7585 - Migrate HTTP to socket API
* #7503 - LwM2M client: No registration retry after error?
* #7462 - Convert mcr20a to be a shield when that functionality is merged
* #7403 - RAM flash driver emulator
* #7316 - native_posix supersedes ztest mocking
* #6906 - QM (Quality Managed) level qualification
* #6823 - Optimize rendering of Kconfig documentation
* #6817 - Question: Is supported for stack sharing among tasks  in Zephyr? Or any plan?
* #6816 - Question: Is KProbes supported in Zephyr? Or any plan?
* #6773 - Publish doxygen-generated API pages
* #6770 - Multiple Git Repositories
* #6636 - Enable hardware flow control in mcux uart shim driver
* #6605 - Question: Does WAMP protocol has any usecase for Zephyr
* #6545 - ARM Cortex R Architecture support
* #6370 - I can't find adc name which is f429zi board
* #6183 - sensor: Handling sensors with long measurement times
* #6086 - Ideas/requirements for improved TLS support in Zephyr
* #6039 - Implement interrupt driven USART on LPC54114
* #5579 - Address untested options in kernel
* #5529 - Explore Little File System (littlefs) support
* #5460 - scripts: extract_dts_includes: check yaml dts binding property ""category: ""
* #5457 - Add SDHC card support
* #5423 - [nRF] on-target tests accidentally run twice
* #5365 - Revisit DHCPv4 test, convert to ztest
* #4628 - Sample app enabling sensors on disco_l475_iot1 board
* #4506 - rework GPIO flags
* #4505 - sanitycheck should distinguish compile errors from link errors
* #4375 - Provide a script to find files not owned per the CODEOWNERS file
* #4178 - Openweave Support
* #3936 - BT: bt_conn_create_le(): No way to find out error cause
* #3930 - Need a CPU frequency driver for ESP-32
* #3928 - [TIMER] k_timer_start should take 0 value for duration parameter
* #3846 - to use {k_wakeup} to cancel the delayed startup of one thread
* #3805 - [test] test scheduling of threads along with  networking conditions
* #3767 - reconsider k_mem_pool APIs
* #3759 - reconsider k_mbox APIs
* #3754 - Support static BT MAC address
* #3749 - ESP32: Deep Sleep
* #3722 - Enable Flash Cache for ESP32
* #3710 - 802.15.4 Soft MAC 2015 version support
* #3678 - Implement the Read Static Addresses Command
* #3673 - reconsider k_queue APIs
* #3651 - add tickless idle and kernel support to RISCV32 pulpino
* #3648 - Ability to unpair devices
* #3640 - BLE central scan ignores changes in payload
* #3547 - IP stack: Ideas for optimizations
* #3500 - ESP8266 Architecture Configuration
* #3499 - evaluate Emul8 as a replacement for QEMU in sanitycheck
* #3442 - TCP connection locally isn't possible
* #3426 - Only supports classic Bluetooth compilation options
* #3418 - Bluetooth True Wireless Stereo
* #3417 - BT Phonebook Access Profles
* #3399 - Texas Instruments CC2538 Support
* #3396 - LLDP: Implement local MIB support with advertisement of mandatory TLVs
* #3295 - Advanced Power Management
* #3286 - Native Zephyr IP Stack Advanced Features
* #3155 - xtensa: fix tests/kernel/mem_protect/stackprot
* #3040 - Add support for the Arduino Ethernet Shield V2
* #2994 - The build system crashes when GCCARMEMB_TOOLCHAIN_PATH has a space in it
* #2984 - frdm_k64f bus exception bug due to peculiar RAM configuration
* #2933 - Add zephyr support to openocd upstream
* #2900 - Support for the BBC micro:bit Bluetooth Profile
* #2856 - Customer: Floating Point samples
* #2780 - Set the _Swap() return value on ARC the same way it is now done on ARM ?
* #2766 - BMI160 Oversampling Configuration
* #2682 - Add support for UART A1 for TI CC3200 SoC
* #2623 - nRF52 UART behaviour sensitive to timing of baud rate initialization.
* #2611 - SDP client
* #2587 - Support for BR/EDR SSP out-of-band pairing
* #2586 - Support for LE SC out-of-band pairing
* #2401 - 802.15.4 - LLDN frame support
* #2400 - 802.15.4 - Multipurpose frame support
* #2399 - 802.15.4 - TSCH Radio protocol support
* #2398 - 802.15.4 - Update existing Management commands
* #2397 - 802.15.4 - IE list support
* #2396 - 802.15.4 - Management service: FFD level support
* #2333 - Get IPv6 Ready approval
* #2049 - Enable ARM M4F FPU lazy stacking
* #2046 - Add a driver to support timer functions using the PWM H/W periphral timers
* #1933 - nios2: implement nested interrupts
* #1860 - Add support for getting OOB data
* #1843 - nios2: enable interrupt driven serial console for JTAG UART
* #1766 - nios2: implement asm atomic operations
* #1392 - No module named 'elftools'
* #335 - images for the wiki
",59771425
1514,False,True,2019-12-04T04:12:49Z,2019-12-04T04:38:55Z,"Changes since Zephyr v2.1.0-rc2

```
Anas Nashif (4):
      kernel: init: simplify boot banner printing
      tests: fdtable: check for negative fd
      drivers: kscan_mchp_xec: fix memory corruption
      Revert ""interrupt_controller: ioapic_intr: revert CPU target change""

Andrei Emeltchenko (6):
      usb: usb_dc_native_posix_adapt: Check correct size
      usb: usb_dc_native_posix: Check return values in dc_write()
      usb: usb_dc_native_posix: Fix buffer and max data 0 case
      usb: usb_dc_native_posix: Check return code in handle_usb_data()
      usb: usb_dc_native_posix: Use return code for skip_setup()
      usb: usb_dc_native_posix: Refactor similar code to function

Andrei Gansari (1):
      drivers: flash_handlers fixes stray semicolon

Andrzej Głąbek (1):
      drivers: spi_nrfx_spim: Fix handling of extended SPIM configuration

Andy Ross (1):
      kernel/mutex: Fix races, make unlock rescheduling

Daniel Leung (6):
      counter: mchp_xec: fix logical/bit-wise AND
      kernel: remove duplicate definitions of k_thread stack and entry
      toolchain: fix __BYTE_ORDER__ not defined for XCC
      soc: intel_s1000_crb: fix cmake warning about HAS_*_DW
      soc: intel_s1000_crb: fix XCC build error with newlib
      interrupt_controller: ioapic_intr: revert CPU target change

David B. Kinder (1):
      doc: add doc changes to 2.1 release notes

David Leach (1):
      release: Zephyr 2.1.0-rc3

Erwan Gouriou (1):
      doc/guides: Add clarifications to board porting guidelines

Johan Hedberg (5):
      Bluetooth: L2CAP: Use fixed size for net_buf user data
      Bluetooth: Remove usage of BT_BUF_USER_DATA_MIN
      net: buf: Fix NET_BUF_USER_DATA_SIZE value for Bluetooth
      Bluetooth: Deprecate and fix BT_BUF_USER_DATA_MIN
      Bluetooth: host: Fix ordering of TX sent callbacks

Johann Fischer (2):
      usb: hid core: fix call by reference
      test: pwm_api: fix test for nRF based boards

Jukka Rissanen (4):
      net: pkt: Make sure iface is not null when accessing L2
      net: gptp: Do not update clock if time diff is < 0
      doc: release: Remove net sample testing feature
      doc: net: Enhance 802.1Qav documentation

Kamil Piszczek (1):
      drivers: bluetooth: hci: rpmsg: fix handling of hci events

Luiz Augusto von Dentz (3):
      Bluetooth: L2CAP: Fix not unrefing tx_buf
      Bluetooth: L2CAP: Fix unrefing buffers that are queued
      Bluetooth: ATT: Fix not handling errors properly

Martí Bolívar (1):
      scripts: runners: fix blackmagicprobe SIGINT behavior

Maureen Helm (1):
      doc: releases: Document major driver changes in 2.1 release note

Mieszko Mierunski (1):
      drivers: nrf: Add CTS and RTS pins to UART and UARTE PM

Patrik Flykt (1):
      drivers: modem: Document UART device name

Peter Bigot (4):
      drivers: nrf_clock_calibration: wait for sensor initialization
      tests: kernel: timer: add test for starvation
      drivers: timer: nrf_rtc_timer: avoid starving clock announcements
      power: policy: remove deep sleep states from residency policy

Tomasz Bursztyka (1):
      drivers/pwm: Fix abs() usage in xec driver

Ulf Magnusson (3):
      genrest: List all symbols on main index page and refactor
      kconfig: doc: Split up symbol reference by path
      genrest: Show symbol help texts on index page

Vinayak Kariappa Chettimada (3):
      Bluetooth: controller: legacy: Revert broken ZLI support
      Bluetooth: controller: split: Revert broken ZLI support
      Bluetooth: controller: split: Support Zero Latency IRQs
```",59771425
1515,False,True,2019-11-28T01:46:51Z,2019-11-28T01:51:42Z,"Changes since 2.1.0-rc1

```
Alberto Escolar Piedras (7):
      nrf52_bsim: doc: Change to fetch manifest thru http
      CODEOWNERS: remove duplicate entries
      native_posix: Ensure printf fed type matches format specifier
      tests: Bluetooth: Bsim tests: expand README a bit
      posix arch: Use zephyr_link_libraries() to set -m32
      doc: Add native_posix information to 2.1 release note
      tests: metaIRQ: Ensure counts are not changing in assert evaluation

Alex Li (1):
      Bluetooth: Fix BT log level config won't take effect

Alex Porosanu (1):
      Bluetooth: controller: openisa: sync with Nordic SW LL

Alexander Wachter (4):
      soc: stm32f103Xb: Enable CAN support for this SoC
      boards: olimexino_stm32: Enable CAN support for this board
      net: ip: 6lo: Add NULL ptr check for dst context
      doc: Add CAN related changes

Anas Nashif (17):
      west: prepend -c to openocd commands
      doc: kernel: use kconfig documentation in main kernel doc
      tests: semaphore: cleanup asserts
      tests: semaphore: cleanup assert messages
      tests: semaphore: consolidate semaphore tests
      tests: stack: move stack_usage into stack
      tests: stack: consolidate tests
      sanitycheck: record results when running on devices
      mbedtls: make all options depend on MBEDTLS
      sanitycheck: fix documentation of --discard-report
      sanitycheck: support on windows
      sanitycheck: cleanup test inventory
      sanitycheck: add option to print duplicate identifiers
      sanitycheck: fix --sub-test option
      sanitycheck: report results before coverage generation
      sanitycheck: enabling coverage should not imply --enable-slow
      sanitycheck: fix parsting tests from source files

Andrei Emeltchenko (1):
      doc: usb: Update USB documentation

Andrei Gansari (6):
      dts: NXP LPC gpio updates
      dts: lpc devices allocate all gpio interrupts
      boards: lpcxpresso55s69 pinmux macros refactor
      soc: enable PINT device at LPC SoC boot
      soc: LPC55xxx clock comment fix
      soc: define gpio pull-down for LPC54114

Andrew Boie (2):
      doc: add two diagrams to user mode documentation
      lib: os: uncrustify sem.c

Andrew Fernandes (1):
      arch/arm: Fix formatting in arch/arm/core/fatal esf_dump

Andrzej Głąbek (2):
      samples: blink_led: Fix the behavior of the sample
      boards: nrf5340_dk_nrf5340: Move buttons node from leds to root node

Andrzej Puzdrowski (5):
      setting: fix NVS error handling on write
      fs/fcb: improve error handling in fcb_offset_last_n
      doc/reference/runtime_conf: fix example snippets
      boards/arm/nrf5340_dk_nrf5340: make cpunet flash partitions relative
      drivers/flash: nRF driver uses relative addresses

Andy Ross (5):
      doc/kernel/smp: Add initialization diagram
      kernel/sched: Fix edge case in MetaIRQ preemption of cooperative threads
      kernel/thread: Cancel timeouts on k_thread_suspend(), make schedule point
      tests/kernel/threads/thread_apis: Add k_thread_suspend() edge cases
      drivers/timer: Clamp after tick adjustment, not before

Armando Visconti (3):
      driver/sensor: lsm6dso: Fix unchecked return value
      samples/96b_argonkey: Add a note in microphone test README file
      board/shields: x-nucleo-iks01a3: (FIX) use INT2 for LSM6DSO DRDY

Arnaud Pouliquen (1):
      scripts: dts: Add new chosen declaration for the IPC shared memory

Arnaud Taffanel (1):
      usb: Fix BCD() macro used to set bcdDevice

Bartosz Sokolski (2):
      tests: drivers: add support for nrf52833 and pca10100
      manifest: update manifest for hal_nordic

Carles Cufi (2):
      Bluetooth: controller: openisa: Fix radio ISR signature
      samples: bluetooth: central_hr: Fix scanning

Carlo Caione (3):
      subsystem: kernel_shell: Fix pointer cast to u32_t
      samples: philosophers: Introduce CONFIG_TEST_EXTRA_STACKSIZE
      samples: logger: Fix test on stack hungry platforms

Christian Taedcke (4):
      gpio: silabs gecko: Use macro for port initialization
      gpio: silabs gecko: Add support for more ports
      dts: silabs: Define all available gpio ports for efr32mg12p
      sanitycheck: Fix --enable-coverage option

Daniel Leung (10):
      soc: intel_s1000: add _heap_sentry to linker script
      samples: intel_s1000/i2s: fix uninitialized use warning
      soc: intel_s1000: define default MEMCTL reg value
      samples: intel_s1000_crb: fix no return on non-void func error
      samples: intel_s1000_crb: set CONFIG_NEWLIB_LIBC for math.h
      arch: xtensa: use asm for _xt_set_intset/_xt_set_intclear
      soc: intel_s1000_crb: update LP_SRAM macros
      sdk: add support for Zephyr SDK 0.11
      dts: tell compiler the name of dependency file for output
      pwm: pwm_mchp_xec: fix potential out of bound access

David B. Kinder (9):
      doc: fix misspelling in userspace doc
      doc: New developer getting started guide
      samples: remove CONFIG_SERIAL from blinky
      doc: fix ordered lists in doxygen comments
      doc: fix LPS22HB doc indentation
      doc: remove old reference to nanokernel in API doc
      doc: tweak CSS for responsive table display
      doc: add recent documentation writing features
      doc: fix redirect for getting started guide

David Leach (2):
      kernel: Kconfig: Define dependencies for STACK_CANARIES
      release: Zephyr 2.1.0-rc2

Dominik Ermel (1):
      tests: settings: Test setting FS back-end using Littlefs

Emil Obalski (6):
      soc: nordic: Add support for nRF52833
      boards: nordic: Add support for nRF52833_pca10100 board
      drivers: Add support for nRF52833 in several drivers
      boards: Update defconfigs after renaming to USB_NRFX
      bluetooth: Add bluetooth support for nRF52833
      soc: arm: nordic: adding ipc aliases for nRF53

Erik Brockhoff (1):
      Bluetooth: controller: ull_filter: RPA ADV refresh fix

Erwan Gouriou (4):
      drivers/gpio: stm32: Rework configure function exit for dual core
      soc: arm: release not section for Zephyr 2.1 (stm32)
      boards: shields: Release notes section for Zephyr v2.1
      samples/net: civetweb: Remove SOC_SERIES_SAME70=y in prj.cnf

Flavio Ceolin (4):
      doc: getting_started: Fix clang toolchain use
      arc: core: Fix possible overrun
      docs: guide: Add build system information
      kernel: thread: Fix randomness problem with stack pointer random

Francisco Munoz (7):
      drivers: espi: Kconfig cosmetic changes
      boards: mec1501modular_assy6885: Turn on peripherals on the board
      soc: arm: mec1501: Update espi kconfig variable
      API: eSPI: Add two more APIs for eSPI
      drivers: espi: Implement peripheral api in the driver
      soc: microchip_mec: Add header for extracting eSPI data
      drivers: ps2: Compile out PS/2 in terms of an eSPI peripheral

Francois Ramu (9):
      driver: watchdog: Incorrect expression in wdt_wwdg_stm32.c #20504
      driver: timer: st_stm32: add lptimer management to stm32wb series
      soc: arm: st_stm32: add driver lptimer management to stm32wb series
      boards: arm: st_stm32: add lptimer to nucleo_wb55rg board
      driver: watchdog: Error handling issues in wdt_wwdg_stm32.c #20503
      driver: i2c: Error handling issues in i2c_stm32_runtime_configure
      driver: spi: Error handling issues in spi_stm32_configure
      driver: pwm: Error handling issues in pwm_stm32_get_cycles_per_sec
      driver: serial: Error handling issues in uart_stm32_set_baudrate

François Delawarde (1):
      debug: tracing: Use proper API to fetch thread name

George Stefan (1):
      Bluetooth: controller: split: Fix check for control procedures request

Henrik Brix Andersen (1):
      doc: release notes: mention EEPROM API and drivers in release notes

Hosun Zhu (1):
      zephyr-env.sh: reduce posixargzero side effects.

Ioannis Glaropoulos (20):
      tests: stack_random: fix reading volatile variable
      boards: arm: nrf5340_dk: fix nRF Cache and NVMC macro usage
      tests: lib: mem_alloc: minor typo fixes in README file
      test: lib: mem_alloc: enable user mode in newlibcnano test
      cmake: copy globals from libc_nano.a to z_libc_partition
      arch: arm: userspace: add ip to clobber list in arch_syscall_invokeX
      boards: arm: nrf53: add missing Dev Kit information
      boards: arm: nrf: change board docs to link to Nordic Infocenter
      CODEOWNERS: add code owners for nRFx IPM driver
      boards: arm: mps2_an521: enable testing on mps2_an521 by default
      arch: enable MPU Gap filling by default in build without user mode
      boards: arm: add new boards into v2.1 release notes
      arch: arm: release notes section for Zephyr v2.1 (Cortex-M)
      tests: kernel: add kernel and sleep tags in tests
      drivers: timer: SysTick: remove unnecessary masking
      drivers: timer: SysTick: document internal function and variables
      drivers: systick: fix calculation of absolute cycles count in ISR
      drivers: timer: SysTick: enforce proper min & max SysTick LOAD values
      tests: drivers: watchdog: exclude platforms with SAM WDT from testing
      doc: release: add note for new SoC series support in v2.1.0 release

Jan Tore Guggedal (1):
      drivers: sensor: bme680: Use DBG log level for non-error

Jan Van Winkel (3):
      subsys/fs/shell: Prevent buffer overrun when creating abs path
      cpp: Use malloc/free instead of kernel variants in new/delete
      tests: cpp: Extended c++ test case to cover new/delete

Joakim Andersson (6):
      Bluetooth: doc: Document HCI errors for connected callback
      Bluetooth: GATT: Fix taking address of packed member of struct sc_data.
      Bluetooth: Kconfig: Fix host phy and data length update dependency
      Bluetooth: Host: Fix deadlock calling API functions from SMP callbacks
      Bluetooth: Host: Fix silent LE conn param update command failure
      Bluetooth: Host: Fix create connection fails to stop scanner

Johan Hedberg (8):
      Bluetooth: hci_raw: Fix buffer init after allocation
      Bluetooth: hci_raw: Add support for specifying buffer headroom
      Bluetooth: host: Fix command buffer corruption
      Bluetooth: host: Shrink size of struct bt_conn_tx
      Bluetooth: host: Fix deadlocks with pending TX packet handling
      Bluetooth: host: Move system workqueue special case to the right place
      Bluetooth: L2CAP: Process fixed channels in the RX thread
      CODEOWNERS: Remove sjanc from samples/bluetooth/

Johann Fischer (7):
      samples: ipsp: fix build reply function
      samples: ipsp: use log_strdup(transient_string)
      usb: bluetooth: make HCI event endpoint size configurable
      usb: bluetooth: do not use ZLP for HCI event transfers
      drivers: eth_enc424j600: check received frame length
      drivers: usb_dc_stm32: do not restrict out stage transfers to one MPS
      drivers: amg88xx: check i2c write return value

Jose Alberto Meza (1):
      samples: drivers: espi: Fix #20505 and #20506 coverity issues

Kamil Piszczek (6):
      boards: arm: nrf5340_dk_nrf5340: bind shared memory with ipc shim in dts
      samples: bluetooth: adding hci_rpmsg sample
      drivers: bluetooth: hci: driver based on RPMsg transport
      boards: nrf5340_dk_nrf5340: enable VS commands if building with BT
      boards: nrf5340_dk_nrf5340: enable ECC if building with BT
      boards: nrf5340_dk_nrf5340: use RPMsg as default HCI driver for BLE

Karol Lasończyk (1):
      drivers: ipm: add nRFx IPM driver

Krzysztof Chruscinski (5):
      tests: drivers: counter: Fix coverity issue
      drivers: clock_control: Fix Coverity issue in nrf_clock_calibration
      drivers: clock_control: Remove false description of clock_control_async_on
      drivers: clock_control: Clarify allowed calling context of API calls
      shell: Fix potential overwrite when using strncpy

Kumar Gala (3):
      sanitycheck: add setting runner type for J-Link & STLink
      sanitycheck: Add support for TI XDS110 to --generate-hardware-map
      arch/arm: Fix gcc-9.2 warning with z_arch_syscall_invoke6

Laczen JMS (1):
      subsys/fs: nvs Coverty CID205795 & CID205803 corrections

Laurent Meunier (1):
      doc: Remind users about environment variables in getting started

Lingao Meng (3):
      Bluetooth: Mesh: Fixes Config client send publish message
      Bluetooth: Mesh: Fixes Delete On Node
      Bluetooth: Mesh: Fixes wrong return value

Loic Poulain (2):
      boards: arm: mimxrt1064_evk: Fix display support
      video: mt9m114: Fix integer handling issues

Maksim Masalski (1):
      tests: remove duplicate name for the kernel arch.interrupt test

Marcin Niestroj (7):
      gpio: stm32: statify gpio_stm32_enable_int()
      gpio: stm32: split helper functions from gpio_stm32_enable_int()
      gpio: stm32: support disabling and reenabling interrupts on gpio pin
      sensors: lis2dh: fix raw value to sensor_value conversion
      sensors: lis2dh: fix raw value scaling
      dts: bindings: lsm303agr: add new bindings based on lis2dh
      sensors: lis2dh: use proper scale factor for lsm303agr

Marcin Szymczyk (1):
      drivers: ipm: nrfx: add event_index assertion

Markus Fuchs (1):
      net: tls: Add sendmsg

Martí Bolívar (4):
      scripts: dts: improve error message on compatible type error
      scripts: fix misc-flasher runner
      cmake: cache DTS bindings directory
      scripts: west sign: use edtlib for flash configuration

Maureen Helm (6):
      doc: Add missing html redirect entries for mimxrt10{20,60,64}_evk boards
      boards: rv32m1_vega: Configure led pinmuxes as gpios
      CODEOWNERS: Fix sensor samples
      disk: sdhc: Remove logically dead code from spi sdhc driver
      boards: arm: Sort supported list in alpha order for nxp boards
      boards: arm: Add missing supported features to nxp imx rt boards

Maximus Liu (1):
      Bluetooth: Mesh: Fixes seg_tx_reset adv buf unref

Mieszko Mierunski (2):
      drivers: nrf: Fix values in UARTE async API callback.
      drivers: nrf: Fix UART and UARTE hanging on RX errors

Morten Priess (1):
      bluetooth: controller: Perform synchronized LLL reset via mayfly

Oleg Zhurakivskyy (1):
      samples: net: echo-server: Increase the stack size for the coverage

Peter A. Bigot (7):
      drivers: gpio: fix sifive interrupt management
      dts: improve documentation for arduino-header-r3
      usb: dfu: correct upload implementation
      boards: hifive1_revb: add arduino gpio nexus map
      boards: hifive1_revb: add ardunio_i2c support
      drivers: i2c_sifive: fix deprecation warnings
      boards: hifive1*: fix ticks per second

Peter Bigot (16):
      boards: mark gpio as supported capability where known missing
      drivers: sensor: mcp9808: clean up I2C API usage
      samples: sensor: mcp9808: fix frdm_k64f devicetree overlay
      samples: sensor: lps22hb: remove trigger-related code
      CODEOWNERS: update power management for Nordic staffing changes
      tests: kernel: critical: add output to support diagnostics
      samples: i2c_scanner: provide more complete output
      docs: kernel: standardize thread state capitalization
      sanitycheck: recognize more hardware
      sanitycheck: allow device runner board-id to differ from board id
      sanitycheck: summarize device testing targets before starting
      sanitycheck: remove serial port assignment from unconnected devices
      drivers: timer: nrf_rtc_timer: fix lost ticks from unannounced elapsed
      usb: dfu: default progressive erase on Nordic
      drivers: timer: SysTick: rework late overflow check
      drivers: systick: avoid starving clock announcements

Piotr Mienkowski (2):
      CODEOWNERS: Add entry for gpio drivers
      soc: gecko: Enable SWO output during SoC initialization

Piotr Zierhoffer (1):
      net: ip: ipv6_nbr: Fix uninitialized variable in ipv6_nbr

Radoslaw Koppel (1):
      settings: Set a default value to name_key before processing

Ravi kumar Veeramally (3):
      tests: net: Fix TCP tests Coverity issue
      tests: net: Fix CoAP coverity issues
      samples: net: Fix WS client Coverity issue

Richard Osterloh (1):
      boards: arm: nucleo_g431rb: Fix flash back storage settings

Sebastian Bøe (1):
      cmake: make the BT_HCI_TX_STACK_SIZE's prompt conditional

Shih-Wei Teng (1):
      object tracing: Fix the issue that objects lost from trace list

Stanislav Poboril (1):
      dts: nxp_imx6sx_m4: fix gpio5 int num

Stephane D'Alu (1):
      Bluetooth: shell: Fix missing return statement for name command

Stephanos Ioannidis (7):
      arch_interface: Remove duplicate irq_offload_routine_t typedef.
      sanitycheck: Fix incorrect QEMUHandler status reporting.
      sanitycheck: Relocate QEMU-specific code to QEMUHandler.
      settings: Fix undefined behaviours in settings_line.c.
      tests: cmsis_rtos_v2: Fix warning in old GCC.
      cmake: Support renode 1.8.2.
      arch: arm: Add Cortex-R release notes for Zephyr v2.1.

Tavish Naruka (1):
      disk: sdhc: reinitialize SPI SDHC always

Torsten Rasmussen (1):
      openamp: ensure external openamp is build when target is out-of-date

Trond Einar Snekvik (1):
      Bluetooth: Mesh: Restructure doc

Ulf Magnusson (7):
      scripts: edtlib: Avoid modifying the global yaml.(C)Loader
      scripts: dtlib/edtlib: Make output consistent on Python 3.5-
      scripts: edtlib: Move imports after overview comment
      samples: CAN: kconfig: Fix ref. to CONFIG_CAN_AUTO_BUS_OFF_RECOVERY
      tests: drivers: build_all: dts_fixup.h: Fix misplaced #endif
      west.yml: Update ci-tools to run the (e)dtlib test suites in CI
      kconfig: Fix up newly-introduced copy-pasted headers

Vikrant More (12):
      samples: mesh: nrf52: Simplified implementation
      sample: mesh: nrf52: complete inst. transition without timer
      samples: mesh: nrf52: removed redundant coding
      sample: mesh: nrf52: coding style improvement
      samples: mesh: nrf52: corrected  Gen. move msg handler implementation
      samples: mesh: nrf52: removed unnecessary global vaiable
      samples: mesh: nrf52: increased main stack size
      samples: mesh: nrf52: coding style improvements
      samples: mesh: nrf52: considered delay even in case of inst. transition
      samples: mesh: nrf52: added some Kconfig
      samples: mesh: nrf52: improved comment
      samples: mesh: nrf52: corrected & improved transition implementation

Vinayak Kariappa Chettimada (14):
      Bluetooth: controller: split: Fix conn update to be cacheable
      boards: arm: nrf5340_dk: Enable DC/DC by default
      Bluetooth: controller: Fix Code PHY update support dependency
      Bluetooth: controller: split: Fix typo EVENT_RX_TX_TURNARROUND
      Bluetooth: controller: legacy: Fix the slow Enc Setup alternative
      Bluetooth: controller: split: Fix directed adv event interval
      Bluetooth: controller: split: Fix non-connectable event slot time
      Bluetooth: controller: split: Dont use continuous directed adv in nRF51
      Bluetooth: controller: split: Schedule first conn event ASAP
      Bluetooth: controller: Add missing BT_DEBUG_ENABLED define
      Bluetooth: controller: legacy: Add missing BT_DEBUG_ENABLED define
      Bluetooth: controller: split: Add missing BT_DEBUG_ENABLED define
      Bluetooth: controller: split: Fix aborting of connection req PDU
      Bluetooth: controller: Fix llcp_rx check assert

Vincent Wan (1):
      drivers: i2c: use CPU clock frequency in configuration on CC13XX/CC26XX

Wayne Ren (7):
      arch: arc: necessary fixes after normal idle is used for SMP
      arch: arc: split codes for SMP and codes for multicore
      arch: arc: do not use sleep instruction for nsim smp
      boards: nsim: add missed -firq for nsim_hs_smp
      arch: arc: clear ici interrupt during init
      drivers: timer: fix the bug for SMP
      soc: arc: enable SYSTEM_CLOCK_SLOPPY for SMP

Wentong Wu (2):
      spi: pass correct buffer to spi driver given NULL to spi_transceive
      spi: fix spell typo in spi handler

Wolfgang Puffitsch (1):
      tests: Add test for MetaIRQ preemption of cooperative thread

Yannis Damigos (1):
      i2c_ll_stm32: Allow to send zero length message

peng1 chen (2):
      tests/arch/x86/info: add console harness and regex
      up_squared: config the flash runner.

```",59771425
1516,False,True,2019-11-11T01:57:17Z,2019-11-11T02:04:23Z,"```
Adam Kondraciuk (1):
      drivers: flash: nrfx: Modify flash address validation

Alberto Escolar Piedras (12):
      native_posix & nrf52_bsim: Add z_arch_irq_connect_dynamic()
      Kconfig: Correct COVERAGE help msg
      sanitycheck: Use system gcov for unit testing by default
      doc: contribution guidelines: Clarify use of uncrustify
      nrf52_bsim: Require v1.8 of the HW models
      toolchain: Fix for off-tree toolchains
      arch: posix: isolate arch-soc/board IF from kernel-arch IF
      lvgl: Suppress memory leak errors detected by valgrind
      CODEOWNERS: Add owner for valgrind suppression file
      posix arch: Untangle headers
      nrf52_bsim: Fix: shell return code should be != 0 on ASSERT
      nrf52_bsim: Update the NRF52 HW models revision

Alex Porosanu (7):
      ext: hal: openisa: sync with updates for BLE SW LL
      dts: bindings: add modem binding for RV32M1 Generic FSK node
      dts: riscv: add Generic FSK node
      doc: riscv: rv32m1_vega: add BLE software link layer info
      samples: bluetooth: add overlays for RV32M1 SoC for BLW SW LL
      bluetooth: kconfig: disable some options for openisa/RV32M1
      samples: bluetooth: peripheral_hr: add VEGABoard sanity testing

Alex Tsamakos (2):
      boards: arm: add support for Actinius Icarus board (uC: Nordic nRF9160)
      boards: actinius_icarus: change defaults to use new kconfig functions

Alexander Wachter (12):
      drivers: can: mcux: Persuade the driver to send in chronological order
      doc: CAN: Extend CAN doc and moved it to networking
      include: drivers: CAN: changed return parameter description
      shields: link_board_can: Fix bus-speed and SPI definition
      drivers: CAN: MCP2515: Move OSC frequency definition to device-tree
      drivers: sensors: ens210: fix fractional part calculation
      drivers: can: Extend CAN API for bus-state management.
      samples: driver: Extend CAN sample
      include: drivers: can: Fix zframe to frame conversion
      samples: basic: Remove disco sample
      drivers: CAN: Limit the DLC to 8
      tests: can: api: Add MCP2515 DT label to the device name list

Alexey Brodkin (2):
      arch: arc: Implement z_arch_system_halt()
      Samples: Add SMP Pi

Anas Nashif (77):
      ci: do not export BSIM env vars if bsim is not available
      doc: link-roles: convert bytes to string
      doc: tracing: add figure for tracing with systemview
      doc: tracing: move ctf docs into index
      doc: tracing: include API docs into documentation
      doc: c library: document which c functions are implemented.
      doc: tracing: link kconfig options using :option:
      drivers: gpio: remove sch gpio driver
      drivers: gpio: remove qmsi gpio driver
      drivers: pwm: remove qmsi pwm driver
      drivers: flash: remove qmsi flash driver
      drivers: watchdog: remove qmsi watchdog driver
      drivers: dma: remove qmsi DMA driver
      drivers: uart: remove qmsi UART  driver
      drivers: i2c: remove qmsi I2C  driver
      drivers: counter: remove qmsi counter  driver
      drivers: pinmux: remove qmsi pinmux driver
      CODEOWNERS: remove qmsi drivers
      usb: remove QMSI include
      west: remove qmsi module
      dts: remove unused QMSI bindings
      tests: timer_api: exclude qemu_x86_coverage
      disk: sdhc: fix command name sdhc_cmd_r1
      doc: move cmsis rtos API docs to portability/
      docs: cleanup cmsis RTOS api docs
      docs: add posix OS abstraction layer section
      docs: kernel: K_FP_REGS is not x86 only
      docs: kernel: thread documentation enhancements and cleanup
      docs: remove deprecated doxygen options
      tests: build kernel/common on all platforms, always
      tests: ztest: no smp support in unit tests
      tests: tracing: add tests for tracing features
      tests: remove useless stub test
      toolchain: check if __deprecated is defined
      tests: unit: do not build with -m32 on macOS
      tests: move base64 to a unit test
      tests: move crc to a unit test
      tests: make rbtree tests unit tests
      tests: move cmsis_rtos_v1 into portability
      tests: move cmsis_rtos_v2 into portability
      tests: move xtensa_asm2 tests to tests/arch
      tests: cleanup test_build
      tests: move list test to be unit tests
      tests: move intmath test to be unit tests
      tests: move util test to be unit tests
      tests: move Bluetooth at tests under tests/bluetooth
      tests: convert util test to a unit test
      arch: posix: fix function name in comment
      tracing: remove useless ifdefing for CONFIG_TRACING
      tracing: add missing end_call for k_mutex_unlock
      tests: fix identifiers
      tests: board_shell: rename test.yaml to testcase.yaml
      tests: rtc: rename test.yaml to testcase.yaml
      tests: tinycrypt: build only on native_posix
      drivers: espi: move header to include/drivers
      west: openocd: support pre init command option
      tests: smp: do not whitelist, use filter
      scripts: remove obsolete conversion script ini2yaml.py
      scripts: remove unused waitpid script
      sanitycheck: Complete overhaul and job handling rework
      benchmarks: capture benchmark data in a file
      ci: adapt ci script for new sanitycheck
      doc: sanitycheck: document all new features
      ci: cleanup test manifests
      sanitycheck: fix error handling with host binaries
      scripts: add script for listing closed bugs
      sanitycheck: fail on warnings
      ztest: add missing headers
      sanitycheck: enable valgrind checking using an option
      updatehub: move header to library
      arch: doxygen: group architecture interfaces
      sanitycheck: get environment regardless of option specified
      sanitycheck: exit thread executor on exceptions
      sanitycheck: deal with board that have no DTS
      tests: benchmarks: parse output on passing benchmark
      drivers: gpio: remove altera gpio driver
      Bluetooth: controller: openisa: do not use instances for  openisa IRQs

Andrei Emeltchenko (24):
      usb: device: Allow limited amount of tries for write
      boards: mec15xxevb_assy6853: Correct jumper settings
      doc: mec15xxevb_assy6853: Correct socket name
      drivers: watchdog: Trivial style cleanup
      drivers: counters: Fix coding style issues
      boards: mec15xxevb_assy6853: Add PWM alias for tests
      boards: mec15xxevb_assy6853: Enable pwm sanitycheck
      drivers: pwm: Fix wrong dc calculation for pwm tests
      drivers: pwm: pwm_mchp_xec: Fix spelling
      tests: pwm: Fix missing unit test
      boards: mec15xxevb_assy6853: Include counter, adc, watchdog to tests
      tests: adc: Correct tags
      drivers: adc: adc_mchp_xec: Fix incorrect channel mask check
      drivers: adc: adc_mchp_xec: Add error logs
      adc: Trivial style cleanup
      usb: Remove extra logs
      samples: usb: webusb: Update README and sample link
      samples: net: dumb_http_server: Add netusb configuration
      samples: net: dumb_http_server: Add zero configuration
      net: llmnr_responder: Fix implicit declaration error
      samples: net: Clean up netusb overlay configuration
      drivers: pwm: pwm_mchp_xec: Fix u32_t overflow for freq calculation
      samples: usb: wpanusb: Update documentation
      samples: usb: webusb: Update sample README

Andrei Gansari (4):
      drivers: remove arm's qemu systick workaround
      boards: MPS2 targets enabled icount
      tests: scheduler_api removed MPS2 workaround
      tests: schedule_api adapt to slow ticks

Andrew Boie (100):
      kernel: fix default z_arch_cpu_halt()
      x86: fix XIP SOC support and defaults
      xtensa: remove legacy arch implementation
      log_core: always build stubs when !userspace
      board: qemu_nios2: set yaml RAM/ROM size
      tests: profiling_api: increase idle stack size
      tests: bluetooth: mesh: adjust microbit config
      tests: increase min_ram for two tests
      tests: enable log in immediate mode by default
      kernel: remove z_fatal_print()
      doc: add more details about memory domains
      tests: net: stop whitelisting
      doc: provide error handling documentation
      timing_info: rename globals
      kernel: rename z_new_thread()
      kernel: renamespace z_is_in_isr()
      kernel: renamespace arch_nop()
      kernel: add arch interface for idle functions
      kernel: rename thread return value functions
      kernel: rename kernel_arch_init()
      x86: remove redunant idle timestamp setting
      kernel: rename boot time globals
      kernel: rename main/idle thread/stacks
      kernel: rename __swap
      arc: rename k_cpu_sleep_mode
      kernel: rename z_is_idle_thread()
      tracing: simplify idle thread detection
      kernel: add arch abstraction for irq_offload()
      logging: abstract log_core_init()
      log: remove duplicate log_printk() definition
      logging: remove return value from log_printk()
      shell: fix configuration issue
      bluetooth: monitor: don't build backend if minimal
      logging: add minimal implementation
      kernel: use logging for userspace errors
      kernel: remove vestigal printk references
      x86: fix EXCEPTION_DEBUG dependency
      arm: arch code naming cleanup
      x86: abstract toplevel page table pointer
      sys_io: pull in toolchain.h
      kernel_includes: add irq.h
      posix: expose z_arch_irq_lock/unlock as inlines
      arches: fix z_arch_is_in_isr() defintion
      arm: move z_arch_switch_to_main_thread to C code
      xtensa: fix z_arch_switch()
      arches: fix z_arch_k_cycle_get_32() definitions
      drivers: hpet: fix includes
      intel64: add inline definition of z_arch_switch()
      x86_64: fix arch headers
      x86: intel64: enable no-execute
      x86: intel64: don't drop debug sections
      kernel: add architecture interface headers
      x86: move mmustructs.h
      x86: mmu: get rid of x86_page_entry_data_t typedef
      x86: refactor mmustructs.h
      tests: move x86_mmu_api test
      tests: move boot_page_table test
      x86: intel64: set the WP bit for paging
      tests: x86_mmu_api: don't include 32bit cpu header
      x86: move z_x86_early_serial_init()
      qemu_x86_long: enable early console
      x86: intel64: fatal: minor formatting improvements
      riscv: properly pull in irq_offload logic
      qemu_x86_long: don't munge to elf32 in-place
      x86: remove unused thread arch member
      include: gcc.h: include header needed by posix
      kernel: activate arch interface headers
      x86: arm: rename some functions
      kernel: update z_arch_switch() documentation
      CODEOWNERS: change x86-related ownership
      locore: organize data by type
      intel64: don't set global flag in ptables
      x86: intel64: set up memory sections
      x86: mmustructs: use Z_STRUCT_SECTION_ITERABLE()
      x86: intel64: enable MMU region list
      x86: generate runtime 64-bit page tables
      x86: intel64: set page tables for every CPU
      REVERTME: x86: disable X86_MMU if MP_NUM_CPUS != 1
      samples: add userspace producer/consumer sample
      kernel: use uintptr_t for syscall arguments
      userspace: don't split args on 64-bit systems
      x86: unify stack macro definitions
      x86: fix z_x86_page_tables_get() for 64-bit
      printk: print pointers on 64-bit properly
      x86: consolidate STACK_ROUND_* definition
      x86: consolidate some fatal error code
      x86: enable stack overflow detection on 64-bit
      kernel: fatal: show faulting CPU
      x86: up-level page fault handling
      kernel: restrict irq_offload() to test cases
      arc: rename some arc-specific functions
      arm: remove unused header
      kernel: rename z_arch_ to arch_
      doc: add kernel_arch_interface.h to doc generation
      doc: add more Kconfig defines
      doc: add auto-generated architecture interface
      doc: update DOXY_SOURCES
      kernel: sychronize irq_offload() access
      x86: enable MMU on 64-bit with SMP
      kernel: allow threads to sleep forever

Andrzej Głąbek (27):
      modules: Kconfig: Unify the way of enabling instances in nrfx drivers
      modules: Kconfig: Make options enabling nrfx drivers easier to access
      modules: Kconfig: Add missing options enabling nrfx drivers
      modules: hal: nordic: Update the module revision
      dts: nordic: nrf9160: Add missing peripheral nodes
      modules: hal: nordic: Remove dependency on DT from NRF_* mappings
      nordic: Use hal/ in all inclusions of nrfx HAL header files
      soc: nordic: Include <nrfx.h> instead of <nrf.h> from <soc.h>
      soc: nordic: Get rid of nrf_common.h
      dts: Use separate compatibles for Nordic TWI/TWIM/TWIS peripherals
      dts: Use separate compatibles for Nordic SPI/SPIM/SPIS peripherals
      modules: hal_nordic: Enable extended SPIM features only when needed
      dts: nrf52840: Correct the base address in spi3 node
      soc: nordic_nrf: Add validation of base addresses defined in dts
      dts: nordic: Add #pwm-cells property to Nordic PWM nodes
      boards: nrf: Add pwm-led0 alias in all Nordic DKs with enabled PWM node
      drivers: pwm_nrf5_sw: Remove PWM_NRF5_SW_0_DEV_NAME Kconfig option
      modules: hal_nordic: Update nrfx to version 1.8.1
      dts: Add bindings for Nordic nRF family IPC and RNG peripherals
      drivers: pwm_nrfx: Fix the driver to allow changing period on the fly
      modules: hal_nordic: Update nrfx to version 2.0.0
      soc: nordic_nrf: Update validation of base adresses with new entries
      drivers: nrfx: Update implementations after switching to nrfx 2.0.0
      bluetooth: nordic: Update nrfx HAL calls with pointers to HW instances
      nordic: Update nrfx HAL function calls after switching to nrfx 2.0.0
      samples/boards/nrf91/nrfx: Align implementation with nrfx 2.0.0
      nrf52_bsim: Update the NRF52 HW models revision

Andrzej Puzdrowski (10):
      fcb: start using errno codes
      cmake: check sdk_version format
      tests/subsys/settings/nffs: fix not initialized variables issues
      CODEOWNERS: extend flash driver ownership
      settings: (NVS) fetch sector size from driver
      doc: include flash page layout API
      doc: fix flash_area_get_sectors doc
      tests/subsys/setting: cleanup deletion tests
      settings: fix integer to unsigned compression in nvs back-en
      doc/reference: move the settings doc higher

Andy Liu (1):
      dts: arm: nxp_rt: Fix typo in DT_PWM_MCUX_3_INDEX definition

Andy Ross (25):
      userspace: Support for split 64 bit arguments
      tests/kernel/mem_protect/syscalls: Add cases to test 64 bit arguments
      kernel: Port remaining buildable syscalls to new API
      kernel: Port remaining syscalls to new API
      kernel: syscalls: Whitespace fixups
      kernel/sched: Fix reschedule points in SMP
      kernel/sched: Add missing SMP thread abort case
      kernel/sched: Reset time slice on swap in SMP
      kernel/thread: Must always initialize is_idle field
      kernel/idle: Use normal idle in SMP when IPI is available
      kernel/timeout: Fix timeslicing edge case in SMP
      tests/kernel/sched/schedule_api: Relax preemption order constraints
      ztest: Add ""1cpu"" test variants for SMP
      tests: Never disable SMP
      drivers/timer/hpet: Work around crazy qemu behavior
      kernel/sched: Don't make an IPI if we don't need it
      tests/kernel/sched/schedule_api: Filter for MULTIQ platforms
      doc/reference/kernel: Add SMP archtecture doc
      tests/kernel/spinlock: No need to use MP API anymore
      tests/kernel/mp: Update the MP test to run on emulated platforms
      arch/x86/intel64: Fix assumption with dummy threads
      kernel: Add new uniform time unit conversion API
      tests/kernel/timer/timer_api: Add tests for the new conversion routines
      kernel: Express legacy time conversions using new API
      kernel/sys_clock.h: Deprecate and convert uses of old conversions

Antony Pavlov (3):
      doc: boards: arm: nucleo: fix typo in reference to blinky-sample
      arm: stm32f0: introduce STM32F030X4 stuff
      boards: arm: add support for STM32F030 DEMO board (stm32f030_demo)

Armando Visconti (18):
      dts/bindings: sensors: remove '-magn' extension from lis2mdl name
      driver/sensor: add IIS3DHHC accelerometer sensor
      driver/sensor: IIS3DHHC: Fix DT_ macro typo for CS GPIO
      soc: arm: st: add stm32l4r9xx support
      drivers: pinmux: stm32l4x: Add missing SPI macros
      boards: arm: Add support for SensorTile.box board
      sample/board: add SensorTile.box sample for testing
      driver/sensor: lis2mdl: Fix the temperature fractional value
      driver/sensor: lis2mdl: change order of operations in trigger init
      driver/sensor: lis2mdl: make use of STdC definitions
      driver/sensor: lis2mdl: remove sensitivity
      board/shields: x-nucleo-iks01a3: configure irq-gpios for lis2mdl
      sample/shield: x-nucleo-iks01a3: add trig/temp/cfg support to LIS2MDL
      samples/96b_argonkey: microphone: (FIX) stop dmic trigger
      modules/hal_st: Align sensor drivers to stmemsc HAL i/f v1.02
      driver/sensor: lis2mdl: handle SPI 4-wires mode selection
      boards/arm: SensorTile.box: fix LIS2MDL configuration
      sample/board: sensortile_box: add lis2md support

Bartosz Sokolski (1):
      usb: device: limit interface bits in setup message to 8

Benjamin Lindqvist (1):
      net: coap: Add internal init function to seed message_id

Benjamin Valentin (13):
      drivers: dma: sam0: fix DMA to peripheral transfer on SAMD5x
      serial: sam0: Add support for SAME54
      watchdog: sam0: Add support for SAME54
      gpio: sam0: Add support for PORTD
      pinmux: sam0: Add support for PORTD
      gpio: sam0: provide PORT_PMUX_PMUXE_A_Val define
      interrupt_controller: sam0: Add support for SAME54
      west.yml: update hal_atmel for SAMD5x/SAME5x
      soc: atmel_sam0: Add SAME54
      soc: sam0: Add SERCOM fixup for samd5x
      soc: atmel_sam0: Add SAMD51
      soc: atmel_sam0: Add SAME51
      soc: atmel_sam0: Add SAME53

Björn Stenberg (1):
      STM32 wdg: Remove use of float

Brett Witherspoon (1):
      drivers: ieee802154: add CC13xx / CC26xx driver

Bruno TISSERAND (1):
      boards: Add support of arduino connector on nucleo_wb55rg board

Carles Cufi (15):
      Bluetooth: log: Rework BT_ASSERT
      doc: cmake: Fix PYTHONPATH on Windows
      west: flash: Fix exception on build folder guessing
      Revert ""cmake: Error-out when 'project' is invoked too early""
      doc: bluetooth: Add 1.14 qualification listings
      tests: bluetooth: shell: Revert back to default logging settings
      Bluetooth: common: Statically check for immediate logging
      Bluetooth: controller: Further trim connection-related code
      Bluetooth: controller: hci: Obtain pdu_data using a macro
      Bluetooth: controller: Optimize calls to hci_get_class()
      Bluetooth: controller: Introduce a new LLCP class
      Bluetooth: controller: Handle remote version as a prio event
      manifest: Update the revision of tinycbor
      dts: bindings: Fix u-blox misspelling
      Bluetooth: hci: Fix Create Connection Cancel assert

Carlo Caione (6):
      drivers: uart_pl011: Remove cortex_m header
      drivers: uart_pl011: Fix compilation when CONFIG_UART_INTERRUPT_DRIVEN=n
      drivers: uart_pl011: Fix unused variable warning
      kconfig: uart_pl011: Do not limit PL011 driver to ARM family
      irq: cortex-r: Fix wrong irq enabling
      kernel: include: Fix warning when !CONFIG_SYS_CLOCK_EXISTS

Charles E. Youse (101):
      arch/x86_64: do not modify CR8 in interrupt path
      arch/x86: remove support for IAMCU ABI
      drivers/pci: remove support for Quark PCI legacy bridge
      drivers/gpio/gpio_dw: remove support for legacy PCI interface
      drivers/ethernet/eth_dw: remove DesignWare Ethernet driver
      drivers/spi/spi_intel.c: remove Quark SPI support
      drivers/pci: remove legacy PCI implementation
      arch/x86: linker.ld: do not pad _image_rom_end when XIP
      subsys/testsuite/coverage: move initialization vector to RODATA
      arch/x86: inline x2APIC EOI
      arch/x86: rename X64 references to Intel64
      soc/x86/apollo_lake: architecture is goldmont
      cmake: select appropriate Zephyr SDK compiler for CONFIG_X86_LONGMODE
      arch/x86/pcie: use Z_IRQ_TO_INTERRUPT_VECTOR() macro
      arch/x86: refactor offsets.c
      arch/x86: refactor arch.h
      arch/x86: add register definitions to msr.h
      arch/x86: refactor kernel_arch_data.h
      arch/x86: add placeholders for Intel64 headers
      arch/x86: initial Intel64 bootstrap framework
      arch/x86: share implementations of sys_io primitives
      arch/x86: fix multiboot.c pointer cast
      arch/x86: rework z_arch_irq_lock() and z_arch_irq_unlock()
      arch/x86: initial Intel64 support
      arch/x86: set default stack sizes
      arch/x86: add IRQ offloading to Intel64 subarch
      arch/x86: Add exception reporting code for Intel64
      arch/x86: add nested interrupt support to Intel64
      arch/x86: complete 64-bit linker script
      arch/x86: refactor z_do_read_cpu_timestamp32()
      boards/x86: add Intel64 (64-bit long-mode) QEMU target board
      arch/x86: select CONFIG_64BIT when CONFIG_X86_LONGMODE
      arch/x86: refactor bitfield-manipulation functions
      arch/x86: add Z_ARCH_THREAD_STACK_LEN() macro
      arch/x86: disable inapplicable tests for Intel64
      arch/x86: tests/cmsis: disable some CMSIS tests in 64-bit mode
      tests/posix/common: make 64-bit clean
      arch/x86: add SSE floating-point to Intel64 subarch
      arch/x86: add support for CONFIG_STACK_SENTINEL
      tests/subsys/logging/log_core: increase log buffer size
      arch/x86: optimize nested IRQ entry/exit
      arch/x86: clean up inline assembly format
      arch/x86: honor CONFIG_INIT_STACKS in 64-bit mode
      tests/posix/common: restructure to eliminate casts
      drivers/timer/hpet.c: migrate to devicetree
      arch/x86_64: add HPET definitions to arch.h
      boards/x86/qemu_x86: remove stale reference to HPET_TIMER_IRQ
      arch/x86/intel64: do not use thread_state for arch data
      arch/x86/ia32: move IA32 thread state to _thread_arch
      subsys/debug: eliminate PEFORMANCE_METRICS and CPU_CLOCK_FREQ_MHZ
      tests/benchmarks: fix BOOT_TIME_MEASUREMENT
      arch/x86: refactor APIC timer configuration to SoC level
      tests/benchmarks/boot_time: disable on QEMU targets
      tests/benchmarks/boot_time: disable on inapplicable targets
      boards/x86/gpmrb: disable Multiboot header generation
      arch/x86: inline x2APIC EOI in 64-bit code
      subsys/logging: change default stack size on x86 in long mode
      arch/x86: restructure ISR stacks (conceptually)
      arch/x86: share declaration of _interrupt_stack
      arch/x86: (Intel64) define TSS in C, not assembly
      boards/qemu_x86: remove stale flash reference from qemu_x86_long
      arch/x86: (Intel64) move STACK_SENTINEL check
      arch/x86: (Intel64) use TSS for per-CPU variables
      arch/x86: (Intel64) migrate from __swap to z_arch_switch()
      arch/x86: (Intel64) move RAX to volatile register set
      cmake: samples/tests: update cmake_minimum_required() to 3.13.1
      kernel/idle.c: fix compilation failure (SMP && !SCHED_IPI_SUPPORTED)
      arch/x86: rudimentary ACPI support
      arch/x86: multiboot: migrate multiboot initialization to early C
      samples/boards/x86_info: add platform information tool
      arch/x86: add support for non-trivial memory maps
      arch/x86: rename CONFIG_X86_MULTIBOOT and related to CONFIG_MULTIBOOT
      arch/x86: rename CONFIG_X86_ACPI and related to CONFIG_ACPI
      samples/board/x86_info: move to tests directory
      arch/x86: multiboot.h: use BIT() macros instead of explicit shifts
      drivers/i2c/i2c_dw.c: make 64-bit clean
      drivers/i2c/i2c_dw: really, really make 64-bit clean
      kernel/Kconfig: clamp number of CPUs to 4
      arch/x86: (Intel64) start up on _interrupt_stack, not _exception_stack
      arch/x86: (Intel64) add z_arch_curr_cpu() to enable CONFIG_SMP=y
      arch/x86: elevate prep_c.c to common code
      arch/x86: (Intel64) add missing linker symbols
      arch/x86: factor out common assembly startup code
      arch/x86: drivers/loapic_intr.c: move local APIC initialization
      arch/x86: (Intel64) clear BSS before entering long mode
      arch/x86: (Intel64) optimize and re-order startup assembly sequence
      arch/x86: (Intel64) rename kernel segment constants
      arch/x86: (Intel64) use per-CPU parameter struct for CPU startup
      drivers/interrupt_controller/loapic.h: add IPI support
      arch/x86: alter signature of z_x86_prep_c() function
      arch/x86: (Intel64) implement SMP support
      arch/x86: limit number of IRQ vectors to 224
      arch/x86: (Intel64) fix conditional assembly in locore.S
      arch/x86: (Intel64) add scheduler IPI support
      arch/x86: (Intel64) do not lock interrupts around irq_offload()
      drivers/interrupt_controller/ioapic_intr.c: broadcast interrupts
      arch/x86: (Intel64) make z_arch_start_cpu() synchronous
      arch/x86: declare z_x86_prep_c() in kernel_arch_func.h
      arch/x86: (Intel64) initialize TSS interrupt stack from cpuboot[]
      arch/x86: do not assume MP means SMP
      tests/kernel/smp: make 64-bit clean

Chris Schramm (1):
      drivers/gpio: pcal9535a: fix i2c write

Christian Taedcke (3):
      boards/arm: Add arduino_header support to nucleo f429zi
      net: ppp: Answer LCP Echo-Request with Echo-Reply
      soc: silabs_exx32: Enable mpu on efr32mg soc

Christoph Reiter (2):
      samples: fix signed overflow in blinky example
      doc: fix list formatting in ring_buffer

Christoph Schramm (1):
      driver: modem: add simple power management to modem receiver

Daniel Craviee (2):
      drivers: spi: Add LiteX SPI driver
      boards: litex_vexriscv: Enable LiteX SPI driver

Daniel Leung (28):
      doc: mailbox: fix typos and clarify meaning of struct field
      irq_nextlevel: add API to query if an IRQ line is enabled
      drivers/interrupt_controller: cavs_ictl: add get_line_state()
      drivers/interrupt_controller: dw_ictl: add get_line_state()
      drivers/interrupt_controller: rv32m1_intmux: add get_line_state
      xtensa: rename z_arch_irq_is_enabled for multi-level interrupts
      intel_s1000: implement z_soc_irq_is_enabled()
      xtensa: asm2: add code for double exception vector
      dts/watchdog: microchip,xec: fix cmake warnings
      west.yml: update hal_microchip to latest revision
      drivers/pwm: Add support for Microchip's XEC PWM devices
      boards/mec1501: Configure pinmux relevantly for PWM
      boards: mec15xxevb_assy6853: enable PWM in DTS
      board: mec15xxevb_assy6853: generate flashable image
      drivers/adc: Add support for Microchip's XEC ADC device
      boards: mec15xxevb_assy6853: enable ADC in DTS
      boards/mec1501: configure pinmux for ADC
      soc/arm: Add the ADC DTS fixup for mec1501
      tests/adc_api: add parameters for mec15xxevb_assy6853
      west: esp32: use Python interpreter to execute ESP tool
      boards: mec15xxevb_assy6853: allow custom SPI config file
      x86: consolidate x86_64 architecture, SoC and boards
      cmake: toolchain/xtools: update to align with latest sdk-ng
      cmake: need to specify m32/m64 for x86_64 toolchain
      cmake: add --divide to GNU assembler options for x86
      west: add flash runner for DediProg
      boards: mec15xxevb_assy6853: enable flashing with build command
      soc: xtensa/intel_s1000_crb: fix build error on xtensa_api.h

Danny Oerndrup (1):
      kconfig: assert: Introduce kconfig option ASSERT_NO_FILE_INFO

David B. Kinder (15):
      doc: replace hlist with column-width class
      doc: reformat net-stack-arch doc for PDF output
      doc: update release notes index to use globbing
      doc: fix doc, boards, and samples misspellings
      doc: fix genrest turbo mode output
      doc: fix broken file and zephyr-app refs
      doc: forward-port 1.14.1 release notes to master
      doc: make consistent release notes titles
      doc: use multi-column display for long lists
      doc: add v1.14.1 docs to version pick list
      doc: fix display of monospaced text links
      doc: fix misspelling in API doxygen comments
      doc: fix misspellings in rst docs
      doc: fix misspellings in Kconfig files
      doc: fix refs to non-supported board

David Leach (9):
      doc: contribution guidelines: Specify roles and responsibilies
      subsys/random: Add cryptographically secure and bulk fill functions
      subsys/random: Add cryptographically secure random test cases
      boards: riscv: rv32m1: add support for GPIO debugging
      boards: riscv: rv32m1: use xoroshiro as default RNG
      soc: riscv: rv32m1: kconfig: use RV32M1 TRNG as an entropy generator
      bluetooth: controller: openisa/RV32M1: add debug pins support
      boards: riscv: rv32m1: enable BT related configuration
      release: Zephyr 2.1.0-rc1

David Lechner (1):
      doc: fix dead kconfig links

Dennis Wildmark (1):
      drivers: serial: Configurable GPIO management in NRFX UARTE

Dominik Ermel (1):
      west.yml: Update reference to TinyCBOR

Erwan Gouriou (36):
      drivers/pinmux: stm32: Use pull-up for _SPI_NSS pins
      dts/Kconfig: Remove unused HAS_DTS_ADC
      dts/Kconfig: Remove unused HAS_DTS_ETHERNET
      dts/Kconfig: Remove unused HAS_DTS_SPI
      dts/Kconfig: Remove symbol HAS_DTS_QDEC.
      dts/Kconfig: Remove symbol HAS_DTC_USB
      boards: nucleo_f411re: Fix to default configuration
      boards: nucleo_f103rb: fix dts file
      boards: stm32h747i_disco: Minor fixes
      boards: nucleo_wb55rg: Add missing flag around SPI _NSS pin definition
      boards: Clean up references to env variable PROJECT_SOURCE_DIR
      boards/shields: Enable shields samples on stm32mp157c_dk2
      Revert ""gpio: stm32: support disabling and reenabling interrupts on pin""
      tests/arch: arm_thread_swap: Increase no_optim case flash requirement
      drivers: pwm: Add STM32G4X PWM Support
      drivers: watchdog: Add STM32G4x Watchdog support
      samples/shields: x_nucleo_iks01a3: Filter on RAM > 16kbytes
      boards: stm32: Set arduino gpio connector on nucleo 64 pins boards
      doc: shields: Update shields doc with board overriding and variants
      doc: shields: Document shield variant board overriding
      boards: nucleo_f103rb: Fix missing include in dts file
      boards: stm32: Set arduino gpio connector on nucleo 144 pins boards
      soc: stm32: Move clock_control Kconfig selection to common
      soc: stm32: replace use of Kconfig I2C by I2C_STM32
      soc: stm32: Enable cortex-m systick timer by default
      shields: x_nucleo_idb05a1: boards: add stm32mp157c_dk2 configuration
      samples/bluetooth: peripheral: Support of x_nucleo_idb05a1 ble shield
      samples/bluetooth: peripheral: Remove nucleo_f429zi from withelist
      west.yml: Update hal_stm32 version
      dt: stm32f0: Fix clock bus for SPI1 and few timers
      drivers/flash: stm32f4: Offset SNB from sector 12 on 2MB parts
      drivers/flash: stm32f4: Return error on Dual Bank configuration
      sensors: lis3mdl: Fix warning when TIGGER_OWN_THREAD is enabled
      shields: x_nucleo_iks01a1: Enable IRQ pin for LIS3MDL magn sensor
      dts: stm32: Remove pinctrl definitions
      boards: nucleo_wb55rg: Update doc with BLE support

Erwin Rol (9):
      spinlock: Make sure C and C++ have the same sizeof(k_spinlock) value
      sys/__assert.h: Fix __assert.h so it can be included in C++ code
      drivers: ethernet: stm32, sam, mcux: correctly set LAA bit
      arm: stm32f4: Add CAN1 support
      boards: arm: olimex_stm32_p405: Add CAN1 support
      samples: olimex_stm32_e407: fix coverity warning
      dts: arm: stm32: cleanup whitespace in dts_fixup headers
      arch/x86: add Z_ARCH_THREAD_STACK_MEMBER() macro
      include/tc_util.h: Rename __str to fix C++ compile error

Fabio Utzig (2):
      dts: enable uart3 for frdm_k64f
      boards: nucleo_wb55: align partition boundaries

Filip Brozovic (10):
      west.yml: update hal_nxp revision to support Kinetis K8x
      soc: arm: k8x: add NXP Kinetis K8x SoC series support
      drivers: serial: Add instance 4 to mcux lpuart shim driver
      boards: arm: mimxrt1015_evk: enable lpuart4 only if BT_UART is enabled
      drivers: i2c: mcux_i2c: add instance initialization macro
      drivers: i2c: mcux_i2c: add instances 2 and 3
      boards: arm: frdm_k82f: add support for the NXP FRDM-K82F board
      clock_control: Add support for fast peripheral clock in mcux sim driver
      soc: arm: kv5x: add NXP Kinetis KV5x SoC series support
      boards: twr-kv58f220m: add support for the NXP TWR-KV58F220M board

Flavio Ceolin (4):
      ext: tinycrypt: Update tinycrypt revision
      sanitycheck: Making child thread exits when main thread dies
      sanitycheck: Fix --log-file option
      kernel: canaries: Add terminator character

Francisco Munoz (26):
      API: ps2 : Add API for PS/2 devices
      drivers: ps2: Add Kconfig for PS/2 driver
      drivers: ps2: Add syscall handler for PS/2 API
      dts: arm: microchip: Add dtsi entries for PS/2 devices in MEC1501
      dts: bindings: ps2: Add dts bindings for PS/2
      drivers: ps2: Add driver for Microchip XEC family
      boards: mec15xxevb_assy6853: Enable PS/2 devices
      soc: microchip: mec1501: Add dts fixup for PS/2 instances
      soc: microchip: mec1501: Add PS/2 support in Kconfig
      samples: drivers: ps2: Add PS/2 driver sample app
      CODEOWNERS: Add PS/2 owners
      doc: peripherals: PS/2 API documentation
      dts: ps2: Fix yaml warning for PS/2
      API: kscan: Add API for Keyboard scan matrix
      drivers: kscan: Add Kconfig for Keyboard scan driver
      dts: bindings: kscan: Add dts entries and bindings for kscan
      drivers: kscan: Add syscall handler for Keyboard Matrix API
      drivers: kscan: Add driver for Microchip XEC family
      soc: microchip: mec1501: Add keyboard scan support in Kconfig
      boards: arm: mec15xxevb_assy6853: Enable Keyboard Scan
      soc: microchip: mec1501: Add dts fixup for Keyboard Matrix
      samples: drivers: kscan: Add kscan sample application
      CODEOWNERS: Add kscan owners
      doc: peripherals: KSCAN API documentation
      boards: mec15xxevb_assy6853: Add Kscan and PS/2 to peripherals
      tests: drivers: kscan: Add simple API tests

Francois Ramu (4):
      driver: timer: st_stm32: add lptimer management to stm32xx series
      soc: arm: st_stm32: add driver lptimer management to stm32l4 series
      boards: arm: st_stm32: add lptimer to nucleo_l4r5zi boards
      boards: arm: st_stm32: add lptimer to disco_l475_iot1 board

Frank Li (1):
      drivers: ssd1306: Write data from any coordinate

François Delawarde (10):
      bluetooth: host: Introduce a config option for Service Changed
      bluetooth: host: Persist Service Changed data
      settings: fix custom backend example
      settings: fix runtime settings length
      bluetooth: host: fix missing bt_conn_unref
      bluetooth: host: fix missing log_strdup
      bluetooth: host: do not remove SC entry when peer subscribed and paired
      bluetooth: host: refactor sc settings handling
      bluetooth: host: add ability to load CCC settings on demand
      bluetooth: host: refactor ccc settings handling

Gaute Gamnes (3):
      dts: arm: nordic: nRF5340 Network MCU DTS structure
      soc: arm: nrf53: add nRF5340 CPUNET SoC definition
      boards: arm: nordic: nRF5340_dk_nrf5340_cpunet board definition

George Stefan (4):
      drivers: entropy: add openisa/RV32M1 entropy driver
      bluetooth: controller: openisa/RV32M1: add HAL for LPTMR & GenFSK
      bluetooth: controller: openisa/RV32M1: BLE Link Layer ULL/LLL split
      bluetooth: controller: openisa/RV32M1: enable the BLE SW controller

Gregers Rygg (1):
      doc: Correct gpio sample description

Henrik Brix Andersen (29):
      drivers: can: flexcan: limit number of concurrent rx filters on k6x soc
      doc: reference: settings: list non-volatile storage backend
      drivers: can: flexcan: disable self-reception and support listen-only
      drivers: flexcan: fix loopback mode
      soc: nxp: ke1xf: add missing LPUART base address definitions
      soc: nxp: kwx: add missing LPUART base address definition
      drivers: serial: mcux_lpuart: use base address from DTS for LPUART0
      soc: nxp: ke1xf: set ip clock in dts
      dts: nxp: kinetis-ke1xf-sim: make clkout properties optional
      shell: adc: add support for ADC instance 2
      drivers: adc: mcux_adc12: use DT_INST defines for instances
      drivers: pwm: add PWM shell
      tests: board_shell: enable PWM shell
      drivers: eeprom: add API for EEPROM devices
      dts: bindings: eeprom: add EEPROM device tree bindings
      tests: drivers: i2c_slave_api: update overlays to match new dts bindings
      drivers: i2c: eeprom_slave: update driver to match the new dts bindings
      drivers: eeprom: add EEPROM shell commands
      tests: board_shell: enabled EEPROM shell
      dts: bindings: eeprom: add binding for zephyr native posix EEPROM
      drivers: eeprom: add driver for a zephyr native posix EEPROM
      boards: native_posix: add EEPROM device
      drivers: eeprom: add driver for Atmel AT24 I2C and AT25 SPI EEPROMs
      tests: drivers: build_all: add EEPROM build configuration
      tests: drivers: eeprom: add tests for the EEPROM API
      tests: board_shell: re-enable flash, ADC, and CAN shells
      drivers: flash: native_posix: remove unused mutex
      doc: reference: peripherals: add EEPROM API documentation
      tests: drivers: flash_simulator: fix project name

Huang Qi (2):
      arch: riscv: Add simple wrokaround to boot multicore system
      arch: riscv: Use infinite loop instead of simple wfi to halt slave core

Håkon Øye Amundsen (3):
      scripts: pep8 gen_relocate_app.py
      doc: use simpler words for describing scheduling
      flash_img: add error check to 'flash_progressive_erase'

Ioannis Glaropoulos (85):
      release: Post-release patch level update
      bluetooth: controller: remove redundant header inclusions
      bluetooth: controller: minor fixes in inline comments
      bluetooth: controller: define generic macros for LLL, ULL LOW IRQs
      bluetooth: controller: abstract PPI handling functions
      bluetooth: controller: conditionally define macros for LE Coded PHY
      bluetooth: controller: abstract PPI handling for LE Coded
      arch: arm: cmse: re-introduce workaround for typeof
      tests: arch: arm thread swap: fix r0 preservation in the test
      tests: arch: arm: fix bug in z_assert expression
      soc: arm: nordic: introduce Kconfig option for LE Coded PHY
      bluetooth: controller: enable Coded PHY support for nRF52811
      bluetooth: controller: replace SOC_NRF52840 in ifdef blocks for Coded
      arch: arm: userspace: minor refactor in z_arch_is_user_context
      soc: arm: nxp: cleanup in soc.h headers
      bluetooth: controller: nRF52811: fix LE Coded S2 Radio Timings
      arch: arm: minor clean-up in irq_init.c and timing_info_bench.c
      drivers: serial: mcux: enforce an error-free header inclusion
      soc: arm: do not include kernel headers in soc.h
      ext: hal: cmsis: add define for __PROGRAM_START
      boards: arm: add QEMU support for Cortex-M0
      boards: arm: qemu_cortex_m0: adding documentation
      CODEOWNERS: adding code owner for ARM Qemu Cortex-M* platforms
      boards: arm: qemu_cortex_m0: configure board with own timer driver
      drivers: timer: nrf: minor comment fix
      boards: arm: qemu_cortex_m0: implement custom system clock driver
      boards: arm: qemu_cortex_m0: filter out a couple of failing tests
      tests: arch: arm_thread_swap: extend the test for Cortex-M Baseline
      tests: arch: arm_thread_swap: minor fixes
      tests: arch: arm_thread_swap: enable running on Cortex-M Baseline
      boards: arm: nrf51_pca10028: remove board from default boards
      tests: arm thread swap: increase Idle Stack size for no-opt test-case
      arch: arm: clean up inclusions in assembly files
      arch: arm: core: add Cortex-R in the files description headers
      arch: arm: userspace: z_arm_userspace_enter: reduce push/pop overhead
      arch: arm: documentation improvements in ARM assembly sources
      arch: arm: swap-helper: simplify several assembly expressions
      tests: kernel: userspace: replace inline assembly with C code
      arch: arm: error: fix ARMv6-M assembly for Z_ARCH_EXCEPT
      tests: kernel: fatal: add a test-case for arbitrary error reason
      tests: arch: arm_irq_vector_table: no explicit const array size
      tests: arch: arm_irq_vector_table: enable test for ARMv6-M CPUs
      tests: arch: arm_irq_vector_table: enable test for nRF51x platforms
      boards: arm: nucleo_g071rb: enable ARM MPU
      soc: arm: stm32g071: remove kernel header inclusions in soc.h
      arch: arm: update minimum MPU region alignment for ARMv6-M
      arch: arm: no HW stack protection capabilities in Cortex-M Baseline
      arch: arm: swap_helper: adapt assembly code for Cortex-M Baseline
      arch: arm: userspace: adapt assembly code for Cortex-M Baseline
      arch: arm: userspace: add ip and sp to clobber
      boards: arm: arduino_due: add option to use jlink tool
      boards: arm: nucleo_g071rb: include MPU in HW features
      arch: arm: swap: add useful inline comment for SVC return
      arch: arm: fatal: add documentation for z_do_kernel_oops()
      arch: arm: major cleanup and refactoring for fault function
      arch: arm: re-implement z_arch_is_in_isr
      arch: add Kconfig to signify ability to detect nested IRQ
      arch: arm: internal API to check return execution mode
      kernel: fatal: use nested exception info in z_fatal_error
      arch: arm: do not add CODE_UNREACHABLE in Z_ARCH_EXCEPT
      tests: arch: arm: add a test for fatal errors in interrupts
      arch: arm: protect r0 in z_arch_switch_to_main_thread() inline ASM
      bluetooth: controller: nrf5: simplify preprocessor conditionals
      bluetooth: controller: nrf5: use nrfx function to get CCM IRQ line
      arch: arm: mpu: introduce option to skip background MPU region fill
      arch: arm: mpu: move mpu_configure_regions(.) in arm_mpu.c
      arch: arm: mpu: allow optional region gap filling in the ARMv8-M MPU
      tests: kernel: mem_protect: run tests with ARMV8-M MPU gap filling
      dts: arm: nordic: nRF5340 Application MCU DTS structure
      soc: arm: nrf53: add nRF5340 CPUAPP SoC definition
      scripts: west_commands: nrfjprog: extend nrfjprog.py runner for nrf53
      boards: arm: nordic: nRF5340_dk_nrf5340_cpuapp board definition
      drivers: entropy: set default RNG priority for nRF5340
      include: bluetooth: define hci macro for nRF53
      bluetooth: controller: conditionally define NRF_RADIO_TXPOWER_POS4DBM
      bluetooth: controller: enable support for nRF53 in Kconfig
      bluetooth: host: add nRF53 in HW variants
      boards: nrf5340_dk_nrf5340: enable BT CTLR if building with BT
      bluetooth: controller: include nRF5340-specific radio header
      bluetooth: controller: enable support for nRF53 when building radio.c
      bluetooth: controller: setup DDPI configuration for nRF5340
      bluetooth: controller: setup nRF53 DDPI configuration for Coded PHY
      bluetooth: controller: define SW IRQ structure for nRF53 SoCs
      boards: arm: nrf5340 dk: add documentation for nRF5340 DK board
      boards: nrf5340_dk_nrf5340: boot Network MCU from Application MCU

Ioannis Konstantelias (12):
      dts: stm32: Add WWDG in STM32 dtsi files
      soc: stm32: Add fixups for WWDG EWI and clock info
      drivers: watchdog: stm32: Add implementation for WWDG
      boards: arm: nucleo_{f401re, l496zg}: Enable WWDG
      samples: drivers: watchdog: Handle watchdog event
      tests: drivers: watchdog: Update testcase
      dts: bindings: sensor: Support TMP116
      drivers: sensor: Add TMP116
      samples: sensor: tmp116: Add sample for TMP116
      boards: arm: stm32_min_dev: Enhance doc with pinout
      boards: arm: stm32_min_dev: Remove broken links
      boards: arm: stm32_min_dev: Document connection info

Iosif Macesanu (2):
      drivers: sensor: Add SI7060 temperature sensor driver
      drivers: sensor: Add OPT3001 light sensor driver

Ismael Fillonneau (1):
      doc: json: improve example documentation

Jacob Siverskog (1):
      uart: Improve line control documentation

Jakub Wegnerowski (2):
      boards: litex_vexriscv: Enable LiteX DNA driver
      drivers: hwinfo: Add LiteX DNA driver

Jan Van Winkel (34):
      native: dts: Added label for flash-controller
      tests: littlefs: Added support for native posix
      net: ip: utils: Corrected memcpy length for port in parse_ipv6
      west: gui: Updated lvgl to V6.0.2
      headers: Removed include other.h from toolchain.h
      usb: tests: Pass correct lengths to hexdump in usb bos test
      tests: gui: Added tests for LVGL glue logic
      cmake: toolchain abstraction for coverage
      sanitycheck: native: Removed --coverage from EXTRA_LDFLAGS
      samples: net: Moved declaration of packet_data
      net: Added missing do to net_route_info macro
      tests: kernel: Suppress warnings in intmath tests
      native: removed redundant compiler args MMD & MP
      uart: native_posix: Moved declaration of native_uart_status
      tests: cxx: Enable exceptions
      linker: cxx: xtensa: Added .gcc_except_table.*
      linker: cxx: Include .gcc_except_table sections
      tests: cmsis_v2: Put/Get msg in queue instead of u32_t
      kernel/idle: Correct SMP_FALLBACK define
      kernel: tests: Added header with common declarations
      kernel: tests: Increased TX/RX buf size in pipe test
      samples: net: echo-server: Init tcp6_handler_in_use for IPv6
      tests: net: hostname: Corrected unique hostname conversion
      tests: gui: Pass image pointer to fs_write
      cmake: toolchain abstraction for address sanitizer
      posix: Set stack align to 8 bytes for 64-bit posix
      cmake: toolchain abstraction for undefined behaviour sanitizer
      cpp: Added option to disable Zephyrs cpp implementation
      libc: Added Kconfig choice to select C library
      libc: Changed dependencies of NEWLIB_C into !MINIMAL_LIBC
      libc: Use select REQUIRES_FULL_LIBC instead of select NEWLIB_LIBC
      sanitycheck: native: Added option to enable ASAN & LSAN
      debug: Disable ""at exit"" LSAN leak check
      CODEOWNERS: Added code owner for subsys/debug/asan.c

Jim Paris (2):
      drivers: pwm_nrfx: Add support for center-aligned mode
      drivers: pwm_nrfx: use IS_ENABLED to eliminate a bunch of #ifndefs

Jim Shu (1):
      kernel/spinlock: Fix a SMP race condition of SPIN_VALIDATE

Joakim Andersson (28):
      Bluetooth: host: Handle return code of set_random_address
      Bluetooth: Shell: Fix shell build dependencies
      Bluetooth: SMP: Fix pairing using debug keys
      Bluetooth: SMP: Add missing static to internal function
      Bluetooth: host: Add bt_conn_foreach API to iterate all connections
      Bluetooth: GATT: Add initializer for GATT CCC
      Bluetooth: GATT: Provide correct error code when disconnected
      Bluetooth: Host: Fix usage of re-using Bluetooth log buffers
      Bluetooth: SMP: Move bt_smp_keys_check function up
      Bluetooth: SMP: Move re-encryption handling into the SMP module
      Bluetooth: SMP: Handle both devices initiating security
      Bluetooth: ATT: Fix disconnected ATT not releasing buffers
      Bluetooth: controller: Fix rejected enc procedure not terminated
      Bluetooth: controller: Check if enc procedure is in progress
      Bluetooth: samples: Add newline when using printk
      Bluetooth: GATT: Add function to check if attribute has been subscribed
      Bluetooth: host: Fix whitelist for non-central bluetooth applications
      Bluetooth: GATT: Fix bug in bt_gatt_attr_next unable for static handles
      Bluetooth: samples: peripheral_dis: Failed to save with custom settings
      Bluetooth: Host: Add non-HCI defines for scan type
      Bluetooth: Host: Move GAP and GAP defined assigned numbers to own header
      Bluetooth: Host: Move Bluetooth Device address definition to own header
      Bluetooth: Host: Move HCI error codes to its own header
      Bluetooth: HCI: Add function to get connection handle of connection
      Bluetooth: GATT: Fix gatt buffer leak for write commands and notify
      Bluetooth: UUID: Fix documentation for BT_UUID_128_ENCODE
      Bluetooth: Shell: Disallow GATT commands when params are in use
      Bluetooth: SMP: Add option to disallow unauthenticated re-pairing

Johan Hedberg (9):
      Bluetooth: Mesh: Fix matching for ""All Proxies"" group address
      Bluetooth: Allow disconnected state connections to be reconnected
      Bluetooth: Pass local identity to bt_conn_add_le()
      Bluetooth: Mesh: Fix Clear Procedure start timestamp initialization
      Bluetooth: Mesh: Remove unused macro
      Bluetooth: Mesh: net: Remove unnecessary #ifdefs
      Bluetooth: Mesh: beacon: Remove unnecessary #ifdefs
      Bluetooth: Mesh: crypto: Remove unnecessary #ifdefs
      Bluetooth: Fix missing includes for hci.h

Johann Fischer (45):
      boards: frdm_k64f: add arduino i2c node
      samples: cfb: remove FRDM-K64F board config and overlay
      shields: add generic shield for SSD1306 based 128x64 displays
      sample: cfb: enable test for the shield ssd1306_128x64
      drivers: usb_dc_sam: validate pointer in usb_dc_ep_is_stalled
      usb: make number of usb_write retries configurable
      usb: fix ZLP handling for Variable-length Data Stage
      shields: x_nucleo_iks01a2: add missing irq-gpios properties
      drivers: eth: add driver for ENC424J600 Ethernet Controller
      boards: reel_board: add arduino spi, uart and i2c nodes
      shields: add link board ETH
      sample: zperf: enable test for the shield link board ETH
      drivers: amg88xx: rework sensor driver to use DT
      samples: amg88xx: update README.rst
      drivers: ssd1306: add DT properties to support 128x32 display
      drivers: ssd1306: fix style
      shields: add generic shield for SSD1306 based 128x32 displays
      samples: cfb_shell: remove FRDM-K64F board config and overlay
      sample: cfb: fix test sample.display.cfb.ssd1306
      shields: ssd1306_128x64: fix documentation
      drivers: ssd16xx: cleanup Kconfig
      drivers: ssd16xx: use bytestring property for LUT and parameters
      drivers: ssd16xx: allow only specific RAM to update
      drivers: ssd16xx: do not write default value to CTRL1 before update
      boards: reel_board: add support for reel board v2
      boards: reel_board: add note about new display
      boards: reel_board: update board images and minor docu fixes
      boards: reel_board: add expansion board link board BASE
      shields: link_board_eth: fix link to product website
      shields: add Adafruit 2.8"" TFT Touch Shield v2
      samples: lvgl: remove conflicting nrf52840_pca10056 overlays
      samples: ili9340: add adafruit_2_8_tft_touch_v2 to samples test
      samples: lvgl: update README.rst
      usb: do not check size of REQUEST_BUFFER for Data stage IN
      usb: allow hardware to handle ZLP for Variable-length Data Stage
      shields: add WAVESHARE e-Paper shield
      sample: lvgl: add test for the panels supported by WAVESHARE e-Paper
      drivers: eth: initialize ethernet stack in enc424j600 and enc28j60
      drivers: ssd16xx: fix GPIO controller name for BUSY pin
      samples: mesh_badge: do not use edge led
      boards: reel_board: add support for pwm led
      samples: mesh_badge: allow to build for any version of the reel board
      boards: reel_board: revise SPI routing
      board: reel_board: fix target name used for pyocd
      Bluetooth: l2cap: fix null pointer dereference

Jorgen Kvalvaag (1):
      scripts: sanitycheck: Multiple --west-flash arguments

Joris Offouga (2):
      soc/mcimx7_m4: Add i.MX7 Dual Kconfig SoC partnumber define
      boards: arm:  Add support for Pico-Pi i.MX7D board

Jose Alberto Meza (15):
      drivers: i2c: xec: Add proper error handling for I2C transactions
      boards: Add support for MEC1501 modular card ASSY 6885
      samples: espi: mchp: Add MEC1501 modular board config for eSPI sample test
      dts: espi: Cleanup eSPI block device tree
      drivers: espi: xec: Ensure all eSPI VW are transmitted
      boards: mec15xxevb: Select physical UART mapped to eSPI host logical port
      drivers: gpio: xec: Ensure GPIO input is enabled
      samples: drivers: espi: Remove delay from eSPI handshake
      boards: mchp: Add option to switch GPIO bank voltage
      drivers: i2c: xec: Handle additional I2C flags for read
      board: arm: mec15modular_assy6885: Enable RTOS, PS2, PWM and ADC drivers
      tests: adc: MEC15 modular board test definitions
      drivers: espi: xec: Report espi reset correctly to app
      drivers: espi: mchp: Remove duplicated KConfig option
      boards: mec: mec15modular: Update documentation

Jukka Rissanen (70):
      net: socket: Return 0 in recvfrom() if buffer size is 0
      net: Add CONFIG_NET_NATIVE option for selecting native IP
      tests: net: poll: Moving config options from yaml to conf file
      tests: net: poll: Increase the poll timeout value
      net: tcp: Cleanup context if connection is not established
      tests: net: tcp: Test connection cleanup after receiving SYN
      net: dns: Check family before returning results
      tests: net: getaddrinfo: Resolve using wrong address family
      tests: net: getaddrinfo: Logging was missing log_strdup() call
      net: Add IPPROTO_RAW as it was missing
      net: socket: Set default protocol if proto == 0
      tests: net: socket: register: Fix unit tests when proto == 0
      net: conn: Deliver multicast pkt to all interested parties
      tests: net: dhcpv4: Increase the buffer count
      net: socket: Support non-blocking accept()
      tests: net: socket: Test that non-blocking accept() works
      net: pkt: Clone cursor position in net_pkt_clone()
      net: socket: The socket flags need to use uintptr_t
      tests: net: shell: Add some simple tests for net-shell
      net: sockets: Store socket private data into its own variable
      net: socket: Init net_context when taken into use
      tests: net: hostname: Add tests for hostname set/get
      net: routing: Hide routing option temporarily
      samples: net: echo-server: Add support for multiple listeners
      net: http: client: Initial version
      samples: net: http_client: HTTP client sample application
      net: websocket: client: Simple API for Websocket client
      samples: net: websocket: App for doing Websocket client requests
      net: shell: Print info about websocket
      tests: net: hostname: Set MAC address properly to all interfaces
      net: mqtt: Add support for running MQTT over Websocket
      net: mqtt: Remove extra documentation from individual transports
      samples: net: mqtt_publisher: Add support for Websocket
      samples: net: mqtt_publisher: Enable net shell
      samples: net: mqtt_publisher: Use logging macros for output
      net: shell: ping: Figure out the output network interface
      logging: Print hexdumps with 16 bytes in one line
      net: Add statistics how long packets have spent in RX path
      net: shell: Print RX packet timings
      net: Add statistics how long packets have spent in TX path
      net: shell: Print TX packet timings
      net: stats: Add functions to reset the statistics
      net: shell: Add command to clear network statistics
      tests: net: tcp: Initialize TCP header properly
      net: tls: Set accepting socket to LISTENING state
      samples: net: sockets: Do not reference default board in docs
      samples: net: dumb_http_server: Using code block when needed
      tests: net: tls: Increasing stack size
      net: tcp: When closing the connection send FIN without extra delays
      tests: net: shell: Increase the main stack size
      net: shell: Unify info print when an option is not enabled
      tests: net: icmpv6: Increase the TX buf counts
      samples: net: Add a multithreaded dumb HTTP server
      net: socks: Prefer setsockopt() API instead of legacy proxy api
      doc: net: Add Websocket API documentation
      net: tcp2: Logging strings need to use log_strdup()
      Revert ""net: tcp: Accept connections only in LISTENING state""
      Revert ""net: tls: Set accepting socket to LISTENING state""
      net: tcp: Add Kconfig option for auto-accepting clients
      net: tcp: Handle special case where accepted socket is closed
      net: tcp: Allow initial state to be set by net_tcp_change_state()
      net: tcp: Allow state transition when socket is closed
      net: tcp: No need to unref pkt if it was not sent
      samples: net: echo-server: In case of socket error quit the app
      net: telnet: User could telnet to zephyr only once
      doc: net: Add information about SOCKS5 proxy support
      doc: net: Add networking changes to 2.1 release note
      samples: net: zperf: Clarify that only iPerf 2.0.5 is supported
      CODEOWNERS: Add subsys/logging/log_backend_net.c
      drivers: eth: enc424j600: Set carrier status by link up/down

Jun Qing Zou (1):
      net: lwm2m: support client-initiated De-register

Justin Brzozoski (1):
      nvs: fix overwriting with truncated data

Kamil Piszczek (17):
      settings: adding missing header
      boards: qemu_x86: adding missing flash definitions
      tests: subsys: settings: functional: fix for nvs backend
      settings: nvs backend: fix build warning due to the type mismatch
      tests: subsys: settings: functional: nvs & fcb split for CI
      tests: subsys: settings: tightening scope of common test functions
      tests: subsys: settings: functional: test name change for fcb & nvs
      boards: x86: qemu_x86: adding nvs capability
      tests: subsys: settings: nvs: intergrating tests with nvs backed
      settings: nvs: aligned error code on delete operation
      settings: addding NVS & FS to default settings backend config
      settings: fix Kconfig SETTINGS_NVS dependency
      samples: migrating to NVS backend with settings
      tests: migrating to NVS backend with settings
      doc: guides: bluetooth: updated persistent storage section
      tests: settings: functional: nvs: removing duplicated config
      tests: settings: functional: nvs: adding posix targets

Karl Palsson (5):
      stm32/l1: enable spi peripherals
      pinmux: stm32l1: add spi2 pins
      boards: add stm32l1 discovery
      dts: stm32/l1: add xx8-A parts
      west.yml: Update hal_stm32 for L151xB fixes

Karol Lasończyk (1):
      drivers: wdt_nrfx: Add multi-instance support

Karsten Koenig (3):
      dts: bindings: vendor-prefixes: add openisa
      drivers: spi: rv32m1: Add driver for RV32M1 LPSPI
      boards: riscv: rv32m1_vega: Add onboard SPI flash

Kevin Townsend (1):
      sensor: hmc5883l: convert to device tree

Kim Sekkelund (1):
      Bluetooth: Host: Remove printk dependency from settings

Kristoffer Rist Skøien (1):
      Bluetooth: Controller: Typo in Kconfig

Krzysztof Chruscinski (24):
      logging: Add option to block in thread context
      drivers: counter: nrf_rtc: Fix top value handling
      tests: drivers: counter: Minor comment improvement in test
      toolchain: Add single arguments evaluation macros for min and max
      tests: misc: util: Add test for Z_MAX and Z_MIN
      logging: Add log_output flushing to synchronous processing
      drivers: clock_control: nrf: reimplementation including API updates
      tests: drivers: clock_control: Add test suite
      tests: drivers: clock_control: Add test for nRF clock calibration
      bluetooth: controller: Align nrf link layer to new clock control API
      drivers: Align nrf counter, timer and usb driver to new clock_control
      tests: bluetooth: mesh: Fix RAM shortage failure for bbc_microbit
      drivers: clock_control: nrf_power_clock: Make isr function global
      drivers: counter: nrf_timer: Add detection of late alarm request
      drivers: counter: nrf_rtc: Add detection of late alarm request
      drivers: counter: nrf_rtc: Fix wrapping with PPI
      tests: drivers: counter: Add test for late setting and short relative
      tests: drivers: counter: Enable ppi-wrap feature on one instance
      tests: drivers: counter: Add test suite for nrf rtc fixed top value feature
      drivers: sensors: Fix log module registration
      logging: Fix lack of logging after startup
      shell: Use temp_buffer in tab completion
      kernel: Clarify timeout and sleep API regarding negative inputs
      kernel: Add assert to detect negative timeouts

Kumar Gala (125):
      doc: Release notes for v2.1 - initial (empty) draft
      subsys/fs/littlefs: Protect littlefs Kconfig options
      dts/binding/sensor: Fix ST sensors irq-gpios property being required
      scripts/dts/edtlib.py: Hoist enum checking before early out
      scripts/dts/edtlib.py: error check enum
      scripts/dts/edtlib.py: add 'const' support to bindings
      dts/bindings: use const to validate #<FOO>-cells
      scripts/dts/gen_defines.py: Ignore varions base properties
      dts/bindings: add several properties to base.yaml
      dts/bindings: Convert compound to phandle-array type
      dts/bindings: move template out of YAML dir
      dts/bindings: Remove snps,dw-adc binding
      dts: Add io-channel details to ADC nodes/bindings
      dts/bindings: Convert bindings to new include syntax
      dts: rv32m1: Rework interrupt mux dts descriptions
      dts: nxp: nxp_ke1xf: Make LPO fixed-clock its own node
      scripts/dts: Generate IRQ values for multi-level IRQs
      irq: intel_s1000: Fixup IRQ values for multi-level IRQ handling
      irq: rv32m1: Fixup IRQ values for multi-level IRQ handling
      interrupt_controller: plic: remove plic.h
      interrupt: Convert RISC-V plic to use multi-level irq support
      dts/bindings: st: sensors: Mark 'irq-gpios' as optional
      samples: CAN: Tweak GPIO flags in dts for mcp2515
      drivers: audio: tlv320dac310x: Explicitly set GPIO_DIR_OUT
      i2c: Remove deprecated functions
      sys: ring_buffer: remove deprecated sys_ring_buf_*
      sys: dlist: remove deprecated sys_dlist_insert_{before,after}
      dts: nxp: ke1xf: Introduce nxp,kinetis-ke1xf-sim
      samples: shields: x_nucleo_iks01a3: rename arduino_header depend
      samples: shields: x_nucleo_iks01a2: Depend on arduino_gpio
      boards: Add arduino_gpio & and arduino_i2c to board supported
      cmake: move shield board/conf handling
      cmake: Fixup shield overlay and conf file search locations
      cmake: add new search locations for shield overlay and conf files
      drivers: counter: remove deprecated functions
      drivers: ens210: Fix error in header guard
      ci: updates to fix pylint commit test
      tests/subsys/settings/fcb: Fix ifdef in ztest_test_suite
      kconfig: Add new functions to kconfigfunctions to use EDT
      kconfig: Convert device tree chosen properties to new kconfigfunctions
      kconfig: nxp_imx: rt: Convert to use new kconfigfunctions
      kconfig: hifive1_revb: Convert to use new kconfigfunctions
      kconfig: serial: sam0: Convert to use new kconfigfunctions
      kconfig: counter: nrfx: Convert to use new kconfigfunctions
      kconfig: Mark dt_{int,hex,str}_val as deprecated
      modules: Update ci-tools to latest for status check report
      rtc: Remove old rtc functionality
      doc: release notes: Add note on kconfig function deprecation
      boards: native_posix: Disable default testing on native_posix_64
      ci: run_ci: Remove stale DOC_MATRIX variable
      ci: run_ci: handle if the git dir isn't named zephyr
      ci: run_ci: Move functions
      ci: run_ci: merge two if blocks
      ci: run_ci: Refactor west setup into a function
      console: Remove deprecated function console_register_line_input
      samples: ipc: ipm_mcux: Add testing harness
      samples: ipc: openamp: Add testing harness
      arc: Remove bogus references to intel,qmsi-ss-{gpio,i2c}
      cmake: compiler: arm: Fold fpu-for-gcc-m-cpu.cmake into target.cmake
      cmake: compiler: introduce target_arm.cmake
      compiler: clang: Add setting of ARM related flags
      boards: v2m_musca: Add pyocd support
      arm: v2m_musca: Enable GPIO support
      boards: mec1501modular_assy6885: Reduce image file size
      boards: mec1501modular_assy6885: Reduce image file size
      boards: v2m_musca: Fix GPIO interrupt
      boards: v2m_musca: Fix label for LEDs in devicetree
      boards: v2m_musca: Fix pinmux init for LEDs
      boards: v2m_musca_b1: Add pyocd support
      arm: v2m_musca_b1: Enable GPIO support
      ext: hal: cmsis: Update ARM CMSIS headers to version 5.6.0
      lib/libc/min: Introduce simple math.h
      modules/hal_st: Drop newlib requirement.
      modules: hal: nxp: update for LPC55S69 SDK update
      serial: mcux_lpc: Fix up driver to work on new SDK
      arch/x86: Fix gcc-9.2 warning with z_arch_syscall_invoke6
      kernel: Fix gcc-9.2 warning with _StackCheckHandler
      dts/bindings: Remove intel,intel-spi.yaml
      dts: binding: gpio: add ngpios property
      arm: mps2: Convert gpio to use device tree
      boards: arm: mps2: Add LED & Buttons to board dts
      tests: boards: altera_max10: Use DT define for I2C device name
      i2c: Remove non DTS Kconfig params
      i2c: Move how we set HAS_DTS_I2C
      i2c: Rename CONFIG_I2C_[0..5]_NAME -> DT_I2C_[0..5]_NAME
      gpio: sx1509b: remove non-DTS support
      led: lp3943: remove non-DTS support
      led: pca9633: remove non-DTS support
      led: lp5562: remove non-DTS support
      Revert ""kconfig: Fix wrong partition size by changing type of FLASH_LOAD_SIZE""
      kconfig: Introduce typed dt kconfig functions
      linker: move where we define _LINKER and _ASMLANGUAGE
      sanitycheck: Add functions to query device tree for filters
      sample/tests: replace DT_ define filters with dt_ functions
      sanitycheck: remove import of dt kconfig symbols
      kconfig: Add dt_chosen_enabled function
      soc: stm32: Convert CCM config from DT Kconfig symbol to function
      sensor: nrf5: Convert name to come from device tree
      sensor: vl53l0x: Convert GPIO XSHUT to device tree
      scripts: dts: Fix generation of -name properties.
      sensor: ccs811: Convert GPIOs to device tree
      sanitycheck: fix filtering for boards without DTS
      sensor: lis3mdl-magn: Convert GPIO INT to device tree
      github: Add plumbing of using the github workflow labeler
      Revert ""github: Add plumbing of using the github workflow labeler""
      watchdog: cmsdk: Convert to use DT generated label for device name
      watchdog: mcux: Move to using DT define for driver name
      dts: Add standard alias for watchdog
      watchdog: Remove CONFIG_WDT_0_NAME usage
      watchdog: Refactor how we set HAS_DTS_WDT in Kconfig
      dts: nxp: remove unused pinmux
      scripts: runners: Drop loading symbols from generated_dts_board.conf
      cmake: dts: Drop loading symbols from generated_dts_board.conf
      doc: dt: Add note about deprecation of generated_dts_board.conf
      sensor: th02: Convert to DTS
      sensor: tmp112: Convert to DTS
      sensor: tmp007: Convert to DTS
      sensor: sx9500: Convert to DTS
      sensor: mcp9808: Convert to DTS
      sensor: max44009: Convert to DTS
      sensor: isl29035: Convert to DTS
      sensor: hp206c: Convert to DTS
      sensor: bmm150: Convert to DTS
      sensor: bmg160: Convert to DTS
      sensor: bmc150_magn: Convert to DTS

Laczen JMS (3):
      cmake: app: set zephyr_extra_modules from environment
      subsys/settings: Remove optional from Kconfig
      ext: lib: tinycrypt: do not select entropy_generator

Lingao Meng (2):
      Bluetooth: Mesh: Fixed Provision Random buffer size
      Bluetooth: Mesh: Persistent storage of Virtual Addresses

Loic Poulain (14):
      soc: nxp: rt: Add custom memory areas to linker script
      soc: nxp:rt: Add DATA_OCRAM config
      drivers: Add video API
      drivers: video: Add MCUX CSI video driver
      soc: nxp: rt: Add CSI video support
      boards: arm: nxp: mimxrt1064_evk: Enable CSI video support
      CODEOWNERS: Add drivers/video path
      drivers: video: Add Aptina MT9M114 driver
      boards: mimxrt1064_evk: Add MT9M114 digital image sensor node
      drivers: video: Add software video pattern generator
      samples: video: Add video capture sample
      samples: video: Add TCP server sink sample
      drivers: video: Remove dedicated sensor dir
      samples: video: Fix board reference name

Luiz Augusto von Dentz (6):
      Bluetooth: GATT: Fix not storing SC changes
      Bluetooth: GATT: Add support to setting permission on CCCD
      Bluetooth: GATT: Use check_perm to check CCC permission
      Bluetooth: L2CAP: Replace checks for CONFIG_BT_CENTRAL
      Bluetooth: ATT: Replace checks for CONFIG_BT_ATT_ENFORCE_FLOW
      Bluetooth: GATT: Replace check for CONFIG_BT_SMP

Maksim Masalski (14):
      tests: updated names for the dns tests
      tests: updated names for the kernel tests
      tests/posix/common: Fix miscalibrated timing test
      tests: updated names for the arch interrupt tests
      tests: updated names for the tests
      tests: remove duplicate names for the shell tests
      tests: new updated names for the kernel tests
      tests: remove duplicate names for the libraries tests
      tests: remove duplicate names for the bluetooth tests
      tests: remove duplicate names for the boards tests
      tests: remove duplicate names for the net tests
      tests: remove duplicate names for the filesystem tests
      tests: remove duplicate names for the peripheral tests
      include: kernel readme misprint fix

Manivannan Sadhasivam (10):
      boards: arm: 96b_wistrio: Enable SPI1
      soc: arm: st_stm32: stm32l1: Add RTC/Counter support
      boards: arm: 96b_wistrio: Enable on-chip RTC driver
      soc: arm: stm32: Add support for STM32L151XB-A SoC
      boards: arm: 96b_wistrio: Fix the SoC used on this board
      dts: bindings: gpio: Add binding for 96Boards Low speed 3.3v header
      boards: arm: 96b_wistrio: Add 3.3v Low speed connector support
      boards: arm: 96b_carbon: Add 3.3v Low speed connector support
      dts: bindings: gpio: Add binding for 96Boards Low speed 1.8v header
      boards: arm: 96b_nitrogen: Add 1.8v Low speed connector support

Marc Herbert (6):
      gen_syscalls.py: make 'noweak' a list instead of a random order set
      tests/lib/fdtable/prj.conf: remove hardcoded CONFIG_COVERAGE=y
      tests/subsys/settings/functional: make common code a zephyr_library()
      tests/subsys/settings/functional: de-duplicate zephyr_include_
      tests/subsys/settings: build common code as zephyr_libraries
      cmake: -fmacro-prefix-map=${WEST_TOPDIR}=WEST_TOPDIR

Marcin Niestroj (5):
      gpio: stm32: support disabling and reenabling interrupts on pin
      sensor: lis2dh: fix SPI burst transfers
      dts: bindings: lis2dh: create a common st,lis2dh-common.yaml
      sensors: lis2dh: compile lis2dh_reg_field_update() unconditionally
      sensors: lis2dh: support disabling SDO/SA0 pull-up during init

Marcin Szymczyk (1):
      samples: boards: nrf91: add nrfx sample

Marcio Montenegro (1):
      drivers: hci: stm32_ipm: add UID BLE address

Mario Noseda (1):
      tests: benchmark: boot_time: fixed kernel clock value

Mariusz Skamra (2):
      Bluetooth: ATT: Fix responding to unknown ATT command
      Bluetooth: tester: Adapt to BTP Get Attribute Value API change

Markus Fuchs (9):
      soc: stm32: add SWO logger backend support
      drivers: ethernet: stm32: Add carrier state detection
      disk: sdhc: Remove logging variable when not needed
      disk: sdhc: Add support for standard-capacity SD cards
      doc/reference/storage/sdhc: Document SDSC support
      drivers: ethernet: stm32: Add MAC address configuration support
      kernel: improve C++ compatibility
      net: dhcpv4: Cancel pending DNS queries on DNS server update
      net: mdns: Fix unused variable warnings

Marti Bolivar (9):
      scripts: west_commands: verify minimum cmake version
      west.yml: point civetweb at the zephyrproject-rtos GH fork
      net: lwm2m: fix printf warning
      doc: add more cross-references/examples for DT overlays
      doc: add a couple of ref targets
      doc: dts: add more explanations, with diagrams
      doc: dts: move example to the right place
      doc: s/device tree/devicetree/
      doc: west fixes and updates to manifest.rst

Martí Bolívar (8):
      scripts: use compatible release specifiers in requirements.txt
      net: optimize net_buf_simple routines
      scripts: runners: whitespace cleanups for openocd.py
      scripts: runners: make $BOARD_DIR/support/openocd.cfg optional
      scripts: runners: new openocd fixes and features
      boards: arm: add generic openocd-via-jlink support for nRF5x boards
      scripts: runners: add misc-flash runner
      scripts: runners: sort runner lists

Mateusz Holenko (5):
      drivers: uart_liteuart: fix usage of DT_ defines
      drivers: interrupt_controller: fix usage of DT_ defines
      drivers: litex_timer: fix usage of DT_ defines
      samples: spi_fujitsu_fram: fix dependencies
      soc: riscv: litex: Add helpers for accessing CSRs

Maureen Helm (8):
      west.yaml: Update hal_nxp to MCUXpresso SDK 2.6.x
      soc: nxp_lpc: Enable mpu on the lpc54114 m4 core
      soc: nxp_kinetis: Make kinetis flash configuration field configurable
      soc: nxp_kinetis: Refactor flash configuration field to a common place
      disk: Configure default sdhc volume name for fatfs
      soc: nxp_imx: Configure default sdhc driver at the soc series level
      boards: mimxrt1050_evk: Configure default sdhc instance at board level
      soc: nxp_imx: Remove CLOCK_CONTROL_IMX_CCM config

Max van Kessel (1):
      tests: add test for invalid zcan_frame

Michael Scott (1):
      net: net_if: avoid deref of NULL L2

Michał Oleszczyk (3):
      driver/sensor: lis2dw12: single/double tap trigger implementation
      drivers/sensor: sht3xd: implement single shot mode
      drivers/sensor: lis2dw12: fix for wrong gpio_callback handling

Mieszko Mierunski (1):
      drivers: nrf: Add 2 stop bits option to nrf UARTE and UART driver

Mohamed ElShahawi (8):
      drivers: esp32: Add UART Driver with FIFO/Interrupt support
      drivers: esp32: UART Fix yaml/dts binding name
      dts: uart: move hw-flow-control to uart.yaml
      drivers: esp32: UART - use dts config for HW flow Control
      [ESP32] drivers: Add I2C Device tree support
      esp32: drivers: Add Entropy Device tree support
      drivers: watchdog: esp32: Add Watchdog Device tree support
      esp32: pinmux: Add Device tree support

Morten Priess (12):
      bluetooth: host: Configurable HCI stack sizes
      bluetooth: controller: Added function to support RX link quota update
      bluetooth: controller: Connection meta property support in LLL
      bluetooth: controller: Use ticker must_expire to ensure ADV timing rand
      bluetooth: controller: Add vendor operations to TICKER_USER_ULL_HIGH_OPS
      bluetooth: controller: RX PDU meta data support in LLL
      drivers: bluetooth: Added EVT_DATA_BUF_OVERFLOW to bt_hci_evt_is_prio
      bluetooth: host: Added handler for data buffer overflow
      bluetooth: controller: Prevent unnecesary ticker ""must expire""
      bluetooth: controller: Add vendor specific overhead to TX buffer size
      bluetooth: controller: Vendor specific ticker resolution margin
      bluetooth: controller: Move calculation of max_tx_octets to ULL

Mrinal Sen (2):
      debug: tracing: Common Trace Format Simplification
      debug: tracing: Remove unneeded abstraction

NavinSankar Velliangiri (2):
      dtsi/Kconfig: arm: st: Add dtsi and Kconfig for SOC variant STM32F401XC
      boards: arm: Add steval_fcu001v1 board support

Neill Kapron (1):
      SOC: Boards: NXP: Enable ethernet for mimxrt1060_evk

Nicholas Lowell (1):
      debug: tracing: add sys_trace_thread_name_set

Nick Ward (13):
      boards: nrf52_pca10040: Fix Arduino SPI pin assignment
      boards: nrf52_pca10040: Add Arduino header definition to DTS
      boards: nrf52_pca10040:  When SPI is required enable SPI_2 by default
      boards: nrf52840_pca10056:  When SPI is required enable SPI_3 by default
      boards: shields: Add DFRobot CAN bus Shield V2.0
      samples: drivers: CAN: Use common Zephyr bus-speed of 125kbit/s
      samples: drivers: CAN: Update to build cleanly for MCP2515 driver
      samples: drivers: CAN: Remove legacy MCP2515 overlay
      drivers: CAN: MCP2515: Read INT GPIO pin to check interrupt status
      drivers: CAN: MCP2515: Add and use Load TX Buffer instruction
      drivers: CAN: MCP2515: Add and use RTS instruction
      drivers: CAN: MCP2515: Add and use Read RX Buffer instruction
      drivers: CAN: MCP2515: Optimise TX SPI data length

Nicolas Pitre (10):
      sys_sem: straighten build time definition macros
      K_MEM_POOL_DEFINE(): remove extra semicolon
      realloc(): move mempool internal knowledge out of generic lib code
      SYS_MEM_POOL_DEFINE(): move BUILD_ASSERT() at the end
      mempool: reverse free bit semantic
      mempool: remove redundant bit set/clear within loops
      k_mem_pool_alloc(): remove dead code
      test_pipe_contexts: don't free memory blocks handed to k_pipe_block_put
      tests/mem_pool_threadsafe: use actual minimum mempool block size
      mempool: trap on double-free instances

Noah Pendleton (2):
      native_posix: Fix realloc potential leak
      boards: arm: stm32: fix out of bounds access

Oane Kingma (1):
      drivers: (le)u(s)art_gecko: use DT defined clock identifiers

Oleg Zhurakivskyy (20):
      net: tcp2: Add experimental TCP
      net: tp: Add test protocol
      net: tcp2: Add Kconfig and CMakeLists.txt entries
      net: buf: Add a user_data's default and range for TCP2
      net: tcp2: Add an overlay for TCP2
      net: tcp2: Add an overlay to set the debug log levels
      net: tcp2: Add an overlay to enable E1000 Ethernet
      net: tcp2: Allow placing the packet into sys_slist_t
      net: tcp2: Intercept TCP
      net: context: Add an opaque handle for TCP2
      net: context: Document net_context_packet_received()
      samples: sockets: Don't open the socket if the test protocol is enabled
      samples: net: echo-server: Increase the stack size for TCP2
      net: shell: Disable TCP commands for TCP2
      net: tcp2: Implement net_tcp_finalize()
      net: tcp2: Implement net_tcp_input()
      net: tcp2: Implement accept() and connect()
      net: tcp2: Implement TCP data sending
      net: tcp2: Send TCP data to caller
      net: tcp2: Use net_context to access TCP data

Olle Norelius (1):
      scripts: dts: Fix generation of single-value phandle/value array

Olof Kindgren (1):
      drivers: spi: Add simple_spi driver

Patrik Flykt (2):
      net: tcp2: Update net_context state on established TCP connection
      net: tcp2: Add functionality for close()

Paul Sokolovsky (15):
      modules: Kconfig.tls-generic: Add CONFIG_MBEDTLS_ECDSA_DETERMINISTIC
      include: net: socketutils: Allow to build for CONFIG_POSIX_API
      net: sntp: Allow to build for CONFIG_POSIX_API.
      samples: sockets: sntp_client: Build for both native Zephyr and POSIX
      net: lib: sntp_simple: Issue multiple requests with backoff
      manifest: mbedtls: Update to pick latest config-tls-generic.h
      sanitycheck: Merge common vs per-test ""filter"" field values semantically
      samples: sockets: Fix syntax of combined ""filter"" clauses in sample.yaml
      lib: posix: Kconfig: Allow to enable individual components
      tests: subsys: jwt: Remove unneeded CONFIG_PTHREAD_IPC option
      lib: posix, minlibc: struct itimerspec is defined by sys/timespec.h
      sanitycheck: Use os.makedirs to create --report-dir.
      net: lib: config: Add SYS_INIT handler to set clock from SNTP
      samples: posix: gettimeofday: Demo gettimeofday() returning correct time
      include: posix: time.h: Make CLOCK_REALTIME, etc. compatible with Newlib

Pavel Kral (1):
      subsystem: console: tty init checks and support for polled-only devices

Pavlo Hamov (12):
      subsystem: kernel_shell: extend thread info
      boards: stm32f429i_disc1: add SPI5 support
      samples: ili9340: add STM32F429 disco support
      drivers: i2c: stm32_Slave: Fix addr flag handling
      drivers: flash: add omitted dependency
      boards: nucleo_wb55rg: add omitted code-partition
      drivers: ipm_stm32wb: add workaround for conn_complete
      soc: stm32wb55: allow non 812k flash size
      drivers: clock: stm32wb: enable PWR only if exists
      boards: nucleo_wb55: select LSE by default
      drivers: hci: stm32_ipm: Add possibility to work on LSI
      drivers: hci: stm32_ipm: disable proper LSI

Pawel Czarnecki (1):
      dts: litex: add LiteX SoC builder vendor

Peter A. Bigot (30):
      scripts/dts/gen_defines.py: generalize string escape
      scripts/dts/gen_defines.py: return macro identifier in out functions
      scripts/dts/gen_defines.py: generate initializers for phandle/val lists
      scripts/dts/gen_defines.py: exclude initializer lists from conf file
      kconfig: support multiple DTS bindings directories
      scripts: elf_helper.py: fix C++ template constexpr value processing
      drivers: gpio: fix misuse of u8_t where bool is intended
      lib/timeutil: support const correctness for pointer parameter
      lib/timeutil: avoid implementation-defined behavior
      CODEOWNERS: Add entry for JEDEC SPI-NOR flash driver
      kernel: timeout: remove unused callback parameter from init function
      CODEOWNERS: add owners for the C++ subsystem
      boards: nrf52_pca20020: default select ADC instance
      subsys/fs/fatfs: correct misinterpretation of FatFs API
      subsys/fs: correct misinterpretation of Zephyr API
      scripts: dts: generate array values as initializer lists
      subsys/testsuite: use bool for condition types
      tests/application_development/libcxx: add test of basic smart pointer use
      Bluetooth: rework to support C++20 designated initializers
      kernel: use internal spelling of macro deprecation marker
      scripts: dts: add dependency information to edtlib
      boards: particle_*: correct antenna selection sense
      driver: uart: make deprecation effective
      tests/subsys/fs/littlefs: correct flash partition unit address
      dts: jedec,spi-nor: require size property
      drivers: spi_nor: generalize support for ULBPR instruction
      dts: jedec,spi-nor: add support for deep-power-down specification
      drivers: spi_nor: refactor device mutex management
      drivers: spi_nor: support deep-power-down mode
      drivers: spi_nor: improve documentation and validation on flash layout size

Peter Bigot (36):
      testsuite: clean up Kconfig dependencies
      testsuite: support reboot to retry intermittent tests
      libc/minimal/assert: conditionalize static_assert macro
      drivers: fix k_thread_create timeout argument
      tests: exclude platforms with limited flash
      cmake: add app boards subdir as search location for board overlay files
      samples: move board overlay files into boards directory
      scripts/coccinelle: add conversion of integers to timeout values
      coccinelle: standardize kernel API timeout arguments
      scripts/coccinelle: updates and improvements for integer timeout values
      coccinelle: standardize kernel API timeout arguments
      scripts/coccinelle: more cleanup of int literal to timeout
      coccinelle: standardize k_mbox_data_block_get call with timeout
      scripts/coccinelle: add sleep to int literal to timeout standardization
      coccinelle: standardize k_sleep calls with integer timeouts
      scripts/coccinelle: add k_thread create/define to timeout standardization
      coccinelle: standardize k_thread create/define calls with integer timeouts
      Bluetooth: samples: Reduce the bbc_microbit RAM usage
      samples: sensor: lsm6dsl: configure with trigger
      drivers: sensor: lsm6dsl: correct initialization order
      tests/drivers/build_all: add FLAG definition for all gpios
      devicetree: tree-wide: add nexus map properties for arduino headers
      doc: dts: describe nexus node magic required for shield gpio translation
      samples: sensor: lps22hb: add sample
      sensor: lis2dh: support I2C use on Nordic platforms
      boards: nrf52_pca20020: add missing accelerometer support
      samples: sensor: add lis2dh sample
      dts: bindings: semtech,sx1509b: add fixed ngpios property
      scripts/requirements: update PyYAML to >=5.1
      tests: arch: arm: increase main stack size for no-opt interrupt test
      tests: fcb: initialize buffers to avoid processing uninitialized values
      doc: correct path to boards/riscv
      kernel: move time_units into sys subdirectory
      kernel: extend time unit conversion to high resolution scales
      kernel: restore size and signedness behavior in deprecated time-related API
      coccinelle: update int literal to timeout

Peter Robinson (2):
      linker: arm: discard .note.GNU-stack
      linker: riscv: discard .note.GNU-stack

Philémon Jaermann (1):
      drivers: watchdog: Pass timeout in ms if iwdg is started at boot

Piotr Mienkowski (9):
      drivers: fix #ifdef in gpio_sam driver
      soc: add DTS PIO module nodes for sam3x series
      boards: update arduino_due to use gpio_sam driver
      boards: add ""User LED"" to arduino_due board DTS
      drivers: remove gpio_atmel_sam3 driver
      boards: provide default SWO freq for efr32_slwstk6061a
      drivers: clean up flags in gpio_intel_apl driver
      api: gpio: remove deprecated gpio_port functions
      gpio: Clean up API documentation

Piotr Pryga (1):
      Bluetooth: host: Configurable time to run slave conn param update

Piotr Zięcik (2):
      kernel: Separate k_poll() infrastructure and implementation
      kernel: Introduce k_work_poll

Pushpal Sidhu (1):
      dts: stm32l4r5: Add extra timer nodes not present in parent

Radoslaw Koppel (7):
      settings: Direct loading functionality
      settings: Generic function to call set handler
      settings: fcb: Duplicates filtering option
      settings: file: Duplicates filtering option
      settings: doc: Update the backend documentation
      Test: Settings: Fix FCB delete test
      Bluetooth: UUID: Implement UUID 128 encoder

Ravi kumar Veeramally (2):
      samples: net: coap_client: Fix coverity issue
      net: tcp: Accept connections only in LISTENING state

Richard Osterloh (15):
      ext: hal: st: stm32cube: Add HAL for the STM32G4x series
      soc: arm: st_stm32: Add STM32G4 SoC series
      drivers: clock_control: Add STM32G4X clock support
      drivers: pinmux: Add STM32G4X pinmux support
      drivers: gpio: Add STM32G4X gpio support
      drivers: interrupt_controller: Add STM32G4X exti support
      drivers: serial: Add STM32G4X serial support
      drivers: flash: Add STM32G4X flash support
      drivers: i2c: Add STM32G4X I2C support
      drivers: spi: Add STM32G4X SPI support
      drivers: adc: Add STM32G4X ADC support
      drivers: counter: Add STM32G4X counter support
      drivers: entropy: Add STM32G4X RNG support
      drivers: usb: Add STM32G4X USB support
      boards: arm: Add support for Nucleo G431RB board

Rihards Skuja (1):
      runners: pyocd: add --telnet-port parameter

Robert Lubos (7):
      modules: mbedtls: Allow to enable OpenThread optimizations
      net: openthread: Use Zephyr's mbedTLS instead of compiling own
      samples: net: Add mbedTLS tweaks in overlay-ot.conf
      net: if: Fix interface initialization with socket offloading
      net: lwm2m: Add config to enable DNS support
      net: lwm2m: Cleanup special handling of DNS for offloading
      net: openthread: Update OpenThread version

Robert Weber (3):
      soc: stm32wb: Add support for STM32 IWDG
      boards: nucleo_wb55rg: Enable IWDG
      boards: nucleo_wb55rg: Rename documentation file to match board name

Saravanan Sekar (1):
      wifi: eswifi: Implement TCP/UDP socket offload with TLS

Scott Worley (2):
      soc : arm : microchip_mec Move custom busy wait config to MEC1501 SoC
      drivers : spi : mec1501 : XEC SPI driver

Sean Nyekjaer (2):
      tests/drivers: adc: add config for NXP Freedom K22F board
      mailmap: add entry for Sean Nyekjaer

Sebastian Bøe (23):
      cmake: Drop old deprecation warning
      cmake: Error-out when 'project' is invoked too early
      cmake: Suppress west module logging
      cmake: Cache the 'toolchain-is-ok' test as well
      cmake: Fix bug where -Wno- flags could not be compatbility-checked
      cmake: Explicitly set the entry point when testing toolchain flags
      cmake: don't link interface libraries with zephyr_interface
      cmake: Move the invocation of 'project' earlier
      cmake: Fix usb include directory organization
      cmake: Fix bug where DTS_BINDINGS_DIRS could only have one entry
      cmake: Cleanup ethernet include directory handling
      cmake: Added function for parsing gcc dependency metadata
      cmake: dt: Reconfigure when DTS dependencies change
      rand32: cmake: Fix invalid build scripts
      dtc: Remove support for common.dts
      doc: dtc: Don't incorrectly document that DT uses Kconfig
      west: mbedtls: Updated mbedtls revision
      libc: Use select REQUIRES_FULL_LIBC instead of select NEWLIB_LIBC
      cmake: Fixed a bug where python 3.8 was not detected on Windows
      kconfig: cpp: Have LIB_CPLUSPLUS depend on ! MINIMAL_LIBC
      cmake: Don't test whether the installed west is the bootstrapper
      cmake: Speed up CMake by not invoking 'west'
      cmake: Check if match between CMAKE_BUILD_TYPE and OPTIMIZATION_FLAG

Sergiy Nikolayenko (1):
      Bluetooth: Keys: add key overwrite feature for key storage.

Siddharth Chandrasekaran (1):
      boards: stm32_min_dev: dts: set UART2 status okay

Sigurd Olav Nevstad (1):
      boards: arm: nrf9160_pca10090: increase reset line wait time

Solveig Fure (1):
      bluetooth: controller: Remove condition for header inclusion

Song Qiang (13):
      dt-bindings: add generic dma controller description support
      dt-bindings: add support for parsing stm32 dma consumer cells
      dt-bindings: arm: st: add dts support for DMA of some series of stm32
      drivers: i2s: code refactor
      drivers: i2s: change stm32 i2s driver to use two DMA controllers
      drivers: i2s: add some missing DMA parameters
      drivers: i2s: change the stm32 DMA in the driver to use dts
      dt-bindings: boards: apply dma dts changes to some boards
      drivers: dma: add generic driver support for some series of stm32
      boards: arm: 96b_argonkey: Update dma defconfig for tests
      drivers: i2s: apply new data size for DMA interface
      drivers: i2s: fix block size for DMA interface
      boards: 96b_stm32_sensor_mez: apply kconfig changes

Stephane D'Alu (2):
      display/ssd1306: build time selection of reversed display
      boards: support for DWM1001-DEV

Stephanos Ioannidis (30):
      toolchain: Add global check for endianness preprocessor definitions.
      kernel: Explicitly include toolchain.h to check for endianness definitions.
      sys: Explicitly include toolchain.h to check for endianness definitions.
      bluetooth: controller: Explicitly include toolchain.h.
      net: Explicitly include toolchain.h to check for endianness definitions.
      net/ieee802154: Explicitly include toolchain.h.
      toolchain: Add __BYTE_ORDER__ definition to the GCC toolchain header.
      kernel: Fix _K_QUEUE_INITIALIZER portability issue.
      scripts: gen_syscalls: Add compiler check to pragma.
      tests: timer_api: Fix duplicate timestamp update.
      arch: arm: Remove unnecessary register preservation in Cortex-R port.
      arch: arm: Add Cortex-R exception handling documentation.
      dts: bindings: Add CPU device bindings for Cortex-R.
      arch: arm: Fix incorrect Cortex-R device tree specification.
      ext: hal: cmsis: Relocate CMSIS-Core(M) files to its own directory.
      ext: hal: cmsis: Add HAS_CMSIS_CORE configuration.
      ext: hal: cmsis: Update references to HAS_CMSIS to HAS_CMSIS_CORE.
      ext: hal: cmsis: Fix version information in README.
      soc: arm: Clean up HAS_CMSIS_CORE usage.
      ext: hal: cmsis: Add CMSIS-Core(R).
      CODEOWNERS: Add cmsis code owner.
      tests: kernel: Fix incorrect interrupt controller type inference.
      headers: Refactor kernel and arch headers.
      kernel: Un-inline z_new_thread_init.
      arch: Simplify private header include path configuration.
      west.yml: Update hal_nxp revision.
      cmake: Use zephyr_link_libraries in toolchain_ld_cpp.
      arch: arm: Inline arch_isr_direct_header.
      arch: x86: Inline direct ISR functions.
      arch: arm: Make PLATFORM_SPECIFIC_INIT available to all ARM variants.

Steven Wang (2):
      [Code coverage]: Fix the issue of function code coverage in device.c.
      tests: move test timeutil into ""unit"" directory.

Takumi Ando (2):
      boards: arm: add Degu Evaluation Kit
      tests: degu_evk: add adc test

Thomas Ebert Hansen (1):
      Bluetooth: controller: Fix endianness for length update.

Thomas Kupper (2):
      west: runner: add support for stm32flash runner
      west: runner: stm32flash: add missing line in CODEOWNER

Thomas Stilwell (1):
      sanitycheck: fix --board-root parser to enable multiple path args

Timo Teräs (1):
      drivers: spi_nor: support Microchip SPI flash global unblock

Tobias Svehagen (6):
      usb: cdc_acm: Fix compiler warning
      Bluetooth: Mesh: Add callback for unprovisioned device beacon
      Bluetooth: Mesh: Add support for provisioner role over PB-ADV
      Bluetooth: Mesh: Add bt_mesh_provision_adv API
      Bluetooth: Mesh: Add support for provisioner over PB-ADV to shell
      cmake: dts: Remove duplicates from DTS_ROOT

Tom Burdick (3):
      arch: kinetis: Add support for k2x
      boards: arm: Add support for NXP FRDM-K22F board
      boards: nucleo_f446re flash layout

Tomasz Bursztyka (13):
      dts/bindings: Add the representation for Microchip's XEC watchdog timer
      dts/arm: Add support for the watchdog in MEC1501hsz
      drivers/watchdog: Add support for Microchip XEC device
      soc/arm: Add the watchdog DTS fixup for mec1501
      dts/bindings: Adding Microchip's XEC basic timer
      dts/arm: Add the 3 MEC1501 basic timer instances.
      driver/counter: Add support for Microchip's XEC basic timer devices
      soc/arm: Enable XEC counter driver relevantly for MEC1501
      soc/arm: Add a fixup for counter/alarm sample to compile with MEC1501
      dts/bindings: Adding Microchip's XEC PWM
      dts/arm: Add the 9 MEC1501 PWM instances.
      dts/bindings: Add the representation for Microchip's XEC ADC
      dts/arm: Add support for the ADC in MEC1501hsz

Tommy Vestermark (2):
      stm32: Fix uart_irq_tx_complete() to output correct status
      stm32: stm32_min_dev.dtsi enable use of UART_2 and UART_3

Torstein Grindvik (2):
      subsys/testsuite: make tc_util overridable
      samples: Add PSK support for echo client/server

Torsten Rasmussen (3):
      cmake: zephyr_library_amend feature
      cmake: app mem partion flexibility
      cmake: ensure zephyr_module.py creates posix path output for cmake

Trond Einar Snekvik (22):
      Bluetooth: Mesh: Add prov input_complete cb
      Bluetooth: Mesh: Add prov input_complete to shell
      Bluetooth: Mesh: Move model_find to public header
      Bluetooth: Mesh: Make unicast elem lookup O(1)
      Bluetooth: Mesh: Same config for all nrf51_qfaa boards in sample
      Bluetooth: Mesh: Remove special stack config
      Bluetooth: Mesh: Expose SeqZero mask
      Bluetooth: Mesh: Encrypt friend packets on send
      Bluetooth: Mesh: Add model callback structure
      Bluetooth: Mesh: Add persistent model user data
      Bluetooth: Mesh: Add model reset callback
      Bluetooth: Mesh: Expose header parsing outside net
      Bluetooth: Mesh: Expose app key get
      Bluetooth: Mesh: Ensure seqnum match in app/net
      Bluetooth: Mesh: Skip local messages in rx
      net: buf: Add net_buf_simple_clone
      Bluetooth: Mesh: Use net_buf_simple_clone
      Bluetooth: Mesh: Model message macros
      Bluetooth: Mesh: Proxy forwards ALL_NODES addr
      Bluetooth: Reduce severity of unavoidable warnings
      Bluetooth: Mesh: Model extension concept
      Bluetooth: Move Company ID config out of ctlr

Ulf Magnusson (202):
      scripts: Fix random typo'd whitespace
      xtensa: xtensa_intgen.py: Change 'not lvl in ...' to 'lvl not in ...'
      doc: application.py: Remove unused variables
      doc: conf.py: Replace bare 'except' with 'except Exception'
      west: run_common.py: Remove redundant 'if'
      gen_gcov_files.py: Replace bare 'except' with 'except Exception'
      scripts: sanitycheck: Remove redundant ifs
      menuconfig: Suppress spurious pylint tuple unpacking warning
      west: build.py: Rename unused variable from unpacking to _
      scripts: gen_kobject_list.py: Simplify test with 'in'
      scripts: Suppress/fix undefined variable pylint warnings
      intel_s1000_crb: messenger.py: Make endian_swap() static
      west: commands: Make functions that don't use 'self' static
      scripts: gen_relocate_app.py: Simplify test with 'in'
      west: runners: Fix typo'd log.wrn() call
      west: runners: Remove unnecessary constructors
      west: runners: core.py: Remove no-op try-excepts
      scripts: gen_kobject_list.py: Simplify test with chained comparison
      intel_s1000_crb: scripts: Remove '== False/True' tests
      doc: conf.py: Remove unused subprocess imports
      west: boards: Remove accidental comma to fix pylint warning
      west: completion.py: Fix bad indentation and blank lines at end of file
      doc: application.py: Simplify test with 'in'
      west: build.py: Remove len() from conditional to fix pylint warning
      west: nrfjprog.py: Remove len() from conditional to fix pylint warning
      west: zcmake.py: Simplify test with 'in'
      scripts: gen_kobject_list.py: Remove redundant parentheses
      samples: intel_s1000: Simplify code and fix pylint warning
      doc: extract_content.py: Suppress spurious pylint warning
      intel_s1000_crb: messenger.py: Simplify loops to fix pylint warnings
      intel_s1000_crb: messenger.py: Fix 3-space indentation
      sanitycheck: harness.py: Fix bad indentation
      kconfig: modules: Trivial cleanup
      dts: edtlib: Sanity-check contents of 'sub-node:'
      dts: dtlib: Ignore manually specified phandles in type checking
      dts: dtlib/edtlib: Add phandle and phandle+nums array types
      dts: edtlib: Add a Property.type field
      dts: edtlib: Sanity-check 'ranges' assignment syntax
      dts: dtlib: Remove unused Property._err_with_context() function
      dts: dtlib: Refactor to get rid of _is_parsing flag
      dts: dtlib: Add an _err() helper for error reporting
      dts: edtlib: Sanity-check the final merged binding only
      dts: bindings: Rename can.yaml to can-controller.yaml
      dts: bindings: Rename clock.yaml to clock-controller.yaml
      dts: bindings: Rename espi.yaml to espi-controller.yaml
      dts: bindings: Rename i2c.yaml to i2c-controller.yaml
      dts: bindings: Rename i2s.yaml to i2s-controller.yaml
      dts: bindings: Rename spi.yaml to spi-controller.yaml
      dts: bindings: Rename usb.yaml to usb-controller.yaml
      dts: bindings: Rename uart.yaml to uart-controller.yaml
      dts: bindings: Rename phy.yaml to phy-controller.yaml
      dts: bindings: Rename pwm.yaml to pwm-controller.yaml
      dts: bindings: Rename adc.yaml to adc-controller.yaml
      dts: edtlib: Improve how we get the compatible string from bindings
      dts: gen_defines: Remove lots of code duplication for phandle/val lists
      scripts: dtlib: Add test for untested /memreserve/ error
      dts: bindings: Have 'required: true/false' instead of 'category: ...'
      scripts: dts: Improve syntax and code for including binding files
      scripts: dts: Fix misc. pylint warnings in old scripts
      dts: nordic,nrf-uarte: Declare hw-flow-control in binding
      scripts: dtlib: Refactor to fix two no-self-use pylint warnings
      scripts: dts: devicetree.py: Fix pylint warning for iffy \w escape
      scripts: dts: Remove unused variable in old scripts
      scripts: dtlib: Suppress _init_tokens() pylint warning
      scripts: edtlib: Add backwards compatibility for 'category:'
      scripts: edtlib: Make _binding_include() global to fix pylint warning
      scripts: edtlib: Fix bad block indentation
      scripts: dts: Replace bare 'except's in old scripts
      scripts: dts: Simplify and improve 'compatible' matching
      dts: bindings: Shorten license headers
      scripts: Simplify code with sys.exit(<string>)
      zephyr_commit_rules.py: Fix pylint warning by simplifying conditional
      filter-known-issues.py: Remove '== True' test
      doc: application.py: Make functions that don't use 'self' static
      x86: gen_idt.py: Simplify test with 'not in'
      ci: scripts: Suppress pylint warnings for the sh library
      gen_isr_tables: Fix pylint warning by using isinstance()
      dts: edtlib: Support giving missing properties a default value
      dts: binding-template.yaml: Document how 'type: boolean' works
      kconfiglib: Expose parsing location to Python preprocessor functions
      dts: scripts: Require properties to be declared in bindings
      scripts: elf_helper.py: Make functions that don't use 'self' static
      x86: gen_idt.py: Fix broken error() call in update_irq_vec_map()
      x86: gen_idt.py: Use enumerate() to fix pylint warning
      scripts: elf_helper.py: Simplify tests with chained comparisons
      scripts: dts: Fix wrong filename in 'include:' code in old scripts
      scripts: edtlib: Make order irrelevant when including multiple files
      modules: Update ci-tools so that the latest tests run in CI
      scripts: footprint: Fix pylint warnings
      gen_syscalls.py: Remove semicolons, unused variables, and a '!= None'
      shell: kconfig: Fix wrong UART_SHELL_ON_DEV_NAME value due to typo
      west.yml: Update ci-tools to broaden pylint check and fix formatting
      scripts: dts: Change 'child/parent: bus: ...' to 'child/parent-bus:'
      west.yml: Update ci-tools to treat all .py files as Python
      scripts: dts: Replace 'sub-node:' with more general 'child-binding:'
      doc: release notes: Mention devicetree script changes for 2.0 and 2.1
      scripts: testedtlib.py: Generate SystemExit on test failures
      scripts: edtlib: Add a Device.children attribute with child Devices
      west.yml: Update ci-tools to always show checkpatch warnings
      scripts: edtlib: Skip fully loading bindings in more cases
      drivers: usb: stm32: Fix broken DT_USB_ENABLE_PIN_REMAP test
      cmake: dts: Fix (harmless) --bindings-dirs typo
      dts: bindings: Remove deprecated syntax for ESP32 GPIO and NRF PWM
      scripts: edtlib: Call nodes ""nodes"" instead of ""devices""
      scripts: edtlib: Rename Interrupt/GPIO/etc. 'specifier' field to 'data'
      bindings: hwinfo: Remove deprecated syntax in LiteX DNA binding
      scripts: dts: Generalize handling of phandle-array types
      kconfiglib: Fix preprocessor issue for nested parentheses
      doc: genrest: Separate turbo mode logic from rest of code
      doc: cmake: kconfig: Remove assignments to unused env. vars.
      scripts: dts: Generalize '#cells' to allow multiple sources
      scripts: edtlib: Add easy redirection of warnings
      doc: dts: Fix 'child-binding' typo in legacy syntax section
      bindings: nordic,nrf-rtc.yaml: Do not require 'ppi-wrap' property
      scripts: testedtlib.py: Simplify warning test a tiny bit
      doc: dts: Include #cells in legacy syntax section
      scripts: dts: Output paths relative to $ZEPHYR_BASE
      scripts: edtlib: Fix broken 'required: true' check for booleans
      scripts: genrest: Support splitting symbol documentation up by path
      scripts: edtlib: Turn Node.description into a @property
      scripts: edtlib: Forbid multiple bindings with the same compatible
      doc: genrest: Support customizing the description on index pages
      Kconfig: Remove copy-pasted comments on some promptless symbols
      dts: bindings: Fix typo'd nxp,kinetis-ptp.yaml name
      tests: net: Remove CONFIG_NET_HEADERS_ALWAYS_CONTIGUOUS assignment
      net: lwm2m: kconfig: Remove unused LWM2M_LOCAL_PORT symbol
      shell: kconfig: Remove unused SHELL_MAX_LOG_MSG_BUFFERED symbol
      net: lwm2m: kconfig: Remove unused firmware pull port symbol
      kconfig: Remove long-unused LINK_WHOLE_ARCHIVE symbol
      kconfig: Fix wrong partition size by changing type of FLASH_LOAD_SIZE
      bluetooth: kconfig: Remove unused BT_CTLR_LOWEST_PRIO symbol
      Bluetooth: Settings: Fix broken CONFIG_BT_SETTINGS_USE_PRINTK check
      disk: kconfig: Remove unused DISK_ACCESS_MAX_VOLUMES symbol
      boards: xtensa: kconfig: Remove unused XTENSA_XTSC_INC symbol
      drivers: console: kconfig: Remove unused IPM_CONSOLE_INIT_PRIORITY sym
      drivers: net: kconfig: Remove unused NET_PPP_CALC_FCS symbol
      drivers: net: kconfig: Remove unused NET_PPP_MTU symbol
      drivers: net: kconfig: Remove unused SLIP_MTU symbol
      drivers: console: kconfig: Remove unused NATIVE_STDIN_PRIO symbol
      drivers: adc: kconfig: Remove unused ADC_INIT_PRIORITY symbol
      drivers: spi_nor: Remove unused SPI_NOR_{PAGE,SECTOR}_SIZE symbols
      drivers: sensor: lis2mdl: kconfig: Remove unused fixed ODR symbols
      drivers: lsm6dsl: kconfig: Remove unused internal pull-up symbol
      arch: posix: kconfig: Remove unused ARCH_POSIX_STOP_ON_FATAL_ERROR sym
      drivers: i2c: slave: Kconfig: Remove unused LOG_I2C_SLAVE_LEVEL symbol
      interrupt_controller: Remove unused IOAPIC_DEBUG symbol
      drivers: clock_control: Remove unused CLOCK_STM32_PLL2_* symbols
      can: loopback: kconfig: Remove unused CAN_RECEIVER_WORKQ_PRIO symbol
      can: loopback: kconfig: Remove unused CAN_LOOPBACK_FRAME_BUF_SIZE sym
      soc: nxp_kinetis: kconfig: Remove unused PRESERVE_JTAG_IO_PINS symbol
      xtensa: kconfig: Remove unused SW_ISR_TABLE symbol
      doc: kconfig: Get rid of some duplicate path separators in output
      gui: lvgl: Fix broken CONFIG_LVGL_OBJ_WINDOW check
      net: ieee802154: kconfig: Remove unused fragmentation debugging symbol
      drivers: sensor: ens210: Fix broken CONFIG_ENS210_CRC_CHECK checks
      kconfig: Turn pointless/confusing 'menuconfig's into 'config's
      xtensa: kconfig: Remove unused XTENSA_OMIT_HIGH_INTERRUPTS symbol
      sensor: bmg160: Use BMG160_THREAD_PRIORITY instead of ignoring it
      drivers: dma: kconfig: Remove unused DMA_1/2_IRQ_PRI symbols
      lib: cmsis_v1: kconfig: Remove unused CMSIS_MAX_THREAD_COUNT symbol
      fs: nvs: kconfig: Remove unused NVS_PROTECT_FLASH symbol
      native_posix: kconfig: Fix misplaced USB_NATIVE_POSIX default
      kconfig: Remove symbol types from Kconfig.defconfig files
      intel_s1000_crb: kconfig: Remove unused I2C_0_DEFAULT_CFG symbol
      boards: mps2_an521: kconfig: Remove unused PINMUX_MPS2 symbol
      arch: arc: kconfig: Define CPU_EM* syms outside Kconfig.defconfig files
      arch: arc: kconfig: Define FP_FPU_DA outside Kconfig.defconfig files
      arm/riscv: kconfig: Remove type from NUM_IRQS in defconfig files
      soc: arm: kconfig: Clean up SOC_PART_NUMBER definitions
      arm/riscv: Remove types from SOC_SERIES in Kconfig.defconfig files
      drivers: i2c: kconfig: Remove unused I2C_EEPROM_SLAVE_0/1 symbols
      drivers: serial: liteuart: Remove unused UART_LITEUART_PORT_0 symbol
      net: lib: config: kconfig: Remove unused NET_CONFIG_SNTP_INIT_PRIO sym
      scripts: edtlib/extract_dts_includes.py: Speed up 2x+ with yaml.CLoader
      dts: bindings: Preserve newlines in descriptions
      dts: binding-template.yaml: Document simple types as well
      dts: binding-template.yaml: Preserve newlines in 'description'
      arch: cortex_m/r: kconfig: Remove unused LDREX_STREX_AVAILABLE symbol
      scripts: dts: Format multi-line comments nicely
      mps2_an521: kconfig: Remove unused TIMER_(D)TMR_CMSDK_APB_(0/1) symbols
      soc: nxp: rt: kconfig: Clean up INIT_ENET_PLL handling
      arch: arc/arm: kconfig: Remove unused DATA_ENDIANNESS_LITTLE symbol
      kconfig: Global whitespace/consistency cleanup
      libc: kconfig: Have MINIMAL_LIBC depend on !REQUIRES_FULL_LIBC
      kconfig: Turn pointless/confusing 'menuconfig's into 'config's
      sanitycheck: Suppress bogus not-subscriptable pylint warning
      sanitycheck: Make log_info_file() a regular function
      sanitycheck: Remove pointless shutdown() from BoundedExecutor
      kconfig: Clean up header comments and make them consistent
      doc: kconfig: Document recommended header format
      kconfig: Clean up 'config  FOO' (two spaces) definitions
      kconfig: Change some '#Comment' comments to '# Comment'
      binding-template.yaml: Improve 'include:' docs and mention base.yaml
      boards: arm: mps2_an521/musca: kconfig: Clean up BOARD defaults
      west.yml: Update ci-tools to run pylint on scripts/sanitycheck
      soc: snps_arc_hsdk: kconfig: Remove unused CPU_HS38_LINUX symbol
      dts: edtlib: Add simple generic support for pinctrl-<index> properties
      dts: testedtlib: Fix broken Node.dep_ordinal test
      dts: grutils: Remove spaces before '(' in function definitions
      dts: edtlib: Turn edt.required_by()/depends_on() into Node attributes
      kconfig: Add linting script
      kconfig: Update Kconfiglib and use new helpers in kconfig.py

Vikrant More (2):
      samples: mesh: nrf52: amendment in States restoration implementation
      samples: mesh: nrf52: removed redundunt code

Vinayak Kariappa Chettimada (60):
      Bluetooth: controller: Fix cmd disallowed and collision disconnects
      Bluetooth: controller: Defer encryption setup if in conn update
      Bluetooth: controller: Add data length procedure queueing
      Bluetooth: controller: Fix control tx queue handling
      Bluetooth: controller: Fix ENC_REQ PDU retransmission
      Bluetooth: controller: Fix Re-encryption procedure
      Bluetooth: controller: Fix start encryption in progress check
      Bluetooth: controller: Fix data PDU leak during ctrl PDU defer
      Bluetooth: controller: Refactor use of SWI
      Bluetooth: controller: split: Fix Rx reserved for conn cmplt
      Bluetooth: controller: legacy: Ensure that a `case` statement is present
      Bluetooth: controller: split: Fix to reject invalid enable command
      Bluetooth: controller: Fix to reject invalid enable command
      Bluetooth: controller: Fix mayfly optimization
      Bluetooth: controller: Fix DLE event on PHY update
      Bluetooth: controller: Fix legacy for TICKER_COMPATABILITY_MODE
      Bluetooth: controller: Fix refactored SWI regression
      Bluetooth: controller: split: Fix missing slave latency impl.
      Bluetooth: controller: split: Fix advertising for multiple peripherals
      Bluetooth: controller: split: Fix flash driver co-operation
      Bluetooth: controller: split: Fix incorrect mayfly caller id
      Bluetooth: controller: split: Fix missing radio status reset
      Bluetooth: controller: split: Fix radio abort race condition
      Bluetooth: controller: split: Fix LLL Tx flush to be immediate
      Bluetooth: controller: split: Fix flushing Tx buffers in HCI
      Bluetooth: controller: split: Fix for Tx Buffer Overflow error
      Bluetooth: controller: split: Fix flushing Tx buffers in ULL
      Bluetooth: controller: split: Fix central_hr sample compilation
      Bluetooth: controller: Add Zero Latency IRQ Kconfig
      Bluetooth: controller: split: Support Zero Latency IRQs
      Bluetooth: controller: Support Zero Latency IRQs
      Bluetooth: controller: Fix ticker previous slot value
      Bluetooth: controller: Fix Kconfig conditional optionals
      Bluetooth: controller: split: cond. compile job disable
      Bluetooth: controller: split: Fix missing data len update event
      Bluetooth: controller: split: Fix ctrl proc rx node starvation
      Bluetooth: controller: Fix DLE for remote unsupported Coded PHY
      Bluetooth: controller: split: Fix ticks slot used on conn update
      Bluetooth: controller: split: Stop pre-empt timer
      Bluetooth: controller: split: Fix slave latency enable
      Bluetooth: controller: split: Fix incorrect MD bit value
      Bluetooth: controller: Fix conn update to be cacheable
      Bluetooth: controller: legacy: Fix conn RSSI initial value
      Bluetooth: controller: split: Fix conn RSSI initial value
      Bluetooth: controller: split: Refactor LLL conn structure
      Bluetooth: controller: split: Fix missing terminate_ack initialization
      Bluetooth: controller: split: Fix conditional compile error
      Bluetooth: controller: split: Fix DLE during data transmission
      Bluetooth: controller: split: Fix data PDU leak during ctrl PDU defer
      Bluetooth: controller: split: Fix start encryption in progress check
      Bluetooth: controller: split: Fix cmd disallowed and collision disconnects
      Bluetooth: controller: split: Fix control tx queue handling
      Bluetooth: controller: split: Fix ENC_REQ PDU retransmission
      Bluetooth: controller: split: Fix Re-encryption procedure
      Bluetooth: controller: split: Add data length procedure queueing
      Bluetooth: controller: split: Fix enc procedure reject handling
      Bluetooth: controller: split: Port missing break latency
      Bluetooth: controller: split: Fix feature exchange state reset
      Bluetooth: controller: split: Fix the slow Enc Setup alternative
      Bluetooth: controller: split: Fix DLE for remote unsupported Coded PHY

Vincent Wan (20):
      boards: cc3235sf_launchxl: add support for TI CC3235SF LaunchPad
      soc: ti_simplelink: add CC3235SF to the CC32xx series
      dts: arm: add device tree file for TI CC3235SF
      ext: simplelink: Update comment for HAS_CC3220SDK
      linker: place debug header section for CC3235SF
      samples: net: Adding board config files for CC3235SF
      boards: cc3235sf_launchxl: use OpenOCD from Zephyr SDK
      samples: net: sockets: disable http_get in test build
      drivers: wifi: simplelink: fixes to support CONFIG_NET_NATIVE=n
      tests: fatal: allocate timer outside of stack
      drivers: timer: add RTC support as system clock for CC13X2/CC26X2
      tests/kernel/sleep: relax upper bound for TI CC13X2/CC26X2 RTC
      tests: arm: fix arm_irq_vector_table to plug rtc_isr for CC13x2/CC26x2
      CODEOWNERS: Add entry for CC13x2/CC26x2 RTC timer driver
      modules: Kconfig.simplelink: Remove POSIX_API, use fine-grained opts
      dts: specify cpu frequency for TI CC13X2/CC26X2
      drivers: spi: use CPU clock frequency in configuration on CC13XX/CC26XX
      tests: spi_loopback: make CONFIG_SPI_ASYNC optional
      tests: spi_loopback: add option for LOOP mode
      tests: spi_loopback: add support for cc1352r1_launchxl

Watson Zeng (5):
      arc: arc_connect: bug fix in arc_connect
      arc: hsdk: dts: bug fix
      arc: hsdk: add pinmux driver support and doc enhancement
      drivers: spi_dw: add WORD only access support
      arc: hsdk: add lvgl support for hsdk board

Wayne Ren (11):
      arc: replace 32-bit instructions with possible 16-bit instructions
      net: offload: When NET_OFFLOAD is enabled bypass some net_tcp functions
      kernel: fix the bug in atomic_c.c
      arch: arc: fix the bug in _firq_enter
      arch: arc: fix the bug in prologue of sys call handling
      arch: arc: enlarge the exception handling stack
      arch: arc: implement DIRECT IRQ support
      tests: add the case for ARC in yaml
      soc: nsim_hs: fix the interrupt numbers
      tests: Fix the compile warning for arc
      kernel: need to release spinlock before busy_wait

Wentong Wu (10):
      linker: add custom align size to reduce alignment memory wasting
      scripts: gen_relocate_app.py: add custom align size for relocation
      doc: power_management: add diagrams illustrating power management
      logging: wake up log process thread only when log message happen
      logging: add syst format output
      logging: add UART syst backend support
      logging: add SWO syst backend support
      logging: add RTT syst backend support.
      logging: add networking syst backend support.
      samples: add sample for logging syst format output

Wolfgang Puffitsch (5):
      Bluetooth: host: Fold consecutive calls to bt_rand into one
      Bluetooth: controller: Use entropy driver directly in bt_rand
      Bluetooth: controller: split: Add hook for flushing in LLL
      Bluetooth: controller: split: Call LLL reset functions from ll_reset
      Bluetooth: controller: split: Make number of TX ctrl buffers configurable

Yannis Damigos (10):
      usb_device: Wait for write done event (in) before sending zlp
      usb_device: Fix typo in comment
      dts: esp32: Add GPIO support in DT
      boards/xtensa: Add support for ODROID-GO Game Kit
      bindings/gpio: Add missing property ""gpio-cells""
      i2c_ll_stm32_v2: Send STOP manually after NACK
      i2c_ll_stm32.c: Use macro to add I2C5 instance
      odroid_go: Add support for I2C
      odroid_go/doc: Add supported features section
      odroid_go: Enable entropy number generator

Yaël Boutreux (1):
      boards: shields: Add x_nucleo_idb05a1

peng1 chen (1):
      Code Coverage: Fix the issue of function code coverage in thread.c
```
",59771425
1517,False,False,2019-10-06T16:30:53Z,2019-10-06T16:45:27Z,"This is an LTS maintenance release with fixes, as well as Bluetooth
qualification listings for the Bluetooth protocol stack included in Zephyr.

## Security Vulnerability Related

The following security vulnerability (CVE) was addressed in this
release:

* Fixes CVE-2019-9506: The Bluetooth BR/EDR specification up to and
  including version 5.1 permits sufficiently low encryption key length
  and does not prevent an attacker from influencing the key length
  negotiation. This allows practical brute-force attacks (aka ""KNOB"")
  that can decrypt traffic and inject arbitrary ciphertext without the
  victim noticing.

## Bluetooth


* Qualification:

  * 1.14.x Host subsystem qualified with QDID 139258
  * 1.14.x Mesh subsystem qualified with QDID 139259
  * 1.14.x Controller component qualified on Nordic nRF52 with QDID 135679

## Issues Fixed

These GitHub issues were addressed since the previous 1.14.0 tagged
release:

* https://github.com/zephyrproject-rtos/zephyr/issues/11617 - net: ipv4: udp: broadcast delivery not supported
* https://github.com/zephyrproject-rtos/zephyr/issues/11743 - logging: add user mode access
* https://github.com/zephyrproject-rtos/zephyr/issues/14459 - usb: samples: mass: doesn't build with FLASH overlay
* https://github.com/zephyrproject-rtos/zephyr/issues/15279 - mempool alignment might cause a memory block allocated twice
* https://github.com/zephyrproject-rtos/zephyr/issues/15339 - RISC-V: RV32M1: Load access fault when accessing GPIO port E
* https://github.com/zephyrproject-rtos/zephyr/issues/15354 - counter: stm32: Issue with LSE clock source selection
* https://github.com/zephyrproject-rtos/zephyr/issues/15373 - IPv4 link local packets are not sent with ARP ethernet type
* https://github.com/zephyrproject-rtos/zephyr/issues/15443 - usb_dc_stm32: Missing semaphore initialization and missing pin remapping configuration
* https://github.com/zephyrproject-rtos/zephyr/issues/15444 - Error initiating sdhc disk
* https://github.com/zephyrproject-rtos/zephyr/issues/15497 - USB DFU: STM32: usb dfu mode doesn't work
* https://github.com/zephyrproject-rtos/zephyr/issues/15507 - NRF52840: usb composite MSC + HID (with CONFIG_ENABLE_HID_INT_OUT_EP)
* https://github.com/zephyrproject-rtos/zephyr/issues/15526 - Unhandled identity in bt_conn_create_slave_le
* https://github.com/zephyrproject-rtos/zephyr/issues/15558 - support for power-of-two MPUs on non-XIP systems
* https://github.com/zephyrproject-rtos/zephyr/issues/15601 - pwm: nRF default prescalar value is wrong
* https://github.com/zephyrproject-rtos/zephyr/issues/15603 - Unable to use C++ Standard Library
* https://github.com/zephyrproject-rtos/zephyr/issues/15605 - Unaligned memory access by ldrd
* https://github.com/zephyrproject-rtos/zephyr/issues/15606 - trickle.c can't work for multiple triggerings
* https://github.com/zephyrproject-rtos/zephyr/issues/15678 - Watchdog peripheral api docs aren't generated correctly.
* https://github.com/zephyrproject-rtos/zephyr/issues/15698 - bluetooth: bt_conn: No proper ID handling
* https://github.com/zephyrproject-rtos/zephyr/issues/15733 - Bluetooth: controller: Central Encryption setup overlaps Length Request procedure
* https://github.com/zephyrproject-rtos/zephyr/issues/15794 - mps2_an385 crashes if CONFIG_INIT_STACKS=y and CONFIG_COVERAGE=y
* https://github.com/zephyrproject-rtos/zephyr/issues/15817 - nrf52: HFXO is not turned off as expected
* https://github.com/zephyrproject-rtos/zephyr/issues/15904 - concerns with use of CONFIG_BT_MESH_RPL_STORE_TIMEOUT in examples
* https://github.com/zephyrproject-rtos/zephyr/issues/15911 - Stack size is smaller than it should be
* https://github.com/zephyrproject-rtos/zephyr/issues/15975 - Openthread - fault with dual network interfaces
* https://github.com/zephyrproject-rtos/zephyr/issues/16001 - ARC iotdk supports MPU and fpu in hardware but not enabled in kconfig
* https://github.com/zephyrproject-rtos/zephyr/issues/16002 - the spi base reg address in arc_iot.dtsi has an error
* https://github.com/zephyrproject-rtos/zephyr/issues/16010 - Coverage reporting fails on many tests
* https://github.com/zephyrproject-rtos/zephyr/issues/16012 - Source IP address for DHCP renewal messages is unset
* https://github.com/zephyrproject-rtos/zephyr/issues/16027 - support for no-flash systems
* https://github.com/zephyrproject-rtos/zephyr/issues/16046 - modules are being processed too late.
* https://github.com/zephyrproject-rtos/zephyr/issues/16090 - mpu align support for code relocation on non-XIP system
* https://github.com/zephyrproject-rtos/zephyr/issues/16107 - Using bt_gatt_read() with 'by_uuid' method returns 3 extra bytes
* https://github.com/zephyrproject-rtos/zephyr/issues/16143 - posix: clock_settime calculates the base time incorrectly
* https://github.com/zephyrproject-rtos/zephyr/issues/16155 - drivers: can: wrong value used for filter mode set
* https://github.com/zephyrproject-rtos/zephyr/issues/16257 - net: icmpv4: Zephyr sends echo reply with multicast source address
* https://github.com/zephyrproject-rtos/zephyr/issues/16307 - cannot move location counter backwards error happen
* https://github.com/zephyrproject-rtos/zephyr/issues/16323 - net: ipv6: tcp: unexpected reply to malformed HBH in TCP/IPv6 SYN
* https://github.com/zephyrproject-rtos/zephyr/issues/16339 - openthread: off-by-one error when calculating ot_flash_offset for settings
* https://github.com/zephyrproject-rtos/zephyr/issues/16354 - net: ipv6: Zephyr does not reply to fragmented packet
* https://github.com/zephyrproject-rtos/zephyr/issues/16375 - net: ipv4: udp: Zephyr does not reply to a valid datagram with checksum zero
* https://github.com/zephyrproject-rtos/zephyr/issues/16379 - net: ipv6: udp: Zephyr replies with illegal UDP checksum zero
* https://github.com/zephyrproject-rtos/zephyr/issues/16411 - bad regex for west version check in host-tools.cmake
* https://github.com/zephyrproject-rtos/zephyr/issues/16412 - on reel_board the consumption increases because TX pin is floating
* https://github.com/zephyrproject-rtos/zephyr/issues/16413 - Missing dependency in cmake
* https://github.com/zephyrproject-rtos/zephyr/issues/16414 - Backport west build --pristine
* https://github.com/zephyrproject-rtos/zephyr/issues/16415 - Build errors with C++
* https://github.com/zephyrproject-rtos/zephyr/issues/16416 - sram size for RT1015 and RT1020 needs to be update.
* https://github.com/zephyrproject-rtos/zephyr/issues/16417 - issues with can filter mode set
* https://github.com/zephyrproject-rtos/zephyr/issues/16418 - drivers: watchdog: sam0: check if timeout is valid
* https://github.com/zephyrproject-rtos/zephyr/issues/16419 - Bluetooth: XTAL feature regression
* https://github.com/zephyrproject-rtos/zephyr/issues/16478 - Bluetooth: Improper bonded peers handling
* https://github.com/zephyrproject-rtos/zephyr/issues/16570 - [Coverity CID :198877]Null pointer dereferences in /subsys/net/ip/net_if.c
* https://github.com/zephyrproject-rtos/zephyr/issues/16577 - [Coverity CID :198870]Error handling issues in /subsys/net/lib/lwm2m/lwm2m_obj_firmware_pu
ll.c
* https://github.com/zephyrproject-rtos/zephyr/issues/16581 - [Coverity CID :198866]Null pointer dereferences in /subsys/net/lib/dns/llmnr_responder.c
* https://github.com/zephyrproject-rtos/zephyr/issues/16584 - [Coverity CID :198863]Error handling issues in /subsys/net/lib/sntp/sntp.c
* https://github.com/zephyrproject-rtos/zephyr/issues/16594 - net: dns: Zephyr is unable to unpack mDNS answers produced by another Zephyr node
* https://github.com/zephyrproject-rtos/zephyr/issues/16600 - Bluetooth: Mesh: Proxy SAR timeout is not implemented
* https://github.com/zephyrproject-rtos/zephyr/issues/16602 - Bluetooth: GATT Discovery: Descriptor Discovery by range Seg Fault
* https://github.com/zephyrproject-rtos/zephyr/issues/16639 - eth: pinging frdm k64f eventually leads to unresponsive ethernet device
* https://github.com/zephyrproject-rtos/zephyr/issues/16678 - LPN establishment of Friendship never completes if there is no response to the initial Fri
end Poll
* https://github.com/zephyrproject-rtos/zephyr/issues/16711 - Settings reworked to const char processing
* https://github.com/zephyrproject-rtos/zephyr/issues/16734 - Bluetooth: GATT: Writing 1 byte to a CCC access invalid memory
* https://github.com/zephyrproject-rtos/zephyr/issues/16745 - PTHREAD_MUTEX_DEFINE(): don't store into the _k_mutex section
* https://github.com/zephyrproject-rtos/zephyr/issues/16746 - boards: nrf52840_pca10059: Configure NFC pins as GPIOs by default
* https://github.com/zephyrproject-rtos/zephyr/issues/16749 - IRQ_CONNECT and irq_enable calls in the SiFive UART driver is misconfigured
* https://github.com/zephyrproject-rtos/zephyr/issues/16750 - counter:  lack of interrupt when CC=0
* https://github.com/zephyrproject-rtos/zephyr/issues/16760 - K_THREAD_STACK_EXTERN() confuses gen_kobject_list.py
* https://github.com/zephyrproject-rtos/zephyr/issues/16779 - [Zephyr v1.14] ARM: fix the start address of MPU guard in stack-fail checking (when building with no user mode)
* https://github.com/zephyrproject-rtos/zephyr/issues/16799 - Bluetooth: L2CAP: Interpretation of SCID and DCID in Disconnect is wrong
* https://github.com/zephyrproject-rtos/zephyr/issues/16864 - Bluetooth: Mesh: Rx buffer exhaustion causes deadlock
* https://github.com/zephyrproject-rtos/zephyr/issues/16893 - Bluetooth: Multiple local IDs, privacy problem
* https://github.com/zephyrproject-rtos/zephyr/issues/16943 - Missing test coverage for lib/os/crc\*.c
* https://github.com/zephyrproject-rtos/zephyr/issues/16944 - Insufficient test coverage for lib/os/json.c
* https://github.com/zephyrproject-rtos/zephyr/issues/17031 - Compiler warnings in settings module in Zephyr 1.14
* https://github.com/zephyrproject-rtos/zephyr/issues/17038 - code relocation generating different memory layout cause user mode not working
* https://github.com/zephyrproject-rtos/zephyr/issues/17041 - [1.14] Bluetooth: Mesh: RPL handling is not in line with the spec
* https://github.com/zephyrproject-rtos/zephyr/issues/17055 - net: Incorrect data length after the connection is established
* https://github.com/zephyrproject-rtos/zephyr/issues/17057 - Bluetooth: Mesh: Implementation doesn't conform to latest errata and 1.0.1 version
* https://github.com/zephyrproject-rtos/zephyr/issues/17092 - Bluetooth: GAP/IDLE/NAMP/BV-01-C requires Read by UUID
* https://github.com/zephyrproject-rtos/zephyr/issues/17170 - x86_64 crash with spinning child thread
* https://github.com/zephyrproject-rtos/zephyr/issues/17177 - ARM: userspace/test_bad_syscall fails on ARMv8-M
* https://github.com/zephyrproject-rtos/zephyr/issues/17190 - net-mgmt should pass info element size to callback
* https://github.com/zephyrproject-rtos/zephyr/issues/17250 - After first GC operation the 1st sector had become scratch and the 2nd sector had became write sector.
* https://github.com/zephyrproject-rtos/zephyr/issues/17251 - w25q: erase operations must be erase-size aligned
* https://github.com/zephyrproject-rtos/zephyr/issues/17262 - insufficient code coverage for lib/os/base64.c
* https://github.com/zephyrproject-rtos/zephyr/issues/17288 - Bluetooth: controller: Fix handling of L2CAP start frame with zero PDU length
* https://github.com/zephyrproject-rtos/zephyr/issues/17294 - DB corruption when adding/removing service
* https://github.com/zephyrproject-rtos/zephyr/issues/17337 - ArmV7-M mpu sub region alignment
* https://github.com/zephyrproject-rtos/zephyr/issues/17338 - kernel objects address check in elf_helper.py
* https://github.com/zephyrproject-rtos/zephyr/issues/17368 - Time Slicing cause system sleep short time
* https://github.com/zephyrproject-rtos/zephyr/issues/17399 - LwM2M: Can't use an alternate mbedtls implementation
* https://github.com/zephyrproject-rtos/zephyr/issues/17401 - LwM2M: requires that CONFIG_NET_IPV\* be enabled (can't use 100% offloaded IP stack)
* https://github.com/zephyrproject-rtos/zephyr/issues/17415 - Settings Module - settings_line_val_read() returning -EINVAL instead of 0 for deleted setting entries
* https://github.com/zephyrproject-rtos/zephyr/issues/17427 - net: IPv4/UDP datagram with zero src addr and TTL causes Zephyr to segfault
* https://github.com/zephyrproject-rtos/zephyr/issues/17450 - net: IPv6/UDP datagram with unspecified addr and zero hop limit causes Zephyr to quit
* https://github.com/zephyrproject-rtos/zephyr/issues/17463 - Bluetooth: API limits usage of MITM flags in Pairing Request
* https://github.com/zephyrproject-rtos/zephyr/issues/17534 - Race condition in GATT API.
* https://github.com/zephyrproject-rtos/zephyr/issues/17564 - Missing stdlib.h include when C++ standard library is used.
* https://github.com/zephyrproject-rtos/zephyr/issues/17595 - two userspace tests fail if stack canaries are enabled in board configuration
* https://github.com/zephyrproject-rtos/zephyr/issues/17600 - Enable Mesh Friend support in Bluetooth tester application
* https://github.com/zephyrproject-rtos/zephyr/issues/17613 - POSIX arch: occasional failures of tests/kernel/sched/schedule_api on CI
* https://github.com/zephyrproject-rtos/zephyr/issues/17723 - Advertiser never clears state flags
* https://github.com/zephyrproject-rtos/zephyr/issues/17732 - cannot use bt_conn_security in connected callback
* https://github.com/zephyrproject-rtos/zephyr/issues/17764 - Broken link to latest development version of docs
* https://github.com/zephyrproject-rtos/zephyr/issues/17789 - Bluetooth: host: conn.c missing parameter copy
* https://github.com/zephyrproject-rtos/zephyr/issues/17802 - [zephyr 1.14] Address type 0x02 is used by LE Create Connection in device privacy mode
* https://github.com/zephyrproject-rtos/zephyr/issues/17809 - Bluetooth Mesh message cached too early when LPN
* https://github.com/zephyrproject-rtos/zephyr/issues/17820 - Mesh  bug report In access.c
* https://github.com/zephyrproject-rtos/zephyr/issues/17821 - Mesh Bug on access.c
* https://github.com/zephyrproject-rtos/zephyr/issues/17843 - Bluetooth: controller: v1.14.x release conformance test failures
* https://github.com/zephyrproject-rtos/zephyr/issues/17857 - GATT: Incorrect byte order for GATT database hash
* https://github.com/zephyrproject-rtos/zephyr/issues/17861 - Tester application lacks BTP Discover All Primary Services handler
* https://github.com/zephyrproject-rtos/zephyr/issues/17880 - Unable to re-connect to privacy enabled peer when using stack generated Identity
* https://github.com/zephyrproject-rtos/zephyr/issues/17882 - [zephyr 1.14]  Database Out of Sync error is not returned as expected
* https://github.com/zephyrproject-rtos/zephyr/issues/17907 - BLE Mesh when resend use GATT bearer
* https://github.com/zephyrproject-rtos/zephyr/issues/17932 - BLE Mesh When Friend Send Seg Message To LPN
* https://github.com/zephyrproject-rtos/zephyr/issues/17936 - Bluetooth: Mesh: The canceled buffer is not free, causing a memory leak
* https://github.com/zephyrproject-rtos/zephyr/issues/17944 - [zephyr 1.14]  LE Enhanced Connection Complete indicates Resolved Public once connected to Public peer address
* https://github.com/zephyrproject-rtos/zephyr/issues/17948 - Bluetooth: privacy: Reconnection issue
* https://github.com/zephyrproject-rtos/zephyr/issues/17971 - [zephyr 1.14] Unable to register GATT service that was unregistered before
* https://github.com/zephyrproject-rtos/zephyr/issues/17977 - BLE Mesh When IV Update Procedure
* https://github.com/zephyrproject-rtos/zephyr/issues/17979 - Security level cannot be elevated after re-connection with privacy
* https://github.com/zephyrproject-rtos/zephyr/issues/18013 - BLE Mesh On Net Buffer free issue
* https://github.com/zephyrproject-rtos/zephyr/issues/18021 - Socket vtable can access null pointer callback function
* https://github.com/zephyrproject-rtos/zephyr/issues/18090 - [zephyr 1.14][MESH/NODE/FRND/FN/BV-08-C] Mesh Friend queues more messages than indicates it's Friend Cache
* https://github.com/zephyrproject-rtos/zephyr/issues/18150 - [zephyr 1.14] Host does not change the RPA
* https://github.com/zephyrproject-rtos/zephyr/issues/18178 - BLE Mesh When Provisioning Use Input OOB Method
* https://github.com/zephyrproject-rtos/zephyr/issues/18183 - [zephyr 1.14][GATT/SR/GAS/BV-07-C] GATT Server does not inform change-unaware client about DB changes
* https://github.com/zephyrproject-rtos/zephyr/issues/18194 - [zephyr 1.14][MESH/NODE/CFG/HBP/BV-05-C] Zephyr does not send Heartbeat message on friendship termination
* https://github.com/zephyrproject-rtos/zephyr/issues/18297 - Bluetooth: SMP: Pairing issues
* https://github.com/zephyrproject-rtos/zephyr/issues/18306 - Unable to reconnect paired devices with controller privacy disabled (host privacy enabled)
* https://github.com/zephyrproject-rtos/zephyr/issues/18308 - net: TCP/IPv6 set of fragmented packets causes Zephyr to quit
* https://github.com/zephyrproject-rtos/zephyr/issues/18394 - [Coverity CID :203464]Memory - corruptions in /subsys/net/l2/ethernet/gptp/gptp_mi.c
* https://github.com/zephyrproject-rtos/zephyr/issues/18462 - potential buffer overrun in logging infrastructure
* https://github.com/zephyrproject-rtos/zephyr/issues/18522 - BLE: Mesh: When transport send seg_msg to LPN
* https://github.com/zephyrproject-rtos/zephyr/issues/18580 - Bluetooth: Security fail on initial pairing
* https://github.com/zephyrproject-rtos/zephyr/issues/18658 - Bluetooth BR/EDR encryption key negotiation vulnerability
* https://github.com/zephyrproject-rtos/zephyr/issues/18739 - k_uptime_get_32() does not behave as documented
* https://github.com/zephyrproject-rtos/zephyr/issues/18813 - fs: nvs: Cannot delete entries
* https://github.com/zephyrproject-rtos/zephyr/issues/18873 - zsock_socket() should support proto==0
* https://github.com/zephyrproject-rtos/zephyr/issues/18935 - [Zephyr 1.14] drivers: flash: spi_nor: Problematic write with page boundaries
* https://github.com/zephyrproject-rtos/zephyr/issues/18961 - [Coverity CID :203912]Error handling issues in /samples/net/sockets/coap_client/src/coap-client.c
* https://github.com/zephyrproject-rtos/zephyr/issues/19015 - Bluetooth: Mesh: Node doesn't respond to ""All Proxies"" address
* https://github.com/zephyrproject-rtos/zephyr/issues/19165 - zephyr_file generates bad links on branches
* https://github.com/zephyrproject-rtos/zephyr/issues/19181 - sock_set_flag implementation in sock_internal.h does not work for 64 bit pointers
* https://github.com/zephyrproject-rtos/zephyr/issues/19191 - problem with implementation of sock_set_flag",59771425
1518,False,True,2019-10-06T14:52:09Z,2019-10-06T14:53:35Z,"Changes since 1.14.1-rc2

```
Anas Nashif (2):
      doc: link-roles: convert bytes to string
      release: bump version to 1.14.1-rc3

Andrzej Puzdrowski (2):
      tests/subsys/settings/fcb: deletion test
      nvs: Fix deletion of the last entry added

David B. Kinder (1):
      doc: update link from released doc to master

Declan Traill (1):
      Settings: Fix incorrect return of -EINVAL for deleted entries

Erwin Rol (1):
      spinlock: Make sure C and C++ have the same sizeof(k_spinlock) value

Faisal Saleem (1):
      Settings: Improve error handling of settings load

Jan Van Winkel (1):
      fs: fcb: Increase temporary buffer in fcb_append

Joakim Andersson (1):
      Bluetooth: Host: Fix invalid pointer in bt_smp_pkey_ready

Johan Hedberg (5):
      Bluetooth: Mesh: Fix publication period timestamp initialization
      Bluetooth: Host: Fix failure handling with security level change
      Bluetooth: Host: Fix checking for sufficient encryption key size
      doc: Add skeleton for 1.14.1 release notes
      Bluetooth: Mesh: Fix matching for ""All Proxies"" group address

Jukka Rissanen (10):
      net: ipv6: Check sub-option length
      net: gptp: Avoid memcpy to same buffer
      net: socket: The socket flags need to use uintptr_t
      net: sockets: Store socket private data into its own variable
      net: socket: Init net_context when taken into use
      net: tcp: Cleanup context if connection is not established
      tests: net: tcp: Test connection cleanup after receiving SYN
      net: Add IPPROTO_RAW as it was missing
      net: socket: Set default protocol if proto == 0
      net: socket: Return 0 in recvfrom() if buffer size is 0

Lucas Peixoto (1):
      disk: fixing the sending of commands with r1 response

Peter A. Bigot (2):
      drivers/spi_nor: fix writes across page boundaries
      drivers/spi_nor: de-pessimize reads

Peter Bigot (4):
      subsys/testsuite: rearrange for standard use of extern ""C""
      lib/newlib: revert treatment of libc files as system includes
      tests: add C++ 17 standard library test
      kernel: reimplement k_uptime_get_32()

Piotr Zięcik (4):
      syscalls: Export _is_user_context() regardless of CONFIG_USERSPACE
      logging: Add basic userspace support
      samples: logging: Add usermode showcase
      CODEOWNERS: Add code owner for subsys/testsuite

Ravi kumar Veeramally (2):
      net: tcp: Accept connections only in LISTENING state
      samples: net: coap_client: Fix coverity issue

Vinayak Kariappa Chettimada (11):
      Bluetooth: controller: Fix Enc setup reset on rejection
      Bluetooth: controller: Fix DLE event on PHY update
      Bluetooth: controller: Fix to reject invalid enable command
      Bluetooth: controller: Fix cmd disallowed and collision disconnects
      Bluetooth: controller: Add data length procedure queueing
      Bluetooth: controller: Defer encryption setup if in conn update
      Bluetooth: controller: Fix control tx queue handling
      Bluetooth: controller: Fix ENC_REQ PDU retransmission
      Bluetooth: controller: Fix Re-encryption procedure
      Bluetooth: controller: Fix start encryption in progress check
      Bluetooth: controller: Fix data PDU leak during ctrl PDU defer

Wentong Wu (4):
      linker: add custom align size to reduce alignment memory wasting
      scripts: gen_relocate_app.py: add custom align size for relocation
      scripts: elf_helper.py: add analyze for DW_TAG_typedef
      scripts: elf_helper.py: fix stack declared K_THREAD_STACK_EXTERN
```",59771425
1519,False,False,2019-09-06T23:00:04Z,2019-09-06T23:53:16Z,"
We are pleased to announce the release of Zephyr RTOS version 2.0.0.

Major enhancements with this release include:

* The kernel now supports both 32- and 64-bit architectures.
* We added support for SOCKS5 proxy. SOCKS5 is an Internet protocol that
  exchanges network packets between a client and server through a proxy server.
* Introduced support for 6LoCAN, a 6Lo adaption layer for Controller Area
  Networks.
* We added support for :ref:`Point-to-Point Protocol (PPP) <ppp>`. PPP is a
  data link layer (layer 2) communications protocol used to establish a direct
  connection between two nodes.
* We added support for UpdateHub, an end-to-end solution for large scale
  over-the-air device updates.
* We added support for ARM Cortex-R Architecture (Experimental).

The following sections provide detailed lists of changes by component.

Security Vulnerability Related
******************************

The following security vulnerability (CVE) was addressed in this
release:

* Fixes CVE-2019-9506: The Bluetooth BR/EDR specification up to and
  including version 5.1 permits sufficiently low encryption key length
  and does not prevent an attacker from influencing the key length
  negotiation. This allows practical brute-force attacks (aka ""KNOB"")
  that can decrypt traffic and inject arbitrary ciphertext without the
  victim noticing.

Kernel
******

* New kernel API for per-thread disabling of Floating Point Services for
  ARC, ARM Cortex-M, and x86 architectures.
* New system call to set the clock frequency at runtime.
* Additional support for compatibility with 64-bit architectures.
* Userspace mutexes are now supported through the new k_futex primitive.
* Improvements to the slab allocator.
* Fixed the implementation of k_thread_name_set() with userspace enabled.
* Boosted the default tick rate for tickless kernels to improve the
  precision of timeouts.

Architectures
*************

* ARM:

  * Added initial support for ARM Cortex-R architecture (Experimental)
  * We enhanced the support for Floating Point Services in Cortex-M
    architecture, implementing and enabling lazy-stacking for FPU
    capable threads and fixing stack overflow detection for FPU
    capable supervisor threads
  * Added QEMU support for ARMv8-M Mainline architecture
  * Optimized the IRQ locking time in thread context switch
  * Fixed several critical bugs in User Mode implementation
  * Added test coverage for ARM-specific kernel features
  * Improved support for linking TrustZone Secure Entry functions into
    Non-Secure firmware

* ARC:

  * Added support for ARC HS architecture
  * Added SMP support for ARC HS architecture
  * Added support for ARC SecureShield based TEE (Experimental)
  * Fixed several critical bugs in interrupt and exception handling
  * Enhance the support for Floating Point Services

* POSIX:

  * Fixed race condition with terminated threads which had never been
    scheduled by kernel. On very loaded systems it could cause swap errors.

* x86:

  * Dropped support for the Intel Quark microcontroller family.
  * A new lightweight PCI implementation has been introduced which supports
    MSI and other features required for PCIe devices. The previous PCI
    implementation has been deprecated and will be removed in 2.1.

* RISC-V:

  * Added support for the SiFive HiFive1 Rev B development board.
  * Added support for LiteX VexRiscv soft core.
  * Added support for 64-bit RISC-V, renaming the architecture from ""riscv32""
    to ""riscv"".
  * Added 64-bit QEMU support.
  * Added DeviceTree bindings for RISC-V memory devices, CPU interrupt
    controllers, and platform-local interrupt controllers.

Boards & SoC Support
********************

* Added native_posix_64: A 64 bit variant of native_posix
* Added support for these ARC boards:

     * emsdp
     * hsdk
     * nsim for hs

* Added support for these ARM boards:

     * atsamr21_xpro
     * cc1352r1_launchxl
     * cc26x2r1_launchxl
     * holyiot_yj16019
     * lpcxpresso55s69
     * mec15xxevb_assy6853
     * mikroe_mini_m4_for_stm32
     * mimxrt1015_evk
     * mps2_an521
     * nrf51_pca10031
     * nrf52811_pca10056
     * nucleo_g071rb
     * nucleo_wb55rg
     * qemu_cortex_r5
     * stm32h747i_disco
     * stm32mp157c_dk2
     * twr_ke18f
     * v2m_musca_b1
     * 96b_avenger96
     * 96b_meerkat96
     * 96b_wistrio

* Added support for these RISC-V boards:

     * hifive1_revb
     * litex_vexriscv
     * qemu_riscv64

* Added support for the gpmrb x86 board

* Added support for these following shields:

     * frdm_cr20a
     * link_board_can
     * sparkfun_sara_r4
     * wnc_m14a2a
     * x_nucleo_iks01a3

* Removed support for these boards:

     * arduino_101
     * arduino_101_sss
     * curie_ble
     * galileo
     * quark_d2000_crb
     * quark_se_c1000_devboard
     * quark_se_c1000_ss_devboard
     * quark_se_c1000_ble
     * tinytile
     * x86_jailhouse

Drivers and Sensors
*******************

* ADC

  * Added API to support calibration
  * Enabled ADC on STM32WB
  * Removed Quark D2000 ADC driver
  * Added NXP ADC12 and SAM0 ADC drivers
  * Added ADC shell

* Audio

  * Added support for two microphones (stereo) in the mpxxdtyy driver

* CAN

  * Added support for canbus Ethernet translator
  * Added 6LoCAN implementation
  * Added MCP2515, NXP FlexCAN, and loopback drivers
  * Added CAN shell

* Clock Control

  * Added NXP Kinetis MCG, SCG, and PCC drivers
  * Added STM32H7, STM32L1X, and STM32WB support
  * Removed Quark SE driver

* Counter

  * Added optional flags to alarm configuration structure and extended set channel alarm flags
  * Added top_value setting configuration structure to API
  * Enabled counter for STM32WB
  * Added NXP GPT, ""CMOS"" RTC, SiLabs RTCC, and SAM0 drivers
  * Removed Quark D2000 support from QMSI driver

* Display

  * Added ST7789V based LCD driver
  * Renamed ssd1673 driver to ssd16xx
  * Added framebuffer driver with multiboot support
  * Added support for Seeed 2.8"" TFT touch shield v2.0

* DMA

  * Added API to retrieve runtime status
  * Added SAM0 DMAC driver
  * Removed Quark SE C1000 support from QMSI driver

* Entropy

  * Added TI CC13xx / CC26xx driver

* ESPI

  * Added Microchip XEC driver

* Ethernet

  * Added LiteEth driver

* Flash

  * Removed Quark SE C1000 driver
  * Removed support for Quark D2000 from QMSI driver
  * Added STM32G0XX and STM32WB support to STM32 driver
  * Added RV32M1 and native POSIX drivers

* GPIO

  * Added stm32f1x SWJ configuration
  * Removed Quark SE C1000 and D2000 support from DesignWare driver
  * Added support for STM32H7, STM32L1X, and STM32WB to STM32 driver
  * Added Microchip XEC and TI CC13x2 / CC26x2 drivers
  * Added HT16K33 LED driver
  * Added interrupt support to SAM0 driver

* Hardware Info

  * Added ESP32 and SAM0 drivers

* I2C

  * Added support for STM32MP1, STM32WB, and STM32L1X to STM32 driver
  * Added STM32F10X slave support
  * Added power management to nrf TWI and TWIM drivers
  * Added TI CC13xx / CC26xx, Microchip MEC, SAM0, and RV32M1 drivers
  * Rewrote DesignWare driver for PCI(e) support

* IEEE 802.15.4

  * Fixed KW41z fault and dBm mapping

* Interrupt Controller

  * Added initial support for ARC TCC
  * Added GIC400, LiteX, and SAM0 EIC drivers
  * Added support for STM32G0X, STM32H7, STM32WB, and STM32MP1 to STM32 driver
  * Removed MVIC driver

* IPM

  * Removed Quark SE driver
  * Added MHU and STM32 drivers

* LED

  * Added Holtek HT16K33 LED driver

* Modem

  * Introduced socket helper layer
  * Introduced command handler and UART interface driver layers
  * Introduced modem context helper driver
  * Added u-blox SARA-R4 modem driver

* Pinmux

  * Added SPI support to STM32MP1
  * Enabled ADC, PWM, I2C, and SPI pins on STM32WB
  * Added Microchip XEC and TI CC13x2 / CC26x2 drivers

* PWM

  * Added NXP PWM driver
  * Added support for STM32G0XX to STM32 driver

* Sensor

  * Added STTS751 temperature sensor driver
  * Added LSM6DSO and LPS22HH drivers
  * Renamed HDC1008 driver to ti_hdc and added support for 1050 version
  * Added LED current, proximity pulse length, ALS, and proximity gain configurations to APDS9960 driver
  * Reworked temperature and acceleration conversions, and added interrupt handling in ADXL362 driver
  * Added BME680 driver and AMS ENS210 drivers

* Serial

  * Added Xilinx ZynqMP PS, LiteUART, and TI CC12x2 / CC26x2 drivers
  * Added support for virtual UARTS over RTT channels
  * Added support for STM32H7 to STM32 driver
  * Removed support for Quark D2000 from QMSI driver
  * Enabled interrupts in LPC driver
  * Implemented ASYNC API in SAM0 driver
  * Added PCI(e) support to NS16550 driver

* SPI

  * Added support for STM32MP1X and STM32WB to STM32 driver
  * Removed support for Quark SE C1000 from DesignWare driver
  * Added TI CC13xx / CC26xx driver
  * Implemented ASYNC API in SAM0 driver

* Timer

  * Added Xilinx ZynqMP PS ttc driver
  * Added support for SMP to ARC V2 driver
  * Added MEC1501 32 KHZ, local APIC timer, and LiteX drivers
  * Replaced native POSIX system timer driver with tickless support
  * Removed default selection of SYSTICK timer for ARM platforms

* USB

  * Added NXP EHCI driver
  * Implemented missing API functions in SAM0 driver

* WiFi

  * Implemented TCP listen/accept and UDP support in eswifi driver

Networking
**********

* Added support for `SOCKS5 proxy <https://en.wikipedia.org/wiki/SOCKS>`__.
  See also `RFC1928 <https://tools.ietf.org/html/rfc1928>`__ for details.
* Added support for 6LoCAN, a 6Lo adaption layer for Controller Area Networks.
* Added support for :ref:`Point-to-Point Protocol (PPP) <ppp>`.
* Added support for UpdateHub, an end-to-end solution for large scale
  over-the-air update of devices.
  See `UpdateHub.io <https://updatehub.io/>`__ for details.
* Added support to automatically register network socket family.
* Added support for ``getsockname()`` function.
* Added SO_PRIORITY support to ``setsockopt()``
* Added support for VLAN tag stripping.
* Added IEEE 802.15.4 API for ACK configuration.
* Added dispatching support to SocketCAN sockets.
* Added user mode support to PTP clock API.
* Added user mode support to network interface address functions.
* Added AF_NET_MGMT socket address family support. This is for receiving network
  event information in user mode application.
* Added user mode support to ``net_addr_ntop()`` and ``net_addr_pton()``
* Added support for sending network management events when DNS server is added
  or deleted.
* Added LiteEth Ethernet driver.
* Added support for ``sendmsg()`` API.
* Added `civetweb <https://civetweb.github.io/civetweb/>`__ HTTP API support.
* Added LWM2M IPSO Accelerometer, Push Button, On/Off Switch and Buzzer object
  support.
* Added LWM2M Location and Connection Monitoring object support.
* Added network management L4 layer. The L4 management events are used
  when monitoring network connectivity.
* Allow net-mgmt API to pass information length to application.
* Removed network management L1 layer as it was never used.
* By default a network interface is set to UP when the device starts.
  If this is not desired, then it is possible to disable automatic start.
* Allow collecting network packet TX throughput times in the network stack.
  This information can be seen in net-shell.
* net-shell Ping command overhaul.
* Accept UDP packet with missing checksum.
* 6lo compression rework.
* Incoming connection handling refactoring.
* Network interface refactoring.
* IPv6 fragmentation fixes.
* TCP data length fixes if TCP options are present.
* SNTP client updates.
* Trickle timer re-init fixes.
* ``getaddrinfo()`` fixes.
* Fixes in DHCPv4, LWM2M, gPTP, and MQTT
* DNS fixes for non-compressed answers.
* mDNS and LLMNR resolver fixes.
* Ethernet ARP fixes.
* OpenThread updates and fixes.
* Network device driver fixes for:

     - Ethernet e1000
     - Ethernet enc28j60
     - Ethernet mcux
     - Ethernet stellaris
     - Ethernet gmac
     - Ethernet stm32
     - WiFi eswifi
     - IEEE 802.15.4 kw41z
     - IEEE 802.15.4 nrf5

Bluetooth
*********

* Host:

  * GATT: Added support for database hashes, Read Using Characteristic
    UUID, static services, disabling the dynamic database, and notifying
    and indicating by UUID
  * GATT: Simplified the bt_gatt_notify_cb() API
  * GATT: Added additional attributes to the Device Information Service
  * GATT: Several protocol and database fixes
  * Settings: Transitioned to new optimized settings model and support for custom backends
  * Completed support for directed advertising and Out-Of-Band (OOB) pairing
  * Added support for fine-grained control of security establishment, including
    forcing a pairing procedure in case of key loss
  * Switched to separate, dedicated pools for discardable events and number of
    completed packets events
  * Extended and improved the Bluetooth shell with several commands
  * BLE qualification up to the 5.1 specification
  * BLE Mesh: Several fixes and improvements

* BLE split software Controller:

  * The split software Controller is now the default
  * Added support for the Data Length Update procedure
  * Improved and documented the ticker packet scheduler for improved conflict resolution
  * Added support for out-of-tree user-defined commands and events,
    Zephyr Vendor Specific Commands, and user-defined protocols
  * Converted several control procedures to be queueable
  * Nordic: Decorrelated address generation from resolution
  * Nordic: Added support for Controller-based privacy, fast encryption
    setup, RSSI, low-latency ULL processing of messages, nRF52811 IC BLE
    radio, PA/LNA on Port 1 GPIO pins, and radio event abort
  * BLE qualification up to the 5.1 specification

* BLE legacy software Controller:

  * BLE qualification up to the 5.1 specification
  * Multiple control procedures fixes and improvements

Build and Infrastructure
************************

* Changed ARM Embedded toolchain to default to nano variant of newlib


Libraries / Subsystems
***********************

* File Systems: Added support for littlefs

HALs
****

* HALs are now moved out of the main tree as external modules and reside
  in their own standalone repositories.

Documentation
*************

* We've made many updates to component, subsystem, and process
  documentation bringing our documentation up-to-date with code changes,
  additions, and improvements, as well as new supported boards and
  samples.

Tests and Samples
*****************

* We have implemented additional tests and significantly expanded the
  amount of test cases in existing tests to increase code coverage.

Issue Related Items
*******************

These GitHub issues were addressed since the previous 1.14.0 tagged
release:

.. comment  List derived from GitHub Issue query: ...
   * #issuenumber` - issue title

* #18964 - [Coverity CID :203911]Memory - corruptions in /tests/bluetooth/uuid/src/main.c
* #18963 - [Coverity CID :203910]Memory - corruptions in /tests/bluetooth/uuid/src/main.c
* #18959 - [Coverity CID :203907]Parse warnings in /include/bluetooth/conn.h
* #18923 - (BLE) Dynamic TX Power Control
* #18906 - Problem on build when calling objcopy to generate isrList.bin
* #18865 - Fatal Usage Fault When Bluetooth And OpenThread Are Enabled On NRF52840 Multiprotocol Support
* #18828 - Bluetooth: controller: crash terminating link during encryption procedure
* #18821 - Documentation: parent vs child in DeviceTree nodes
* #18819 - Bluetooth: LL split assert upon disconnection
* #18814 - Module Request: LoRaMac-Node
* #18813 - fs: nvs: Cannot delete entries
* #18808 - Docs for gpmrb board incorrectly refer to up_squared board
* #18804 - Channel Selection Algorithm Modification In Zephyr
* #18802 - Bluetooth: UUID: Missing tests and confusing documentation
* #18799 - bt_uuid_create_le() and bt_uuid_create() have endianness issues, and only one of them is needed
* #18795 - FS:NVS: garbage collection when restart
* #18784 - Can not build link_board_can shield
* #18774 - (nRF51) NVS example doesn't work
* #18765 - LwM2M: DNS handling via offload socket API is broken
* #18760 - hello_world sample instructions don't work
* #18739 - k_uptime_get_32() does not behave as documented
* #18732 - net: mDNS name resolving issue between 2 Zephyr nodes
* #18726 - arc: should not rely on that ERET has a copy of ilink
* #18725 - arc: the IRM bit of SEC_STAT is not handled corrected
* #18724 - arc: interrupt stack is not  switched correctly
* #18717 - USB broken on disco l475 iot board
* #18705 - SMP fails to allocate buffer and pairing times out
* #18693 - POSIX: Some headers were missing from PR #16621
* #18687 - [Coverity CID :203623]Memory - illegal accesses in /tests/subsys/settings/fcb_init/src/settings_test_fcb_init.c
* #18686 - [Coverity CID :203622]Parse warnings in /opt/zephyr-sdk-0.10.3/nios2-zephyr-elf/nios2-zephyr-elf/include/c++/8.3.0/bits/refwrap.h
* #18685 - [Coverity CID :203621]Parse warnings in /opt/zephyr-sdk-0.10.3/nios2-zephyr-elf/nios2-zephyr-elf/include/c++/8.3.0/bits/refwrap.h
* #18684 - [Coverity CID :203620]Parse warnings in /opt/zephyr-sdk-0.10.3/nios2-zephyr-elf/nios2-zephyr-elf/include/c++/8.3.0/bits/refwrap.h
* #18683 - [Coverity CID :190988]Memory - illegal accesses in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/drivers/imx/fsl_elcdif.c
* #18682 - [Coverity CID :190984]Memory - illegal accesses in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/drivers/imx/fsl_elcdif.c
* #18681 - [Coverity CID :190979]Memory - illegal accesses in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/drivers/imx/fsl_elcdif.c
* #18680 - [Coverity CID :190959]Memory - illegal accesses in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/drivers/imx/fsl_elcdif.c
* #18679 - [Coverity CID :198643]Incorrect expression in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/MKE18F16/fsl_clock.c
* #18678 - [Coverity CID :198642]Incorrect expression in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/MKE18F16/fsl_clock.c
* #18677 - [Coverity CID :198641]Incorrect expression in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/MKE18F16/fsl_clock.c
* #18676 - [Coverity CID :190994]Incorrect expression in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/MK64F12/fsl_clock.c
* #18675 - [Coverity CID :190982]Incorrect expression in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/MK64F12/fsl_clock.c
* #18674 - [Coverity CID :190962]Incorrect expression in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/MK64F12/fsl_clock.c
* #18673 - [Coverity CID :190947]Incorrect expression in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/MK64F12/fsl_clock.c
* #18672 - [Coverity CID :198948]Control flow issues in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/LPC55S69/fsl_clock.c
* #18671 - [Coverity CID :198947]Integer handling issues in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/LPC55S69/fsl_clock.c
* #18670 - [Coverity CID :182600]Integer handling issues in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/devices/LPC54114/fsl_clock.c
* #18669 - [Coverity CID :158891]Memory - illegal accesses in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nxp/mcux/components/phyksz8081/fsl_phy.c
* #18668 - [Coverity CID :203544]Integer handling issues in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nordic/nrfx/drivers/src/nrfx_usbd.c
* #18667 - [Coverity CID :203513]Integer handling issues in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nordic/nrfx/drivers/src/nrfx_usbd.c
* #18666 - [Coverity CID :203506]Integer handling issues in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nordic/nrfx/drivers/src/nrfx_usbd.c
* #18665 - [Coverity CID :203436]Memory - illegal accesses in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/hal/nordic/nrfx/drivers/src/nrfx_usbd.c
* #18664 - [Coverity CID :203416]Uninitialized variables in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/fs/littlefs/lfs.c
* #18663 - [Coverity CID :203413]Null pointer dereferences in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/fs/littlefs/lfs.c
* #18662 - [Coverity CID :61908]Insecure data handling in /home/aasthagr/zephyrproject-external-coverity-new/zephyrproject/modules/crypto/mbedtls/library/ssl_tls.c
* #18658 - Bluetooth BR/EDR encryption key negotiation vulnerability
* #18654 - cc3220sf_launchxl fails tests/kernel/interrupt/arch.interrupt
* #18645 - Disconnect because of data packets during encryption procedure
* #18615 - sam e70 xplained failed to build hello world
* #18599 - tests/kernel/fifo/fifo_timeout fails on cc3220sf_launchxl
* #18598 - tests/net/trickle failed on multiple plartforms
* #18595 - USB CDC endless loop with BLE on NRF52
* #18593 - tests/arch/arm/arm_zero_latency_irqs fails on cc3220sf_launchxl
* #18592 - (nRF51) The RSSI signal does not rise above -44 dBm
* #18590 - tests/kernel/fatal/kernel.common.stack_sentinel fails on FRDM-KW41Z
* #18587 - tests/kernel/fifo/fifo_timeout/kernel.fifo.timeout fails to run on lpcxpresso54114_m4
* #18584 - BT LL assert on LL/CON/ADV/BV-04-C
* #18580 - Bluetooth: Security fail on initial pairing
* #18574 - Some platforms: “reel_board”, “frdm_k64f” and “sam_e70_xplained”  are be built failure
* #18572 - Bluetooth: GATT: Unable to indicate by UUID
* #18563 - log_strdup missing error messages seen when running wifi sample
* #18547 - Bluetooth: GATT: Fix using variable size storage for CCC
* #18546 - Hard Fault when connecting to BLE device
* #18524 - No disconnection event during ""heavy"" indication stream
* #18522 - BLE: Mesh: When transport send seg_msg to LPN
* #18521 - BLE: Mesh: when friend send msg to LPN
* #18508 - tests/net/trickle failed on frdm_k64f board
* #18476 - Custom module with west
* #18462 - potential buffer overrun in logging infrastructure
* #18461 - [Coverity CID :203487]Parse warnings in /usr/lib/gcc/x86_64-redhat-linux/8/include/stdint-gcc.h
* #18460 - [Coverity CID :203527]Parse warnings in /usr/include/unistd.h
* #18459 - [Coverity CID :203509]Null pointer dereferences in /tests/subsys/usb/desc_sections/src/desc_sections.c
* #18458 - [Coverity CID :203422]Memory - illegal accesses in /tests/subsys/fs/littlefs/src/testfs_util.c
* #18457 - [Coverity CID :203419]Security best practices violations in /tests/net/traffic_class/src/main.c
* #18456 - [Coverity CID :203401]Security best practices violations in /tests/net/traffic_class/src/main.c
* #18455 - [Coverity CID :203490]Error handling issues in /tests/net/socket/net_mgmt/src/main.c
* #18454 - [Coverity CID :203499]Null pointer dereferences in /tests/net/icmpv6/src/main.c
* #18453 - [Coverity CID :203480]Null pointer dereferences in /tests/net/context/src/main.c
* #18446 - [Coverity CID :203532]Incorrect expression in /tests/kernel/sched/schedule_api/src/user_api.c
* #18445 - [Coverity CID :203507]Error handling issues in /tests/kernel/mutex/sys_mutex/src/main.c
* #18444 - [Coverity CID :203516]Memory - corruptions in /tests/kernel/mem_protect/userspace/src/main.c
* #18443 - [Coverity CID :203454]Error handling issues in /tests/kernel/mem_protect/sys_sem/src/main.c
* #18442 - [Coverity CID :203465]Memory - corruptions in /tests/kernel/mem_protect/protection/src/main.c
* #18439 - [Coverity CID :203437]Incorrect expression in /tests/kernel/fp_sharing/float_disable/src/k_float_disable.c
* #18438 - [Coverity CID :203407]Incorrect expression in /tests/kernel/fp_sharing/float_disable/src/k_float_disable.c
* #18437 - [Coverity CID :203478]Program hangs in /tests/kernel/common/src/sflist.c
* #18436 - [Coverity CID :203424]Control flow issues in /tests/kernel/common/src/sflist.c
* #18434 - [Coverity CID :203486]Memory - corruptions in /tests/bluetooth/uuid/src/main.c
* #18433 - [Coverity CID :203431]Memory - corruptions in /tests/bluetooth/uuid/src/main.c
* #18432 - [Coverity CID :203502]Error handling issues in /tests/bluetooth/tester/src/gap.c
* #18431 - [Coverity CID :203391]Null pointer dereferences in /tests/bluetooth/gatt/src/main.c
* #18430 - [Coverity CID :203540]Incorrect expression in /tests/arch/arm/arm_zero_latency_irqs/src/arm_zero_latency_irqs.c
* #18429 - [Coverity CID :203525]Incorrect expression in /tests/arch/arm/arm_thread_swap/src/arm_thread_arch.c
* #18428 - [Coverity CID :203479]Incorrect expression in /tests/arch/arm/arm_thread_swap/src/arm_thread_arch.c
* #18427 - [Coverity CID :203392]Incorrect expression in /tests/arch/arm/arm_thread_swap/src/arm_thread_arch.c
* #18426 - [Coverity CID :203455]Incorrect expression in /tests/arch/arm/arm_ramfunc/src/arm_ramfunc.c
* #18424 - [Coverity CID :203489]Memory - corruptions in /tests/application_development/gen_inc_file/src/main.c
* #18423 - [Coverity CID :203473]Null pointer dereferences in /subsys/usb/usb_descriptor.c
* #18421 - [Coverity CID :203504]Uninitialized variables in /subsys/net/lib/sockets/sockets_net_mgmt.c
* #18420 - [Coverity CID :203468]Control flow issues in /subsys/net/lib/sockets/sockets_net_mgmt.c
* #18419 - [Coverity CID :203397]Control flow issues in /subsys/net/lib/sockets/sockets_net_mgmt.c
* #18418 - [Coverity CID :203445]Error handling issues in /subsys/net/lib/sockets/getnameinfo.c
* #18417 - [Coverity CID :203501]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_timer.c
* #18416 - [Coverity CID :203475]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_timer.c
* #18415 - [Coverity CID :203420]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_timer.c
* #18414 - [Coverity CID :203496]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_push_button.c
* #18413 - [Coverity CID :203488]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_push_button.c
* #18412 - [Coverity CID :203482]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_push_button.c
* #18411 - [Coverity CID :203450]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_onoff_switch.c
* #18410 - [Coverity CID :203448]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_onoff_switch.c
* #18409 - [Coverity CID :203427]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_onoff_switch.c
* #18408 - [Coverity CID :203533]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_light_control.c
* #18407 - [Coverity CID :203519]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_light_control.c
* #18406 - [Coverity CID :203511]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_buzzer.c
* #18405 - [Coverity CID :203426]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_buzzer.c
* #18404 - [Coverity CID :203414]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_buzzer.c
* #18403 - [Coverity CID :203539]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_accelerometer.c
* #18402 - [Coverity CID :203530]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_accelerometer.c
* #18401 - [Coverity CID :203438]Memory - corruptions in /subsys/net/lib/lwm2m/ipso_accelerometer.c
* #18400 - [Coverity CID :203483]Control flow issues in /subsys/net/lib/conn_mgr/events_handler.c
* #18399 - [Coverity CID :203457]Control flow issues in /subsys/net/l2/ppp/lcp.c
* #18398 - [Coverity CID :203514]Control flow issues in /subsys/net/l2/ppp/ipv6cp.c
* #18397 - [Coverity CID :203512]Memory - corruptions in /subsys/net/l2/ppp/ipv6cp.c
* #18396 - [Coverity CID :203435]Error handling issues in /subsys/net/l2/ppp/fsm.c
* #18395 - [Coverity CID :203471]Memory - corruptions in /subsys/net/l2/ethernet/gptp/gptp_mi.c
* #18394 - [Coverity CID :203464]Memory - corruptions in /subsys/net/l2/ethernet/gptp/gptp_mi.c
* #18393 - [Coverity CID :203541]Integer handling issues in /subsys/net/ip/6lo.c
* #18392 - [Coverity CID :203494]Integer handling issues in /subsys/fs/littlefs_fs.c
* #18391 - [Coverity CID :203403]Memory - corruptions in /subsys/disk/disk_access_usdhc.c
* #18390 - [Coverity CID :203441]Null pointer dereferences in /subsys/bluetooth/mesh/transport.c
* #18389 - [Coverity CID :203396]Null pointer dereferences in /subsys/bluetooth/mesh/access.c
* #18388 - [Coverity CID :203545]Memory - corruptions in /subsys/bluetooth/host/smp.c
* #18387 - [Coverity CID :203536]Memory - corruptions in /subsys/bluetooth/host/smp.c
* #18385 - [Coverity CID :203534]Memory - corruptions in /subsys/bluetooth/host/hci_core.c
* #18384 - [Coverity CID :203495]Control flow issues in /subsys/bluetooth/host/gatt.c
* #18383 - [Coverity CID :203447]Memory - corruptions in /subsys/bluetooth/host/att.c
* #18382 - [Coverity CID :203524]Incorrect expression in /subsys/bluetooth/controller/ticker/ticker.c
* #18381 - [Coverity CID :203393]Control flow issues in /subsys/bluetooth/controller/ll_sw/ull_conn.c
* #18380 - [Coverity CID :203461]Null pointer dereferences in /subsys/bluetooth/controller/ll_sw/ull.c
* #18379 - [Coverity CID :203493]Control flow issues in /soc/arm/st_stm32/stm32h7/soc_m7.c
* #18377 - [Coverity CID :203535]Error handling issues in /samples/net/sockets/civetweb/src/main.c
* #18376 - [Coverity CID :203462]Error handling issues in /samples/net/sockets/civetweb/src/main.c
* #18375 - [Coverity CID :203440]Null pointer dereferences in /samples/net/nats/src/main.c
* #18374 - [Coverity CID :203523]Error handling issues in /samples/drivers/counter/alarm/src/main.c
* #18372 - [Coverity CID :203543]Memory - illegal accesses in /samples/bluetooth/eddystone/src/main.c
* #18371 - [Coverity CID :203542]Error handling issues in /lib/posix/pthread.c
* #18370 - [Coverity CID :203469]Memory - corruptions in /drivers/wifi/eswifi/eswifi_core.c
* #18369 - [Coverity CID :203425]Memory - corruptions in /drivers/wifi/eswifi/eswifi_core.c
* #18368 - [Coverity CID :203411]Memory - corruptions in /drivers/wifi/eswifi/eswifi_core.c
* #18367 - [Coverity CID :203409]Memory - corruptions in /drivers/wifi/eswifi/eswifi_core.c
* #18366 - [Coverity CID :203452]Control flow issues in /drivers/timer/xlnx_psttc_timer.c
* #18365 - [Coverity CID :203434]Control flow issues in /drivers/timer/xlnx_psttc_timer.c
* #18364 - [Coverity CID :203467]Memory - corruptions in /drivers/sensor/lis2dh/lis2dh_trigger.c
* #18363 - [Coverity CID :203492]Memory - corruptions in /drivers/net/ppp.c
* #18362 - [Coverity CID :203412]Control flow issues in /drivers/net/ppp.c
* #18361 - [Coverity CID :203515]Uninitialized variables in /drivers/flash/flash_stm32l4x.c
* #18360 - [Coverity CID :203531]Memory - corruptions in /drivers/espi/espi_mchp_xec.c
* #18359 - [Coverity CID :203521]Memory - illegal accesses in /drivers/espi/espi_mchp_xec.c
* #18358 - [Coverity CID :203497]Memory - corruptions in /drivers/espi/espi_mchp_xec.c
* #18357 - [Coverity CID :203485]Memory - illegal accesses in /drivers/espi/espi_mchp_xec.c
* #18356 - [Coverity CID :203430]Integer handling issues in /drivers/espi/espi_mchp_xec.c
* #18355 - [Coverity CID :203466]Memory - illegal accesses in /drivers/can/can_mcux_flexcan.c
* #18354 - [Coverity CID :203449]Memory - illegal accesses in /boards/posix/native_posix/cmdline_common.c
* #18353 - [Coverity CID :203522]Null pointer dereferences in /arch/arm/core/cortex_m/fault.c
* #18352 - devicetree: support multiple values in io-channels
* #18334 - DNS resolution is broken for some addresses in master/2.0-pre
* #18326 - Bluetooth: Mesh: LPN: Remove msg from cache on rejection Enhancement
* #18320 - tests/drivers/can/api/peripheral.can fail on FRDM-K64F
* #18306 - Unable to reconnect paired devices with controller privacy disabled (host privacy enabled)
* #18301 - menuconfig target can corrupt build configuration
* #18298 - Unable to build mesh-demo for BBC micro:bit
* #18292 - tests/net/lib/dns_addremove failed on frdm_k64f board.
* #18284 - tests/kernel/fp_sharing/float_disable and tests/kernel/mutex/mutex_api and tests/kernel/sleep  fails on twr_ke18f
* #18283 - tests/crypto/tinycrypt_hmac_prng and tests/crypto/mbedtls  and tests/posix/fs  build failure on mimxrt1015_evk
* #18281 - tests/kernel/mem_protect/protection fails on LPC54114_m4
* #18272 - xtensa ASM2 has no support for dynamic interrupts
* #18269 - Documentation improvement for macOS
* #18263 - flash sector erase fails on stm32f412
* #18261 - CONFIG_TIMESLICING=n breaks kernel
* #18258 - sys_get_be64() is missing from sys/byteorder.h
* #18253 - Network samples echo_client doesn't work if only IPv4 enabled.
* #18246 - Build failures with current tree
* #18238 - drivers/modem/modem_socket: modem_socket_put() sock_fd parameter not handled correctly
* #18232 - drivers: can: mcux: TX callback and can_detach don't work propperly
* #18231 - MCUBoot not cleaning up properly before booting Zephyr?
* #18228 - stm32h747i_disco: Fix SYS_CLOCK_TICKS_PER_SEC
* #18212 - README file missing for civetweb sample
* #18205 - tests/net/socket/udp fails when code coverage is enabled on qemu_x86
* #18202 - Disable Duplicate scan, no longer available
* #18201 - bug: west flash with --hex-file param used to work w/o path specified
* #18198 - SDK 0.10.2 rv32m1_vega samples/subsys/logging/logger build fails
* #18194 - [zephyr 1.14][MESH/NODE/CFG/HBP/BV-05-C] Zephyr does not send Heartbeat message on friendship termination
* #18188 - [zephyr 1.14] Re-enabling CCC gets broken when used along with Robust Caching
* #18183 - [zephyr 1.14][GATT/SR/GAS/BV-07-C] GATT Server does not inform change-unaware client about DB changes
* #18181 - Some platforms(e.g. sam_e70_xplained) will be flashed failure if the platforms have not generated HEX file although they are built successfully.
* #18178 - BLE Mesh When Provisioning Use Input OOB Method
* #18171 - gen_defines creates identical labels for multicell pwms definition
* #18155 - i2c_ll_stm32_v1: I2C_CR1:STOP is not cleared
* #18154 - Qemu: mps2+: missing documentation
* #18150 - [zephyr 1.14] Host does not change the RPA
* #18141 - arc: the caculation of exception stack is wrong
* #18140 - xtensa passes NULL esf on fatal error
* #18132 - getting_started should indicate upgrade rather than just install west
* #18131 - devicetree should check input against declared type
* #18092 - Assert in BT controller on RPA timeout
* #18090 - [zephyr 1.14][MESH/NODE/FRND/FN/BV-08-C] Mesh Friend queues more messages than indicates it's Friend Cache
* #18080 - LWM2M bootstrap issue
* #18059 - k_busy_wait passed milliseconds instead of microseconds
* #18052 - z_fatal_error missing log_strdup
* #18048 - [zephyr 1.14] Zephyr with privacy does not disconnect device with unresolvable RPA
* #18042 - Only corporate members can join the slack channel
* #18034 - It's impossible to build Zephyr via cmake/make with west 0.6.0 installed
* #18029 - why kconfiglib.py doesn't throw error for file drivers/serial/Kconfig.nrfx
* #18021 - Socket vtable can access null pointer callback function
* #18019 - BT scan via shell fatal error
* #18013 - BLE Mesh On Net Buffer free issue
* #18011 - arc:  the offset generation of accl_regs is wrong
* #18009 - Dead link in documentation
* #18005 - BLE Mesh When Friend Clear Procedure Timeout
* #18002 - Flash using open source stlink, instead of SEGGER jlink?
* #17997 - fix extern ""C"" use throughout Zephyr
* #17996 - BUILD_ASSERT not active in three of five shippable platforms
* #17990 - BLE Mesh When IV update test procedure
* #17979 - Security level cannot be elevated after re-connection with privacy
* #17977 - BLE Mesh When IV Update Procedure
* #17971 - [zephyr 1.14] Unable to register GATT service that was unregistered before
* #17967 - drivers/pwm/pwm_api test failed on frdm_k64f board.
* #17965 - kernel/sleep/ test failed on reel_board.
* #17962 - BLE Mesh Recommended memory allocation due to who is assigned who releases the strategy
* #17956 - Is POSIX I/O supported on peripheral?
* #17951 - RFC: update FS API for readdir consistency
* #17948 - Bluetooth: privacy: Reconnection issue
* #17944 - [zephyr 1.14]  LE Enhanced Connection Complete indicates Resolved Public once connected to Public peer address
* #17936 - Bluetooth: Mesh: The canceled buffer is not free, causing a memory leak
* #17932 - BLE Mesh When Friend Send Seg Message To LPN
* #17926 - CAN | nrf52 | device tree error: zephyrproject/zephyr/dts/bindings/can/microchip,mcp2515.yaml (in 'reg'): 'category' from !included file overwritten ('required' replaced with 'optional')
* #17923 - SPI1 on nrf52_pca10040 is dead by default
* #17922 - Driver: modem helper should make it easier to implement a modem
* #17920 - Bluetooth: Security problem
* #17907 - BLE Mesh when resend use GATT bearer
* #17899 - tests/kernel/mem_protect/stackprot/kernel.memory_protection fails on nsim_em
* #17897 - k_busy_wait not working when using 32KHz timer driver
* #17891 - fs/nvs: nvs_init can hang if no nvs_ate available
* #17882 - [zephyr 1.14]  Database Out of Sync error is not returned as expected
* #17880 - Unable to re-connect to privacy enabled peer when using stack generated Identity
* #17876 - BME680 sensor sample not building
* #17870 - Incorrect report received lenght and offset in async API
* #17869 - Unlocking nested k_sched_lock() cause forced preemption
* #17864 - cpp_synchronization sample not working on nucleo_l476rg
* #17861 - Tester application lacks BTP Discover All Primary Services handler
* #17857 - GATT: Incorrect byte order for GATT database hash
* #17853 - kernel panic in tests/kernel/sched/schedule_api
* #17851 - riscv/m2gl025: timer tests broken
* #17843 - Bluetooth: controller: v1.14.x release conformance test failures
* #17821 - Mesh Bug on access.c
* #17820 - Mesh  bug report In access.c
* #17816 - LVGL V5.3 build error if CONFIG_LVGL_COLOR_16_SWAP=y
* #17812 - pthread_cond_timedwait interprets timeout wrong
* #17809 - Bluetooth Mesh message cached too early when LPN
* #17802 - [zephyr 1.14] Address type 0x02 is used by LE Create Connection in device privacy mode
* #17800 - Bluetooth: GATT: Write Without Reponse to invalid handle asserts
* #17794 - Timeutil_api test fails with sanitycheck on iotdk board.
* #17790 - MEC1501 configure warnings in eSPI (dts)
* #17789 - Bluetooth: host: conn.c missing parameter copy
* #17787 - openocd unable to flash hello_world to cc26x2r1_launchxl
* #17784 - failing network tests with code coverage enabled in qemu_x86 not failing when run with gdb
* #17783 - network tests failing with code coverage enabled in qemu_x86 (coverage.c)
* #17782 - network tests failing with 'unexpected eof' with code coverage enabled in qemu_x86 (TSS)
* #17778 - Microchip XEC rtos Timer breaks gpios and k_sleep?
* #17772 - Compilation error of soc/arm/nxp_imx/rt/soc.c
* #17764 - Broken link to latest development version of docs
* #17751 - build is broken for mec15xxevb_assy6853
* #17738 - STATIC_ASSERT no longer defined when CONFIG_NEWLIB_LIBC is enabled
* #17732 - cannot use bt_conn_security in connected callback
* #17727 - how to make zephyr as a ble mesh provisioner to other BLE based board having ble mesh
* #17726 - How to make Zephyr as a ble mesh provisioner ?
* #17723 - Advertiser never clears state flags
* #17715 - Missing 'reg-names' string in riscv32-litex-vexriscv.dtsi
* #17703 - Add prop 'clock-frequency' to STM32  targets
* #17697 - usb_dc_nrfx driver gets stuck after USB3CV HID Tests are performed on hid sample
* #17692 - Proper way for joining a multicast group (NRF52840/OpenThread)
* #17690 - samples/subsys/shell/fs does not work?
* #17671 - ADC not supported by nrf52840_pca10059 DTS file
* #17665 - Missing 'label' on most nodes with 'compatible = ""pwm-leds""'
* #17664 - Missing 'clocks' on most nodes with 'compatible = ""nxp,kinetis-usbd""'
* #17663 - Missing 'label' on most nodes with 'compatible = ""fixed-clock""'
* #17662 - Missing 'label' on nodes with 'compatible = ""jedec,spi-nor""'
* #17657 - subsis/disk/disk_access_spi_sdhc: response data eaten by idle byte consumption
* #17650 - devicetree: missing preferred instance presence macro
* #17635 - UnicodeDecodeError is raised while executing west build
* #17630 - efr32mg_sltb004a tick clock error
* #17613 - POSIX arch: occasional failures of tests/kernel/sched/schedule_api on CI
* #17608 - NMP timeout when uploading image with mcumgr over BLE under Linux
* #17600 - Enable Mesh Friend support in Bluetooth tester application
* #17595 - two userspace tests fail if stack canaries are enabled in board configuration
* #17591 - ARM: z_arch_except() is too permissive in user mode
* #17590 - ARC: unable to induce kernel_oops or stack check fail errors from user mode
* #17586 - stack canary storage area should be read-only to user mode?
* #17584 - k_mutex is not SMP-safe
* #17581 - linker script packing failure with subsys/fb fonts and native_posix_64
* #17564 - Missing 'stdlib.h' include when C++ standard library is used.
* #17559 - Assertion failed: zephyr toolchain variant invalid
* #17557 - samples/net/wifi fails to build on cc3220sf_launchxl
* #17555 - CONFIG_LOG doesn't work on x86_64 due to no working backends
* #17554 - pyocd flash does not support the -b option for board ID so that the sanitycheck script can’t specified the board ID to flash when the host connected with multiple boards.
* #17550 - SimpleLink WiFi host driver should revert back to using static memory model
* #17547 - incorrect documentation for debugging nsim_em / nsim_sem
* #17543 - dtc version 1.4.5 with ubuntu 18.04 and zephyr sdk-0.10.1
* #17534 - Race condition in GATT API.
* #17532 - List of missing device tree properties with 'category: required' in the binding for the node
* #17525 - L2CAP: On insufficient authentication error received, Zephyr does unauthenticated pairing
* #17511 - _bt_br_channels_area  section missing in sanitycheck whitelist
* #17508 - RFC: Change/deprecation in display API
* #17507 - system timer drivers using the ""new"" API should not be configured with CONFIG_TICKLESS_KERNEL
* #17497 - Bluetooth: Mesh: How to Write provision and configure data to flash?
* #17488 - CDC_ACM USB on nRF device fails after suspend
* #17487 - v1.14-branch: SDK 0.10.1 support?
* #17486 - nRF52: SPIM: Errata work-around status?
* #17485 - sanitycheck: Over-zealous checking for binary sections
* #17483 - mec15xxevb_assy6853 board documentation is erroneous
* #17480 - holyiot_yj16019 cannot compile IEEE 802.15.4 L2
* #17478 - net/buf test fails for qemu_x86_64
* #17475 - [RTT] compile error when RTT console enabled
* #17463 - Bluetooth: API limits usage of MITM flags in Pairing Request
* #17460 - sample: gui/lvgl
* #17450 - net: IPv6/UDP datagram with unspecified addr and zero hop limit causes Zephyr to quit
* #17439 - sanitycheck: nrf52840-pca10056 (dev kit) picks up sample/drivers items which will fail due to missing HW
* #17427 - net: IPv4/UDP datagram with zero src addr and TTL causes Zephyr to segfault
* #17419 - arch:arc: remove the extra vairables used in irq and exception handling
* #17415 - Settings Module - settings_line_val_read() returning -EINVAL instead of 0 for deleted setting entries
* #17410 - k_work should have a user_data field
* #17408 - LwM2M: engine doesn't support offloaded TLS stack
* #17401 - LwM2M: requires that CONFIG_NET_IPV* be enabled (can't use 100% offloaded IP stack)
* #17399 - LwM2M: Can't use an alternate mbedtls implementation
* #17381 - DTS compatible property processing assumes specific driver exists
* #17379 - Wrong hex file generated for MCUboot
* #17378 - samples: net: echo-server: no return packet
* #17376 - device tree diagnostic failure in enum
* #17368 - Time Slicing cause system sleep short time
* #17366 - Regression: sanitycheck coverage generation defaults will error out for POSIX arch targets
* #17365 - Documentation: sanitycheck coverage generation instructions lead to errors and no coverage report for POSIX boards
* #17363 - SPI driver does not reset master mode fault on STM32
* #17353 - Configuring with POSIX_API disables NET_SOCKETS_POSIX_NAMES
* #17342 - CODEOWNERS is broken (III)
* #17340 - Bluetooth Mesh: Unable to receive messages when RPL is full.
* #17338 - kernel objects address check in elf_helper.py
* #17313 - drivers: usb_dc_mcux_ehci does not compile
* #17307 - device tree bindings disallow strings that begin with integers
* #17294 - DB corruption when adding/removing service
* #17288 - Bluetooth: controller: Fix handling of L2CAP start frame with zero PDU length
* #17284 - unrecognized binary sections: ['_settings_handlers_area']
* #17281 - sanitycheck error on mimxrt1050_evk samples/gui/lvgl/sample.gui.lvgl with no network connection
* #17280 - How to use UART1 for nrf52_pca10040
* #17277 - no code coverage for k_float_disable() in user mode
* #17266 - CDC_ACM USB not recognized by windows as serial port
* #17262 - insufficient code coverage for lib/os/base64.c
* #17251 - w25q: erase operations must be erase-size aligned
* #17250 - After first GC operation the 1st sector had become scratch and the 2nd sector had became write sector.
* #17231 - Posix filesystem wrapper leaks internal FS desc structures
* #17226 - [Coverity CID :61894]Security best practices violations in /home/aasthagr/zephyrproject/modules/crypto/mbedtls/library/rsa.c
* #17225 - [Coverity CID :61905]Insecure data handling in /home/aasthagr/zephyrproject/modules/crypto/mbedtls/library/ssl_cli.c
* #17224 - [Coverity CID :78542]Null pointer dereferences in /home/aasthagr/zephyrproject/modules/crypto/mbedtls/library/rsa.c
* #17223 - [Coverity CID :149311]Control flow issues in /home/aasthagr/zephyrproject/modules/crypto/mbedtls/library/cipher.c
* #17222 - [Coverity CID :173947]Uninitialized variables in /home/aasthagr/zephyrproject/modules/lib/mcumgr/cborattr/src/cborattr.c
* #17221 - [Coverity CID :173979]Control flow issues in /home/aasthagr/zephyrproject/modules/lib/tinycbor/src/cborparser.c
* #17220 - [Coverity CID :173986]Control flow issues in /home/aasthagr/zephyrproject/modules/lib/mcumgr/cborattr/src/cborattr.c
* #17219 - [Coverity CID :174014]Incorrect expression in /home/aasthagr/zephyrproject/modules/lib/tinycbor/src/cborparser.c
* #17218 - [Coverity CID :186031]Control flow issues in /home/aasthagr/zephyrproject/modules/lib/mcumgr/cmd/fs_mgmt/src/fs_mgmt.c
* #17217 - [Coverity CID :186038]Control flow issues in /home/aasthagr/zephyrproject/modules/lib/mcumgr/cmd/img_mgmt/src/img_mgmt.c
* #17216 - [Coverity CID :186052]Control flow issues in /home/aasthagr/zephyrproject/modules/lib/mcumgr/cmd/fs_mgmt/src/fs_mgmt.c
* #17215 - [Coverity CID :186054]Control flow issues in /home/aasthagr/zephyrproject/modules/lib/mcumgr/cmd/img_mgmt/src/img_mgmt_state.c
* #17214 - [Coverity CID :186060]Control flow issues in /home/aasthagr/zephyrproject/modules/lib/mcumgr/cmd/img_mgmt/src/img_mgmt_state.c
* #17213 - [Coverity CID :186188]Memory - illegal accesses in /home/aasthagr/zephyrproject/modules/lib/open-amp/open-amp/lib/rpmsg/rpmsg.c
* #17212 - [Coverity CID :187076]Control flow issues in /home/aasthagr/zephyrproject/modules/hal/silabs/gecko/emlib/src/em_cmu.c
* #17211 - [Coverity CID :188746]Memory - illegal accesses in /home/aasthagr/zephyrproject/modules/hal/cypress/PDL/3.1.0/drivers/source/cy_syslib.c
* #17210 - [Coverity CID :190643]Error handling issues in /home/aasthagr/zephyrproject/modules/debug/segger/systemview/SEGGER_SYSVIEW.c
* #17209 - [Coverity CID :190927]Uninitialized variables in /home/aasthagr/zephyrproject/modules/lib/open-amp/open-amp/lib/remoteproc/remoteproc.c
* #17208 - [Coverity CID :190941]Insecure data handling in /home/aasthagr/zephyrproject/modules/crypto/mbedtls/library/ssl_tls.c
* #17207 - [Coverity CID :190963]Code maintainability issues in /home/aasthagr/zephyrproject/modules/fs/nffs/src/nffs_restore.c
* #17206 - [Coverity CID :190975]Memory - illegal accesses in /home/aasthagr/zephyrproject/modules/lib/open-amp/open-amp/lib/include/openamp/rpmsg.h
* #17205 - [Coverity CID :190999]Insecure data handling in /home/aasthagr/zephyrproject/modules/lib/open-amp/open-amp/lib/rpmsg/rpmsg_virtio.c
* #17204 - [Coverity CID :191000]Memory - corruptions in /home/aasthagr/zephyrproject/modules/lib/open-amp/open-amp/lib/remoteproc/remoteproc.c
* #17203 - [Coverity CID :198951]Code maintainability issues in /home/aasthagr/zephyrproject/modules/debug/segger/systemview/SEGGER_SYSVIEW.c
* #17202 - [Coverity CID :199436]Uninitialized variables in /subsys/net/lib/sockets/sockets.c
* #17201 - [Coverity CID :199437]Null pointer dereferences in /tests/net/ip-addr/src/main.c
* #17200 - [Coverity CID :199438]Memory - illegal accesses in /drivers/interrupt_controller/exti_stm32.c
* #17190 - net-mgmt should pass info element size to callback
* #17188 - k_uptime_delta returns wrong times
* #17182 - ""tests/subsys/usb/device/"" fails on reel_board.
* #17177 - ARM: userspace/test_bad_syscall fails on ARMv8-M
* #17176 - deprecated counter_set_alarm is referenced in documentation
* #17172 - insufficient code coverage for lib/os/mempool.c
* #17170 - x86_64 crash with spinning child thread
* #17167 - ARC crash with spinning user thread
* #17166 - arch/x86: eliminate support for CONFIG_REALMODE
* #17158 - Bluetooth: Update PICS for latest PTS 7.4.1
* #17147 - UARTE device has no API when run on nrf52810
* #17114 - drivers: usb_dc_stm32 broken after west update
* #17111 - nucleo_f030r8 build error
* #17095 - Building with Xtensa toolchain fails
* #17092 - Bluetooth: GAP/IDLE/NAMP/BV-01-C requires Read by UUID
* #17065 - Misspelled CONFIG use in is_rodata() for CONFIG_RISCV32
* #17063 - tests/kernel/tickless/tickless_concept (qemu_x86) fails even outside of CI
* #17057 - Bluetooth: Mesh: Implementation doesn't conform to latest errata and 1.0.1 version
* #17055 - net: Incorrect data length after the connection is established
* #17053 - Bluetooth Mesh: Periodic Publishing
* #17043 - compile ""hello-world"" sample for esp32 board error
* #17041 - [1.14] Bluetooth: Mesh: RPL handling is not in line with the spec
* #17038 - code relocation generating different memory layout cause user mode not working
* #17037 - MQTT with TLS support over SOCKS
* #17031 - Compiler warnings in settings module in Zephyr 1.14
* #17017 - #16827 Breaks Ethernet on FRDM-K64F
* #17015 - #15910 Breaks Ethernet on STM32F7
* #17013 - Bluetooth: Add error reason to pairing failed callbacks
* #17007 - USB mass demo format fails on frdm_k64f
* #16989 - Errors when building application in Eclipse
* #16971 - DFU supported for hci_uart sample ?
* #16946 - characteristic value handle vs characteristic handle
* #16944 - Insufficient test coverage for lib/os/json.c
* #16943 - Missing test coverage for lib/os/crc*.c
* #16934 - drivers: flash: stm32l4: Erase wait time is not enough
* #16931 - logging: Assertion when in panic mode
* #16926 - NXP LPC54102（LPC54114）: question about dual core(M4 and M0) running on flash
* #16924 - Add DNS server added/removed events to net_mgmt
* #16915 - stack_sentinel: rare ASSERTION FAIL [!(z_arch_curr_cpu()->nested != 0U)] @ ZEPHYR_BASE/kernel/thread.c:429  Threads may not be created in ISRs
* #16911 - tests/kernel/sched/schedule_api crash on qemu_x86_64 with SCHED_MULTIQ enabled
* #16907 - native_posix build fails with X86_64 on macOS
* #16901 - No test coverage for CONFIG_ZERO_LATENCY_IRQS
* #16899 - fs/nvs: might loop-up if storage was not erased before first run
* #16898 - bluetooth stack change affects timer behavior
* #16894 - ARM: alignment problems in libc/newlib
* #16893 - Bluetooth: Multiple local IDs, privacy problem
* #16887 - ARM: threads' privilege stack alignment is not optimal
* #16872 - Bluetooth: LL: Peripheral crashes after a while with multiple Centrals
* #16864 - Bluetooth: Mesh: Rx buffer exhaustion causes deadlock
* #16862 - arc: -mfpu=fpuda_all is not set when CONFIG_FLOAT is configured
* #16861 - nRF52: UARTE: Data corruption right after resuming device
* #16830 - Bluetooth: controller: Follow up on ticker conflict resolution
* #16823 - k_busy_wait() on nRF5x boards isn't waiting long enough
* #16803 - Deferred bt_conn_tx causes sysworkq deadlock
* #16799 - Bluetooth: L2CAP: Interpretation of SCID and DCID in Disconnect is wrong
* #16797 - [Zephyr v1.14.0] stm32: MCUboot bootloader results in Hardware exception
* #16793 - kernel timeout_list repeatedly add a thread
* #16787 - [Coverity CID :198945]Null pointer dereferences in /subsys/bluetooth/controller/ll_sw/ull_conn.c
* #16786 - [Coverity CID :198946]Memory - corruptions in /subsys/bluetooth/host/gatt.c
* #16785 - [Coverity CID :198949]Error handling issues in /tests/net/socket/register/src/main.c
* #16779 - [Zephyr v1.14] ARM: fix the start address of MPU guard in stack-fail checking (when building with no user mode)
* #16778 - Build failures in various mimxrt boards
* #16773 - DTS: generated output for each flash-controller
* #16770 - Complete FP support for ARC
* #16761 - nrf52840 usb driver with openthread
* #16760 - K_THREAD_STACK_EXTERN() confuses gen_kobject_list.py
* #16750 - counter:  lack of interrupt when CC=0
* #16749 - IRQ_CONNECT and irq_enable calls in the SiFive UART driver is misconfigured
* #16747 - bluetooth: peripheral: RX buffer size issues
* #16746 - boards: nrf52840_pca10059: Configure NFC pins as GPIOs by default
* #16745 - PTHREAD_MUTEX_DEFINE(): don't store into the _k_mutex section
* #16739 - spi: stm32: pinmux: default configuration does not opt for low power consumption
* #16734 - Bluetooth: GATT: Writing 1 byte to a CCC access invalid memory
* #16733 - soc/stm32: Remove useless package digit for STM32 SoC Kconfig symbols
* #16720 - drivers/loapic_timer.c is buggy, needs cleanup
* #16716 - soc: stm32: Is the setting of NUM_IRQS in the F3 series wrong?
* #16707 - Problem with k_sleep
* #16695 - code coverage: kernel/device.c
* #16687 - basic disco sample fails
* #16678 - LPN establishment of Friendship never completes if there is no response to the initial Friend Poll
* #16676 - Settings enhancements
* #16672 - nrf: spi: Excess current
* #16670 - Memory reports do not work when Nordic proprietary LL is selected
* #16661 - Symmetric multiprocessing (SMP) for ARC HS cores
* #16639 - eth: pinging frdm k64f eventually leads to unresponsive ethernet device
* #16634 - GATT indicate API inconsistent when using characteristic declaration attribute as argument
* #16631 - SDK_VERSION
* #16624 - Building Grub fails when using gcc9
* #16623 - Building with Openthread fails
* #16607 - Building hello_world fails for xtensa: xt-xcc ERROR parsing -Wno-address-of-packed-member:  unknown flag
* #16606 - Fault in CPU stats
* #16604 - Zephyr fails to build with CPU load measurement enabled
* #16603 - Bluetooth: Gatt Discovery: BT_GATT_DISCOVER_PRIMARY returns all services while BT_GATT_DISCOVER_SECONDARY returns none
* #16602 - Bluetooth: GATT Discovery: Descriptor Discovery by range Seg Fault
* #16600 - Bluetooth: Mesh: Proxy SAR timeout is not implemented
* #16594 - net: dns: Zephyr is unable to unpack mDNS answers produced by another Zephyr node
* #16584 - [Coverity CID :198863]Error handling issues in /subsys/net/lib/sntp/sntp.c
* #16583 - [Coverity CID :198864]Parse warnings in /subsys/logging/log_backend_rtt.c
* #16582 - [Coverity CID :198865]Null pointer dereferences in /drivers/usb/device/usb_dc_stm32.c
* #16581 - [Coverity CID :198866]Null pointer dereferences in /subsys/net/lib/dns/llmnr_responder.c
* #16580 - [Coverity CID :198867]Parse warnings in /tests/subsys/fs/nffs_fs_api/common/nffs_test_system_01.c
* #16579 - [Coverity CID :198868]Parse warnings in /drivers/watchdog/wdt_qmsi.c
* #16578 - [Coverity CID :198869]Parse warnings in /subsys/shell/shell_rtt.c
* #16577 - [Coverity CID :198870]Error handling issues in /subsys/net/lib/lwm2m/lwm2m_obj_firmware_pull.c
* #16576 - [Coverity CID :198871]Parse warnings in /drivers/i2c/i2c_qmsi_ss.c
* #16575 - [Coverity CID :198872]Parse warnings in /tests/subsys/settings/nffs/src/settings_setup_nffs.c
* #16574 - [Coverity CID :198873]Incorrect expression in /tests/drivers/uart/uart_async_api/src/test_uart_async.c
* #16573 - [Coverity CID :198874]Null pointer dereferences in /drivers/usb/device/usb_dc_stm32.c
* #16572 - [Coverity CID :198875]Memory - corruptions in /drivers/flash/flash_simulator.c
* #16571 - [Coverity CID :198876]Parse warnings in /tests/subsys/fs/multi-fs/src/test_nffs.h
* #16570 - [Coverity CID :198877]Null pointer dereferences in /subsys/net/ip/net_if.c
* #16569 - [Coverity CID :198878]Error handling issues in /samples/net/sockets/echo_server/src/tcp.c
* #16568 - [Coverity CID :198879]Parse warnings in /tests/subsys/fs/fat_fs_dual_drive/src/test_fat_mount.c
* #16567 - [Coverity CID :198880]Possible Control flow issues in /samples/net/lwm2m_client/src/lwm2m-client.c
* #16566 - [Coverity CID :198881]Parse warnings in /drivers/serial/uart_qmsi.c
* #16565 - [Coverity CID :198882]Parse warnings in /drivers/console/rtt_console.c
* #16564 - [Coverity CID :198883]Parse warnings in /drivers/gpio/gpio_qmsi_ss.c
* #16563 - [Coverity CID :198884]Parse warnings in /drivers/counter/counter_qmsi_aon.c
* #16524 - FXOS8700 is not well supported in twr_ke18f
* #16519 - USAGE FAULT occurs when i2c_write is called
* #16518 - USB_UART_DTR_WAIT not working on nrf52840_pca10059
* #16508 - tests/subsys/storage/flash_map  Instruction bus error on frdmk64 board
* #16506 - tests/posix/fs missing ff.h
* #16501 - Code Coverage for qemu_x86 is not getting generated due to a build error
* #16493 - [Coverity CID :198640]Resource leaks in /tests/net/socket/register/src/main.c
* #16492 - [Coverity CID :198644]Incorrect expression in /tests/drivers/uart/uart_async_api/src/test_uart_async.c
* #16487 - tests/kernel/timer/timer_api/kernel.timer  sporadically (high frequency) fails in CI on qemu-xtensa
* #16483 - net: ipv6: udp: Zephyr replies to datagram with illegal checksum 0
* #16478 - Bluetooth: Improper bonded peers handling
* #16470 - Superfluous USB suspend after USB configured
* #16463 - tests/subsys/settings/fcb_init fails on second run
* #16453 - sockets: getaddrinfo: AF_UNSPEC handling was recently broken
* #16432 - Weird link error of the console sample!
* #16428 - samples/gui/lvgl does not work on PCA10056
* #16426 - Missing included dependencies in many header files
* #16419 - Bluetooth: XTAL feature regression
* #16418 - drivers: watchdog: sam0: check if timeout is valid
* #16417 - issues with can filter mode set
* #16416 - sram size for RT1015 and RT1020 needs to be update.
* #16415 - Build errors with C++
* #16414 - Backport west build --pristine
* #16413 - Missing dependency in cmake
* #16412 - on reel_board the consumption increases because TX pin is floating
* #16411 - bad regex for west version check in host-tools.cmake
* #16389 - ninja flash to intel quark d2000 zephyr
* #16387 - STM32wb55 bluetooth samples fail
* #16379 - net: ipv6: udp: Zephyr replies with illegal UDP checksum zero
* #16375 - net: ipv4: udp: Zephyr does not reply to a valid datagram with checksum zero
* #16366 - Build error on QEMU x86 and quark_se_c1000_devboard
* #16365 - lwm2m: enable with CONFIG_NET_RAW_MODE
* #16363 - Error building x_nucleo_iks01a1 sample on nucleo_wb55rg after activating I2C Bus
* #16360 - ARM: Implement configurable MPU-based stack overflow guards
* #16354 - net: ipv6: Zephyr does not reply to fragmented packet
* #16341 - Bluetooth: GATT Server failed to send Service Change Indication
* #16339 - openthread: off-by-one error when calculating ot_flash_offset for settings
* #16327 - doc: networking: overview has out of date info for LwM2M
* #16326 - USB3CV Chapter 9 Tests failures
* #16323 - net: ipv6: tcp: unexpected reply to malformed HBH in TCP/IPv6 SYN
* #16318 - net: Network Offloading: Particle Boron
* #16316 - ST modules organization
* #16313 - LMP Response Timeout / LL Response Timeout (0x22) after ~40s when using LE Secure Connections
* #16307 - cannot move location counter backwards error happen
* #16303 - mbedtls: config-tls-generic.h: MBEDTLS_PLATFORM_NO_STD_FUNCTIONS seems ungrounded
* #16296 - dts generation in correct for 2 registers and no-size
* #16289 - Driver: modem ublox-sara-r4 not compiling
* #16278 - [Zepyhr v1.14.0] Unable to update FW with mcumgr over UART
* #16276 - net: ipv4: Zephyr replies to link-layer broadcast packet
* #16275 - setting_init crashes on qemu_x86 when setting BT_SETTINGS
* #16273 - Calling k_work_submit can reenable interrupts
* #16272 - bluetooth mesh proxy filter
* #16268 - Add 32K RAM support for nRF51822 REVC/microbit board
* #16257 - net: icmpv4: Zephyr sends echo reply with multicast source address
* #16243 - std::vector push_back() not working correctly
* #16240 - USB Bluetooth and DFU classes cannot be enabled simultaneously on nRF52840
* #16238 - k_cycle_get_32() API is useless in some Zephyr configurations
* #16236 - [docs] Windows installation guide, git part, is installed with non-intended configuration
* #16234 - tests/benchmarks/latency_measure can not calculate the real time thread switch for twr_ke18f
* #16229 - tests/kernel/common fails at test_atomic on twr_ke18f board
* #16227 - Zephyr env: unset var in conditional activation
* #16226 - ARM: IsInIsr(): inconsistencies between doc and implementation
* #16225 - tests/kernel/msgq/msgq_api twr_ke18f fails with assert
* #16224 - tests/subsys/storage/flash_map meet mpu hardfault in twr_ke18f board.
* #16216 - tests/kernel/timer/timer_api fails on nrf51_pca10028 board
* #16215 - FIFO queue data seems to get overwritten
* #16211 - NVS: sector erase at startup (2-sectors configuration)
* #16204 - Build STM32 : generate hex file fail
* #16191 - boards/arm/{olimexino_stm32, stm32_min_dev}: USB pinmux setup is skipped
* #16185 - Compile error using entropy.h in C++ code
* #16177 - STM32: Could not compile with CONFIG_PINMUX=n
* #16170 - CI fails because warning in LOG_ERR() in drivers/i2s_ll_stm32.c
* #16164 - [Coverity CID :198584]Uninitialized variables in /drivers/led/ht16k33.c
* #16163 - [Coverity CID :198587]Incorrect expression in /tests/subsys/usb/desc_sections/src/desc_sections.c
* #16162 - [Coverity CID :198588]Control flow issues in /drivers/gpio/gpio_cc13xx_cc26xx.c
* #16161 - [Coverity CID :198589]Control flow issues in /drivers/i2c/i2c_sam0.c
* #16160 - [Coverity CID :198590]Control flow issues in /drivers/i2c/i2c_sam0.c
* #16159 - [Coverity CID :198591]Control flow issues in /drivers/sensor/adxl362/adxl362.c
* #16158 - LwM2M: Fix incorrect last_block handling in the firmware write callback
* #16156 - Remove the LWM2M maximum number of instances limitation
* #16155 - drivers: can: wrong value used for filter mode set
* #16154 - Fix various issues with handling of floating values within the LWM2M subsystem
* #16148 - ARM: Enable building with TRUSTED_EXECUTION_SECURE
* #16145 - question: Using OpenThread API in Zephyr application
* #16143 - posix: clock_settime calculates the base time incorrectly
* #16142 - NET: llmnr responder sends malformed packets
* #16141 - posix: CONFIG_POSIX_API and CONFIG_NET_SOCKETS_POSIX_NAMES don't make sense to use together, and conflict when doing so
* #16138 - is this right for clock announcing in every CORE?
* #16132 - The nRF mesh APP report “Invalid Publish Parameters”
* #16110 - net: arp: request from own hardware but different IP address not dropped
* #16107 - Using bt_gatt_read() with 'by_uuid' method returns 3 extra bytes
* #16103 - nrf5 802.15.4 driver requires Log subsys to be enabled
* #16098 - net: arp: sender hardware address not used by ICMP/TCP/UDP
* #16090 - mpu align support for code relocation on non-XIP system
* #16089 - Mcux Ethernet driver does not detect carrier anymore (it's alway on)
* #16080 - Zephyr UART shell crashes on start if main() is blocked
* #16079 - SAM0/SAMR SERIAL subsystem broken?
* #16078 - Shell subsystem or SERIAL no longer works on SAM0/SAMR
* #16072 - boards/up_squared: k_sleep() too long with local APIC timer
* #16054 - Bluetooth sample app 'peripheral' failing to build for nRF52840
* #16052 - Adafruit Trinket M0 Bossac Offset is Wrong
* #16046 - modules are being processed too late.
* #16042 - NDP should be enhanced with Security, RFC 3971
* #16027 - support for no-flash systems
* #16025 - webusb example app not reading data
* #16012 - Source IP address for DHCP renewal messages is unset
* #16010 - Coverage reporting fails on many tests
* #16006 - The ArgonKey board documentation needs to align to the official information
* #16002 - the spi base reg address in arc_iot.dtsi has an error
* #16001 - ARC iotdk supports MPU and fpu in hardware but not enabled in kconfig
* #16000 - We need a CI check for commas in CODEOWNERS
* #15998 - CODEOWNERS is broken (Again)
* #15997 - Fix compile warning in samples/net/sockets/dumb_http_server
* #15996 - tests/kernel/sched/schedule_api/testcase.yaml#kernel.sched.slice_reset fails on nrf52840_pca10056, nrf52_pca10040, nrf51_pca10028
* #15991 - [Coverity CID :198389]Memory - illegal accesses in /subsys/settings/src/settings_runtime.c
* #15990 - [Coverity CID :198390]Memory - illegal accesses in /subsys/settings/src/settings_runtime.c
* #15989 - [Coverity CID :198391]Memory - illegal accesses in /subsys/settings/src/settings_runtime.c
* #15988 - [Coverity CID :198392]Insecure data handling in /tests/net/socket/getaddrinfo/src/main.c
* #15987 - [Coverity CID :198393]Error handling issues in /tests/net/socket/socket_helpers.h
* #15986 - [Coverity CID :198394]Error handling issues in /tests/net/socket/socket_helpers.h
* #15985 - [Coverity CID :198395]Memory - corruptions in /soc/arm/microchip_mec/mec1501/soc.c
* #15983 - Kernel tests assume SYS_CLOCK_TICKS_PER_SEC=100
* #15981 - ARM: k_float_disable() as system call
* #15975 - Openthread - fault with dual network interfaces
* #15971 - Fail to connect sample bluetooth HID with Tizen OS (BT_HCI_ERR_DIFF_TRANS_COLLISION)
* #15970 - samples: microbit pong demo
* #15964 - ARM: Cortex-M: enhance Sharing Floating-Point Registers Mode
* #15961 - bug:  west: 'west flash' doesn't use specified hex file
* #15941 - Stale 1.3.99 documentation under /latest
* #15924 - Bluetooth: PTS: GATT server tests fail after merge of #15524
* #15922 - BLE mesh:The Provisioner APP can't find the micro:bit which is running the mesh sample
* #15918 - stm32f7 GPIO Ports F & G Disabled by Default
* #15917 - USB disconnect/reconnect
* #15916 - [BLE] Mesh example qemu kernel panic
* #15911 - Stack size is smaller than it should be
* #15909 - stm32f7: DTCM included in sram0
* #15906 - WEST ERROR: extension command build was improperly defined
* #15904 - concerns with use of CONFIG_BT_MESH_RPL_STORE_TIMEOUT in examples
* #15893 - code coverage is not tested in CI
* #15884 - tests/net/socket/getaddrinfo fails on mps2_an385
* #15878 - tests/net/lib/mqtt_publisher/net.mqtt.tls fails to build on sam_e70_xplained
* #15877 - all qemu_x86_64 tests hang on Ubuntu 18.04
* #15864 - disk partitioning should not specified in DTS
* #15844 - Network management API should support user space
* #15842 - cdc_acm: stm32: uart_fifo_fill() can't transmit data out
* #15835 - ""#if XIP"" block in qemu_x86 DTS always evaluates to false
* #15831 - qemu_x86 DTS does not reflect actual emulated hardware layout
* #15827 - ARM: Update ARM CMSIS to latest  version
* #15823 - Build failure for spi_loopback on atsamr21_xpro
* #15817 - nrf52: HFXO is not turned off as expected
* #15814 - [Coverity CID :186196]Unchecked return value in  samples/sensor/lsm6dsl/src/main.c
* #15794 - mps2_an385 crashes if CONFIG_INIT_STACKS=y and CONFIG_COVERAGE=y
* #15789 - Networking documentation missing
* #15778 - [Coverity CID :198001]Control flow issues in /subsys/bluetooth/host/mesh/settings.c
* #15777 - [Coverity CID :198002]Null pointer dereferences in /subsys/net/l2/ethernet/arp.c
* #15776 - [Coverity CID :198003]Error handling issues in /tests/net/net_pkt/src/main.c
* #15775 - [Coverity CID :198005]Memory - corruptions in /subsys/bluetooth/shell/gatt.c
* #15774 - [Coverity CID :198006]Control flow issues in /subsys/bluetooth/host/settings.c
* #15773 - [Coverity CID :198007]Memory - corruptions in /subsys/bluetooth/host/hci_core.c
* #15772 - [Coverity CID :198009]Memory - corruptions in /subsys/bluetooth/shell/gatt.c
* #15771 - [Coverity CID :198010]Control flow issues in /samples/boards/nrf52/mesh/onoff_level_lighting_vnd_app/src/storage.c
* #15770 - [Coverity CID :198011]Incorrect expression in /tests/subsys/usb/desc_sections/src/desc_sections.c
* #15769 - [Coverity CID :198012]Memory - corruptions in /drivers/flash/flash_simulator.c
* #15768 - [Coverity CID :198013]Control flow issues in /subsys/bluetooth/host/mesh/settings.c
* #15767 - [Coverity CID :198014]Memory - corruptions in /drivers/flash/flash_simulator.c
* #15766 - [Coverity CID :198016]Security best practices violations in /subsys/settings/src/settings_runtime.c
* #15765 - [Coverity CID :198018]Control flow issues in /subsys/bluetooth/host/mesh/settings.c
* #15764 - [Coverity CID :198019]Security best practices violations in /subsys/settings/src/settings_runtime.c
* #15763 - [Coverity CID :198021]Control flow issues in /drivers/clock_control/clock_stm32_ll_mp1x.c
* #15762 - [Coverity CID :198022]Security best practices violations in /subsys/settings/src/settings_runtime.c
* #15759 - usb: cdc_acm: uart_line_ctrl_set(dev, LINE_CTRL_DTR, &dtr) should always return 0 if USB port is not opened by host
* #15751 - Incorrect flash map
* #15749 - [question] errors using custom command in CMakeLists.txt
* #15748 - 'ninja flash' does not work for IMXRT1052 target
* #15736 - Generalize and improve async context for SPI, ADC, etc.
* #15734 - Power management doesn't work with CONFIG_I2C=y on nRF52
* #15733 - Bluetooth: controller: Central Encryption setup overlaps Length Request procedure
* #15728 - tests/benchmarks/timing_info: wrong value for context switch duration
* #15720 - ""z_clock_elapsed"" implementation seems to be missing #linking #sched
* #15719 - tests/ztests/mock/ : Stuck at test_parameter_tests
* #15714 - samples/bluetooth/peripheral: could not connect with disco_l475_iot1 board
* #15710 - [question] how about the current consumption on NRF52DK running power_mgr sample?
* #15709 - CODEOWNERS ignored in GitHub
* #15706 - tunslip6: main: open: No such file or directory
* #15698 - bluetooth: bt_conn: No proper ID handling
* #15696 - [question] why bt_setting is dependant of printk in menuconfig?
* #15679 - Can GPTP support multiple slave nodes
* #15678 - Watchdog peripheral api docs aren't generated correctly.
* #15675 - DTS question about pinmix/GPIO
* #15672 - net: socket send return error(-110) when http request 100 times
* #15668 - Support request: Issue with documentation warning
* #15664 - Zephyr modules failure report
* #15652 - document the mailing list for nightly build results
* #15639 - [question] how to get the bd_addr from scan callback as shown on nrf-connect app?
* #15637 - Support of device tree gpio-map
* #15627 - Application compiled with CONFIG_POSIX_API doesn't have access to POSIX headers
* #15625 - target_compile_features in CMakeLists.txt triggers an error
* #15622 - NXP RT10XX: Load code to ITCM
* #15612 - bt_set_id_addr() to allow public address as argument
* #15608 - [question] my board won't boot without debugger attached but no issue using nordic SDK
* #15607 - nRF52: 2.4 GHz proprietary RF support
* #15606 - trickle.c can't work for multiple triggerings
* #15605 - Unaligned memory access by ldrd
* #15601 - pwm: nRF default prescalar value is wrong
* #15597 - [question] How to include mesh related header files in my own source file
* #15596 - net: Zephyr's SNTP API time precision is not adequate
* #15594 - net shell ""net tcp send"" command failed when repeated many times
* #15588 - Does zephyr support different time slices for each thread?
* #15587 - Zephyr was unable to find the toolchain
* #15580 - SAMD21 Adafruit examples no longer run on boards
* #15571 - Fix sanitycheck failures for v2m_musca_b1_nonsecure
* #15570 - Unbonded peripheral gets 'Tx Buffer Overflow' when erasing bond on master
* #15565 - undefined references to 'sys_rand32_get'
* #15558 - support for power-of-two MPUs on non-XIP systems
* #15551 - CMake enables -fmacro-prefix-map on GCC 7
* #15549 - [FCB question] Is it true that fcb storage won't overwrite old records which limits the max num?
* #15546 - tests/kernel/mem_protect/protection/: Reached unreachable code
* #15526 - Unhandled identity in bt_conn_create_slave_le
* #15522 - Extra padding in IPv4 link local ARP packets
* #15520 - tests/ztest/mock: test_multi_value_test:  Unused mocked return value
* #15516 - Implementation of CONFIG_MAX_PTHREAD_COUNT
* #15513 - nRF timer unnecessary configuration?
* #15508 - No space to store CCC cfg
* #15507 - NRF52840: usb composite MSC + HID (with CONFIG_ENABLE_HID_INT_OUT_EP)
* #15504 -  Can I use one custom random static bd_addr before provision?
* #15501 - smp_svr build issue
* #15499 - gpio_intel_apl: gpio_pin_read() pin value doesn't match documentation
* #15497 - USB DFU: STM32: usb dfu mode doesn't work
* #15495 - tests/drivers/spi/spi_loopback/peripheral.spi fails to build on several boards
* #15486 - usb composite MSC + HID (with CONFIG_ENABLE_HID_INT_OUT_EP)
* #15483 - add mpu and fpu support for arc iotdk
* #15481 - object_access in common-rom.ld missed GROUP_LINK_IN(ROMABLE_REGION)
* #15477 - Zephyr network stack will up the Ethernet interface after its driver initialized (regardless of actual status)
* #15472 - DNS resolver sample sends only one A query
* #15465 - Fix build failures for test_newlib &   tests/lib/mem_alloc/libraries.libc.newlib w/ARM gcc
* #15451 - doc: settings Misleading examples
* #15448 - help to use zephyr-ninja flash of st_nucleo_l476rg
* #15447 - sanitycheck --coverage -p qemu_x86: Fatal failures with tests/kernel/pipe/pipe/kernel.pipe
* #15446 - ssanitycheck --coverage -p mps2_an385: Some remaing test cases that are still failing
* #15444 - Error initiating sdhc disk
* #15443 - usb_dc_stm32: Missing semaphore initialization and missing pin remapping configuration
* #15419 - reset and halt function
* #15411 - tests/kernel/critical:  Continuous reboot at test_critical
* #15408 - [Coverity CID :197596]Memory - corruptions in /tests/net/lib/mqtt_packet/src/mqtt_packet.c
* #15391 - [Coverity CID :197613]Possible Control flow issues in /subsys/net/ip/net_core.c
* #15374 - PR 15230 introduces test failure for particle_argon
* #15373 - IPv4 link local packets are not sent with ARP ethernet type
* #15355 - Driver for U-Blox SARA modem (used by Particle Boron)
* #15354 - counter: stm32: Issue with LSE clock source selection
* #15339 - RISC-V: RV32M1: Load access fault when accessing GPIO port E
* #15334 - Unable to reset nRF52840 from nRF9160 on pca10090 DK
* #15331 - CONFIG_CODE_DATA_RELOCATION does not work with Cache enabled MCUs.
* #15316 - printf causing usage fault
* #15315 - doc: simplify cmake examples thanks to cmake's new -B option
* #15305 - add QEMU target for armv8-M with MPU support
* #15282 - Enhance networking tests/net/all tests
* #15279 - mempool alignment might cause a memory block allocated twice
* #15272 - sanitycheck reports build errors as ""handler crash""
* #15246 - doc: confusion about dtc version
* #15232 - tests/bluetooth/tester fails build if CONFIG_TEST_USERSPACE=n
* #15193 - tests/net/socket/getaddrinfo tests too little
* #15180 - testing flash driver clients in CI
* #15159 - undefined reference to 'bsearch' #stdlib
* #15156 - GH labels reorg
* #15144 - West: how to set up for external modules
* #15139 - implement sys_sem that can reside in user memory
* #15133 - Is the level2 interrupt supported for ARM cortex-M0P core?
* #15119 - GPIO callback not disabled from an interrupt
* #15116 - nrfx_twim: (nRF52) driver unable to perform i2c_burst_write() correctly
* #15115 - ARM: Cortex-M: enhance non-sharing floating point services
* #15074 - ARM: Fix/Enhance Floating Point for ARM Cortex-M architecture
* #15046 - Native_posix: command line handling: Hint users why an option does not exist
* #15003 - init_iface in net_if.c should check api->init
* #14997 - Convert samples/sensor/bme280/src/main.c to use printk instead of printf
* #14970 - samples/drivers/watchdog: Not showing ""Waiting for reset..."" for nrf boards
* #14918 - olimexino stm32 CAN errors
* #14904 - Sanitycheck report not clear if built or ran a test
* #14828 - ARM: MPU-based HW thread stack protection not working properly when building with CONFIG_FLOAT
* #14826 - USB reset in suspended state
* #14791 - Bluetooth: GATT Notification callbacks should have conn as argument
* #14769 - kernel/userspace.c: Improve code coverage to 100%
* #14744 - ARM: Core Stack Improvements/Bug fixes for 2.0 release
* #14736 - kernel/include/kswap.h: Improve code coverage to 100%
* #14734 - kernel/include/kernel_structs.h: Improve code coverage to 100%
* #14733 - kernel/work_q.c: Improve code coverage to 100%
* #14731 - kernel/userspace_handler.c: Improve code coverage to 100%
* #14730 - kernel/userspace.c: Improve code coverage to 100%
* #14729 - kernel/timer.c: Improve code coverage to 100%
* #14728 - kernel/timeout.c: Improve code coverage to 100%
* #14727 - kernel/thread_abort.c: Improve code coverage to 100%
* #14726 - kernel/thread.c: Improve code coverage to 100%
* #14725 - kernel/system_work_q.c: Improve code coverage to 100%
* #14724 - kernel/stack.c: Improve code coverage to 100%
* #14723 - kernel/sem.c: Improve code coverage to 100%
* #14722 - kernel/sched.c: Improve code coverage to 100%
* #14721 - kernel/queue.c: Improve code coverage to 100%
* #14720 - kernel/poll.c: Improve code coverage to 100%
* #14719 - kernel/pipes.c: Improve code coverage to 100%
* #14718 - kernel/mutex.c: Improve code coverage to 100%
* #14717 - kernel/msg_q.c: Improve code coverage to 100%
* #14716 - kernel/mempool.c: Improve code coverage to 100%
* #14715 - kernel/mem_slab.c: Improve code coverage to 100%
* #14713 - kernel/mem_domain.c: Improve code coverage to 100%
* #14712 - kernel/mailbox.c: Improve coverage to 100%
* #14711 - kernel/idle.c: Improve code coverage to 100%
* #14710 - kernel/errno.c: Improve code coverage to 100%
* #14709 - kernel/device.c: Improve code coverage to 100%
* #14708 - kernel/include/ksched.h: Improve code coverage to 100%
* #14707 - kernel/include/kernel_offsets.h: Improve code coverage to 100%
* #14706 - kernel/include/kernel_internal.h: Imrpove code coverage to 100%
* #14705 - kernel/smp.c: Improve code coverage to 100%
* #14704 - kernel/int_latency_bench.c: Improve code coverage to 100%
* #14703 - kernel/compiler_stack_protect.c: Improve code coverage to 100%
* #14702 - kernel/atomic_c.c : Improve code coverage to 100%
* #14675 - Bluetooth: Controller privacy support (platforms with HW acceleration)
* #14652 - Gitlint is more strict than checkpatch.pl
* #14633 - undefined reference to 'mbedtls_debug_set_threshold' when MBEDTLS_DEBUG is enabled
* #14605 - mimxrt1060_evk cpp_synchronization meets Hardware exception
* #14604 - BLE disconnection caused by channel map request or connection parameter update request
* #14599 - Can you add a ADC sample?
* #14588 - static IP support on cc3220sf_launchxl
* #14547 - Kconfig shell prompt configuration
* #14517 - LPCXpresso55S69 board support
* #14493 - implement Zephyr futexes
* #14467 - New HTTP API implementation
* #14459 - usb: samples: mass: doesn't build with FLASH overlay
* #14292 - Typo ""QPSI"" in QSPI macros in some stm32 drivers
* #14283 - tests/drivers/watchdog/wdt_basic_api fails on test_wdt_callback_1() for Ardruino and quark_se_c1000_ss_devboard:arc
* #14123 - Particle boards need a board initialization module for antenna configuration
* #14082 - Update Segger host library to V2.52f
* #14037 - Generic device driver object type
* #14034 - Support for PPP protocol
* #13963 - up_squared: evaluate removal of SBL-related special configurations
* #13935 - tests/crypto/rand32/crypto.rand32.random_hw_xoroshiro: Usage fault ""Fatal fault in ISR! Spinning...""
* #13897 - CONFIG_LOG_IMMEDIATE leads to unobvious faults in unrelated rotines due to stack overflow
* #13817 -  tests/ztest/test/mock fails to complete on nios2
* #13799 - usb cdc acm fails when writing big chunks of data on stm32
* #13766 - mimxrt1060_evk tests/kernel/fatal meet many unwanted exceptions
* #13749 - Can CONFIG_SOC_WATCH-related code be removed?
* #13610 - kernel: Non-deterministic and very high ISR latencies
* #13602 - How to get the port number for an ephemeral (randomly assigned) port
* #13574 - Missing documentation for fcb and nffs
* #13560 - STM32 USB: netusb: kernel crash when testing example echo_server with nucleo_f412zg  (ECM on Windows)
* #13444 - Build failure when including both socket.h and posix/time.h
* #13441 - optimize x86 userspace page table memory usage
* #13347 - tests/drivers/watchdog/wdt_basic_api fails on test_wdt_callback_1() for Quark SE / arc
* #13316 - Notification enabled before connection
* #13288 - Disable JTAG debug port for free use GPIO PA15, PB3, PB4 on STM32F1 series
* #13197 - LwM2M: support Connectivity Monitoring object (object id 4)
* #13148 - Build on nucleo_stm32f429zi
* #13097 - openthread default configuration
* #13075 - Review memory protection Kconfig policies for consistency and sanity
* #13065 - CONFIG_BT leads Fatal fault in ISR on esp32
* #13003 - context switch in x86 memory domains needs optimization
* #12942 - openthread: sleepy end device not supported by zephyr router
* #12825 - SystemView Feature Not working
* #12728 - docs: Hard to find guidelines for ext/ maintenance
* #12681 - BLE Split Link Layer
* #12633 - tests/boards/altera_max10/i2c_master failed with ""failed to read HPD control"" on altera_max10
* #12602 - STM32F415RG Support
* #12553 - List of tests that keep failing sporadically
* #12542 - nrf timers unstable with ticks faster than 100 Hz
* #12478 - tests/drivers/ipm/peripheral.mailbox failing sporadically on qemu_x86_64 (timeout)
* #12261 - i2c_ll_stm32_v1 driver gets stuck
* #12257 - GNU Arm Embedded Toolchain 8-2018-q4-major can't produce hex files on Windows
* #12245 - LWM2M registration timeout
* #12228 - 	How to build images for client or server in bluetooth mesh examples?
* #12160 - settings: NVS back-end
* #12129 - Include: Clean up header file namespace
* #12119 - 64bit architecture support
* #12044 - [Question] [Blutooth Mesh] How proxy client create the proxy PDU
* #12039 - clock_control: API should allow callback to be specified
* #11993 - drivers: Supporting driver-specific extensions to existing generic APIs
* #11922 - ADC generic driver missing features: calibration, reference voltage value
* #11918 - Dynamic pin configuration
* #11740 - LL_ASSERT in event_common_prepare in Zephyr v1.13
* #11712 - Add support for newlib-nano
* #11681 - Mesh Friend does not reply within ReceiveWindow
* #11626 - k_busy_wait exits early on Nordic chips
* #11617 - net: ipv4: udp: broadcast delivery not supported
* #11535 - serial: uart_irq_tx_ready() needs better documentation or correction of the test
* #11455 - cdc_acm uart_fifo_fill sample app doesn't comply with the documentation
* #11107 - clock_control: API should support asynchronous and synchronous variants of turning on clocks
* #10965 - wncm14a2a modem should be moved to a shield configuration
* #10942 - Declaring an API Stable
* #10935 - Support all UARTs on ESP32 WROOM module
* #10915 - ESP 32 failed to boot while running  crypto/rand32 tests
* #10896 - Add STM32 ADC driver
* #10739 - Cannot flash to STM32 Nucleo F446RE with SEGGER JLink
* #10664 - FOTA: nRF52: integration of samples/bluetooth/mesh & smp_srv
* #10657 - tests/net/ieee802154/crypto does not work as expected
* #10603 - Hard to find ""todo""
* #10463 - can: stm32: Update to new API
* #10450 - usb/stm32: use dts extracted information to populate clock settings
* #10420 - gcc: ""Exec format error"" - WSL in Windows 10 1803
* #10150 - Getting LLVM work on ARM
* #9954 - samples/hello_world build failed on Windows/MSYS
* #9898 - 1.14 Release Checklist
* #9762 - Bluetooth mesh reliability issue?
* #9570 - Network stack cleanup: deep TCP cleanup
* #9509 - Unable to upload firmware over serial with mcumgr
* #9333 - Support for STM32 L1-series
* #9247 - Get ST Disco and Eval boards compliant with default configuration guidelines
* #9070 - bluetooth ：BR ：The sample is incomplete
* #9047 - Interrupt APIs.
* #8978 - soc: Intel S1000: add low power memory management support
* #8851 - Allow creation of Zephyr libraries outside of Zephyr tree
* #8734 - USB: DFU timeout on nRF52840 due to long flash erase
* #8728 - Network stack cleanup: Net IF
* #8726 - Network stack cleanup: TCP
* #8725 - Network stack cleanup: Net Context
* #8723 - Network stack cleanup
* #8722 - Network stack cleanup: connection
* #8464 - sdk_version file missing
* #8419 - Bluetooth: tester: LPN Poll issue
* #8404 - Bluetooth: controller: Reuse get_entropy_isr API
* #8275 - when zephyr can support popular IDE develop?
* #8125 - About BMI160 reading issue.
* #8081 - Bluetooth: Deprecate TinyCrypt and use mbedTLS
* #8062 - [Coverity CID :186196] Error handling issues in /samples/sensor/mcp9808/src/main.c
* #7908 - tests/boards/altera_max10/qspi fails on max10
* #7589 - Migrate Websocket to BSD sockets
* #7585 - Migrate HTTP to socket API
* #7503 - LwM2M client: No registration retry after error?
* #7462 - Convert mcr20a to be a shield when that functionality is merged
* #7403 - RAM flash driver emulator
* #7316 - native_posix supersedes ztest mocking
* #6906 - QM (Quality Managed) level qualification
* #6823 - Optimize rendering of Kconfig documentation
* #6817 - Question: Is supported for stack sharing among tasks  in Zephyr? Or any plan?
* #6816 - Question: Is KProbes supported in Zephyr? Or any plan?
* #6773 - Publish doxygen-generated API pages
* #6770 - Multiple Git Repositories
* #6636 - Enable hardware flow control in mcux uart shim driver
* #6605 - Question: Does WAMP protocol has any usecase for Zephyr
* #6545 - ARM Cortex R Architecture support
* #6370 - I can't find adc name which is f429zi board
* #6183 - sensor: Handling sensors with long measurement times
* #6086 - Ideas/requirements for improved TLS support in Zephyr
* #6039 - Implement interrupt driven USART on LPC54114
* #5579 - Address untested options in kernel
* #5529 - Explore Little File System (littlefs) support
* #5460 - scripts: extract_dts_includes: check yaml dts binding property ""category: ""
* #5457 - Add SDHC card support
* #5423 - [nRF] on-target tests accidentally run twice
* #5365 - Revisit DHCPv4 test, convert to ztest
* #4628 - Sample app enabling sensors on disco_l475_iot1 board
* #4506 - rework GPIO flags
* #4505 - sanitycheck should distinguish compile errors from link errors
* #4375 - Provide a script to find files not owned per the CODEOWNERS file
* #4178 - Openweave Support
* #3936 - BT: bt_conn_create_le(): No way to find out error cause
* #3930 - Need a CPU frequency driver for ESP-32
* #3928 - [TIMER] k_timer_start should take 0 value for duration parameter
* #3846 - to use {k_wakeup} to cancel the delayed startup of one thread
* #3805 - [test] test scheduling of threads along with  networking conditions
* #3767 - reconsider k_mem_pool APIs
* #3759 - reconsider k_mbox APIs
* #3754 - Support static BT MAC address
* #3749 - ESP32: Deep Sleep
* #3722 - Enable Flash Cache for ESP32
* #3710 - 802.15.4 Soft MAC 2015 version support
* #3678 - Implement the Read Static Addresses Command
* #3673 - reconsider k_queue APIs
* #3651 - add tickless idle and kernel support to RISCV32 pulpino
* #3648 - Ability to unpair devices
* #3640 - BLE central scan ignores changes in payload
* #3547 - IP stack: Ideas for optimizations
* #3500 - ESP8266 Architecture Configuration
* #3499 - evaluate Emul8 as a replacement for QEMU in sanitycheck
* #3442 - TCP connection locally isn't possible
* #3426 - Only supports classic Bluetooth compilation options
* #3418 - Bluetooth True Wireless Stereo
* #3417 - BT Phonebook Access Profles
* #3399 - Texas Instruments CC2538 Support
* #3396 - LLDP: Implement local MIB support with advertisement of mandatory TLVs
* #3295 - Advanced Power Management
* #3286 - Native Zephyr IP Stack Advanced Features
* #3155 - xtensa: fix tests/kernel/mem_protect/stackprot
* #3040 - Add support for the Arduino Ethernet Shield V2
* #2994 - The build system crashes when GCCARMEMB_TOOLCHAIN_PATH has a space in it
* #2984 - frdm_k64f bus exception bug due to peculiar RAM configuration
* #2933 - Add zephyr support to openocd upstream
* #2900 - Support for the BBC micro:bit Bluetooth Profile
* #2856 - Customer: Floating Point samples
* #2780 - Set the _Swap() return value on ARC the same way it is now done on ARM ?
* #2766 - BMI160 Oversampling Configuration
* #2682 - Add support for UART A1 for TI CC3200 SoC
* #2623 - nRF52 UART behaviour sensitive to timing of baud rate initialization.
* #2611 - SDP client
* #2587 - Support for BR/EDR SSP out-of-band pairing
* #2586 - Support for LE SC out-of-band pairing
* #2401 - 802.15.4 - LLDN frame support
* #2400 - 802.15.4 - Multipurpose frame support
* #2399 - 802.15.4 - TSCH Radio protocol support
* #2398 - 802.15.4 - Update existing Management commands
* #2397 - 802.15.4 - IE list support
* #2396 - 802.15.4 - Management service: FFD level support
* #2333 - Get IPv6 Ready approval
* #2049 - Enable ARM M4F FPU lazy stacking
* #2046 - Add a driver to support timer functions using the PWM H/W periphral timers
* #1933 - nios2: implement nested interrupts
* #1860 - Add support for getting OOB data
* #1843 - nios2: enable interrupt driven serial console for JTAG UART
* #1766 - nios2: implement asm atomic operations
* #1392 - No module named 'elftools'
* #335 - images for the wiki
",59771425
1520,False,True,2019-09-04T07:37:16Z,2019-09-04T07:47:28Z,"```
Aaron Tsui (7):
      doc: sample: mpu  Update documentation
      samples: bluetooth: ibeacon: change to ADV_NONCONN_IND type
      samples: shields: x_nucleo_iks01a1
      samples: sensor: bme280: add README.rst
      samples: sensor: bme280: add arduino_101_sss.overlay
      samples: servo_motor: add HW PWM choice for NRF52 family
      samples: bluetooth: peripheral_ht: Health Thermometer sample

Akshatha Harishchandra (1):
      bluetooth: host: Replaced bt_uuid_create_le with bt_uuid_create

Alberto Escolar Piedras (27):
      doc: labels: Add links to feature process
      native_posix: cmdline: Hint user about wrong options
      nrf52_bsim: Add header to allow reusing native_posix drivers
      CODEOWNERS: remove use of commas
      native_posix: Run in real time by default with host BT
      doc: Remove API labels
      CODEOWNERS: Add reviewer for native_posix docs and flash driver
      CODEOWNERS: Clarify behaviour
      sanitycheck: Record time used in BinaryHandler
      sanitycheck: Minor optimization in BinaryHandler
      CODEWONERS: syntax fix: Remove comma
      nrf52_bsim: Add nrfx path to include path
      arch: POSIX: Do not assume 32bit pointers
      sanitycheck: update sections whitelist
      sanitycheck: Add missing section to whitelist
      native_posix: Replace system timer driver
      arch: POSIX: Fix race with unused threads
      nrf52_bsim: doc: Clarify how to fetch and compile BabbleSim
      native_posix: Fix undefined macro warning
      logging: Fix undefined macro warning
      shell: Fix undefined macro warnings
      nrf52_bsim: Minor fix in time coversion
      POSIX arch: Fixe issues related to extern ""C""
      nrf52_bsim: Add missing header guard and extern C block
      native_posix: Move include out of extern ""C"" block
      doc: Add native_posix information to 2.0 release note
      native_posix: Check pointer before de-referencing it

Alex Porosanu (2):
      soc: riscv32: fix zero-riscy zephyr,flash node
      west.yml: update nxp_hal SHA to latest commit

Alexander Mihajlovic (1):
      posix: Fix calculation of clock base in clock_settime

Alexander Svensen (9):
      Bluetooth: controller: ull/lll: Workaround CPR procedure collision
      Bluetooth: controller: ull/lll: Do not feature exc more than once
      Bluetooth: controller: split: Fix Conn Param Req procedure stall issue
      Bluetooth: controller: split: Fix master role RSSI measurement
      Bluetooth: controller: split: Refactor the lll_clock_wait() function
      Bluetooth: controller: split: Refactor if_defines to is_enabled in lll.c
      Bluetooth: controller: split: Refactor if defines in lll_adv.c
      Bluetooth: controller: split: Refactor if defines in lll_scan.c
      Drivers: led: lp5562: Add delay when writing to enable register

Alexander Wachter (55):
      boards: arm: nucleo_f746zg: Activate CAN on nucleo F746zg
      drivers: sensor: ams_iAQcore: Implemented ASM Indoor Air Quality Sensor
      samples: sensor: ams_iAQcore: Implement sample for AMS iAQ-core
      drivers: sensor: ens210: Implement AMS ens210 Sensor
      samples: sensor: ens210: Implement sample for ens210
      tests: drivers: build_all: Add AMS IAQcore and ENS210 to build all
      CODEOWNERS: Add codeowner for ams iAQcore and ENS210
      drivers: can: stm32: fix filter mode set
      drivers: can: Extend attach_isr with void *arg and pass to the isr cb
      drivers: can: Extend can_send with void *arg and pass it to the isr cb
      drivers: can: rework can_attach_msgq
      drivers: can: Implement can_attach_workq
      tests: drivers: can: api: define DT_CAN_1_NAME if not defined
      tests: drivers: can: Add testcases for attach_workq
      tests: drivers: can: Make CAN dev global
      drivers: can: Add loopback driver
      drivers: can: rename drivers to can_<dev name>
      drivers: can: mcux_flexcan: Add support for MK64
      soc: nxp: k6x: Add CAN support
      boards: frdm-k64f: Enable CAN support
      samples: CAN: Add FRDM-K64F defconfig
      drivers: can: stm32: Remove STM CAN_Init
      drivers: can: stm32: Change TX priority to chronological order
      drivers: can: stm32 Add error message for buffer overflow
      drivers: can: stm32: Update enable driver help message
      linker: Add dtcm section for Cortex M7 MCUs
      dts: stm32f7: Add Device Tightly Coupled Memory
      drivers: ethernet: stm32: Put DMA buffer to DTCM section
      boards: arm: Activate DTCM for STM32F7 boards with Ethernet
      net: ip: 6lo compression rework
      net: ip: net_pkt: Add pkt_cursor_advance before contiguous check
      net: ip: 6lo (IPHC) uncompression rework
      net: ip: 6lo: Remove unnecessary net_buf allocation and memmove
      tests: net: 6lo: Adapt tests to deal with headers in multiple frames
      tests: net: 6Lo: Add test criterion HDR diff
      drivers: can: Add CAN shell
      samples: drivers: CAN: enable can shell for the sample
      tests: boards: board_shell: Activate CAN shell
      can: Add RX timestamp to zcan_frame
      drivers: can: stm32: Implement timestamp for RX frames
      net: canbus: Rename canbus to canbus_raw
      net: l2: 6LoCAN implementation
      net: l2: canbus: Add support for pkt reception from translator
      net: ip: net_pkt: Implement net_pkt_shallow_clone
      net: ip: ipv6_nbr: take TLLAO length from src lladdres
      net: l2: canbus: Add support for canbus Ethernet translator
      net: ip: ipv6_nbr: use temp variables for ntoh conversion
      samples: net: echo_client and echo_server: Add 6LoCAN config
      net: ip: ipv6_nbr: Make LLAO length calculation more universal
      drivers: can: mcux: Fix set can_send callbacks
      drivers: can: mcux: Fix can_detach
      boards: frdm_k64f: Enable pullup for CAN0_RX pin
      samples: drivers: CAN: reworked sample code
      baords: shields: Add reel_board CANbus shield
      tests: drivers: can: Add test for TX callback

Alexandre Bourdiol (4):
      boards: Set pinmux.c compilation under switch CONFIG_PINMUX
      samples: basic minimal: add nucleo_f429zi, disco_l475_iot1 to whitelist
      board: add call to zephyr_library() for stm32mp157c_dk2
      board: use ${ZEPHYR_BASE} instead of ${PROJECT_SOURCE_DIR}

Alexey Brodkin (14):
      soc/nsim: Minor clean-up
      simulation: ARC EM in nSIM to use nsim_em.props
      board/nsim: Make it CPU-family independent
      board/nsim: Move CPU selection in defconfigs
      board/nsim: Refactor device tree description
      ARC: Mention ARC EM family instead of EM4 template
      arc: Preserve STATUS32 flags while resetting AE flag
      arc: Add support for unaligned access
      boards/nsim: Enable unaligned data acess for nSIM with simple ARC EM
      board/nsim: Add support of ARC HS cores in nSIM
      board/nsim: Add support of multi-core ARC HS platform in nSIM
      arch: arc: _rirq_exit: Comment clean-up
      arch: arc: threads: Comment clean-up
      arc: interrupts: Explain return from interrupt to cooperative thread

Anas Nashif (210):
      ci: only build on specified branches
      boards: v2m_musca_b1_nonsecure: add flash to yaml
      boards: v2m_musca_b1_nonsecure: disable sanitycheck [REVERT ME]
      flash_map: fix test names
      flash_map: add function to iterate over areas
      flash_map: add shell interface
      ci: detect changes to sub-board definitions
      sanitycheck: add timestamps to messages
      sanitycheck: fix reporting: build vs. run
      sanitycheck: handle pid file not being present
      sanitycheck: show handler in verbose mode
      CODEOWNERS: update code owners
      tests: ipm: disable on qemu_x86_64
      CODEOWNERS: minor cleanup
      CODEOWNERS: remove use of commas
      crc: remove deprecated crc headers
      ci: send email to builds@ mailing list if master fails
      CODEOWNERS: address some unowned files/dirs
      doc: guide for optimizing zephyr
      doc: move module related doc to guides
      doc: document submitting changes to modules
      qmsi: move to a zephyr module
      qmsi: set type to boolean when selecting QMSI
      esp: move HAL to external repo
      fatfs: move fatfs filesystem to a module
      mcumgr: move to an external module
      nffs: move to an external module
      segger: move to an external module
      CODEOWNERS: remove ext/fs entry
      kconfig: enclose module Kconfigs into a menu
      cmake: build modules under /modules
      gitlint: match max title length restriction with checkpatch
      modules: move module kconfig to main tree
      manifest: update with module state
      silabs: move HAL to external repo
      cypress: move HAL to external repo
      ext: move libmetal to an external module
      ext: move open-amp to an external module
      modules: move kconfig into tree
      mcumgr: move Kconfig to main tree
      CODEOWNERS: Update owners for subsys/mgmt/
      manifest: update to latest MCUMGR head
      x86: remove unused and x86 only latency benchmark
      compiler: no warnings on address-of-packed-member
      include: arch: move bits_portable.h to arch/common
      include: arch: move addr_types to common location
      include: arch: remove empty nios2 asm.h
      include: arch: rename xtensa_irq.h to irq.h
      CODEOWNERS: update file for include/arch/common/
      cmake: no-address-of-packed-member is not supported in older compilers
      logging: use os as a domain for low level system debugging
      tests: mesh: fix function prototype and match declaration
      style: add braces around if/while statements
      style: samples/tests: add braces around if/while statements
      doc: redirect old board pages to new location
      doc: remove .html from redirect entries
      doc: generate documentation of ifdef`ed APIs
      mbedtls: move to external module
      sdk: add support for 0.10.1 and remove 0.9.5
      doc: fix path to gdb in documentation
      doc: samples: cleanup board reference and layout
      samples: grove_light: remove whitelisting
      soc: nxp: ke1xf: add DTS SPI definitions
      samples: spi_fujitsu_fram: remove whitelisting
      manifest: order modules alphabetically
      manifest: add ci-tools to manifest
      manifest: remove out-dated comment
      manifest: move net-tools to tools/net-tools
      ci: move to new docker with new SDK
      ci: skip handling coverage data
      sanitycheck: report tests that never build/run
      ext: hal: st: move to modules
      docs: fix misspelling across the tree
      ci: increase sleep time between sanitycheck runs
      drivers: uart_console: include correct path
      drivers: uart_console: do not include arch/cpu.h directly
      drivers: uart_console: removed commented code
      drivers: pinmux: do not include local pinmux.h
      include: move interrupt controller headers to interrupt_controller/
      include: move system timer headers to include/drivers/timer/
      drivers: serial: ns16550: move header from /include/
      drivers: modem: modem_receiver.h: move header from /include/
      CODEOWNERS: remove non-existing files
      CODEOWNERS: add / at the end of a directory
      mailmap: Update mailmap with full names and  emails
      arc: logging: fix logging expression
      drivers: apic_timer: fix include of system_timer.h
      include/: cleanup: add Kconfig for suppressing warnings
      cleanup: include/: move flash_map.h to storage/flash_map.h
      cleanup: include/: move console.h to console/console.h
      cleanup: include/: move tty.h to console/tty.h
      cleanup: include/: move fs.h to fs/fs.h
      cleanup: include/: move fcb.h to fs/fcb.h
      cleanup: include/: move nvs/nvs.h to fs/nvs.h
      cleanup: include/: move tracing.h to debug/tracing.h
      cleanup: include/: move stats.h to stats/stats.h
      cleanup: include/: move atomic.h to sys/atomic.h
      cleanup: include/: move base64.h to sys/base64.h
      cleanup: include/: move crc.h to sys/crc.h
      cleanup: include/: move disk_access.h to disk/disk_access.h
      cleanup: include/: move power.h to power/power.h
      cleanup: include/: move sys_io.h to sys/sys_io.h
      cleanup: include/: move json.h to data/json.h
      cleanup: include/: move zephyr/jwt.h to data/jwt.h
      cleanup: include/: move watchdog.h to drivers/watchdog.h
      cleanup: include/: move adc.h to drivers/adc.h
      cleanup: include/: move aio_comparator.h to drivers/aio_comparator.h
      cleanup: include/: move can.h to drivers/can.h
      cleanup: include/: move clock_control.h to drivers/clock_control.h
      cleanup: include/: move counter.h to drivers/counter.h
      cleanup: include/: move dma.h to drivers/dma.h
      cleanup: include/: move entropy.h to drivers/entropy.h
      cleanup: include/: move flash.h to drivers/flash.h
      cleanup: include/: move gna.h to drivers/gna.h
      cleanup: include/: move gpio.h to drivers/gpio.h
      cleanup: include/: move hwinfo.h to drivers/hwinfo.h
      cleanup: include/: move i2c.h to drivers/i2c.h
      cleanup: include/: move i2s.h to drivers/i2s.h
      cleanup: include/: move ipm.h to drivers/ipm.h
      cleanup: include/: move led.h to drivers/led.h
      cleanup: include/: move led_strip.h to drivers/led_strip.h
      cleanup: include/: move pinmux.h to drivers/pinmux.h
      cleanup: include/: move pwm.h to drivers/pwm.h
      cleanup: include/: move rtc.h to drivers/rtc.h
      cleanup: include/: move sensor.h to drivers/sensor.h
      cleanup: include/: move spi.h to drivers/spi.h
      cleanup: include/: move uart.h to drivers/uart.h
      cleanup: include/: move display.h to drivers/display.h
      cleanup: include/: move ring_buffer.h to sys/ring_buffer.h
      cleanup: include/: move misc/__assert.h to sys/__assert.h
      cleanup: include/: move misc/byteorder.h to sys/byteorder.h
      cleanup: include/: move misc/dlist.h to sys/dlist.h
      cleanup: include/: move misc/errno_private.h to sys/errno_private.h
      cleanup: include/: move misc/fdtable.h to sys/fdtable.h
      cleanup: include/: move misc/libc-hooks.h to sys/libc-hooks.h
      cleanup: include/: move misc/list_gen.h to sys/list_gen.h
      cleanup: include/: move misc/math_extras.h to sys/math_extras.h
      cleanup: include/: move misc/math_extras_impl.h to sys/math_extras_impl.h
      cleanup: include/: move misc/mempool_base.h to sys/mempool_base.h
      cleanup: include/: move misc/mempool.h to sys/mempool.h
      cleanup: include/: move misc/mutex.h to sys/mutex.h
      cleanup: include/: move misc/printk.h to sys/printk.h
      cleanup: include/: move misc/rb.h to sys/rb.h
      cleanup: include/: move misc/sflist.h to sys/sflist.h
      cleanup: include/: move misc/slist.h to sys/slist.h
      cleanup: include/: move misc/speculation.h to sys/speculation.h
      cleanup: include/: move misc/util.h to sys/util.h
      cleanup: include/: move misc/gcov.h to debug/gcov.h
      cleanup: include/: move misc/stack.h to debug/stack.h
      cleanup: include/: move misc/reboot.h to power/reboot.h
      CODEOWNERS: update file with new locations
      docs: make doxygen happy with new locations
      CODEOWNERS: update architecture owners
      arch: x86: remove unused NANO_ISF
      kernel: msgq: avoid single char variables for msgq
      doc: exclude internal symbols
      arch: arc: build cache.c conditionally
      tests: schedule_api: minor cleanup
      manifest: update to latest ci-tools revision
      samples: spi_flash: remove whitelisting
      samples: grove_temperature: cleanup whitelisting
      soc: ke1xf: fix SPI device numbering
      tests: build_all: remove whitelisting on arduino_101
      samples: quark_se_c1000_devboard does not have Wifi
      boards: hifive1: add aliases for pwm
      boards: hifive1: add supported peripherals
      samples: net: quark/arduino 101 do not have ethernet support
      boards: arduino_due: this board does support gpio
      boards: add supported devices to boards
      build: dts: also look for application specific dts overlay
      arduino_due: do not build gpio_sam driver
      samples: mass_storage: remove whitelisting
      samples: console: remove whitelisting
      boards: mark boards as supporting usb_cdc in DT
      samples: hid-mouse: use DT filtering instead of platform_exclude
      samples: hci_usb: remove whitelisting
      tests: bluetooth: shell: remove whitelisting on arduino_101
      samples: i2c_fujitsu_fram: remove whitelisting
      drivers: pwm: sifive: fix DTS defines
      samples: blink_led: remove whitelisting
      samples: fade_led: remove whitelisting
      samples: servo_motor: remove whitelisting
      drivers: pwm: imx: replace deprecated DTS macros
      boards: colibri_imx7d_m4: this board supports PWM
      tests: pwm_api: remove whitelisting
      tests: gpio: remove whitelisting
      tests: i2c: remove whitelisting
      tests: pinmux: remove whitelisting
      samples: webusb: remove whitelisting
      samples: led_apa102c_bitbang: remove whitelisting
      doc: move schedling doc to its own section
      doc: scheduler: add diagrams illustrating scheduler
      boards: remove galileo board
      boards: remove arduino 101 and related boards
      boards: remove quarl_se_c1000
      x86: remove code for interrupt forwarding bug
      doc: minnowboard: add grub docs
      toolchain: remove issm support
      gpio: remove unused qmsi driver
      i2c: remove unused qmsi driver
      ext: hal: make TI HAL a zephyr module
      ext: hal: atmel: move atmel HAL to external module
      ext: hal: make openisa HAL a zephyr module
      ext: hal: make microchip HAL a zephyr module
      ext: hal: Make NXP HALs a Zephyr module
      requirements: sort alphabetically
      requirements: add west>-0.6.0
      ci: use v0.9 docker image
      samples: arc_secure_services: fix harness
      samples: add harness to exclude from device testing

Andrei Emeltchenko (77):
      samples: usb: hid: Enable harness for the sample
      usb: tests: Enable other boards for test
      samples: usb: Add depends_on gpio
      tests: usb: Fix checking error code
      native_posix: Enable USB device for the board
      tests: usb: Add usb_read() for invalid endpoint
      samples: usb: mass: Add whitelist mass storage on ram
      tests: usb: Cleanup tests
      tests: usb: Add write() and set_callback() tests
      usb: usb_dc_dw: Fix valid endpoints check
      usb: usb_dc_native_posix: Fix valid endpoints check
      usb: usb_dc_dw: Check endpoint is valid
      usb: usb_dc_native_posix: Check endpoint is valid
      usb: usb_dc_kinetis: Verify endpoint is valid
      usb: usb_dc_kinetis: Fix using invalid index
      tests: usb: Add more USB DC tests and refactor names
      tests: usb: Add usb_read() for invalid endpoint
      tests: usb: Add write() and set_callback() tests
      usb: usb_dc_stm32: Add missing function
      usb: device: Use set_endpoint helper for set_config
      usb: device: Use set_endpoint helper
      usb: Add Kconfig template for DEVICE_COUNT
      usb: hid: Use UTIL_LISTIFY and device count macro
      samples: usb: Correct USB HID device name
      usb: cdc_acm: Use UTIL_LISTIFY and device count macro
      samples: cdc_acm: Update CDC ACM Device name
      samples: hid-cdc: Update USB device names and project conf
      tests: usb: Add endpoint allocation verification test
      usb: device: Code cleanup
      usb: Remove usb_dc_ep_set_callback return code
      usb: dc: native_posix: Increase number of endpoints supported
      usb: tests: Add second IN endpoint to test
      usb: usb_dc_stm32: Return EAGAIN on lock failure
      usb: device: Handle EAGAIN for device transfer
      usb: Fix automatic assignment endpoints
      usb: webusb: Strip 'serial' from names
      usb: webusb: Update license header
      usb: webusb: Fix logging for webusb
      usb: webusb: Remove unneeded headers
      usb: webusb: Fix payload for vendor requests
      usb: webusb: Add more log output
      tests: usb: desc_sections: Use automatic endpoint assignment
      tests: usb: desc_sections: Check EP assignment order
      usb: Add log for endpoint assignment
      tests: usb: desc_sections: Cleanup test
      uart: doc: Add special case for virtual UART
      usb: device: Add usb_transfer_is_busy() function
      samples: usb: cdc_acm: Update CDC ACM echo sample
      usb: cdc_acm: Refactor USB serial code
      samples: usb: cdc_acm_composite: Refactor sample
      usb: webusb: Fix callback not called
      tests: usb: desc_sections: Fix coverity issue
      tests: usb: desc_sections: Fix coverity issue
      usb: device: Add transfer cancel helper
      usb: device: Do not call callback when transfer is cancelled
      usb: device: Cancel all transfers on disconnect
      usb: device: Add debug logs catching re-enable failures
      usb: webusb: Trivial syntax fix
      usb: device: Disable endpoints on disconnect and suspend
      usb: device: Do not return error if ep already enabled
      drivers: usb: usb_dc_nrfx: Set cfg.en to false on Reset
      usb: Set correct default buffer size for RNDIS
      samples: net: echo_server: Fix usbnet configuration
      usb: device: Remove unused variable
      usb: Align legacy and composite interface
      tests: usb: device: Refactor device api test
      samples: usb: webusb: Use new descriptor placement API
      samples: usb: webusb: Use Automatic endpoint assignments
      samples: usb: wpanusb: Refactor sample using new API
      usb: dfu: Remove old composite configuration
      samples: usb: hid: Fix harness configuration
      doc: usb: Remove old API documentation
      usb: console: Initialize USB console after USB Device stack
      usb: usb_descriptor: Trivial syntax correct
      usb: drivers: usb_dc_stm32: Fix coverity issue
      usb: drivers: usb_dc_stm32: Fix coverity issue
      samples: usb: webusb: Remove dependence on GPIO

Andrei Gansari (11):
      ext: LPC54114 fsl_power and fsl_reset moved to device
      ext: import_mcux_sdk.py script changes
      ext: update nxp mcux lpc sdk
      soc: added LPC5500 family
      dts: LPC55S69 initial device tree
      boards: lpcxpresso55s69 initalization
      doc: lpclink2 firmware reference
      drivers: uart for LPC devices interrupt enabled
      soc: k64f MPU configured to always allow ENET
      soc: k64f MPU configured to always allow USB
      drivers: eth_mcux: event corrected init->reset

Andrew Boie (119):
      arc: print human-readable exception info
      userspace: fix copy from user locking
      CODEOWNERS: minor adjustment
      arc: arm: fix support for MPUs on non-XIP systems
      tests: getaddrinfo: fix stack overflow
      tests: pipe: fix error with optimization disabled
      kernel: increase workq sizes if COVERAGE=y
      testsuite: fix memory access
      newlib: fix user mode calls to _sbrk
      tests: cmsis_v2: don't hard-code stack sizes
      lib: cmsis_v2: set default dynamic stack size
      lib: cmsis_v2: increase stack sizes if coverage
      tests: cmsis_v1: properly set stack size
      lib: cmsis_v1: set stack size larger if coverage
      tests: timer_api: run in user mode
      tests: ethernet_mgmt: enable random generator
      tests: mqtt_publisher: enable random numbers
      tests: ieee802154: set min_ram
      kernel: adjust default main stack for riscv
      tests: stackprot: don't set main stack size
      boards: qemu_x86: properly enable XIP
      kernel: fix k_stack_alloc_init()
      kernel: timeout: add syscall for runtime clk freq
      samples: cmsis philosophers: adjust stack size
      samples: philosophers: pause before main() exit
      tests: tickless_concept: disable for coverage
      x86: add qemu_x86_coverage target
      requirements.txt: add gcovr
      doc: fix coverage report documentation
      tests: mutex_api: run in user mode
      kernel: init: exclude some funcs from coverage
      kernel: init: fix coverage gap
      kernel: init: exclude unreachable code
      kernel: allow k_sleep(K_FOREVER)
      tests: queue: test k_queue_alloc_*pend()
      kernel: idle: exclude no-op funcs from coverage
      lib: os: remove dead code
      tests: poll: expand userspace coverage
      tests: getaddrinfo: set newlib heap size
      tests: schedule_api: fix extern tstacks
      tests: schedule_api: exercise SCHED_MULTIQ
      tests: schedule_api: test syscalls from usermode
      tests: schedule_api: skip test assert if COVERAGE
      kernel: offsets: exclude from coverage
      tests: common: cover k_cycle_get_32() syscall
      tests: userspace: cover missing/bad syscalls
      tests: dynamic_thread: cover thread_idx_free()
      tests: userspace: cover z_object_recycle()
      tests: device: cover device_get_binding()
      tests: thread_apis: exercise some system calls
      kernel: exclude stubs from code coverage
      lib: os: fix vsnprintk coverage
      lib: os: exclude z_arch_printk_char_out()
      tests: sys_mutex: improve code coverage
      kernel: cover k_usleep() from user mode
      tests: futex: improve coverage
      x86: only use lfence if x86 bcb config enabled
      kernel: cover k_array_index_sanitize()
      kernel: delete k_futex_init()
      lib: os: fix slist code coverage
      kernel: test coverage for sflist
      tests: common: add tests for extra sflist APIs
      tests: mem_alloc: don't set main thread size
      arc: use different load instruction
      kernel: fix CONFIG_THREAD_NAME from user mode.
      tests: schedule_api: cover priority checks
      sanitycheck: extend coverage timeout
      sanitycheck: don't multiply CPU count
      sanitycheck: correct timeout extension comment
      sanitycheck: make coverage reports easier to do
      tests: json: improve code coverage
      tests: fatal: test failed assertion
      include: gcov: fix compilation error
      tests: fp_sharing: properly dump coverage data
      sanitycheck: workaround file limits
      drivers: ipm_console: increase coverage stack size
      tests: ipm: remove superfluous configs
      tests: crc: convert to regular test case
      doc: update coverage documentation
      sanitycheck: select gcov tool based on target
      x86: allow user mode to induce kernel oops
      tests: force stack canaries off for two user tests
      assert: generate oops if invoked from usermode
      userspace: add kobject flag for drivers
      mec1501: fix dts build error
      arm: don't use exc reason codes for internal state
      kernel: consolidate error handling code
      kernel: abolish _default_esf
      kernel: support log system for fatal errors
      arc: use z_fatal_error() for spurious IRQs
      arm: fix exception reason code for bad syscall
      arm: dump registers on fatal exceptions
      kernel: rename NANO_ESF
      sanitycheck: simplify fault detection
      tests: uart_basic_api: fix configuration
      tests: z_except_reason() policy from usermode
      x86: support very early printk() if desired
      userspace: set stack object earlier
      tests: increase main stack size for x86 with ztest
      x86: make guard pages ro instead of non-present
      x86: reserve room for per-thread page tables
      x86: add debug functions for dumping page tables
      x86: add functions to get/set page tables
      x86: report CR3 on fatal exception
      userspace: clarify k_mem_partition_add()
      userspace: adjust arch memory domain interface
      x86: use per-thread page tables
      x86: use a struct to specify stack layout
      kernel: add z_fatal_halt() to interface
      tests: clean up fatal error handlers
      kernel: remove log system support for fatal msgs
      x86: generate page tables at runtime
      x86: add prep_c function
      x86: ia32: do not use the first megabyte
      x86: add build assert that RAM bounds <= 4GB
      xtensa: mask interrupts earlier
      tests: fatal: increase robustness
      sys_sem: add build time definition macros
      libc: newlib: make sbrk() thread-safe

Andrew Fernandes (3):
      drivers: spi: nrfx: allow enabling DMA with the nRF52832 despite PAN 58
      drivers: spi: nrfx: fix a CMakeLists.txt bug introduced in e96673d
      adc: explicitly cast (const void *) to (const adc_driver_api *)

Andrzej Głąbek (20):
      ext: hal: nordic: Update nrfx to version 1.7.1
      drivers: pwm_nrfx: Correct prescaler value for undivided clock
      ext: nrfx: Reserve PPI channels and groups used by pwm_nrf5_sw driver
      ext: nrfx: Reserve PPI channels and groups used by Bluetooth controller
      bluetooth: controller: hal: Correct the bit mask of used PPI channels
      boards: nrf52840_pca10059: Configure NFC pins as GPIOs by default
      usb: kconfig: nrf52840: Enable REMOTE_WAKEUP option only when needed
      Revert ""drivers: usb: usb_dc_nrfx: Set cfg.en to false on Reset""
      drivers: usb_dc_nrfx: Add pre-transfer checks if endpoint is enabled
      scripts: dts: Add special handling of '+' in 'str_to_label' function
      scripts: dts: Add extraction of clock frequency for fixed clock
      drivers: usb_dc_nrfx: Use dedicated work queue for handling ISR events
      ext: hal: nordic: Update nrfx to version 1.7.2
      ext: nordic: Align nrfx_config_* files with templates from nrfx v1.7.2
      drivers: i2c_nrfx_twi: Make use of NRFX_TWI_FLAG_SUSPEND
      soc: nordic: Add HAS_HW_NRF_RADIO_IEEE802154  Kconfig option
      dts: nordic: nrf9160: Remove redundant aliases
      drivers: entropy: nrf5: Fix dependency of the enabling Kconfig option
      soc: nrf9160: Remove unsupported Kconfig option GPIO_AS_PINRESET
      drivers: gpio_nrfx: Correct the way the callbacks are fired

Andrzej Puzdrowski (36):
      dfu/boot: non-secure app support
      dfu/boot: Replace flash partitioning terminology
      drives/flash: use nrfx for nrf
      drives/flash: provide boundaries info for nRF9160
      tests/drivers/soc_flash_nrf: fix lack of disabled protection
      samples/drivers/soc_flash_nrf: enable nrf9160_pca10090 targets
      dfu: introduce progressive erasing
      usb/class/usb_dfu: support progressive image erase
      dfu/img_util: : non-secure app support
      boards/x86/qemu_x86: increase RAM size
      fs/nvs: fix startup for 2-sectors configuration
      tests/fs/nvs: GC full round test
      doc/reference/storage/settings: storage behavior description
      stats: fix Coverity CID :198875
      dfu/boot: double swap on interrupted revert bugfix adaptation
      dfu/boot: make swap_type optional
      drivers/flash: add read alignment requirement comment
      boards/qemu_x86: fix qemu memory map
      boards/qemu_x86: fix emulated program memory size
      drivers/flash/flash_simulator: switch to use DT_FLASH_SIM labels
      drivers/flash/flash_simulator: fix flash size calculation
      fs/nvs: preserve the previous ate searching
      fs/fcb: add API documentation to the header
      doc/reference: add FCB page
      tests/subsys/fs/nvs: init on full storage test
      fs/nvs: fix delete ate accommodation
      fs/nvs: fix initialization hang if sector is full
      fs/nvs: skip deletion on non existing entry
      tests/subsys/fs/nvs: entry delete test
      tests/subsys/settings/fcb: add check for target compatibility
      doc/reference/storage/settings: fix misleading examples
      doc/settings: doxygen for settings read callback method
      settings: align nvs read_callback return value
      tests/subsys/settings/fcb: deletion test
      tests/subsys/settings/fcb_int: add storage preparation
      tests/subsys/fs/nvs: extend entry delete test

Andy Doan (2):
      sanitycheck: Allow custom arguments for west-flash
      sanitycheck: Add a ""test-only"" option

Andy Ross (47):
      scripts/sanitycheck: Precompile test-time regular expressions
      arch/x86_64: Suppress spurious linker-generated code in the 32 bit stub
      arch/*: Add z_arch_irq_unlocked() predicate and test
      kernel/thread_abort: Swap, don't reschedule when aborting _current
      tests/kernel/fatal: Fix wait-for-interrupt delay in stack check test
      kernel/fatal: Clean up z_except_reason() fallback implementation
      kernel/sched: Don't reschedule inside a nested lock
      kernel/smp: Rename smp_init()
      include/drivers/system_timer.h: Clean up docs
      samples/boards/nrf52/power_mgr: Correct test integration
      samples/subsys/power/device_pm: Add test harness integration
      samples/subsys/usb/dfu: Set sanitycheck test to build_only
      sanitycheck harness: Correct ordered regex handling
      lib/os/mempool: Fix corruption case with block splitting
      Revert ""tests: tickless_concept: Fix slicing time measurement""
      kernel/timeout: Remove ""clock_always_on"", replace with ""SLOPPY_IDLE""
      drivers/timer/nrf_rtc_timer: Fix round-up for rapid tick rates
      tests/kernel/mem_pool: Fix timeout units
      tests: samples: Apps shouldn't set tick rate
      kernel: Crank up default tick rate
      boards/arm: Remove 1000 Hz tick rate on STM32 boards
      boards/arc: Remove tick rate settings for ARC hardware
      soc/arm: Increase nRF timer default to the cycle rate.
      soc/arm: Remove 1 kHz tick rate default for mcimx7_m4 and msp432p401r
      tests/kernel/sched/schedule_api: Fix slice time test for fast ticks
      tests/kernel/common: Fix uptime delta test for fast ticks
      tests/kernel/context: Fix sleep test for fast ticks
      drivers/sensor/hp206c: Clarify tick rate warning
      kernel/sched: Interpret zero timeslice time correctly
      tests/kernel/sleep: Fix usleep test for fast ticks
      tests/kernel/tickless/tickless_concept: Force 100 Hz ticks
      tests/kernel/early_sleep: Fix for fast ticks
      tests/kernel/workq/work_queue: Fix for fast/non-standard tick rates
      tests/posix/common: Adjust miscalibrated timing test
      tests/cmsis_rtos_v1: Correct timing assumptions
      CMSIS v2: Work around time unit confusion
      kernel/mempool: Fix ticks/ms confusion
      kernel/sched: Fix k_thread_priority_set() on SMP
      cmake: Remove check_link_map.py
      tests/kernel/sched/schedule_api: Fix static analysis volatile warning
      tests/kernel/fp_sharing: Fix static analysis warning
      tests/kernel/common: Fix dead code in sflist test
      arch/common: Provide a weak, generic z_arch_irq_connect_dynamic()
      arch/xtensa: Add z_arch_irq_is_enabled()
      tests/kernel/interrupt: Add a simple dynamic interrupt test
      arch/xtensa: Clean up fatal error handling
      kernel/mutex: Fix locking to be SMP-safe

Anton Gerasimov (1):
      arch: arm: fix ""template with C linkage"" in cmsis.h

Antony Pavlov (15):
      doc: application: fix duplicated word
      ext/hal/st/stm32cube/stm32l1xx: rename SVC_IRQn -> SVCall_IRQn
      dts: riscv32: rv32m1: fix reg value for cpu@1
      boards: arm: unify Nucleo-64 boards connectors image
      samples/drivers/watchdog: make it work on STM32
      boards/arm/olimexino_stm32: enable watchdog
      boards/arm/*/*dts: fix double whitespace in model property
      boards/arm/olimexino_stm32: fix compatible dt property
      boards/arm/mikroe_mini_m4_for_stm32: fix model&compatible dt properties
      treewide: fix typos
      boards/arm/olimexino_stm32: register led1
      scripts/checkpatch.pl: fix root dir detection and enable it
      dts: import vendor-prefixes.txt from linux kernel
      boards/arm/*stm32*: fix USB pinmux
      boards/arm/olimex_stm32_e407: enable USB

Armando Visconti (16):
      driver/audio: mpxxdtyy: Added support for 2 microphones (stereo)
      boards: 96b_argonkey: upgrade documentation using official info
      drivers/i2s_ll_stm32.c: (FIX) Avoid warning in LOG_ERR
      modules/hal_st: Add stmemsc HAL library
      driver/sensor: lis2dw12: make use of STdC definitions
      driver/sensor: add LPS22HH sensor support
      driver/sensor: lsm6dso: Add support
      boards/arm: Add arduino_header support to nucleo f401re and f411re
      boards: add support for shields x-nucleo-iks01a3
      sample/shield: add support to x-nucleo-iks01a3 shield
      driver/sensor: add STTS751 temperature sensor
      board/shields: x-nucleo-iks01a3: add STTS751 configuration in overlay
      sample/shield: x-nucleo-iks01a3: add support to STTS751
      dts: bindings: st,stts751-i2c.yaml: (FIX) Remove unused 'version' field
      driver/sensor/lsm6dso: Fix deprecated macros CS_GPIO_* to CS_GPIOS_*
      dts: stm32l4r5: (FIX) Provide clock info for spi3 controller

Arnaud Pouliquen (12):
      soc: stm32: add initial soc support for stm32mp1 family
      ext: hal: Enable support for stm32mp1xx hal
      ext: hal: add stm32mp1 exti ll driver
      dts: add declaration of stm32mp157
      drivers/interrupt_controller: stm32: add support of stm32mp1
      boards: arm: Add support for STM32MP157 Discovery board
      ext: hal: fix naming in rcc ll
      codeowners: add reviewer for stm32mp1 SoC
      board: remove useless config in Avenger96 board
      drivers: introduce ipm driver for stm32
      ipm: Add support for stm31mp1 Soc
      ipm: Add support for stm31mp157c_dk2 board

Arthur Crepin-Leblond (2):
      Bluetooth: gatt: Reuse existing handles from a previously added service
      Bluetooth: gatt: Fix DB corruption when adding/removing service

Asbjørn Sæbø (1):
      Bluetooth: Add log_strdup() to BT_ERR string arguments

Asger Munk Nielsen (5):
      bluetooth: Controller: Refactor node_rx footer to avoid ptr arithmetic
      Bluetooth: controller: Enable use of proprietary rx demuxing functions
      Bluetooth: controller: Enable use of user defined protocols
      Bluetooth: controller: Moved advanced settings in Kconfig
      Bluetooth: Controller: Test for user extensions

Augusto Hack (1):
      arch: common: gen_isr_tables table size check

Aurelien Jarno (9):
      ext: hal: atmel: import SAM E70 HAL revision B
      ext: hal: atmel: same70b: apply same patches than on rev A
      soc: same70: add support for revision B
      soc: same70: check for mismatch between chip and HAL CIDR
      boards: support the SAME70Q21B on the SAM E70 Xplained Board
      CODEOWNERS: Add codeowner for Atmel SAME70 HAL
      usb: move the request handler buffer to the USB device code
      usb: merge all request handler buffers
      usb: simplify request handlers code

Balaji Kulkarni (1):
      libc: minimal: Add bsearch function

Benjamin Lindqvist (2):
      drivers: nrf: Trigger STOP RX event and wait before disabling UARTE
      Power: Fix various spurious LOG_ERR calls

Benjamin Valentin (21):
      drivers: hwinfo: add driver support for Atmel SAM0 device ID
      soc: sam0: Enable generic peripheral selection
      net/icmpv4: Include icmp_hdr in callback
      net/icmpv4: Allow for arbitrary payload data in ICMP echo
      net/icmpv6: Allow for arbitrary payload data in ICMP echo
      net: shell: Improve the output of the ping function
      usb: sam0: Ensure API arguments are valid
      usb: sam0: Implement missing API functions
      ext: Import Atmel SAMR21 header files from ASF library
      soc: atmel: add SAMR21
      boards: atsamr21_xpro: Add SAM R21 Xplained Pro Evaluation Kit
      CODEOWNERS: Add code ownership for Atmel samr21 code
      soc: sam0: enable RTC for samd21, samr21
      soc: sam0: Make init code common between all samd2x SoCs
      cmake: gdb: use gdb-multiarch if ${CROSS_COMPILE}gdb is not availiable
      drivers: watchdog: sam0: Check if timeout is valid
      boards: enable i2c on the SAM R21 Xplained Pro board
      soc: sam0: add I2C to dts_fixup.h
      samples: nrf52: power_mgr: Fix build with prj_tickless.conf config
      drivers/uart: introduce SERIAL_SUPPORT_ASYNC option
      tests: drivers: uart: depend on SERIAL_SUPPORT_ASYNC for ASYNC test

Benoit Leforestier (6):
      C++: Fix compilation error ""invalid conversion""
      DTS: Add UART 5 for STM32F4 SOC
      API: Uart: Add support of 9 bits data length
      Driver: Uart: Add support of 9 bits data length for STM32
      Build: Build with newlib-nano c library
      codeowner: add codeowners for /test/lib

Bernard Lee (9):
      display: ili9340: Make reset gpio definition optional.
      display: ili9340: Add RGB565 pixel format support.
      display: ili9340: Adafruit LCD 1480 driver supports RGB565 pixel format.
      display: ili9340: Add support of Seeed 2.8"" TFT Touch Shield v2.0.
      samples: display: ili9340: Get ILI9340 device by DT label.
      samples: display: ili9340: ST NUCLEO-L476RG config file.
      samples: display: ili9340: Add support of RGB565 pixel format.
      samples: display: ili9340: Add 2 Arduino shield sample configurations.
      samples: display: ili9340: Document 2 Arduino TFT shield configurations.

Bosch Sensortec (4):
      include: added new sensor channel SENSOR_CHAN_GAS_RES
      driver: sensor: bme680 added support
      samples: sensor: bme680 added sample code
      dts : bindings : sensor : bme680 Added support for BME680

Bradley Bolen (30):
      cmake: Fix missing dependency
      shell: Fix checks of Kconfig options
      logging: Fix checks of Kconfig option
      tracing: Fix checks of Kconfig options
      arch: arm: Fix check of Kconfig option
      arch: arc: Fix checks of CONFIG_USERSPACE
      arch: arc: Fix checks of CONFIG_ARC_FIRQ
      arch: arc: Fix checks of CONFIG_STACK_POINTER_RANDOM
      arch: arm: Fix checks of CONFIG_USERSPACE
      arch: arm: Fix checks of CONFIG_IRQ_OFFLOAD
      arch: arm: Fix checks of CONFIG_ZERO_LATENCY_IRQS
      arch: arm: Fix checks of CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT
      arch: arm: Move irq_init.c to cortex_m specific directory
      arch: arm: Move thread_abort.c to cortex_m specific directory
      arch: arm: Move fault.c to cortex_m directory
      arch: arm: Move nmi code for Cortex-R support
      arch: arm: Move prep_c.c to common location
      arch: arm: Move header files to common location
      arch: arm: Move Cortex-M specific CPU defines
      arch: arm: cpu_idle: Remove unused functions
      drivers: interrupts: Add a set_priority callback
      interrupt_controller: gic: Add support for the GIC400
      Revert ""toolchain: gcc: Remove ref. to undefined sym. CONFIG_ISA_ARM""
      arch: arm: Add Cortex-R support
      arch: arm: cortex_r: Add memory barriers for register accesses
      arch: arm: Add Cortex-R4 support
      arch: arm: Add Cortex-R5 support
      soc: arm: xilinx_zynqmp: Add qemu based SoC
      boards: qemu_cortex_r5: Add qemu test board for the Cortex-R series
      cmake: emu: Allow overriding the qemu binary

Brett Witherspoon (32):
      net: fix errno returned without promiscuous mode support
      drivers: ieee802154: Make upipe configuration options depend on driver
      drivers: adxl362: use logger API
      ext: simplelink: import HAL from TI CC13x2 / CC26x2 SDK 3.10.00.53
      ext: simplelink: modify CC13x2/CC26x2 CCFG to use appropriate sections
      soc: ti_simplelink: add support for TI CC13x2 / CC26x2 series
      boards: cc26x2r1_launchpad: add support for TI CC26x2R LaunchPad
      boards: cc1352r1_launchxl: add support for TI CC1352R LaunchPad
      CODEOWNERS: Add codeowner for TI CC13x2 / CC26x2 files
      drivers: adxl362: don't skip mutex unlocking in error path
      drivers: adxl362: use Kconfig for interrupt mode
      drivers: adxl362: don't disable callbacks
      drivers: adxl362: check interrupt status
      drivers: adxl362: clear status independently and before mapping
      drivers: add CC13xx / CC26xx entropy driver
      boards: cc26x2r1_launchxl: enable TRNG entropy source support
      boards: cc1352r1_launchxl: enable TRNG entropy source support
      samples: add ADXL362 sensor sample application
      drivers: gpio_c13xx_cc26xx: fix control flow issue
      drivers: adxl362: fix control flow issue
      drivers: adxl362: fix acceleration sample conversion
      drivers: adxl362: rework temperature conversion
      drivers: add CC13xx / CC26xx I2C driver
      boards: cc26x2r1_launchxl: enable support for I2C
      boards: cc1352r1_launchxl: enable support for I2C
      drivers: adxl362: use burst transfer
      drivers: add CC13xx / CC26xx SPI driver
      dts: add CC13xx / CC26xx SPI bindings and nodes
      boards: cc26x2r1_launchxl: enable support for SPI
      boards: cc1352r1_launchxl: enable support for SPI
      soc: cc13x2_cc26x2: support setting CCFG values via Kconfig
      boards: cc1352r1_launchxl / cc26x2r1_launchxl: enable ROM bootloader

Bub Wei (2):
      samples: net: zperf: Add __packed for zperf_udp_datagram
      samples: net: zperf: Remove unnecessary main

Cami Carballo (3):
      tests: fdtable: add tests
      tests: base64: add tests for error paths
      tests: net: increase stack size

Carles Cufi (57):
      west: build: Use officially documented CMake options
      west: build: Add new pristine cmd-line and config option
      doc: extract_content: Allow for absolute paths in deps
      drivers: Bluetooth: Generalize IC-specific setup hook
      scripts: west: Run pristine.cmake directly instead of the target
      cmake: Split out board listing from usage
      west: Implement CMake helpers in scripts/west_commands
      west: Add a boards command
      west: build: Construct CalledProcessError with positional args
      west: boards: Use the new zcmake module name
      Bluetooth: controller: hal: Fix PPI macro naming
      west: Add bash completion file
      west: Add completion command
      doc: west: Document west installation in-depth
      boards: holyiot_yj16019: Remove counter from supported
      tests: counter: Enable nRF52810 testing
      kernel: Fix usage of CONFIG_SYS_CLOCK_EXISTS
      soc: nrf: Conditionally enable clock control and timer
      samples: basic: Add a minimal sample
      doc: coding style: Expand the list of keywords with braces
      cmake: Fix path handling for ZEPHYR_BASE
      doc: CMake: Locate Python executable before processing modules
      west: Use find_build_dir in run_common
      west: build: Configurable build folder format
      doc: extensions: Refactor cmake build instructions generation
      doc: Cleanup references to cmake
      doc: extensions: Default to 'all' in 'tool'
      Bluetooth: hci_uart: Use DT for the hci_uart UART
      Bluetooth: hci_uart: Assert if device is NULL
      west: runners: Guess build folder
      drivers: rtc: Adapt to new counter API
      cmake: Encode and decode in UTF-8 in build system
      west: Load CMakeCache.txt as a UTF-8 encoded file
      boards: nrf52840_pca10059: Enable ADC in DT
      samples: usb: console: Remove overlay file
      doc: getting_started: Add CMake snap installation option
      doc: getting_started: Document DTC version installation
      doc: getting_started: Remove Linux distro versions
      doc: Consolidate Python and pip documentation
      doc: Minor fixes to the Getting Started guide
      cmake: Instruct Python to use UTF-8 on Windows
      tests: mesh_shell: Optimize prj.conf to fit in nrf51
      samples: net: civetweb: Remove strcspn() implementation
      doc: guides: tools: Fix URL to nRF Command-line tools
      doc: Update Slack invitation link
      doc: getting started: Use -U when installing west
      doc: west: Fix west completion docs
      Bluetooth: controller: Ensure that a `case` statement is present
      Bluetooth: controller: Disable AE by default
      Bluetooth: samples: Reduce the bbc_microbit RAM usage
      tests: kernel: mutex: Require 32kB RAM when building with USERSPACE
      ext: hal: Make Nordic HALs a Zephyr module
      doc: relnotes: Bluetooth release notes for 2.0
      doc: Use west everywhere to build and flash
      tests: settings: Fix coverity issue CID 203623
      nvs: Fix deletion of the last entry added
      doc: release notes: 2.0 Kernel release notes

Carver Forbes (1):
      drivers/counter_cmos.c: Add config struct

Charles E. Youse (88):
      uart/ns16550, drivers/pcie: add PCI(e) support
      drivers/gpio_intel_apl.c: fix return value for gpio_pin_read()
      drivers/gpio/gpio_intel_apl: remove dependency on shared interrupts
      drivers/pcie: verify PCI(e) assigned interrupts
      boards/up_squared: declare myself King of the up_squared
      boards/galileo: adjust PCI-related configuration
      drivers/uart_ns16550: remove unnecessary #include
      drivers/pcie: add support to read wired IRQ configuration
      drivers/uart_ns16550: move UART configuration boilerplate to template
      drivers/uart_ns16550: enable auto IRQ detection for PCI(e) endpoints
      boards/x86/up_squared: move UART configuration to apollo_lake.dtsi
      drivers/uart_ns16550: fix style issues flagged by Zephyrbot
      arch/x86: CONFIG_BOOTLOADER_UNKNOWN renamed to CONFIG_X86_MULTIBOOT
      include/sys_clock.h: simplify _NEED_PRECISE_TICK_MS_CONVERSION
      include/sys_clock.h: consolidate identical branches in __ticks_to_ms
      boards/up_squared: remove CONFIG_SBL_FIXUP
      boards/up_squared: temporarily remove I2C support
      boards/up_squared: remove SBL-specific board configuration
      drivers/i2c/i2c_dw.c: templatize device configuration boilerplate
      drivers/i2c/i2c_dw.c: rewrite for PCI(e) support
      x86/apollo_lake: add I2C interfaces to devicetree
      boards/up_squared: I2C support added (back) in
      drivers/i2c_dw: update CODEOWNERS
      kernel/sched.c: refactor k_sleep() implementation for varied timescales
      kernel/sched.c: add k_usleep() API function
      tests/kernel/sleep: add tests for k_usleep() API
      soc/apollo_lake: boards/up_squared: move UART fixups to SoC
      boards/up_squared: soc/apollo_lake: devicetree default to status=""ok""
      boards/up_squared: soc/apollo_lake: enable UARTs per board, not SoC
      boards/up_squared: soc/apollo_lake: I2C driver selection at SoC
      soc/x86/apollo_lake: remove legacy PCI support
      boards/x86/gpmrb: add Gordon Peak MRB board
      arch/x86: add support for Multiboot boot information structure
      arch/x86: drivers/display: add framebuffer driver w/ multiboot support
      arch/x86: disable i8259 in crt0.S
      arch/x86: move MSR definitions to include/arch/x86/msr.h
      arch/x86: do not redefine MSR regs in crt0.S
      arch/x86: x2APIC support is not specific to jailhouse
      boards/x86_jailhouse: remove support for Jailhouse hypervisor
      arch/x86: add x2APIC-aware accessors for local APIC access
      drivers/loapic_intr.c: clean up local APIC access
      drivers/timer/loapic_timer.c: migrate to new local APIC accessors
      drivers/interrupt_controller/loapic_intr.c: enable x2APIC support
      drivers/pcie/shell: add basic probe for MSI-X capability
      arch/x86/Kconfig: remove CONFIG_IA32_LEGACY_IO_PORTS
      arch/x86/Kconfig: remove CONFIG_ISA_IA32
      arch/x86/Kconfig: remove CONFIG_CMOV
      arch/x86: split Kconfig files by sub-architecture
      arch/x86: split CMakeLists.txt into subarch-specific files
      arch/x86: reorganize core source files
      drivers/counter/counter_cmos.c: implement counter with PC AT ""CMOS"" RTC
      tests/drivers/counter: add test for counter_cmos.c
      arch/x86: remove CR4_PAE_DISABLE mask
      arch/x86: used fixed initial EFLAGS on thread creation
      arch/x86: remove old PRINTK() debugging macro
      arch/x86: relocate and rename SYS_X86_RST_* constants
      boards/x86/quark_d2000_crb: drop support for Quark D2000 dev board
      soc/x86/intel_quark: remove support for Quark D2000 SoC
      drivers/adc/adc_intel_quark_d2000: remove Quark D2000 ADC driver
      drivers/interrupt_controller/mvic.c: remove MVIC interrupt controller
      arch/x86: remove CONFIG_X86_FIXED_IRQ_MAPPING support
      drivers/timer/apic_timer.c: new local APIC timer for TICKLESS_KERNEL
      boards/x86/up_squared: default to new local APIC timer
      tests/kernel/context: add case for CONFIG_APIC_TIMER
      arch/x86: merge asm_inline_gcc.h with asm_inline.h
      arch/x86: clean up model-specific register definitions in msr.h
      arch/x86: move include/arch/x86/asm.h to include/arch/x86/ia32/asm.h
      arch/x86: move arch/x86/syscall.h to arch/x86/ia32/syscall.h
      arch/x86: move include/arch/x86/arch.h to ia32/arch.h
      arch/x86: move include/arch/x86/segmentation.h to ia32/segmentation.h
      arch/x86: remove arch-specific ffs.h, rely on compiler built-ins
      arch/x86: merge include/arch/x86/asm_inline.h into arch.h
      arch/x86: move include/arch/x86/sys_io.h to ia32/sys_io.h
      arch/x86: move 32-bit linker script to ia32/ directory
      arch/x86: update msr.h to be safe with CONFIG_X86_LONGMODE
      arch/x86: eliminate include/arch/x86/irq_controller.h
      arch/x86: move arch/x86/include/mmustructs.h to ia32/mmustructs.h
      arch/x86: eliminate arch/x86/include/asm_inline.h
      arch/x86: remove swapstk.h and references to it
      arch/x86: eliminate cache_private.h
      arch/x86: move exception.h to ia32/exception.h
      arch/x86: refactor kernel_arch_data.h
      arch/x86: refactor kernel_arch_thread.h
      arch/x86: move kernel_arch_func.h to ia32/
      arch/x86: refactor offsets_short_arch.h
      arch/x86: remove support for CONFIG_REALMODE
      thread.c: remove vestigial CONFIG_INIT_STACKS cruft
      doc: relnotes: x86-specific release notes

Charles Youse (6):
      include/uart.h: remove unused PCI references
      boards/x86/up_squared: update documentation to include HSUART info
      ethernet/eth_e1000.c: change to new PCI(e) functions
      interrupt_controller/loapic_intr.c: remove unused MPtables constants
      boards/x86/acrn: fix documentation to reflect ""demo"" nature
      drivers/pcie: do not verify configured IRQ

Chen Guokai (1):
      doc: update macOS specific guide for MacPorts

Christian Taedcke (5):
      board: efm32hg_slstk3400a: Add storage partition
      board: efm32pg_stk3402a: Add storage partition
      board: efm32wg_stk3800: Add storage partition
      board: efr32mg_sltb004a: Add storage partition
      board: efr32_slwstk6061a: Add storage partition

Christian Tavares (4):
      lib: updatehub: Add UpdateHub.io support
      lib: updatehub: add suport a CoAPS/DTLS
      lib: updatehub: add support ipv6
      samples: gui: lvgl: fix the nRF52840 pins to run sample

Christophe Priouzeau (6):
      manifest: update to latest hal_stm32 revision.
      drivers/i2c: Add support of stm32mp1
      drivers/pinmux: add i2c5 pinmux for stm32mp1x
      soc: stm32mp157: add I2c support
      boards: stm32mp157c_dk2i: add support of i2c5
      boards: stm32mp157c_dk2: add ic2 support for arduino connector

Christopher Métrailler (1):
      env: ignore unset var

Daniel Egger (2):
      samples: net: lwm2m: use real temperature values instead of dummy
      samples: net: lwm2m_client: If hwinfo interface is enabled, use it

Daniel Leung (8):
      tests/kernel/schedule_api: also test without time slicing
      tests/kernel/device: extends test for code coverage
      cmake: bump min SDK version 0.10.1
      x86_64: minimally preparing for enabling newlib
      cmake: use sdk-ng built toolchain for x86_64
      xtensa: fix CONFIG_NUM_IRQS if !CONFIG_*_LEVEL_INTERRUPTS
      doc: drivers: add diagram and clarify a note
      doc: fix files mis-named as PNG files

Danny Oerndrup (20):
      cmake: Toolchain abstraction: Introduce toolchain_cc_warning_dw_[1-3]
      cmake: Toolchain abstraction: Introduce toolchain_cc_warning_base
      cmake: Toolchain abstraction: Introduce toolchain_cc_warning_extended
      cmake: Toolchain abstraction: Added missing colon to some <at>Intent's
      cmake: Toolchain abstraction: Introduce macros for MISRA SANE flags
      cmake: Toolchain abstraction: Abstraction of implicit-int error flag
      cmake: Toolchain abstraction: Introducing toolchain_cc_freestanding
      cmake: Toolchain abstraction: Introducing macro toolchain_cc_imacros
      cmake: Toolchain abstraction: Introducing macro toolchain_cc_nocommon
      cmake: Toolchain abstraction: Introducing macro toolchain_cc_cstd_flag
      Kconfig: Introducing ARCH_CHOICE symbol for Architecture choice group
      cmake: Toolchain abstraction: Allow for out-of-tree cmake includes
      debug: tracing: Rewrite assert on current_thread in CPU stats module
      cmake: Toolchain abstraction: Abstract compiler flag for add debug info
      cmake: Toolchain abstraction: Abstraction of binary tools, foundation.
      cmake: Toolchain abstraction: Abstraction of print memory usage.
      cmake: Toolchain abstraction: Abstraction of binary tool, objcopy.
      cmake: Toolchain abstraction: Abstraction of binary tool, objdump.
      cmake: Toolchain abstraction: Abstraction of binary tool, readelf.
      cmake: Toolchain abstraction: Abstraction of binary tool, strip.

David B. Kinder (23):
      doc: add missing doc top labels
      doc: fix watchdog API documentation
      doc: fix mentions of Wi-Fi trademark name
      doc: add references to builds mailing list
      doc: fix devicetree doc formatting
      doc: fix malformed label in shields doc
      doc: fix typo in gpmrb doc
      doc: add google analytics tracking to docs
      doc: fix doxygen comments with embedded reST
      doc: fix Kconfig misspellings
      doc: fix misspellings in documentation
      doc: fix broken references to zephyr files
      doc: use @rst/@endrst for ReST in headers
      doc: simplify doc redirection messages
      doc: fix doxygen INPUT path; brand html output
      doc: add doc home link in left nav
      doc: update link from released doc to master
      doc: add sphinx-tabs extension
      doc: remove modernizr.min.js from RTD theme
      doc: add doc changes to release notes
      doc: replace with valid png images
      doc: add how to exit from QEMU in samples
      doc: remove next/previous chapter buttons

David Leach (1):
      logging: Fix misspelled CONFIG_RISCV32

Declan Traill (1):
      Settings: Fix incorrect return of -EINVAL for deleted entries

Dennis Wildmark (3):
      usb: bluetooth: l2cap buffer size now configurable
      DFU: img util: Fixed warnings when compiling with newlib
      dfu: mcuboot: Added defines for upgrade request modes

Derek Hageman (25):
      soc: sam0: Fix SAMD20 IRQ assignments
      drivers: spi: sam0: Implement DMA async API
      CODEOWNERS: Add ownership for SAM0 DMA driver
      drivers: pinmux: sam0: Remove defines from dts_fixup.h
      drivers: gpio: sam0: Remove defines from dts_fixup.h
      drivers: flash: sam0: Remove defines from dts_fixup.h
      drivers: watchdog: sam0: Remove defines from dts_fixup.h
      drivers: timer: sam0: Remove RTC defines from dts_fixup.h
      drivers: usb: sam0: Remove defines from dts_fixup.h
      soc: sam0: Remove SERCOM defines from dts_fixup.h
      drivers: adc: Add SAM0 ADC driver
      tests: drivers: adc: Add SAM0 support
      drivers: i2c: Add SAM0 I2C driver
      CODEOWNERS: Add ownership for SAM0 I2C driver
      drivers: gpio: sam0: Add interrupt support
      tests: drivers: uart: Fix async write abort test
      drivers: i2c: sam0: Fix missing break in speed setup
      Revert ""tests: drivers: uart: Fix async write abort test""
      tests: drivers: uart: Explicitly test incremental receive length
      include/uart.h: Clarify async receive event length
      drivers: counter: Add SAM0 basic counter support
      drivers: dma: sam0: Implement get_status API
      drivers: serial: sam0: Implement DMA async API
      drivers: sam0: Fix deprecated IRQ macro usage
      drivers: sam0: Fix deprecated instance macro usage

Emanuele Di Santo (7):
      boards: arm: nrf52840_pca10090: update log settings
      boards: arm: nrf52840_pca10090: add a GPIO reset line
      samples: bluetooth: hci_uart: update nrf52840_pca10090 config
      Bluetooth: hci: h4: use GPIO reset for nrf52840_pca10090 controllers
      boards: arm: nrf52840_pca10090: fix warning in board.c
      boards: arm: nrf52840_pca10090: swap error for assert in board.c
      Bluetooth: services: battery service enhancements

Erik Brockhoff (4):
      bluetooth: controller: Update slot reservation time calculation for ADV
      bluetooth: controller: Update to use new EVENT_IFS_US define
      bluetooth: controller: Add def's re. update to slot reservation calc
      bluetooth: controller: Fixing race re. adv disable in HDC

Erwan Gouriou (85):
      dts: stm32f412Xg: Factorize package definitions
      hal: stm32wbxx: Add HAL for the STM32WB series
      ext/hal/st: Adapt stm32cube folder to stm32wb introduction
      soc/arm/st_stm32: Add support for stm32wb soc
      dts/arm/st: Provide basis for stm32wb device tree
      drivers/clock_control: Add support to stm32wb series
      drivers/interrupt_controller: stm32: Add support for stm32wb series
      soc/arm/st_stm32: stm32wb: Add gpio support
      dts/arm/st: Add serial nodes on stm32wb
      drivers/pinmux: stm32: Add pinmux definitions for stm32wb (LP)U(S)ART
      boards: Add support for nulceo_wb55rg
      CODEOWNERS: Set owner to ext/hal/st
      CODEOWNERS: Add codeowner to dts/bindings/*/st,stm32
      ext/hal/st: stm32cube: Update License Link for stm23cube packages
      scripts/dts: globals: parse gpio-map properties for connector nodes
      drivers/serial: stm32: Optimize LPUART code
      drivers: serial: Enable LPUART for STM32WB
      boards: nucleo_wb55rg: Configure LPUART
      stm32: Remove redundant I2C variant Kconfig symbols definitions
      driver/i2c: stm32: Remove prompt on IP version symbols
      boards: disco_l475_iot1: create .dtsi connector file
      ext/hal/st: stm32cube Kconfig fix
      boards: nucleo_wb55rg: configure LPUART
      soc: stm32: Remove unused soc_register header file
      ext/hal/st/lib: stm32wb hci shared ram driver
      drivers/bluetooth/hci: Implement HCI driver for stm32wb
      ext/hal: stm32wb: Configure M0 FW in LL only
      include/arch/arm: linker.ld: Add shared memory sections definitions
      dts: stm32wb: Delete useless sram definitions
      boards: nucleo_wb55rg: Configure HCI driver
      drivers/flash: stm32wb: Add driver for stm32wb
      dts: stm32wb: Limit flash size to 812K
      boards: nucleo_wb55rg: Configure flash partitions
      drivers/flash: stm32wb: Add HSEM
      drivers/clock_control: stm32: Factorize series specific code
      drivers/clock_control: stm32: Split Kconfig file
      CODEOWNERS: Remove codeowners for /drivers/clock_control/*stm32f4*
      drivers/interrupt_controller: stm32: Rework stm32_exti_enable
      drivers/interrupt_controller: stm32: Remove unused code
      drivers: interupt_controller: stm32 Move exti_irq_table to const
      drivers: spi hci: Add spi dedicated rx thread
      soc/arm/st_stm32: Replace STM32 specific core selection option
      drivers/clock_control: stm32: Leftover from driver clean up
      soc: stm32: STM32L0: Remove useless package digit
      soc: stm32: STM32L4: Remove useless package digit
      soc: stm32: STM32WB: Remove useless package digit
      soc: stm32: STM32F2: Remove useless package digit
      soc: stm32: STM32F4: Remove useless package digit
      soc: stm32: STM32F7: Remove useless package digit
      boards: nucleo_wb55rg: Enable flash and debug with pyocd
      scripts: Upgrade pyocd for pack support
      soc: stm32f3: Delete obsolete FLASH_PAGE_SIZE Kconfig symbol
      west: Update hal_stm32 module to head following cube updates
      drivers/usb/device: stm32: Remove reference to unsupported low speed
      west.yml: Update hal_stm32 to fix I2C_SPEED_FAST redefinition
      soc: stm32f7: Fix fixup file for uart devices
      drivers/interrupt_controller: stm32: Fix table irq reading
      drivers: stm32: Fix leading space warnings
      west: Bump hal_stm32 to version supporting STM32H7 series
      modules: update stm32cube Kconfig with H7
      soc/arm: Provide basic support for STM32H7 series
      dts: STM32H747 basic device tree description
      drivers/clock_control: STM32H7 support
      drivers/interrupt_controller: stm32: Add support for stm32h7
      drivers/gpio: Add support on STM32H7 series
      drivers/serial: stm32: Add support for STM32H7 series
      drivers/pinmux: stm32: Add UART headers for STM32H7
      boards: Add stm32h747i_disco, C-M7 target
      soc: stm32h7: Add support for Cortex-M4 core
      dts: stm32h7: Add dtsi for m4 core
      drivers/clock_control: stm32h7: Disable configuration for CM4 core
      drivers/gpio: stm32: Add semaphore on gpio_configure
      boards: stm32h747i_disco: Add m4 target
      boards: stm32h747i_disco: Provide doc
      dts/arm/st: l0: Fix gpioe reg address
      boards: stm32h747i_disco: Fix picture size
      dts/arm/st: Remove nodes i2s4, i2s5 and i2s6
      drivers/gpio: stm32h7: Don't use HSEM_CR_COREID_CURRENT as process id
      stm32: clock_control: Enforce HCLK prescaler value
      boards: stm32h747i_disco: Enforce same clock configuration on both ...
      boards: stm32h474i_disco: Fix m4 core sys clock
      boards: nucleo_wb55rg: Add link to reference manual
      boards: stm32h747i_disco: Use default tick rate
      drivers/flash: stm32l4: Handle pages_per_bank for all variants
      samples: counter: Add err check on set_alarm call

Faisal Saleem (1):
      Settings: Improve error handling of settings load

Filip Kokosinski (11):
      dts: bindings: sram: add SiFive dtim0 bindings
      dts: riscv32: microsemi-miv: add flash and sram
      dts: riscv32: hifive1: add flash
      soc: riscv32: miv: soc.h: use defines from device tree
      soc: riscv32: sifive-freedom: soc.h: use defines from device tree
      riscv32: use device tree defines in linker
      drivers: serial: add LiteUART driver
      drivers: timer: add LiteX timer driver
      drivers: interrupt_controller: add LiteX interrupt controller driver
      soc: riscv32: add LiteX VexRiscV SoC
      boards: riscv32: add LiteX VexRiscV board

Findlay Feng (3):
      bluetooth: Fix an undefined behavior
      drivers: spi: Fix spi related files of stm32f1x
      drivers: gpio: add stm32f1x SWJ configuration

Flavio Ceolin (6):
      arch: all: Remove legacy code
      arch: all: Remove not used struct _caller_saved
      sanitycheck: Fix an error in scan_path exception
      security: kernel: Fix STACK_POINTER_RANDOM dependency
      x86: Make .rodata readonly
      libc: types: Remove wrong definition

Francisco Munoz (10):
      dts : Introduce gpio node entries for Microchip MEC
      drivers: gpio: Introduce microchip gpio driver
      soc : microchip_mec : Add gpio driver common definitions
      boards: microchip_mec: Introduce gpio to the eval board
      drivers: pinmux: Pinmux driver for Microchip SOCs
      soc: microchip_mec: mec1501 Add pinmux definitions
      boards: mec15xxevb_assy6853: Use the pinmux api
      boards: mec15xxevb_assy6853: Documentation improvements
      ext: hal: microchip:  Fix compilation issue in HAL
      boards: mec15xxevb_assy6853: Update debug control flag

Francois Ramu (11):
      soc: arm: st_stm32: Add STM32G071 SoC series
      drivers: flash: Add STM32G0XX flash support
      drivers: clock_control: Add STM32G0XX clock support
      drivers: pwm: Add STM32G0XX pwm support
      drivers: pinmux: Add STM32G0X pinmux support
      drivers: gpio: Add STM32G0X pinmux support
      drivers: interrupt_controller: Add STM32G0X interrupt support
      soc: arm: uart: Add STM32G0X UART support
      boards: arm: Add nucleo for nucleo_g071rb board
      dts: remove unused clock-controllers property #17122
      drivers: usb/stm32: use dts information to populate clock settings

François Delawarde (4):
      subsys/settings: Allow to register custom backends in settings subsystem
      subsys/settings: Use strncpy instead of strcpy in settings_runtime
      subsys/settings: Correct size in strncpy to avoid unterminated strings
      bluetooth: fix GATT database hash done too many times

Geoffroy Van Cutsem (1):
      boards/x86: scripts: build_grub.sh to use grub-2.04-rc1-17-g8e8723a6b

George Dima (1):
      boards: galileo: Fix PINMUX_FUNC_D for io_pin 9.

Georgij Cernysiov (13):
      drivers: counter: stm32: fix LSE clock source for not F4 SoC
      drivers: serial: stm32: remove forced RXNE clearance
      drivers: serial: stm32: add err_check
      drivers: serial: stm32: add serial hw flow control
      drivers: pinmux: stm32: add F4 RTS/CTS definitions
      drivers: pinmux: stm32: add L4 RTS/CTS definitions
      drivers: pinmux: stm32: reformat L4 pinmux
      drivers: serial: stm32: dts binding, and fixup for flow control
      drivers: pinmux: stm32: add F4 RTS/CTS definitions
      boards: arm: st, stm32: add jlink runner args
      boards: arm: disco l475 iot: correct documentation
      doc: guides: debugging: probes: correct J-Link usage
      drivers: rtc: stm32: correct tm_mon conversion

Greg S. Woods (1):
      entropy: fix C++ compiler warnings

Habib Zaid (1):
      soc: arm: stm32: Updated SRAM Region Definitions

Harry Jiang (3):
      board: stm32_min_dev: Add USB support
      board: stm32_min_dev: add the missing usb node
      fs/nvs: fix the sector size check

Henrik Brix Andersen (65):
      gpio: rv32m1: enable GPIO port clocks
      boards: rv32m1_vega_ri5cy: add STS LED to DTS
      boards: rv32m1_vega: fix I2C bus references
      sensor: fxos8700: add support for hardware reset pin
      interrupt_controller: rv32m1: fix intmux driver initialization priority
      drivers: i2c: rv32m1: add I2C driver for the RV32M1 RI5CY SoC
      boards: rv32m1_vega: enable the onboard I2C busses and FXOS8700 sensor
      samples: sensors: fxos8700: whitelist rv32m1_vega board
      boards: holyiot_yj16019: add support for the Holyiot YJ-16019 board
      drivers: led: ht16k33: add LED driver for Holtek HT16K33 LED driver
      scripts/dts: allow node to be child on one bus and parent on another
      drivers: gpio: ht16k33: add GPIO driver for Holtek HT16K33 LED driver
      samples: drivers: ht16k33: add sample application for the HT16K33
      drivers: i2c: mcux_lpi2c: add support for I2C_0
      ext: hal: nxp: mcux: add device and driver files for KE1xF series SoCs
      clock_control: introduce mcux pcc driver
      drivers: serial: uart_mcux_lpuart: add support for LPUARTs with two IRQs
      drivers: clock_control_mcux_sim: add support for clkout
      soc: arm: ke1xf: add NXP Kinetis KE1xF SoC series support
      boards: twr-ke18f: add support for the NXP TWR-KE18F board
      soc: arm: nxp: ke1xf: add RTC support
      boards: arm: twr_ke18f: add RTC to list of supported peripherals
      soc: nxp: ke1xf: enable code cache
      drivers: led: ht16k33: add missing variable initialization
      soc: nxp: ke1xf: add I2C support
      boards: arm: twr_ke18f: add I2C support
      tests: kernel: common: add missing userspace tag
      drivers: counter: mcux_rtc: allow setting a new alarm from the callback
      ext: segger: update to SystemView v2.52h
      boards: twr_ke18f: list hwinfo as supported feature
      tests: flash_map: configure MPU to allow flash writes on twr_ke18f
      ext: hal: nxp: mcux_lpspi: add support for NXP Kinetis LPSPI modules
      soc: nxp: ke1xf: add SPI support
      boards: arm: twr_ke18f: add SPI support
      tests: drivers: spi_loopback: add twr_ke18f configuration
      tests: benchmarks: latency_measure: use 0.1s sys clk tick for twr_ke18f
      boards: twr_ke18f: configure SPI CS pins as GPIO if not used for SPI
      drivers: adc: mcux_adc12: add driver for the NXP ADC12 module
      soc: nxp: ke1xf: add ADC12 support
      boards: arm: twr_ke18f: add ADC support
      tests: drivers: adc_api: add support for the twr_ke18f board
      drivers: adc: mcux_adc12: fix compilation
      drivers: can: add support for two CAN controller instances
      tests: drivers: can: api: add support for CAN_0
      dts: can: allow individual specification of prop seg and phase seg1 quanta
      drivers: can: add support for the NXP Kinetis FlexCAN controller
      drivers: clock_control: mcux_scg: add NXP MCUX SCG clock control driver
      soc: arm: nxp: ke1xf: enable MCUX SCG clock controller driver
      soc: nxp: ke1xf: add CAN support
      boards: twr_ke18f: enable CAN controller
      samples: drivers: CAN: add support for twr_ke18f board
      tests: drivers: can: stm32: determine CAN device at compile-time
      gitignore: ignore Emacs TAGS file
      samples: sensors: fxos8700: add polling support
      samples: sensors: fxos8700: add support for twr-ke18f board
      drivers: watchdog: mcux_wdog32: add driver for the NXP Kinetis WDOG32
      soc: arm: nxp: ke1xf: add watchdog support
      boards: twr_ke18f: document watchdog support
      boards: match specified jlink swd speed when using pyocd runner
      tests: board_shell: enable ADC shell
      drivers: can: flexcan: implement timestamp for RX frames
      drivers: clock_control: mcux_mcg: add driver for NXP Kinetis MCG
      drivers: pwm: mcux_ftm: use device tree for obtaining clock frequency
      soc: arm: nxp: ke1xf: add FlexTimer (FTM) module support
      boards: arm: twr_ke18f: add PWM LEDs

Henrik Malvik Halvorsen (1):
      drivers: sensor: Add ADXL362 interrupt handling

Howard Liu (1):
      doc: fix build command on Windows for VEGAboard

Håkon Øye Amundsen (5):
      cmake: remove incorrect statement from doc
      cmake: helper function for importing library
      net: mqtt: add mqtt_readall_publish_payload()
      kconfig: fix name of cmake function in help text
      scripts: kconfig: normalize paths to avoid duplicate

Ioannis Glaropoulos (140):
      soc: arm: sam3x: add MPU capability
      CODEOWNERS: code-owner for SAM3X
      CODEOWNERS: add code-owner for Arduino Due
      soc: arm: sam3x: minor fixes in soc.h and arm_mpu_regions.c
      boards: arduino due: default to building with MPU support
      tests: kernel: mem_protect: protection: fix test-case filter
      soc: arm: remove redundant CPU_CORTEX_M selection
      soc: arm: select CPU_HAS_SYSTICK in ARCH Kconfig
      soc: arm: rename CPU_HAS_SYSTICK to CPU_CORTEX_M_HAS_SYSTICK
      soc: arm: remove default selection of system timer for ARM platforms
      arch: arm: restrict IRQ lock to minimum during pendSV exception
      arch: x86: mmu: typo fixes
      kernel: mem_domain: update name/doc of API function for partition add
      arch: arm: drop FP full-access for builds without user mode
      arch: arm: disable automatic FP stacking in unshared FP registers mode
      arch: arm: remove FP-context from ESF in unshared FP registers mode
      arch: arm: remove _preempt_float in unshared FP registers mode
      arch: arm: remove FP activation in system boot
      arch: arm: clear FPSCR before main()
      arch: arm: add internal structure to ESF
      arch: remove unused tracing_arch.h
      arch: arm: fix ESF pointer in SecureStackDump()
      dts: nordic: add missing erase-block-size entry
      soc: arm: move z_clearfaults() in kernel_arch_init()
      arch: arm: remove redundant definitions of typeof
      arch: arm: print thread name in z_NanoFatalErrorHandler()
      dts: arm: add DTS binding for ARM MPU peripheral
      arch: arm: mpu: use DTS-defined number of MPU regions
      soc: arm: add ARM MPU node info and fixup for ARMv8-M SoCs
      soc: arm: add ARM MPU node info and fixup for Cortex-M7 SoCs
      dts: atmel: sam0: correct ARM Cortex-m variant in dtsi
      dts: arm: delete systick node from SoCs not having the SysTick timer
      tests: benchmarks: timing_info: fix start of swap time
      arch: arm: enable lazy state preservation at boot in FP sharing mode
      arch: arm: carve only basic stack frame at thread init
      arch: arm: extend use of arch.mode variable in FP sharing mode
      arch: arm: fp sharing: save & restore FP registers in context-switch
      kernel: init: use K_THREAD_STACK_SIZEOF when switching to main thread
      kernel: remove redundant #ifdef CONFIG_MULTITHREADING
      arch: arm: minor clean-up in interrupt stack size derivation
      arch: arm: add z_ prefix to _PlatformInit
      soc: arm: nordic_nrf: force platform-specific initialization
      arch: arm: mpu: move internal API inside arch/arm/cortex_m/mpu
      tests: kernel: userspace: explicitly declare function for the test
      arch: arm: mpu: remove arm_core_mpu_enable/disable internal API
      ext: hal: cmsis: Update ARM CMSIS headers to version 5.5.1
      arch: arm: userspace: don't subtract MPU guard from top of stack
      arch: arm: fix start of MPU guard in stack-fail check (no user mode)
      kernel: introduce k_float_disable system call
      arch: restrict FLOAT and FP_SHARING for x86 and Arm
      arch: implement arch-specific float disable routines
      tests: kernel: fp_sharing: call k_float_disable() for ARM
      doc: kernel: rework doc section of shared FP registers mode
      tests: benchmarks: timing_info: add user space tag
      scripts: gen_priv_stacks: remove unused variable
      CODEOWNERS: update code-onwers' list for gen_priv_stacks.py
      tests: kernel: userspace: correct address of thread priv stack start
      include: scripts: fix typos in priv_stacks.ld
      kernel: app_memdomain: remove unused defines
      tests: kernel: fatal: add HW stack check for priv stack
      tests: kernel: fatal: add explicit no user-mode test case
      arch: common: nocache: fix linker section definition
      arch: arm: re-organize thread stack macro defines in arch.h
      arch: arm: introduce macro to describe the privilege stack alignment
      tests: kernel: mem_protect: use correct define for MEM_REGION_ALLOC
      scripts: gen_priv_stacks.py: use the right alignment for priv stacks
      arch: arm: expose start/end limits of the thread priv stack section
      arch: arm: make priv stack guard programming similar to normal guard
      tests: kernel: fatal: add explicit test case for ARM and FP Sharing mode
      kernel: mem_domain: fix warning in ASSERT expression
      lib: libc: newlib: define USED_RAM_END_ADDR only where it is needed
      lib: libc: fix alignment of HEAP base address for ARM
      tests: kernel: submit a simple test for zero-latency irqs
      tests: kernel: arm runtime nmi: add arm tag
      tests: kernel: add simple test for the ramfunc feature
      arch: arm: allocate a wide stack guard for FP-capable threads
      arch: arm: allocate a wide priv stack guard for FP-capable threads
      arch: arm: mpu: program a wide MPU stack guard for FP capable threads
      arch: arm: rework stack fail checking for FP capable threads
      arch: arm: update thread options flag and CONTROL atomically
      doc: reference: float: document ARM thread tag recommendation
      tests: kernel: fatal: check stack overflow of FP capable threads
      arch: arm: mpu: minor fix to the start of the guard
      tests: remove redundant CONFIG_HW_STACK_PROTECTION=y setting
      arch: arm: allow user to fall-back to MPU-based guards in ARMv8-M
      tests: kernel: fatal: run test for ARMv8-M with MPU stack guards
      soc: nordic: nrf9160: add IPC capabilities
      userspace: minor typo fixes in various places
      arch: arm: userspace: correct inline comment for bad syscalls
      arch: arm: userspace: don't use the default stack in z_arm_do_syscall
      tests: kernel: move arm-specific kernel tests under tests/arch/arm
      tests: arch: x86: move static_idx under tests/arch/x86
      kernel: fix #endif quard error for k_float_disable
      arch: x86: make z_arch_float_disable return -ENOSYS if not supported
      tests: kernel: fp_sharing: move fp_sharing test
      tests: kernel: fp_sharing: add test for k_float_disable
      tests: kernel: critical: alternative test-case for SAM SoCs with WDT
      tests: arch: arm: contribute a test for arm swap
      tests: arch: arm: enhance swap test for FP sharing
      tests: arch: arm_thread_swap: add README file
      CODEOWNERS: adding code-owner for arch/arm test suite
      boards: arm: mps2_an385: clean up redundant Kconfig setting
      boards: arm: mps2_an521: add QEMU target and coverage
      boards: arm: mps2_an521: some trivial Kconfig fixes
      arch: arm: cleanup workaround for QEMU Cortex-M3
      tests: kernel: fp_sharing: increase robustness of float_disable test
      arch: arm: only allow OOPS and STACK_CHK_FAIL from nPRIV mode
      tests: kernel: userspace: fix test skipping for ARC
      dts: arm: nrf9160: minor typo fix
      soc: arm: nrf9160: add missing NRF_UICR definition
      tests: several tweaks for passing tests on qemu
      boards: arm: mps2-an521: fix number of MPU regions in DTS
      boards: arm: mps2_an521: adding support for qemu
      arch: arm: BusFault, NMI, and HardFault in Secure state when in test
      boards: arm: mps2_an521: force secure firmware image by default
      release: Zephyr 2.0.0-rc1
      doc: Release notes for v2.0 - initial (empty) draft
      ext: hal: nordic: fix type of NRF_FICR
      tests: lib: sprintf: filter-out MCIMX7_M4 platform
      tests: arch: zero_latency_irqs: fix ASSERT expressions with volatile
      tests: arch: arm ramfunc: fix ASSERT expressions
      tests: arch: arm_thread_swap: correct type in memset function call
      tests: arch: arm_thread_swap: fix ASSERT statements on volatile vars
      arch: arm: fault: fix check on recoverable fault flag
      soc: arm: stm32: fix sign of timeout variable
      drivers: entropy: nrf: fic minor typos
      drivers: sam: entropy: implement get_entropy_isr
      release: adding release notes draft for ARM architecture
      tests: arm: zero latency irqs: fix the derivation of free NVIC line
      tests: net: dns_addremove: increase main stack size
      manifest: update to use mbedTLS v2.16.2
      release: Zephyr 2.0.0-rc2
      arch: arm: be able to infer Z_ARCH_EXCEPT() for baseline SOCs
      tests: kernel: interrupt: make test work with any available NVIC IRQ
      tests: kernel: interrupt: stop excluding ARM platforms
      testsuite: allow disabling stack protection in usermode tests
      soc: arm: ke1xf: do not enable stack prot on tests with user mode.
      tests: kernel: replace CONFIG_USERSPACE with CONFIG_TEST_USERSPACE
      tests: exclude twr_ke18f platform from several user mode tests
      release: Zephyr 2.0.0-rc3

Ioannis Konstantelias (8):
      soc: stm32: Remove package digit for STM32L496XG
      boards: Change to new STM32L496XX symbol
      soc: stm32: Add STM32L496XE support
      drivers: pinmux: stm32l4: Add extra pin functions
      dts: pinctrl: stm32l4: Add alternative USART3 pair
      drivers: flash: stm32: Fix insufficient wait time
      drivers: flash: stm32l4x: Support SOCs with < 1MB
      stm32: pinmux: spi: Opt for lower power consumption

Jacob Siverskog (4):
      cmake: Prevent infinite recursion
      doc: dfu: Fix mcuboot reference
      doc: dfu: Fix module links
      doc: Fix typos in flashmap.h

Jakob Olesen (6):
      misc: Portable math_extras.h implementations.
      toolchain: Define a HAS_BUILTIN(x) macro in toolchain.h.
      misc: Implement math_extras.h function with GCC builtins.
      misc: Always test the portable version of the math_extras.h functions.
      misc: Replace uses of __builtin_*_overflow() with <misc/math_extras.h>.
      shell: Initialize va_list variables portably.

Jakub Rzeszutko (6):
      shell: prompt configuration during project generation
      arm: nrf: Add support for the nRF52811
      boards: arm: Add Nordic nRF52811 board
      shell: add select command
      shell: add test for new built-in command
      CODEOWNERS: update due to nickname change

Jamie McCrae (1):
      tests: net: lib: dns: dns_addremove

Jan Sturm (1):
      boards: stm32f4_disco:  added missing LED aliases

Jan Van Winkel (26):
      west: Renamed cmake.py to zcmake.py
      sanitycheck: Execute binary in output directory
      dts: posix: Add DTS support for POSIX architecture
      drivers: flash: Added native POSIX flash driver
      tests: Added native POSIX to flash based tests
      gui: Corrected RGB888 pointer in LVGL write function
      fs: Added API to read mount point
      native_posix: Added support to access flash via FUSE
      samples: fs: Added  FS shell sample
      gui: Move lvgl into a zephyr module
      dts: posix: Added dummy serial current-speed entry
      driver: display: Clarified blanking API
      drivers: ssd16xx: Removed blanking support
      drivers: sdl: Added support to set def pix format
      samples: fs: Added libfuse req. to fs shell README
      samples: fs: Corrected flash ctrl name in fs shell
      west: gui: Updated lvgl revision
      gui: Add support for lvgl API version 6
      gui: Disable LVGL features by default
      west: gui: Added support for lvgl API V6
      gui: Corrected paths in Zephyr to LVGL FS mapping
      samples: Corrected typos in updatehub sample
      native: Added dummy member to struct _thread_arch
      native: Set recommended stack size to 40 for 64 bit
      tests: mqtt Corrected memcmp in mqtt pubsub tests
      fs: fcb: Increase temporary buffer in fcb_append

Jim Paris (5):
      fs: add support for mount point listing on vfs root
      scripts/dts: Support 'io-channels' property just like 'pwms'
      dts/bindings: add '#cells' to nrf-saadc
      scripts/dts: add basic test for IO channel property
      shell: fix log output when CONFIG_LOG_IMMEDIATE=y

Joakim Andersson (63):
      CODEOWNERS: Fix missing '/' in codeowners file
      Bluetooth: controller: Remove incorrect comment
      Bluetooth: controller: Fix unknown rsp received during enc procedure
      Bluetooth: controller: Fix initialization of rl_idx and rpa_gen
      Bluetooth: controller: Fix pdu being overwritten while in use
      Bluetooth: controller: Copy the connect_ind into node_rx
      Bluetooth: controller: Fix compilation without broadcaster or observer
      Bluetooth: controller: Fix rx_ftr and extra overlapping memory
      Bluetooth: host: Fix gatt indicate when conn is NULL
      Bluetooth: controller: Fix scan request when advertising directed
      Bluetooth: GATT: Fix segfault discover descriptors all UUIDs
      Bluetooth: services: Move Heart rate service
      Bluetooth: services: Move health thermometer service
      Bluetooth: services: Move Current Time service sample
      Bluetooth: services: Move HID over GATT service
      Bluetooth: services: Delete unused IPSP sample
      Bluetooth: shell: Fix argument count of bt clear shell command
      kernel: lib: Add convert functions for hex strings and binary arrays
      Bluetooth: host: Move address string parsing to bluetooth API
      Bluetooth: smp: Add LE SC OOB support for central side
      Bluetooth: shell: Add support for LE SC OOB authentication in shell
      Bluetooth: Host: Fix advertiser state flags
      Bluetooth: SMP: Fix peripheral security request with authenticated keys
      Bluetooth: Keys: Fix logging assertions when enabling BT_DEBUG_KEYS.
      Bluetooth: Host: Move BT_DBG out of irq_lock
      Bluetooth: Settings: Fix generated identity not persistently stored.
      Bluetooth: Host: Fix bluetooth address string length
      Bluetooth: Host: Print error codes in hex
      Bluetooth: Host: Fix wrong init address when controller resolved address
      Bluetooth: Host: Fix bug in creating connection with wrong own address.
      Bluetooth: Controller: Fix privacy advertiser connect peer address type
      Bluetooth: SMP: Fix SMP identity distributing IRK for ID 0 always
      Bluetooth: SMP: Fix kernel crash if auth handler is NULL
      Bluetooth: SMP: Use error code for OOB data not available
      Bluetooth: controller: Fix assert in RPA timeout for advertiser
      Bluetooth: Host: Add identity addresses to conn info object
      Bluetooth: shell: Add info command to print connection information
      Bluetooth: shell: Handle error code of bt_conn_auth_cb_register
      Bluetooth: Shell: Use on-air addresses when checking for OOB data
      Bluetooth: Shell: Update sec level help text and validate input
      Bluetooth: SMP: MITM security possible without IO when OOB data present
      Bluetooth: Host: Improve shell OOB handling
      Bluetooth: Host: Add whitelist support in Bluetooth Host API
      Bluetooth: Shell: Add whitelist commands to shell
      Bluetooth: Host: fix missing interval_min copy
      Bluetooth: Host: Fix RPA timer not running
      Bluetooth: Host: Set Kconfig RPA timeout in controller
      Bluetooth: Host: Fix unable to connect using host resolution
      Bluetooth: SMP: Add option to treat debug keys normally during debugging
      Bluetooth: SMP: Add pairing failed reason
      Bluetooth: host: Pairing callback fail and complete for SSP
      Bluetooth: SMP: Stop new pairing early if MAX_PAIR has been reached
      Bluetooth: Host: Add error to security changed callback
      Bluetooth: Host: Add option to force pairing in bt_conn_security
      Bluetooth: Shell: Add force-pair option to bt security command
      Bluetooth: SMP: Re-pairing cannot lower the security level of the bond
      Bluetooth: Shell: Add pairing failed and complete to OOB handling
      Bluetooth: SMP: Give security changed when rejecting LTK
      Bluetooth: Host: Fix invalid pointer in bt_smp_pkey_ready
      Bluetooth: Host: Rename security level enum
      Bluetooth: Host: Rename API function to initiate bluetooth security.
      Bluetooth: Host: Rename long error codes
      Bluetooth: Host: Workaround for controller advertising data bug

Joao Cordeiro (2):
      drivers: ieee802154: nrf5: Support when LOG is off
      samples: bluetooth: peripheral: Fix RX buffer size

Johan Hedberg (45):
      Bluetooth: Mesh: Add error checks for scan start/stop
      net: buf: Remove wrong alignment annotation from NET_BUF_SIMPLE()
      Bluetooth: Fix return type for settings read callback
      CODEOWNERS: Add joerchan and remove sjanc for Bluetooth host paths
      Bluetooth: Mesh: Fix RPL storage timeout handling
      Bluetooth: Mesh: Fix postponing storage deadline indefinitely
      Bluetooth: Mesh: Fix missing implementation of Proxy SAR timeout
      Bluetooth: Simplify bt_gatt_notify_cb() API
      Bluetooth: Increase BT_BUF_USER_DATA_MIN to 8
      Bluetooth: Remove unnecessary HCI command data array
      Bluetooth: Remove unused bt_hci_get_cmd_opcode() function
      Bluetooth: Fix expiring RPA when different local identities are used
      Bluetooth: Mesh: Fix segmented message RPL behavior
      Bluetooth: Fix not using log_strdup() for bt_uuid_str()
      Bluetooth: Mesh: Fix missing protocol error timeout
      Bluetooth: Mesh: Fix Public Key mismatch error handling
      Bluetooth: Mesh: Rename reset_link() to reset_adv_link()
      Bluetooth: SMP: Make public key handling more robust
      Bluetooth: Fix public key callback management
      Bluetooth: Mesh: Generate new public key for each provisioning session
      Bluetooth: Mesh: Fix rejecting invalid remote public key
      Bluetooth: Mesh: Fix provisioning send error handling
      Bluetooth: Add dedicated pool for HCI_Num_Completed_Packets HCI event
      Bluetooth: Introduce separate pool for discardable events
      Bluetooth: Mesh: Move under subsys/bluetooth/mesh
      Bluetooth: Mesh: Move heartbeat sending to transport layer
      Bluetooth: Mesh: Fix checking for active heartbeat publication
      Bluetooth: Mesh: Fix heartbeat sending on Friendship established/lost
      Bluetooth: Mesh: Fix canceled buffer memory leak
      Bluetooth: Mesh: Fix not sending all segments through the Friend Queue
      Bluetooth: Mesh: Fix resending segments on correct bearer
      Bluetooth: Mesh: Fix canceling publication retransmission timer
      Bluetooth: Mesh: Fix starting IV Update when not on primary subnet
      CODEOWNERS: Add dedicated entry for Bluetooth Mesh
      Bluetooth: Fix missing doxygen markers for advertising options
      Bluetooth: Mesh: Introduce a helper for send callback finalization
      Bluetooth: Mesh: Fix reference count imbalance in bt_mesh_net_resend()
      Bluetooth: Mesh: Fix missing call to send_cb_finalize
      Bluetooth: Mesh: Remove unused code
      Bluetooth: Mesh: Fix adhering to the configured Friend Queue size
      Bluetooth: Mesh: Fix discarding messages with many segments
      Bluetooth: Mesh: Fix publication period timestamp initialization
      Bluetooth: Host: Fix failure handling with security level change
      Bluetooth: Host: Fix checking for sufficient encryption key size
      Bluetooth: UUID: Fix confusing documentation of bt_uuid_create()

Johann Fischer (35):
      usb: usb_device: fix set configuration request
      usb: usb_dfu: do not set bwPollTimeout dynamically
      boards: reel_board: enable pull-up on UART TX pin
      usb: usb_device: fix handlers call for secondary descriptor
      drivers: usb_dc_nrfx: cleanup logging and fix style
      drivers: apds9960: allow to disable Ambient Light Sense
      drivers: apds9960: make ALS and proximity gain configurable
      drivers: apds9960: make proximity pulse length configurable
      drivers: apds9960: allow additional LED current configuration
      tests: build_all: add TI HDC sensor
      sample: ti_hdc: whitelist reel_board and nucleo_l496zg
      usb: sort usb config data by section
      drivers: ssd1673: rename driver to ssd16xx
      drivers: ssd16xx: add defines to resolve coding style issues
      mempool: move BUILD_ASSERT to the end of K_MEM_POOL_DEFINE
      tests: usb: do not set device address
      drivers: usb_dc_nrfx: do not use NRF_USBD_EP_NR_GET in ep_is_valid
      drivers: usb_dc_nrfx: check the device state before disable or uninit
      drivers: usb_dc_nrfx: validate pointer in usb_dc_ep_is_stalled
      drivers: usb_dc_nrfx: use REQTYPE_GET_DIR and REQTYPE_GET_TYPE macros
      drivers: usb_dc_nrfx: fix style issues
      drivers: usb_dc_nrfx: cleanup USB_NRFX_EVT_QUEUE_SIZE
      drivers: usb_dc_nrfx: remove unused EPSTATUS defines
      drivers: usb_dc_nrfx: make macros names less confusing
      boards: nrf52840_pca10056: add arduino spi, uart and i2c nodes
      usb: do not disable endpoints at USB_DC_SUSPEND event
      samples: mesh_badge: fix font size
      usb: usb_descriptor: fix null pointer dereferences
      usb: cdc_acm: update state after RESUME event
      samples: cdc_acm: rework sample logging
      usb: loopback: use stack's request buffer for control requests
      usb: check if the request buffer is not too small
      usb: mitigate the check of request buffer length
      usb: increase the length of the request buffer
      usb: cdc_acm: enable CONFIG_CDC_ACM_IAD by default

Jose Alberto Meza (18):
      ext: hal: mchp: Fix compilation for MEC1501 SMB macros
      soc: arm: mchp: Add I2C to device tree for MEC1501
      dts: mchp: Add Microchip I2C SoC device tree
      drivers: i2c: mchp: Add I2C driver for MEC family
      boards : arm : Add I2C support for MEC15xx EVB
      CODEOWNERS: Add code ownership for Microchip XEC drivers
      API: espi: Add API for Enhanced Serial Peripheral Interface
      drivers: espi: Add Kconfig for eSPI driver
      dts: espi: Add dts bindings for eSPI
      dts: espi: mchp: Add dts bindings for XEC eSPI driver
      ext: hal: mchp: Fix compilation for MEC1501 HAL macros
      drivers: espi: Add driver for microchip XEC family
      samples: drivers: espi: Add eSPI driver sample app
      boards : arm : Add ESPI support for MEC15xx EVB
      boards: mchp: Fix MEC1501 dts warnings in eSPI
      soc: mchp: Add configuration option to switch timer drivers
      board: mec: Select cortex-M systick-based driver
      soc: mchp: Perform OTP override for 32KHz internal oscillator

Josef Gajdusek (2):
      drivers: usb_dc_stm32: Make pin remapping part of the device tree
      drivers: usb_dc_stm32: Reinitialize the write semaphores on bus reset

Jukka Rissanen (153):
      tests: net: pkt: Verify that net_pkt_write() writes correct data
      tests: net: all: Add more options to catch-all test
      net: if: Add access functions for network interface flags
      net: if: Only start the network interface during init if needed
      samples: net: dumb_http_server: Add net_pkt.h file inclusion
      samples: net: dumb_http_server: Check EOF while skipping headers
      CODEOWNERS: Update networking files
      net: core: In RX check if the pkt is for loopback interface
      tests: net: getaddrinfo: Fix test to check the query is sent
      net: arp: No need to check pkt for NULL
      tests: net: mqtt_publisher: Allow compilation in every platform
      net: Check device driver API pointer
      net: sockets: Add a way to register a socket family handler
      net: sockets: tls: Register handler for TLS sockets
      net: sockets: packet: Register handler for AF_PACKET
      net: sockets: can: Register handler for AF_CAN
      tests: net: socket: Add tests for socket family registration
      samples: net: can: Add missing tag to SocketCAN sample
      net: arp: Use proper dest hw address after receiving a request
      net: arp: Drop request where src hw address is our address
      net: ipv4: Allow UDP packets with broadcast dst address
      uart: native_posix: Add support for another serial port
      net: ipv4: Send multicast ICMPv4 reply with correct src address
      net: if: Select global IPv4 address if needed
      net: ethernet: Drop pkt if MAC dst is bcast address but IP is not
      net: shell: Indentation fixes for ping command
      net: shell: Remove leading underscore from parse_args()
      net: shell: Refactor help information for ping command
      samples: net: gptp: Fix compilation instructions
      drivers: console: Add support for log level option
      tests: net: socket: register: Close socket after test
      net: llmnr: Check that UDP header can be accessed
      samples: net: echo-server: Ignore the return value of close()
      net: socket: Add SO_PRIORITY support to setsockopt
      tests: net: udp: Add tests for SO_PRIORITY and setsockopt
      net: if: Fix null pointer deref when selecting IPv4 address
      net: utils: Print pkt address in net_pkt_hexdump()
      net: nbr: Set the link address type when saving neighbor data
      net: sockets: can: Add dispatcher
      samples: net: can: Add second RX socket receiver
      net: context: Set local address properly for AF_CAN connections
      net: shell: Print connection information properly for AF_CAN
      net: connection: The connection logic was not init properly
      net: sockets: can: Close the socket cleanly
      samples: net: socket: can: Close the socket periodically
      net: getaddrinfo: Query both IPv4 and IPv6 if family is AF_UNSPEC
      tests: net: getaddrinfo: Make sure we receive two queries
      net: Fix net_pkt_hexdump() to print pkt address properly
      net: ptp: clock: Create a dummy inline func for net_eth_get_ptp_clock()
      net: ethernet: Add net_eth_get_ptp_clock_by_index() function
      net: ptp: Add usermode support to net_eth_get_ptp_clock_by_index()
      net: ptp: clock: Add usermode support to ptp_clock_get()
      net: sntp: Ignore return value from close
      net: dns: Make dns_unpack_answer() to check non-compressed answers
      tests: net: dns: Add tests for dns_unpack_answer()
      net: if: Add syscall interface to IP address add and rm
      tests: net: if: Test userspace support in net_if
      net: if: Make IPv4 address const in removal function
      net: if: Add userspace support to IPv4 netmask set function
      net: if: Add userspace support to IPv4 gateway set function
      net: if: Make gateway address in net_if_ipv4_set_gw() const
      net: mgmt: Add info length to event wait API
      net: sockets: mgmt: Add AF_NET_MGMT address family support
      samples: net: sock: mgmt: Add network management socket app
      net: mgmt: Send event with info when applicaple
      tests: net: mgmt: Verify that info_length is correct
      net: utils: Add userspace support to net_addr_ntop/pton()
      tests: net: utils: Add userspace tests for net_addr_ntop/pton()
      samples: net: sock: mgmt: Print IP addresses for each event
      tests: net: socket: mgmt: Add unit tests for net_mgmt sockets
      net: socket: Add userspace support to setsockopt()
      net: socket: Add userspace support to getsockopt()
      net: socket: mgmt: Add setsockopt() and getsockopt() support
      tests: net: socket: mgmt: Add tests for get|setsockopt()
      tests: net: ip-addr: Avoid possible null pointer dereference
      net: Collect network packet TX send time
      net: socket: Add SO_TIMESTAMPING socket option
      net: shell: Show network packet TX transit times
      tests: net: tx_timestmp: Fix the tests
      samples: net: echo_server: Enable SO_TIMESTAMPING if needed
      net: mgmt: Remove L1 layer as that is useless
      net: sockets: Initialize IP socket addresses in getsockname()
      tests: net: socket: register: Do not close invalid fd
      tests: net: Increase stack sizes for coverage testing
      net: tcp: Adjust data length if TCP options are present
      net: llmnr_responder: Fix debug prints after receiving query
      net: mgmt: Add L4 layer and related events
      net: dns: Send net-mgmt event for DNS server add and del
      tests: net: dhcpv4: Make sure we get DNS add/del events
      net: ipv4: Drop pkt if src address is unspecified
      Revert ""libc: types: Remove wrong definition""
      tests: clib: Make sure ssize_t type is signed
      net: ipv6: Drop pkt if src address is unspecified
      tests: net: trickle: Adjust config options to avoid error prints
      net: ip: Helper for getting used network address family as string
      samples: net: echo-client: Start service in correct time
      net: pkt: Move everything up when pulling data
      net: ipv6: Fix fragmentation
      net: pkt: Allow larger packets for IPv6 fragmentation
      net: socket: userspace: Copy user specified value in getsockopt()
      net: ip: Add iovec and msghdr structs
      net: context: Use const for the IP address
      net: context: Add support for net_context_sendmsg()
      net: sockets: Add sendmsg() API
      tests: net: udp: Add tests for sendmsg() call
      net: Add support for TXTIME socket option
      tests: net: txtime: Add tests for SO_TXTIME and SCM_TXTIME
      net: ppp: Initial support for point-to-point protocol
      net: ppp: Add IPV6CP support
      cmake: Add serial port for ppp in qemu
      drivers: net: ppp: Driver for point-to-point protocol
      net: shell: Refactor network statistics printing
      net: shell: Add ppp network interface support
      tests: net: ppp: Add unit tests for PPP driver
      net: ppp: Allow delay of PPP protocol handshakes
      net: ppp: Reject unhandled protocols
      net: if: No need to set IP addresses etc for PPP
      net: pkt: Add net_pkt_write_le16() helper
      net: pkt: Add net_pkt_read_le16() helper
      samples: net: echo-server: Add PPP overlay config file
      net: ppp: Add proper support to receive Echo-Reply message
      net: ppp: Handle received Discard-Request
      doc: net: ppp: Add PPP documentation
      boards: Set support for serial port networking as netif:serial-net
      tests: net: context: Let the net_context cb to run first
      net: context: Clarify net_context_send() API documentation
      net: Move include files outside of extern ""C"" block
      net: sockets: Do not call NULL socket callback function
      samples: net: zperf: Use proper value in k_busy_wait()
      samples: usb: hid-cdc: Use proper value in k_busy_wait()
      net: context: Allow TCP to use sendmsg()
      net: context: sendmsg: Allow use of connected UDP sockets
      tests: net: sendmsg: Verify that connected UDP sock works
      doc: Add networking information to 2.0 release note
      doc: net: ppp: Enhance PPP documentation
      tests: net: udp: We need to reserve enough space for the data
      net: ipv6: Check sub-option length
      net: gptp: Avoid memcpy to same buffer
      samples: net: civetweb: Ignore return values
      sys: byteorder: Add support for sys_get_be64()
      tests: kernel: Add unit test for sys_get_be64()
      sys: byteorder: Add support for sys_put_be64()
      tests: kernel: Add unit test for sys_put_be64()
      tests: kernel: Add unit test for sys_put|get_be32()
      tests: kernel: Add unit test for sys_put|get_be16()
      tests: kernel: Add unit test for sys_put|get_le16()
      tests: kernel: Add unit test for sys_put|get_le32()
      tests: kernel: Add unit test for sys_put|get_le64()
      net: conn_mgr: Check IPv4 events against command
      net: mdns: Use 5353 source port when sending the query
      net: dns: Print info about the type of the DNS server
      net: dns: Check and parse received mDNS responses properly
      samples: net: dns: Do mDNS query always if mDNS is enabled

Jun Li (8):
      soc: stm32f4: add another pinmap for spi1
      driver: api: uart: remove exclusive config for async api
      west: fix import error on sign.py
      api: dma: fix issue of no-implemented reload
      soc: stm32f4: complete uart7's dts
      api: dma: add api to retrieve runtime status
      soc: stm32: enable outputing hex file
      board: nucleo_f429zi: add partitions to support mcuboot

Jun Qing Zou (1):
      net: lwm2m: support NET_SOCKETS_OFFLOAD in peer parsing

Jun Yang (7):
      sdhc: rename disk_access_sdhc.c
      dts/sdhc: support mmc dts and usdhc dts
      Kconfig: Kconfig support i.MX RT USDHC
      usdhc/pinmux: configure pinmux of usdhc on mimxrt1050 evk
      clock/usdhc: Enable clock of USDHC of i.MXRT
      usdhc: support NXP i.MXRT usdhc
      samples/fs: support fs demo on mimxrt_1050 evk board

Justin Brzozoski (1):
      mqtt: Allow client to override keepalive

Kamil Piszczek (31):
      Bluetooth: hci: adding AD types used for OOB pairing
      bluetooth: host: format specifier alignment
      drivers: flash: add flash_simulator driver
      tests: drivers: add flash_simulator driver
      drivers: flash: fix flash-simulator build crash
      boards: changing flash simulator device name alias
      drivers: flash: flash_simulator enabled by default on qemu
      tests: storage: flash_map: adding qemu platform
      boards: qemu_x86: reducing flash size
      driver: flash: flash_simulator: moved part of Kconfig to DT
      dts: flash simulator cleanup
      drivers: flash: simulator Kconfig cleanup
      tests: drivers: flash_simulator: removing CONFIG_ prefix from defines
      stats: extending api to handle statistics with more than 256 elements
      util: extending UTIL_DEC_N definitions
      drivers: flash: covering more flash page with stats sections
      stats: changed API to use zephyr types
      fs: nvs: format specifier alignment
      drivers: flash: flash_simulator: added max write calls param
      tests: fs: nvs: added basic unittests for nvs
      tests: fs: nvs: test cases clean up flash on completion
      tests: fs: nvs: garbage collector test
      drivers: flash: flash_simulator: added max erase calls param
      drivers: flash: flash_simulator: added max len param
      tests: fs: nvs: moving nvs_clear to setup method
      tests: fs: nvs: unittest with corrupted sector close op
      Bluetooth: extending API for OOB pairing
      Bluetooth: smp: adding LE SC OOB support for peripheral side
      settings: adding new nvs backend
      tests: settings: adding nvs backend configuration to functional tests
      fs: nvs: format specifier aligned with off_t type

Karl Zhang (7):
      arm: V2M Musca B1: Add Musca B1 SoC and board support
      boards: v2m_musca_b1_nonsecure: Increase flash size
      Revert ""boards: v2m_musca_b1_nonsecure: disable sanitycheck [REVERT ME]""
      drivers: ipm: mhu: Add MHU driver for V2M Musca
      sample: mhu: IPM MHU dual core on V2M Musca
      arm: Musca B1: Migrate to eFlash
      Musca B1: MHU: IPM MHU dual core on V2M Musca B1

Karsten Koenig (7):
      drivers: can: mcp2515: Add driver for MCP2515 CAN controller
      drivers: can: mcp2515: Rework for DTS SPI bindings
      samples: can: Added project configuration for MCP2515
      drivers: can: mcp2515: Fixes for DT SPI cs
      include: arch: riscv: rename global macro
      drivers: can: mcp2515: fix devicetree bindings
      boards: shields: link_board_can: status ok->okay

Kim Sekkelund (1):
      Bluetooth: Host: Find by type should accept 128bit UUIDs

Krzysztof Chruscinski (47):
      drivers: clock_control: nrf: Fix lfclk source settings for nrf9160
      drivers: counter: nrfx_rtc: Fix lack of interrupt when CC=0
      drivers: clock_control: nrf: add SYNTH LFCLK clock source
      shell: Add macros for creating conditional commands
      shell: Use conditional commands registeration in shell_cmds.c
      logging: Allow logger usage in C++ files
      lib: os: ring_buffer: Fix C++ compilation warning
      testsuite: ztest: Add zassert_within macro
      drivers: counter: Add optional (D)PPI wrapping to nRF RTC driver
      shell: Move signals initialization from thread to init
      dts: bindings: Document missing property boolean type
      drivers: counter: Move nRF TIMER and RTC configuration to device tree
      logging: Add string duplicates pool profiling
      drivers: counter: Add flags to counter_config_info structure
      samples: drivers: led_lp3943: Rename log module
      logging: Add option to detect missed transient string duplication
      tests: subsys: logging: Test for detection of missed log_strdup
      tests: subsys: shell: Add shell_history test
      ring_buffer: Add functions for getting capacity and reseting
      tests: lib: ring_buffer: Test for ring_buf_reset, ring_buf_capacity_get
      shell: Refactor shell_history to use less RW memory
      tests: shell: shell_history: Add more tests
      CODEOWNERS: Adding tests/subsys/shell codeowners
      shell: Fix shell uart not waking up shell on mcumgr data
      logging: Duplicate only strings from rw memory
      logging: Fix log_strdup detection on non-standard messages
      samples: drivers: counter: alarm: Fix compilation for nrf boards
      tests: drivers: counter: Add device name to zassert strings
      drivers: counter: Add helper macros for logging
      samples: drivers: counter: alarm: add nordic boards to the whitelist
      drivers: clock_control: API extension proposal
      ext: hal: nordic: Fix nrf_clock external clock source control
      drivers: clock_control: nrf: Add option to use external LF source
      drivers: sensor: temp_nrf5: Code cleanup
      drivers: counter: Fix references in the doxygen comment
      logging: Fix corruption in log panic when scheduler was active
      drivers: counter: Add optional flags to alarm configuration structure
      drivers: counter: Extend set channel alarm flags
      logging: Add header with common log backend functions
      logging: Add qemu_x86_64 backend
      logging: Removing redundant code from RTT backend
      logging: Removing redundant code from SWO backend
      logging: Removing redundant code from UART backend
      logging: Removing redundant code from xtensa sim backend
      logging: Clean up log.h dependencies
      settings: Fix missing kernel.h include
      bluetooth: host: Fix Kconfig error

Kumar Gala (172):
      release: Post-release patch level update
      ieee802154_kw41z: Fix build error with SYS_LOG_INFO
      ext/hal: stm32f0xx: Fix warnings for extraneous parentheses
      ext/hal: stm32f1xx: Fix warnings for extraneous parentheses
      ext/hal: stm32f2xx: Fix warnings for extraneous parentheses
      ext/hal: stm32f3xx: Fix warnings for extraneous parentheses
      ext/hal: stm32f4xx: Fix warnings for extraneous parentheses
      ext/hal: stm32f7xx: Fix warnings for extraneous parentheses
      ext/hal: stm32l0xx: Fix warnings for extraneous parentheses
      ext/hal: stm32l4xx: Fix warnings for extraneous parentheses
      samples: sensor: bme280: Convert code to use printk
      boards: acrn: remove duplicated Kconfig HAS_DTS
      dts: nordic: move flash/sram under SoC Node
      scripts/dts: Add support for enum's
      dts: bindings: usb: Add enum to maximum-speed property
      CODEOWNERS: Add codeowner for include/dt-bindings/usb/usb.h
      scripts/dts: Remove alias defines for bus parents with an alias
      dts: x86: Move ioapic node out of cpu container
      dts: x86: shring ioapic register size to 4k
      dts: atmel: Fix node name for device_id
      boards: atmel: Enable hwinfo as a supported feature
      scripts/dts: Fix issue in label generation of registers
      dts: nxp: nxp_rt: Fix unit-address for usb node
      scripts/dts: Remove alias defines for labels
      dts/bindings: Fix types in solomon,ssd1673fb.yaml
      dts/bindings: Fix type in spi-device.yaml
      dts/bindings: Fix nxp,kinetis-ptp.yaml
      dts/bindings: Remove generation from pinmux properties
      dts/extract: Remove bogus pinctrl generation
      dts/bindings: Move common properties into a base.yaml
      scripts/dts: Sort instance IDs by reg addr
      dts/bindings: Update soc-nv-flash to use base.yaml
      dts/binding: Cleanup a few new bindings for base.yaml
      scripts/dts: Change DT_<COMPAT>_<INSTANCE>_<PROP> define
      dts: Convert from DT_<COMPAT>_<INSTANCE>_<PROP> to DT_INST...
      dts/bindings: Rename stringlist to string-array
      dts/binding: Update compatible type in base.yaml
      dts: Convert new/missed DT_<COMPAT>_<INSTANCE>_<PROP> to DT_INST...
      drivers/uart_rv32m1_lpuart: Fix DT define usage
      dts/bindings: Add uint8-array type for ethernet mac address
      dts/bindings: Cleanup phy bindings
      drivers/i2c: Add missing HAS_DTS_I2C to sbcon
      drivers/i2c: Add missing HAS_DTS_I2C to nios
      scripts/sanitycheck: Add --cmake-only option
      dts/bindings: Remove pinctrl from bindings
      dts/bindings: Fix openisa,rv32m1-intmux binding
      dts: cleanup missing #{address,size}-cells
      dts/bindings: Add binding for riscv,cpu-intc
      dts/extract: Add ability to mark aliases as deprecated
      dts/extract: Fix IRQ alias define generation
      drivers: Update DT IRQ alias defines
      dts/extract: deprecate old IRQ alias define generation
      drivers/i2c_rv32m1_lpi2c: Remove accidently added debug code
      dts: Add concept of sub-nodes to YAML and generator
      tests/kernel/context: Fix TICK_IRQ define for RV32M1 lptmr_timer
      scripts/dts: Treat string-list always as a list
      scripts/dts: Treat array always as a list
      board: mps2_an385: Remove board.h
      drivers: rv32m1: remove bogus IRQ_PRI related defines
      sensor: lis2dh: Use general DT_<COMPAT>_BUS_<BUS> define.
      dts/extract: Remove 'use-prop-name' from cell and controller handling
      scripts/dts: Remove 'use-prop-name' from clock generation
      scripts/dts: Add ability to mark cell/ctrl defines as deprecated
      scripts/dts: Remove DT_CHOSEN generation
      samples: out_of_tree_board: remove board.h
      dts/bindings: remove 'use-prop-name' from bindings
      dts: Rename DT_.*_GPIO_* to DT_.*_GPIOS_*
      dts: Rename PWM to PWMS
      dts: remove unused clock-controller property
      dts: remove unused clock-controllers property
      boards: dts: Cleanup some ""ok"" -> ""okay""
      dts: Rename SW._GPIO_* -> DT_ALIAS_SW._GPIOS_*
      dts: Rename LED._GPIO_* -> DT_ALIAS_LED._GPIOS_*
      dts: lpc55s6x: Fix SRAM-X address
      dts: nxp_imx6sx_m4: fix cpu reg num
      dts: nios2: fix flash node name
      dts: silabs: fix gpio address
      arm: mps_an521: Add support for the AN521 on MPS2+
      boards: dts: cleanup partition node names
      dts/bindings: Fixup some clock bindings to match reality
      dts: Fix handling of fixed-clock
      dts/bindings: Add missing clock-cells property
      scripts/dts: Mark 'non-S' forms of cell and controllers as deprecated
      dts/scripts: mark all non DT_ prefix deprecated
      scripts/dts: deprecate DT_<COMPAT>_<INSTANCE ID>_BUS_<BUS>
      sensor: lis2dh: Fix stray use of old DT define
      dts: arc: fix cpu num
      scripts/dts: cleanup 'generation' usage
      dts/bindings: Remove generation from binding
      disk: sdhc: Fix use of deprecated DTS defines
      scripts/dts: Add option to generate only deprecated defines
      dts/extract: Mark DT_FLASH_AREA_*_LABEL defines as deprecated
      dts/bindings: Remove unused property num-irq-priority-bits
      dts: nxp: mimxrt: Add missing jedec-id property to flash nodes
      dts/bindings: remove stale cell_string
      dts/bindings: Remove unused required dts props from st,stm32-can
      dts/binding: Move clocks into base.yaml
      dts/bindings: remove required clock from intel,qmsi-watchdog
      dts/bindings: Mark rtc prescale as optional
      dts/bindings: Fix 'required' for interrupts
      dts/bindings: Mark uart current-speed as optional
      dts/bindings: Remove generation property from st,stm32-usb
      usb/stm32: Fix missing clock property for usb on stm32f103Xb
      dts: Remove unused virtualcom device node from dts
      dts/bindings: Mark 'rdc' as optional in nxp,imx-gpio
      dts/bindings: Fix category field for microchip,xec-i2c
      boards/arm/v2m_musca_b1: Add missing label to timer node
      dts/arm/microchip: Mark uart & i2c nodes as disabled by default
      native_posix: Remove reg property from uart node in dts
      dts/bindings: Remove version from litex,eth0.yaml
      dts/bindings: Make pwm-leds label optional
      cmake/dts: Remove import of CONFIG_ prefixed symbols from dts
      boards: cc3220sf_launchxl: Use SDK OpenOCD
      mec1701: fix dts build error
      nxp_imx: Fix dts build error
      dts/bindings: Cleanup microchip,xec-rtos-timer binding
      dts/bindings: Cleanup st,stm32-ipm-mailbox binding
      dts: Make instance defines consistent
      scripts/dts: Sort output of DT_COMPAT_ defines
      dts/nxp: Fix dtc warning with spi device node name
      scripts/sanitycheck: optimize disk usage for --save-tests
      cmake: Support SDK versions more broadly
      arc: snps_nsim: Fix -mfpu compiler flag for NSIM_HS build
      dts: arm: Remove device_type = ""memory"" from SRAM nodes
      dts: arc: Remove device_type = ""memory"" from {d,i}ccm nodes
      dts: riscv: Remove device_type = ""memory"" from SRAM nodes
      dts: nios2: Remove device_type = ""memory"" from SRAM nodes
      dts: pwm: nxp: Fixup bindings and dtsi so they build
      dts/bindings: Change clock type to compound
      scripts/dts/gen_defines: Cleanup write_prop for which props we process
      scripts/dts: Fix detection of a GPIO specifier
      dts/bindings: Remove unused snps,num-irq-priority-bits prop
      ci: Update to using SDK 0.10.2
      cmake: Bump min version to 0.10.2
      cmake/toolchain: Change to use riscv64 toolchain
      doc: sdk: Update docs to use SDK 0.10.2
      dts/gen_defines.py: Use err() instead of _err()
      lib/libc/min: Handle duplicate time definitions
      gpio: arm: cmsdk-gpio: Fixup dts binding / nodes
      dts/bindings: Remove #{addr,size}-cell props from st,stm32-timers
      dts/bindings: Mark #clock-cells as optional in nxp,kinetis-sim.yaml
      scripts/dts/edtlib.py: error check # and -map properties
      soc: microchip_mec: mec1501: Fixup GPIO dts defines
      dts: Add base interrupt-controller to dts bindings
      scripts/dts/gen_defines.py: Ignore 'interrupt-controller' prop
      dts: Add base gpio-controller to dts bindings
      scripts/dts/gen_defines.py: Ignore 'gpio-controller' prop
      dts/bindings: Add gpio-nexus base binding
      dts/bindings: Add base clock controller to dts bindings
      dts/bindings: Add required #pwm-cells property to pwm base
      dts/bindings: Update pwm base binding
      dts/bindings: cleanup partition binding
      dts: nxp: cleanup remove system-clock-frequency
      scripts/dts/gen_defines.py: Fix generation for multiple PWMs
      dts/bindings: add docs for enum to binding-template
      dts/bindings: Fix build issues with bindings
      scripts: openocd: Add error if hex file is missing when flashing
      dts/bindings: Fix ilitek,ili9340 reset-gpios property being required
      tests: net: lib: dns: dns_addremove: Increase stack size for FRDM-K64F
      soc: arm: mcimx6x_m4: Floating Point support required by default
      cmake: Build HEX files if flash runner is openocd
      ci: Update to using SDK 0.10.3
      drivers: espi: espi_mchp_xec: Fix wrong size type for status var
      doc: sdk: Update docs to use SDK 0.10.3
      cmake: Bump min version to 0.10.3
      scripts/dts/gen_defines.py: Fix generation for multiple IO Channels
      samples: usb: webusb: Mark harness as TBD
      samples: CAN: Add testing harness
      samples: nvs: Add testing harness
      samples: cdc_acm_composite: rework sample logging
      libc: Make libc-nano default for ARM toolchain if newlib
      doc: shields: frdm_kw41z: Add shield to header

Kwon Tae-young (5):
      soc: st: add STM32F415RG
      arm: Add support for MINI-M4 for STM32 Board
      boards: stm32f4_disco: Fix yaml ram size
      drivers: pinmux: stm32f3: Add SPI3, USB support of STM32F302x8
      drivers: i2c_ll_stm32_v1: add timeout

Laczen JMS (4):
      subsys/settings: change processing to const char
      subsys/settings: Update client modules
      subsys/settings: Enable handler ROM registration
      subsys/settings: Update bluetooth module

Leandro Pereira (1):
      drivers: hwinfo: Add support for ESP32

Loic Poulain (27):
      ext: mcux: csi: Fix wrong circular queue delta calculation
      soc: nxp_imx: mimxrt1064_evk: Add I2C support
      eth: eth_mcux: Register mDNS multicast address
      net: ethernet: Fix build issue with C++
      net: lib: Fix missing dns subdir include
      net: mdns_resolver: Fix malformed MDNS response
      boards: mimxrt1064_evk: Enable USB device controller 1
      drivers: usb: nxp: Fix board freeze with various USB classes
      usb: netusb: cdc_eem: Fix Interface select
      drivers: usb: nxp: Add cache management
      soc: nxp:rt: Add HAS_MCUX_GPT flag
      dts: arm: nxp_rt: Add GPT nodes
      drivers: counter: Add NXP MCUX GPT counter driver
      soc: nxp: rt: Enable mcux gpt when counter is enabled
      boards: mimxrt10xx: Add counter to supported list
      wifi: eswifi: Parse async messages
      wifi: eswifi: Allow nested locking
      wifi: eswifi: Implement TCP listen/accept
      dts: arm: nxp: rt: Add PWM nodes
      ext: mcux: Add HAS_MCUX_PWM config
      soc: nxp_imx: Add PWM config
      drivers: pwm: Add NXP MCUX PWM driver
      boards: mimxrt1064: Add PWM support
      boards: mimzzrt1064_evk: Add pwm-led0 alias
      sample: blink_led: Adjust PWM period
      dts: bindings: pwm: nxp: Fix missing copyright/license
      boards: arm: disco_l475_iot1: Enable MSI PLL mode for USB

Louis Dupont (1):
      net: lwm2m: Remove IPSO objects maximum number of instances limitation.

Lucas Peixoto (2):
      fs: implemented unmount function to fatfs
      disk: fixing the sending of commands with r1 response

Luiz Augusto von Dentz (80):
      Bluetooth: GATT: Skip ahead if handle is not within service handles
      Bluetooth: GATT: Fix iterating over requested handle range
      Bluetooth: Settings: Fix not allowing custom handlers without arguments
      Bluetooth: GATT: Store database hash
      Shell: Introduce shell_hexdump
      Bluetooth: Shell: Convert users of hexdump to shell_hexdump
      Bluetooth: shell: Make show-db print the total number of attributes
      Bluetooth: Shell: Add option UUID parameter to GATT show-db
      Bluetooth: Shell: Add GATT command get
      Bluetooth: Shell: Add GATT command set
      Bluetooth: GATT: Update read/write callback documentation
      Bluetooth: GATT: Fix usage of uint16_t instead of u16_t
      Bluetooth: GATT: Add support for static services
      Bluetooth: GATT: Add option to enable/disable database
      Bluetooth: Use BT_GATT_SERVICE_DEFINE whenever possible
      Bluetooth: GATT: Disable dynamic database by default
      Bluetooth: GATT: Fix typo in commments
      Bluetooth: GATT: Move GATT/ATT option to Kconfig.gatt
      Bluetooth: GATT: Rename BT_GATT_DB to BT_GATT_DYNAMIC_DB
      net: bt: Add multi-link support
      net: bt: Set NET_IF_NO_AUTO_START flag
      Bluetooth: shell: GATT: Make get command take a handle range
      Bluetooth: GATT: Fix not parsing result of Read by Type
      Log: Fix build error on Fedora 30
      Bluetooth: L2CAP: Move fixed channels to its own section in ROM
      Bluetooth: Add possibility to pass a user_data to conn_tx_cb_t
      Bluetooth: L2CAP: Add sent callback
      Bluetooth: shell: Add sent callback to L2CAP ops
      Bluetooth: L2CAP: Move Kconfig option to its own it own file
      Bluetooth: L2CAP: Add callback to notify status
      Bluetooth: shell: Print L2CAP channel status
      Bluetooth: GATT: Add bt_gatt_foreach_attr_type
      Bluetooth: GATT: Make use of bt_gatt_foreach_attr_type on bt_gatt_notify
      Bluetooth: shell: Make use of bt_gatt_foreach_attr_type
      Bluetooth: GATT: Add support to notify by UUID
      Bluetooth: conn: Defer bt_conn_tx callback to system wq
      Bluetooth: GATT: Disable flow control if running with POSIX_ARCH
      Bluetooth: GATT: Document the context in which callbacks are run
      Bluetooth: Shell: Fix having gatt unregister twice
      Bluetooth: Shell: Add gatt notify command
      Bluetooth: Fix BT_ATT_ENFORCE_FLOW
      Bluetooth: GATT: Fix using invalid handle
      Bluetooth: GATT: Fix assuming writes to CCC will always contain 2 bytes
      Bluetooth: GATT: Fix bt_gatt_foreach_attr_type
      Bluetooth: shell: Add number of matches to gatt show-db
      Bluetooth: L2CAP: Fix inverting of SCID and DCID on disconnect
      Bluetooth: ATT: Queue buffers on bt_att_send
      Bluetooth: ATT: Fix unbalanced use of k_sem_give
      Bluetooth: Make it safe to allocate buffers from TX callback
      Bluetooth: GATT: Fix bt_gatt_discovery with BT_GATT_DISCOVER_DESCRIPTOR
      Bluetooth: shell: gatt: Add discover command
      cmake: Set NO_QEMU_SERIAL_BT_SERVER when CONFIG_BT_NO_DRIVER is set
      Bluetooth: hci_prop_evt: Don't set NO_QEMU_SERIAL_BT_SERVER
      Bluetooth: tests: Add tests for UUID APIs
      Bluetooth: tests: Add tests for L2CAP
      Bluetooth: tests: Add tests for GATT
      Bluetooth: GATT: Fix registering on static service area
      Bluetooth: GATT: Make use of Z_STRUCT_SECTION_ITERABLE
      Bluetooth: L2CAP: Make use of Z_STRUCT_SECTION_ITERABLE
      Bluetooth: ATT: Fix bt_att_req_cancel clearing outstanding request
      Bluetooth: GATT: Fix not canceling on unsubscribe
      Bluetooth: GATT: Use atomic_t for subscribe flags
      Bluetooth: conn: Warn when blocking with K_FOREVER
      Bluetooth: Fix deadlock caused by blocking on syswq
      Bluetooth: Dispatch internal callbacks using RX thread
      Bluetooth: GATT: Fix assert when storying CCCs
      Bluetooth: GATT: Fix not clearing out of sync flag
      Bluetooth: GATT: Remove dead code
      Bluetooth: GATT: Fix dereference after NULL check
      Bluetooth: GATT: Add support for indicating by UUID
      Bluetooth: GATT: Fix using variable size storage for CCC
      Bluetooth: GATT: Fix bt_gatt_notify_cb documentation
      Bluetooth: conn: Add bt_conn_create_pdu_timeout
      Bluetooth: SMP: Fix invalid access if a buffer cannot be allocated
      Bluetooth: L2CAP: Fix invalid access if a buffer cannot be allocated
      Bluetooth: ATT: Fix att_op_get_type when client is disabled
      Bluetooth: ATT: Use timeout when allocating a buffer
      Bluetooth: Don't run SMP callbacks on syswq
      Bluetooth: ATT: Fix misleading warning
      Bluetooth: UUID: Add test for bt_uuid_create

Lyle Zhu (3):
      dts: riscv32: update flash controller compatibility property
      driver: flash: add flash driver for the RV32M1 SOC
      boards: riscv32: rv32m1_vega: enable MCUboot for ri5cy core

Maciej Zagrabski (1):
      drivers: stm32: Fix disabling EXTI subsystem

Maksim Masalski (4):
      samples: LSM6DSL accel fix unchecked return value sensor_trigger_set()
      tests: fix unchecked return value in test_net_pkt_basics_of_rw
      drivers: added break in function stm32_clock_control_get_subsys_rate
      samples: sample modified according to the changes in Zephyr macros

Manivannan Sadhasivam (20):
      ext: hal: st: stm32cube: Add HAL for the STM32L1x series
      soc: arm: st_stm32: Add STM32L1 SoC series
      drivers: clock_control: Add STM32L1X clock support
      soc: arm: stm32: stm32l1: Add UART support
      drivers: pinmux: Add STM32L1X pinmux support
      drivers: gpio: Add STM32L1X GPIO support
      drivers: interrupt_controller: Add STM32L1X EXTI support
      drivers: i2c: Add STM32L1X I2C support
      boards: arm: Add 96Boards WisTrio LoRa Tracker board
      CODEOWNERS: Add codeowner for 96b_wistrio
      pinmux: stm32f4: Add STM32_OSPEEDR_VERY_HIGH_SPEED to pinmux header
      boards: arm: 96b_stm32_sensor_mez: Enable I2S2 peripheral
      boards: arm: 96b_stm32_sensor_mez: Add DTS node for on-board MIC
      boards: arm: Add support for 96Boards Meerkat96 board
      drivers: pinmux: stm32mp1: Add missing UART4 and UART7 pinctrl definitions
      dts: arm: st: mp1: Add missing uart4 and uart7 pinmux nodes
      boards: arm: Add 96Boards Avenger96 board support
      scripts: dts: Match alpha numeric property values
      boards: arm: 96b_avenger96: Add onboard LEDs
      boards: arm: 96b_avenger96: Enable Mailbox support

Marc (1):
      Apply David's English corrections from code review

Marc Herbert (42):
      cmake: zephyr_cc_option(-fmacro-prefix-map=${ZEPHYR_BASE}=.)
      file2hex.py: new --gzip-mtime option that defaults to zero + test
      cmake: atomic rename to fix toolchain cache creation race
      sanitycheck: order results.csv and discards.csv deterministically
      git.cmake: let the environment override BUILD_VERSION
      extensions.cmake: add two cc/compile_options callgraph comments
      CMakeLists.txt: fix misleading logical_target_for_zephyr_elf comment
      gen_kobject_list.py: better comments and --help. Zero code change.
      CODEOWNERS: include/cortex_m/csme/ -> include/cortex_m/csme.h
      sanitycheck: clarify who spawns processes and threads and where
      sanitycheck: support symbolic links in ZEPHYR_BASE
      cmake: explain BUILD_VERSION and KERNEL_VERSION_*
      sanitycheck: when present, point at handler.log instead of run.log
      tests/bluetooth/tester: remove spurious CONFIG_GPIO=y
      extensions.cmake: don't leak absolute paths in snippets-*.ld comment
      sanitycheck: CONFIG_TEST_USERSPACE / userspace tag cleanup
      cmake: warn if inconsistency between CMAKE_SOURCE_DIR and ZEPHYR_BASE
      cmake: stop destroying intermediate link maps like zephyr_prebuilt.map
      CMakeLists.txt: -fmacro-prefix-map=${CMAKE_SOURCE_DIR}=CMAKE_SOURCE_DIR
      cmake: silence ""WARNING: ASSERTs enabled"" when CONFIG_TEST is true
      generated/cfb_font_dice.h: don't leak absolute paths in comment
      BOOT_BANNER: show KERNEL_VERSION and BUILD_VERSION differently
      tests: minor FCB re-ordering not to leave a random flash.bin behind
      sanitycheck: show handler_time in -v output (qemu 2.032s)
      doc: how to unset Clear Linux' CFLAGS and CXXFLAGS
      gen_relocate_app.py: make generated/linker_relocate.ld deterministic
      gen_app_partitions.py: make generated/app_smem_*.ld files deterministic
      Revert ""gen_app_partitions.py: make generated/app_smem_*.ld files deterministic""
      gen_app_partitions: deterministic _and_ decreasing app_smem_*.ld
      samples/**/external_lib: invoke $(MAKE) instead of make
      cmake: remove spurious IS_ABSOLUTE logic in zephyr_sources()
      sanitycheck: fix --jobs help message + other cosmetic fixes
      tests/net/ptp/clock: add 'userspace' tag
      subsys tracing: remove (uintptr_t) casts in snprintk and use %p
      doc: add space after cmake -Bdir and ninja -Cdir options
      sanitycheck: replace cmake -H ""not meant for public use"" with -S
      sanitycheck help: how to spot tests that were not run and just built
      sanitycheck: fix priority of --extra-args=CONFIG_ over testcase.yaml
      toolchain/zephyr: invoke ar with -D for deterministic .a files
      tests/net/: samples/net/: add a few 'userspace' tags
      Revert ""toolchain/zephyr: invoke ar with -D for deterministic .a files""
      tests/ /gen_inc_file: convert 4,5,6,7 enumeration to an interval

Marc Reilly (2):
      display: Add support for an ST7789V based LCD
      samples: display: add a simple sample for st7789v display

Marcin Niestroj (8):
      shell: add Ctrl+N and Ctrl+P meta-keys
      doc: shell: document Ctrl+N and Ctrl+P meta-keys
      sensors: lis2dh: support high resolution mode
      mcumgr: fix type of pointer passed to base64_decode
      mcumgr: select NET_BUF when MCUMGR=y
      scripts: openocd: allow to overwrite elf file used to flash device
      scripts: openocd: use hex file for flash command
      gpio: stm32: fix build for stm32l0x with no GPIOH

Marcin Sloniewski (1):
      requirements.txt: change package name ""hub"" to ""git-spindle""

Marcin Szymczyk (13):
      cmake: fix support for out of tree shields
      ztest: make priority of testing thread configurable
      usb: cdc_acm: SerialState notification full support
      usb: samples: mass: add configuration and fs for FLASH
      usb: cdc: Add unique PIDs for each sample
      usb: cdc: add .inf file
      usb: cdc: add option to force IAD
      usb: add zero-length packet after MPS-sized IN transaction
      usb: cdc_acm: fix typo in CDC_ACM_DEFAULT_BAUDRATE
      usb: cdc_acm: reset to default after disconnect
      logging: add frontend API
      logging: add frontend calls in log_core
      doc: add custom logger frontend description

Marek Pieta (4):
      bluetooth: hci_core: Remove misleading log
      bluetooth: Fix bt_conn->id handling
      Bluetooth: host: Fix bt_keys_get_addr()
      debug: tracing: Fix tracing hooks

Mariusz Glebocki (2):
      drivers: ethernet: Add LiteEth driver
      boards: litex_vexriscv: Enable LiteEth driver

Mariusz Skamra (13):
      Bluetooth: gatt: Fix foreach iteration of static attributes
      Bluetooth: controller: Workaround CPR procedure collision at CPU instant
      Bluetooth: gatt: Fix infinite read_by_uuid procedure
      Bluetooth: Add BT_SMP_ENFORCE_MITM option
      Bluetooth: shell: Fix L2CAP connect parameters count
      Bluetooth: tester: Enable Mesh Friend support
      Bluetooth: tester: Enable GAP writable device name
      Bluetooth: tester: Update to recent conn param related changes in BTP
      Bluetooth: tester: Change RPA timeout
      Bluetooth: GATT: Fix byte order for database hash
      Bluetooth: Shell: Fix unregister GATT Metrics vendor service
      Bluetooth: Mesh: Fix rejecting invalid remote public key
      Bluetooth: GATT: Add BTP Discover All Primary Services command handler

Mark Ruvald Pedersen (23):
      cmake: fix whitespace
      cmake: fix intent description of toolchain_cc_nostdinc macro
      cmake: Toolchain abstraction: introduce LINKER variable
      cmake: Toolchain abstraction: use LINKER, introduce toolchain_ld_base
      cmake: Toolchain abstraction: move LINKERFLAGPREFIX under GNU ld
      cmake: Toolchain abstraction: introduce toolchain_ld_baremetal()
      Bluetooth: controller: commentary and readability improvements
      cmake: Toolchain abstraction: build-id,gc-sections to toolchain_ld_base
      cmake: Toolchain abstraction: orphan handling in toolchain_ld_baremetal
      cmake: Toolchain abstraction: move symbol sorting into toolchain_ld_base
      cmake: Toolchain abstraction: introduce toolchain_ld_cpp
      cmake: remove unused ALIGN_SIZING_DEP
      cmake: whitespace alignment of syscall_macros_h
      cmake: change construct_add_custom_command_for_linker_pass into macro
      cmake: rename construct_add_custom_command_for_linker_pass macro
      cmake: configure_linker_script: accept argument with file extension
      cmake: simplify configure_linker_script: avoid deriving define from name
      cmake: move configure_linker_script to ld/target.cmake
      cmake: Toolchain abstraction: Introduce toolchain_ld_relocation macro
      cmake: Toolchain abstraction: move PROPERTY_LINKER_SCRIPT_DEFINES
      cmake: Rename kernel_elf to zephyr_final
      cmake: Toolchain abstraction: Introduce toolchain_ld_configure_files
      cmake: Introduce toolchain_ld_link_elf to abstract linker invocation

Mark Wang (6):
      ext: mcux: Import NXP SDK USB EHCI controller driver to ext/ directory.
      drivers: usb: nxp: add NXP EHCI USB device controller driver shim
      soc: nxp_imx: configure USB device EHCI controller driver for rt1050
      boards: mimxrt1050_evk: configure USB device EHCI driver for rt1050
      dts: nxp: nxp_rt: add usbd1 for rt1050 and works as default usb.
      boards: frdm_k64f: button_1 has no callback when button is released

Markus Becker (1):
      net: openthread: Allow DHCP configuration of OpenThread in Zephyr

Markus Fuchs (5):
      net: sntp: add missing __cplusplus check
      include: data: add missing __cplusplus checks
      include: json: reorder designated initializers
      fs/nvs: improve C++ compatibility
      soc: arm: st_stm32: add STM32F437XI

Marti Bolivar (66):
      README.rst: shorten it
      doc: guides: add ""Asking for Help"" guide
      doc: nrf52840_pca10059: re-work programming notes
      scripts: fix and tweak west boards
      west: build: use CMAKE_HOME_DIRECTORY to locate source
      scripts: flake8 cleanup for west build
      scripts: add helpers to west build for getting config options
      scripts: improve west build's board handling
      doc: re-word and extend west build documentation
      scripts: add --cmake-only to west build
      scripts: add build.generator config option for west build
      scripts: fix up west build verbosity levels
      scripts: add --dry-run flags to west build
      scripts: add --build-opt option to west build
      scripts: make west build -h fit on a screen
      doc: fix west boards tip
      scripts: west build: propagate verbosity to cmake generator
      doc: save ZEPHYR_BASE in more places where it's needed
      doc: updates for west installation docs
      doc: updates to west multi-repo docs
      doc: move sign command docs before catch-all page
      scripts: fix west TypeError on unknown arguments
      doc: trivial fix for lpcxpresso54114 doc
      scripts: avoid unnecessary 'west build --force'
      cmake: delete obsolete deprecation checks
      cmake: add helpers for setting board runners
      boards: allow cmake-time overrides of all runners
      scripts: west: improve error message on missing cache
      boards: nrf52_sparkfun: fix board.cmake
      doc: periodic updates to getting started guide
      doc: unify documentation on setting environment variables
      doc: clear up qemu + zephyr sdk interaction
      getting_started: changes for custom toolchains
      west.yml: update open-amp SHA
      scripts: runners: add __contains__ to BuildConfiguration
      scripts: west sign: make it work again
      scripts: west sign: code style refactor
      scripts: west sign: move hex and bin default locations
      scripts: west sign: improve user friendliness
      scripts: west sign: test for input file existence
      docs: update west sign docs
      scripts: runners: abstract jlink's missing program support
      scripts: runners: check for required programs
      scripts: fix pyocd runner --flash-opt help
      scripts: west_commands: fix help string
      scripts: runners: update ZephyrBinaryRunner docstring
      scripts: west_commands: decouple runners pkg from west
      scripts: tweak runner-related command output
      scripts: tweak west build output
      scripts: west_commands: improve run_common error handling
      scripts: remove runner related cruft
      doc: add a release notes page for west
      doc: move runner documentation out of west-apis.rst
      west: require v0.6.0 or higher
      scripts: un-break test_nrfjprog.py
      boards: nrf9160_pca10090: add default uart2 pins
      scripts: runners: improve hex file detection and output
      scripts: west flash: fix --board-id for pyocd
      doc: fix zephyr-app-commands for west
      doc: west: add some missing information
      doc: west: add v0.6.1 documentation
      doc: west: add tl;dr for moving to west and troubleshooting
      doc: split kernel reference toctrees
      doc: add summary table for kernel data passing
      doc: fix doxygen briefs for k_object_xxx APIs
      doc: change kernel reference toctree maxdepth to 1

Mateusz Holenko (5):
      dts: riscv32: hifive1: configure sram
      dts: riscv32: qemu_riscv32: configure sram
      dts: riscv32: qemu_riscv32: add flash
      dts: m2gl025_miv: configure flash and sram
      dts: riscv32: fix reg-names for liteeth

Matthew Koch (4):
      drivers: pinmux: stm32f7: Add LTDC pinmux entries to STM32F7
      stm32f7: Kconfig: soc: Enable GPIO ports F & G by default
      dts: stm32f7: Remove DTCM from sram0
      boards: stm32f7: Remove DTCM from sram0

Maureen Helm (21):
      mimxrt1060_evk: mimxrt1064_evk: Enable pyocd runner
      boards: mimxrt1015_evk: Fix board image
      scripts: west_commands: Print error message when jlink exe not found
      soc: riscv32: Use same clock freq for both rv32m1 cores
      arch: soc: riscv32: Separate soc offsets from soc context save
      dts: riscv32: Add rv32m1 zero-riscy core support
      boards: rv32m1_vega: Introduce zero-riscy configuration
      boards: rv32m1_vega: Use different openocd config file for each core
      CODEOWNERS: Add code owner for rv32m1_vega related files
      soc: riscv32: Move rv32m1 sram memory definitions to dts
      soc: riscv32: Move rv32m1 flash memory definitions to dts
      boards: mimxrt1060_evk: Enable mcux lpi2c driver and pins
      scripts: west: Add reset-after-load argument to jlink runner
      tests: flash_map: Configure mpu to allow flash write
      boards: shields: Introduce frdm_cr20a shield
      samples: net: Convert mcr20a samples to use the frdm_cr20a shield
      boards: lpcxpresso55s69: Enable pyocd runner
      tests: pwm_api: Use smaller pwm period cycles on k64-based boards
      doc: releases: Document boards added/removed in 2.0 release note
      doc: releases: Document major driver changes in 2.0 release note
      disk: Fix usdhc driver out-of-bounds array access

Michael Hope (1):
      drivers: dma: Add SAM0 DMAC driver

Michael Scott (69):
      drivers: modem: wncm14a2a: dont free packet on error
      drivers: modem: wncm14a2a: correct pinconfig assert check
      dts-binding: modem: wnc-14a2a: add label binding
      dts/bindings: introduce Arduino-header-R3 GPIO binding
      boards: arm: frdm_k64f: add Arduino header definition to DTS
      boards: nrf52840_pca10056: add Arduino header definition to DTS
      board: disco_l475_iot1: add Arduino header definition to DTS
      samples: lwm2m_client: cleanup shield overlay files
      cmake: add handling for shield config and shield/board overlays
      shields: introduce shield-based WNC-M14A2A modem setup
      drivers: modem: wncm14a2a: remove HW specific Kconfig settings
      boards: arm: frdm_k64f: don't use ETH if MODEM is enabled
      samples: lwm2m_client: re-add sanity check for WNC-M14A2A build
      dts: bindings: add modem binding for u-blox SARA-R4
      drivers: modem: introduce u-blox SARA-R4 modem driver
      boards: arm: frdm_k64f: add pinmux for SARA-R4 modem
      boards: shields: introduce SparkFun u-blox SARA-R4 shield
      boards: arm: particle_boron: enable SARA-R4 modem
      boards: arm: particle_boron: fix SARA-R4 gpio definitions
      net: openthread: fix off-by-one error in settings offset calculation
      boards: rv32m1_vega: add Arduino header information
      net: lwm2m: fix log_strdup missing errors
      boards: rv32m1_vega_ri5cy: set shell UART in DTS
      net: lwm2m: remove IP CONFIG checks in lwm2m_sprint_ip_addr()
      net: lwm2m: remove IP CONFIG checks in lwm2m_parse_peerinfo()
      net: lwm2m: fix error message in load_tls_credential()
      net: lwm2m: dont select MBEDTLS or set MBEDTLS options in subsys
      net: lwm2m: firmware: add log_strdup to remove logging errors
      sanitycheck: add west-runner parameter
      sanitycheck: handle west-flash dependency for device-testing
      boards: arm: nrf52840_pca10056/nrf52_pca10040: enable pyocd runner
      net: lwm2m: add custom TLS credential load function pointer
      net: lwm2m: use server record to set default observe notify timing
      net: lwm2m: remove data storage for IPSO Timer application type
      net: lwm2m: add missing application type to IPSO Light Control
      samples: net: lwm2m_client: set LWM2M_COAP_BLOCK_SIZE to 512
      samples: net: lwm2m_client: send temp value back to engine
      net: lwm2m: update function prototypes and descriptions
      net: lwm2m: remove unused multi_max_count field from obj_field
      net: lwm2m: remove unique lwm2m_engine_obj_delete_cb_t definition
      net: lwm2m: remove lwm2m_engine_obj from most handlers/formatter OPs
      net: lwm2m: rework resource instance storage / access methods
      net: lwm2m: add IPSO Buzzer object support
      net: lwm2m: add IPSO On/Off Switch object support
      net: lwm2m: add IPSO Push Button object support
      net: lwm2m: add Connection Monitoring object support
      net: lwm2m: add Location object support
      net: lwm2m: add IPSO Accelerometer object support
      samples: net: lwm2m_client: support for compiling in new objects
      net: lwm2m: add LwM2M path to engine_set errors
      net: lwm2m: cleanup memset usage during init
      scripts: dts: support multiple binding dirs in new scripts
      net: lwm2m: fix IP address max calc in conn mon obj
      drivers: modem: context helper: introduce modem context helper driver
      drivers: modem: interface: introduce UART interface driver layer
      drivers: modem: cmd handler: introduce cmd handler driver layer
      drivers: modem: introduce socket helper layer
      drivers: modem: ublox SARA convert to modem context
      drivers: modem: ublox-sara-r4: Support SARA-U2 modems, sense VINT
      drivers: modem: socket: sock_fd isn't an index in modem_socket_put()
      net: lwm2m: Kconfig: move RD_CLIENT settings above dependencies
      net: lwm2m: Kconfig: fixup default instance counts for bootstrap
      net: lwm2m: add missing bootstrap-finish handling
      samples: net: lwm2m: bootstrap support changes:
      net: lwm2m: plain text: fix float formatting
      net: lwm2m: plain text: expose put_float32/64 functions
      net: lwm2m: json: use plain text formatter for float32/64
      net: lwm2m: tlv: fix float32/64 sign handling
      net: lwm2m: firmware_pull: fix multiple last_block notifications

Michael Zimmermann (1):
      drivers: i2c: i2c_esp32: fix configuring speed

Mieszko Mierunski (11):
      drivers: nrf: Fix long receptions in UARTE async API.
      tests: uart: Add long tranfer test to UART_ASYNC_API.
      drivers: nrf: Add power management to nrf TWIM peripheral.
      drivers: nrf: Add power management to nrf TWI driver.
      drivers: nrf: Add power management to nrf SPIM driver.
      drivers: nrf: Add power management to nrf SPI driver.
      drivers: nrf: Fix PM for TWI and TWIM in case of multi instance
      tests: drivers: Fix coverity issue 198873
      drivers: uart: Fix incorrect len and offset in nrf UARTE async API.
      drivers: nrf: Fix RX timeout and ENDRX ISR handling.
      drivers: uart: Properly configure pins in NRF UARTE power management

Morten Priess (13):
      bluetooth: controller: Source code documentation of ticker
      bluetooth: controller: Minor refactoring in ticker.c
      bluetooth: controller: Added missing variable initializations
      bluetooth: controller: Moved library source for lll_test.c
      bluetooth: controller: Mayfly yield after call under Kconfig
      bluetooth: controller: Allow out-of-tree vendor specific HCI commands
      bluetooth: controller: Made BT_CTLR_RX_PRIO_STACK_SIZE non-hidden
      bluetooth: controller: Revised ticker for improved conflict resolution
      bluetooth: controller: Reverted revised ticker pending redesign
      bluetooth: controller: Moved ull_entropy_get to LLL
      bluetooth: controller: Revised ticker for improved conflict resolution
      bluetooth: controller: Fix for coverity CID 203524
      bluetooth: controller: Fix for uninitialized data compile error

Nathaniel Graff (8):
      runners/jlink: Add --tool-opt option for more args
      boards/riscv32: Add support for the HiFive1 Rev B
      soc/riscv32: Make clock init code common to SoC
      drivers/uart: Remove DTS fixups for SiFive UART
      dts/i2c: Remove id field from sifive,i2c0
      boards/hifive1: Add copyright and license to dts
      drivers/gpio: Remove DTS fixups for SiFive GPIO
      drivers/plic: Remove DTS fixups for RISC-V PLIC

Nicholas Lowell (1):
      Includes: #ifdef CONFIG_USE_SWITCH instead of #if to avoid undef warning

Nick Ward (1):
      drivers: can: mcp2515: Fix interrupt bit tests for empty TX buffers

Nicolai Glud (1):
      shell: adc: adc shell for testing adcs

Nicolas Pitre (97):
      test/net: fix PTP clock test code
      rand32_entropy_device.c: remove atomic_t misuse
      kernel/init.c: remove needless casts
      ROUND_UP/DOWN macros: cast the entire align argument
      thread_cpu: make it 64-bit compatible
      tests: cmsis_rtos_v1: remove cast abuses
      k_fifo/K_lifo macros: avoid unnecessary casts
      ARRAY_SIZE(): make it usable on 64-bit systems
      misc: memory address type conversions
      PTHREAD_MUTEX_DEFINE(): don't store into the _k_mutex section
      json: make it 64-bit compatible
      DEVICE_DEFINE(): properly align struct device instances
      linker generated list: explicit alignment on data definitions
      linker generated list: introduce Z_STRUCT_SECTION_ITERABLE()
      linker generated list: provide an iterator to simplify list access
      time_t: define using a fixed-width type
      string.c: make it 64-bit compatible
      Kconfig: introduce CONFIG_64BIT
      memslab/mempool: make tests 64-bit compatible
      net: make __net_buf_align 64-bit compatible
      INT_TO_POINTER macros: make 64-bit compatible
      pointer-type args: cast appropriately to be 64-bit compatible
      prf.c: make it 64-bit compatible
      k_stack: make it 64-bit compatible
      printk: make it 64-bit compatible
      prf.c: implement the ll length modifiers
      usb: enforce byte alignment on USB records
      include: misc: macros to perform word/pointer boundary alignment
      mem_slab: rationalize block alignment assertion
      mem_slab: enforce minimum alignment on statically allocated slabs
      log facility: make its arguments 64-bit compatible
      log facility: make its records 64-bit compatible
      log_msg test: rework test_log_std_msg() to better cope with 64-bit builds
      mempool: fix corruption of the free block bitmap and beyond
      gptp: don't cast pointers to ints
      sflist: SYS_SFLIST_FLAGS_MASK must be a long not an int
      mempool: properly use the inline free block bitmap
      mempool: don't over-size the free block bitmap
      malloc: no longer need to round mempool's max_sz
      cmake: toolchain_cc_imacros: don't use space separated arguments
      stdint.h: streamline type definitions
      lifo/fifo: first word is not always first 4 bytes
      mempool: make alignment/rounding 64-bit compatible
      mempool: fully use the inline free block bitmap on 64-bit targets
      mempool: make sure max block size isn't smaller than minimum allowed
      cmake: toolchain_cc_imacros: don't use the long argument form
      CMakeLists.txt: parse zephyr_stdint.h after compiler specific flags
      toolchain/xcc: augment compiler provided macros to match gcc and clang
      malloc: make sure returned memory is properly aligned
      test/bluetooth: sizeof() is not strlen()
      shell_history: align buffer to pointer size
      net/socket: use the iterable section object constructor/iterator
      test/msgq: adjust overflow test for 64-bit targets
      shell_history_test: make the test succeed on 64-bit targets
      Bluetooth: L2CAP: fix use of Z_STRUCT_SECTION_ITERABLE
      limits.h: streamline value definitions
      net: socket: mgmt: use uintptr_t for the nm_pid field
      test/usb: fix pointer type mismatch
      libc: fix memchr() prototype
      tests: subsys: settings: fix pointer mismatch on 64-bit targets
      print format: adjust specifiers to be compatible with a 64-bit build
      realloc(): fix possible memory leak
      sys/util.h: helper macro to perform pointer difference
      tests: usb: make 64-bit compatible
      prf.c: code and style cleanup
      prf.c: implement the ""hh"" length modifier
      prf.c: abstract output method call
      prf.c: don't be silent with unknown conversion specifiers
      prf.c: remove buffer limitation on field width and string copy
      prf.c: remove buffer limitation on field width and padding for integers
      prf.c: remove buffer limitation on precision and padding for floats
      prf.c: remove arbitrary large stack buffer usage
      prf.c: fix display of float exponent >= 100
      prf.c: fix wrong results with %g conversion
      prf.c: properly format INF/NAN/zero with prefix
      prf.c: handle denormals properly
      realloc(): struct sys_mem_pool_block is word aligned
      native_posix: fix hw_irq_ctrl_get_irq_status() conflicting type
      arch/posix: 64-bit build flags
      native_posix: introduce a native_posix_64 board configuration
      tests: enable native_posix_64 testing
      mempool: significant reduction of memory waste
      Z_ISR_DECLARE: ensure proper alignment on 64-bit targets
      cpp: support for 64-bit constructors
      mempool: simplify the logic for sizing the free block bitmap
      m2gl025_miv: workaround for issue #17851
      tests/cmsis_rtos_v1: relax timing check a bit
      tests/cmsis_rtos_v2: exclude m2gl025_miv due to tick rate conflict
      riscv32: rename to riscv
      riscv: make core code 64-bit compatible
      riscv: isr.S: fix a missing lw to LR conversion
      LOG_BACKEND_DEFINE(): use Z_STRUCT_SECTION_ITERABLE()
      tests: fatal: make sure the illegal insn occupies a full word
      drivers: sifiv: make them 64-bit compatible
      riscv: freedom: rename RISCV32 to RISCV
      riscv: toolchain arguments for a 64-bit build
      riscv: add a qemu_riscv64 board

Nikos Oikonomou (5):
      sensors: renamed hdc1008 driver into ti_hdc
      sensors: ti_hdc driver wait conversion support
      sensors: ti_hdc now supports 1050 versions
      sensors: ti_hdc simplified ti_hdc_channel_get
      samples: added sample for ti_hdc

Oleg Zhurakivskyy (14):
      cmake: clang: Make clang pick -T option on linking
      doc/getting_started: mention ZEPHYR_TOOLCHAIN_VARIANT=llvm
      cmake: clang: Allow host's clang to be used for native_posix
      toolchain: Do not pollute TOOLCHAIN_HOME
      cmake: Set TOOLCHAIN_HOME for Zephyr's SDK
      cmake: llvm: Make the setup for host installed clang easier
      cmake: clang: Detect host installed clang
      cmake: clang: Don't unconditionally use gcc's fortify
      cmake: clang: Provide toolchain_cc_nostdinc() macro
      cmake: clang: Fix comment
      posix: cmake: Abstract freestanding options
      boards: native_posix: Add llvm to supported toolchains
      compiler: clang: Don't link libgcc for native_posix
      cmake: llvm: Invalidate toolchain capability cache

Parthiban Nallathambi (2):
      wifi: eswifi: init net_pkt cursor after net_pkt_write
      wifi: eswifi: add UDP support

Patrik Flykt (4):
      net/ip/dhcpv4: Set source IP address in DHCP Request
      net: ethernet: Set NET_ETH_PTYPE_ARP for IPv4 link local packet type
      net: ethernet: Send sender IP address in ARP announce packets
      scripts/coccinelle: Add script for counting identifier length

Paul Sokolovsky (54):
      net: sntp: Handle case of request timeout
      samples: sntp_client: Elaborate sample to workable state
      net: sntp: Add sntp_query() function with fractional precision
      arch: x86: fatal: If possible, print thread name in crash dump
      testsuite: Include thread name in crash dump for tests
      tests: socket: misc: Add tests for inet_pton()
      libc: minimal: Define time_t and suseconds_t
      libc: minimal: Introduce sys/_timeval.h
      posix: Move gettimeofday declaration to <sys/time.h>
      posix: sys/time.h: Add workaround for outdated newlib used by Xtensa
      CODEOWNERS: Add entry for lib/libc
      net: socket: Define NI_MAXHOST for compatibility
      net: socketutils: Add utils to manipulate network address strings
      net: sntp: Add convenience API for one-shot SNTP query
      samples: sntp_client: Switch from sntp_request() to sntp_query()
      samples: google_iot_mqtt: Switch from sntp_request() to sntp_query()
      samples: google_iot_mqtt: Explicitly cast socklen_t to int in printf
      net: getaddrinfo: Implement initial handling of host == NULL
      ext: mbedtls: Don't define MBEDTLS_PLATFORM_NO_STD_FUNCTIONS
      libc: minimal: Implement exit()/_exit() functions.
      tests: mbedtls: Call mbedtls_platform_set_printf() only if needed
      tests: benchmarks: mbedtls: Fix printf args
      ext: mbedtls: Enable easy integration with POSIX API
      net: getaddrinfo: Parse numeric IPv4 addresses
      tests: net: getaddrinfo: Add cases for numeric IPv4 addr
      include: arch: arc: Minor punctuation fix
      net: sockets: Make NET_SOCKETS_POSIX_NAMES depend on !POSIX_API
      posix: unistd.h: Add gethostname()
      posix: Move sys/stat.h to minimal libc
      posix: struct timespec: Move definition to sys/_timespec.h
      posix: time.h: Add workaround for outdated newlib used by Xtensa
      posix: mqueue.h: Move O_CREAT and friends to fcntl.h
      posix: unistd.h: open() doesn't belong here
      libc: minimal: time.h: Don't (re)define struct timespec.
      scripts: dts: Consistently open text files with utf-8.
      posix: Add headers related to BSD Sockets API
      lib: posix: Use ""posix_subsys"" as the CMake lib for the subsystem.
      CMakeLists.txt: Call toolchain_cc_nostdinc() at the end
      libc: minimal: Add headers as system includes
      lib: posix: Switch to use zephyr_interface_library_named cmake directive
      tests: posix: No longer use target_include_directories
      net: dns: dns_pack: Properly access type and class fields of an answer
      net: dns: dns_pack: Revamp FQDN parsing in answers
      samples: shell: fs: README: Typo in ""pkgconfig"" name.
      posix: pthread_create: Ignore retval of pthread_mutex_init() calls
      modules: Kconfig.tls-generic: Remove duplicate ""select""
      include: posix: sys/socket.h: Export MSG_* constants.
      include: posix: Add poll.h header
      posix: fs: ZFD_IOCTL_CLOSE: Be sure to call posix_fs_free_obj()
      tests: posix: test_fs_file: Cut down on noise output
      tests: posix: fs: Add test for (no) leak of file descriptors
      posix: pthread: pthread_cond_timedwait should accept absolute deadline
      posix: pthread: pthread_mutex_timedlock should accept absolute deadline
      samples: net: sockets: Allow to build and test with POSIX subsys

Pavel Kral (2):
      shell: fs: add dependency on kernel allocator
      drivers: serial: uart_rtt: Virtual UARTs over RTT channels

Pavlo Hamov (3):
      boards: stm32_min_dev enable I2C_2
      boards: stm32f429_disc1: add i2c
      drivers: i2c: Add STM32F10X slave support

Pawel Dunaj (5):
      bluetooth: host: Save id when allocating CCC cfg slot
      bluetooth: host: Use correct identity when direct advertising
      bluetooth: host: Unref conn on direct adv start error
      include: sensor: Add position change channel
      include: sensor: Allow sensor private attr/chan/trig

Peng Su (1):
      kernel: ignore z_fatal_halt() from code coverage

Peter A. Bigot (69):
      drivers: timer: nrf: remove unnecessary event feature
      doc: clarify behavior of k_poll_signal_raise on error
      soc: arm: nordic_nrf: change default SYS_CLOCKS_PER_SEC
      soc: arm: nordic_nrf: unrevert provide custom busy_wait implementations
      Bluetooth: controller: remove duplicated code
      boards: nrf52840_papyr: support nrfjprog flash runner
      dts: misc: add SKY13351 SPDT switch description
      boards: arm: particle_*: enable PCB antenna on startup
      drivers: adc: add API to support calibration
      Bluetooth: gatt: avoid assumptions about characteristic handles
      Bluetooth: central_hr: use new API to get value handle
      scripts/dts: fix support for uint8-array property values
      drivers: eth_enc28j60: update for dts change to local-mac-address
      drivers: eth_mcux: update for dts change to local-mac-address
      drivers: eth_stellaris: update for dts change to local-mac-address
      cmake: DT: Add support for overlays that reference board-provided dtsi
      boards: particle_*: move DTS includes to dts subdirectory
      boards: arm: particle_*: uncomment cs-gpios in spi assignments
      subsys/fb: correct last character in vtiled fonts
      scripts: gen_cfb_font_header: correct last character
      scripts: gen_cfb_font_header: correct command sanitization
      Revert ""sys/util.h: helper macro to perform pointer difference""
      libc: minimal: provide types in time.h
      libc: minimal: provide gmtime implementation
      sys: timeutil: add module
      tests/lib/timeutil: add tests for time conversions
      samples: add board customization for native_posix_64
      subsys/cfb: correct font definition macro for linker script
      dts: add label property to all jedec,spi-nor nodes
      subsys/fs: add implementation helper module
      subsys/fs: remove FS_FLASH_STORAGE_PARTITION
      subsys/fs: fix log messages requiring strdup
      drivers/spi_nor: remove configurability of page/sector/block sizes
      drivers/spi_nor: remove write-block-size devicetree property
      drivers/spi_nor: allow application control of flash layout page size
      boards/particle_*: correct spi flash description
      boards/arm/nrf52840_pca10056: add alias for external flash
      samples/drivers/spi_flash: fix device naming
      samples/drivers/spi_flash: add board overrides
      subsys/storage/flash_map: detect missing flash device
      tests/subsys/settings/functional: ensure settings area is cleared
      tests/subsys/settings/functional: test external flash
      dts/spi-nor: use bytestring for JEDEC ID
      drivers/spi_nor: fix writes across page boundaries
      drivers/spi_nor: enable logging API
      subsys/fs: hide non-public API
      subsys/fs/shell: clean up nffs mount diagnostics
      subsys/fs/shell: add statvfs command
      samples/subsys/fs: move existing test into fat_fs
      sys/sem.h: fix path to atomic.h
      libc/minimal: fix reproducibility of gmtime
      CODEOWNERS: add owner for subsys/fb
      subsys/cfb: improve font structure packing
      scripts: gen_cfb_font_header: remove guard and make font data private
      scripts: gen_cfb_font_header: modify to replicate cfb fonts
      libc: minimal: add strspn and strcspn support
      drivers/adc: provide API to access reference voltage
      drivers/spi_nor: fix writes across page boundaries
      drivers/spi_nor: de-pessimize reads
      subsys/fs: clean up CMakeLists
      subsys/fs: add support for littlefs
      samples/subsys/fs/littlefs: add a basic sample
      subsys/fs/shell: add littlefs support
      subsys/fs/shell: avoid warning about output format truncation
      tests/subsys/fs/littlefs: add tests
      subsys/fs: remove ambiguity in readdir results
      subsys/fs/littlefs: allow customization of file system configuration
      lib/libc/minimal: Refined handle duplicate time definitions
      doc/reference/drivers: document device-specific API extensions

Peter Bigot (35):
      boards/efr32mg_sltb004a: use crystal instead of RC oscillator
      include/net: additional cleanup for extern ""C"" use
      include/bluetooth: rearrange for standard use of extern ""C""
      include/dfu: rearrange for standard use of extern ""C"" in private headers
      include: rearrange for standard use of extern ""C"" in various headers
      include/posix: rearrange for standard use of extern ""C""
      include/lvgl: rearrange for standard use of extern ""C""
      drivers: rearrange for standard use of extern ""C"" in private headers
      west/littlefs: update to upstream v2.1.1 release
      doc/drivers: correct number of initialization levels
      arch/riscv: rearrange for standard use of extern ""C""
      subsys/fs/littlefs: fix Coverity issues
      logging: avoid buffer overrun extracting arguments
      subsys/testsuite: rearrange for standard use of extern ""C""
      samples/subsys/logging/logger: rearrange for standard use of extern ""C""
      subsys/debug/tracing: rearrange for standard use of extern ""C""
      lib/libc: rearrange for standard use of extern ""C""
      arch/x86: rearrange for standard use of extern ""C""
      soc/arm/xilinx_zynqmp: clean up use of extern ""C""
      soc/arm/arm: rearrange for standard use of extern ""C""
      soc/arm/ti_lm3s6965: remove unnecessary extern C block
      arch/arm: rearrange for standard use of extern ""C""
      soc/arm/silabs_exx32: clean up use of extern ""C""
      soc/arm/nxp*: rearrange for standard use of extern ""C""
      arch/common: rearrange for standard use of extern ""C""
      arch/xtensa: rearrange for standard use of extern ""C""
      arch/nios2: rearrange for standard use of extern ""C""
      arc: rearrange for standard use of extern ""C""
      drivers/timer/nrf_rtc_timer: clarify intent of ZLI compensation
      lib/newlib: revert treatment of libc files as system includes
      tests: add C++ 17 standard library test
      tests/kernel/sleep: relax upper bound to support additional delays
      doc: relnotes: add littlefs file system support
      doc: relnotes: document change in toolchain newlib default
      kernel: reimplement k_uptime_get_32()

Peter Herager (2):
      Bluetooth: Add debug kconfig for bluetooth services
      Bluetooth: Add additional attributes to DIS

Phil Erwin (1):
      cmake: Fix missing dependency

Pieterjan Camerlynck (2):
      net: lwm2m: fix automatic notification frequency
      net: lwm2m: cancel pending retransmit work when closing context

Piotr Mienkowski (9):
      flash_gecko: add support for page layout
      board: efr32_slwstk6061a enable SoC DC-DC converter
      boards: add jlink runner for efr32_slwstk6061a board
      drivers: Add counter driver (RTCC) for SiLabs Gecko SoCs
      scripts/dts: generate DT_ALIAS_<ALIAS>_<PROP> defines
      drivers: Define COUNTER_LOG_LEVEL using template
      dfu: make flash_img write to flash on buffer full
      drivers: fix printf formatting in flash drivers
      dfu: fix printf formatting in img_util

Piotr Zierhoffer (4):
      build: west: Update the error message when not in west dir
      build: west: Change the remote of civetweb to upstream
      civetweb: Bump module to simplify the build process
      samples: net: civetweb: Remove an unnecessary config option

Piotr Zięcik (49):
      tests: timer_api: Fix test for SYS_CLOCK_TICKS_PER_SEC != 100
      tests: tickless_concept: Fix slicing time measurement
      tests: test_sched_timeslice_reset: Fix slice time measurement
      drivers: litex_timer: Do not hard code tick rate
      tests: timer_api: Fix timer synchronization
      counter: Update counter API in order to provide more flexibility
      dts: bindings: Add bindings for ARM, ARC, Xtensa CPUs
      dts: bindings: Add fixed-clock DTS binding
      dts: Add information about CPU frequency to the cpu nodes
      dts: Add information about system bus frequency to the dts
      dts: bindings: nxp,kinetis-usbd: Make clocks property optional
      dts: bindings: fixed-clock: Make label optional
      tests: work_queue_api: Fix k_delayed_work_remaining_get() test
      drivers: i2c_bitbang: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      drivers: pwm_qmsi: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      drivers: timer: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      debug: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      logging: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      tests: benchmarks: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      drivers: i2c_cc32xx: Get clock frequency from DTS
      soc: snps_arc_iot: Get CPU clock frequency from DTS
      soc: sam3x: Get CPU clock frequency from DTS
      soc: sam4s: Get CPU clock frequency from DTS
      soc: samd2x: Get CPU clock frequency from DTS
      soc: samr21: Get CPU clock frequency from DTS
      soc: same70: Get CPU clock frequency from DTS
      soc: k6x: Get CPU clock frequency from DTS
      soc: kl2x: Get CPU clock frequency from DTS
      soc: kwx: Get CPU clock frequency from DTS
      soc: lpc54xxx: Get CPU clock frequency from DTS
      arch: xtensa: Get CPU clock frequency from DTS
      soc: msp432p4xx: Get CPU clock frequency from DTS
      soc: nxp_rt: Get system clock frequency from DTS
      drivers: beetle_clock_control: Get CPU clock frequency from DTS
      logging: log_backend_swo: Get clock frequency from DTS
      drivers: spi_dw: Get clock frequency from DTS
      drivers: uart_cmsdk_apb: Get clock frequency from DTS
      drivers: uart_pl011: Get clock frequency from DTS
      drivers: uart_cc32xx: Get clock frequency from DTS
      drivers: uart_msp432p4xx: Get clock frequency from DTS
      drivers: uart_qmsi: Get clock frequency from DTS
      drivers: uart_stellaris: Get clock frequency from DTS
      drivers: uart_cc13xx_cc26xx: Get clock frequency from DTS
      drivers: wdog_cmsdk_apb: Get clock frequency from DTS
      drivers: adc_stm32: Get clock frequency from DTS
      debug: tracing: Fix compilation error
      syscalls: Export _is_user_context() regardless of CONFIG_USERSPACE
      logging: Add basic userspace support
      samples: logging: Add usermode showcase

Pushpal Sidhu (2):
      boards: adafruit_trinket_m0: Set flash address
      boards: adafruit_trinket_m0: Force program flash to 0x2000

Radoslaw Koppel (7):
      subsys/ztest: Documentation fix
      subsys/storage/flash_map: Fix returned error codes
      drivers/flash/flash_simulator: Allow unaligned read
      subsys/settings: Add const modifier to the value pointer
      subsys/settings: Cleanup the initialisation of the subsys
      subsys/testsuite/ztest: change zassert_mem_equal to macro
      subsys/testsuite/ztest: Fix zassert_mem_equal user message printing

Radu Alexe (1):
      Bluetooth: controller: better field names

Ravi kumar Veeramally (14):
      net: ipv6: Trivial changes in fragmentation debug
      tests: net: Add more tests to ipv6 fragmentation
      net: tests: ipv6_fragment: Use NET_DBG instead of DBG
      net: ethernet: Add VLAN tag stripping capability flag
      net: ethernet: l2: Add support for VLAN tag strip
      net: shell: Add VLAN tag stripping to capabilites
      drivers: native_posix: Add VLAN tag strip feature
      net: sockets: Add timeout to socket connect call
      net: Add support for SOCKS5 socket option
      net: socks: Make SOCKS5 implementation transparent
      net: mqtt: Modify SOCKS5 based connections
      samples: net: Modify mqtt_publisher to use set proxy
      net: mgmt: Fix IPv4 connection management
      samples: net: echo_client: Add SOCKS5 support

Reham Tarek (1):
      Bluetooth: Mesh: AES-CCM: Fix output MIC with additional data

Reto Schneider (1):
      sample: button: Fix format specifier

Rich Barlow (2):
      Bluetooth: Mesh: LPN: Clear sent_req on failure
      Bluetooth: Mesh: LPN: Remove msg from cache on rejection

Richard Osterloh (1):
      drivers: pinmux: add SPI2 on Port B defines

Rick Conrey (20):
      drivers: counter: enable counter for STM32WB
      soc: stm32wb: enable counter on STM32WB
      dts: wb: Enable RTC
      boards: nucleo_wb55rg: Enable RTC
      drivers: spi: Enable SPI on stm32wb
      dts: wb: Enable spi on stm32wb
      soc: stm32wb: Enable SPI on stm32wb
      drivers: pinmux: enable SPI pins on stm32wb
      boards: nucleo_wb55rg: enable SPI1 on nucleo_wb55rg
      tests: spi: enable SPI on STM32WB
      drivers: pinmux: enable PWM pins on STM32WB
      dts: wb: enable PWM on STM32WB
      soc: stm32wb: Enable PWM on STM32WB
      boards: nucleo_wb55rg: enable PWM2 on nucleo_wb55rg
      drivers: adc: enable ADC on STM32WB
      drivers: pinmux: enable ADC pins on STM32WB
      dts: wb: enable ADC
      boards: nucleo_wb55rg: Enable ADC
      tests: nucleo_wb55rg: add adc test
      drivers: adc: Enable ADC on STM32WB

Robert Lubos (23):
      net: openthread: Do not overwrite stored dataset with defaults
      ext: lib: crypto: Extend mbedTLS generic config
      drivers: ieee802154: New API for ACK configuration
      drivers: ieee802154_nrf5: Rename nrf5_config to nrf5_irq_config
      drivers: ieee802154_nrf5: Implement configure API
      net: openthread: Implement frame pending API
      net: openthread: Fix utilsFlashErasePage function
      net: lib: mqtt: Enable blocking PUBLISH payload readout
      net: Allow to disable native IP stack with socket offloading
      net: Avoid calling L2 functions on offloaded interface
      net: sockets: Remove TI conditional from offloaded fcntl implementation
      drivers: sensor: Update DT symbols in qdec_nrfx driver
      ext: hal: nordic: Update DT symbols in nrfx config file
      ext: hal: nordic: Fix DT symbols in 802154 radio driver
      net: openthread: Verify iface in net_mgmt event handler
      net: lwm2m: Ignore `close` return value
      drivers: ieee802154_nrf: Fix SoC header inclusion
      boards: holyiot_yj16019: Fix radio capabilities
      manifest: Add OpenThread repository
      net: openthread: Use repository provided by west
      samples: net: echo_client: Fix bug in workqueue processing
      kernel: timeout: Fix macro usage in next_timeout function
      drivers: timer: nrf_rtc_timer: Fix set_comparator corner case

Roger N'Guessan (6):
      boards: nucleo_wb55rg: Enable I2C
      drivers: i2c: enable I2C on STM32WB
      dts: wb: enable I2C
      drivers: pinmux: enable I2C PINs on STM32WB
      boards: nucleo_wb55rg: add I2C doc
      Bluetooth: drivers: ipm_st32wb: Fix compilation

Ryan C Johnson (1):
      drivers: flash: w25q: erase operations must be erase-size aligned

Ryan QIAN (10):
      ext: hal: nxp: mcux: add device files for RT1015
      arch: arm: nxp: imxrt1015: add device support
      drivers: serial: add config for uart 4
      boards: arm: add board support for mimxrt1015_evk
      dts: arm: nxp: Add dtsi for RT1015 and RT1020
      soc: arm: nxp_imx: rt: update flash size of 32KB
      boards: arm: mimxrt1015_evk: update board dts
      boards: arm: mimxrt1020_evk: update board dts
      boards: arm: mimxrt1015_evk: update the ram size
      tests: change the min_ram for mbedtls and mem_protect

Saravanan Sekar (1):
      wifi: eswifi: Select socket before configuration

Sathish Kuttan (20):
      boards: intel_s1000_crb: Host interface config
      boards: intel_s1000_crb: Image download scripts
      doc: intel_s1000: image download from Linux host
      dts: intel_s1000: add low power sram as sram1
      soc: intel_s1000: add dts fixup for low power sram
      soc: intel_s1000: define lpsram memory for linker
      soc: intel_s1000: add lpsram in linker script
      samples: intel_s1000: audio buffers in lpsram
      samples: intel_s1000: audio buffers in lpsram
      samples: intel_s1000: audio buffers in lpsram
      samples: intel_s1000: USB control for audio sample
      samples: intel_s1000: tuning driver for audio app
      samples: intel_s1000: audio processing threads
      samples: intel_s1000: add background thread
      samples: intel_s1000: track status of audio app
      samples: intel_s1000: tuning commands in audio app
      samples: intel_s1000: update project configration
      samples: intel_s1000: add files to cmake build
      samples: intel_s1000: script to control from host
      samples: intel_s1000: update sample audio app doc

Scott Worley (9):
      ext : hal : mec1501 Add the MEC1501 external headers.
      dts : arm : Add Microchip MEC1501 SoC device tree
      soc : arm : microchip_mec Add Microchip MEC1501 SoC
      boards : arm : Add support for Microchip MEC15xx EVB ASSY 6853
      ext : hal : microchip Header updates for MEC1501
      drivers : timer : Add MEC1501 32KHz kernel timer driver
      soc : arm : microchip_mec Fix MEC1501 SoC ECIA initialization
      ext : hal : Microchip MEC1501 PS/2 and global configuration updates.
      drivers : timer : MEC1501 RTOS timer load delay work-around.

Sebastian Bøe (10):
      cmake: DT: Change from -Idts/common to -isystem dts/common
      cmake: DT: Add support for out-of-tree binding root directories
      cmake: LD: Allow input sections to remain unsorted
      cmake: Don't have users call zephyr_link_interface on mbedTLS
      cmake: Mark post_build files as BYPRODUCTS
      latency_measure: Remove commented-out code
      latency_measure: Fix bug where the wrong prj.conf file was used
      size_report: Don't crash when observing stripped symbols
      kconfig: Fix nrf91 NONSECURE dependency
      cmake: Fix dependency between offset.c.obj and offsets.h

Siddharth Chandrasekaran (3):
      board: stm32_min_dev: Add support for blue/black variant
      doc: stm32_min_dev: Update for blue/black variant support
      tests: kernel: Exclude platforms stm32_min_dev_*

Sigvart Hovland (1):
      cmake: boilerplate: Fix ZEPHYR_BASE variable for windows

Sigvart M. Hovland (1):
      cmake: zephyr_modules: Add west executable argument

Song Qiang (6):
      drivers: gpio: stm32: add ASCR configuration for L47x+
      dts: arm: stm32: add dts support for ADC1 of stm32
      drivers: pinmux: stm32: add pinmux support for ADC of stm32
      drivers: adc: add driver support for ADC1 of stm32
      test: driver: adc: add some nucleo boards support for adc test cases
      doc: boards: arm: nucleo: add ADC support to the boards doc

Stefan Kraus (1):
      96b_nitrogen: Increase size of boot partition.

Steven Wang (2):
      doc: intel_s1000: install the license key manually
      Doc: Use SDK 0.10.1 instead of 0.10.0.

Stig Bjørlykke (1):
      boards: arm: Add support for nRF51 Dongle (PCA10031)

Sören Tempel (5):
      soc/riscv32-fe310: add label for uart1
      net: slip: allow compilation without CONFIG_NET_LLDP
      net: slip: fix compilation without NET_L2_ETHERNET
      drivers: serial: sifive: Fix UART extern interrupts
      drivers: serial: sifive: fix configuration of rxcnt/txcnt

Tavish Naruka (2):
      boards: nrf52840_blip: enable default instances of peripherals
      boards: nrf52840_papyr: misc. board config fixes

Tedd Ho-Jeong An (10):
      Bluetooth: GATT: Add support for Read Using Characteristic UUID
      Bluetooth: shell: Add command for Read Using Characteristic UUID
      tests: bluetooth/tester: Add support Read Using Characteristic UUID
      Bluetooth: GATT: Fix using a wrong handle
      doc: Bluetooth: Update GAP ICS to 7.4.1
      doc: Bluetooth: Update GATT ICS to 7.4.1
      doc: Bluetooth: Update L2CAP ICS to 7.4.1
      doc: Bluetooth: Update SM ICS to 7.4.1
      doc: Bluetooth: Add ICS for Mesh Profile
      doc: Bluetooth: Update PICS to ICS

Thomas Ebert Hansen (5):
      tests: crypto: Update HMAC_PRNG test
      bluetooth: controller: Move Nordic specific code
      bluetooth: controller: Move Nordic specific code
      Bluetooth: Add support for vendor-specific events
      tests: bluetooth: Test vendor-specific events

Thomas Stenersen (2):
      Bluetooth: controller: Remove BT_HCI_RAW dependency
      Bluetooth: controller: Rename assert handler Kconfig title

Thomas Stilwell (1):
      cmake: fix regex for west version check in host-tools.cmake

Timo Teräs (1):
      libc: add strnlen implementation

Tobias Aschenbrenner (1):
      fix: kw41z: Use correct mapping for dBm

Tobias Schlaepfer (1):
      drivers/ieee802154: Fix KW41Z driver fault

Tobias Svehagen (4):
      Bluetooth: Make RSSI value available to mesh applications
      Bluetooth: Change from bitfields to normal types
      Settings: Initialize settings_lock mutex
      Bluetooth: Mesh: Remove dependency on BT_MESH_IV_UPDATE_TEST in shell

Tomasz Bursztyka (49):
      net/offload: Add dummy functions when offloading is disabled
      net/ip: Make struct net_addr holding uninon of ipv6/4 unconditionally
      net/context: Reduce the usage of #ifdef/#endif
      net/context: Reordering some ipv4/6 logic to follow all other places
      net/connection: Removing cache feature
      net/connection: Reduce usage of #ifdef
      net/connection: Use slist to manage used/unused connections
      net/connection: Merge rank bits into flags attribute
      net/connection: Final cleanup
      net/iface: Modify function to get IPv6 global address
      net/iface: Add a function to get IPv4 global address
      net/pkt: Remove useless _reserved attribute
      net/arp: No need of 64bits timer precision on ARP requests
      net/pkt: Redefine the necessary fifo attribute
      net/udp: Computed checksum field should not be 0
      net/udp: Accept UDP packet with missing checksum
      net/udp: Check UDP header's length attribute
      tests/net: Fix IPv6 and UDP test as UDP got stricter on checking header
      net/udp: Always drop IPv6 UDP packet if checksum field is 0
      drivers/wdt: Rename STM32 IWDG files to follow naming rules
      drivers/wdt: Rename CMSDK driver to follow naming rules
      include: Removing legacy left-overs in wdt.h API header
      drivers/wdt: Fixing tiny style issues in sam0 driver
      net/llmnr: Fix LLMNR answer creation
      net/iface: Reduce usage of ifdef around CONFIG_NET_IPV6
      net/iface: Reduce usage of ifdef around CONFIG_NET_IPV4
      net/iface: Reduce ifdef usage on various options
      net/iface: Initialize IPv4/6 address so it removes more ifdef
      net/iface: Remove useless attributes in net_if_ipv6 structure
      net/iface: Coalesce all DAD timers through one
      net/iface: Coalesce all RS timers through one
      net/ipv4: Add a net mgmt event for IPv4 router deletion
      net/iface: Rework how routers are handled
      net/iface: Add IPv4 route find and add
      net/gptp: net_gptp_recv() dummy function needs to return a verdict
      net/ethernet: Cleanup a bit on the usage of ifdefs
      net/lldp: Simplify Kconfig file
      net: Add a connection manager preliminary logic
      doc/networking: Update network management part relevantly
      drivers/gpio: Adding missing braces for XEC driver
      driver/pinumx: Adding missing braces for XEC driver
      samples: Counter alarm should display seconds, not ticks
      net/conn_mgr: Fix events handler
      net: socket_mgmt: Fix for coverity CID 203468
      net: socket_mgmt: Fix for coverity CID 203397
      tests: net: Fix for coverity CID 203499
      net: ppp: Fix for coverity CID 203514
      net: gptp: Fix for coverity CIDs 203471 and 203464
      include/drivers: Removing legacy leftovers in PWM header

Tomasz Gorochowik (5):
      drivers: eth: gmac: Fix MAC address info log
      libc: minimal: fix realloc function
      net: sockets: implement getsockname function
      samples: net: Add civetweb HTTP sample
      Samples: net: civetweb: add README

Tomás Longeri (1):
      ring_buffer: Fix return types

Torsten Rasmussen (1):
      west: zephyr_module: Improved error messaging during west failures

Trond Einar Snekvik (2):
      Bluetooth: Mesh: Prov confirm tx after confirm rx
      Bluetooth: Mesh: Use define for no prov pdu

Tyler Hall (1):
      scripts/sanitycheck: fix ZEPHYR_BASE subdir check edge case

Ulf Magnusson (88):
      kconfig: Add missing quotes after 'source' and 'menu'
      kconfiglib/menuconfig: Various behavior/UI improvements
      genrest: Include all parents in menu paths
      shell: kconfig: Put 'menuconfig SHELL' in top-level menu
      kconfig: Avoid potential issue parsing generated_dts_board.conf
      kconfig: Use 'default' instead of 'def_bool' in Kconfig.defconfig files
      west: Fix unused import and variable
      scripts: gen_kobject_list: Remove redundant parentheses
      ext: lib: mcumgr: Remove 'External Sources -> Management' menu
      Bluetooth: kconfig: Put 'menuconfig BT' in top-level menu
      ext: open-amp: kconfig: Add missing OPENAMP dep. to OPENAMP_SRC_PATH
      dfu: kconfig: Remove 'DFU Options' menu
      console: kconfig: Put 'menuconfig CONSOLE_SUBSYS' in top-level menu
      subsys/random: Hide 'Random generator' choice when empty
      c++: kconfig: Fix choice dependencies and use 'menuconfig' symbol
      kconfig: Use 'CONFIG_FOO_*' in #endif comments to avoid CI failures
      doc: kconfig: Fix accidental SPDX-License-Identifier in generated doc
      disk: kconfig: Group related symbols and use 'menuconfig' symbol
      lvgl: kconfig: Remove menu and use a 'menuconfig' symbol
      doc: kconfig: Clarify that 'depends on' works for string/int/hex
      doc: kconfig: Explain the 'menuconfig' keyword and good uses for it
      doc: kconfig: Encourage dropping 'Enable ...' from most prompts
      doc: kconfig: Fix typo in documentation for 'optional' on choices
      menuconfig: Small Space/Enter improvement + fix for obscure bug
      guiconfig: Add a graphical configuration interface
      doc: Add guiconfig documentation
      kconfiglib: Unclutter symbol strings, avoid redundant writes, misc.
      genrest: Mention that dependencies are only propagated to 'depends on'
      kconfig.py: Use messages returned by load_config() and write_config()
      dts: Replace status = ""ok"" with status = ""okay""
      scripts/dts: Make extract/flash.py easier to read
      drivers: pinmux: stm32l4: Fix CONFIG_SOC_STM32L496XX references
      yaml: Remove redundant document separators
      scripts/dts: Clarify extract/flash.py some more
      genrest: De-spam docs by skipping direct deps. in more places
      dts/bindings: Clarify #cells in template
      dts: bindings: Remove dead 'label:' keys on properties
      dts: bindings: Do not require a 'reg' property for snps,arcv2-intc
      dts: bindings: Make 'clocks' optional in i2c.yaml
      dts: bindings: Make 'clocks' optional in pwm.yaml
      dts: bindings: Make 'clocks' optional in adc.yaml
      dts: bindings: Make 'clocks' optional in nxp,{imx-uart,lpc-usart}.yaml
      dts: bindings: simplify !include in jedec,spi-nor
      dts: Add missing spi-max-frequency for mimxrt/nxp/hifive1/qemu_riscv2
      dts: bindings: Do not require 'interrupts' on STM32 GPIO nodes
      boards/arm/mps2_an521: Add missing timer labels to dts
      dts: riscv32: rv32m1: Disable unused interrupt multiplexers
      dts: bindings: Remove unused 'version' field
      dts: bindings: Remove some YAML document separators
      dts: bindings: Clean up microchip,xec-espi.yaml and espi.yaml
      scripts/dts: Rename --deprecate-only to --deprecated-only
      dts: Add new DTS/binding parser
      scripts/dts: Add deprecation comments to old scripts
      dts: bindings: Add lots more documentation
      dts: bindings: Rename binding template to binding-template.yaml
      doc: dts: Add more information to .dtsi example
      dts: arm: Remove leftover zephyr,irq-prio property from CC2650
      dts: posix: Fix 'current-speed' property typo
      boards: 96b_nitrogen: Remove 'csn-pin' property from SPI master
      dts: nxp: Remove unused 'clock-source' properties
      dts: nxp: Remove clk-* properties from nxp,kinetis-sim nodes
      dts: nxp: Remove unused 'reload-counter' properties
      dts: nxp: Remove unused 'start-on-boot' properties
      dts: nxp: Remove unused 'prescaler' properties from watchdog nodes
      dts: riscv: Add sifive,plic-1.0.0 binding and fix riscv,ndev values
      scripts: dts: Add test for multiple binding directories
      drivers: ethernet: Remove redundant NET_L2_ETHERNET dep. from ETH_LITETH
      drivers: flash: Remove redundant FLASH dep. from FLASH_SIMULATOR
      drivers: flash: Remove redundant FLASH dep. from FLASH_NATIVE_POSIX
      drivers: espi: kconfig: Remove redundant ESPI_PERIPHERAL_CHANNEL deps.
      disk: kconfig: Remove redundant DISK_ACCESS_SDHC dependency
      drivers: gpio: Remove redundant GPIO dep. from GPIO_HT16K33
      Bluetooth: L2CAP: Kconfig: Remove redundant BT_CONN dependency
      scripts: edtlib: Reduce code duplication in phandle/value list parsing
      drivers: sensors: Remove 'version:' field in Si7006 binding
      Bluetooth: GATT: Kconfig: Remove redundant BT_CONN dependencies
      dts: Replace more status = ""ok"" with status = ""okay""
      edtlib: Check that 'status' has one of the values from the DT spec.
      dts: edtlib: Improve naming in _check_binding()
      dts: edtlib: Simplify 'category: optional' code in Device._prop_val()
      dts: edtlib: Shorten _init_{interrupts,gpios}() a bit
      dts: edtlib: Shorten some license headers
      dts: dtlib: Remember the format of assignments
      dts: dtlib/edtlib: Add a syntax-based type-checking system
      dts: edtlib: Fix outdated doc comment for _init_devices()
      dts: dtlib: Fix parsing of character literals
      dts: xilinx_zynqmp: Remove stray 0 from interrupt-parent
      dts: binding-template.yaml: Fix 'parent/child: bus:' description

Vaishali Pathak (1):
      drivers: sensors: Add Si7006 temperature/humidity sensor driver

Vikrant More (7):
      samples: mesh: enable SMP service for DFU
      samples: mesh: single timer to handle all transitions
      samples: mesh: removed bugs in on-off transition
      samples: mesh: removed redundant code
      samples: mesh: corrected implemenation of gen. move message handlers
      samples: mesh: replaced magic numbers with values defined in stdint.h
      samples: mesh: sync the init procedure to initialise the mesh

Vinayak Kariappa Chettimada (81):
      Bluetooth: controller: Data Length Update port to ULL/LLL arch
      Bluetooth: controller: Move PKT_US to ULL internal header
      Bluetooth: controller: Fixes to pass DLE/PHY conformance tests
      Bluetooth: controller: Fix advanced XTAL feature regression
      Bluetooth: controller: Fix regression in Coded PHY CI Change
      Bluetooth: controller: Fix nRF52840 Coded PHY timings
      Bluetooth: controller: Fix pin or key missing response
      Bluetooth: controller: Fix missing BT_CTLR_FILTER conditional
      Bluetooth: controller: Yield ULL processing when Ctrl PDU deferred
      Bluetooth: controller: Implement low latency ULL processing
      Bluetooth: controller: Move LLL-to-ULL Tx Ack API to ULL
      Bluetooth: controller: Add GPIO Debug Pins for HFCLK state
      Bluetooth: controller: Fix XTAL advanced feature
      Bluetooth: controller: Use void pointer to return rand value
      Bluetooth: controller: ull/lll: Increase adv random delay resolution
      Bluetooth: controller: ull/lll: Fix pin or key missing response
      Bluetooth: controller: Fix incorrect conditional compilation
      Bluetooth: controller: Fix incorrect data type use in slot calc
      Bluetooth: controller: Fix ULL LLL execution priority selection
      Bluetooth: controller: Fix Rx and Tx buffer sizes
      Bluetooth: controller: Enable Zephyr VS HCI in ULL/LLL impl.
      Bluetooth: controller: Disable controller privacy feature
      Bluetooth: controller: Enable additional ULL/LLL CI tests
      Bluetooth: controller: Fix Enc Setup overlap with Length Update
      Revert ""Bluetooth: controller: Disable controller privacy feature""
      Bluetooth: controller: split: Port h/w privacy feature
      Bluetooth: controller: split: Fix shell app regression
      Bluetooth: Fix building of broadcaster or observer only
      Bluetooth: shell: Fix disconnect command argument count
      Bluetooth: controller: split: Port Enc setup to be queueable
      Bluetooth: controller: split: Add internal ull_update_mark func
      Bluetooth: controller: split: Port slave conn update assert fix
      Bluetooth: controller: split: Fix tx_ack mfifo count
      Bluetooth: controller: split: Add ULL/LLL architecture assert checks
      Bluetooth: controller: split: Port random slave event backoff
      Bluetooth: controller: BT_CTLR_USER_EXT depends on BT_LL_SW_SPLIT
      Bluetooth: controller: split: Fix buffer leak on disconnect
      Bluetooth: controller: Fix handling zero length L2CAP start frame
      mailmap: Fix entry needing both name and email replace
      Bluetooth: controller: Add PA/LNA support on NRF_P1 GPIO pins
      Bluetooth: controller: split: Add interface to get adv/scan handle
      Bluetooth: controller: split: Port radio event abort
      cmake: check ZEPHYR_SDK_INSTALL_DIR is set
      Bluetooth: controller: Move ticker_id_prepare reset to early return
      Bluetooth: controller: Fix assert during DLE
      Bluetooth: controller: Fix logging assert
      Bluetooth: controller: split: Fix incorrect CU under latency
      Bluetooth: controller: split: Fix continuous initiator
      Bluetooth: controller: Fix PHY update proc symmetric rsp
      Bluetooth: controller: Fix packet timing restriction reset
      Bluetooth: controller: Fix missing data length update event
      Bluetooth: controller: Fix post DLE/PHY update event length
      Bluetooth: controller: Enable Fast Enc and RSSI features
      Bluetooth: controller: Add deferred procedure complete event
      Bluetooth: controller: Fix DLE during data transmission
      Bluetooth: controller: Update Bluetooth version to 5.1
      Bluetooth: controller: split: Fix packet timing restrict reset
      Bluetooth: controller: split: Fix PHY update proc symmetric rsp
      Bluetooth: controller: split: Handle zero length L2CAP start frame
      Bluetooth: controller: Fix cond compile of DLU event generation
      Bluetooth: controller: split: Conditional compile LL Rx pool use
      Bluetooth: controller: Rename BT_LL_SW to BT_LL_SW_LEGACY
      Bluetooth: mesh: Use legacy LL for microbit build
      Bluetooth: controller: Make ULL/LLL split the default
      Bluetooth: controller: split: Fix pipeline prepare/resume loop
      Bluetooth: controller: Decorrelate address generation from resolution
      Bluetooth: shell: Fix directed adv parameter check
      Bluetooth: mesh_shell: Disable controller filter
      Bluetooth: controller: split: Reduce event done queue size
      Bluetooth: controller: split: Increase event start overhead time
      Bluetooth: controller: split: Increase pipeline size
      Bluetooth: controller: split: Fix pipeline for continuous events
      Bluetooth: controller: Fix ifdef block comment
      Bluetooth: controller: split: Fix control flow issues
      Bluetooth: controller: split: Fix Tx FIFO, queue, and pool corruption
      Bluetooth: controller: split: Tx cleanup and comments
      Bluetooth: controller: split: Fix Enc setup reset on rejection
      Bluetooth: controller: split: Fix data pause on Enc Req enqueue
      Bluetooth: controller: Fix Enc setup reset on rejection
      Bluetooth: controller: split: Fix PDU handling on terminate
      Bluetooth: controller: split: Fix crash on terminate

Vincent Wan (9):
      samples: sockets: sntp_client: make IPv6 & NET_CONFIG_SETTINGS optional
      samples: sockets: sntp_client: Add support for cc3220sf_launchxl
      drivers: wifi: simplelink: Add static IP address support
      soc: ti_simplelink: add macro to prevent double inclusion of soc.h
      doc: boards: cc3220sf_launchxl: update OpenOCD instructions
      drivers: wifi: simplelink: fix 'log_strdup missing' error messages
      soc: arm: ti_simplelink: Fix number of interrupt lines on CC3220SF
      tests: net: trickle: use separate semaphore for second trickle timer
      doc: boards: cc3220sf_launchxl: update docs for Zephyr 2.0

Watson Zeng (3):
      boards: arc: emsdp: add basic emsdp board support
      board: emsdp: doc update and bug fixes
      board: nsim: doc update for debugging section

Wayne Ren (45):
      arch: arc: optimize the push and pop of fast irq
      boards: iotdk: add mpu and fpu configuration
      soc: nsim: nsim em targets are EM4_FPUDA
      soc: arc: optmize and bug fix the compile options
      arch: arc: implement z_arch_switch to replace swap
      arch: arc: fix the bug caused by hardware sp switch in interrupt
      arch: arc: remove arc_exc_saved_sp used in exc handling
      arch: arc: remove saved_r0/saved_sp used in firq handling
      arch: arc: use IRQ_ACT to check nest interrupt
      ARC: Fix selection of custom atomic ops
      ARC: Add support for ARC HS family of CPU cores
      arch: arc: optimize the float support
      arch: arc: implement z_arch_float_enable
      arch: arc: add handling for accl regs, r25, r30
      doc: add doc of arc floating point support
      arch: arc: typo fixes and comments clean up
      arch: arc: remove custom atomic operations
      arch: arc: fix the offset generation of accl_regs
      arch: arc: add basic arc connect driver support
      drivers: arcv2_timer0: add support for smp
      arch: arc: add macros to get current cpu id
      arch: arc: add initial support of SMP
      arch: arc: the caculation of exception stack is wrong
      arch: arc: fixes the case triggering a cpu exception in user mode
      arch: arc: add extra handling about exception raised in interrupt
      arch: arc: fix on the reason of software-triggered fatal exceptions
      tests: remove the exception for arc
      arch: arc: add initial support of ARC TEE
      boards: emsk: add initial support of normal/non-secure application
      boards: nsim: add initial support of normal/non-secure application
      samples: add sample to show how ARC TEE works
      drivers: ns16550: add WORD only access support
      boards: hsdk: add initial support of ARC HS Development Kit
      arch: arc: no need of default n for arc_connect
      arch: arc: fix a bug when CONFIG_SMP is enabled
      tests: enable hsdk and nsim_hs_smp for smp test
      boards: nsim: disable CONFIG_SMP by default for nsim_hs_smp
      arch: arc: secure stat should also be reset correctly
      arch: arc: fix and optimize the handling of SECT_STAT.IRM
      arch: arc: not allowed to switch to thread preempted by exception
      arch: arc: use _curr_cpu to replace _curr_irq_stack
      arch: arc: secure world only check secure interrupt
      arch: arc: fix the bug that interrupt stack is not switched
      arch: arc: for fast irq ERET has no copy of ilink
      doc: relnotes: add notes for arc

Wendy Liang (2):
      serial: Add Xilinx ZynqMP PS uart driver
      timer: Add Xilinx ZynqMP PS ttc timer

Wentong Wu (25):
      lib/posix: correct the meaning of CONFIG_MAX_PTHREAD_COUNT
      arch: arm: switching stack pointer with assembly code
      tests: kernel: increase stack buffer when code coverage enabled
      scripts: mpu align for ro section of new memory region on non-XIP system
      scripts: make code relocation work for non-XIP system
      linker: kobject-text.ld: avoid backwards location counter
      CODEOWNERS: Add code ownership for gen_relocate_app.py
      linker: add no-flash system support
      testsuite: coverage: port GCOV linker code to CMake for X86
      kernel: add futex support
      tests: add futex test cases
      driver: timer: loapic_timer: fix compile issue
      scripts: elf_helper: correct kernel object address check range
      linker: move scripts generated code at the beginning of .text
      scripts: make mpu align in sections for code reloation
      target_relocation.cmake: fix spell typo
      lib: os: add sys_sem data type
      tests: add test cases for sys_sem
      kernel: timeout: do not active time slicing if idle thread ready
      Kconfig: enable BUILD_OUTPUT_HEX for sam_e70_xplained
      tests: kernel: fix unhandled return values.
      tests: kernel: fix unhandled return values.
      scripts: elf_helper.py: add analyze for DW_TAG_typedef
      scripts: elf_helper.py: fix stack declared K_THREAD_STACK_EXTERN
      tests/drivers/ipm: Enable on x86_64

William Fish (2):
      drivers: sensor: APDS9660 WhoAmI check logic
      soc: nordic_nrf: MPU temperature sensor default

Wolfgang Puffitsch (5):
      Bluetooth: controller: hci: Add some documentation for encode_control().
      Bluetooth: controller: hci: Add user hooks.
      Bluetooth: controller: Settings for company_id and subversion_number.
      tests: Bluetooth: Add test case for settings in the controller.
      Bluetooth: controller: Fix endianness for length update.

Yannis Damigos (12):
      tests: can: api: Fix ""Device not not found"" error message
      tests/subsys/usb/device: Fix comment and message
      usb_dc_stm32: Check if functions' arguments are valid
      dts: xtensa: Fix compatible for xtensa lx6
      dts: Restructure xtensa dts directory
      dts: intel_s1000: Move core_intc node under soc node
      usb_dc_stm32: Don't update ret_bytes if send fails in usb_dc_ep_write()
      dts: stm32l4: Fix USB phy node for stm32l432 and stm32l452
      disco_l475_iot1: Enable I2C3
      i2c_ll_stm32_v2: Set slave_attached to false on slave unregister
      olimexino_stm32: Enable I2C1
      i2c_ll_stm32: Use macros to add I2C instances

Yasushi SHOJI (4):
      linker: Make alignment size for sw_isr_table configurable
      cmake: compiler: gcc: Explicitly spell out stddef.h and limits.h
      kernel: sched: Do not force preempt when k_sched_unlock()
      test: kernel: sched: Add a test for nested scheduler lock

Yaël Boutreux (23):
      stm32mp1: disable cmsis_rtos_v2 test
      dts: stm32mp157: Dtsi fixup
      drivers: clock_control: stm32: Modify file naming pattern
      clock_control: Add stm32mp157c_dk2 board support
      drivers: gpio: stm32: Indentation and cleanup
      gpio: Add stm32mp157c_dk2 board support
      uart: Add support for stm31mp157c_dk2 board
      drivers: pinmux: stm32: code cleanup
      pinmux: Add stm32mp157c_dk2 board support
      dts: bindings: Fix missing ""zephyr"" vendor name
      boards: shields: x_nucleo_iks01a2: doc: update dead URL link
      boards: arm: stm32mp157c_dk2: Add Arduino R3 connector definition
      drivers: bluetooth: hci: spi: Handle when the buffer is empty
      boards: arm: disco_l475_iot1: remove MCU slow down when using BlueRNG-MS
      drivers: spi: spi_ll_stm32: Fix uncleared MODF flag
      drivers: spi: spi_ll_stm32: Add config to manage slave select
      drivers: spi: spi_ll_stm32: Long line cleanup
      drivers: spi: spi_ll_stm32: set NSS before mode
      drivers: spi: st_stm32: Abstract LL function for spi ver. compatibility
      west.yml: update hal_stm32 revision to add SPI LL for CubeMP1
      soc: arm: st_stm32: stm32mp1: Add SPI support
      drivers: spi: spi_ll_stm32: Add support for STM32MP1x SoC
      boards: arm: stm32mp157c_dk2: Add SPI support

Yong Jin (1):
      driver: watchdog: stm32: rename the independent watchdog name

francois ramu (1):
      boards: stm32f469i_disco: add more leds to board

ling wei (1):
      net: trickle: Re-init trickle timer for multiple triggerings

Øyvind Rønningstad (13):
      scripts: mergehex: Add --overlap argument
      cmake: Add function for adding snippets to the linker file
      soc: arm: st_stm32: Port CCM sections to use the Cmake function
      arch: Port the ramfunc section to the Cmake function
      linker: Port usage of custom-sections to use Cmake
      soc: Port usage of soc-*.ld to use Cmake
      arch: port nocache linker code to use Cmake function
      arch: arm: cortex_m: Port some vector_relay linker code to Cmake
      arch: Put intlist.ld into Cmake
      testsuite: coverage: Port GCOV linker code to Cmake.
      cmake: Allow import_kconfig() to return a list of the variables it sets
      linker: Move sgstubs section to the very end and fix for nrf91
      arch: arm: core: tz: Linking of secure entry functions into NS firmware
```",59771425
1521,False,True,2019-08-29T07:48:15Z,2019-08-29T09:08:49Z,"```
Aaron Tsui (7):
      doc: sample: mpu  Update documentation
      samples: bluetooth: ibeacon: change to ADV_NONCONN_IND type
      samples: shields: x_nucleo_iks01a1
      samples: sensor: bme280: add README.rst
      samples: sensor: bme280: add arduino_101_sss.overlay
      samples: servo_motor: add HW PWM choice for NRF52 family
      samples: bluetooth: peripheral_ht: Health Thermometer sample

Alberto Escolar Piedras (27):
      doc: labels: Add links to feature process
      native_posix: cmdline: Hint user about wrong options
      nrf52_bsim: Add header to allow reusing native_posix drivers
      CODEOWNERS: remove use of commas
      native_posix: Run in real time by default with host BT
      doc: Remove API labels
      CODEOWNERS: Add reviewer for native_posix docs and flash driver
      CODEOWNERS: Clarify behaviour
      sanitycheck: Record time used in BinaryHandler
      sanitycheck: Minor optimization in BinaryHandler
      CODEWONERS: syntax fix: Remove comma
      nrf52_bsim: Add nrfx path to include path
      arch: POSIX: Do not assume 32bit pointers
      sanitycheck: update sections whitelist
      sanitycheck: Add missing section to whitelist
      native_posix: Replace system timer driver
      arch: POSIX: Fix race with unused threads
      nrf52_bsim: doc: Clarify how to fetch and compile BabbleSim
      native_posix: Fix undefined macro warning
      logging: Fix undefined macro warning
      shell: Fix undefined macro warnings
      nrf52_bsim: Minor fix in time coversion
      POSIX arch: Fixe issues related to extern ""C""
      nrf52_bsim: Add missing header guard and extern C block
      native_posix: Move include out of extern ""C"" block
      doc: Add native_posix information to 2.0 release note
      native_posix: Check pointer before de-referencing it

Alex Porosanu (1):
      soc: riscv32: fix zero-riscy zephyr,flash node

Alexander Mihajlovic (1):
      posix: Fix calculation of clock base in clock_settime

Alexander Svensen (9):
      Bluetooth: controller: ull/lll: Workaround CPR procedure collision
      Bluetooth: controller: ull/lll: Do not feature exc more than once
      Bluetooth: controller: split: Fix Conn Param Req procedure stall issue
      Bluetooth: controller: split: Fix master role RSSI measurement
      Bluetooth: controller: split: Refactor the lll_clock_wait() function
      Bluetooth: controller: split: Refactor if_defines to is_enabled in lll.c
      Bluetooth: controller: split: Refactor if defines in lll_adv.c
      Bluetooth: controller: split: Refactor if defines in lll_scan.c
      Drivers: led: lp5562: Add delay when writing to enable register

Alexander Wachter (55):
      boards: arm: nucleo_f746zg: Activate CAN on nucleo F746zg
      drivers: sensor: ams_iAQcore: Implemented ASM Indoor Air Quality Sensor
      samples: sensor: ams_iAQcore: Implement sample for AMS iAQ-core
      drivers: sensor: ens210: Implement AMS ens210 Sensor
      samples: sensor: ens210: Implement sample for ens210
      tests: drivers: build_all: Add AMS IAQcore and ENS210 to build all
      CODEOWNERS: Add codeowner for ams iAQcore and ENS210
      drivers: can: stm32: fix filter mode set
      drivers: can: Extend attach_isr with void *arg and pass to the isr cb
      drivers: can: Extend can_send with void *arg and pass it to the isr cb
      drivers: can: rework can_attach_msgq
      drivers: can: Implement can_attach_workq
      tests: drivers: can: api: define DT_CAN_1_NAME if not defined
      tests: drivers: can: Add testcases for attach_workq
      tests: drivers: can: Make CAN dev global
      drivers: can: Add loopback driver
      drivers: can: rename drivers to can_<dev name>
      drivers: can: mcux_flexcan: Add support for MK64
      soc: nxp: k6x: Add CAN support
      boards: frdm-k64f: Enable CAN support
      samples: CAN: Add FRDM-K64F defconfig
      drivers: can: stm32: Remove STM CAN_Init
      drivers: can: stm32: Change TX priority to chronological order
      drivers: can: stm32 Add error message for buffer overflow
      drivers: can: stm32: Update enable driver help message
      linker: Add dtcm section for Cortex M7 MCUs
      dts: stm32f7: Add Device Tightly Coupled Memory
      drivers: ethernet: stm32: Put DMA buffer to DTCM section
      boards: arm: Activate DTCM for STM32F7 boards with Ethernet
      net: ip: 6lo compression rework
      net: ip: net_pkt: Add pkt_cursor_advance before contiguous check
      net: ip: 6lo (IPHC) uncompression rework
      net: ip: 6lo: Remove unnecessary net_buf allocation and memmove
      tests: net: 6lo: Adapt tests to deal with headers in multiple frames
      tests: net: 6Lo: Add test criterion HDR diff
      drivers: can: Add CAN shell
      samples: drivers: CAN: enable can shell for the sample
      tests: boards: board_shell: Activate CAN shell
      can: Add RX timestamp to zcan_frame
      drivers: can: stm32: Implement timestamp for RX frames
      net: canbus: Rename canbus to canbus_raw
      net: l2: 6LoCAN implementation
      net: l2: canbus: Add support for pkt reception from translator
      net: ip: net_pkt: Implement net_pkt_shallow_clone
      net: ip: ipv6_nbr: take TLLAO length from src lladdres
      net: l2: canbus: Add support for canbus Ethernet translator
      net: ip: ipv6_nbr: use temp variables for ntoh conversion
      samples: net: echo_client and echo_server: Add 6LoCAN config
      net: ip: ipv6_nbr: Make LLAO length calculation more universal
      drivers: can: mcux: Fix set can_send callbacks
      drivers: can: mcux: Fix can_detach
      boards: frdm_k64f: Enable pullup for CAN0_RX pin
      samples: drivers: CAN: reworked sample code
      baords: shields: Add reel_board CANbus shield
      tests: drivers: can: Add test for TX callback

Alexandre Bourdiol (4):
      boards: Set pinmux.c compilation under switch CONFIG_PINMUX
      samples: basic minimal: add nucleo_f429zi, disco_l475_iot1 to whitelist
      board: add call to zephyr_library() for stm32mp157c_dk2
      board: use ${ZEPHYR_BASE} instead of ${PROJECT_SOURCE_DIR}

Alexey Brodkin (13):
      soc/nsim: Minor clean-up
      simulation: ARC EM in nSIM to use nsim_em.props
      board/nsim: Make it CPU-family independent
      board/nsim: Move CPU selection in defconfigs
      board/nsim: Refactor device tree description
      ARC: Mention ARC EM family instead of EM4 template
      arc: Preserve STATUS32 flags while resetting AE flag
      arc: Add support for unaligned access
      boards/nsim: Enable unaligned data acess for nSIM with simple ARC EM
      board/nsim: Add support of ARC HS cores in nSIM
      board/nsim: Add support of multi-core ARC HS platform in nSIM
      arch: arc: _rirq_exit: Comment clean-up
      arch: arc: threads: Comment clean-up

Anas Nashif (210):
      ci: only build on specified branches
      boards: v2m_musca_b1_nonsecure: add flash to yaml
      boards: v2m_musca_b1_nonsecure: disable sanitycheck [REVERT ME]
      flash_map: fix test names
      flash_map: add function to iterate over areas
      flash_map: add shell interface
      ci: detect changes to sub-board definitions
      sanitycheck: add timestamps to messages
      sanitycheck: fix reporting: build vs. run
      sanitycheck: handle pid file not being present
      sanitycheck: show handler in verbose mode
      CODEOWNERS: update code owners
      tests: ipm: disable on qemu_x86_64
      CODEOWNERS: minor cleanup
      CODEOWNERS: remove use of commas
      crc: remove deprecated crc headers
      ci: send email to builds@ mailing list if master fails
      CODEOWNERS: address some unowned files/dirs
      doc: guide for optimizing zephyr
      doc: move module related doc to guides
      doc: document submitting changes to modules
      qmsi: move to a zephyr module
      qmsi: set type to boolean when selecting QMSI
      esp: move HAL to external repo
      fatfs: move fatfs filesystem to a module
      mcumgr: move to an external module
      nffs: move to an external module
      segger: move to an external module
      CODEOWNERS: remove ext/fs entry
      kconfig: enclose module Kconfigs into a menu
      cmake: build modules under /modules
      gitlint: match max title length restriction with checkpatch
      modules: move module kconfig to main tree
      manifest: update with module state
      silabs: move HAL to external repo
      cypress: move HAL to external repo
      ext: move libmetal to an external module
      ext: move open-amp to an external module
      modules: move kconfig into tree
      mcumgr: move Kconfig to main tree
      CODEOWNERS: Update owners for subsys/mgmt/
      manifest: update to latest MCUMGR head
      x86: remove unused and x86 only latency benchmark
      compiler: no warnings on address-of-packed-member
      include: arch: move bits_portable.h to arch/common
      include: arch: move addr_types to common location
      include: arch: remove empty nios2 asm.h
      include: arch: rename xtensa_irq.h to irq.h
      CODEOWNERS: update file for include/arch/common/
      cmake: no-address-of-packed-member is not supported in older compilers
      logging: use os as a domain for low level system debugging
      tests: mesh: fix function prototype and match declaration
      style: add braces around if/while statements
      style: samples/tests: add braces around if/while statements
      doc: redirect old board pages to new location
      doc: remove .html from redirect entries
      doc: generate documentation of ifdef`ed APIs
      mbedtls: move to external module
      sdk: add support for 0.10.1 and remove 0.9.5
      doc: fix path to gdb in documentation
      doc: samples: cleanup board reference and layout
      samples: grove_light: remove whitelisting
      soc: nxp: ke1xf: add DTS SPI definitions
      samples: spi_fujitsu_fram: remove whitelisting
      manifest: order modules alphabetically
      manifest: add ci-tools to manifest
      manifest: remove out-dated comment
      manifest: move net-tools to tools/net-tools
      ci: move to new docker with new SDK
      ci: skip handling coverage data
      sanitycheck: report tests that never build/run
      ext: hal: st: move to modules
      docs: fix misspelling across the tree
      ci: increase sleep time between sanitycheck runs
      drivers: uart_console: include correct path
      drivers: uart_console: do not include arch/cpu.h directly
      drivers: uart_console: removed commented code
      drivers: pinmux: do not include local pinmux.h
      include: move interrupt controller headers to interrupt_controller/
      include: move system timer headers to include/drivers/timer/
      drivers: serial: ns16550: move header from /include/
      drivers: modem: modem_receiver.h: move header from /include/
      CODEOWNERS: remove non-existing files
      CODEOWNERS: add / at the end of a directory
      mailmap: Update mailmap with full names and  emails
      arc: logging: fix logging expression
      drivers: apic_timer: fix include of system_timer.h
      include/: cleanup: add Kconfig for suppressing warnings
      cleanup: include/: move flash_map.h to storage/flash_map.h
      cleanup: include/: move console.h to console/console.h
      cleanup: include/: move tty.h to console/tty.h
      cleanup: include/: move fs.h to fs/fs.h
      cleanup: include/: move fcb.h to fs/fcb.h
      cleanup: include/: move nvs/nvs.h to fs/nvs.h
      cleanup: include/: move tracing.h to debug/tracing.h
      cleanup: include/: move stats.h to stats/stats.h
      cleanup: include/: move atomic.h to sys/atomic.h
      cleanup: include/: move base64.h to sys/base64.h
      cleanup: include/: move crc.h to sys/crc.h
      cleanup: include/: move disk_access.h to disk/disk_access.h
      cleanup: include/: move power.h to power/power.h
      cleanup: include/: move sys_io.h to sys/sys_io.h
      cleanup: include/: move json.h to data/json.h
      cleanup: include/: move zephyr/jwt.h to data/jwt.h
      cleanup: include/: move watchdog.h to drivers/watchdog.h
      cleanup: include/: move adc.h to drivers/adc.h
      cleanup: include/: move aio_comparator.h to drivers/aio_comparator.h
      cleanup: include/: move can.h to drivers/can.h
      cleanup: include/: move clock_control.h to drivers/clock_control.h
      cleanup: include/: move counter.h to drivers/counter.h
      cleanup: include/: move dma.h to drivers/dma.h
      cleanup: include/: move entropy.h to drivers/entropy.h
      cleanup: include/: move flash.h to drivers/flash.h
      cleanup: include/: move gna.h to drivers/gna.h
      cleanup: include/: move gpio.h to drivers/gpio.h
      cleanup: include/: move hwinfo.h to drivers/hwinfo.h
      cleanup: include/: move i2c.h to drivers/i2c.h
      cleanup: include/: move i2s.h to drivers/i2s.h
      cleanup: include/: move ipm.h to drivers/ipm.h
      cleanup: include/: move led.h to drivers/led.h
      cleanup: include/: move led_strip.h to drivers/led_strip.h
      cleanup: include/: move pinmux.h to drivers/pinmux.h
      cleanup: include/: move pwm.h to drivers/pwm.h
      cleanup: include/: move rtc.h to drivers/rtc.h
      cleanup: include/: move sensor.h to drivers/sensor.h
      cleanup: include/: move spi.h to drivers/spi.h
      cleanup: include/: move uart.h to drivers/uart.h
      cleanup: include/: move display.h to drivers/display.h
      cleanup: include/: move ring_buffer.h to sys/ring_buffer.h
      cleanup: include/: move misc/__assert.h to sys/__assert.h
      cleanup: include/: move misc/byteorder.h to sys/byteorder.h
      cleanup: include/: move misc/dlist.h to sys/dlist.h
      cleanup: include/: move misc/errno_private.h to sys/errno_private.h
      cleanup: include/: move misc/fdtable.h to sys/fdtable.h
      cleanup: include/: move misc/libc-hooks.h to sys/libc-hooks.h
      cleanup: include/: move misc/list_gen.h to sys/list_gen.h
      cleanup: include/: move misc/math_extras.h to sys/math_extras.h
      cleanup: include/: move misc/math_extras_impl.h to sys/math_extras_impl.h
      cleanup: include/: move misc/mempool_base.h to sys/mempool_base.h
      cleanup: include/: move misc/mempool.h to sys/mempool.h
      cleanup: include/: move misc/mutex.h to sys/mutex.h
      cleanup: include/: move misc/printk.h to sys/printk.h
      cleanup: include/: move misc/rb.h to sys/rb.h
      cleanup: include/: move misc/sflist.h to sys/sflist.h
      cleanup: include/: move misc/slist.h to sys/slist.h
      cleanup: include/: move misc/speculation.h to sys/speculation.h
      cleanup: include/: move misc/util.h to sys/util.h
      cleanup: include/: move misc/gcov.h to debug/gcov.h
      cleanup: include/: move misc/stack.h to debug/stack.h
      cleanup: include/: move misc/reboot.h to power/reboot.h
      CODEOWNERS: update file with new locations
      docs: make doxygen happy with new locations
      CODEOWNERS: update architecture owners
      arch: x86: remove unused NANO_ISF
      kernel: msgq: avoid single char variables for msgq
      doc: exclude internal symbols
      arch: arc: build cache.c conditionally
      tests: schedule_api: minor cleanup
      manifest: update to latest ci-tools revision
      samples: spi_flash: remove whitelisting
      samples: grove_temperature: cleanup whitelisting
      soc: ke1xf: fix SPI device numbering
      tests: build_all: remove whitelisting on arduino_101
      samples: quark_se_c1000_devboard does not have Wifi
      boards: hifive1: add aliases for pwm
      boards: hifive1: add supported peripherals
      samples: net: quark/arduino 101 do not have ethernet support
      boards: arduino_due: this board does support gpio
      boards: add supported devices to boards
      build: dts: also look for application specific dts overlay
      arduino_due: do not build gpio_sam driver
      samples: mass_storage: remove whitelisting
      samples: console: remove whitelisting
      boards: mark boards as supporting usb_cdc in DT
      samples: hid-mouse: use DT filtering instead of platform_exclude
      samples: hci_usb: remove whitelisting
      tests: bluetooth: shell: remove whitelisting on arduino_101
      samples: i2c_fujitsu_fram: remove whitelisting
      drivers: pwm: sifive: fix DTS defines
      samples: blink_led: remove whitelisting
      samples: fade_led: remove whitelisting
      samples: servo_motor: remove whitelisting
      drivers: pwm: imx: replace deprecated DTS macros
      boards: colibri_imx7d_m4: this board supports PWM
      tests: pwm_api: remove whitelisting
      tests: gpio: remove whitelisting
      tests: i2c: remove whitelisting
      tests: pinmux: remove whitelisting
      samples: webusb: remove whitelisting
      samples: led_apa102c_bitbang: remove whitelisting
      doc: move schedling doc to its own section
      doc: scheduler: add diagrams illustrating scheduler
      boards: remove galileo board
      boards: remove arduino 101 and related boards
      boards: remove quarl_se_c1000
      x86: remove code for interrupt forwarding bug
      doc: minnowboard: add grub docs
      toolchain: remove issm support
      gpio: remove unused qmsi driver
      i2c: remove unused qmsi driver
      ext: hal: make TI HAL a zephyr module
      ext: hal: atmel: move atmel HAL to external module
      ext: hal: make openisa HAL a zephyr module
      ext: hal: make microchip HAL a zephyr module
      ext: hal: Make NXP HALs a Zephyr module
      requirements: sort alphabetically
      requirements: add west>-0.6.0
      ci: use v0.9 docker image
      samples: arc_secure_services: fix harness
      samples: add harness to exclude from device testing

Andrei Emeltchenko (77):
      samples: usb: hid: Enable harness for the sample
      usb: tests: Enable other boards for test
      samples: usb: Add depends_on gpio
      tests: usb: Fix checking error code
      native_posix: Enable USB device for the board
      tests: usb: Add usb_read() for invalid endpoint
      samples: usb: mass: Add whitelist mass storage on ram
      tests: usb: Cleanup tests
      tests: usb: Add write() and set_callback() tests
      usb: usb_dc_dw: Fix valid endpoints check
      usb: usb_dc_native_posix: Fix valid endpoints check
      usb: usb_dc_dw: Check endpoint is valid
      usb: usb_dc_native_posix: Check endpoint is valid
      usb: usb_dc_kinetis: Verify endpoint is valid
      usb: usb_dc_kinetis: Fix using invalid index
      tests: usb: Add more USB DC tests and refactor names
      tests: usb: Add usb_read() for invalid endpoint
      tests: usb: Add write() and set_callback() tests
      usb: usb_dc_stm32: Add missing function
      usb: device: Use set_endpoint helper for set_config
      usb: device: Use set_endpoint helper
      usb: Add Kconfig template for DEVICE_COUNT
      usb: hid: Use UTIL_LISTIFY and device count macro
      samples: usb: Correct USB HID device name
      usb: cdc_acm: Use UTIL_LISTIFY and device count macro
      samples: cdc_acm: Update CDC ACM Device name
      samples: hid-cdc: Update USB device names and project conf
      tests: usb: Add endpoint allocation verification test
      usb: device: Code cleanup
      usb: Remove usb_dc_ep_set_callback return code
      usb: dc: native_posix: Increase number of endpoints supported
      usb: tests: Add second IN endpoint to test
      usb: usb_dc_stm32: Return EAGAIN on lock failure
      usb: device: Handle EAGAIN for device transfer
      usb: Fix automatic assignment endpoints
      usb: webusb: Strip 'serial' from names
      usb: webusb: Update license header
      usb: webusb: Fix logging for webusb
      usb: webusb: Remove unneeded headers
      usb: webusb: Fix payload for vendor requests
      usb: webusb: Add more log output
      tests: usb: desc_sections: Use automatic endpoint assignment
      tests: usb: desc_sections: Check EP assignment order
      usb: Add log for endpoint assignment
      tests: usb: desc_sections: Cleanup test
      uart: doc: Add special case for virtual UART
      usb: device: Add usb_transfer_is_busy() function
      samples: usb: cdc_acm: Update CDC ACM echo sample
      usb: cdc_acm: Refactor USB serial code
      samples: usb: cdc_acm_composite: Refactor sample
      usb: webusb: Fix callback not called
      tests: usb: desc_sections: Fix coverity issue
      tests: usb: desc_sections: Fix coverity issue
      usb: device: Add transfer cancel helper
      usb: device: Do not call callback when transfer is cancelled
      usb: device: Cancel all transfers on disconnect
      usb: device: Add debug logs catching re-enable failures
      usb: webusb: Trivial syntax fix
      usb: device: Disable endpoints on disconnect and suspend
      usb: device: Do not return error if ep already enabled
      drivers: usb: usb_dc_nrfx: Set cfg.en to false on Reset
      usb: Set correct default buffer size for RNDIS
      samples: net: echo_server: Fix usbnet configuration
      usb: device: Remove unused variable
      usb: Align legacy and composite interface
      tests: usb: device: Refactor device api test
      samples: usb: webusb: Use new descriptor placement API
      samples: usb: webusb: Use Automatic endpoint assignments
      samples: usb: wpanusb: Refactor sample using new API
      usb: dfu: Remove old composite configuration
      samples: usb: hid: Fix harness configuration
      doc: usb: Remove old API documentation
      usb: console: Initialize USB console after USB Device stack
      usb: usb_descriptor: Trivial syntax correct
      usb: drivers: usb_dc_stm32: Fix coverity issue
      usb: drivers: usb_dc_stm32: Fix coverity issue
      samples: usb: webusb: Remove dependence on GPIO

Andrei Gansari (11):
      ext: LPC54114 fsl_power and fsl_reset moved to device
      ext: import_mcux_sdk.py script changes
      ext: update nxp mcux lpc sdk
      soc: added LPC5500 family
      dts: LPC55S69 initial device tree
      boards: lpcxpresso55s69 initalization
      doc: lpclink2 firmware reference
      drivers: uart for LPC devices interrupt enabled
      soc: k64f MPU configured to always allow ENET
      soc: k64f MPU configured to always allow USB
      drivers: eth_mcux: event corrected init->reset

Andrew Boie (119):
      arc: print human-readable exception info
      userspace: fix copy from user locking
      CODEOWNERS: minor adjustment
      arc: arm: fix support for MPUs on non-XIP systems
      tests: getaddrinfo: fix stack overflow
      tests: pipe: fix error with optimization disabled
      kernel: increase workq sizes if COVERAGE=y
      testsuite: fix memory access
      newlib: fix user mode calls to _sbrk
      tests: cmsis_v2: don't hard-code stack sizes
      lib: cmsis_v2: set default dynamic stack size
      lib: cmsis_v2: increase stack sizes if coverage
      tests: cmsis_v1: properly set stack size
      lib: cmsis_v1: set stack size larger if coverage
      tests: timer_api: run in user mode
      tests: ethernet_mgmt: enable random generator
      tests: mqtt_publisher: enable random numbers
      tests: ieee802154: set min_ram
      kernel: adjust default main stack for riscv
      tests: stackprot: don't set main stack size
      boards: qemu_x86: properly enable XIP
      kernel: fix k_stack_alloc_init()
      kernel: timeout: add syscall for runtime clk freq
      samples: cmsis philosophers: adjust stack size
      samples: philosophers: pause before main() exit
      tests: tickless_concept: disable for coverage
      x86: add qemu_x86_coverage target
      requirements.txt: add gcovr
      doc: fix coverage report documentation
      tests: mutex_api: run in user mode
      kernel: init: exclude some funcs from coverage
      kernel: init: fix coverage gap
      kernel: init: exclude unreachable code
      kernel: allow k_sleep(K_FOREVER)
      tests: queue: test k_queue_alloc_*pend()
      kernel: idle: exclude no-op funcs from coverage
      lib: os: remove dead code
      tests: poll: expand userspace coverage
      tests: getaddrinfo: set newlib heap size
      tests: schedule_api: fix extern tstacks
      tests: schedule_api: exercise SCHED_MULTIQ
      tests: schedule_api: test syscalls from usermode
      tests: schedule_api: skip test assert if COVERAGE
      kernel: offsets: exclude from coverage
      tests: common: cover k_cycle_get_32() syscall
      tests: userspace: cover missing/bad syscalls
      tests: dynamic_thread: cover thread_idx_free()
      tests: userspace: cover z_object_recycle()
      tests: device: cover device_get_binding()
      tests: thread_apis: exercise some system calls
      kernel: exclude stubs from code coverage
      lib: os: fix vsnprintk coverage
      lib: os: exclude z_arch_printk_char_out()
      tests: sys_mutex: improve code coverage
      kernel: cover k_usleep() from user mode
      tests: futex: improve coverage
      x86: only use lfence if x86 bcb config enabled
      kernel: cover k_array_index_sanitize()
      kernel: delete k_futex_init()
      lib: os: fix slist code coverage
      kernel: test coverage for sflist
      tests: common: add tests for extra sflist APIs
      tests: mem_alloc: don't set main thread size
      arc: use different load instruction
      kernel: fix CONFIG_THREAD_NAME from user mode.
      tests: schedule_api: cover priority checks
      sanitycheck: extend coverage timeout
      sanitycheck: don't multiply CPU count
      sanitycheck: correct timeout extension comment
      sanitycheck: make coverage reports easier to do
      tests: json: improve code coverage
      tests: fatal: test failed assertion
      include: gcov: fix compilation error
      tests: fp_sharing: properly dump coverage data
      sanitycheck: workaround file limits
      drivers: ipm_console: increase coverage stack size
      tests: ipm: remove superfluous configs
      tests: crc: convert to regular test case
      doc: update coverage documentation
      sanitycheck: select gcov tool based on target
      x86: allow user mode to induce kernel oops
      tests: force stack canaries off for two user tests
      assert: generate oops if invoked from usermode
      userspace: add kobject flag for drivers
      mec1501: fix dts build error
      arm: don't use exc reason codes for internal state
      kernel: consolidate error handling code
      kernel: abolish _default_esf
      kernel: support log system for fatal errors
      arc: use z_fatal_error() for spurious IRQs
      arm: fix exception reason code for bad syscall
      arm: dump registers on fatal exceptions
      kernel: rename NANO_ESF
      sanitycheck: simplify fault detection
      tests: uart_basic_api: fix configuration
      tests: z_except_reason() policy from usermode
      x86: support very early printk() if desired
      userspace: set stack object earlier
      tests: increase main stack size for x86 with ztest
      x86: make guard pages ro instead of non-present
      x86: reserve room for per-thread page tables
      x86: add debug functions for dumping page tables
      x86: add functions to get/set page tables
      x86: report CR3 on fatal exception
      userspace: clarify k_mem_partition_add()
      userspace: adjust arch memory domain interface
      x86: use per-thread page tables
      x86: use a struct to specify stack layout
      kernel: add z_fatal_halt() to interface
      tests: clean up fatal error handlers
      kernel: remove log system support for fatal msgs
      x86: generate page tables at runtime
      x86: add prep_c function
      x86: ia32: do not use the first megabyte
      x86: add build assert that RAM bounds <= 4GB
      xtensa: mask interrupts earlier
      tests: fatal: increase robustness
      sys_sem: add build time definition macros
      libc: newlib: make sbrk() thread-safe

Andrew Fernandes (3):
      drivers: spi: nrfx: allow enabling DMA with the nRF52832 despite PAN 58
      drivers: spi: nrfx: fix a CMakeLists.txt bug introduced in e96673d
      adc: explicitly cast (const void *) to (const adc_driver_api *)

Andrzej Głąbek (20):
      ext: hal: nordic: Update nrfx to version 1.7.1
      drivers: pwm_nrfx: Correct prescaler value for undivided clock
      ext: nrfx: Reserve PPI channels and groups used by pwm_nrf5_sw driver
      ext: nrfx: Reserve PPI channels and groups used by Bluetooth controller
      bluetooth: controller: hal: Correct the bit mask of used PPI channels
      boards: nrf52840_pca10059: Configure NFC pins as GPIOs by default
      usb: kconfig: nrf52840: Enable REMOTE_WAKEUP option only when needed
      Revert ""drivers: usb: usb_dc_nrfx: Set cfg.en to false on Reset""
      drivers: usb_dc_nrfx: Add pre-transfer checks if endpoint is enabled
      scripts: dts: Add special handling of '+' in 'str_to_label' function
      scripts: dts: Add extraction of clock frequency for fixed clock
      drivers: usb_dc_nrfx: Use dedicated work queue for handling ISR events
      ext: hal: nordic: Update nrfx to version 1.7.2
      ext: nordic: Align nrfx_config_* files with templates from nrfx v1.7.2
      drivers: i2c_nrfx_twi: Make use of NRFX_TWI_FLAG_SUSPEND
      soc: nordic: Add HAS_HW_NRF_RADIO_IEEE802154  Kconfig option
      dts: nordic: nrf9160: Remove redundant aliases
      drivers: entropy: nrf5: Fix dependency of the enabling Kconfig option
      soc: nrf9160: Remove unsupported Kconfig option GPIO_AS_PINRESET
      drivers: gpio_nrfx: Correct the way the callbacks are fired

Andrzej Puzdrowski (35):
      dfu/boot: non-secure app support
      dfu/boot: Replace flash partitioning terminology
      drives/flash: use nrfx for nrf
      drives/flash: provide boundaries info for nRF9160
      tests/drivers/soc_flash_nrf: fix lack of disabled protection
      samples/drivers/soc_flash_nrf: enable nrf9160_pca10090 targets
      dfu: introduce progressive erasing
      usb/class/usb_dfu: support progressive image erase
      dfu/img_util: : non-secure app support
      boards/x86/qemu_x86: increase RAM size
      fs/nvs: fix startup for 2-sectors configuration
      tests/fs/nvs: GC full round test
      doc/reference/storage/settings: storage behavior description
      stats: fix Coverity CID :198875
      dfu/boot: double swap on interrupted revert bugfix adaptation
      dfu/boot: make swap_type optional
      drivers/flash: add read alignment requirement comment
      boards/qemu_x86: fix qemu memory map
      boards/qemu_x86: fix emulated program memory size
      drivers/flash/flash_simulator: switch to use DT_FLASH_SIM labels
      drivers/flash/flash_simulator: fix flash size calculation
      fs/nvs: preserve the previous ate searching
      fs/fcb: add API documentation to the header
      doc/reference: add FCB page
      tests/subsys/fs/nvs: init on full storage test
      fs/nvs: fix delete ate accommodation
      fs/nvs: fix initialization hang if sector is full
      fs/nvs: skip deletion on non existing entry
      tests/subsys/fs/nvs: entry delete test
      tests/subsys/settings/fcb: add check for target compatibility
      doc/reference/storage/settings: fix misleading examples
      doc/settings: doxygen for settings read callback method
      settings: align nvs read_callback return value
      tests/subsys/settings/fcb: deletion test
      tests/subsys/settings/fcb_int: add storage preparation

Andy Doan (2):
      sanitycheck: Allow custom arguments for west-flash
      sanitycheck: Add a ""test-only"" option

Andy Ross (47):
      scripts/sanitycheck: Precompile test-time regular expressions
      arch/x86_64: Suppress spurious linker-generated code in the 32 bit stub
      arch/*: Add z_arch_irq_unlocked() predicate and test
      kernel/thread_abort: Swap, don't reschedule when aborting _current
      tests/kernel/fatal: Fix wait-for-interrupt delay in stack check test
      kernel/fatal: Clean up z_except_reason() fallback implementation
      kernel/sched: Don't reschedule inside a nested lock
      kernel/smp: Rename smp_init()
      include/drivers/system_timer.h: Clean up docs
      samples/boards/nrf52/power_mgr: Correct test integration
      samples/subsys/power/device_pm: Add test harness integration
      samples/subsys/usb/dfu: Set sanitycheck test to build_only
      sanitycheck harness: Correct ordered regex handling
      lib/os/mempool: Fix corruption case with block splitting
      Revert ""tests: tickless_concept: Fix slicing time measurement""
      kernel/timeout: Remove ""clock_always_on"", replace with ""SLOPPY_IDLE""
      drivers/timer/nrf_rtc_timer: Fix round-up for rapid tick rates
      tests/kernel/mem_pool: Fix timeout units
      tests: samples: Apps shouldn't set tick rate
      kernel: Crank up default tick rate
      boards/arm: Remove 1000 Hz tick rate on STM32 boards
      boards/arc: Remove tick rate settings for ARC hardware
      soc/arm: Increase nRF timer default to the cycle rate.
      soc/arm: Remove 1 kHz tick rate default for mcimx7_m4 and msp432p401r
      tests/kernel/sched/schedule_api: Fix slice time test for fast ticks
      tests/kernel/common: Fix uptime delta test for fast ticks
      tests/kernel/context: Fix sleep test for fast ticks
      drivers/sensor/hp206c: Clarify tick rate warning
      kernel/sched: Interpret zero timeslice time correctly
      tests/kernel/sleep: Fix usleep test for fast ticks
      tests/kernel/tickless/tickless_concept: Force 100 Hz ticks
      tests/kernel/early_sleep: Fix for fast ticks
      tests/kernel/workq/work_queue: Fix for fast/non-standard tick rates
      tests/posix/common: Adjust miscalibrated timing test
      tests/cmsis_rtos_v1: Correct timing assumptions
      CMSIS v2: Work around time unit confusion
      kernel/mempool: Fix ticks/ms confusion
      kernel/sched: Fix k_thread_priority_set() on SMP
      cmake: Remove check_link_map.py
      tests/kernel/sched/schedule_api: Fix static analysis volatile warning
      tests/kernel/fp_sharing: Fix static analysis warning
      tests/kernel/common: Fix dead code in sflist test
      arch/common: Provide a weak, generic z_arch_irq_connect_dynamic()
      arch/xtensa: Add z_arch_irq_is_enabled()
      tests/kernel/interrupt: Add a simple dynamic interrupt test
      arch/xtensa: Clean up fatal error handling
      kernel/mutex: Fix locking to be SMP-safe

Anton Gerasimov (1):
      arch: arm: fix ""template with C linkage"" in cmsis.h

Antony Pavlov (15):
      doc: application: fix duplicated word
      ext/hal/st/stm32cube/stm32l1xx: rename SVC_IRQn -> SVCall_IRQn
      dts: riscv32: rv32m1: fix reg value for cpu@1
      boards: arm: unify Nucleo-64 boards connectors image
      samples/drivers/watchdog: make it work on STM32
      boards/arm/olimexino_stm32: enable watchdog
      boards/arm/*/*dts: fix double whitespace in model property
      boards/arm/olimexino_stm32: fix compatible dt property
      boards/arm/mikroe_mini_m4_for_stm32: fix model&compatible dt properties
      treewide: fix typos
      boards/arm/olimexino_stm32: register led1
      scripts/checkpatch.pl: fix root dir detection and enable it
      dts: import vendor-prefixes.txt from linux kernel
      boards/arm/*stm32*: fix USB pinmux
      boards/arm/olimex_stm32_e407: enable USB

Armando Visconti (16):
      driver/audio: mpxxdtyy: Added support for 2 microphones (stereo)
      boards: 96b_argonkey: upgrade documentation using official info
      drivers/i2s_ll_stm32.c: (FIX) Avoid warning in LOG_ERR
      modules/hal_st: Add stmemsc HAL library
      driver/sensor: lis2dw12: make use of STdC definitions
      driver/sensor: add LPS22HH sensor support
      driver/sensor: lsm6dso: Add support
      boards/arm: Add arduino_header support to nucleo f401re and f411re
      boards: add support for shields x-nucleo-iks01a3
      sample/shield: add support to x-nucleo-iks01a3 shield
      driver/sensor: add STTS751 temperature sensor
      board/shields: x-nucleo-iks01a3: add STTS751 configuration in overlay
      sample/shield: x-nucleo-iks01a3: add support to STTS751
      dts: bindings: st,stts751-i2c.yaml: (FIX) Remove unused 'version' field
      driver/sensor/lsm6dso: Fix deprecated macros CS_GPIO_* to CS_GPIOS_*
      dts: stm32l4r5: (FIX) Provide clock info for spi3 controller

Arnaud Pouliquen (12):
      soc: stm32: add initial soc support for stm32mp1 family
      ext: hal: Enable support for stm32mp1xx hal
      ext: hal: add stm32mp1 exti ll driver
      dts: add declaration of stm32mp157
      drivers/interrupt_controller: stm32: add support of stm32mp1
      boards: arm: Add support for STM32MP157 Discovery board
      ext: hal: fix naming in rcc ll
      codeowners: add reviewer for stm32mp1 SoC
      board: remove useless config in Avenger96 board
      drivers: introduce ipm driver for stm32
      ipm: Add support for stm31mp1 Soc
      ipm: Add support for stm31mp157c_dk2 board

Arthur Crepin-Leblond (2):
      Bluetooth: gatt: Reuse existing handles from a previously added service
      Bluetooth: gatt: Fix DB corruption when adding/removing service

Asbjørn Sæbø (1):
      Bluetooth: Add log_strdup() to BT_ERR string arguments

Asger Munk Nielsen (5):
      bluetooth: Controller: Refactor node_rx footer to avoid ptr arithmetic
      Bluetooth: controller: Enable use of proprietary rx demuxing functions
      Bluetooth: controller: Enable use of user defined protocols
      Bluetooth: controller: Moved advanced settings in Kconfig
      Bluetooth: Controller: Test for user extensions

Augusto Hack (1):
      arch: common: gen_isr_tables table size check

Aurelien Jarno (9):
      ext: hal: atmel: import SAM E70 HAL revision B
      ext: hal: atmel: same70b: apply same patches than on rev A
      soc: same70: add support for revision B
      soc: same70: check for mismatch between chip and HAL CIDR
      boards: support the SAME70Q21B on the SAM E70 Xplained Board
      CODEOWNERS: Add codeowner for Atmel SAME70 HAL
      usb: move the request handler buffer to the USB device code
      usb: merge all request handler buffers
      usb: simplify request handlers code

Balaji Kulkarni (1):
      libc: minimal: Add bsearch function

Benjamin Lindqvist (2):
      drivers: nrf: Trigger STOP RX event and wait before disabling UARTE
      Power: Fix various spurious LOG_ERR calls

Benjamin Valentin (21):
      drivers: hwinfo: add driver support for Atmel SAM0 device ID
      soc: sam0: Enable generic peripheral selection
      net/icmpv4: Include icmp_hdr in callback
      net/icmpv4: Allow for arbitrary payload data in ICMP echo
      net/icmpv6: Allow for arbitrary payload data in ICMP echo
      net: shell: Improve the output of the ping function
      usb: sam0: Ensure API arguments are valid
      usb: sam0: Implement missing API functions
      ext: Import Atmel SAMR21 header files from ASF library
      soc: atmel: add SAMR21
      boards: atsamr21_xpro: Add SAM R21 Xplained Pro Evaluation Kit
      CODEOWNERS: Add code ownership for Atmel samr21 code
      soc: sam0: enable RTC for samd21, samr21
      soc: sam0: Make init code common between all samd2x SoCs
      cmake: gdb: use gdb-multiarch if ${CROSS_COMPILE}gdb is not availiable
      drivers: watchdog: sam0: Check if timeout is valid
      boards: enable i2c on the SAM R21 Xplained Pro board
      soc: sam0: add I2C to dts_fixup.h
      samples: nrf52: power_mgr: Fix build with prj_tickless.conf config
      drivers/uart: introduce SERIAL_SUPPORT_ASYNC option
      tests: drivers: uart: depend on SERIAL_SUPPORT_ASYNC for ASYNC test

Benoit Leforestier (6):
      C++: Fix compilation error ""invalid conversion""
      DTS: Add UART 5 for STM32F4 SOC
      API: Uart: Add support of 9 bits data length
      Driver: Uart: Add support of 9 bits data length for STM32
      Build: Build with newlib-nano c library
      codeowner: add codeowners for /test/lib

Bernard Lee (9):
      display: ili9340: Make reset gpio definition optional.
      display: ili9340: Add RGB565 pixel format support.
      display: ili9340: Adafruit LCD 1480 driver supports RGB565 pixel format.
      display: ili9340: Add support of Seeed 2.8"" TFT Touch Shield v2.0.
      samples: display: ili9340: Get ILI9340 device by DT label.
      samples: display: ili9340: ST NUCLEO-L476RG config file.
      samples: display: ili9340: Add support of RGB565 pixel format.
      samples: display: ili9340: Add 2 Arduino shield sample configurations.
      samples: display: ili9340: Document 2 Arduino TFT shield configurations.

Bosch Sensortec (4):
      include: added new sensor channel SENSOR_CHAN_GAS_RES
      driver: sensor: bme680 added support
      samples: sensor: bme680 added sample code
      dts : bindings : sensor : bme680 Added support for BME680

Bradley Bolen (30):
      cmake: Fix missing dependency
      shell: Fix checks of Kconfig options
      logging: Fix checks of Kconfig option
      tracing: Fix checks of Kconfig options
      arch: arm: Fix check of Kconfig option
      arch: arc: Fix checks of CONFIG_USERSPACE
      arch: arc: Fix checks of CONFIG_ARC_FIRQ
      arch: arc: Fix checks of CONFIG_STACK_POINTER_RANDOM
      arch: arm: Fix checks of CONFIG_USERSPACE
      arch: arm: Fix checks of CONFIG_IRQ_OFFLOAD
      arch: arm: Fix checks of CONFIG_ZERO_LATENCY_IRQS
      arch: arm: Fix checks of CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT
      arch: arm: Move irq_init.c to cortex_m specific directory
      arch: arm: Move thread_abort.c to cortex_m specific directory
      arch: arm: Move fault.c to cortex_m directory
      arch: arm: Move nmi code for Cortex-R support
      arch: arm: Move prep_c.c to common location
      arch: arm: Move header files to common location
      arch: arm: Move Cortex-M specific CPU defines
      arch: arm: cpu_idle: Remove unused functions
      drivers: interrupts: Add a set_priority callback
      interrupt_controller: gic: Add support for the GIC400
      Revert ""toolchain: gcc: Remove ref. to undefined sym. CONFIG_ISA_ARM""
      arch: arm: Add Cortex-R support
      arch: arm: cortex_r: Add memory barriers for register accesses
      arch: arm: Add Cortex-R4 support
      arch: arm: Add Cortex-R5 support
      soc: arm: xilinx_zynqmp: Add qemu based SoC
      boards: qemu_cortex_r5: Add qemu test board for the Cortex-R series
      cmake: emu: Allow overriding the qemu binary

Brett Witherspoon (32):
      net: fix errno returned without promiscuous mode support
      drivers: ieee802154: Make upipe configuration options depend on driver
      drivers: adxl362: use logger API
      ext: simplelink: import HAL from TI CC13x2 / CC26x2 SDK 3.10.00.53
      ext: simplelink: modify CC13x2/CC26x2 CCFG to use appropriate sections
      soc: ti_simplelink: add support for TI CC13x2 / CC26x2 series
      boards: cc26x2r1_launchpad: add support for TI CC26x2R LaunchPad
      boards: cc1352r1_launchxl: add support for TI CC1352R LaunchPad
      CODEOWNERS: Add codeowner for TI CC13x2 / CC26x2 files
      drivers: adxl362: don't skip mutex unlocking in error path
      drivers: adxl362: use Kconfig for interrupt mode
      drivers: adxl362: don't disable callbacks
      drivers: adxl362: check interrupt status
      drivers: adxl362: clear status independently and before mapping
      drivers: add CC13xx / CC26xx entropy driver
      boards: cc26x2r1_launchxl: enable TRNG entropy source support
      boards: cc1352r1_launchxl: enable TRNG entropy source support
      samples: add ADXL362 sensor sample application
      drivers: gpio_c13xx_cc26xx: fix control flow issue
      drivers: adxl362: fix control flow issue
      drivers: adxl362: fix acceleration sample conversion
      drivers: adxl362: rework temperature conversion
      drivers: add CC13xx / CC26xx I2C driver
      boards: cc26x2r1_launchxl: enable support for I2C
      boards: cc1352r1_launchxl: enable support for I2C
      drivers: adxl362: use burst transfer
      drivers: add CC13xx / CC26xx SPI driver
      dts: add CC13xx / CC26xx SPI bindings and nodes
      boards: cc26x2r1_launchxl: enable support for SPI
      boards: cc1352r1_launchxl: enable support for SPI
      soc: cc13x2_cc26x2: support setting CCFG values via Kconfig
      boards: cc1352r1_launchxl / cc26x2r1_launchxl: enable ROM bootloader

Bub Wei (2):
      samples: net: zperf: Add __packed for zperf_udp_datagram
      samples: net: zperf: Remove unnecessary main

Cami Carballo (3):
      tests: fdtable: add tests
      tests: base64: add tests for error paths
      tests: net: increase stack size

Carles Cufi (54):
      west: build: Use officially documented CMake options
      west: build: Add new pristine cmd-line and config option
      doc: extract_content: Allow for absolute paths in deps
      drivers: Bluetooth: Generalize IC-specific setup hook
      scripts: west: Run pristine.cmake directly instead of the target
      cmake: Split out board listing from usage
      west: Implement CMake helpers in scripts/west_commands
      west: Add a boards command
      west: build: Construct CalledProcessError with positional args
      west: boards: Use the new zcmake module name
      Bluetooth: controller: hal: Fix PPI macro naming
      west: Add bash completion file
      west: Add completion command
      doc: west: Document west installation in-depth
      boards: holyiot_yj16019: Remove counter from supported
      tests: counter: Enable nRF52810 testing
      kernel: Fix usage of CONFIG_SYS_CLOCK_EXISTS
      soc: nrf: Conditionally enable clock control and timer
      samples: basic: Add a minimal sample
      doc: coding style: Expand the list of keywords with braces
      cmake: Fix path handling for ZEPHYR_BASE
      doc: CMake: Locate Python executable before processing modules
      west: Use find_build_dir in run_common
      west: build: Configurable build folder format
      doc: extensions: Refactor cmake build instructions generation
      doc: Cleanup references to cmake
      doc: extensions: Default to 'all' in 'tool'
      Bluetooth: hci_uart: Use DT for the hci_uart UART
      Bluetooth: hci_uart: Assert if device is NULL
      west: runners: Guess build folder
      drivers: rtc: Adapt to new counter API
      cmake: Encode and decode in UTF-8 in build system
      west: Load CMakeCache.txt as a UTF-8 encoded file
      boards: nrf52840_pca10059: Enable ADC in DT
      samples: usb: console: Remove overlay file
      doc: getting_started: Add CMake snap installation option
      doc: getting_started: Document DTC version installation
      doc: getting_started: Remove Linux distro versions
      doc: Consolidate Python and pip documentation
      doc: Minor fixes to the Getting Started guide
      cmake: Instruct Python to use UTF-8 on Windows
      tests: mesh_shell: Optimize prj.conf to fit in nrf51
      samples: net: civetweb: Remove strcspn() implementation
      doc: guides: tools: Fix URL to nRF Command-line tools
      doc: Update Slack invitation link
      doc: getting started: Use -U when installing west
      doc: west: Fix west completion docs
      Bluetooth: controller: Ensure that a `case` statement is present
      Bluetooth: controller: Disable AE by default
      Bluetooth: samples: Reduce the bbc_microbit RAM usage
      tests: kernel: mutex: Require 32kB RAM when building with USERSPACE
      ext: hal: Make Nordic HALs a Zephyr module
      doc: relnotes: Bluetooth release notes for 2.0
      doc: Use west everywhere to build and flash

Carver Forbes (1):
      drivers/counter_cmos.c: Add config struct

Charles E. Youse (87):
      uart/ns16550, drivers/pcie: add PCI(e) support
      drivers/gpio_intel_apl.c: fix return value for gpio_pin_read()
      drivers/gpio/gpio_intel_apl: remove dependency on shared interrupts
      drivers/pcie: verify PCI(e) assigned interrupts
      boards/up_squared: declare myself King of the up_squared
      boards/galileo: adjust PCI-related configuration
      drivers/uart_ns16550: remove unnecessary #include
      drivers/pcie: add support to read wired IRQ configuration
      drivers/uart_ns16550: move UART configuration boilerplate to template
      drivers/uart_ns16550: enable auto IRQ detection for PCI(e) endpoints
      boards/x86/up_squared: move UART configuration to apollo_lake.dtsi
      drivers/uart_ns16550: fix style issues flagged by Zephyrbot
      arch/x86: CONFIG_BOOTLOADER_UNKNOWN renamed to CONFIG_X86_MULTIBOOT
      include/sys_clock.h: simplify _NEED_PRECISE_TICK_MS_CONVERSION
      include/sys_clock.h: consolidate identical branches in __ticks_to_ms
      boards/up_squared: remove CONFIG_SBL_FIXUP
      boards/up_squared: temporarily remove I2C support
      boards/up_squared: remove SBL-specific board configuration
      drivers/i2c/i2c_dw.c: templatize device configuration boilerplate
      drivers/i2c/i2c_dw.c: rewrite for PCI(e) support
      x86/apollo_lake: add I2C interfaces to devicetree
      boards/up_squared: I2C support added (back) in
      drivers/i2c_dw: update CODEOWNERS
      kernel/sched.c: refactor k_sleep() implementation for varied timescales
      kernel/sched.c: add k_usleep() API function
      tests/kernel/sleep: add tests for k_usleep() API
      soc/apollo_lake: boards/up_squared: move UART fixups to SoC
      boards/up_squared: soc/apollo_lake: devicetree default to status=""ok""
      boards/up_squared: soc/apollo_lake: enable UARTs per board, not SoC
      boards/up_squared: soc/apollo_lake: I2C driver selection at SoC
      soc/x86/apollo_lake: remove legacy PCI support
      boards/x86/gpmrb: add Gordon Peak MRB board
      arch/x86: add support for Multiboot boot information structure
      arch/x86: drivers/display: add framebuffer driver w/ multiboot support
      arch/x86: disable i8259 in crt0.S
      arch/x86: move MSR definitions to include/arch/x86/msr.h
      arch/x86: do not redefine MSR regs in crt0.S
      arch/x86: x2APIC support is not specific to jailhouse
      boards/x86_jailhouse: remove support for Jailhouse hypervisor
      arch/x86: add x2APIC-aware accessors for local APIC access
      drivers/loapic_intr.c: clean up local APIC access
      drivers/timer/loapic_timer.c: migrate to new local APIC accessors
      drivers/interrupt_controller/loapic_intr.c: enable x2APIC support
      drivers/pcie/shell: add basic probe for MSI-X capability
      arch/x86/Kconfig: remove CONFIG_IA32_LEGACY_IO_PORTS
      arch/x86/Kconfig: remove CONFIG_ISA_IA32
      arch/x86/Kconfig: remove CONFIG_CMOV
      arch/x86: split Kconfig files by sub-architecture
      arch/x86: split CMakeLists.txt into subarch-specific files
      arch/x86: reorganize core source files
      drivers/counter/counter_cmos.c: implement counter with PC AT ""CMOS"" RTC
      tests/drivers/counter: add test for counter_cmos.c
      arch/x86: remove CR4_PAE_DISABLE mask
      arch/x86: used fixed initial EFLAGS on thread creation
      arch/x86: remove old PRINTK() debugging macro
      arch/x86: relocate and rename SYS_X86_RST_* constants
      boards/x86/quark_d2000_crb: drop support for Quark D2000 dev board
      soc/x86/intel_quark: remove support for Quark D2000 SoC
      drivers/adc/adc_intel_quark_d2000: remove Quark D2000 ADC driver
      drivers/interrupt_controller/mvic.c: remove MVIC interrupt controller
      arch/x86: remove CONFIG_X86_FIXED_IRQ_MAPPING support
      drivers/timer/apic_timer.c: new local APIC timer for TICKLESS_KERNEL
      boards/x86/up_squared: default to new local APIC timer
      tests/kernel/context: add case for CONFIG_APIC_TIMER
      arch/x86: merge asm_inline_gcc.h with asm_inline.h
      arch/x86: clean up model-specific register definitions in msr.h
      arch/x86: move include/arch/x86/asm.h to include/arch/x86/ia32/asm.h
      arch/x86: move arch/x86/syscall.h to arch/x86/ia32/syscall.h
      arch/x86: move include/arch/x86/arch.h to ia32/arch.h
      arch/x86: move include/arch/x86/segmentation.h to ia32/segmentation.h
      arch/x86: remove arch-specific ffs.h, rely on compiler built-ins
      arch/x86: merge include/arch/x86/asm_inline.h into arch.h
      arch/x86: move include/arch/x86/sys_io.h to ia32/sys_io.h
      arch/x86: move 32-bit linker script to ia32/ directory
      arch/x86: update msr.h to be safe with CONFIG_X86_LONGMODE
      arch/x86: eliminate include/arch/x86/irq_controller.h
      arch/x86: move arch/x86/include/mmustructs.h to ia32/mmustructs.h
      arch/x86: eliminate arch/x86/include/asm_inline.h
      arch/x86: remove swapstk.h and references to it
      arch/x86: eliminate cache_private.h
      arch/x86: move exception.h to ia32/exception.h
      arch/x86: refactor kernel_arch_data.h
      arch/x86: refactor kernel_arch_thread.h
      arch/x86: move kernel_arch_func.h to ia32/
      arch/x86: refactor offsets_short_arch.h
      arch/x86: remove support for CONFIG_REALMODE
      thread.c: remove vestigial CONFIG_INIT_STACKS cruft

Charles Youse (6):
      include/uart.h: remove unused PCI references
      boards/x86/up_squared: update documentation to include HSUART info
      ethernet/eth_e1000.c: change to new PCI(e) functions
      interrupt_controller/loapic_intr.c: remove unused MPtables constants
      boards/x86/acrn: fix documentation to reflect ""demo"" nature
      drivers/pcie: do not verify configured IRQ

Chen Guokai (1):
      doc: update macOS specific guide for MacPorts

Christian Taedcke (5):
      board: efm32hg_slstk3400a: Add storage partition
      board: efm32pg_stk3402a: Add storage partition
      board: efm32wg_stk3800: Add storage partition
      board: efr32mg_sltb004a: Add storage partition
      board: efr32_slwstk6061a: Add storage partition

Christian Tavares (4):
      lib: updatehub: Add UpdateHub.io support
      lib: updatehub: add suport a CoAPS/DTLS
      lib: updatehub: add support ipv6
      samples: gui: lvgl: fix the nRF52840 pins to run sample

Christophe Priouzeau (6):
      manifest: update to latest hal_stm32 revision.
      drivers/i2c: Add support of stm32mp1
      drivers/pinmux: add i2c5 pinmux for stm32mp1x
      soc: stm32mp157: add I2c support
      boards: stm32mp157c_dk2i: add support of i2c5
      boards: stm32mp157c_dk2: add ic2 support for arduino connector

Christopher Métrailler (1):
      env: ignore unset var

Daniel Egger (2):
      samples: net: lwm2m: use real temperature values instead of dummy
      samples: net: lwm2m_client: If hwinfo interface is enabled, use it

Daniel Leung (6):
      tests/kernel/schedule_api: also test without time slicing
      tests/kernel/device: extends test for code coverage
      cmake: bump min SDK version 0.10.1
      x86_64: minimally preparing for enabling newlib
      cmake: use sdk-ng built toolchain for x86_64
      xtensa: fix CONFIG_NUM_IRQS if !CONFIG_*_LEVEL_INTERRUPTS

Danny Oerndrup (20):
      cmake: Toolchain abstraction: Introduce toolchain_cc_warning_dw_[1-3]
      cmake: Toolchain abstraction: Introduce toolchain_cc_warning_base
      cmake: Toolchain abstraction: Introduce toolchain_cc_warning_extended
      cmake: Toolchain abstraction: Added missing colon to some <at>Intent's
      cmake: Toolchain abstraction: Introduce macros for MISRA SANE flags
      cmake: Toolchain abstraction: Abstraction of implicit-int error flag
      cmake: Toolchain abstraction: Introducing toolchain_cc_freestanding
      cmake: Toolchain abstraction: Introducing macro toolchain_cc_imacros
      cmake: Toolchain abstraction: Introducing macro toolchain_cc_nocommon
      cmake: Toolchain abstraction: Introducing macro toolchain_cc_cstd_flag
      Kconfig: Introducing ARCH_CHOICE symbol for Architecture choice group
      cmake: Toolchain abstraction: Allow for out-of-tree cmake includes
      debug: tracing: Rewrite assert on current_thread in CPU stats module
      cmake: Toolchain abstraction: Abstract compiler flag for add debug info
      cmake: Toolchain abstraction: Abstraction of binary tools, foundation.
      cmake: Toolchain abstraction: Abstraction of print memory usage.
      cmake: Toolchain abstraction: Abstraction of binary tool, objcopy.
      cmake: Toolchain abstraction: Abstraction of binary tool, objdump.
      cmake: Toolchain abstraction: Abstraction of binary tool, readelf.
      cmake: Toolchain abstraction: Abstraction of binary tool, strip.

David B. Kinder (19):
      doc: add missing doc top labels
      doc: fix watchdog API documentation
      doc: fix mentions of Wi-Fi trademark name
      doc: add references to builds mailing list
      doc: fix devicetree doc formatting
      doc: fix malformed label in shields doc
      doc: fix typo in gpmrb doc
      doc: add google analytics tracking to docs
      doc: fix doxygen comments with embedded reST
      doc: fix Kconfig misspellings
      doc: fix misspellings in documentation
      doc: fix broken references to zephyr files
      doc: use @rst/@endrst for ReST in headers
      doc: simplify doc redirection messages
      doc: fix doxygen INPUT path; brand html output
      doc: add doc home link in left nav
      doc: update link from released doc to master
      doc: add sphinx-tabs extension
      doc: remove modernizr.min.js from RTD theme

David Leach (1):
      logging: Fix misspelled CONFIG_RISCV32

Declan Traill (1):
      Settings: Fix incorrect return of -EINVAL for deleted entries

Dennis Wildmark (3):
      usb: bluetooth: l2cap buffer size now configurable
      DFU: img util: Fixed warnings when compiling with newlib
      dfu: mcuboot: Added defines for upgrade request modes

Derek Hageman (25):
      soc: sam0: Fix SAMD20 IRQ assignments
      drivers: spi: sam0: Implement DMA async API
      CODEOWNERS: Add ownership for SAM0 DMA driver
      drivers: pinmux: sam0: Remove defines from dts_fixup.h
      drivers: gpio: sam0: Remove defines from dts_fixup.h
      drivers: flash: sam0: Remove defines from dts_fixup.h
      drivers: watchdog: sam0: Remove defines from dts_fixup.h
      drivers: timer: sam0: Remove RTC defines from dts_fixup.h
      drivers: usb: sam0: Remove defines from dts_fixup.h
      soc: sam0: Remove SERCOM defines from dts_fixup.h
      drivers: adc: Add SAM0 ADC driver
      tests: drivers: adc: Add SAM0 support
      drivers: i2c: Add SAM0 I2C driver
      CODEOWNERS: Add ownership for SAM0 I2C driver
      drivers: gpio: sam0: Add interrupt support
      tests: drivers: uart: Fix async write abort test
      drivers: i2c: sam0: Fix missing break in speed setup
      Revert ""tests: drivers: uart: Fix async write abort test""
      tests: drivers: uart: Explicitly test incremental receive length
      include/uart.h: Clarify async receive event length
      drivers: counter: Add SAM0 basic counter support
      drivers: dma: sam0: Implement get_status API
      drivers: serial: sam0: Implement DMA async API
      drivers: sam0: Fix deprecated IRQ macro usage
      drivers: sam0: Fix deprecated instance macro usage

Emanuele Di Santo (7):
      boards: arm: nrf52840_pca10090: update log settings
      boards: arm: nrf52840_pca10090: add a GPIO reset line
      samples: bluetooth: hci_uart: update nrf52840_pca10090 config
      Bluetooth: hci: h4: use GPIO reset for nrf52840_pca10090 controllers
      boards: arm: nrf52840_pca10090: fix warning in board.c
      boards: arm: nrf52840_pca10090: swap error for assert in board.c
      Bluetooth: services: battery service enhancements

Erik Brockhoff (4):
      bluetooth: controller: Update slot reservation time calculation for ADV
      bluetooth: controller: Update to use new EVENT_IFS_US define
      bluetooth: controller: Add def's re. update to slot reservation calc
      bluetooth: controller: Fixing race re. adv disable in HDC

Erwan Gouriou (85):
      dts: stm32f412Xg: Factorize package definitions
      hal: stm32wbxx: Add HAL for the STM32WB series
      ext/hal/st: Adapt stm32cube folder to stm32wb introduction
      soc/arm/st_stm32: Add support for stm32wb soc
      dts/arm/st: Provide basis for stm32wb device tree
      drivers/clock_control: Add support to stm32wb series
      drivers/interrupt_controller: stm32: Add support for stm32wb series
      soc/arm/st_stm32: stm32wb: Add gpio support
      dts/arm/st: Add serial nodes on stm32wb
      drivers/pinmux: stm32: Add pinmux definitions for stm32wb (LP)U(S)ART
      boards: Add support for nulceo_wb55rg
      CODEOWNERS: Set owner to ext/hal/st
      CODEOWNERS: Add codeowner to dts/bindings/*/st,stm32
      ext/hal/st: stm32cube: Update License Link for stm23cube packages
      scripts/dts: globals: parse gpio-map properties for connector nodes
      drivers/serial: stm32: Optimize LPUART code
      drivers: serial: Enable LPUART for STM32WB
      boards: nucleo_wb55rg: Configure LPUART
      stm32: Remove redundant I2C variant Kconfig symbols definitions
      driver/i2c: stm32: Remove prompt on IP version symbols
      boards: disco_l475_iot1: create .dtsi connector file
      ext/hal/st: stm32cube Kconfig fix
      boards: nucleo_wb55rg: configure LPUART
      soc: stm32: Remove unused soc_register header file
      ext/hal/st/lib: stm32wb hci shared ram driver
      drivers/bluetooth/hci: Implement HCI driver for stm32wb
      ext/hal: stm32wb: Configure M0 FW in LL only
      include/arch/arm: linker.ld: Add shared memory sections definitions
      dts: stm32wb: Delete useless sram definitions
      boards: nucleo_wb55rg: Configure HCI driver
      drivers/flash: stm32wb: Add driver for stm32wb
      dts: stm32wb: Limit flash size to 812K
      boards: nucleo_wb55rg: Configure flash partitions
      drivers/flash: stm32wb: Add HSEM
      drivers/clock_control: stm32: Factorize series specific code
      drivers/clock_control: stm32: Split Kconfig file
      CODEOWNERS: Remove codeowners for /drivers/clock_control/*stm32f4*
      drivers/interrupt_controller: stm32: Rework stm32_exti_enable
      drivers/interrupt_controller: stm32: Remove unused code
      drivers: interupt_controller: stm32 Move exti_irq_table to const
      drivers: spi hci: Add spi dedicated rx thread
      soc/arm/st_stm32: Replace STM32 specific core selection option
      drivers/clock_control: stm32: Leftover from driver clean up
      soc: stm32: STM32L0: Remove useless package digit
      soc: stm32: STM32L4: Remove useless package digit
      soc: stm32: STM32WB: Remove useless package digit
      soc: stm32: STM32F2: Remove useless package digit
      soc: stm32: STM32F4: Remove useless package digit
      soc: stm32: STM32F7: Remove useless package digit
      boards: nucleo_wb55rg: Enable flash and debug with pyocd
      scripts: Upgrade pyocd for pack support
      soc: stm32f3: Delete obsolete FLASH_PAGE_SIZE Kconfig symbol
      west: Update hal_stm32 module to head following cube updates
      drivers/usb/device: stm32: Remove reference to unsupported low speed
      west.yml: Update hal_stm32 to fix I2C_SPEED_FAST redefinition
      soc: stm32f7: Fix fixup file for uart devices
      drivers/interrupt_controller: stm32: Fix table irq reading
      drivers: stm32: Fix leading space warnings
      west: Bump hal_stm32 to version supporting STM32H7 series
      modules: update stm32cube Kconfig with H7
      soc/arm: Provide basic support for STM32H7 series
      dts: STM32H747 basic device tree description
      drivers/clock_control: STM32H7 support
      drivers/interrupt_controller: stm32: Add support for stm32h7
      drivers/gpio: Add support on STM32H7 series
      drivers/serial: stm32: Add support for STM32H7 series
      drivers/pinmux: stm32: Add UART headers for STM32H7
      boards: Add stm32h747i_disco, C-M7 target
      soc: stm32h7: Add support for Cortex-M4 core
      dts: stm32h7: Add dtsi for m4 core
      drivers/clock_control: stm32h7: Disable configuration for CM4 core
      drivers/gpio: stm32: Add semaphore on gpio_configure
      boards: stm32h747i_disco: Add m4 target
      boards: stm32h747i_disco: Provide doc
      dts/arm/st: l0: Fix gpioe reg address
      boards: stm32h747i_disco: Fix picture size
      dts/arm/st: Remove nodes i2s4, i2s5 and i2s6
      drivers/gpio: stm32h7: Don't use HSEM_CR_COREID_CURRENT as process id
      stm32: clock_control: Enforce HCLK prescaler value
      boards: stm32h747i_disco: Enforce same clock configuration on both ...
      boards: stm32h474i_disco: Fix m4 core sys clock
      boards: nucleo_wb55rg: Add link to reference manual
      boards: stm32h747i_disco: Use default tick rate
      drivers/flash: stm32l4: Handle pages_per_bank for all variants
      samples: counter: Add err check on set_alarm call

Faisal Saleem (1):
      Settings: Improve error handling of settings load

Filip Kokosinski (11):
      dts: bindings: sram: add SiFive dtim0 bindings
      dts: riscv32: microsemi-miv: add flash and sram
      dts: riscv32: hifive1: add flash
      soc: riscv32: miv: soc.h: use defines from device tree
      soc: riscv32: sifive-freedom: soc.h: use defines from device tree
      riscv32: use device tree defines in linker
      drivers: serial: add LiteUART driver
      drivers: timer: add LiteX timer driver
      drivers: interrupt_controller: add LiteX interrupt controller driver
      soc: riscv32: add LiteX VexRiscV SoC
      boards: riscv32: add LiteX VexRiscV board

Findlay Feng (3):
      bluetooth: Fix an undefined behavior
      drivers: spi: Fix spi related files of stm32f1x
      drivers: gpio: add stm32f1x SWJ configuration

Flavio Ceolin (6):
      arch: all: Remove legacy code
      arch: all: Remove not used struct _caller_saved
      sanitycheck: Fix an error in scan_path exception
      security: kernel: Fix STACK_POINTER_RANDOM dependency
      x86: Make .rodata readonly
      libc: types: Remove wrong definition

Francisco Munoz (10):
      dts : Introduce gpio node entries for Microchip MEC
      drivers: gpio: Introduce microchip gpio driver
      soc : microchip_mec : Add gpio driver common definitions
      boards: microchip_mec: Introduce gpio to the eval board
      drivers: pinmux: Pinmux driver for Microchip SOCs
      soc: microchip_mec: mec1501 Add pinmux definitions
      boards: mec15xxevb_assy6853: Use the pinmux api
      boards: mec15xxevb_assy6853: Documentation improvements
      ext: hal: microchip:  Fix compilation issue in HAL
      boards: mec15xxevb_assy6853: Update debug control flag

Francois Ramu (11):
      soc: arm: st_stm32: Add STM32G071 SoC series
      drivers: flash: Add STM32G0XX flash support
      drivers: clock_control: Add STM32G0XX clock support
      drivers: pwm: Add STM32G0XX pwm support
      drivers: pinmux: Add STM32G0X pinmux support
      drivers: gpio: Add STM32G0X pinmux support
      drivers: interrupt_controller: Add STM32G0X interrupt support
      soc: arm: uart: Add STM32G0X UART support
      boards: arm: Add nucleo for nucleo_g071rb board
      dts: remove unused clock-controllers property #17122
      drivers: usb/stm32: use dts information to populate clock settings

François Delawarde (4):
      subsys/settings: Allow to register custom backends in settings subsystem
      subsys/settings: Use strncpy instead of strcpy in settings_runtime
      subsys/settings: Correct size in strncpy to avoid unterminated strings
      bluetooth: fix GATT database hash done too many times

Geoffroy Van Cutsem (1):
      boards/x86: scripts: build_grub.sh to use grub-2.04-rc1-17-g8e8723a6b

George Dima (1):
      boards: galileo: Fix PINMUX_FUNC_D for io_pin 9.

Georgij Cernysiov (13):
      drivers: counter: stm32: fix LSE clock source for not F4 SoC
      drivers: serial: stm32: remove forced RXNE clearance
      drivers: serial: stm32: add err_check
      drivers: serial: stm32: add serial hw flow control
      drivers: pinmux: stm32: add F4 RTS/CTS definitions
      drivers: pinmux: stm32: add L4 RTS/CTS definitions
      drivers: pinmux: stm32: reformat L4 pinmux
      drivers: serial: stm32: dts binding, and fixup for flow control
      drivers: pinmux: stm32: add F4 RTS/CTS definitions
      boards: arm: st, stm32: add jlink runner args
      boards: arm: disco l475 iot: correct documentation
      doc: guides: debugging: probes: correct J-Link usage
      drivers: rtc: stm32: correct tm_mon conversion

Greg S. Woods (1):
      entropy: fix C++ compiler warnings

Habib Zaid (1):
      soc: arm: stm32: Updated SRAM Region Definitions

Harry Jiang (3):
      board: stm32_min_dev: Add USB support
      board: stm32_min_dev: add the missing usb node
      fs/nvs: fix the sector size check

Henrik Brix Andersen (65):
      gpio: rv32m1: enable GPIO port clocks
      boards: rv32m1_vega_ri5cy: add STS LED to DTS
      boards: rv32m1_vega: fix I2C bus references
      sensor: fxos8700: add support for hardware reset pin
      interrupt_controller: rv32m1: fix intmux driver initialization priority
      drivers: i2c: rv32m1: add I2C driver for the RV32M1 RI5CY SoC
      boards: rv32m1_vega: enable the onboard I2C busses and FXOS8700 sensor
      samples: sensors: fxos8700: whitelist rv32m1_vega board
      boards: holyiot_yj16019: add support for the Holyiot YJ-16019 board
      drivers: led: ht16k33: add LED driver for Holtek HT16K33 LED driver
      scripts/dts: allow node to be child on one bus and parent on another
      drivers: gpio: ht16k33: add GPIO driver for Holtek HT16K33 LED driver
      samples: drivers: ht16k33: add sample application for the HT16K33
      drivers: i2c: mcux_lpi2c: add support for I2C_0
      ext: hal: nxp: mcux: add device and driver files for KE1xF series SoCs
      clock_control: introduce mcux pcc driver
      drivers: serial: uart_mcux_lpuart: add support for LPUARTs with two IRQs
      drivers: clock_control_mcux_sim: add support for clkout
      soc: arm: ke1xf: add NXP Kinetis KE1xF SoC series support
      boards: twr-ke18f: add support for the NXP TWR-KE18F board
      soc: arm: nxp: ke1xf: add RTC support
      boards: arm: twr_ke18f: add RTC to list of supported peripherals
      soc: nxp: ke1xf: enable code cache
      drivers: led: ht16k33: add missing variable initialization
      soc: nxp: ke1xf: add I2C support
      boards: arm: twr_ke18f: add I2C support
      tests: kernel: common: add missing userspace tag
      drivers: counter: mcux_rtc: allow setting a new alarm from the callback
      ext: segger: update to SystemView v2.52h
      boards: twr_ke18f: list hwinfo as supported feature
      tests: flash_map: configure MPU to allow flash writes on twr_ke18f
      ext: hal: nxp: mcux_lpspi: add support for NXP Kinetis LPSPI modules
      soc: nxp: ke1xf: add SPI support
      boards: arm: twr_ke18f: add SPI support
      tests: drivers: spi_loopback: add twr_ke18f configuration
      tests: benchmarks: latency_measure: use 0.1s sys clk tick for twr_ke18f
      boards: twr_ke18f: configure SPI CS pins as GPIO if not used for SPI
      drivers: adc: mcux_adc12: add driver for the NXP ADC12 module
      soc: nxp: ke1xf: add ADC12 support
      boards: arm: twr_ke18f: add ADC support
      tests: drivers: adc_api: add support for the twr_ke18f board
      drivers: adc: mcux_adc12: fix compilation
      drivers: can: add support for two CAN controller instances
      tests: drivers: can: api: add support for CAN_0
      dts: can: allow individual specification of prop seg and phase seg1 quanta
      drivers: can: add support for the NXP Kinetis FlexCAN controller
      drivers: clock_control: mcux_scg: add NXP MCUX SCG clock control driver
      soc: arm: nxp: ke1xf: enable MCUX SCG clock controller driver
      soc: nxp: ke1xf: add CAN support
      boards: twr_ke18f: enable CAN controller
      samples: drivers: CAN: add support for twr_ke18f board
      tests: drivers: can: stm32: determine CAN device at compile-time
      gitignore: ignore Emacs TAGS file
      samples: sensors: fxos8700: add polling support
      samples: sensors: fxos8700: add support for twr-ke18f board
      drivers: watchdog: mcux_wdog32: add driver for the NXP Kinetis WDOG32
      soc: arm: nxp: ke1xf: add watchdog support
      boards: twr_ke18f: document watchdog support
      boards: match specified jlink swd speed when using pyocd runner
      tests: board_shell: enable ADC shell
      drivers: can: flexcan: implement timestamp for RX frames
      drivers: clock_control: mcux_mcg: add driver for NXP Kinetis MCG
      drivers: pwm: mcux_ftm: use device tree for obtaining clock frequency
      soc: arm: nxp: ke1xf: add FlexTimer (FTM) module support
      boards: arm: twr_ke18f: add PWM LEDs

Henrik Malvik Halvorsen (1):
      drivers: sensor: Add ADXL362 interrupt handling

Howard Liu (1):
      doc: fix build command on Windows for VEGAboard

Håkon Øye Amundsen (5):
      cmake: remove incorrect statement from doc
      cmake: helper function for importing library
      net: mqtt: add mqtt_readall_publish_payload()
      kconfig: fix name of cmake function in help text
      scripts: kconfig: normalize paths to avoid duplicate

Ioannis Glaropoulos (132):
      soc: arm: sam3x: add MPU capability
      CODEOWNERS: code-owner for SAM3X
      CODEOWNERS: add code-owner for Arduino Due
      soc: arm: sam3x: minor fixes in soc.h and arm_mpu_regions.c
      boards: arduino due: default to building with MPU support
      tests: kernel: mem_protect: protection: fix test-case filter
      soc: arm: remove redundant CPU_CORTEX_M selection
      soc: arm: select CPU_HAS_SYSTICK in ARCH Kconfig
      soc: arm: rename CPU_HAS_SYSTICK to CPU_CORTEX_M_HAS_SYSTICK
      soc: arm: remove default selection of system timer for ARM platforms
      arch: arm: restrict IRQ lock to minimum during pendSV exception
      arch: x86: mmu: typo fixes
      kernel: mem_domain: update name/doc of API function for partition add
      arch: arm: drop FP full-access for builds without user mode
      arch: arm: disable automatic FP stacking in unshared FP registers mode
      arch: arm: remove FP-context from ESF in unshared FP registers mode
      arch: arm: remove _preempt_float in unshared FP registers mode
      arch: arm: remove FP activation in system boot
      arch: arm: clear FPSCR before main()
      arch: arm: add internal structure to ESF
      arch: remove unused tracing_arch.h
      arch: arm: fix ESF pointer in SecureStackDump()
      dts: nordic: add missing erase-block-size entry
      soc: arm: move z_clearfaults() in kernel_arch_init()
      arch: arm: remove redundant definitions of typeof
      arch: arm: print thread name in z_NanoFatalErrorHandler()
      dts: arm: add DTS binding for ARM MPU peripheral
      arch: arm: mpu: use DTS-defined number of MPU regions
      soc: arm: add ARM MPU node info and fixup for ARMv8-M SoCs
      soc: arm: add ARM MPU node info and fixup for Cortex-M7 SoCs
      dts: atmel: sam0: correct ARM Cortex-m variant in dtsi
      dts: arm: delete systick node from SoCs not having the SysTick timer
      tests: benchmarks: timing_info: fix start of swap time
      arch: arm: enable lazy state preservation at boot in FP sharing mode
      arch: arm: carve only basic stack frame at thread init
      arch: arm: extend use of arch.mode variable in FP sharing mode
      arch: arm: fp sharing: save & restore FP registers in context-switch
      kernel: init: use K_THREAD_STACK_SIZEOF when switching to main thread
      kernel: remove redundant #ifdef CONFIG_MULTITHREADING
      arch: arm: minor clean-up in interrupt stack size derivation
      arch: arm: add z_ prefix to _PlatformInit
      soc: arm: nordic_nrf: force platform-specific initialization
      arch: arm: mpu: move internal API inside arch/arm/cortex_m/mpu
      tests: kernel: userspace: explicitly declare function for the test
      arch: arm: mpu: remove arm_core_mpu_enable/disable internal API
      ext: hal: cmsis: Update ARM CMSIS headers to version 5.5.1
      arch: arm: userspace: don't subtract MPU guard from top of stack
      arch: arm: fix start of MPU guard in stack-fail check (no user mode)
      kernel: introduce k_float_disable system call
      arch: restrict FLOAT and FP_SHARING for x86 and Arm
      arch: implement arch-specific float disable routines
      tests: kernel: fp_sharing: call k_float_disable() for ARM
      doc: kernel: rework doc section of shared FP registers mode
      tests: benchmarks: timing_info: add user space tag
      scripts: gen_priv_stacks: remove unused variable
      CODEOWNERS: update code-onwers' list for gen_priv_stacks.py
      tests: kernel: userspace: correct address of thread priv stack start
      include: scripts: fix typos in priv_stacks.ld
      kernel: app_memdomain: remove unused defines
      tests: kernel: fatal: add HW stack check for priv stack
      tests: kernel: fatal: add explicit no user-mode test case
      arch: common: nocache: fix linker section definition
      arch: arm: re-organize thread stack macro defines in arch.h
      arch: arm: introduce macro to describe the privilege stack alignment
      tests: kernel: mem_protect: use correct define for MEM_REGION_ALLOC
      scripts: gen_priv_stacks.py: use the right alignment for priv stacks
      arch: arm: expose start/end limits of the thread priv stack section
      arch: arm: make priv stack guard programming similar to normal guard
      tests: kernel: fatal: add explicit test case for ARM and FP Sharing mode
      kernel: mem_domain: fix warning in ASSERT expression
      lib: libc: newlib: define USED_RAM_END_ADDR only where it is needed
      lib: libc: fix alignment of HEAP base address for ARM
      tests: kernel: submit a simple test for zero-latency irqs
      tests: kernel: arm runtime nmi: add arm tag
      tests: kernel: add simple test for the ramfunc feature
      arch: arm: allocate a wide stack guard for FP-capable threads
      arch: arm: allocate a wide priv stack guard for FP-capable threads
      arch: arm: mpu: program a wide MPU stack guard for FP capable threads
      arch: arm: rework stack fail checking for FP capable threads
      arch: arm: update thread options flag and CONTROL atomically
      doc: reference: float: document ARM thread tag recommendation
      tests: kernel: fatal: check stack overflow of FP capable threads
      arch: arm: mpu: minor fix to the start of the guard
      tests: remove redundant CONFIG_HW_STACK_PROTECTION=y setting
      arch: arm: allow user to fall-back to MPU-based guards in ARMv8-M
      tests: kernel: fatal: run test for ARMv8-M with MPU stack guards
      soc: nordic: nrf9160: add IPC capabilities
      userspace: minor typo fixes in various places
      arch: arm: userspace: correct inline comment for bad syscalls
      arch: arm: userspace: don't use the default stack in z_arm_do_syscall
      tests: kernel: move arm-specific kernel tests under tests/arch/arm
      tests: arch: x86: move static_idx under tests/arch/x86
      kernel: fix #endif quard error for k_float_disable
      arch: x86: make z_arch_float_disable return -ENOSYS if not supported
      tests: kernel: fp_sharing: move fp_sharing test
      tests: kernel: fp_sharing: add test for k_float_disable
      tests: kernel: critical: alternative test-case for SAM SoCs with WDT
      tests: arch: arm: contribute a test for arm swap
      tests: arch: arm: enhance swap test for FP sharing
      tests: arch: arm_thread_swap: add README file
      CODEOWNERS: adding code-owner for arch/arm test suite
      boards: arm: mps2_an385: clean up redundant Kconfig setting
      boards: arm: mps2_an521: add QEMU target and coverage
      boards: arm: mps2_an521: some trivial Kconfig fixes
      arch: arm: cleanup workaround for QEMU Cortex-M3
      tests: kernel: fp_sharing: increase robustness of float_disable test
      arch: arm: only allow OOPS and STACK_CHK_FAIL from nPRIV mode
      tests: kernel: userspace: fix test skipping for ARC
      dts: arm: nrf9160: minor typo fix
      soc: arm: nrf9160: add missing NRF_UICR definition
      tests: several tweaks for passing tests on qemu
      boards: arm: mps2-an521: fix number of MPU regions in DTS
      boards: arm: mps2_an521: adding support for qemu
      arch: arm: BusFault, NMI, and HardFault in Secure state when in test
      boards: arm: mps2_an521: force secure firmware image by default
      release: Zephyr 2.0.0-rc1
      doc: Release notes for v2.0 - initial (empty) draft
      ext: hal: nordic: fix type of NRF_FICR
      tests: lib: sprintf: filter-out MCIMX7_M4 platform
      tests: arch: zero_latency_irqs: fix ASSERT expressions with volatile
      tests: arch: arm ramfunc: fix ASSERT expressions
      tests: arch: arm_thread_swap: correct type in memset function call
      tests: arch: arm_thread_swap: fix ASSERT statements on volatile vars
      arch: arm: fault: fix check on recoverable fault flag
      soc: arm: stm32: fix sign of timeout variable
      drivers: entropy: nrf: fic minor typos
      drivers: sam: entropy: implement get_entropy_isr
      release: adding release notes draft for ARM architecture
      tests: arm: zero latency irqs: fix the derivation of free NVIC line
      tests: net: dns_addremove: increase main stack size
      manifest: update to use mbedTLS v2.16.2
      release: Zephyr 2.0.0-rc2

Ioannis Konstantelias (8):
      soc: stm32: Remove package digit for STM32L496XG
      boards: Change to new STM32L496XX symbol
      soc: stm32: Add STM32L496XE support
      drivers: pinmux: stm32l4: Add extra pin functions
      dts: pinctrl: stm32l4: Add alternative USART3 pair
      drivers: flash: stm32: Fix insufficient wait time
      drivers: flash: stm32l4x: Support SOCs with < 1MB
      stm32: pinmux: spi: Opt for lower power consumption

Jacob Siverskog (4):
      cmake: Prevent infinite recursion
      doc: dfu: Fix mcuboot reference
      doc: dfu: Fix module links
      doc: Fix typos in flashmap.h

Jakob Olesen (6):
      misc: Portable math_extras.h implementations.
      toolchain: Define a HAS_BUILTIN(x) macro in toolchain.h.
      misc: Implement math_extras.h function with GCC builtins.
      misc: Always test the portable version of the math_extras.h functions.
      misc: Replace uses of __builtin_*_overflow() with <misc/math_extras.h>.
      shell: Initialize va_list variables portably.

Jakub Rzeszutko (6):
      shell: prompt configuration during project generation
      arm: nrf: Add support for the nRF52811
      boards: arm: Add Nordic nRF52811 board
      shell: add select command
      shell: add test for new built-in command
      CODEOWNERS: update due to nickname change

Jamie McCrae (1):
      tests: net: lib: dns: dns_addremove

Jan Sturm (1):
      boards: stm32f4_disco:  added missing LED aliases

Jan Van Winkel (26):
      west: Renamed cmake.py to zcmake.py
      sanitycheck: Execute binary in output directory
      dts: posix: Add DTS support for POSIX architecture
      drivers: flash: Added native POSIX flash driver
      tests: Added native POSIX to flash based tests
      gui: Corrected RGB888 pointer in LVGL write function
      fs: Added API to read mount point
      native_posix: Added support to access flash via FUSE
      samples: fs: Added  FS shell sample
      gui: Move lvgl into a zephyr module
      dts: posix: Added dummy serial current-speed entry
      driver: display: Clarified blanking API
      drivers: ssd16xx: Removed blanking support
      drivers: sdl: Added support to set def pix format
      samples: fs: Added libfuse req. to fs shell README
      samples: fs: Corrected flash ctrl name in fs shell
      west: gui: Updated lvgl revision
      gui: Add support for lvgl API version 6
      gui: Disable LVGL features by default
      west: gui: Added support for lvgl API V6
      gui: Corrected paths in Zephyr to LVGL FS mapping
      samples: Corrected typos in updatehub sample
      native: Added dummy member to struct _thread_arch
      native: Set recommended stack size to 40 for 64 bit
      tests: mqtt Corrected memcmp in mqtt pubsub tests
      fs: fcb: Increase temporary buffer in fcb_append

Jim Paris (5):
      fs: add support for mount point listing on vfs root
      scripts/dts: Support 'io-channels' property just like 'pwms'
      dts/bindings: add '#cells' to nrf-saadc
      scripts/dts: add basic test for IO channel property
      shell: fix log output when CONFIG_LOG_IMMEDIATE=y

Joakim Andersson (62):
      CODEOWNERS: Fix missing '/' in codeowners file
      Bluetooth: controller: Remove incorrect comment
      Bluetooth: controller: Fix unknown rsp received during enc procedure
      Bluetooth: controller: Fix initialization of rl_idx and rpa_gen
      Bluetooth: controller: Fix pdu being overwritten while in use
      Bluetooth: controller: Copy the connect_ind into node_rx
      Bluetooth: controller: Fix compilation without broadcaster or observer
      Bluetooth: controller: Fix rx_ftr and extra overlapping memory
      Bluetooth: host: Fix gatt indicate when conn is NULL
      Bluetooth: controller: Fix scan request when advertising directed
      Bluetooth: GATT: Fix segfault discover descriptors all UUIDs
      Bluetooth: services: Move Heart rate service
      Bluetooth: services: Move health thermometer service
      Bluetooth: services: Move Current Time service sample
      Bluetooth: services: Move HID over GATT service
      Bluetooth: services: Delete unused IPSP sample
      Bluetooth: shell: Fix argument count of bt clear shell command
      kernel: lib: Add convert functions for hex strings and binary arrays
      Bluetooth: host: Move address string parsing to bluetooth API
      Bluetooth: smp: Add LE SC OOB support for central side
      Bluetooth: shell: Add support for LE SC OOB authentication in shell
      Bluetooth: Host: Fix advertiser state flags
      Bluetooth: SMP: Fix peripheral security request with authenticated keys
      Bluetooth: Keys: Fix logging assertions when enabling BT_DEBUG_KEYS.
      Bluetooth: Host: Move BT_DBG out of irq_lock
      Bluetooth: Settings: Fix generated identity not persistently stored.
      Bluetooth: Host: Fix bluetooth address string length
      Bluetooth: Host: Print error codes in hex
      Bluetooth: Host: Fix wrong init address when controller resolved address
      Bluetooth: Host: Fix bug in creating connection with wrong own address.
      Bluetooth: Controller: Fix privacy advertiser connect peer address type
      Bluetooth: SMP: Fix SMP identity distributing IRK for ID 0 always
      Bluetooth: SMP: Fix kernel crash if auth handler is NULL
      Bluetooth: SMP: Use error code for OOB data not available
      Bluetooth: controller: Fix assert in RPA timeout for advertiser
      Bluetooth: Host: Add identity addresses to conn info object
      Bluetooth: shell: Add info command to print connection information
      Bluetooth: shell: Handle error code of bt_conn_auth_cb_register
      Bluetooth: Shell: Use on-air addresses when checking for OOB data
      Bluetooth: Shell: Update sec level help text and validate input
      Bluetooth: SMP: MITM security possible without IO when OOB data present
      Bluetooth: Host: Improve shell OOB handling
      Bluetooth: Host: Add whitelist support in Bluetooth Host API
      Bluetooth: Shell: Add whitelist commands to shell
      Bluetooth: Host: fix missing interval_min copy
      Bluetooth: Host: Fix RPA timer not running
      Bluetooth: Host: Set Kconfig RPA timeout in controller
      Bluetooth: Host: Fix unable to connect using host resolution
      Bluetooth: SMP: Add option to treat debug keys normally during debugging
      Bluetooth: SMP: Add pairing failed reason
      Bluetooth: host: Pairing callback fail and complete for SSP
      Bluetooth: SMP: Stop new pairing early if MAX_PAIR has been reached
      Bluetooth: Host: Add error to security changed callback
      Bluetooth: Host: Add option to force pairing in bt_conn_security
      Bluetooth: Shell: Add force-pair option to bt security command
      Bluetooth: SMP: Re-pairing cannot lower the security level of the bond
      Bluetooth: Shell: Add pairing failed and complete to OOB handling
      Bluetooth: SMP: Give security changed when rejecting LTK
      Bluetooth: Host: Fix invalid pointer in bt_smp_pkey_ready
      Bluetooth: Host: Rename security level enum
      Bluetooth: Host: Rename API function to initiate bluetooth security.
      Bluetooth: Host: Rename long error codes

Joao Cordeiro (2):
      drivers: ieee802154: nrf5: Support when LOG is off
      samples: bluetooth: peripheral: Fix RX buffer size

Johan Hedberg (44):
      Bluetooth: Mesh: Add error checks for scan start/stop
      net: buf: Remove wrong alignment annotation from NET_BUF_SIMPLE()
      Bluetooth: Fix return type for settings read callback
      CODEOWNERS: Add joerchan and remove sjanc for Bluetooth host paths
      Bluetooth: Mesh: Fix RPL storage timeout handling
      Bluetooth: Mesh: Fix postponing storage deadline indefinitely
      Bluetooth: Mesh: Fix missing implementation of Proxy SAR timeout
      Bluetooth: Simplify bt_gatt_notify_cb() API
      Bluetooth: Increase BT_BUF_USER_DATA_MIN to 8
      Bluetooth: Remove unnecessary HCI command data array
      Bluetooth: Remove unused bt_hci_get_cmd_opcode() function
      Bluetooth: Fix expiring RPA when different local identities are used
      Bluetooth: Mesh: Fix segmented message RPL behavior
      Bluetooth: Fix not using log_strdup() for bt_uuid_str()
      Bluetooth: Mesh: Fix missing protocol error timeout
      Bluetooth: Mesh: Fix Public Key mismatch error handling
      Bluetooth: Mesh: Rename reset_link() to reset_adv_link()
      Bluetooth: SMP: Make public key handling more robust
      Bluetooth: Fix public key callback management
      Bluetooth: Mesh: Generate new public key for each provisioning session
      Bluetooth: Mesh: Fix rejecting invalid remote public key
      Bluetooth: Mesh: Fix provisioning send error handling
      Bluetooth: Add dedicated pool for HCI_Num_Completed_Packets HCI event
      Bluetooth: Introduce separate pool for discardable events
      Bluetooth: Mesh: Move under subsys/bluetooth/mesh
      Bluetooth: Mesh: Move heartbeat sending to transport layer
      Bluetooth: Mesh: Fix checking for active heartbeat publication
      Bluetooth: Mesh: Fix heartbeat sending on Friendship established/lost
      Bluetooth: Mesh: Fix canceled buffer memory leak
      Bluetooth: Mesh: Fix not sending all segments through the Friend Queue
      Bluetooth: Mesh: Fix resending segments on correct bearer
      Bluetooth: Mesh: Fix canceling publication retransmission timer
      Bluetooth: Mesh: Fix starting IV Update when not on primary subnet
      CODEOWNERS: Add dedicated entry for Bluetooth Mesh
      Bluetooth: Fix missing doxygen markers for advertising options
      Bluetooth: Mesh: Introduce a helper for send callback finalization
      Bluetooth: Mesh: Fix reference count imbalance in bt_mesh_net_resend()
      Bluetooth: Mesh: Fix missing call to send_cb_finalize
      Bluetooth: Mesh: Remove unused code
      Bluetooth: Mesh: Fix adhering to the configured Friend Queue size
      Bluetooth: Mesh: Fix discarding messages with many segments
      Bluetooth: Mesh: Fix publication period timestamp initialization
      Bluetooth: Host: Fix failure handling with security level change
      Bluetooth: Host: Fix checking for sufficient encryption key size

Johann Fischer (32):
      usb: usb_device: fix set configuration request
      usb: usb_dfu: do not set bwPollTimeout dynamically
      boards: reel_board: enable pull-up on UART TX pin
      usb: usb_device: fix handlers call for secondary descriptor
      drivers: usb_dc_nrfx: cleanup logging and fix style
      drivers: apds9960: allow to disable Ambient Light Sense
      drivers: apds9960: make ALS and proximity gain configurable
      drivers: apds9960: make proximity pulse length configurable
      drivers: apds9960: allow additional LED current configuration
      tests: build_all: add TI HDC sensor
      sample: ti_hdc: whitelist reel_board and nucleo_l496zg
      usb: sort usb config data by section
      drivers: ssd1673: rename driver to ssd16xx
      drivers: ssd16xx: add defines to resolve coding style issues
      mempool: move BUILD_ASSERT to the end of K_MEM_POOL_DEFINE
      tests: usb: do not set device address
      drivers: usb_dc_nrfx: do not use NRF_USBD_EP_NR_GET in ep_is_valid
      drivers: usb_dc_nrfx: check the device state before disable or uninit
      drivers: usb_dc_nrfx: validate pointer in usb_dc_ep_is_stalled
      drivers: usb_dc_nrfx: use REQTYPE_GET_DIR and REQTYPE_GET_TYPE macros
      drivers: usb_dc_nrfx: fix style issues
      drivers: usb_dc_nrfx: cleanup USB_NRFX_EVT_QUEUE_SIZE
      drivers: usb_dc_nrfx: remove unused EPSTATUS defines
      drivers: usb_dc_nrfx: make macros names less confusing
      boards: nrf52840_pca10056: add arduino spi, uart and i2c nodes
      usb: do not disable endpoints at USB_DC_SUSPEND event
      samples: mesh_badge: fix font size
      usb: usb_descriptor: fix null pointer dereferences
      usb: cdc_acm: update state after RESUME event
      samples: cdc_acm: rework sample logging
      usb: loopback: use stack's request buffer for control requests
      usb: check if the request buffer is not too small

Jose Alberto Meza (18):
      ext: hal: mchp: Fix compilation for MEC1501 SMB macros
      soc: arm: mchp: Add I2C to device tree for MEC1501
      dts: mchp: Add Microchip I2C SoC device tree
      drivers: i2c: mchp: Add I2C driver for MEC family
      boards : arm : Add I2C support for MEC15xx EVB
      CODEOWNERS: Add code ownership for Microchip XEC drivers
      API: espi: Add API for Enhanced Serial Peripheral Interface
      drivers: espi: Add Kconfig for eSPI driver
      dts: espi: Add dts bindings for eSPI
      dts: espi: mchp: Add dts bindings for XEC eSPI driver
      ext: hal: mchp: Fix compilation for MEC1501 HAL macros
      drivers: espi: Add driver for microchip XEC family
      samples: drivers: espi: Add eSPI driver sample app
      boards : arm : Add ESPI support for MEC15xx EVB
      boards: mchp: Fix MEC1501 dts warnings in eSPI
      soc: mchp: Add configuration option to switch timer drivers
      board: mec: Select cortex-M systick-based driver
      soc: mchp: Perform OTP override for 32KHz internal oscillator

Josef Gajdusek (2):
      drivers: usb_dc_stm32: Make pin remapping part of the device tree
      drivers: usb_dc_stm32: Reinitialize the write semaphores on bus reset

Jukka Rissanen (149):
      tests: net: pkt: Verify that net_pkt_write() writes correct data
      tests: net: all: Add more options to catch-all test
      net: if: Add access functions for network interface flags
      net: if: Only start the network interface during init if needed
      samples: net: dumb_http_server: Add net_pkt.h file inclusion
      samples: net: dumb_http_server: Check EOF while skipping headers
      CODEOWNERS: Update networking files
      net: core: In RX check if the pkt is for loopback interface
      tests: net: getaddrinfo: Fix test to check the query is sent
      net: arp: No need to check pkt for NULL
      tests: net: mqtt_publisher: Allow compilation in every platform
      net: Check device driver API pointer
      net: sockets: Add a way to register a socket family handler
      net: sockets: tls: Register handler for TLS sockets
      net: sockets: packet: Register handler for AF_PACKET
      net: sockets: can: Register handler for AF_CAN
      tests: net: socket: Add tests for socket family registration
      samples: net: can: Add missing tag to SocketCAN sample
      net: arp: Use proper dest hw address after receiving a request
      net: arp: Drop request where src hw address is our address
      net: ipv4: Allow UDP packets with broadcast dst address
      uart: native_posix: Add support for another serial port
      net: ipv4: Send multicast ICMPv4 reply with correct src address
      net: if: Select global IPv4 address if needed
      net: ethernet: Drop pkt if MAC dst is bcast address but IP is not
      net: shell: Indentation fixes for ping command
      net: shell: Remove leading underscore from parse_args()
      net: shell: Refactor help information for ping command
      samples: net: gptp: Fix compilation instructions
      drivers: console: Add support for log level option
      tests: net: socket: register: Close socket after test
      net: llmnr: Check that UDP header can be accessed
      samples: net: echo-server: Ignore the return value of close()
      net: socket: Add SO_PRIORITY support to setsockopt
      tests: net: udp: Add tests for SO_PRIORITY and setsockopt
      net: if: Fix null pointer deref when selecting IPv4 address
      net: utils: Print pkt address in net_pkt_hexdump()
      net: nbr: Set the link address type when saving neighbor data
      net: sockets: can: Add dispatcher
      samples: net: can: Add second RX socket receiver
      net: context: Set local address properly for AF_CAN connections
      net: shell: Print connection information properly for AF_CAN
      net: connection: The connection logic was not init properly
      net: sockets: can: Close the socket cleanly
      samples: net: socket: can: Close the socket periodically
      net: getaddrinfo: Query both IPv4 and IPv6 if family is AF_UNSPEC
      tests: net: getaddrinfo: Make sure we receive two queries
      net: Fix net_pkt_hexdump() to print pkt address properly
      net: ptp: clock: Create a dummy inline func for net_eth_get_ptp_clock()
      net: ethernet: Add net_eth_get_ptp_clock_by_index() function
      net: ptp: Add usermode support to net_eth_get_ptp_clock_by_index()
      net: ptp: clock: Add usermode support to ptp_clock_get()
      net: sntp: Ignore return value from close
      net: dns: Make dns_unpack_answer() to check non-compressed answers
      tests: net: dns: Add tests for dns_unpack_answer()
      net: if: Add syscall interface to IP address add and rm
      tests: net: if: Test userspace support in net_if
      net: if: Make IPv4 address const in removal function
      net: if: Add userspace support to IPv4 netmask set function
      net: if: Add userspace support to IPv4 gateway set function
      net: if: Make gateway address in net_if_ipv4_set_gw() const
      net: mgmt: Add info length to event wait API
      net: sockets: mgmt: Add AF_NET_MGMT address family support
      samples: net: sock: mgmt: Add network management socket app
      net: mgmt: Send event with info when applicaple
      tests: net: mgmt: Verify that info_length is correct
      net: utils: Add userspace support to net_addr_ntop/pton()
      tests: net: utils: Add userspace tests for net_addr_ntop/pton()
      samples: net: sock: mgmt: Print IP addresses for each event
      tests: net: socket: mgmt: Add unit tests for net_mgmt sockets
      net: socket: Add userspace support to setsockopt()
      net: socket: Add userspace support to getsockopt()
      net: socket: mgmt: Add setsockopt() and getsockopt() support
      tests: net: socket: mgmt: Add tests for get|setsockopt()
      tests: net: ip-addr: Avoid possible null pointer dereference
      net: Collect network packet TX send time
      net: socket: Add SO_TIMESTAMPING socket option
      net: shell: Show network packet TX transit times
      tests: net: tx_timestmp: Fix the tests
      samples: net: echo_server: Enable SO_TIMESTAMPING if needed
      net: mgmt: Remove L1 layer as that is useless
      net: sockets: Initialize IP socket addresses in getsockname()
      tests: net: socket: register: Do not close invalid fd
      tests: net: Increase stack sizes for coverage testing
      net: tcp: Adjust data length if TCP options are present
      net: llmnr_responder: Fix debug prints after receiving query
      net: mgmt: Add L4 layer and related events
      net: dns: Send net-mgmt event for DNS server add and del
      tests: net: dhcpv4: Make sure we get DNS add/del events
      net: ipv4: Drop pkt if src address is unspecified
      Revert ""libc: types: Remove wrong definition""
      tests: clib: Make sure ssize_t type is signed
      net: ipv6: Drop pkt if src address is unspecified
      tests: net: trickle: Adjust config options to avoid error prints
      net: ip: Helper for getting used network address family as string
      samples: net: echo-client: Start service in correct time
      net: pkt: Move everything up when pulling data
      net: ipv6: Fix fragmentation
      net: pkt: Allow larger packets for IPv6 fragmentation
      net: socket: userspace: Copy user specified value in getsockopt()
      net: ip: Add iovec and msghdr structs
      net: context: Use const for the IP address
      net: context: Add support for net_context_sendmsg()
      net: sockets: Add sendmsg() API
      tests: net: udp: Add tests for sendmsg() call
      net: Add support for TXTIME socket option
      tests: net: txtime: Add tests for SO_TXTIME and SCM_TXTIME
      net: ppp: Initial support for point-to-point protocol
      net: ppp: Add IPV6CP support
      cmake: Add serial port for ppp in qemu
      drivers: net: ppp: Driver for point-to-point protocol
      net: shell: Refactor network statistics printing
      net: shell: Add ppp network interface support
      tests: net: ppp: Add unit tests for PPP driver
      net: ppp: Allow delay of PPP protocol handshakes
      net: ppp: Reject unhandled protocols
      net: if: No need to set IP addresses etc for PPP
      net: pkt: Add net_pkt_write_le16() helper
      net: pkt: Add net_pkt_read_le16() helper
      samples: net: echo-server: Add PPP overlay config file
      net: ppp: Add proper support to receive Echo-Reply message
      net: ppp: Handle received Discard-Request
      doc: net: ppp: Add PPP documentation
      boards: Set support for serial port networking as netif:serial-net
      tests: net: context: Let the net_context cb to run first
      net: context: Clarify net_context_send() API documentation
      net: Move include files outside of extern ""C"" block
      net: sockets: Do not call NULL socket callback function
      samples: net: zperf: Use proper value in k_busy_wait()
      samples: usb: hid-cdc: Use proper value in k_busy_wait()
      net: context: Allow TCP to use sendmsg()
      net: context: sendmsg: Allow use of connected UDP sockets
      tests: net: sendmsg: Verify that connected UDP sock works
      doc: Add networking information to 2.0 release note
      doc: net: ppp: Enhance PPP documentation
      tests: net: udp: We need to reserve enough space for the data
      net: ipv6: Check sub-option length
      net: gptp: Avoid memcpy to same buffer
      samples: net: civetweb: Ignore return values
      sys: byteorder: Add support for sys_get_be64()
      tests: kernel: Add unit test for sys_get_be64()
      sys: byteorder: Add support for sys_put_be64()
      tests: kernel: Add unit test for sys_put_be64()
      tests: kernel: Add unit test for sys_put|get_be32()
      tests: kernel: Add unit test for sys_put|get_be16()
      tests: kernel: Add unit test for sys_put|get_le16()
      tests: kernel: Add unit test for sys_put|get_le32()
      tests: kernel: Add unit test for sys_put|get_le64()
      net: conn_mgr: Check IPv4 events against command

Jun Li (8):
      soc: stm32f4: add another pinmap for spi1
      driver: api: uart: remove exclusive config for async api
      west: fix import error on sign.py
      api: dma: fix issue of no-implemented reload
      soc: stm32f4: complete uart7's dts
      api: dma: add api to retrieve runtime status
      soc: stm32: enable outputing hex file
      board: nucleo_f429zi: add partitions to support mcuboot

Jun Yang (7):
      sdhc: rename disk_access_sdhc.c
      dts/sdhc: support mmc dts and usdhc dts
      Kconfig: Kconfig support i.MX RT USDHC
      usdhc/pinmux: configure pinmux of usdhc on mimxrt1050 evk
      clock/usdhc: Enable clock of USDHC of i.MXRT
      usdhc: support NXP i.MXRT usdhc
      samples/fs: support fs demo on mimxrt_1050 evk board

Justin Brzozoski (1):
      mqtt: Allow client to override keepalive

Kamil Piszczek (31):
      Bluetooth: hci: adding AD types used for OOB pairing
      bluetooth: host: format specifier alignment
      drivers: flash: add flash_simulator driver
      tests: drivers: add flash_simulator driver
      drivers: flash: fix flash-simulator build crash
      boards: changing flash simulator device name alias
      drivers: flash: flash_simulator enabled by default on qemu
      tests: storage: flash_map: adding qemu platform
      boards: qemu_x86: reducing flash size
      driver: flash: flash_simulator: moved part of Kconfig to DT
      dts: flash simulator cleanup
      drivers: flash: simulator Kconfig cleanup
      tests: drivers: flash_simulator: removing CONFIG_ prefix from defines
      stats: extending api to handle statistics with more than 256 elements
      util: extending UTIL_DEC_N definitions
      drivers: flash: covering more flash page with stats sections
      stats: changed API to use zephyr types
      fs: nvs: format specifier alignment
      drivers: flash: flash_simulator: added max write calls param
      tests: fs: nvs: added basic unittests for nvs
      tests: fs: nvs: test cases clean up flash on completion
      tests: fs: nvs: garbage collector test
      drivers: flash: flash_simulator: added max erase calls param
      drivers: flash: flash_simulator: added max len param
      tests: fs: nvs: moving nvs_clear to setup method
      tests: fs: nvs: unittest with corrupted sector close op
      Bluetooth: extending API for OOB pairing
      Bluetooth: smp: adding LE SC OOB support for peripheral side
      settings: adding new nvs backend
      tests: settings: adding nvs backend configuration to functional tests
      fs: nvs: format specifier aligned with off_t type

Karl Zhang (7):
      arm: V2M Musca B1: Add Musca B1 SoC and board support
      boards: v2m_musca_b1_nonsecure: Increase flash size
      Revert ""boards: v2m_musca_b1_nonsecure: disable sanitycheck [REVERT ME]""
      drivers: ipm: mhu: Add MHU driver for V2M Musca
      sample: mhu: IPM MHU dual core on V2M Musca
      arm: Musca B1: Migrate to eFlash
      Musca B1: MHU: IPM MHU dual core on V2M Musca B1

Karsten Koenig (6):
      drivers: can: mcp2515: Add driver for MCP2515 CAN controller
      drivers: can: mcp2515: Rework for DTS SPI bindings
      samples: can: Added project configuration for MCP2515
      drivers: can: mcp2515: Fixes for DT SPI cs
      include: arch: riscv: rename global macro
      drivers: can: mcp2515: fix devicetree bindings

Kim Sekkelund (1):
      Bluetooth: Host: Find by type should accept 128bit UUIDs

Krzysztof Chruscinski (47):
      drivers: clock_control: nrf: Fix lfclk source settings for nrf9160
      drivers: counter: nrfx_rtc: Fix lack of interrupt when CC=0
      drivers: clock_control: nrf: add SYNTH LFCLK clock source
      shell: Add macros for creating conditional commands
      shell: Use conditional commands registeration in shell_cmds.c
      logging: Allow logger usage in C++ files
      lib: os: ring_buffer: Fix C++ compilation warning
      testsuite: ztest: Add zassert_within macro
      drivers: counter: Add optional (D)PPI wrapping to nRF RTC driver
      shell: Move signals initialization from thread to init
      dts: bindings: Document missing property boolean type
      drivers: counter: Move nRF TIMER and RTC configuration to device tree
      logging: Add string duplicates pool profiling
      drivers: counter: Add flags to counter_config_info structure
      samples: drivers: led_lp3943: Rename log module
      logging: Add option to detect missed transient string duplication
      tests: subsys: logging: Test for detection of missed log_strdup
      tests: subsys: shell: Add shell_history test
      ring_buffer: Add functions for getting capacity and reseting
      tests: lib: ring_buffer: Test for ring_buf_reset, ring_buf_capacity_get
      shell: Refactor shell_history to use less RW memory
      tests: shell: shell_history: Add more tests
      CODEOWNERS: Adding tests/subsys/shell codeowners
      shell: Fix shell uart not waking up shell on mcumgr data
      logging: Duplicate only strings from rw memory
      logging: Fix log_strdup detection on non-standard messages
      samples: drivers: counter: alarm: Fix compilation for nrf boards
      tests: drivers: counter: Add device name to zassert strings
      drivers: counter: Add helper macros for logging
      samples: drivers: counter: alarm: add nordic boards to the whitelist
      drivers: clock_control: API extension proposal
      ext: hal: nordic: Fix nrf_clock external clock source control
      drivers: clock_control: nrf: Add option to use external LF source
      drivers: sensor: temp_nrf5: Code cleanup
      drivers: counter: Fix references in the doxygen comment
      logging: Fix corruption in log panic when scheduler was active
      drivers: counter: Add optional flags to alarm configuration structure
      drivers: counter: Extend set channel alarm flags
      logging: Add header with common log backend functions
      logging: Add qemu_x86_64 backend
      logging: Removing redundant code from RTT backend
      logging: Removing redundant code from SWO backend
      logging: Removing redundant code from UART backend
      logging: Removing redundant code from xtensa sim backend
      logging: Clean up log.h dependencies
      settings: Fix missing kernel.h include
      bluetooth: host: Fix Kconfig error

Kumar Gala (171):
      release: Post-release patch level update
      ieee802154_kw41z: Fix build error with SYS_LOG_INFO
      ext/hal: stm32f0xx: Fix warnings for extraneous parentheses
      ext/hal: stm32f1xx: Fix warnings for extraneous parentheses
      ext/hal: stm32f2xx: Fix warnings for extraneous parentheses
      ext/hal: stm32f3xx: Fix warnings for extraneous parentheses
      ext/hal: stm32f4xx: Fix warnings for extraneous parentheses
      ext/hal: stm32f7xx: Fix warnings for extraneous parentheses
      ext/hal: stm32l0xx: Fix warnings for extraneous parentheses
      ext/hal: stm32l4xx: Fix warnings for extraneous parentheses
      samples: sensor: bme280: Convert code to use printk
      boards: acrn: remove duplicated Kconfig HAS_DTS
      dts: nordic: move flash/sram under SoC Node
      scripts/dts: Add support for enum's
      dts: bindings: usb: Add enum to maximum-speed property
      CODEOWNERS: Add codeowner for include/dt-bindings/usb/usb.h
      scripts/dts: Remove alias defines for bus parents with an alias
      dts: x86: Move ioapic node out of cpu container
      dts: x86: shring ioapic register size to 4k
      dts: atmel: Fix node name for device_id
      boards: atmel: Enable hwinfo as a supported feature
      scripts/dts: Fix issue in label generation of registers
      dts: nxp: nxp_rt: Fix unit-address for usb node
      scripts/dts: Remove alias defines for labels
      dts/bindings: Fix types in solomon,ssd1673fb.yaml
      dts/bindings: Fix type in spi-device.yaml
      dts/bindings: Fix nxp,kinetis-ptp.yaml
      dts/bindings: Remove generation from pinmux properties
      dts/extract: Remove bogus pinctrl generation
      dts/bindings: Move common properties into a base.yaml
      scripts/dts: Sort instance IDs by reg addr
      dts/bindings: Update soc-nv-flash to use base.yaml
      dts/binding: Cleanup a few new bindings for base.yaml
      scripts/dts: Change DT_<COMPAT>_<INSTANCE>_<PROP> define
      dts: Convert from DT_<COMPAT>_<INSTANCE>_<PROP> to DT_INST...
      dts/bindings: Rename stringlist to string-array
      dts/binding: Update compatible type in base.yaml
      dts: Convert new/missed DT_<COMPAT>_<INSTANCE>_<PROP> to DT_INST...
      drivers/uart_rv32m1_lpuart: Fix DT define usage
      dts/bindings: Add uint8-array type for ethernet mac address
      dts/bindings: Cleanup phy bindings
      drivers/i2c: Add missing HAS_DTS_I2C to sbcon
      drivers/i2c: Add missing HAS_DTS_I2C to nios
      scripts/sanitycheck: Add --cmake-only option
      dts/bindings: Remove pinctrl from bindings
      dts/bindings: Fix openisa,rv32m1-intmux binding
      dts: cleanup missing #{address,size}-cells
      dts/bindings: Add binding for riscv,cpu-intc
      dts/extract: Add ability to mark aliases as deprecated
      dts/extract: Fix IRQ alias define generation
      drivers: Update DT IRQ alias defines
      dts/extract: deprecate old IRQ alias define generation
      drivers/i2c_rv32m1_lpi2c: Remove accidently added debug code
      dts: Add concept of sub-nodes to YAML and generator
      tests/kernel/context: Fix TICK_IRQ define for RV32M1 lptmr_timer
      scripts/dts: Treat string-list always as a list
      scripts/dts: Treat array always as a list
      board: mps2_an385: Remove board.h
      drivers: rv32m1: remove bogus IRQ_PRI related defines
      sensor: lis2dh: Use general DT_<COMPAT>_BUS_<BUS> define.
      dts/extract: Remove 'use-prop-name' from cell and controller handling
      scripts/dts: Remove 'use-prop-name' from clock generation
      scripts/dts: Add ability to mark cell/ctrl defines as deprecated
      scripts/dts: Remove DT_CHOSEN generation
      samples: out_of_tree_board: remove board.h
      dts/bindings: remove 'use-prop-name' from bindings
      dts: Rename DT_.*_GPIO_* to DT_.*_GPIOS_*
      dts: Rename PWM to PWMS
      dts: remove unused clock-controller property
      dts: remove unused clock-controllers property
      boards: dts: Cleanup some ""ok"" -> ""okay""
      dts: Rename SW._GPIO_* -> DT_ALIAS_SW._GPIOS_*
      dts: Rename LED._GPIO_* -> DT_ALIAS_LED._GPIOS_*
      dts: lpc55s6x: Fix SRAM-X address
      dts: nxp_imx6sx_m4: fix cpu reg num
      dts: nios2: fix flash node name
      dts: silabs: fix gpio address
      arm: mps_an521: Add support for the AN521 on MPS2+
      boards: dts: cleanup partition node names
      dts/bindings: Fixup some clock bindings to match reality
      dts: Fix handling of fixed-clock
      dts/bindings: Add missing clock-cells property
      scripts/dts: Mark 'non-S' forms of cell and controllers as deprecated
      dts/scripts: mark all non DT_ prefix deprecated
      scripts/dts: deprecate DT_<COMPAT>_<INSTANCE ID>_BUS_<BUS>
      sensor: lis2dh: Fix stray use of old DT define
      dts: arc: fix cpu num
      scripts/dts: cleanup 'generation' usage
      dts/bindings: Remove generation from binding
      disk: sdhc: Fix use of deprecated DTS defines
      scripts/dts: Add option to generate only deprecated defines
      dts/extract: Mark DT_FLASH_AREA_*_LABEL defines as deprecated
      dts/bindings: Remove unused property num-irq-priority-bits
      dts: nxp: mimxrt: Add missing jedec-id property to flash nodes
      dts/bindings: remove stale cell_string
      dts/bindings: Remove unused required dts props from st,stm32-can
      dts/binding: Move clocks into base.yaml
      dts/bindings: remove required clock from intel,qmsi-watchdog
      dts/bindings: Mark rtc prescale as optional
      dts/bindings: Fix 'required' for interrupts
      dts/bindings: Mark uart current-speed as optional
      dts/bindings: Remove generation property from st,stm32-usb
      usb/stm32: Fix missing clock property for usb on stm32f103Xb
      dts: Remove unused virtualcom device node from dts
      dts/bindings: Mark 'rdc' as optional in nxp,imx-gpio
      dts/bindings: Fix category field for microchip,xec-i2c
      boards/arm/v2m_musca_b1: Add missing label to timer node
      dts/arm/microchip: Mark uart & i2c nodes as disabled by default
      native_posix: Remove reg property from uart node in dts
      dts/bindings: Remove version from litex,eth0.yaml
      dts/bindings: Make pwm-leds label optional
      cmake/dts: Remove import of CONFIG_ prefixed symbols from dts
      boards: cc3220sf_launchxl: Use SDK OpenOCD
      mec1701: fix dts build error
      nxp_imx: Fix dts build error
      dts/bindings: Cleanup microchip,xec-rtos-timer binding
      dts/bindings: Cleanup st,stm32-ipm-mailbox binding
      dts: Make instance defines consistent
      scripts/dts: Sort output of DT_COMPAT_ defines
      dts/nxp: Fix dtc warning with spi device node name
      scripts/sanitycheck: optimize disk usage for --save-tests
      cmake: Support SDK versions more broadly
      arc: snps_nsim: Fix -mfpu compiler flag for NSIM_HS build
      dts: arm: Remove device_type = ""memory"" from SRAM nodes
      dts: arc: Remove device_type = ""memory"" from {d,i}ccm nodes
      dts: riscv: Remove device_type = ""memory"" from SRAM nodes
      dts: nios2: Remove device_type = ""memory"" from SRAM nodes
      dts: pwm: nxp: Fixup bindings and dtsi so they build
      dts/bindings: Change clock type to compound
      scripts/dts/gen_defines: Cleanup write_prop for which props we process
      scripts/dts: Fix detection of a GPIO specifier
      dts/bindings: Remove unused snps,num-irq-priority-bits prop
      ci: Update to using SDK 0.10.2
      cmake: Bump min version to 0.10.2
      cmake/toolchain: Change to use riscv64 toolchain
      doc: sdk: Update docs to use SDK 0.10.2
      dts/gen_defines.py: Use err() instead of _err()
      lib/libc/min: Handle duplicate time definitions
      gpio: arm: cmsdk-gpio: Fixup dts binding / nodes
      dts/bindings: Remove #{addr,size}-cell props from st,stm32-timers
      dts/bindings: Mark #clock-cells as optional in nxp,kinetis-sim.yaml
      scripts/dts/edtlib.py: error check # and -map properties
      soc: microchip_mec: mec1501: Fixup GPIO dts defines
      dts: Add base interrupt-controller to dts bindings
      scripts/dts/gen_defines.py: Ignore 'interrupt-controller' prop
      dts: Add base gpio-controller to dts bindings
      scripts/dts/gen_defines.py: Ignore 'gpio-controller' prop
      dts/bindings: Add gpio-nexus base binding
      dts/bindings: Add base clock controller to dts bindings
      dts/bindings: Add required #pwm-cells property to pwm base
      dts/bindings: Update pwm base binding
      dts/bindings: cleanup partition binding
      dts: nxp: cleanup remove system-clock-frequency
      scripts/dts/gen_defines.py: Fix generation for multiple PWMs
      dts/bindings: add docs for enum to binding-template
      dts/bindings: Fix build issues with bindings
      scripts: openocd: Add error if hex file is missing when flashing
      dts/bindings: Fix ilitek,ili9340 reset-gpios property being required
      tests: net: lib: dns: dns_addremove: Increase stack size for FRDM-K64F
      soc: arm: mcimx6x_m4: Floating Point support required by default
      cmake: Build HEX files if flash runner is openocd
      ci: Update to using SDK 0.10.3
      drivers: espi: espi_mchp_xec: Fix wrong size type for status var
      doc: sdk: Update docs to use SDK 0.10.3
      cmake: Bump min version to 0.10.3
      scripts/dts/gen_defines.py: Fix generation for multiple IO Channels
      samples: usb: webusb: Mark harness as TBD
      samples: CAN: Add testing harness
      samples: nvs: Add testing harness
      samples: cdc_acm_composite: rework sample logging
      libc: Make libc-nano default for ARM toolchain if newlib

Kwon Tae-young (5):
      soc: st: add STM32F415RG
      arm: Add support for MINI-M4 for STM32 Board
      boards: stm32f4_disco: Fix yaml ram size
      drivers: pinmux: stm32f3: Add SPI3, USB support of STM32F302x8
      drivers: i2c_ll_stm32_v1: add timeout

Laczen JMS (4):
      subsys/settings: change processing to const char
      subsys/settings: Update client modules
      subsys/settings: Enable handler ROM registration
      subsys/settings: Update bluetooth module

Leandro Pereira (1):
      drivers: hwinfo: Add support for ESP32

Loic Poulain (26):
      ext: mcux: csi: Fix wrong circular queue delta calculation
      soc: nxp_imx: mimxrt1064_evk: Add I2C support
      eth: eth_mcux: Register mDNS multicast address
      net: ethernet: Fix build issue with C++
      net: lib: Fix missing dns subdir include
      net: mdns_resolver: Fix malformed MDNS response
      boards: mimxrt1064_evk: Enable USB device controller 1
      drivers: usb: nxp: Fix board freeze with various USB classes
      usb: netusb: cdc_eem: Fix Interface select
      drivers: usb: nxp: Add cache management
      soc: nxp:rt: Add HAS_MCUX_GPT flag
      dts: arm: nxp_rt: Add GPT nodes
      drivers: counter: Add NXP MCUX GPT counter driver
      soc: nxp: rt: Enable mcux gpt when counter is enabled
      boards: mimxrt10xx: Add counter to supported list
      wifi: eswifi: Parse async messages
      wifi: eswifi: Allow nested locking
      wifi: eswifi: Implement TCP listen/accept
      dts: arm: nxp: rt: Add PWM nodes
      ext: mcux: Add HAS_MCUX_PWM config
      soc: nxp_imx: Add PWM config
      drivers: pwm: Add NXP MCUX PWM driver
      boards: mimxrt1064: Add PWM support
      boards: mimzzrt1064_evk: Add pwm-led0 alias
      sample: blink_led: Adjust PWM period
      dts: bindings: pwm: nxp: Fix missing copyright/license

Louis Dupont (1):
      net: lwm2m: Remove IPSO objects maximum number of instances limitation.

Lucas Peixoto (2):
      fs: implemented unmount function to fatfs
      disk: fixing the sending of commands with r1 response

Luiz Augusto von Dentz (72):
      Bluetooth: GATT: Skip ahead if handle is not within service handles
      Bluetooth: GATT: Fix iterating over requested handle range
      Bluetooth: Settings: Fix not allowing custom handlers without arguments
      Bluetooth: GATT: Store database hash
      Shell: Introduce shell_hexdump
      Bluetooth: Shell: Convert users of hexdump to shell_hexdump
      Bluetooth: shell: Make show-db print the total number of attributes
      Bluetooth: Shell: Add option UUID parameter to GATT show-db
      Bluetooth: Shell: Add GATT command get
      Bluetooth: Shell: Add GATT command set
      Bluetooth: GATT: Update read/write callback documentation
      Bluetooth: GATT: Fix usage of uint16_t instead of u16_t
      Bluetooth: GATT: Add support for static services
      Bluetooth: GATT: Add option to enable/disable database
      Bluetooth: Use BT_GATT_SERVICE_DEFINE whenever possible
      Bluetooth: GATT: Disable dynamic database by default
      Bluetooth: GATT: Fix typo in commments
      Bluetooth: GATT: Move GATT/ATT option to Kconfig.gatt
      Bluetooth: GATT: Rename BT_GATT_DB to BT_GATT_DYNAMIC_DB
      net: bt: Add multi-link support
      net: bt: Set NET_IF_NO_AUTO_START flag
      Bluetooth: shell: GATT: Make get command take a handle range
      Bluetooth: GATT: Fix not parsing result of Read by Type
      Log: Fix build error on Fedora 30
      Bluetooth: L2CAP: Move fixed channels to its own section in ROM
      Bluetooth: Add possibility to pass a user_data to conn_tx_cb_t
      Bluetooth: L2CAP: Add sent callback
      Bluetooth: shell: Add sent callback to L2CAP ops
      Bluetooth: L2CAP: Move Kconfig option to its own it own file
      Bluetooth: L2CAP: Add callback to notify status
      Bluetooth: shell: Print L2CAP channel status
      Bluetooth: GATT: Add bt_gatt_foreach_attr_type
      Bluetooth: GATT: Make use of bt_gatt_foreach_attr_type on bt_gatt_notify
      Bluetooth: shell: Make use of bt_gatt_foreach_attr_type
      Bluetooth: GATT: Add support to notify by UUID
      Bluetooth: conn: Defer bt_conn_tx callback to system wq
      Bluetooth: GATT: Disable flow control if running with POSIX_ARCH
      Bluetooth: GATT: Document the context in which callbacks are run
      Bluetooth: Shell: Fix having gatt unregister twice
      Bluetooth: Shell: Add gatt notify command
      Bluetooth: Fix BT_ATT_ENFORCE_FLOW
      Bluetooth: GATT: Fix using invalid handle
      Bluetooth: GATT: Fix assuming writes to CCC will always contain 2 bytes
      Bluetooth: GATT: Fix bt_gatt_foreach_attr_type
      Bluetooth: shell: Add number of matches to gatt show-db
      Bluetooth: L2CAP: Fix inverting of SCID and DCID on disconnect
      Bluetooth: ATT: Queue buffers on bt_att_send
      Bluetooth: ATT: Fix unbalanced use of k_sem_give
      Bluetooth: Make it safe to allocate buffers from TX callback
      Bluetooth: GATT: Fix bt_gatt_discovery with BT_GATT_DISCOVER_DESCRIPTOR
      Bluetooth: shell: gatt: Add discover command
      cmake: Set NO_QEMU_SERIAL_BT_SERVER when CONFIG_BT_NO_DRIVER is set
      Bluetooth: hci_prop_evt: Don't set NO_QEMU_SERIAL_BT_SERVER
      Bluetooth: tests: Add tests for UUID APIs
      Bluetooth: tests: Add tests for L2CAP
      Bluetooth: tests: Add tests for GATT
      Bluetooth: GATT: Fix registering on static service area
      Bluetooth: GATT: Make use of Z_STRUCT_SECTION_ITERABLE
      Bluetooth: L2CAP: Make use of Z_STRUCT_SECTION_ITERABLE
      Bluetooth: ATT: Fix bt_att_req_cancel clearing outstanding request
      Bluetooth: GATT: Fix not canceling on unsubscribe
      Bluetooth: GATT: Use atomic_t for subscribe flags
      Bluetooth: conn: Warn when blocking with K_FOREVER
      Bluetooth: Fix deadlock caused by blocking on syswq
      Bluetooth: Dispatch internal callbacks using RX thread
      Bluetooth: GATT: Fix assert when storying CCCs
      Bluetooth: GATT: Fix not clearing out of sync flag
      Bluetooth: GATT: Remove dead code
      Bluetooth: GATT: Fix dereference after NULL check
      Bluetooth: GATT: Add support for indicating by UUID
      Bluetooth: GATT: Fix using variable size storage for CCC
      Bluetooth: GATT: Fix bt_gatt_notify_cb documentation

Lyle Zhu (3):
      dts: riscv32: update flash controller compatibility property
      driver: flash: add flash driver for the RV32M1 SOC
      boards: riscv32: rv32m1_vega: enable MCUboot for ri5cy core

Maciej Zagrabski (1):
      drivers: stm32: Fix disabling EXTI subsystem

Maksim Masalski (4):
      samples: LSM6DSL accel fix unchecked return value sensor_trigger_set()
      tests: fix unchecked return value in test_net_pkt_basics_of_rw
      drivers: added break in function stm32_clock_control_get_subsys_rate
      samples: sample modified according to the changes in Zephyr macros

Manivannan Sadhasivam (20):
      ext: hal: st: stm32cube: Add HAL for the STM32L1x series
      soc: arm: st_stm32: Add STM32L1 SoC series
      drivers: clock_control: Add STM32L1X clock support
      soc: arm: stm32: stm32l1: Add UART support
      drivers: pinmux: Add STM32L1X pinmux support
      drivers: gpio: Add STM32L1X GPIO support
      drivers: interrupt_controller: Add STM32L1X EXTI support
      drivers: i2c: Add STM32L1X I2C support
      boards: arm: Add 96Boards WisTrio LoRa Tracker board
      CODEOWNERS: Add codeowner for 96b_wistrio
      pinmux: stm32f4: Add STM32_OSPEEDR_VERY_HIGH_SPEED to pinmux header
      boards: arm: 96b_stm32_sensor_mez: Enable I2S2 peripheral
      boards: arm: 96b_stm32_sensor_mez: Add DTS node for on-board MIC
      boards: arm: Add support for 96Boards Meerkat96 board
      drivers: pinmux: stm32mp1: Add missing UART4 and UART7 pinctrl definitions
      dts: arm: st: mp1: Add missing uart4 and uart7 pinmux nodes
      boards: arm: Add 96Boards Avenger96 board support
      scripts: dts: Match alpha numeric property values
      boards: arm: 96b_avenger96: Add onboard LEDs
      boards: arm: 96b_avenger96: Enable Mailbox support

Marc (1):
      Apply David's English corrections from code review

Marc Herbert (42):
      cmake: zephyr_cc_option(-fmacro-prefix-map=${ZEPHYR_BASE}=.)
      file2hex.py: new --gzip-mtime option that defaults to zero + test
      cmake: atomic rename to fix toolchain cache creation race
      sanitycheck: order results.csv and discards.csv deterministically
      git.cmake: let the environment override BUILD_VERSION
      extensions.cmake: add two cc/compile_options callgraph comments
      CMakeLists.txt: fix misleading logical_target_for_zephyr_elf comment
      gen_kobject_list.py: better comments and --help. Zero code change.
      CODEOWNERS: include/cortex_m/csme/ -> include/cortex_m/csme.h
      sanitycheck: clarify who spawns processes and threads and where
      sanitycheck: support symbolic links in ZEPHYR_BASE
      cmake: explain BUILD_VERSION and KERNEL_VERSION_*
      sanitycheck: when present, point at handler.log instead of run.log
      tests/bluetooth/tester: remove spurious CONFIG_GPIO=y
      extensions.cmake: don't leak absolute paths in snippets-*.ld comment
      sanitycheck: CONFIG_TEST_USERSPACE / userspace tag cleanup
      cmake: warn if inconsistency between CMAKE_SOURCE_DIR and ZEPHYR_BASE
      cmake: stop destroying intermediate link maps like zephyr_prebuilt.map
      CMakeLists.txt: -fmacro-prefix-map=${CMAKE_SOURCE_DIR}=CMAKE_SOURCE_DIR
      cmake: silence ""WARNING: ASSERTs enabled"" when CONFIG_TEST is true
      generated/cfb_font_dice.h: don't leak absolute paths in comment
      BOOT_BANNER: show KERNEL_VERSION and BUILD_VERSION differently
      tests: minor FCB re-ordering not to leave a random flash.bin behind
      sanitycheck: show handler_time in -v output (qemu 2.032s)
      doc: how to unset Clear Linux' CFLAGS and CXXFLAGS
      gen_relocate_app.py: make generated/linker_relocate.ld deterministic
      gen_app_partitions.py: make generated/app_smem_*.ld files deterministic
      Revert ""gen_app_partitions.py: make generated/app_smem_*.ld files deterministic""
      gen_app_partitions: deterministic _and_ decreasing app_smem_*.ld
      samples/**/external_lib: invoke $(MAKE) instead of make
      cmake: remove spurious IS_ABSOLUTE logic in zephyr_sources()
      sanitycheck: fix --jobs help message + other cosmetic fixes
      tests/net/ptp/clock: add 'userspace' tag
      subsys tracing: remove (uintptr_t) casts in snprintk and use %p
      doc: add space after cmake -Bdir and ninja -Cdir options
      sanitycheck: replace cmake -H ""not meant for public use"" with -S
      sanitycheck help: how to spot tests that were not run and just built
      sanitycheck: fix priority of --extra-args=CONFIG_ over testcase.yaml
      toolchain/zephyr: invoke ar with -D for deterministic .a files
      tests/net/: samples/net/: add a few 'userspace' tags
      Revert ""toolchain/zephyr: invoke ar with -D for deterministic .a files""
      tests/ /gen_inc_file: convert 4,5,6,7 enumeration to an interval

Marc Reilly (2):
      display: Add support for an ST7789V based LCD
      samples: display: add a simple sample for st7789v display

Marcin Niestroj (8):
      shell: add Ctrl+N and Ctrl+P meta-keys
      doc: shell: document Ctrl+N and Ctrl+P meta-keys
      sensors: lis2dh: support high resolution mode
      mcumgr: fix type of pointer passed to base64_decode
      mcumgr: select NET_BUF when MCUMGR=y
      scripts: openocd: allow to overwrite elf file used to flash device
      scripts: openocd: use hex file for flash command
      gpio: stm32: fix build for stm32l0x with no GPIOH

Marcin Sloniewski (1):
      requirements.txt: change package name ""hub"" to ""git-spindle""

Marcin Szymczyk (13):
      cmake: fix support for out of tree shields
      ztest: make priority of testing thread configurable
      usb: cdc_acm: SerialState notification full support
      usb: samples: mass: add configuration and fs for FLASH
      usb: cdc: Add unique PIDs for each sample
      usb: cdc: add .inf file
      usb: cdc: add option to force IAD
      usb: add zero-length packet after MPS-sized IN transaction
      usb: cdc_acm: fix typo in CDC_ACM_DEFAULT_BAUDRATE
      usb: cdc_acm: reset to default after disconnect
      logging: add frontend API
      logging: add frontend calls in log_core
      doc: add custom logger frontend description

Marek Pieta (4):
      bluetooth: hci_core: Remove misleading log
      bluetooth: Fix bt_conn->id handling
      Bluetooth: host: Fix bt_keys_get_addr()
      debug: tracing: Fix tracing hooks

Mariusz Glebocki (2):
      drivers: ethernet: Add LiteEth driver
      boards: litex_vexriscv: Enable LiteEth driver

Mariusz Skamra (13):
      Bluetooth: gatt: Fix foreach iteration of static attributes
      Bluetooth: controller: Workaround CPR procedure collision at CPU instant
      Bluetooth: gatt: Fix infinite read_by_uuid procedure
      Bluetooth: Add BT_SMP_ENFORCE_MITM option
      Bluetooth: shell: Fix L2CAP connect parameters count
      Bluetooth: tester: Enable Mesh Friend support
      Bluetooth: tester: Enable GAP writable device name
      Bluetooth: tester: Update to recent conn param related changes in BTP
      Bluetooth: tester: Change RPA timeout
      Bluetooth: GATT: Fix byte order for database hash
      Bluetooth: Shell: Fix unregister GATT Metrics vendor service
      Bluetooth: Mesh: Fix rejecting invalid remote public key
      Bluetooth: GATT: Add BTP Discover All Primary Services command handler

Mark Ruvald Pedersen (23):
      cmake: fix whitespace
      cmake: fix intent description of toolchain_cc_nostdinc macro
      cmake: Toolchain abstraction: introduce LINKER variable
      cmake: Toolchain abstraction: use LINKER, introduce toolchain_ld_base
      cmake: Toolchain abstraction: move LINKERFLAGPREFIX under GNU ld
      cmake: Toolchain abstraction: introduce toolchain_ld_baremetal()
      Bluetooth: controller: commentary and readability improvements
      cmake: Toolchain abstraction: build-id,gc-sections to toolchain_ld_base
      cmake: Toolchain abstraction: orphan handling in toolchain_ld_baremetal
      cmake: Toolchain abstraction: move symbol sorting into toolchain_ld_base
      cmake: Toolchain abstraction: introduce toolchain_ld_cpp
      cmake: remove unused ALIGN_SIZING_DEP
      cmake: whitespace alignment of syscall_macros_h
      cmake: change construct_add_custom_command_for_linker_pass into macro
      cmake: rename construct_add_custom_command_for_linker_pass macro
      cmake: configure_linker_script: accept argument with file extension
      cmake: simplify configure_linker_script: avoid deriving define from name
      cmake: move configure_linker_script to ld/target.cmake
      cmake: Toolchain abstraction: Introduce toolchain_ld_relocation macro
      cmake: Toolchain abstraction: move PROPERTY_LINKER_SCRIPT_DEFINES
      cmake: Rename kernel_elf to zephyr_final
      cmake: Toolchain abstraction: Introduce toolchain_ld_configure_files
      cmake: Introduce toolchain_ld_link_elf to abstract linker invocation

Mark Wang (6):
      ext: mcux: Import NXP SDK USB EHCI controller driver to ext/ directory.
      drivers: usb: nxp: add NXP EHCI USB device controller driver shim
      soc: nxp_imx: configure USB device EHCI controller driver for rt1050
      boards: mimxrt1050_evk: configure USB device EHCI driver for rt1050
      dts: nxp: nxp_rt: add usbd1 for rt1050 and works as default usb.
      boards: frdm_k64f: button_1 has no callback when button is released

Markus Becker (1):
      net: openthread: Allow DHCP configuration of OpenThread in Zephyr

Markus Fuchs (5):
      net: sntp: add missing __cplusplus check
      include: data: add missing __cplusplus checks
      include: json: reorder designated initializers
      fs/nvs: improve C++ compatibility
      soc: arm: st_stm32: add STM32F437XI

Marti Bolivar (59):
      README.rst: shorten it
      doc: guides: add ""Asking for Help"" guide
      doc: nrf52840_pca10059: re-work programming notes
      scripts: fix and tweak west boards
      west: build: use CMAKE_HOME_DIRECTORY to locate source
      scripts: flake8 cleanup for west build
      scripts: add helpers to west build for getting config options
      scripts: improve west build's board handling
      doc: re-word and extend west build documentation
      scripts: add --cmake-only to west build
      scripts: add build.generator config option for west build
      scripts: fix up west build verbosity levels
      scripts: add --dry-run flags to west build
      scripts: add --build-opt option to west build
      scripts: make west build -h fit on a screen
      doc: fix west boards tip
      scripts: west build: propagate verbosity to cmake generator
      doc: save ZEPHYR_BASE in more places where it's needed
      doc: updates for west installation docs
      doc: updates to west multi-repo docs
      doc: move sign command docs before catch-all page
      scripts: fix west TypeError on unknown arguments
      doc: trivial fix for lpcxpresso54114 doc
      scripts: avoid unnecessary 'west build --force'
      cmake: delete obsolete deprecation checks
      cmake: add helpers for setting board runners
      boards: allow cmake-time overrides of all runners
      scripts: west: improve error message on missing cache
      boards: nrf52_sparkfun: fix board.cmake
      doc: periodic updates to getting started guide
      doc: unify documentation on setting environment variables
      doc: clear up qemu + zephyr sdk interaction
      getting_started: changes for custom toolchains
      west.yml: update open-amp SHA
      scripts: runners: add __contains__ to BuildConfiguration
      scripts: west sign: make it work again
      scripts: west sign: code style refactor
      scripts: west sign: move hex and bin default locations
      scripts: west sign: improve user friendliness
      scripts: west sign: test for input file existence
      docs: update west sign docs
      scripts: runners: abstract jlink's missing program support
      scripts: runners: check for required programs
      scripts: fix pyocd runner --flash-opt help
      scripts: west_commands: fix help string
      scripts: runners: update ZephyrBinaryRunner docstring
      scripts: west_commands: decouple runners pkg from west
      scripts: tweak runner-related command output
      scripts: tweak west build output
      scripts: west_commands: improve run_common error handling
      scripts: remove runner related cruft
      doc: add a release notes page for west
      doc: move runner documentation out of west-apis.rst
      west: require v0.6.0 or higher
      scripts: un-break test_nrfjprog.py
      boards: nrf9160_pca10090: add default uart2 pins
      scripts: runners: improve hex file detection and output
      scripts: west flash: fix --board-id for pyocd
      doc: fix zephyr-app-commands for west

Mateusz Holenko (5):
      dts: riscv32: hifive1: configure sram
      dts: riscv32: qemu_riscv32: configure sram
      dts: riscv32: qemu_riscv32: add flash
      dts: m2gl025_miv: configure flash and sram
      dts: riscv32: fix reg-names for liteeth

Matthew Koch (4):
      drivers: pinmux: stm32f7: Add LTDC pinmux entries to STM32F7
      stm32f7: Kconfig: soc: Enable GPIO ports F & G by default
      dts: stm32f7: Remove DTCM from sram0
      boards: stm32f7: Remove DTCM from sram0

Maureen Helm (20):
      mimxrt1060_evk: mimxrt1064_evk: Enable pyocd runner
      boards: mimxrt1015_evk: Fix board image
      scripts: west_commands: Print error message when jlink exe not found
      soc: riscv32: Use same clock freq for both rv32m1 cores
      arch: soc: riscv32: Separate soc offsets from soc context save
      dts: riscv32: Add rv32m1 zero-riscy core support
      boards: rv32m1_vega: Introduce zero-riscy configuration
      boards: rv32m1_vega: Use different openocd config file for each core
      CODEOWNERS: Add code owner for rv32m1_vega related files
      soc: riscv32: Move rv32m1 sram memory definitions to dts
      soc: riscv32: Move rv32m1 flash memory definitions to dts
      boards: mimxrt1060_evk: Enable mcux lpi2c driver and pins
      scripts: west: Add reset-after-load argument to jlink runner
      tests: flash_map: Configure mpu to allow flash write
      boards: shields: Introduce frdm_cr20a shield
      samples: net: Convert mcr20a samples to use the frdm_cr20a shield
      boards: lpcxpresso55s69: Enable pyocd runner
      tests: pwm_api: Use smaller pwm period cycles on k64-based boards
      doc: releases: Document boards added/removed in 2.0 release note
      doc: releases: Document major driver changes in 2.0 release note

Michael Hope (1):
      drivers: dma: Add SAM0 DMAC driver

Michael Scott (68):
      drivers: modem: wncm14a2a: dont free packet on error
      drivers: modem: wncm14a2a: correct pinconfig assert check
      dts-binding: modem: wnc-14a2a: add label binding
      dts/bindings: introduce Arduino-header-R3 GPIO binding
      boards: arm: frdm_k64f: add Arduino header definition to DTS
      boards: nrf52840_pca10056: add Arduino header definition to DTS
      board: disco_l475_iot1: add Arduino header definition to DTS
      samples: lwm2m_client: cleanup shield overlay files
      cmake: add handling for shield config and shield/board overlays
      shields: introduce shield-based WNC-M14A2A modem setup
      drivers: modem: wncm14a2a: remove HW specific Kconfig settings
      boards: arm: frdm_k64f: don't use ETH if MODEM is enabled
      samples: lwm2m_client: re-add sanity check for WNC-M14A2A build
      dts: bindings: add modem binding for u-blox SARA-R4
      drivers: modem: introduce u-blox SARA-R4 modem driver
      boards: arm: frdm_k64f: add pinmux for SARA-R4 modem
      boards: shields: introduce SparkFun u-blox SARA-R4 shield
      boards: arm: particle_boron: enable SARA-R4 modem
      boards: arm: particle_boron: fix SARA-R4 gpio definitions
      net: openthread: fix off-by-one error in settings offset calculation
      boards: rv32m1_vega: add Arduino header information
      net: lwm2m: fix log_strdup missing errors
      boards: rv32m1_vega_ri5cy: set shell UART in DTS
      net: lwm2m: remove IP CONFIG checks in lwm2m_sprint_ip_addr()
      net: lwm2m: remove IP CONFIG checks in lwm2m_parse_peerinfo()
      net: lwm2m: fix error message in load_tls_credential()
      net: lwm2m: dont select MBEDTLS or set MBEDTLS options in subsys
      net: lwm2m: firmware: add log_strdup to remove logging errors
      sanitycheck: add west-runner parameter
      sanitycheck: handle west-flash dependency for device-testing
      boards: arm: nrf52840_pca10056/nrf52_pca10040: enable pyocd runner
      net: lwm2m: add custom TLS credential load function pointer
      net: lwm2m: use server record to set default observe notify timing
      net: lwm2m: remove data storage for IPSO Timer application type
      net: lwm2m: add missing application type to IPSO Light Control
      samples: net: lwm2m_client: set LWM2M_COAP_BLOCK_SIZE to 512
      samples: net: lwm2m_client: send temp value back to engine
      net: lwm2m: update function prototypes and descriptions
      net: lwm2m: remove unused multi_max_count field from obj_field
      net: lwm2m: remove unique lwm2m_engine_obj_delete_cb_t definition
      net: lwm2m: remove lwm2m_engine_obj from most handlers/formatter OPs
      net: lwm2m: rework resource instance storage / access methods
      net: lwm2m: add IPSO Buzzer object support
      net: lwm2m: add IPSO On/Off Switch object support
      net: lwm2m: add IPSO Push Button object support
      net: lwm2m: add Connection Monitoring object support
      net: lwm2m: add Location object support
      net: lwm2m: add IPSO Accelerometer object support
      samples: net: lwm2m_client: support for compiling in new objects
      net: lwm2m: add LwM2M path to engine_set errors
      net: lwm2m: cleanup memset usage during init
      scripts: dts: support multiple binding dirs in new scripts
      net: lwm2m: fix IP address max calc in conn mon obj
      drivers: modem: context helper: introduce modem context helper driver
      drivers: modem: interface: introduce UART interface driver layer
      drivers: modem: cmd handler: introduce cmd handler driver layer
      drivers: modem: introduce socket helper layer
      drivers: modem: ublox SARA convert to modem context
      drivers: modem: ublox-sara-r4: Support SARA-U2 modems, sense VINT
      drivers: modem: socket: sock_fd isn't an index in modem_socket_put()
      net: lwm2m: Kconfig: move RD_CLIENT settings above dependencies
      net: lwm2m: Kconfig: fixup default instance counts for bootstrap
      net: lwm2m: add missing bootstrap-finish handling
      samples: net: lwm2m: bootstrap support changes:
      net: lwm2m: plain text: fix float formatting
      net: lwm2m: plain text: expose put_float32/64 functions
      net: lwm2m: json: use plain text formatter for float32/64
      net: lwm2m: tlv: fix float32/64 sign handling

Michael Zimmermann (1):
      drivers: i2c: i2c_esp32: fix configuring speed

Mieszko Mierunski (11):
      drivers: nrf: Fix long receptions in UARTE async API.
      tests: uart: Add long tranfer test to UART_ASYNC_API.
      drivers: nrf: Add power management to nrf TWIM peripheral.
      drivers: nrf: Add power management to nrf TWI driver.
      drivers: nrf: Add power management to nrf SPIM driver.
      drivers: nrf: Add power management to nrf SPI driver.
      drivers: nrf: Fix PM for TWI and TWIM in case of multi instance
      tests: drivers: Fix coverity issue 198873
      drivers: uart: Fix incorrect len and offset in nrf UARTE async API.
      drivers: nrf: Fix RX timeout and ENDRX ISR handling.
      drivers: uart: Properly configure pins in NRF UARTE power management

Morten Priess (13):
      bluetooth: controller: Source code documentation of ticker
      bluetooth: controller: Minor refactoring in ticker.c
      bluetooth: controller: Added missing variable initializations
      bluetooth: controller: Moved library source for lll_test.c
      bluetooth: controller: Mayfly yield after call under Kconfig
      bluetooth: controller: Allow out-of-tree vendor specific HCI commands
      bluetooth: controller: Made BT_CTLR_RX_PRIO_STACK_SIZE non-hidden
      bluetooth: controller: Revised ticker for improved conflict resolution
      bluetooth: controller: Reverted revised ticker pending redesign
      bluetooth: controller: Moved ull_entropy_get to LLL
      bluetooth: controller: Revised ticker for improved conflict resolution
      bluetooth: controller: Fix for coverity CID 203524
      bluetooth: controller: Fix for uninitialized data compile error

Nathaniel Graff (8):
      runners/jlink: Add --tool-opt option for more args
      boards/riscv32: Add support for the HiFive1 Rev B
      soc/riscv32: Make clock init code common to SoC
      drivers/uart: Remove DTS fixups for SiFive UART
      dts/i2c: Remove id field from sifive,i2c0
      boards/hifive1: Add copyright and license to dts
      drivers/gpio: Remove DTS fixups for SiFive GPIO
      drivers/plic: Remove DTS fixups for RISC-V PLIC

Nicholas Lowell (1):
      Includes: #ifdef CONFIG_USE_SWITCH instead of #if to avoid undef warning

Nick Ward (1):
      drivers: can: mcp2515: Fix interrupt bit tests for empty TX buffers

Nicolai Glud (1):
      shell: adc: adc shell for testing adcs

Nicolas Pitre (97):
      test/net: fix PTP clock test code
      rand32_entropy_device.c: remove atomic_t misuse
      kernel/init.c: remove needless casts
      ROUND_UP/DOWN macros: cast the entire align argument
      thread_cpu: make it 64-bit compatible
      tests: cmsis_rtos_v1: remove cast abuses
      k_fifo/K_lifo macros: avoid unnecessary casts
      ARRAY_SIZE(): make it usable on 64-bit systems
      misc: memory address type conversions
      PTHREAD_MUTEX_DEFINE(): don't store into the _k_mutex section
      json: make it 64-bit compatible
      DEVICE_DEFINE(): properly align struct device instances
      linker generated list: explicit alignment on data definitions
      linker generated list: introduce Z_STRUCT_SECTION_ITERABLE()
      linker generated list: provide an iterator to simplify list access
      time_t: define using a fixed-width type
      string.c: make it 64-bit compatible
      Kconfig: introduce CONFIG_64BIT
      memslab/mempool: make tests 64-bit compatible
      net: make __net_buf_align 64-bit compatible
      INT_TO_POINTER macros: make 64-bit compatible
      pointer-type args: cast appropriately to be 64-bit compatible
      prf.c: make it 64-bit compatible
      k_stack: make it 64-bit compatible
      printk: make it 64-bit compatible
      prf.c: implement the ll length modifiers
      usb: enforce byte alignment on USB records
      include: misc: macros to perform word/pointer boundary alignment
      mem_slab: rationalize block alignment assertion
      mem_slab: enforce minimum alignment on statically allocated slabs
      log facility: make its arguments 64-bit compatible
      log facility: make its records 64-bit compatible
      log_msg test: rework test_log_std_msg() to better cope with 64-bit builds
      mempool: fix corruption of the free block bitmap and beyond
      gptp: don't cast pointers to ints
      sflist: SYS_SFLIST_FLAGS_MASK must be a long not an int
      mempool: properly use the inline free block bitmap
      mempool: don't over-size the free block bitmap
      malloc: no longer need to round mempool's max_sz
      cmake: toolchain_cc_imacros: don't use space separated arguments
      stdint.h: streamline type definitions
      lifo/fifo: first word is not always first 4 bytes
      mempool: make alignment/rounding 64-bit compatible
      mempool: fully use the inline free block bitmap on 64-bit targets
      mempool: make sure max block size isn't smaller than minimum allowed
      cmake: toolchain_cc_imacros: don't use the long argument form
      CMakeLists.txt: parse zephyr_stdint.h after compiler specific flags
      toolchain/xcc: augment compiler provided macros to match gcc and clang
      malloc: make sure returned memory is properly aligned
      test/bluetooth: sizeof() is not strlen()
      shell_history: align buffer to pointer size
      net/socket: use the iterable section object constructor/iterator
      test/msgq: adjust overflow test for 64-bit targets
      shell_history_test: make the test succeed on 64-bit targets
      Bluetooth: L2CAP: fix use of Z_STRUCT_SECTION_ITERABLE
      limits.h: streamline value definitions
      net: socket: mgmt: use uintptr_t for the nm_pid field
      test/usb: fix pointer type mismatch
      libc: fix memchr() prototype
      tests: subsys: settings: fix pointer mismatch on 64-bit targets
      print format: adjust specifiers to be compatible with a 64-bit build
      realloc(): fix possible memory leak
      sys/util.h: helper macro to perform pointer difference
      tests: usb: make 64-bit compatible
      prf.c: code and style cleanup
      prf.c: implement the ""hh"" length modifier
      prf.c: abstract output method call
      prf.c: don't be silent with unknown conversion specifiers
      prf.c: remove buffer limitation on field width and string copy
      prf.c: remove buffer limitation on field width and padding for integers
      prf.c: remove buffer limitation on precision and padding for floats
      prf.c: remove arbitrary large stack buffer usage
      prf.c: fix display of float exponent >= 100
      prf.c: fix wrong results with %g conversion
      prf.c: properly format INF/NAN/zero with prefix
      prf.c: handle denormals properly
      realloc(): struct sys_mem_pool_block is word aligned
      native_posix: fix hw_irq_ctrl_get_irq_status() conflicting type
      arch/posix: 64-bit build flags
      native_posix: introduce a native_posix_64 board configuration
      tests: enable native_posix_64 testing
      mempool: significant reduction of memory waste
      Z_ISR_DECLARE: ensure proper alignment on 64-bit targets
      cpp: support for 64-bit constructors
      mempool: simplify the logic for sizing the free block bitmap
      m2gl025_miv: workaround for issue #17851
      tests/cmsis_rtos_v1: relax timing check a bit
      tests/cmsis_rtos_v2: exclude m2gl025_miv due to tick rate conflict
      riscv32: rename to riscv
      riscv: make core code 64-bit compatible
      riscv: isr.S: fix a missing lw to LR conversion
      LOG_BACKEND_DEFINE(): use Z_STRUCT_SECTION_ITERABLE()
      tests: fatal: make sure the illegal insn occupies a full word
      drivers: sifiv: make them 64-bit compatible
      riscv: freedom: rename RISCV32 to RISCV
      riscv: toolchain arguments for a 64-bit build
      riscv: add a qemu_riscv64 board

Nikos Oikonomou (5):
      sensors: renamed hdc1008 driver into ti_hdc
      sensors: ti_hdc driver wait conversion support
      sensors: ti_hdc now supports 1050 versions
      sensors: ti_hdc simplified ti_hdc_channel_get
      samples: added sample for ti_hdc

Oleg Zhurakivskyy (14):
      cmake: clang: Make clang pick -T option on linking
      doc/getting_started: mention ZEPHYR_TOOLCHAIN_VARIANT=llvm
      cmake: clang: Allow host's clang to be used for native_posix
      toolchain: Do not pollute TOOLCHAIN_HOME
      cmake: Set TOOLCHAIN_HOME for Zephyr's SDK
      cmake: llvm: Make the setup for host installed clang easier
      cmake: clang: Detect host installed clang
      cmake: clang: Don't unconditionally use gcc's fortify
      cmake: clang: Provide toolchain_cc_nostdinc() macro
      cmake: clang: Fix comment
      posix: cmake: Abstract freestanding options
      boards: native_posix: Add llvm to supported toolchains
      compiler: clang: Don't link libgcc for native_posix
      cmake: llvm: Invalidate toolchain capability cache

Parthiban Nallathambi (2):
      wifi: eswifi: init net_pkt cursor after net_pkt_write
      wifi: eswifi: add UDP support

Patrik Flykt (4):
      net/ip/dhcpv4: Set source IP address in DHCP Request
      net: ethernet: Set NET_ETH_PTYPE_ARP for IPv4 link local packet type
      net: ethernet: Send sender IP address in ARP announce packets
      scripts/coccinelle: Add script for counting identifier length

Paul Sokolovsky (53):
      net: sntp: Handle case of request timeout
      samples: sntp_client: Elaborate sample to workable state
      net: sntp: Add sntp_query() function with fractional precision
      arch: x86: fatal: If possible, print thread name in crash dump
      testsuite: Include thread name in crash dump for tests
      tests: socket: misc: Add tests for inet_pton()
      libc: minimal: Define time_t and suseconds_t
      libc: minimal: Introduce sys/_timeval.h
      posix: Move gettimeofday declaration to <sys/time.h>
      posix: sys/time.h: Add workaround for outdated newlib used by Xtensa
      CODEOWNERS: Add entry for lib/libc
      net: socket: Define NI_MAXHOST for compatibility
      net: socketutils: Add utils to manipulate network address strings
      net: sntp: Add convenience API for one-shot SNTP query
      samples: sntp_client: Switch from sntp_request() to sntp_query()
      samples: google_iot_mqtt: Switch from sntp_request() to sntp_query()
      samples: google_iot_mqtt: Explicitly cast socklen_t to int in printf
      net: getaddrinfo: Implement initial handling of host == NULL
      ext: mbedtls: Don't define MBEDTLS_PLATFORM_NO_STD_FUNCTIONS
      libc: minimal: Implement exit()/_exit() functions.
      tests: mbedtls: Call mbedtls_platform_set_printf() only if needed
      tests: benchmarks: mbedtls: Fix printf args
      ext: mbedtls: Enable easy integration with POSIX API
      net: getaddrinfo: Parse numeric IPv4 addresses
      tests: net: getaddrinfo: Add cases for numeric IPv4 addr
      include: arch: arc: Minor punctuation fix
      net: sockets: Make NET_SOCKETS_POSIX_NAMES depend on !POSIX_API
      posix: unistd.h: Add gethostname()
      posix: Move sys/stat.h to minimal libc
      posix: struct timespec: Move definition to sys/_timespec.h
      posix: time.h: Add workaround for outdated newlib used by Xtensa
      posix: mqueue.h: Move O_CREAT and friends to fcntl.h
      posix: unistd.h: open() doesn't belong here
      libc: minimal: time.h: Don't (re)define struct timespec.
      scripts: dts: Consistently open text files with utf-8.
      posix: Add headers related to BSD Sockets API
      lib: posix: Use ""posix_subsys"" as the CMake lib for the subsystem.
      CMakeLists.txt: Call toolchain_cc_nostdinc() at the end
      libc: minimal: Add headers as system includes
      lib: posix: Switch to use zephyr_interface_library_named cmake directive
      tests: posix: No longer use target_include_directories
      net: dns: dns_pack: Properly access type and class fields of an answer
      net: dns: dns_pack: Revamp FQDN parsing in answers
      samples: shell: fs: README: Typo in ""pkgconfig"" name.
      posix: pthread_create: Ignore retval of pthread_mutex_init() calls
      modules: Kconfig.tls-generic: Remove duplicate ""select""
      include: posix: sys/socket.h: Export MSG_* constants.
      include: posix: Add poll.h header
      posix: fs: ZFD_IOCTL_CLOSE: Be sure to call posix_fs_free_obj()
      tests: posix: test_fs_file: Cut down on noise output
      tests: posix: fs: Add test for (no) leak of file descriptors
      posix: pthread: pthread_cond_timedwait should accept absolute deadline
      posix: pthread: pthread_mutex_timedlock should accept absolute deadline

Pavel Kral (2):
      shell: fs: add dependency on kernel allocator
      drivers: serial: uart_rtt: Virtual UARTs over RTT channels

Pavlo Hamov (3):
      boards: stm32_min_dev enable I2C_2
      boards: stm32f429_disc1: add i2c
      drivers: i2c: Add STM32F10X slave support

Pawel Dunaj (5):
      bluetooth: host: Save id when allocating CCC cfg slot
      bluetooth: host: Use correct identity when direct advertising
      bluetooth: host: Unref conn on direct adv start error
      include: sensor: Add position change channel
      include: sensor: Allow sensor private attr/chan/trig

Peng Su (1):
      kernel: ignore z_fatal_halt() from code coverage

Peter A. Bigot (69):
      drivers: timer: nrf: remove unnecessary event feature
      doc: clarify behavior of k_poll_signal_raise on error
      soc: arm: nordic_nrf: change default SYS_CLOCKS_PER_SEC
      soc: arm: nordic_nrf: unrevert provide custom busy_wait implementations
      Bluetooth: controller: remove duplicated code
      boards: nrf52840_papyr: support nrfjprog flash runner
      dts: misc: add SKY13351 SPDT switch description
      boards: arm: particle_*: enable PCB antenna on startup
      drivers: adc: add API to support calibration
      Bluetooth: gatt: avoid assumptions about characteristic handles
      Bluetooth: central_hr: use new API to get value handle
      scripts/dts: fix support for uint8-array property values
      drivers: eth_enc28j60: update for dts change to local-mac-address
      drivers: eth_mcux: update for dts change to local-mac-address
      drivers: eth_stellaris: update for dts change to local-mac-address
      cmake: DT: Add support for overlays that reference board-provided dtsi
      boards: particle_*: move DTS includes to dts subdirectory
      boards: arm: particle_*: uncomment cs-gpios in spi assignments
      subsys/fb: correct last character in vtiled fonts
      scripts: gen_cfb_font_header: correct last character
      scripts: gen_cfb_font_header: correct command sanitization
      Revert ""sys/util.h: helper macro to perform pointer difference""
      libc: minimal: provide types in time.h
      libc: minimal: provide gmtime implementation
      sys: timeutil: add module
      tests/lib/timeutil: add tests for time conversions
      samples: add board customization for native_posix_64
      subsys/cfb: correct font definition macro for linker script
      dts: add label property to all jedec,spi-nor nodes
      subsys/fs: add implementation helper module
      subsys/fs: remove FS_FLASH_STORAGE_PARTITION
      subsys/fs: fix log messages requiring strdup
      drivers/spi_nor: remove configurability of page/sector/block sizes
      drivers/spi_nor: remove write-block-size devicetree property
      drivers/spi_nor: allow application control of flash layout page size
      boards/particle_*: correct spi flash description
      boards/arm/nrf52840_pca10056: add alias for external flash
      samples/drivers/spi_flash: fix device naming
      samples/drivers/spi_flash: add board overrides
      subsys/storage/flash_map: detect missing flash device
      tests/subsys/settings/functional: ensure settings area is cleared
      tests/subsys/settings/functional: test external flash
      dts/spi-nor: use bytestring for JEDEC ID
      drivers/spi_nor: fix writes across page boundaries
      drivers/spi_nor: enable logging API
      subsys/fs: hide non-public API
      subsys/fs/shell: clean up nffs mount diagnostics
      subsys/fs/shell: add statvfs command
      samples/subsys/fs: move existing test into fat_fs
      sys/sem.h: fix path to atomic.h
      libc/minimal: fix reproducibility of gmtime
      CODEOWNERS: add owner for subsys/fb
      subsys/cfb: improve font structure packing
      scripts: gen_cfb_font_header: remove guard and make font data private
      scripts: gen_cfb_font_header: modify to replicate cfb fonts
      libc: minimal: add strspn and strcspn support
      drivers/adc: provide API to access reference voltage
      drivers/spi_nor: fix writes across page boundaries
      drivers/spi_nor: de-pessimize reads
      subsys/fs: clean up CMakeLists
      subsys/fs: add support for littlefs
      samples/subsys/fs/littlefs: add a basic sample
      subsys/fs/shell: add littlefs support
      subsys/fs/shell: avoid warning about output format truncation
      tests/subsys/fs/littlefs: add tests
      subsys/fs: remove ambiguity in readdir results
      subsys/fs/littlefs: allow customization of file system configuration
      lib/libc/minimal: Refined handle duplicate time definitions
      doc/reference/drivers: document device-specific API extensions

Peter Bigot (33):
      boards/efr32mg_sltb004a: use crystal instead of RC oscillator
      include/net: additional cleanup for extern ""C"" use
      include/bluetooth: rearrange for standard use of extern ""C""
      include/dfu: rearrange for standard use of extern ""C"" in private headers
      include: rearrange for standard use of extern ""C"" in various headers
      include/posix: rearrange for standard use of extern ""C""
      include/lvgl: rearrange for standard use of extern ""C""
      drivers: rearrange for standard use of extern ""C"" in private headers
      west/littlefs: update to upstream v2.1.1 release
      doc/drivers: correct number of initialization levels
      arch/riscv: rearrange for standard use of extern ""C""
      subsys/fs/littlefs: fix Coverity issues
      logging: avoid buffer overrun extracting arguments
      subsys/testsuite: rearrange for standard use of extern ""C""
      samples/subsys/logging/logger: rearrange for standard use of extern ""C""
      subsys/debug/tracing: rearrange for standard use of extern ""C""
      lib/libc: rearrange for standard use of extern ""C""
      arch/x86: rearrange for standard use of extern ""C""
      soc/arm/xilinx_zynqmp: clean up use of extern ""C""
      soc/arm/arm: rearrange for standard use of extern ""C""
      soc/arm/ti_lm3s6965: remove unnecessary extern C block
      arch/arm: rearrange for standard use of extern ""C""
      soc/arm/silabs_exx32: clean up use of extern ""C""
      soc/arm/nxp*: rearrange for standard use of extern ""C""
      arch/common: rearrange for standard use of extern ""C""
      arch/xtensa: rearrange for standard use of extern ""C""
      arch/nios2: rearrange for standard use of extern ""C""
      arc: rearrange for standard use of extern ""C""
      drivers/timer/nrf_rtc_timer: clarify intent of ZLI compensation
      lib/newlib: revert treatment of libc files as system includes
      tests: add C++ 17 standard library test
      tests/kernel/sleep: relax upper bound to support additional delays
      doc: relnotes: add littlefs file system support

Peter Herager (2):
      Bluetooth: Add debug kconfig for bluetooth services
      Bluetooth: Add additional attributes to DIS

Phil Erwin (1):
      cmake: Fix missing dependency

Pieterjan Camerlynck (2):
      net: lwm2m: fix automatic notification frequency
      net: lwm2m: cancel pending retransmit work when closing context

Piotr Mienkowski (9):
      flash_gecko: add support for page layout
      board: efr32_slwstk6061a enable SoC DC-DC converter
      boards: add jlink runner for efr32_slwstk6061a board
      drivers: Add counter driver (RTCC) for SiLabs Gecko SoCs
      scripts/dts: generate DT_ALIAS_<ALIAS>_<PROP> defines
      drivers: Define COUNTER_LOG_LEVEL using template
      dfu: make flash_img write to flash on buffer full
      drivers: fix printf formatting in flash drivers
      dfu: fix printf formatting in img_util

Piotr Zierhoffer (4):
      build: west: Update the error message when not in west dir
      build: west: Change the remote of civetweb to upstream
      civetweb: Bump module to simplify the build process
      samples: net: civetweb: Remove an unnecessary config option

Piotr Zięcik (49):
      tests: timer_api: Fix test for SYS_CLOCK_TICKS_PER_SEC != 100
      tests: tickless_concept: Fix slicing time measurement
      tests: test_sched_timeslice_reset: Fix slice time measurement
      drivers: litex_timer: Do not hard code tick rate
      tests: timer_api: Fix timer synchronization
      counter: Update counter API in order to provide more flexibility
      dts: bindings: Add bindings for ARM, ARC, Xtensa CPUs
      dts: bindings: Add fixed-clock DTS binding
      dts: Add information about CPU frequency to the cpu nodes
      dts: Add information about system bus frequency to the dts
      dts: bindings: nxp,kinetis-usbd: Make clocks property optional
      dts: bindings: fixed-clock: Make label optional
      tests: work_queue_api: Fix k_delayed_work_remaining_get() test
      drivers: i2c_bitbang: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      drivers: pwm_qmsi: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      drivers: timer: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      debug: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      logging: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      tests: benchmarks: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      drivers: i2c_cc32xx: Get clock frequency from DTS
      soc: snps_arc_iot: Get CPU clock frequency from DTS
      soc: sam3x: Get CPU clock frequency from DTS
      soc: sam4s: Get CPU clock frequency from DTS
      soc: samd2x: Get CPU clock frequency from DTS
      soc: samr21: Get CPU clock frequency from DTS
      soc: same70: Get CPU clock frequency from DTS
      soc: k6x: Get CPU clock frequency from DTS
      soc: kl2x: Get CPU clock frequency from DTS
      soc: kwx: Get CPU clock frequency from DTS
      soc: lpc54xxx: Get CPU clock frequency from DTS
      arch: xtensa: Get CPU clock frequency from DTS
      soc: msp432p4xx: Get CPU clock frequency from DTS
      soc: nxp_rt: Get system clock frequency from DTS
      drivers: beetle_clock_control: Get CPU clock frequency from DTS
      logging: log_backend_swo: Get clock frequency from DTS
      drivers: spi_dw: Get clock frequency from DTS
      drivers: uart_cmsdk_apb: Get clock frequency from DTS
      drivers: uart_pl011: Get clock frequency from DTS
      drivers: uart_cc32xx: Get clock frequency from DTS
      drivers: uart_msp432p4xx: Get clock frequency from DTS
      drivers: uart_qmsi: Get clock frequency from DTS
      drivers: uart_stellaris: Get clock frequency from DTS
      drivers: uart_cc13xx_cc26xx: Get clock frequency from DTS
      drivers: wdog_cmsdk_apb: Get clock frequency from DTS
      drivers: adc_stm32: Get clock frequency from DTS
      debug: tracing: Fix compilation error
      syscalls: Export _is_user_context() regardless of CONFIG_USERSPACE
      logging: Add basic userspace support
      samples: logging: Add usermode showcase

Pushpal Sidhu (2):
      boards: adafruit_trinket_m0: Set flash address
      boards: adafruit_trinket_m0: Force program flash to 0x2000

Radoslaw Koppel (7):
      subsys/ztest: Documentation fix
      subsys/storage/flash_map: Fix returned error codes
      drivers/flash/flash_simulator: Allow unaligned read
      subsys/settings: Add const modifier to the value pointer
      subsys/settings: Cleanup the initialisation of the subsys
      subsys/testsuite/ztest: change zassert_mem_equal to macro
      subsys/testsuite/ztest: Fix zassert_mem_equal user message printing

Radu Alexe (1):
      Bluetooth: controller: better field names

Ravi kumar Veeramally (14):
      net: ipv6: Trivial changes in fragmentation debug
      tests: net: Add more tests to ipv6 fragmentation
      net: tests: ipv6_fragment: Use NET_DBG instead of DBG
      net: ethernet: Add VLAN tag stripping capability flag
      net: ethernet: l2: Add support for VLAN tag strip
      net: shell: Add VLAN tag stripping to capabilites
      drivers: native_posix: Add VLAN tag strip feature
      net: sockets: Add timeout to socket connect call
      net: Add support for SOCKS5 socket option
      net: socks: Make SOCKS5 implementation transparent
      net: mqtt: Modify SOCKS5 based connections
      samples: net: Modify mqtt_publisher to use set proxy
      net: mgmt: Fix IPv4 connection management
      samples: net: echo_client: Add SOCKS5 support

Reham Tarek (1):
      Bluetooth: Mesh: AES-CCM: Fix output MIC with additional data

Reto Schneider (1):
      sample: button: Fix format specifier

Rich Barlow (2):
      Bluetooth: Mesh: LPN: Clear sent_req on failure
      Bluetooth: Mesh: LPN: Remove msg from cache on rejection

Richard Osterloh (1):
      drivers: pinmux: add SPI2 on Port B defines

Rick Conrey (20):
      drivers: counter: enable counter for STM32WB
      soc: stm32wb: enable counter on STM32WB
      dts: wb: Enable RTC
      boards: nucleo_wb55rg: Enable RTC
      drivers: spi: Enable SPI on stm32wb
      dts: wb: Enable spi on stm32wb
      soc: stm32wb: Enable SPI on stm32wb
      drivers: pinmux: enable SPI pins on stm32wb
      boards: nucleo_wb55rg: enable SPI1 on nucleo_wb55rg
      tests: spi: enable SPI on STM32WB
      drivers: pinmux: enable PWM pins on STM32WB
      dts: wb: enable PWM on STM32WB
      soc: stm32wb: Enable PWM on STM32WB
      boards: nucleo_wb55rg: enable PWM2 on nucleo_wb55rg
      drivers: adc: enable ADC on STM32WB
      drivers: pinmux: enable ADC pins on STM32WB
      dts: wb: enable ADC
      boards: nucleo_wb55rg: Enable ADC
      tests: nucleo_wb55rg: add adc test
      drivers: adc: Enable ADC on STM32WB

Robert Lubos (23):
      net: openthread: Do not overwrite stored dataset with defaults
      ext: lib: crypto: Extend mbedTLS generic config
      drivers: ieee802154: New API for ACK configuration
      drivers: ieee802154_nrf5: Rename nrf5_config to nrf5_irq_config
      drivers: ieee802154_nrf5: Implement configure API
      net: openthread: Implement frame pending API
      net: openthread: Fix utilsFlashErasePage function
      net: lib: mqtt: Enable blocking PUBLISH payload readout
      net: Allow to disable native IP stack with socket offloading
      net: Avoid calling L2 functions on offloaded interface
      net: sockets: Remove TI conditional from offloaded fcntl implementation
      drivers: sensor: Update DT symbols in qdec_nrfx driver
      ext: hal: nordic: Update DT symbols in nrfx config file
      ext: hal: nordic: Fix DT symbols in 802154 radio driver
      net: openthread: Verify iface in net_mgmt event handler
      net: lwm2m: Ignore `close` return value
      drivers: ieee802154_nrf: Fix SoC header inclusion
      boards: holyiot_yj16019: Fix radio capabilities
      manifest: Add OpenThread repository
      net: openthread: Use repository provided by west
      samples: net: echo_client: Fix bug in workqueue processing
      kernel: timeout: Fix macro usage in next_timeout function
      drivers: timer: nrf_rtc_timer: Fix set_comparator corner case

Roger N'Guessan (6):
      boards: nucleo_wb55rg: Enable I2C
      drivers: i2c: enable I2C on STM32WB
      dts: wb: enable I2C
      drivers: pinmux: enable I2C PINs on STM32WB
      boards: nucleo_wb55rg: add I2C doc
      Bluetooth: drivers: ipm_st32wb: Fix compilation

Ryan C Johnson (1):
      drivers: flash: w25q: erase operations must be erase-size aligned

Ryan QIAN (10):
      ext: hal: nxp: mcux: add device files for RT1015
      arch: arm: nxp: imxrt1015: add device support
      drivers: serial: add config for uart 4
      boards: arm: add board support for mimxrt1015_evk
      dts: arm: nxp: Add dtsi for RT1015 and RT1020
      soc: arm: nxp_imx: rt: update flash size of 32KB
      boards: arm: mimxrt1015_evk: update board dts
      boards: arm: mimxrt1020_evk: update board dts
      boards: arm: mimxrt1015_evk: update the ram size
      tests: change the min_ram for mbedtls and mem_protect

Saravanan Sekar (1):
      wifi: eswifi: Select socket before configuration

Sathish Kuttan (20):
      boards: intel_s1000_crb: Host interface config
      boards: intel_s1000_crb: Image download scripts
      doc: intel_s1000: image download from Linux host
      dts: intel_s1000: add low power sram as sram1
      soc: intel_s1000: add dts fixup for low power sram
      soc: intel_s1000: define lpsram memory for linker
      soc: intel_s1000: add lpsram in linker script
      samples: intel_s1000: audio buffers in lpsram
      samples: intel_s1000: audio buffers in lpsram
      samples: intel_s1000: audio buffers in lpsram
      samples: intel_s1000: USB control for audio sample
      samples: intel_s1000: tuning driver for audio app
      samples: intel_s1000: audio processing threads
      samples: intel_s1000: add background thread
      samples: intel_s1000: track status of audio app
      samples: intel_s1000: tuning commands in audio app
      samples: intel_s1000: update project configration
      samples: intel_s1000: add files to cmake build
      samples: intel_s1000: script to control from host
      samples: intel_s1000: update sample audio app doc

Scott Worley (8):
      ext : hal : mec1501 Add the MEC1501 external headers.
      dts : arm : Add Microchip MEC1501 SoC device tree
      soc : arm : microchip_mec Add Microchip MEC1501 SoC
      boards : arm : Add support for Microchip MEC15xx EVB ASSY 6853
      ext : hal : microchip Header updates for MEC1501
      drivers : timer : Add MEC1501 32KHz kernel timer driver
      soc : arm : microchip_mec Fix MEC1501 SoC ECIA initialization
      ext : hal : Microchip MEC1501 PS/2 and global configuration updates.

Sebastian Bøe (10):
      cmake: DT: Change from -Idts/common to -isystem dts/common
      cmake: DT: Add support for out-of-tree binding root directories
      cmake: LD: Allow input sections to remain unsorted
      cmake: Don't have users call zephyr_link_interface on mbedTLS
      cmake: Mark post_build files as BYPRODUCTS
      latency_measure: Remove commented-out code
      latency_measure: Fix bug where the wrong prj.conf file was used
      size_report: Don't crash when observing stripped symbols
      kconfig: Fix nrf91 NONSECURE dependency
      cmake: Fix dependency between offset.c.obj and offsets.h

Siddharth Chandrasekaran (3):
      board: stm32_min_dev: Add support for blue/black variant
      doc: stm32_min_dev: Update for blue/black variant support
      tests: kernel: Exclude platforms stm32_min_dev_*

Sigvart Hovland (1):
      cmake: boilerplate: Fix ZEPHYR_BASE variable for windows

Sigvart M. Hovland (1):
      cmake: zephyr_modules: Add west executable argument

Song Qiang (6):
      drivers: gpio: stm32: add ASCR configuration for L47x+
      dts: arm: stm32: add dts support for ADC1 of stm32
      drivers: pinmux: stm32: add pinmux support for ADC of stm32
      drivers: adc: add driver support for ADC1 of stm32
      test: driver: adc: add some nucleo boards support for adc test cases
      doc: boards: arm: nucleo: add ADC support to the boards doc

Stefan Kraus (1):
      96b_nitrogen: Increase size of boot partition.

Steven Wang (2):
      doc: intel_s1000: install the license key manually
      Doc: Use SDK 0.10.1 instead of 0.10.0.

Stig Bjørlykke (1):
      boards: arm: Add support for nRF51 Dongle (PCA10031)

Sören Tempel (5):
      soc/riscv32-fe310: add label for uart1
      net: slip: allow compilation without CONFIG_NET_LLDP
      net: slip: fix compilation without NET_L2_ETHERNET
      drivers: serial: sifive: Fix UART extern interrupts
      drivers: serial: sifive: fix configuration of rxcnt/txcnt

Tavish Naruka (2):
      boards: nrf52840_blip: enable default instances of peripherals
      boards: nrf52840_papyr: misc. board config fixes

Tedd Ho-Jeong An (10):
      Bluetooth: GATT: Add support for Read Using Characteristic UUID
      Bluetooth: shell: Add command for Read Using Characteristic UUID
      tests: bluetooth/tester: Add support Read Using Characteristic UUID
      Bluetooth: GATT: Fix using a wrong handle
      doc: Bluetooth: Update GAP ICS to 7.4.1
      doc: Bluetooth: Update GATT ICS to 7.4.1
      doc: Bluetooth: Update L2CAP ICS to 7.4.1
      doc: Bluetooth: Update SM ICS to 7.4.1
      doc: Bluetooth: Add ICS for Mesh Profile
      doc: Bluetooth: Update PICS to ICS

Thomas Ebert Hansen (5):
      tests: crypto: Update HMAC_PRNG test
      bluetooth: controller: Move Nordic specific code
      bluetooth: controller: Move Nordic specific code
      Bluetooth: Add support for vendor-specific events
      tests: bluetooth: Test vendor-specific events

Thomas Stenersen (2):
      Bluetooth: controller: Remove BT_HCI_RAW dependency
      Bluetooth: controller: Rename assert handler Kconfig title

Thomas Stilwell (1):
      cmake: fix regex for west version check in host-tools.cmake

Timo Teräs (1):
      libc: add strnlen implementation

Tobias Aschenbrenner (1):
      fix: kw41z: Use correct mapping for dBm

Tobias Schlaepfer (1):
      drivers/ieee802154: Fix KW41Z driver fault

Tobias Svehagen (4):
      Bluetooth: Make RSSI value available to mesh applications
      Bluetooth: Change from bitfields to normal types
      Settings: Initialize settings_lock mutex
      Bluetooth: Mesh: Remove dependency on BT_MESH_IV_UPDATE_TEST in shell

Tomasz Bursztyka (49):
      net/offload: Add dummy functions when offloading is disabled
      net/ip: Make struct net_addr holding uninon of ipv6/4 unconditionally
      net/context: Reduce the usage of #ifdef/#endif
      net/context: Reordering some ipv4/6 logic to follow all other places
      net/connection: Removing cache feature
      net/connection: Reduce usage of #ifdef
      net/connection: Use slist to manage used/unused connections
      net/connection: Merge rank bits into flags attribute
      net/connection: Final cleanup
      net/iface: Modify function to get IPv6 global address
      net/iface: Add a function to get IPv4 global address
      net/pkt: Remove useless _reserved attribute
      net/arp: No need of 64bits timer precision on ARP requests
      net/pkt: Redefine the necessary fifo attribute
      net/udp: Computed checksum field should not be 0
      net/udp: Accept UDP packet with missing checksum
      net/udp: Check UDP header's length attribute
      tests/net: Fix IPv6 and UDP test as UDP got stricter on checking header
      net/udp: Always drop IPv6 UDP packet if checksum field is 0
      drivers/wdt: Rename STM32 IWDG files to follow naming rules
      drivers/wdt: Rename CMSDK driver to follow naming rules
      include: Removing legacy left-overs in wdt.h API header
      drivers/wdt: Fixing tiny style issues in sam0 driver
      net/llmnr: Fix LLMNR answer creation
      net/iface: Reduce usage of ifdef around CONFIG_NET_IPV6
      net/iface: Reduce usage of ifdef around CONFIG_NET_IPV4
      net/iface: Reduce ifdef usage on various options
      net/iface: Initialize IPv4/6 address so it removes more ifdef
      net/iface: Remove useless attributes in net_if_ipv6 structure
      net/iface: Coalesce all DAD timers through one
      net/iface: Coalesce all RS timers through one
      net/ipv4: Add a net mgmt event for IPv4 router deletion
      net/iface: Rework how routers are handled
      net/iface: Add IPv4 route find and add
      net/gptp: net_gptp_recv() dummy function needs to return a verdict
      net/ethernet: Cleanup a bit on the usage of ifdefs
      net/lldp: Simplify Kconfig file
      net: Add a connection manager preliminary logic
      doc/networking: Update network management part relevantly
      drivers/gpio: Adding missing braces for XEC driver
      driver/pinumx: Adding missing braces for XEC driver
      samples: Counter alarm should display seconds, not ticks
      net/conn_mgr: Fix events handler
      net: socket_mgmt: Fix for coverity CID 203468
      net: socket_mgmt: Fix for coverity CID 203397
      tests: net: Fix for coverity CID 203499
      net: ppp: Fix for coverity CID 203514
      net: gptp: Fix for coverity CIDs 203471 and 203464
      include/drivers: Removing legacy leftovers in PWM header

Tomasz Gorochowik (5):
      drivers: eth: gmac: Fix MAC address info log
      libc: minimal: fix realloc function
      net: sockets: implement getsockname function
      samples: net: Add civetweb HTTP sample
      Samples: net: civetweb: add README

Tomás Longeri (1):
      ring_buffer: Fix return types

Torsten Rasmussen (1):
      west: zephyr_module: Improved error messaging during west failures

Trond Einar Snekvik (2):
      Bluetooth: Mesh: Prov confirm tx after confirm rx
      Bluetooth: Mesh: Use define for no prov pdu

Tyler Hall (1):
      scripts/sanitycheck: fix ZEPHYR_BASE subdir check edge case

Ulf Magnusson (87):
      kconfig: Add missing quotes after 'source' and 'menu'
      kconfiglib/menuconfig: Various behavior/UI improvements
      genrest: Include all parents in menu paths
      shell: kconfig: Put 'menuconfig SHELL' in top-level menu
      kconfig: Avoid potential issue parsing generated_dts_board.conf
      kconfig: Use 'default' instead of 'def_bool' in Kconfig.defconfig files
      west: Fix unused import and variable
      scripts: gen_kobject_list: Remove redundant parentheses
      ext: lib: mcumgr: Remove 'External Sources -> Management' menu
      Bluetooth: kconfig: Put 'menuconfig BT' in top-level menu
      ext: open-amp: kconfig: Add missing OPENAMP dep. to OPENAMP_SRC_PATH
      dfu: kconfig: Remove 'DFU Options' menu
      console: kconfig: Put 'menuconfig CONSOLE_SUBSYS' in top-level menu
      subsys/random: Hide 'Random generator' choice when empty
      c++: kconfig: Fix choice dependencies and use 'menuconfig' symbol
      kconfig: Use 'CONFIG_FOO_*' in #endif comments to avoid CI failures
      doc: kconfig: Fix accidental SPDX-License-Identifier in generated doc
      disk: kconfig: Group related symbols and use 'menuconfig' symbol
      lvgl: kconfig: Remove menu and use a 'menuconfig' symbol
      doc: kconfig: Clarify that 'depends on' works for string/int/hex
      doc: kconfig: Explain the 'menuconfig' keyword and good uses for it
      doc: kconfig: Encourage dropping 'Enable ...' from most prompts
      doc: kconfig: Fix typo in documentation for 'optional' on choices
      menuconfig: Small Space/Enter improvement + fix for obscure bug
      guiconfig: Add a graphical configuration interface
      doc: Add guiconfig documentation
      kconfiglib: Unclutter symbol strings, avoid redundant writes, misc.
      genrest: Mention that dependencies are only propagated to 'depends on'
      kconfig.py: Use messages returned by load_config() and write_config()
      dts: Replace status = ""ok"" with status = ""okay""
      scripts/dts: Make extract/flash.py easier to read
      drivers: pinmux: stm32l4: Fix CONFIG_SOC_STM32L496XX references
      yaml: Remove redundant document separators
      scripts/dts: Clarify extract/flash.py some more
      genrest: De-spam docs by skipping direct deps. in more places
      dts/bindings: Clarify #cells in template
      dts: bindings: Remove dead 'label:' keys on properties
      dts: bindings: Do not require a 'reg' property for snps,arcv2-intc
      dts: bindings: Make 'clocks' optional in i2c.yaml
      dts: bindings: Make 'clocks' optional in pwm.yaml
      dts: bindings: Make 'clocks' optional in adc.yaml
      dts: bindings: Make 'clocks' optional in nxp,{imx-uart,lpc-usart}.yaml
      dts: bindings: simplify !include in jedec,spi-nor
      dts: Add missing spi-max-frequency for mimxrt/nxp/hifive1/qemu_riscv2
      dts: bindings: Do not require 'interrupts' on STM32 GPIO nodes
      boards/arm/mps2_an521: Add missing timer labels to dts
      dts: riscv32: rv32m1: Disable unused interrupt multiplexers
      dts: bindings: Remove unused 'version' field
      dts: bindings: Remove some YAML document separators
      dts: bindings: Clean up microchip,xec-espi.yaml and espi.yaml
      scripts/dts: Rename --deprecate-only to --deprecated-only
      dts: Add new DTS/binding parser
      scripts/dts: Add deprecation comments to old scripts
      dts: bindings: Add lots more documentation
      dts: bindings: Rename binding template to binding-template.yaml
      doc: dts: Add more information to .dtsi example
      dts: arm: Remove leftover zephyr,irq-prio property from CC2650
      dts: posix: Fix 'current-speed' property typo
      boards: 96b_nitrogen: Remove 'csn-pin' property from SPI master
      dts: nxp: Remove unused 'clock-source' properties
      dts: nxp: Remove clk-* properties from nxp,kinetis-sim nodes
      dts: nxp: Remove unused 'reload-counter' properties
      dts: nxp: Remove unused 'start-on-boot' properties
      dts: nxp: Remove unused 'prescaler' properties from watchdog nodes
      dts: riscv: Add sifive,plic-1.0.0 binding and fix riscv,ndev values
      scripts: dts: Add test for multiple binding directories
      drivers: ethernet: Remove redundant NET_L2_ETHERNET dep. from ETH_LITETH
      drivers: flash: Remove redundant FLASH dep. from FLASH_SIMULATOR
      drivers: flash: Remove redundant FLASH dep. from FLASH_NATIVE_POSIX
      drivers: espi: kconfig: Remove redundant ESPI_PERIPHERAL_CHANNEL deps.
      disk: kconfig: Remove redundant DISK_ACCESS_SDHC dependency
      drivers: gpio: Remove redundant GPIO dep. from GPIO_HT16K33
      Bluetooth: L2CAP: Kconfig: Remove redundant BT_CONN dependency
      scripts: edtlib: Reduce code duplication in phandle/value list parsing
      drivers: sensors: Remove 'version:' field in Si7006 binding
      Bluetooth: GATT: Kconfig: Remove redundant BT_CONN dependencies
      dts: Replace more status = ""ok"" with status = ""okay""
      edtlib: Check that 'status' has one of the values from the DT spec.
      dts: edtlib: Improve naming in _check_binding()
      dts: edtlib: Simplify 'category: optional' code in Device._prop_val()
      dts: edtlib: Shorten _init_{interrupts,gpios}() a bit
      dts: edtlib: Shorten some license headers
      dts: dtlib: Remember the format of assignments
      dts: dtlib/edtlib: Add a syntax-based type-checking system
      dts: edtlib: Fix outdated doc comment for _init_devices()
      dts: dtlib: Fix parsing of character literals
      dts: xilinx_zynqmp: Remove stray 0 from interrupt-parent

Vaishali Pathak (1):
      drivers: sensors: Add Si7006 temperature/humidity sensor driver

Vikrant More (7):
      samples: mesh: enable SMP service for DFU
      samples: mesh: single timer to handle all transitions
      samples: mesh: removed bugs in on-off transition
      samples: mesh: removed redundant code
      samples: mesh: corrected implemenation of gen. move message handlers
      samples: mesh: replaced magic numbers with values defined in stdint.h
      samples: mesh: sync the init procedure to initialise the mesh

Vinayak Kariappa Chettimada (79):
      Bluetooth: controller: Data Length Update port to ULL/LLL arch
      Bluetooth: controller: Move PKT_US to ULL internal header
      Bluetooth: controller: Fixes to pass DLE/PHY conformance tests
      Bluetooth: controller: Fix advanced XTAL feature regression
      Bluetooth: controller: Fix regression in Coded PHY CI Change
      Bluetooth: controller: Fix nRF52840 Coded PHY timings
      Bluetooth: controller: Fix pin or key missing response
      Bluetooth: controller: Fix missing BT_CTLR_FILTER conditional
      Bluetooth: controller: Yield ULL processing when Ctrl PDU deferred
      Bluetooth: controller: Implement low latency ULL processing
      Bluetooth: controller: Move LLL-to-ULL Tx Ack API to ULL
      Bluetooth: controller: Add GPIO Debug Pins for HFCLK state
      Bluetooth: controller: Fix XTAL advanced feature
      Bluetooth: controller: Use void pointer to return rand value
      Bluetooth: controller: ull/lll: Increase adv random delay resolution
      Bluetooth: controller: ull/lll: Fix pin or key missing response
      Bluetooth: controller: Fix incorrect conditional compilation
      Bluetooth: controller: Fix incorrect data type use in slot calc
      Bluetooth: controller: Fix ULL LLL execution priority selection
      Bluetooth: controller: Fix Rx and Tx buffer sizes
      Bluetooth: controller: Enable Zephyr VS HCI in ULL/LLL impl.
      Bluetooth: controller: Disable controller privacy feature
      Bluetooth: controller: Enable additional ULL/LLL CI tests
      Bluetooth: controller: Fix Enc Setup overlap with Length Update
      Revert ""Bluetooth: controller: Disable controller privacy feature""
      Bluetooth: controller: split: Port h/w privacy feature
      Bluetooth: controller: split: Fix shell app regression
      Bluetooth: Fix building of broadcaster or observer only
      Bluetooth: shell: Fix disconnect command argument count
      Bluetooth: controller: split: Port Enc setup to be queueable
      Bluetooth: controller: split: Add internal ull_update_mark func
      Bluetooth: controller: split: Port slave conn update assert fix
      Bluetooth: controller: split: Fix tx_ack mfifo count
      Bluetooth: controller: split: Add ULL/LLL architecture assert checks
      Bluetooth: controller: split: Port random slave event backoff
      Bluetooth: controller: BT_CTLR_USER_EXT depends on BT_LL_SW_SPLIT
      Bluetooth: controller: split: Fix buffer leak on disconnect
      Bluetooth: controller: Fix handling zero length L2CAP start frame
      mailmap: Fix entry needing both name and email replace
      Bluetooth: controller: Add PA/LNA support on NRF_P1 GPIO pins
      Bluetooth: controller: split: Add interface to get adv/scan handle
      Bluetooth: controller: split: Port radio event abort
      cmake: check ZEPHYR_SDK_INSTALL_DIR is set
      Bluetooth: controller: Move ticker_id_prepare reset to early return
      Bluetooth: controller: Fix assert during DLE
      Bluetooth: controller: Fix logging assert
      Bluetooth: controller: split: Fix incorrect CU under latency
      Bluetooth: controller: split: Fix continuous initiator
      Bluetooth: controller: Fix PHY update proc symmetric rsp
      Bluetooth: controller: Fix packet timing restriction reset
      Bluetooth: controller: Fix missing data length update event
      Bluetooth: controller: Fix post DLE/PHY update event length
      Bluetooth: controller: Enable Fast Enc and RSSI features
      Bluetooth: controller: Add deferred procedure complete event
      Bluetooth: controller: Fix DLE during data transmission
      Bluetooth: controller: Update Bluetooth version to 5.1
      Bluetooth: controller: split: Fix packet timing restrict reset
      Bluetooth: controller: split: Fix PHY update proc symmetric rsp
      Bluetooth: controller: split: Handle zero length L2CAP start frame
      Bluetooth: controller: Fix cond compile of DLU event generation
      Bluetooth: controller: split: Conditional compile LL Rx pool use
      Bluetooth: controller: Rename BT_LL_SW to BT_LL_SW_LEGACY
      Bluetooth: mesh: Use legacy LL for microbit build
      Bluetooth: controller: Make ULL/LLL split the default
      Bluetooth: controller: split: Fix pipeline prepare/resume loop
      Bluetooth: controller: Decorrelate address generation from resolution
      Bluetooth: shell: Fix directed adv parameter check
      Bluetooth: mesh_shell: Disable controller filter
      Bluetooth: controller: split: Reduce event done queue size
      Bluetooth: controller: split: Increase event start overhead time
      Bluetooth: controller: split: Increase pipeline size
      Bluetooth: controller: split: Fix pipeline for continuous events
      Bluetooth: controller: Fix ifdef block comment
      Bluetooth: controller: split: Fix control flow issues
      Bluetooth: controller: split: Fix Tx FIFO, queue, and pool corruption
      Bluetooth: controller: split: Tx cleanup and comments
      Bluetooth: controller: split: Fix Enc setup reset on rejection
      Bluetooth: controller: split: Fix data pause on Enc Req enqueue
      Bluetooth: controller: Fix Enc setup reset on rejection

Vincent Wan (8):
      samples: sockets: sntp_client: make IPv6 & NET_CONFIG_SETTINGS optional
      samples: sockets: sntp_client: Add support for cc3220sf_launchxl
      drivers: wifi: simplelink: Add static IP address support
      soc: ti_simplelink: add macro to prevent double inclusion of soc.h
      doc: boards: cc3220sf_launchxl: update OpenOCD instructions
      drivers: wifi: simplelink: fix 'log_strdup missing' error messages
      soc: arm: ti_simplelink: Fix number of interrupt lines on CC3220SF
      tests: net: trickle: use separate semaphore for second trickle timer

Watson Zeng (3):
      boards: arc: emsdp: add basic emsdp board support
      board: emsdp: doc update and bug fixes
      board: nsim: doc update for debugging section

Wayne Ren (44):
      arch: arc: optimize the push and pop of fast irq
      boards: iotdk: add mpu and fpu configuration
      soc: nsim: nsim em targets are EM4_FPUDA
      soc: arc: optmize and bug fix the compile options
      arch: arc: implement z_arch_switch to replace swap
      arch: arc: fix the bug caused by hardware sp switch in interrupt
      arch: arc: remove arc_exc_saved_sp used in exc handling
      arch: arc: remove saved_r0/saved_sp used in firq handling
      arch: arc: use IRQ_ACT to check nest interrupt
      ARC: Fix selection of custom atomic ops
      ARC: Add support for ARC HS family of CPU cores
      arch: arc: optimize the float support
      arch: arc: implement z_arch_float_enable
      arch: arc: add handling for accl regs, r25, r30
      doc: add doc of arc floating point support
      arch: arc: typo fixes and comments clean up
      arch: arc: remove custom atomic operations
      arch: arc: fix the offset generation of accl_regs
      arch: arc: add basic arc connect driver support
      drivers: arcv2_timer0: add support for smp
      arch: arc: add macros to get current cpu id
      arch: arc: add initial support of SMP
      arch: arc: the caculation of exception stack is wrong
      arch: arc: fixes the case triggering a cpu exception in user mode
      arch: arc: add extra handling about exception raised in interrupt
      arch: arc: fix on the reason of software-triggered fatal exceptions
      tests: remove the exception for arc
      arch: arc: add initial support of ARC TEE
      boards: emsk: add initial support of normal/non-secure application
      boards: nsim: add initial support of normal/non-secure application
      samples: add sample to show how ARC TEE works
      drivers: ns16550: add WORD only access support
      boards: hsdk: add initial support of ARC HS Development Kit
      arch: arc: no need of default n for arc_connect
      arch: arc: fix a bug when CONFIG_SMP is enabled
      tests: enable hsdk and nsim_hs_smp for smp test
      boards: nsim: disable CONFIG_SMP by default for nsim_hs_smp
      arch: arc: secure stat should also be reset correctly
      arch: arc: fix and optimize the handling of SECT_STAT.IRM
      arch: arc: not allowed to switch to thread preempted by exception
      arch: arc: use _curr_cpu to replace _curr_irq_stack
      arch: arc: secure world only check secure interrupt
      arch: arc: fix the bug that interrupt stack is not switched
      arch: arc: for fast irq ERET has no copy of ilink

Wendy Liang (2):
      serial: Add Xilinx ZynqMP PS uart driver
      timer: Add Xilinx ZynqMP PS ttc timer

Wentong Wu (22):
      lib/posix: correct the meaning of CONFIG_MAX_PTHREAD_COUNT
      arch: arm: switching stack pointer with assembly code
      tests: kernel: increase stack buffer when code coverage enabled
      scripts: mpu align for ro section of new memory region on non-XIP system
      scripts: make code relocation work for non-XIP system
      linker: kobject-text.ld: avoid backwards location counter
      CODEOWNERS: Add code ownership for gen_relocate_app.py
      linker: add no-flash system support
      testsuite: coverage: port GCOV linker code to CMake for X86
      kernel: add futex support
      tests: add futex test cases
      driver: timer: loapic_timer: fix compile issue
      scripts: elf_helper: correct kernel object address check range
      linker: move scripts generated code at the beginning of .text
      scripts: make mpu align in sections for code reloation
      target_relocation.cmake: fix spell typo
      lib: os: add sys_sem data type
      tests: add test cases for sys_sem
      kernel: timeout: do not active time slicing if idle thread ready
      Kconfig: enable BUILD_OUTPUT_HEX for sam_e70_xplained
      tests: kernel: fix unhandled return values.
      tests: kernel: fix unhandled return values.

William Fish (2):
      drivers: sensor: APDS9660 WhoAmI check logic
      soc: nordic_nrf: MPU temperature sensor default

Wolfgang Puffitsch (5):
      Bluetooth: controller: hci: Add some documentation for encode_control().
      Bluetooth: controller: hci: Add user hooks.
      Bluetooth: controller: Settings for company_id and subversion_number.
      tests: Bluetooth: Add test case for settings in the controller.
      tests: Bluetooth: Add test case for settings in the controller.
      Bluetooth: controller: Fix endianness for length update.

Yannis Damigos (12):
      tests: can: api: Fix ""Device not not found"" error message
      tests/subsys/usb/device: Fix comment and message
      usb_dc_stm32: Check if functions' arguments are valid
      dts: xtensa: Fix compatible for xtensa lx6
      dts: Restructure xtensa dts directory
      dts: intel_s1000: Move core_intc node under soc node
      usb_dc_stm32: Don't update ret_bytes if send fails in usb_dc_ep_write()
      dts: stm32l4: Fix USB phy node for stm32l432 and stm32l452
      disco_l475_iot1: Enable I2C3
      i2c_ll_stm32_v2: Set slave_attached to false on slave unregister
      olimexino_stm32: Enable I2C1
      i2c_ll_stm32: Use macros to add I2C instances

Yasushi SHOJI (4):
      linker: Make alignment size for sw_isr_table configurable
      cmake: compiler: gcc: Explicitly spell out stddef.h and limits.h
      kernel: sched: Do not force preempt when k_sched_unlock()
      test: kernel: sched: Add a test for nested scheduler lock

Yaël Boutreux (23):
      stm32mp1: disable cmsis_rtos_v2 test
      dts: stm32mp157: Dtsi fixup
      drivers: clock_control: stm32: Modify file naming pattern
      clock_control: Add stm32mp157c_dk2 board support
      drivers: gpio: stm32: Indentation and cleanup
      gpio: Add stm32mp157c_dk2 board support
      uart: Add support for stm31mp157c_dk2 board
      drivers: pinmux: stm32: code cleanup
      pinmux: Add stm32mp157c_dk2 board support
      dts: bindings: Fix missing ""zephyr"" vendor name
      boards: shields: x_nucleo_iks01a2: doc: update dead URL link
      boards: arm: stm32mp157c_dk2: Add Arduino R3 connector definition
      drivers: bluetooth: hci: spi: Handle when the buffer is empty
      boards: arm: disco_l475_iot1: remove MCU slow down when using BlueRNG-MS
      drivers: spi: spi_ll_stm32: Fix uncleared MODF flag
      drivers: spi: spi_ll_stm32: Add config to manage slave select
      drivers: spi: spi_ll_stm32: Long line cleanup
      drivers: spi: spi_ll_stm32: set NSS before mode
      drivers: spi: st_stm32: Abstract LL function for spi ver. compatibility
      west.yml: update hal_stm32 revision to add SPI LL for CubeMP1
      soc: arm: st_stm32: stm32mp1: Add SPI support
      drivers: spi: spi_ll_stm32: Add support for STM32MP1x SoC
      boards: arm: stm32mp157c_dk2: Add SPI support

Yong Jin (1):
      driver: watchdog: stm32: rename the independent watchdog name

francois ramu (1):
      boards: stm32f469i_disco: add more leds to board

ling wei (1):
      net: trickle: Re-init trickle timer for multiple triggerings

Øyvind Rønningstad (13):
      scripts: mergehex: Add --overlap argument
      cmake: Add function for adding snippets to the linker file
      soc: arm: st_stm32: Port CCM sections to use the Cmake function
      arch: Port the ramfunc section to the Cmake function
      linker: Port usage of custom-sections to use Cmake
      soc: Port usage of soc-*.ld to use Cmake
      arch: port nocache linker code to use Cmake function
      arch: arm: cortex_m: Port some vector_relay linker code to Cmake
      arch: Put intlist.ld into Cmake
      testsuite: coverage: Port GCOV linker code to Cmake.
      cmake: Allow import_kconfig() to return a list of the variables it sets
      linker: Move sgstubs section to the very end and fix for nrf91
      arch: arm: core: tz: Linking of secure entry functions into NS firmware
```",59771425
1522,False,True,2019-08-21T00:21:36Z,2019-08-21T12:31:43Z,"```
Alberto Escolar Piedras (1):
      arch: POSIX: Fix race with unused threads

Alexander Mihajlovic (1):
      posix: Fix calculation of clock base in clock_settime

Alexander Wachter (1):
      drivers: can: stm32: fix filter mode set

Anas Nashif (6):
      ci: only build on specified branches
      manifest: add ci-tools
      ci: add v1.14-branch to email integration
      CODEOWNERS: remove non-existing path
      release: bump version to 1.14.1-rc1
      release: bump release to 1.14.0-rc2

Andrei Gansari (1):
      soc: k64f MPU configured to always allow ENET

Andrew Boie (50):
      arc: arm: fix support for MPUs on non-XIP systems
      newlib: fix user mode calls to _sbrk
      tests: pipe: fix error with optimization disabled
      tests: cmsis_v2: don't hard-code stack sizes
      lib: cmsis_v2: set default dynamic stack size
      lib: cmsis_v2: increase stack sizes if coverage
      tests: cmsis_v1: properly set stack size
      lib: cmsis_v1: set stack size larger if coverage
      kernel: increase workq sizes if COVERAGE=y
      testsuite: fix memory access
      tests: timer_api: run in user mode
      tests: stackprot: don't set main stack size
      kernel: adjust default main stack for riscv
      kernel: fix k_stack_alloc_init()
      tests: mutex_api: run in user mode
      kernel: init: exclude some funcs from coverage
      kernel: init: fix coverage gap
      kernel: init: exclude unreachable code
      kernel: allow k_sleep(K_FOREVER)
      tests: queue: test k_queue_alloc_*pend()
      kernel: idle: exclude no-op funcs from coverage
      lib: os: remove dead code
      tests: poll: expand userspace coverage
      tests: schedule_api: fix extern tstacks
      tests: schedule_api: exercise SCHED_MULTIQ
      tests: schedule_api: test syscalls from usermode
      tests: schedule_api: skip test assert if COVERAGE
      tests: userspace: cover missing/bad syscalls
      tests: dynamic_thread: cover thread_idx_free()
      tests: userspace: cover z_object_recycle()
      kernel: exclude stubs from code coverage
      tests: common: cover k_cycle_get_32() syscall
      tests: device: cover device_get_binding()
      tests: thread_apis: exercise some system calls
      tests: sys_mutex: improve code coverage
      kernel: offsets: exclude from coverage
      lib: os: fix vsnprintk coverage
      lib: os: exclude z_arch_printk_char_out()
      lib: os: fix slist code coverage
      kernel: test coverage for sflist
      tests: common: add tests for extra sflist APIs
      tests: schedule_api: cover priority checks
      arc: use different load instruction
      kernel: fix CONFIG_THREAD_NAME from user mode.
      tests: json: improve code coverage
      tests: fatal: test failed assertion
      tests: mem_alloc: don't set main thread size
      tests: crc: convert to regular test case
      toolchain: allow 0.10.1 SDK
      tests: force stack canaries off for two user tests

Andrzej Głąbek (2):
      boards: nrf52840_pca10059: Configure NFC pins as GPIOs by default
      drivers: pwm_nrfx: Correct prescaler value for undivided clock

Andrzej Puzdrowski (7):
      fs/nvs: fix startup for 2-sectors configuration
      fs/fcb: add API documentation to the header
      doc/reference: add FCB page
      fs/nvs: fix delete ate accommodation
      fs/nvs: fix initialization hang if sector is full
      fs/nvs: skip deletion on non existing entry
      fs/nvs: preserve the previous ate searching

Andy Ross (1):
      lib/os/mempool: Fix corruption case with block splitting

Armando Visconti (2):
      boards: 96b_argonkey: upgrade documentation using official info
      drivers/i2s_ll_stm32.c: (FIX) Avoid warning in LOG_ERR

Arthur Crepin-Leblond (2):
      Bluetooth: gatt: Fix DB corruption when adding/removing service
      Bluetooth: gatt: Reuse existing handles from a previously added service

Benjamin Valentin (3):
      usb: sam0: Ensure API arguments are valid
      usb: sam0: Implement missing API functions
      drivers: watchdog: sam0: Check if timeout is valid

Benoit Leforestier (2):
      C++: Fix compilation error ""invalid conversion""
      codeowner: add codeowners for /test/lib

Bradley Bolen (1):
      cmake: Fix missing dependency

Brett Witherspoon (1):
      net: fix errno returned without promiscuous mode support

Bub Wei (1):
      samples: net: zperf: Add __packed for zperf_udp_datagram

Cami Carballo (1):
      tests: base64: add tests for error paths

Carles Cufi (4):
      west: build: Use officially documented CMake options
      west: build: Add new pristine cmd-line and config option
      scripts: west: Run pristine.cmake directly instead of the target
      doc: west: Backport moving the build config opts doc

Daniel Leung (1):
      tests/kernel/device: extends test for code coverage

David B. Kinder (1):
      doc: fix watchdog API documentation

Declan Traill (1):
      Settings: Fixes for compiler warnings

Derek Hageman (1):
      soc: sam0: Fix SAMD20 IRQ assignments

Findlay Feng (1):
      bluetooth: Fix an undefined behavior

Georgij Cernysiov (2):
      drivers: counter: stm32: fix LSE clock source for not F4 SoC
      drivers: rtc: stm32: correct tm_mon conversion

Greg S. Woods (1):
      entropy: fix C++ compiler warnings

Henrik Brix Andersen (1):
      gpio: rv32m1: enable GPIO port clocks

Ioannis Glaropoulos (4):
      arch: arm: fix start of MPU guard in stack-fail check (no user mode)
      arch: arm: userspace: correct inline comment for bad syscalls
      userspace: minor typo fixes in various places
      arch: arm: userspace: don't use the default stack in z_arm_do_syscall

Ioannis Konstantelias (1):
      drivers: flash: stm32: Fix insufficient wait time

Joakim Andersson (15):
      Bluetooth: controller: Fix assert in RPA timeout for advertiser
      Bluetooth: Host: Fix wrong init address when controller resolved address
      Bluetooth: Controller: Fix privacy advertiser connect peer address type
      Bluetooth: Host: Fix bug in creating connection with wrong own address.
      Bluetooth: SMP: Fix SMP identity distributing IRK for ID 0 always
      Bluetooth: host: Fix gatt indicate when conn is NULL
      Bluetooth: Host: Fix advertiser state flags
      Bluetooth: GATT: Fix segfault discover descriptors all UUIDs
      Bluetooth: Settings: Fix generated identity not persistently stored.
      Bluetooth: SMP: Fix peripheral security request with authenticated keys
      Bluetooth: controller: Fix assert in RPA timeout for advertiser
      Bluetooth: Host: fix missing interval_min copy
      Bluetooth: Host: Fix RPA timer not running
      Bluetooth: Host: Set Kconfig RPA timeout in controller
      Bluetooth: Host: Fix unable to connect using host resolution

Joao Cordeiro (1):
      samples: bluetooth: peripheral: Fix RX buffer size

Johan Hedberg (30):
      Bluetooth: Mesh: Fix RPL storage timeout handling
      Bluetooth: Mesh: Fix postponing storage deadline indefinitely
      Bluetooth: Mesh: Fix missing implementation of Proxy SAR timeout
      Bluetooth: Mesh: Fix segmented message RPL behavior
      Bluetooth: Fix expiring RPA when different local identities are used
      Bluetooth: Add dedicated pool for HCI_Num_Completed_Packets HCI event
      Bluetooth: Introduce separate pool for discardable events
      Bluetooth: Mesh: Fix missing protocol error timeout
      Bluetooth: Mesh: Fix Public Key mismatch error handling
      Bluetooth: Mesh: Rename reset_link() to reset_adv_link()
      Bluetooth: SMP: Make public key handling more robust
      Bluetooth: Fix public key callback management
      Bluetooth: Mesh: Generate new public key for each provisioning session
      Bluetooth: Mesh: Fix rejecting invalid remote public key
      Bluetooth: Mesh: Fix provisioning send error handling
      Bluetooth: Mesh: Move heartbeat sending to transport layer
      Bluetooth: Mesh: Fix checking for active heartbeat publication
      Bluetooth: Mesh: Fix heartbeat sending on Friendship established/lost
      Bluetooth: Mesh: Fix canceled buffer memory leak
      Bluetooth: Mesh: Fix not sending all segments through the Friend Queue
      Bluetooth: Mesh: Fix resending segments on correct bearer
      Bluetooth: Mesh: Fix canceling publication retransmission timer
      Bluetooth: Mesh: Fix starting IV Update when not on primary subnet
      Bluetooth: Mesh: Introduce a helper for send callback finalization
      Bluetooth: Mesh: Fix reference count imbalance in bt_mesh_net_resend()
      Bluetooth: Remove bogus files
      Bluetooth: Mesh: Fix missing call to send_cb_finalize
      Bluetooth: Mesh: Remove unused code
      Bluetooth: Mesh: Fix adhering to the configured Friend Queue size
      Bluetooth: Mesh: Fix discarding messages with many segments

Johann Fischer (2):
      boards: reel_board: enable pull-up on UART TX pin
      usb: usb_dfu: do not set bwPollTimeout dynamically

Josef Gajdusek (2):
      drivers: usb_dc_stm32: Make pin remapping part of the device tree
      drivers: usb_dc_stm32: Reinitialize the write semaphores on bus reset

Jukka Rissanen (21):
      samples: net: dumb_http_server: Add net_pkt.h file inclusion
      samples: net: dumb_http_server: Check EOF while skipping headers
      net: ipv4: Allow UDP packets with broadcast dst address
      net: ipv4: Send multicast ICMPv4 reply with correct src address
      net: if: Select global IPv4 address if needed
      net: llmnr: Check that UDP header can be accessed
      net: if: Fix null pointer deref when selecting IPv4 address
      net: sntp: Ignore return value from close
      net: mgmt: Add info length to event wait API
      net: mgmt: Send event with info when applicaple
      tests: net: mgmt: Verify that info_length is correct
      net: dns: Make dns_unpack_answer() to check non-compressed answers
      tests: net: dns: Add tests for dns_unpack_answer()
      net: tcp: Adjust data length if TCP options are present
      tests: net: trickle: Adjust config options to avoid error prints
      net: ipv6: Drop pkt if src address is unspecified
      net: pkt: Move everything up when pulling data
      net: ipv6: Fix fragmentation
      net: pkt: Allow larger packets for IPv6 fragmentation
      net: sockets: Do not call NULL socket callback function
      net: ipv4: Drop pkt if src address is unspecified

Krzysztof Chruscinski (5):
      logging: Allow logger usage in C++ files
      lib: os: ring_buffer: Fix C++ compilation warning
      drivers: clock_control: nrf: Fix lfclk source settings for nrf9160
      drivers: counter: nrfx_rtc: Fix lack of interrupt when CC=0
      logging: Fix corruption in log panic when scheduler was active

Kumar Gala (1):
      cmake: Support SDK versions more broadly

Kwon Tae-young (1):
      boards: stm32f4_disco: Fix yaml ram size

Loic Poulain (2):
      ext: mcux: csi: Fix wrong circular queue delta calculation
      net: ethernet: Fix build issue with C++

Luiz Augusto von Dentz (10):
      Bluetooth: GATT: Fix assuming writes to CCC will always contain 2 bytes
      Bluetooth: L2CAP: Fix inverting of SCID and DCID on disconnect
      Bluetooth: GATT: Fix bt_gatt_discovery with BT_GATT_DISCOVER_DESCRIPTOR
      Bluetooth: shell: gatt: Add discover command
      Bluetooth: GATT: Fix not parsing result of Read by Type
      Bluetooth: ATT: Fix bt_att_req_cancel clearing outstanding request
      Bluetooth: GATT: Fix not canceling on unsubscribe
      Bluetooth: GATT: Use atomic_t for subscribe flags
      Bluetooth: GATT: Fix assert when storying CCCs
      Bluetooth: GATT: Fix not clearing out of sync flag

Marcin Sloniewski (1):
      requirements.txt: change package name ""hub"" to ""git-spindle""

Marcin Szymczyk (2):
      cmake: fix support for out of tree shields
      usb: add zero-length packet after MPS-sized IN transaction

Marek Pieta (2):
      bluetooth: Fix bt_conn->id handling
      Bluetooth: host: Fix bt_keys_get_addr()

Mariusz Skamra (12):
      Bluetooth: controller: Workaround CPR procedure collision at CPU instant
      Bluetooth: gatt: Fix infinite read_by_uuid procedure
      Bluetooth: Add BT_SMP_ENFORCE_MITM option
      Bluetooth: tester: Enable Mesh Friend support
      Bluetooth: shell: Fix L2CAP connect parameters count
      Bluetooth: tester: Update to recent conn param related changes in BTP
      Bluetooth: tester: Enable GAP writable device name
      Bluetooth: tester: Change RPA timeout
      Bluetooth: GATT: Fix byte order for database hash
      Bluetooth: GATT: Add BTP Discover All Primary Services command handler
      Bluetooth: Shell: Fix unregister GATT Metrics vendor service
      Bluetooth: Mesh: Fix rejecting invalid remote public key

Marti Bolivar (7):
      scripts: flake8 cleanup for west build
      scripts: fix pyocd runner --flash-opt help
      scripts: runners: abstract jlink's missing program support
      scripts: runners: check for required programs
      doc: getting_started: recommend west v0.5.x
      doc: getting_started: west init --mr v1.14.1
      scripts: west build: fix pristine builds

Michael Scott (6):
      net: openthread: fix off-by-one error in settings offset calculation
      net: lwm2m: firmware: add log_strdup to remove logging errors
      net: lwm2m: dont select MBEDTLS or set MBEDTLS options in subsys
      net: lwm2m: remove IP CONFIG checks in lwm2m_sprint_ip_addr()
      net: lwm2m: remove IP CONFIG checks in lwm2m_parse_peerinfo()
      net: lwm2m: fix error message in load_tls_credential()

Nicolas Pitre (3):
      PTHREAD_MUTEX_DEFINE(): don't store into the _k_mutex section
      mempool: fix corruption of the free block bitmap and beyond
      realloc(): fix possible memory leak

Patrik Flykt (3):
      net: ethernet: Set NET_ETH_PTYPE_ARP for IPv4 link local packet type
      net: ethernet: Send sender IP address in ARP announce packets
      net/ip/dhcpv4: Set source IP address in DHCP Request

Pawel Dunaj (2):
      bluetooth: host: Use correct identity when direct advertising
      bluetooth: host: Unref conn on direct adv start error

Peter Bigot (1):
      logging: avoid buffer overrun extracting arguments

Phil Erwin (1):
      cmake: Fix missing dependency

Ravi kumar Veeramally (1):
      net: sockets: Add timeout to socket connect call

Rich Barlow (2):
      Bluetooth: Mesh: LPN: Clear sent_req on failure
      Bluetooth: Mesh: LPN: Remove msg from cache on rejection

Robert Lubos (2):
      net: openthread: Verify iface in net_mgmt event handler
      net: lwm2m: Ignore `close` return value

Ryan C Johnson (1):
      drivers: flash: w25q: erase operations must be erase-size aligned

Ryan QIAN (2):
      dts: arm: nxp: Add dtsi for RT1020
      boards: arm: mimxrt1020_evk: update board dts

Sebastian Bøe (3):
      cmake: Don't have users call zephyr_link_interface on mbedTLS
      cmake: DT: Change from -Idts/common to -isystem dts/common
      cmake: DT: Add support for out-of-tree binding root directories

Sören Tempel (4):
      soc/riscv32-fe310: add label for uart1
      net: slip: allow compilation without CONFIG_NET_LLDP
      net: slip: fix compilation without NET_L2_ETHERNET
      drivers: serial: sifive: Fix UART extern interrupts

Tedd Ho-Jeong An (8):
      Bluetooth: GATT: Add support for Read Using Characteristic UUID
      tests: bluetooth/tester: Add support Read Using Characteristic UUID
      doc: Bluetooth: Update GAP ICS to 7.4.1
      doc: Bluetooth: Update GATT ICS to 7.4.1
      doc: Bluetooth: Update L2CAP ICS to 7.4.1
      doc: Bluetooth: Update SM ICS to 7.4.1
      doc: Bluetooth: Add ICS for Mesh Profile
      doc: Bluetooth: Update PICS to ICS

Thomas Stilwell (1):
      cmake: fix regex for west version check in host-tools.cmake

Tobias Aschenbrenner (1):
      fix: kw41z: Use correct mapping for dBm

Tomasz Bursztyka (4):
      net/iface: Modify function to get IPv6 global address
      net/iface: Add a function to get IPv4 global address
      net/udp: Computed checksum field should not be 0
      net/udp: Accept UDP packet with missing checksum

Tomasz Gorochowik (1):
      libc: minimal: fix realloc function

Trond Einar Snekvik (2):
      Bluetooth: Mesh: Prov confirm tx after confirm rx
      Bluetooth: Mesh: Use define for no prov pdu

Vinayak Kariappa Chettimada (19):
      Bluetooth: controller: Fix advanced XTAL feature regression
      Bluetooth: controller: Fix pin or key missing response
      Bluetooth: controller: Fix XTAL advanced feature
      Bluetooth: controller: Add GPIO Debug Pins for HFCLK state
      Bluetooth: controller: Fix Enc Setup overlap with Length Update
      Bluetooth: controller: Fix handling zero length L2CAP start frame
      Bluetooth: controller: Fix PHY update proc symmetric rsp
      Bluetooth: controller: Fix packet timing restriction reset
      Bluetooth: controller: Fix missing data length update event
      Bluetooth: controller: Fix post DLE/PHY update event length
      Bluetooth: controller: Enable Fast Enc and RSSI features
      Bluetooth: controller: Add deferred procedure complete event
      Bluetooth: controller: Fix DLE during data transmission
      Bluetooth: controller: Update Bluetooth version to 5.1
      Bluetooth: controller: Fix cond compile of DLU event generation
      Bluetooth: controller: Add PA/LNA support on NRF_P1 GPIO pins
      Bluetooth: controller: Fix regression in Coded PHY CI Change
      Bluetooth: controller: Fix nRF52840 Coded PHY timings
      Bluetooth: controller: Decorrelate address generation from resolution

Wayne Ren (2):
      boards: iotdk: add mpu and fpu configuration
      arch: arc: fix the bug caused by hardware sp switch in interrupt

Wentong Wu (10):
      arch: arm: switching stack pointer with assembly code
      tests: kernel: increase stack buffer when code coverage enabled
      scripts: mpu align for ro section of new memory region on non-XIP system
      scripts: make code relocation work for non-XIP system
      linker: add no-flash system support
      kernel: timeout: do not active time slicing if idle thread ready
      driver: timer: loapic_timer: fix compile issue
      scripts: elf_helper: correct kernel object address check range
      linker: move scripts generated code at the beginning of .text
      scripts: make mpu align in sections for code reloation

ling wei (1):
      net: trickle: Re-init trickle timer for multiple triggerings


```",59771425
1523,False,True,2019-08-11T21:13:28Z,2019-08-11T21:34:42Z,"```
Aaron Tsui (7):
      doc: sample: mpu  Update documentation
      samples: bluetooth: ibeacon: change to ADV_NONCONN_IND type
      samples: shields: x_nucleo_iks01a1
      samples: sensor: bme280: add README.rst
      samples: sensor: bme280: add arduino_101_sss.overlay
      samples: servo_motor: add HW PWM choice for NRF52 family
      samples: bluetooth: peripheral_ht: Health Thermometer sample`

Alberto Escolar Piedras (22):
      doc: labels: Add links to feature process
      native_posix: cmdline: Hint user about wrong options
      nrf52_bsim: Add header to allow reusing native_posix drivers
      CODEOWNERS: remove use of commas
      native_posix: Run in real time by default with host BT
      doc: Remove API labels
      CODEOWNERS: Add reviewer for native_posix docs and flash driver
      CODEOWNERS: Clarify behaviour
      sanitycheck: Record time used in BinaryHandler
      sanitycheck: Minor optimization in BinaryHandler
      CODEWONERS: syntax fix: Remove comma
      nrf52_bsim: Add nrfx path to include path
      arch: POSIX: Do not assume 32bit pointers
      sanitycheck: update sections whitelist
      sanitycheck: Add missing section to whitelist
      native_posix: Replace system timer driver
      arch: POSIX: Fix race with unused threads
      nrf52_bsim: doc: Clarify how to fetch and compile BabbleSim
      native_posix: Fix undefined macro warning
      logging: Fix undefined macro warning
      shell: Fix undefined macro warnings
      nrf52_bsim: Minor fix in time coversion

Alex Porosanu (1):
      soc: riscv32: fix zero-riscy zephyr,flash node

Alexander Mihajlovic (1):
      posix: Fix calculation of clock base in clock_settime

Alexander Svensen (9):
      Bluetooth: controller: ull/lll: Workaround CPR procedure collision
      Bluetooth: controller: ull/lll: Do not feature exc more than once
      Bluetooth: controller: split: Fix Conn Param Req procedure stall issue
      Bluetooth: controller: split: Fix master role RSSI measurement
      Bluetooth: controller: split: Refactor the lll_clock_wait() function
      Bluetooth: controller: split: Refactor if_defines to is_enabled in lll.c
      Bluetooth: controller: split: Refactor if defines in lll_adv.c
      Bluetooth: controller: split: Refactor if defines in lll_scan.c
      Drivers: led: lp5562: Add delay when writing to enable register

Alexander Wachter (49):
      boards: arm: nucleo_f746zg: Activate CAN on nucleo F746zg
      drivers: sensor: ams_iAQcore: Implemented ASM Indoor Air Quality Sensor
      samples: sensor: ams_iAQcore: Implement sample for AMS iAQ-core
      drivers: sensor: ens210: Implement AMS ens210 Sensor
      samples: sensor: ens210: Implement sample for ens210
      tests: drivers: build_all: Add AMS IAQcore and ENS210 to build all
      CODEOWNERS: Add codeowner for ams iAQcore and ENS210
      drivers: can: stm32: fix filter mode set
      drivers: can: Extend attach_isr with void *arg and pass to the isr cb
      drivers: can: Extend can_send with void *arg and pass it to the isr cb
      drivers: can: rework can_attach_msgq
      drivers: can: Implement can_attach_workq
      tests: drivers: can: api: define DT_CAN_1_NAME if not defined
      tests: drivers: can: Add testcases for attach_workq
      tests: drivers: can: Make CAN dev global
      drivers: can: Add loopback driver
      drivers: can: rename drivers to can_<dev name>
      drivers: can: mcux_flexcan: Add support for MK64
      soc: nxp: k6x: Add CAN support
      boards: frdm-k64f: Enable CAN support
      samples: CAN: Add FRDM-K64F defconfig
      drivers: can: stm32: Remove STM CAN_Init
      drivers: can: stm32: Change TX priority to chronological order
      drivers: can: stm32 Add error message for buffer overflow
      drivers: can: stm32: Update enable driver help message
      linker: Add dtcm section for Cortex M7 MCUs
      dts: stm32f7: Add Device Tightly Coupled Memory
      drivers: ethernet: stm32: Put DMA buffer to DTCM section
      boards: arm: Activate DTCM for STM32F7 boards with Ethernet
      net: ip: 6lo compression rework
      net: ip: net_pkt: Add pkt_cursor_advance before contiguous check
      net: ip: 6lo (IPHC) uncompression rework
      net: ip: 6lo: Remove unnecessary net_buf allocation and memmove
      tests: net: 6lo: Adapt tests to deal with headers in multiple frames
      tests: net: 6Lo: Add test criterion HDR diff
      drivers: can: Add CAN shell
      samples: drivers: CAN: enable can shell for the sample
      tests: boards: board_shell: Activate CAN shell
      can: Add RX timestamp to zcan_frame
      drivers: can: stm32: Implement timestamp for RX frames
      net: canbus: Rename canbus to canbus_raw
      net: l2: 6LoCAN implementation
      net: l2: canbus: Add support for pkt reception from translator
      net: ip: net_pkt: Implement net_pkt_shallow_clone
      net: ip: ipv6_nbr: take TLLAO length from src lladdres
      net: l2: canbus: Add support for canbus Ethernet translator
      net: ip: ipv6_nbr: use temp variables for ntoh conversion
      samples: net: echo_client and echo_server: Add 6LoCAN config
      net: ip: ipv6_nbr: Make LLAO length calculation more universal

Alexandre Bourdiol (4):
      boards: Set pinmux.c compilation under switch CONFIG_PINMUX
      samples: basic minimal: add nucleo_f429zi, disco_l475_iot1 to whitelist
      board: add call to zephyr_library() for stm32mp157c_dk2
      board: use ${ZEPHYR_BASE} instead of ${PROJECT_SOURCE_DIR}

Alexey Brodkin (11):
      soc/nsim: Minor clean-up
      simulation: ARC EM in nSIM to use nsim_em.props
      board/nsim: Make it CPU-family independent
      board/nsim: Move CPU selection in defconfigs
      board/nsim: Refactor device tree description
      ARC: Mention ARC EM family instead of EM4 template
      arc: Preserve STATUS32 flags while resetting AE flag
      arc: Add support for unaligned access
      boards/nsim: Enable unaligned data acess for nSIM with simple ARC EM
      board/nsim: Add support of ARC HS cores in nSIM
      board/nsim: Add support of multi-core ARC HS platform in nSIM

Anas Nashif (198):
      ci: only build on specified branches
      boards: v2m_musca_b1_nonsecure: add flash to yaml
      boards: v2m_musca_b1_nonsecure: disable sanitycheck [REVERT ME]
      flash_map: fix test names
      flash_map: add function to iterate over areas
      flash_map: add shell interface
      ci: detect changes to sub-board definitions
      sanitycheck: add timestamps to messages
      sanitycheck: fix reporting: build vs. run
      sanitycheck: handle pid file not being present
      sanitycheck: show handler in verbose mode
      CODEOWNERS: update code owners
      tests: ipm: disable on qemu_x86_64
      CODEOWNERS: minor cleanup
      CODEOWNERS: remove use of commas
      crc: remove deprecated crc headers
      ci: send email to builds@ mailing list if master fails
      CODEOWNERS: address some unowned files/dirs
      doc: guide for optimizing zephyr
      doc: move module related doc to guides
      doc: document submitting changes to modules
      qmsi: move to a zephyr module
      qmsi: set type to boolean when selecting QMSI
      esp: move HAL to external repo
      fatfs: move fatfs filesystem to a module
      mcumgr: move to an external module
      nffs: move to an external module
      segger: move to an external module
      CODEOWNERS: remove ext/fs entry
      kconfig: enclose module Kconfigs into a menu
      cmake: build modules under /modules
      gitlint: match max title length restriction with checkpatch
      modules: move module kconfig to main tree
      manifest: update with module state
      silabs: move HAL to external repo
      cypress: move HAL to external repo
      ext: move libmetal to an external module
      ext: move open-amp to an external module
      modules: move kconfig into tree
      mcumgr: move Kconfig to main tree
      CODEOWNERS: Update owners for subsys/mgmt/
      manifest: update to latest MCUMGR head
      x86: remove unused and x86 only latency benchmark
      compiler: no warnings on address-of-packed-member
      include: arch: move bits_portable.h to arch/common
      include: arch: move addr_types to common location
      include: arch: remove empty nios2 asm.h
      include: arch: rename xtensa_irq.h to irq.h
      CODEOWNERS: update file for include/arch/common/
      cmake: no-address-of-packed-member is not supported in older compilers
      logging: use os as a domain for low level system debugging
      tests: mesh: fix function prototype and match declaration
      style: add braces around if/while statements
      style: samples/tests: add braces around if/while statements
      doc: redirect old board pages to new location
      doc: remove .html from redirect entries
      doc: generate documentation of ifdef`ed APIs
      mbedtls: move to external module
      sdk: add support for 0.10.1 and remove 0.9.5
      doc: fix path to gdb in documentation
      doc: samples: cleanup board reference and layout
      samples: grove_light: remove whitelisting
      soc: nxp: ke1xf: add DTS SPI definitions
      samples: spi_fujitsu_fram: remove whitelisting
      manifest: order modules alphabetically
      manifest: add ci-tools to manifest
      manifest: remove out-dated comment
      manifest: move net-tools to tools/net-tools
      ci: move to new docker with new SDK
      ci: skip handling coverage data
      sanitycheck: report tests that never build/run
      ext: hal: st: move to modules
      docs: fix misspelling across the tree
      ci: increase sleep time between sanitycheck runs
      drivers: uart_console: include correct path
      drivers: uart_console: do not include arch/cpu.h directly
      drivers: uart_console: removed commented code
      drivers: pinmux: do not include local pinmux.h
      include: move interrupt controller headers to interrupt_controller/
      include: move system timer headers to include/drivers/timer/
      drivers: serial: ns16550: move header from /include/
      drivers: modem: modem_receiver.h: move header from /include/
      CODEOWNERS: remove non-existing files
      CODEOWNERS: add / at the end of a directory
      mailmap: Update mailmap with full names and  emails
      arc: logging: fix logging expression
      drivers: apic_timer: fix include of system_timer.h
      include/: cleanup: add Kconfig for suppressing warnings
      cleanup: include/: move flash_map.h to storage/flash_map.h
      cleanup: include/: move console.h to console/console.h
      cleanup: include/: move tty.h to console/tty.h
      cleanup: include/: move fs.h to fs/fs.h
      cleanup: include/: move fcb.h to fs/fcb.h
      cleanup: include/: move nvs/nvs.h to fs/nvs.h
      cleanup: include/: move tracing.h to debug/tracing.h
      cleanup: include/: move stats.h to stats/stats.h
      cleanup: include/: move atomic.h to sys/atomic.h
      cleanup: include/: move base64.h to sys/base64.h
      cleanup: include/: move crc.h to sys/crc.h
      cleanup: include/: move disk_access.h to disk/disk_access.h
      cleanup: include/: move power.h to power/power.h
      cleanup: include/: move sys_io.h to sys/sys_io.h
      cleanup: include/: move json.h to data/json.h
      cleanup: include/: move zephyr/jwt.h to data/jwt.h
      cleanup: include/: move watchdog.h to drivers/watchdog.h
      cleanup: include/: move adc.h to drivers/adc.h
      cleanup: include/: move aio_comparator.h to drivers/aio_comparator.h
      cleanup: include/: move can.h to drivers/can.h
      cleanup: include/: move clock_control.h to drivers/clock_control.h
      cleanup: include/: move counter.h to drivers/counter.h
      cleanup: include/: move dma.h to drivers/dma.h
      cleanup: include/: move entropy.h to drivers/entropy.h
      cleanup: include/: move flash.h to drivers/flash.h
      cleanup: include/: move gna.h to drivers/gna.h
      cleanup: include/: move gpio.h to drivers/gpio.h
      cleanup: include/: move hwinfo.h to drivers/hwinfo.h
      cleanup: include/: move i2c.h to drivers/i2c.h
      cleanup: include/: move i2s.h to drivers/i2s.h
      cleanup: include/: move ipm.h to drivers/ipm.h
      cleanup: include/: move led.h to drivers/led.h
      cleanup: include/: move led_strip.h to drivers/led_strip.h
      cleanup: include/: move pinmux.h to drivers/pinmux.h
      cleanup: include/: move pwm.h to drivers/pwm.h
      cleanup: include/: move rtc.h to drivers/rtc.h
      cleanup: include/: move sensor.h to drivers/sensor.h
      cleanup: include/: move spi.h to drivers/spi.h
      cleanup: include/: move uart.h to drivers/uart.h
      cleanup: include/: move display.h to drivers/display.h
      cleanup: include/: move ring_buffer.h to sys/ring_buffer.h
      cleanup: include/: move misc/__assert.h to sys/__assert.h
      cleanup: include/: move misc/byteorder.h to sys/byteorder.h
      cleanup: include/: move misc/dlist.h to sys/dlist.h
      cleanup: include/: move misc/errno_private.h to sys/errno_private.h
      cleanup: include/: move misc/fdtable.h to sys/fdtable.h
      cleanup: include/: move misc/libc-hooks.h to sys/libc-hooks.h
      cleanup: include/: move misc/list_gen.h to sys/list_gen.h
      cleanup: include/: move misc/math_extras.h to sys/math_extras.h
      cleanup: include/: move misc/math_extras_impl.h to sys/math_extras_impl.h
      cleanup: include/: move misc/mempool_base.h to sys/mempool_base.h
      cleanup: include/: move misc/mempool.h to sys/mempool.h
      cleanup: include/: move misc/mutex.h to sys/mutex.h
      cleanup: include/: move misc/printk.h to sys/printk.h
      cleanup: include/: move misc/rb.h to sys/rb.h
      cleanup: include/: move misc/sflist.h to sys/sflist.h
      cleanup: include/: move misc/slist.h to sys/slist.h
      cleanup: include/: move misc/speculation.h to sys/speculation.h
      cleanup: include/: move misc/util.h to sys/util.h
      cleanup: include/: move misc/gcov.h to debug/gcov.h
      cleanup: include/: move misc/stack.h to debug/stack.h
      cleanup: include/: move misc/reboot.h to power/reboot.h
      CODEOWNERS: update file with new locations
      docs: make doxygen happy with new locations
      CODEOWNERS: update architecture owners
      arch: x86: remove unused NANO_ISF
      kernel: msgq: avoid single char variables for msgq
      doc: exclude internal symbols
      arch: arc: build cache.c conditionally
      tests: schedule_api: minor cleanup
      manifest: update to latest ci-tools revision
      samples: spi_flash: remove whitelisting
      samples: grove_temperature: cleanup whitelisting
      soc: ke1xf: fix SPI device numbering
      tests: build_all: remove whitelisting on arduino_101
      samples: quark_se_c1000_devboard does not have Wifi
      boards: hifive1: add aliases for pwm
      boards: hifive1: add supported peripherals
      samples: net: quark/arduino 101 do not have ethernet support
      boards: arduino_due: this board does support gpio
      boards: add supported devices to boards
      build: dts: also look for application specific dts overlay
      arduino_due: do not build gpio_sam driver
      samples: mass_storage: remove whitelisting
      samples: console: remove whitelisting
      boards: mark boards as supporting usb_cdc in DT
      samples: hid-mouse: use DT filtering instead of platform_exclude
      samples: hci_usb: remove whitelisting
      tests: bluetooth: shell: remove whitelisting on arduino_101
      samples: i2c_fujitsu_fram: remove whitelisting
      drivers: pwm: sifive: fix DTS defines
      samples: blink_led: remove whitelisting
      samples: fade_led: remove whitelisting
      samples: servo_motor: remove whitelisting
      drivers: pwm: imx: replace deprecated DTS macros
      boards: colibri_imx7d_m4: this board supports PWM
      tests: pwm_api: remove whitelisting
      tests: gpio: remove whitelisting
      tests: i2c: remove whitelisting
      tests: pinmux: remove whitelisting
      samples: webusb: remove whitelisting
      samples: led_apa102c_bitbang: remove whitelisting
      doc: move schedling doc to its own section
      doc: scheduler: add diagrams illustrating scheduler
      boards: remove galileo board
      boards: remove arduino 101 and related boards
      boards: remove quarl_se_c1000
      x86: remove code for interrupt forwarding bug
      doc: minnowboard: add grub docs
      toolchain: remove issm support

Andrei Emeltchenko (77):
      samples: usb: hid: Enable harness for the sample
      usb: tests: Enable other boards for test
      samples: usb: Add depends_on gpio
      tests: usb: Fix checking error code
      native_posix: Enable USB device for the board
      tests: usb: Add usb_read() for invalid endpoint
      samples: usb: mass: Add whitelist mass storage on ram
      tests: usb: Cleanup tests
      tests: usb: Add write() and set_callback() tests
      usb: usb_dc_dw: Fix valid endpoints check
      usb: usb_dc_native_posix: Fix valid endpoints check
      usb: usb_dc_dw: Check endpoint is valid
      usb: usb_dc_native_posix: Check endpoint is valid
      usb: usb_dc_kinetis: Verify endpoint is valid
      usb: usb_dc_kinetis: Fix using invalid index
      tests: usb: Add more USB DC tests and refactor names
      tests: usb: Add usb_read() for invalid endpoint
      tests: usb: Add write() and set_callback() tests
      usb: usb_dc_stm32: Add missing function
      usb: device: Use set_endpoint helper for set_config
      usb: device: Use set_endpoint helper
      usb: Add Kconfig template for DEVICE_COUNT
      usb: hid: Use UTIL_LISTIFY and device count macro
      samples: usb: Correct USB HID device name
      usb: cdc_acm: Use UTIL_LISTIFY and device count macro
      samples: cdc_acm: Update CDC ACM Device name
      samples: hid-cdc: Update USB device names and project conf
      tests: usb: Add endpoint allocation verification test
      usb: device: Code cleanup
      usb: Remove usb_dc_ep_set_callback return code
      usb: dc: native_posix: Increase number of endpoints supported
      usb: tests: Add second IN endpoint to test
      usb: usb_dc_stm32: Return EAGAIN on lock failure
      usb: device: Handle EAGAIN for device transfer
      usb: Fix automatic assignment endpoints
      usb: webusb: Strip 'serial' from names
      usb: webusb: Update license header
      usb: webusb: Fix logging for webusb
      usb: webusb: Remove unneeded headers
      usb: webusb: Fix payload for vendor requests
      usb: webusb: Add more log output
      tests: usb: desc_sections: Use automatic endpoint assignment
      tests: usb: desc_sections: Check EP assignment order
      usb: Add log for endpoint assignment
      tests: usb: desc_sections: Cleanup test
      uart: doc: Add special case for virtual UART
      usb: device: Add usb_transfer_is_busy() function
      samples: usb: cdc_acm: Update CDC ACM echo sample
      usb: cdc_acm: Refactor USB serial code
      samples: usb: cdc_acm_composite: Refactor sample
      usb: webusb: Fix callback not called
      tests: usb: desc_sections: Fix coverity issue
      tests: usb: desc_sections: Fix coverity issue
      usb: device: Add transfer cancel helper
      usb: device: Do not call callback when transfer is cancelled
      usb: device: Cancel all transfers on disconnect
      usb: device: Add debug logs catching re-enable failures
      usb: webusb: Trivial syntax fix
      usb: device: Disable endpoints on disconnect and suspend
      usb: device: Do not return error if ep already enabled
      drivers: usb: usb_dc_nrfx: Set cfg.en to false on Reset
      usb: Set correct default buffer size for RNDIS
      samples: net: echo_server: Fix usbnet configuration
      usb: device: Remove unused variable
      usb: Align legacy and composite interface
      tests: usb: device: Refactor device api test
      samples: usb: webusb: Use new descriptor placement API
      samples: usb: webusb: Use Automatic endpoint assignments
      samples: usb: wpanusb: Refactor sample using new API
      usb: dfu: Remove old composite configuration
      samples: usb: hid: Fix harness configuration
      doc: usb: Remove old API documentation
      usb: console: Initialize USB console after USB Device stack
      usb: usb_descriptor: Trivial syntax correct
      usb: drivers: usb_dc_stm32: Fix coverity issue
      usb: drivers: usb_dc_stm32: Fix coverity issue
      samples: usb: webusb: Remove dependence on GPIO

Andrei Gansari (11):
      ext: LPC54114 fsl_power and fsl_reset moved to device
      ext: import_mcux_sdk.py script changes
      ext: update nxp mcux lpc sdk
      soc: added LPC5500 family
      dts: LPC55S69 initial device tree
      boards: lpcxpresso55s69 initalization
      doc: lpclink2 firmware reference
      drivers: uart for LPC devices interrupt enabled
      soc: k64f MPU configured to always allow ENET
      soc: k64f MPU configured to always allow USB
      drivers: eth_mcux: event corrected init->reset

Andrew Boie (115):
      arc: print human-readable exception info
      userspace: fix copy from user locking
      CODEOWNERS: minor adjustment
      arc: arm: fix support for MPUs on non-XIP systems
      tests: getaddrinfo: fix stack overflow
      tests: pipe: fix error with optimization disabled
      kernel: increase workq sizes if COVERAGE=y
      testsuite: fix memory access
      newlib: fix user mode calls to _sbrk
      tests: cmsis_v2: don't hard-code stack sizes
      lib: cmsis_v2: set default dynamic stack size
      lib: cmsis_v2: increase stack sizes if coverage
      tests: cmsis_v1: properly set stack size
      lib: cmsis_v1: set stack size larger if coverage
      tests: timer_api: run in user mode
      tests: ethernet_mgmt: enable random generator
      tests: mqtt_publisher: enable random numbers
      tests: ieee802154: set min_ram
      kernel: adjust default main stack for riscv
      tests: stackprot: don't set main stack size
      boards: qemu_x86: properly enable XIP
      kernel: fix k_stack_alloc_init()
      kernel: timeout: add syscall for runtime clk freq
      samples: cmsis philosophers: adjust stack size
      samples: philosophers: pause before main() exit
      tests: tickless_concept: disable for coverage
      x86: add qemu_x86_coverage target
      requirements.txt: add gcovr
      doc: fix coverage report documentation
      tests: mutex_api: run in user mode
      kernel: init: exclude some funcs from coverage
      kernel: init: fix coverage gap
      kernel: init: exclude unreachable code
      kernel: allow k_sleep(K_FOREVER)
      tests: queue: test k_queue_alloc_*pend()
      kernel: idle: exclude no-op funcs from coverage
      lib: os: remove dead code
      tests: poll: expand userspace coverage
      tests: getaddrinfo: set newlib heap size
      tests: schedule_api: fix extern tstacks
      tests: schedule_api: exercise SCHED_MULTIQ
      tests: schedule_api: test syscalls from usermode
      tests: schedule_api: skip test assert if COVERAGE
      kernel: offsets: exclude from coverage
      tests: common: cover k_cycle_get_32() syscall
      tests: userspace: cover missing/bad syscalls
      tests: dynamic_thread: cover thread_idx_free()
      tests: userspace: cover z_object_recycle()
      tests: device: cover device_get_binding()
      tests: thread_apis: exercise some system calls
      kernel: exclude stubs from code coverage
      lib: os: fix vsnprintk coverage
      lib: os: exclude z_arch_printk_char_out()
      tests: sys_mutex: improve code coverage
      kernel: cover k_usleep() from user mode
      tests: futex: improve coverage
      x86: only use lfence if x86 bcb config enabled
      kernel: cover k_array_index_sanitize()
      kernel: delete k_futex_init()
      lib: os: fix slist code coverage
      kernel: test coverage for sflist
      tests: common: add tests for extra sflist APIs
      tests: mem_alloc: don't set main thread size
      arc: use different load instruction
      kernel: fix CONFIG_THREAD_NAME from user mode.
      tests: schedule_api: cover priority checks
      sanitycheck: extend coverage timeout
      sanitycheck: don't multiply CPU count
      sanitycheck: correct timeout extension comment
      sanitycheck: make coverage reports easier to do
      tests: json: improve code coverage
      tests: fatal: test failed assertion
      include: gcov: fix compilation error
      tests: fp_sharing: properly dump coverage data
      sanitycheck: workaround file limits
      drivers: ipm_console: increase coverage stack size
      tests: ipm: remove superfluous configs
      tests: crc: convert to regular test case
      doc: update coverage documentation
      sanitycheck: select gcov tool based on target
      x86: allow user mode to induce kernel oops
      tests: force stack canaries off for two user tests
      assert: generate oops if invoked from usermode
      userspace: add kobject flag for drivers
      mec1501: fix dts build error
      arm: don't use exc reason codes for internal state
      kernel: consolidate error handling code
      kernel: abolish _default_esf
      kernel: support log system for fatal errors
      arc: use z_fatal_error() for spurious IRQs
      arm: fix exception reason code for bad syscall
      arm: dump registers on fatal exceptions
      kernel: rename NANO_ESF
      sanitycheck: simplify fault detection
      tests: uart_basic_api: fix configuration
      tests: z_except_reason() policy from usermode
      x86: support very early printk() if desired
      userspace: set stack object earlier
      tests: increase main stack size for x86 with ztest
      x86: make guard pages ro instead of non-present
      x86: reserve room for per-thread page tables
      x86: add debug functions for dumping page tables
      x86: add functions to get/set page tables
      x86: report CR3 on fatal exception
      userspace: clarify k_mem_partition_add()
      userspace: adjust arch memory domain interface
      x86: use per-thread page tables
      x86: use a struct to specify stack layout
      kernel: add z_fatal_halt() to interface
      tests: clean up fatal error handlers
      kernel: remove log system support for fatal msgs
      x86: generate page tables at runtime
      x86: add prep_c function
      x86: ia32: do not use the first megabyte
      x86: add build assert that RAM bounds <= 4GB

Andrew Fernandes (3):
      drivers: spi: nrfx: allow enabling DMA with the nRF52832 despite PAN 58
      drivers: spi: nrfx: fix a CMakeLists.txt bug introduced in e96673d
      adc: explicitly cast (const void *) to (const adc_driver_api *)

Andrzej Głąbek (19):
      ext: hal: nordic: Update nrfx to version 1.7.1
      drivers: pwm_nrfx: Correct prescaler value for undivided clock
      ext: nrfx: Reserve PPI channels and groups used by pwm_nrf5_sw driver
      ext: nrfx: Reserve PPI channels and groups used by Bluetooth controller
      bluetooth: controller: hal: Correct the bit mask of used PPI channels
      boards: nrf52840_pca10059: Configure NFC pins as GPIOs by default
      usb: kconfig: nrf52840: Enable REMOTE_WAKEUP option only when needed
      Revert ""drivers: usb: usb_dc_nrfx: Set cfg.en to false on Reset""
      drivers: usb_dc_nrfx: Add pre-transfer checks if endpoint is enabled
      scripts: dts: Add special handling of '+' in 'str_to_label' function
      scripts: dts: Add extraction of clock frequency for fixed clock
      drivers: usb_dc_nrfx: Use dedicated work queue for handling ISR events
      ext: hal: nordic: Update nrfx to version 1.7.2
      ext: nordic: Align nrfx_config_* files with templates from nrfx v1.7.2
      drivers: i2c_nrfx_twi: Make use of NRFX_TWI_FLAG_SUSPEND
      soc: nordic: Add HAS_HW_NRF_RADIO_IEEE802154  Kconfig option
      dts: nordic: nrf9160: Remove redundant aliases
      drivers: entropy: nrf5: Fix dependency of the enabling Kconfig option
      soc: nrf9160: Remove unsupported Kconfig option GPIO_AS_PINRESET

Andrzej Puzdrowski (31):
      dfu/boot: non-secure app support
      dfu/boot: Replace flash partitioning terminology
      drives/flash: use nrfx for nrf
      drives/flash: provide boundaries info for nRF9160
      tests/drivers/soc_flash_nrf: fix lack of disabled protection
      samples/drivers/soc_flash_nrf: enable nrf9160_pca10090 targets
      dfu: introduce progressive erasing
      usb/class/usb_dfu: support progressive image erase
      dfu/img_util: : non-secure app support
      boards/x86/qemu_x86: increase RAM size
      fs/nvs: fix startup for 2-sectors configuration
      tests/fs/nvs: GC full round test
      doc/reference/storage/settings: storage behavior description
      stats: fix Coverity CID :198875
      dfu/boot: double swap on interrupted revert bugfix adaptation
      dfu/boot: make swap_type optional
      drivers/flash: add read alignment requirement comment
      boards/qemu_x86: fix qemu memory map
      boards/qemu_x86: fix emulated program memory size
      drivers/flash/flash_simulator: switch to use DT_FLASH_SIM labels
      drivers/flash/flash_simulator: fix flash size calculation
      fs/nvs: preserve the previous ate searching
      fs/fcb: add API documentation to the header
      doc/reference: add FCB page
      tests/subsys/fs/nvs: init on full storage test
      fs/nvs: fix delete ate accommodation
      fs/nvs: fix initialization hang if sector is full
      fs/nvs: skip deletion on non existing entry
      tests/subsys/fs/nvs: entry delete test
      tests/subsys/settings/fcb: add check for target compatibility
      doc/reference/storage/settings: fix misleading examples

Andy Doan (2):
      sanitycheck: Allow custom arguments for west-flash
      sanitycheck: Add a ""test-only"" option

Andy Ross (39):
      scripts/sanitycheck: Precompile test-time regular expressions
      arch/x86_64: Suppress spurious linker-generated code in the 32 bit stub
      arch/*: Add z_arch_irq_unlocked() predicate and test
      kernel/thread_abort: Swap, don't reschedule when aborting _current
      tests/kernel/fatal: Fix wait-for-interrupt delay in stack check test
      kernel/fatal: Clean up z_except_reason() fallback implementation
      kernel/sched: Don't reschedule inside a nested lock
      kernel/smp: Rename smp_init()
      include/drivers/system_timer.h: Clean up docs
      samples/boards/nrf52/power_mgr: Correct test integration
      samples/subsys/power/device_pm: Add test harness integration
      samples/subsys/usb/dfu: Set sanitycheck test to build_only
      sanitycheck harness: Correct ordered regex handling
      lib/os/mempool: Fix corruption case with block splitting
      Revert ""tests: tickless_concept: Fix slicing time measurement""
      kernel/timeout: Remove ""clock_always_on"", replace with ""SLOPPY_IDLE""
      drivers/timer/nrf_rtc_timer: Fix round-up for rapid tick rates
      tests/kernel/mem_pool: Fix timeout units
      tests: samples: Apps shouldn't set tick rate
      kernel: Crank up default tick rate
      boards/arm: Remove 1000 Hz tick rate on STM32 boards
      boards/arc: Remove tick rate settings for ARC hardware
      soc/arm: Increase nRF timer default to the cycle rate.
      soc/arm: Remove 1 kHz tick rate default for mcimx7_m4 and msp432p401r
      tests/kernel/sched/schedule_api: Fix slice time test for fast ticks
      tests/kernel/common: Fix uptime delta test for fast ticks
      tests/kernel/context: Fix sleep test for fast ticks
      drivers/sensor/hp206c: Clarify tick rate warning
      kernel/sched: Interpret zero timeslice time correctly
      tests/kernel/sleep: Fix usleep test for fast ticks
      tests/kernel/tickless/tickless_concept: Force 100 Hz ticks
      tests/kernel/early_sleep: Fix for fast ticks
      tests/kernel/workq/work_queue: Fix for fast/non-standard tick rates
      tests/posix/common: Adjust miscalibrated timing test
      tests/cmsis_rtos_v1: Correct timing assumptions
      CMSIS v2: Work around time unit confusion
      kernel/mempool: Fix ticks/ms confusion
      kernel/sched: Fix k_thread_priority_set() on SMP
      cmake: Remove check_link_map.py

Anton Gerasimov (1):
      arch: arm: fix ""template with C linkage"" in cmsis.h

Antony Pavlov (15):
      doc: application: fix duplicated word
      ext/hal/st/stm32cube/stm32l1xx: rename SVC_IRQn -> SVCall_IRQn
      dts: riscv32: rv32m1: fix reg value for cpu@1
      boards: arm: unify Nucleo-64 boards connectors image
      samples/drivers/watchdog: make it work on STM32
      boards/arm/olimexino_stm32: enable watchdog
      boards/arm/*/*dts: fix double whitespace in model property
      boards/arm/olimexino_stm32: fix compatible dt property
      boards/arm/mikroe_mini_m4_for_stm32: fix model&compatible dt properties
      treewide: fix typos
      boards/arm/olimexino_stm32: register led1
      scripts/checkpatch.pl: fix root dir detection and enable it
      dts: import vendor-prefixes.txt from linux kernel
      boards/arm/*stm32*: fix USB pinmux
      boards/arm/olimex_stm32_e407: enable USB

Armando Visconti (15):
      driver/audio: mpxxdtyy: Added support for 2 microphones (stereo)
      boards: 96b_argonkey: upgrade documentation using official info
      drivers/i2s_ll_stm32.c: (FIX) Avoid warning in LOG_ERR
      modules/hal_st: Add stmemsc HAL library
      driver/sensor: lis2dw12: make use of STdC definitions
      driver/sensor: add LPS22HH sensor support
      driver/sensor: lsm6dso: Add support
      boards/arm: Add arduino_header support to nucleo f401re and f411re
      boards: add support for shields x-nucleo-iks01a3
      sample/shield: add support to x-nucleo-iks01a3 shield
      driver/sensor: add STTS751 temperature sensor
      board/shields: x-nucleo-iks01a3: add STTS751 configuration in overlay
      sample/shield: x-nucleo-iks01a3: add support to STTS751
      dts: bindings: st,stts751-i2c.yaml: (FIX) Remove unused 'version' field
      driver/sensor/lsm6dso: Fix deprecated macros CS_GPIO_* to CS_GPIOS_*

Arnaud Pouliquen (12):
      soc: stm32: add initial soc support for stm32mp1 family
      ext: hal: Enable support for stm32mp1xx hal
      ext: hal: add stm32mp1 exti ll driver
      dts: add declaration of stm32mp157
      drivers/interrupt_controller: stm32: add support of stm32mp1
      boards: arm: Add support for STM32MP157 Discovery board
      ext: hal: fix naming in rcc ll
      codeowners: add reviewer for stm32mp1 SoC
      board: remove useless config in Avenger96 board
      drivers: introduce ipm driver for stm32
      ipm: Add support for stm31mp1 Soc
      ipm: Add support for stm31mp157c_dk2 board

Arthur Crepin-Leblond (2):
      Bluetooth: gatt: Reuse existing handles from a previously added service
      Bluetooth: gatt: Fix DB corruption when adding/removing service

Asger Munk Nielsen (5):
      bluetooth: Controller: Refactor node_rx footer to avoid ptr arithmetic
      Bluetooth: controller: Enable use of proprietary rx demuxing functions
      Bluetooth: controller: Enable use of user defined protocols
      Bluetooth: controller: Moved advanced settings in Kconfig
      Bluetooth: Controller: Test for user extensions

Augusto Hack (1):
      arch: common: gen_isr_tables table size check

Aurelien Jarno (9):
      ext: hal: atmel: import SAM E70 HAL revision B
      ext: hal: atmel: same70b: apply same patches than on rev A
      soc: same70: add support for revision B
      soc: same70: check for mismatch between chip and HAL CIDR
      boards: support the SAME70Q21B on the SAM E70 Xplained Board
      CODEOWNERS: Add codeowner for Atmel SAME70 HAL
      usb: move the request handler buffer to the USB device code
      usb: merge all request handler buffers
      usb: simplify request handlers code

Balaji Kulkarni (1):
      libc: minimal: Add bsearch function

Benjamin Lindqvist (2):
      drivers: nrf: Trigger STOP RX event and wait before disabling UARTE
      Power: Fix various spurious LOG_ERR calls

Benjamin Valentin (21):
      drivers: hwinfo: add driver support for Atmel SAM0 device ID
      soc: sam0: Enable generic peripheral selection
      net/icmpv4: Include icmp_hdr in callback
      net/icmpv4: Allow for arbitrary payload data in ICMP echo
      net/icmpv6: Allow for arbitrary payload data in ICMP echo
      net: shell: Improve the output of the ping function
      usb: sam0: Ensure API arguments are valid
      usb: sam0: Implement missing API functions
      ext: Import Atmel SAMR21 header files from ASF library
      soc: atmel: add SAMR21
      boards: atsamr21_xpro: Add SAM R21 Xplained Pro Evaluation Kit
      CODEOWNERS: Add code ownership for Atmel samr21 code
      soc: sam0: enable RTC for samd21, samr21
      soc: sam0: Make init code common between all samd2x SoCs
      cmake: gdb: use gdb-multiarch if ${CROSS_COMPILE}gdb is not availiable
      drivers: watchdog: sam0: Check if timeout is valid
      boards: enable i2c on the SAM R21 Xplained Pro board
      soc: sam0: add I2C to dts_fixup.h
      samples: nrf52: power_mgr: Fix build with prj_tickless.conf config
      drivers/uart: introduce SERIAL_SUPPORT_ASYNC option
      tests: drivers: uart: depend on SERIAL_SUPPORT_ASYNC for ASYNC test

Benoit Leforestier (6):
      C++: Fix compilation error ""invalid conversion""
      DTS: Add UART 5 for STM32F4 SOC
      API: Uart: Add support of 9 bits data length
      Driver: Uart: Add support of 9 bits data length for STM32
      Build: Build with newlib-nano c library
      codeowner: add codeowners for /test/lib

Bernard Lee (9):
      display: ili9340: Make reset gpio definition optional.
      display: ili9340: Add RGB565 pixel format support.
      display: ili9340: Adafruit LCD 1480 driver supports RGB565 pixel format.
      display: ili9340: Add support of Seeed 2.8"" TFT Touch Shield v2.0.
      samples: display: ili9340: Get ILI9340 device by DT label.
      samples: display: ili9340: ST NUCLEO-L476RG config file.
      samples: display: ili9340: Add support of RGB565 pixel format.
      samples: display: ili9340: Add 2 Arduino shield sample configurations.
      samples: display: ili9340: Document 2 Arduino TFT shield configurations.

Bosch Sensortec (4):
      include: added new sensor channel SENSOR_CHAN_GAS_RES
      driver: sensor: bme680 added support
      samples: sensor: bme680 added sample code
      dts : bindings : sensor : bme680 Added support for BME680

Bradley Bolen (30):
      cmake: Fix missing dependency
      shell: Fix checks of Kconfig options
      logging: Fix checks of Kconfig option
      tracing: Fix checks of Kconfig options
      arch: arm: Fix check of Kconfig option
      arch: arc: Fix checks of CONFIG_USERSPACE
      arch: arc: Fix checks of CONFIG_ARC_FIRQ
      arch: arc: Fix checks of CONFIG_STACK_POINTER_RANDOM
      arch: arm: Fix checks of CONFIG_USERSPACE
      arch: arm: Fix checks of CONFIG_IRQ_OFFLOAD
      arch: arm: Fix checks of CONFIG_ZERO_LATENCY_IRQS
      arch: arm: Fix checks of CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT
      arch: arm: Move irq_init.c to cortex_m specific directory
      arch: arm: Move thread_abort.c to cortex_m specific directory
      arch: arm: Move fault.c to cortex_m directory
      arch: arm: Move nmi code for Cortex-R support
      arch: arm: Move prep_c.c to common location
      arch: arm: Move header files to common location
      arch: arm: Move Cortex-M specific CPU defines
      arch: arm: cpu_idle: Remove unused functions
      drivers: interrupts: Add a set_priority callback
      interrupt_controller: gic: Add support for the GIC400
      Revert ""toolchain: gcc: Remove ref. to undefined sym. CONFIG_ISA_ARM""
      arch: arm: Add Cortex-R support
      arch: arm: cortex_r: Add memory barriers for register accesses
      arch: arm: Add Cortex-R4 support
      arch: arm: Add Cortex-R5 support
      soc: arm: xilinx_zynqmp: Add qemu based SoC
      boards: qemu_cortex_r5: Add qemu test board for the Cortex-R series
      cmake: emu: Allow overriding the qemu binary

Brett Witherspoon (32):
      net: fix errno returned without promiscuous mode support
      drivers: ieee802154: Make upipe configuration options depend on driver
      drivers: adxl362: use logger API
      ext: simplelink: import HAL from TI CC13x2 / CC26x2 SDK 3.10.00.53
      ext: simplelink: modify CC13x2/CC26x2 CCFG to use appropriate sections
      soc: ti_simplelink: add support for TI CC13x2 / CC26x2 series
      boards: cc26x2r1_launchpad: add support for TI CC26x2R LaunchPad
      boards: cc1352r1_launchxl: add support for TI CC1352R LaunchPad
      CODEOWNERS: Add codeowner for TI CC13x2 / CC26x2 files
      drivers: adxl362: don't skip mutex unlocking in error path
      drivers: adxl362: use Kconfig for interrupt mode
      drivers: adxl362: don't disable callbacks
      drivers: adxl362: check interrupt status
      drivers: adxl362: clear status independently and before mapping
      drivers: add CC13xx / CC26xx entropy driver
      boards: cc26x2r1_launchxl: enable TRNG entropy source support
      boards: cc1352r1_launchxl: enable TRNG entropy source support
      samples: add ADXL362 sensor sample application
      drivers: gpio_c13xx_cc26xx: fix control flow issue
      drivers: adxl362: fix control flow issue
      drivers: adxl362: fix acceleration sample conversion
      drivers: adxl362: rework temperature conversion
      drivers: add CC13xx / CC26xx I2C driver
      boards: cc26x2r1_launchxl: enable support for I2C
      boards: cc1352r1_launchxl: enable support for I2C
      drivers: adxl362: use burst transfer
      drivers: add CC13xx / CC26xx SPI driver
      dts: add CC13xx / CC26xx SPI bindings and nodes
      boards: cc26x2r1_launchxl: enable support for SPI
      boards: cc1352r1_launchxl: enable support for SPI
      soc: cc13x2_cc26x2: support setting CCFG values via Kconfig
      boards: cc1352r1_launchxl / cc26x2r1_launchxl: enable ROM bootloader

Bub Wei (2):
      samples: net: zperf: Add __packed for zperf_udp_datagram
      samples: net: zperf: Remove unnecessary main

Cami Carballo (3):
      tests: fdtable: add tests
      tests: base64: add tests for error paths
      tests: net: increase stack size

Carles Cufi (46):
      west: build: Use officially documented CMake options
      west: build: Add new pristine cmd-line and config option
      doc: extract_content: Allow for absolute paths in deps
      drivers: Bluetooth: Generalize IC-specific setup hook
      scripts: west: Run pristine.cmake directly instead of the target
      cmake: Split out board listing from usage
      west: Implement CMake helpers in scripts/west_commands
      west: Add a boards command
      west: build: Construct CalledProcessError with positional args
      west: boards: Use the new zcmake module name
      Bluetooth: controller: hal: Fix PPI macro naming
      west: Add bash completion file
      west: Add completion command
      doc: west: Document west installation in-depth
      boards: holyiot_yj16019: Remove counter from supported
      tests: counter: Enable nRF52810 testing
      kernel: Fix usage of CONFIG_SYS_CLOCK_EXISTS
      soc: nrf: Conditionally enable clock control and timer
      samples: basic: Add a minimal sample
      doc: coding style: Expand the list of keywords with braces
      cmake: Fix path handling for ZEPHYR_BASE
      doc: CMake: Locate Python executable before processing modules
      west: Use find_build_dir in run_common
      west: build: Configurable build folder format
      doc: extensions: Refactor cmake build instructions generation
      doc: Cleanup references to cmake
      doc: extensions: Default to 'all' in 'tool'
      Bluetooth: hci_uart: Use DT for the hci_uart UART
      Bluetooth: hci_uart: Assert if device is NULL
      west: runners: Guess build folder
      drivers: rtc: Adapt to new counter API
      cmake: Encode and decode in UTF-8 in build system
      west: Load CMakeCache.txt as a UTF-8 encoded file
      boards: nrf52840_pca10059: Enable ADC in DT
      samples: usb: console: Remove overlay file
      doc: getting_started: Add CMake snap installation option
      doc: getting_started: Document DTC version installation
      doc: getting_started: Remove Linux distro versions
      doc: Consolidate Python and pip documentation
      doc: Minor fixes to the Getting Started guide
      cmake: Instruct Python to use UTF-8 on Windows
      tests: mesh_shell: Optimize prj.conf to fit in nrf51
      samples: net: civetweb: Remove strcspn() implementation
      doc: guides: tools: Fix URL to nRF Command-line tools
      doc: Update Slack invitation link
      doc: getting started: Use -U when installing west

Carver Forbes (1):
      drivers/counter_cmos.c: Add config struct

Charles E. Youse (87):
      uart/ns16550, drivers/pcie: add PCI(e) support
      drivers/gpio_intel_apl.c: fix return value for gpio_pin_read()
      drivers/gpio/gpio_intel_apl: remove dependency on shared interrupts
      drivers/pcie: verify PCI(e) assigned interrupts
      boards/up_squared: declare myself King of the up_squared
      boards/galileo: adjust PCI-related configuration
      drivers/uart_ns16550: remove unnecessary #include
      drivers/pcie: add support to read wired IRQ configuration
      drivers/uart_ns16550: move UART configuration boilerplate to template
      drivers/uart_ns16550: enable auto IRQ detection for PCI(e) endpoints
      boards/x86/up_squared: move UART configuration to apollo_lake.dtsi
      drivers/uart_ns16550: fix style issues flagged by Zephyrbot
      arch/x86: CONFIG_BOOTLOADER_UNKNOWN renamed to CONFIG_X86_MULTIBOOT
      include/sys_clock.h: simplify _NEED_PRECISE_TICK_MS_CONVERSION
      include/sys_clock.h: consolidate identical branches in __ticks_to_ms
      boards/up_squared: remove CONFIG_SBL_FIXUP
      boards/up_squared: temporarily remove I2C support
      boards/up_squared: remove SBL-specific board configuration
      drivers/i2c/i2c_dw.c: templatize device configuration boilerplate
      drivers/i2c/i2c_dw.c: rewrite for PCI(e) support
      x86/apollo_lake: add I2C interfaces to devicetree
      boards/up_squared: I2C support added (back) in
      drivers/i2c_dw: update CODEOWNERS
      kernel/sched.c: refactor k_sleep() implementation for varied timescales
      kernel/sched.c: add k_usleep() API function
      tests/kernel/sleep: add tests for k_usleep() API
      soc/apollo_lake: boards/up_squared: move UART fixups to SoC
      boards/up_squared: soc/apollo_lake: devicetree default to status=""ok""
      boards/up_squared: soc/apollo_lake: enable UARTs per board, not SoC
      boards/up_squared: soc/apollo_lake: I2C driver selection at SoC
      soc/x86/apollo_lake: remove legacy PCI support
      boards/x86/gpmrb: add Gordon Peak MRB board
      arch/x86: add support for Multiboot boot information structure
      arch/x86: drivers/display: add framebuffer driver w/ multiboot support
      arch/x86: disable i8259 in crt0.S
      arch/x86: move MSR definitions to include/arch/x86/msr.h
      arch/x86: do not redefine MSR regs in crt0.S
      arch/x86: x2APIC support is not specific to jailhouse
      boards/x86_jailhouse: remove support for Jailhouse hypervisor
      arch/x86: add x2APIC-aware accessors for local APIC access
      drivers/loapic_intr.c: clean up local APIC access
      drivers/timer/loapic_timer.c: migrate to new local APIC accessors
      drivers/interrupt_controller/loapic_intr.c: enable x2APIC support
      drivers/pcie/shell: add basic probe for MSI-X capability
      arch/x86/Kconfig: remove CONFIG_IA32_LEGACY_IO_PORTS
      arch/x86/Kconfig: remove CONFIG_ISA_IA32
      arch/x86/Kconfig: remove CONFIG_CMOV
      arch/x86: split Kconfig files by sub-architecture
      arch/x86: split CMakeLists.txt into subarch-specific files
      arch/x86: reorganize core source files
      drivers/counter/counter_cmos.c: implement counter with PC AT ""CMOS"" RTC
      tests/drivers/counter: add test for counter_cmos.c
      arch/x86: remove CR4_PAE_DISABLE mask
      arch/x86: used fixed initial EFLAGS on thread creation
      arch/x86: remove old PRINTK() debugging macro
      arch/x86: relocate and rename SYS_X86_RST_* constants
      boards/x86/quark_d2000_crb: drop support for Quark D2000 dev board
      soc/x86/intel_quark: remove support for Quark D2000 SoC
      drivers/adc/adc_intel_quark_d2000: remove Quark D2000 ADC driver
      drivers/interrupt_controller/mvic.c: remove MVIC interrupt controller
      arch/x86: remove CONFIG_X86_FIXED_IRQ_MAPPING support
      drivers/timer/apic_timer.c: new local APIC timer for TICKLESS_KERNEL
      boards/x86/up_squared: default to new local APIC timer
      tests/kernel/context: add case for CONFIG_APIC_TIMER
      arch/x86: merge asm_inline_gcc.h with asm_inline.h
      arch/x86: clean up model-specific register definitions in msr.h
      arch/x86: move include/arch/x86/asm.h to include/arch/x86/ia32/asm.h
      arch/x86: move arch/x86/syscall.h to arch/x86/ia32/syscall.h
      arch/x86: move include/arch/x86/arch.h to ia32/arch.h
      arch/x86: move include/arch/x86/segmentation.h to ia32/segmentation.h
      arch/x86: remove arch-specific ffs.h, rely on compiler built-ins
      arch/x86: merge include/arch/x86/asm_inline.h into arch.h
      arch/x86: move include/arch/x86/sys_io.h to ia32/sys_io.h
      arch/x86: move 32-bit linker script to ia32/ directory
      arch/x86: update msr.h to be safe with CONFIG_X86_LONGMODE
      arch/x86: eliminate include/arch/x86/irq_controller.h
      arch/x86: move arch/x86/include/mmustructs.h to ia32/mmustructs.h
      arch/x86: eliminate arch/x86/include/asm_inline.h
      arch/x86: remove swapstk.h and references to it
      arch/x86: eliminate cache_private.h
      arch/x86: move exception.h to ia32/exception.h
      arch/x86: refactor kernel_arch_data.h
      arch/x86: refactor kernel_arch_thread.h
      arch/x86: move kernel_arch_func.h to ia32/
      arch/x86: refactor offsets_short_arch.h
      arch/x86: remove support for CONFIG_REALMODE
      thread.c: remove vestigial CONFIG_INIT_STACKS cruft

Charles Youse (6):
      include/uart.h: remove unused PCI references
      boards/x86/up_squared: update documentation to include HSUART info
      ethernet/eth_e1000.c: change to new PCI(e) functions
      interrupt_controller/loapic_intr.c: remove unused MPtables constants
      boards/x86/acrn: fix documentation to reflect ""demo"" nature
      drivers/pcie: do not verify configured IRQ

Christian Taedcke (5):
      board: efm32hg_slstk3400a: Add storage partition
      board: efm32pg_stk3402a: Add storage partition
      board: efm32wg_stk3800: Add storage partition
      board: efr32mg_sltb004a: Add storage partition
      board: efr32_slwstk6061a: Add storage partition

Christian Tavares (4):
      lib: updatehub: Add UpdateHub.io support
      lib: updatehub: add suport a CoAPS/DTLS
      lib: updatehub: add support ipv6
      samples: gui: lvgl: fix the nRF52840 pins to run sample

Christophe Priouzeau (6):
      manifest: update to latest hal_stm32 revision.
      drivers/i2c: Add support of stm32mp1
      drivers/pinmux: add i2c5 pinmux for stm32mp1x
      soc: stm32mp157: add I2c support
      boards: stm32mp157c_dk2i: add support of i2c5
      boards: stm32mp157c_dk2: add ic2 support for arduino connector

Christopher Métrailler (1):
      env: ignore unset var

Daniel Egger (2):
      samples: net: lwm2m: use real temperature values instead of dummy
      samples: net: lwm2m_client: If hwinfo interface is enabled, use it

Daniel Leung (5):
      tests/kernel/schedule_api: also test without time slicing
      tests/kernel/device: extends test for code coverage
      cmake: bump min SDK version 0.10.1
      x86_64: minimally preparing for enabling newlib
      cmake: use sdk-ng built toolchain for x86_64

Danny Oerndrup (20):
      cmake: Toolchain abstraction: Introduce toolchain_cc_warning_dw_[1-3]
      cmake: Toolchain abstraction: Introduce toolchain_cc_warning_base
      cmake: Toolchain abstraction: Introduce toolchain_cc_warning_extended
      cmake: Toolchain abstraction: Added missing colon to some <at>Intent's
      cmake: Toolchain abstraction: Introduce macros for MISRA SANE flags
      cmake: Toolchain abstraction: Abstraction of implicit-int error flag
      cmake: Toolchain abstraction: Introducing toolchain_cc_freestanding
      cmake: Toolchain abstraction: Introducing macro toolchain_cc_imacros
      cmake: Toolchain abstraction: Introducing macro toolchain_cc_nocommon
      cmake: Toolchain abstraction: Introducing macro toolchain_cc_cstd_flag
      Kconfig: Introducing ARCH_CHOICE symbol for Architecture choice group
      cmake: Toolchain abstraction: Allow for out-of-tree cmake includes
      debug: tracing: Rewrite assert on current_thread in CPU stats module
      cmake: Toolchain abstraction: Abstract compiler flag for add debug info
      cmake: Toolchain abstraction: Abstraction of binary tools, foundation.
      cmake: Toolchain abstraction: Abstraction of print memory usage.
      cmake: Toolchain abstraction: Abstraction of binary tool, objcopy.
      cmake: Toolchain abstraction: Abstraction of binary tool, objdump.
      cmake: Toolchain abstraction: Abstraction of binary tool, readelf.
      cmake: Toolchain abstraction: Abstraction of binary tool, strip.

David B. Kinder (16):
      doc: add missing doc top labels
      doc: fix watchdog API documentation
      doc: fix mentions of Wi-Fi trademark name
      doc: add references to builds mailing list
      doc: fix devicetree doc formatting
      doc: fix malformed label in shields doc
      doc: fix typo in gpmrb doc
      doc: add google analytics tracking to docs
      doc: fix doxygen comments with embedded reST
      doc: fix Kconfig misspellings
      doc: fix misspellings in documentation
      doc: fix broken references to zephyr files
      doc: use @rst/@endrst for ReST in headers
      doc: simplify doc redirection messages
      doc: fix doxygen INPUT path; brand html output
      doc: add doc home link in left nav

David Leach (1):
      logging: Fix misspelled CONFIG_RISCV32

Dennis Wildmark (3):
      usb: bluetooth: l2cap buffer size now configurable
      DFU: img util: Fixed warnings when compiling with newlib
      dfu: mcuboot: Added defines for upgrade request modes

Derek Hageman (25):
      soc: sam0: Fix SAMD20 IRQ assignments
      drivers: spi: sam0: Implement DMA async API
      CODEOWNERS: Add ownership for SAM0 DMA driver
      drivers: pinmux: sam0: Remove defines from dts_fixup.h
      drivers: gpio: sam0: Remove defines from dts_fixup.h
      drivers: flash: sam0: Remove defines from dts_fixup.h
      drivers: watchdog: sam0: Remove defines from dts_fixup.h
      drivers: timer: sam0: Remove RTC defines from dts_fixup.h
      drivers: usb: sam0: Remove defines from dts_fixup.h
      soc: sam0: Remove SERCOM defines from dts_fixup.h
      drivers: adc: Add SAM0 ADC driver
      tests: drivers: adc: Add SAM0 support
      drivers: i2c: Add SAM0 I2C driver
      CODEOWNERS: Add ownership for SAM0 I2C driver
      drivers: gpio: sam0: Add interrupt support
      tests: drivers: uart: Fix async write abort test
      drivers: i2c: sam0: Fix missing break in speed setup
      Revert ""tests: drivers: uart: Fix async write abort test""
      tests: drivers: uart: Explicitly test incremental receive length
      include/uart.h: Clarify async receive event length
      drivers: counter: Add SAM0 basic counter support
      drivers: dma: sam0: Implement get_status API
      drivers: serial: sam0: Implement DMA async API
      drivers: sam0: Fix deprecated IRQ macro usage
      drivers: sam0: Fix deprecated instance macro usage

Emanuele Di Santo (7):
      boards: arm: nrf52840_pca10090: update log settings
      boards: arm: nrf52840_pca10090: add a GPIO reset line
      samples: bluetooth: hci_uart: update nrf52840_pca10090 config
      Bluetooth: hci: h4: use GPIO reset for nrf52840_pca10090 controllers
      boards: arm: nrf52840_pca10090: fix warning in board.c
      boards: arm: nrf52840_pca10090: swap error for assert in board.c
      Bluetooth: services: battery service enhancements

Erik Brockhoff (3):
      bluetooth: controller: Update slot reservation time calculation for ADV
      bluetooth: controller: Update to use new EVENT_IFS_US define
      bluetooth: controller: Add def's re. update to slot reservation calc

Erwan Gouriou (82):
      dts: stm32f412Xg: Factorize package definitions
      hal: stm32wbxx: Add HAL for the STM32WB series
      ext/hal/st: Adapt stm32cube folder to stm32wb introduction
      soc/arm/st_stm32: Add support for stm32wb soc
      dts/arm/st: Provide basis for stm32wb device tree
      drivers/clock_control: Add support to stm32wb series
      drivers/interrupt_controller: stm32: Add support for stm32wb series
      soc/arm/st_stm32: stm32wb: Add gpio support
      dts/arm/st: Add serial nodes on stm32wb
      drivers/pinmux: stm32: Add pinmux definitions for stm32wb (LP)U(S)ART
      boards: Add support for nulceo_wb55rg
      CODEOWNERS: Set owner to ext/hal/st
      CODEOWNERS: Add codeowner to dts/bindings/*/st,stm32
      ext/hal/st: stm32cube: Update License Link for stm23cube packages
      scripts/dts: globals: parse gpio-map properties for connector nodes
      drivers/serial: stm32: Optimize LPUART code
      drivers: serial: Enable LPUART for STM32WB
      boards: nucleo_wb55rg: Configure LPUART
      stm32: Remove redundant I2C variant Kconfig symbols definitions
      driver/i2c: stm32: Remove prompt on IP version symbols
      boards: disco_l475_iot1: create .dtsi connector file
      ext/hal/st: stm32cube Kconfig fix
      boards: nucleo_wb55rg: configure LPUART
      soc: stm32: Remove unused soc_register header file
      ext/hal/st/lib: stm32wb hci shared ram driver
      drivers/bluetooth/hci: Implement HCI driver for stm32wb
      ext/hal: stm32wb: Configure M0 FW in LL only
      include/arch/arm: linker.ld: Add shared memory sections definitions
      dts: stm32wb: Delete useless sram definitions
      boards: nucleo_wb55rg: Configure HCI driver
      drivers/flash: stm32wb: Add driver for stm32wb
      dts: stm32wb: Limit flash size to 812K
      boards: nucleo_wb55rg: Configure flash partitions
      drivers/flash: stm32wb: Add HSEM
      drivers/clock_control: stm32: Factorize series specific code
      drivers/clock_control: stm32: Split Kconfig file
      CODEOWNERS: Remove codeowners for /drivers/clock_control/*stm32f4*
      drivers/interrupt_controller: stm32: Rework stm32_exti_enable
      drivers/interrupt_controller: stm32: Remove unused code
      drivers: interupt_controller: stm32 Move exti_irq_table to const
      drivers: spi hci: Add spi dedicated rx thread
      soc/arm/st_stm32: Replace STM32 specific core selection option
      drivers/clock_control: stm32: Leftover from driver clean up
      soc: stm32: STM32L0: Remove useless package digit
      soc: stm32: STM32L4: Remove useless package digit
      soc: stm32: STM32WB: Remove useless package digit
      soc: stm32: STM32F2: Remove useless package digit
      soc: stm32: STM32F4: Remove useless package digit
      soc: stm32: STM32F7: Remove useless package digit
      boards: nucleo_wb55rg: Enable flash and debug with pyocd
      scripts: Upgrade pyocd for pack support
      soc: stm32f3: Delete obsolete FLASH_PAGE_SIZE Kconfig symbol
      west: Update hal_stm32 module to head following cube updates
      drivers/usb/device: stm32: Remove reference to unsupported low speed
      west.yml: Update hal_stm32 to fix I2C_SPEED_FAST redefinition
      soc: stm32f7: Fix fixup file for uart devices
      drivers/interrupt_controller: stm32: Fix table irq reading
      drivers: stm32: Fix leading space warnings
      west: Bump hal_stm32 to version supporting STM32H7 series
      modules: update stm32cube Kconfig with H7
      soc/arm: Provide basic support for STM32H7 series
      dts: STM32H747 basic device tree description
      drivers/clock_control: STM32H7 support
      drivers/interrupt_controller: stm32: Add support for stm32h7
      drivers/gpio: Add support on STM32H7 series
      drivers/serial: stm32: Add support for STM32H7 series
      drivers/pinmux: stm32: Add UART headers for STM32H7
      boards: Add stm32h747i_disco, C-M7 target
      soc: stm32h7: Add support for Cortex-M4 core
      dts: stm32h7: Add dtsi for m4 core
      drivers/clock_control: stm32h7: Disable configuration for CM4 core
      drivers/gpio: stm32: Add semaphore on gpio_configure
      boards: stm32h747i_disco: Add m4 target
      boards: stm32h747i_disco: Provide doc
      dts/arm/st: l0: Fix gpioe reg address
      boards: stm32h747i_disco: Fix picture size
      dts/arm/st: Remove nodes i2s4, i2s5 and i2s6
      drivers/gpio: stm32h7: Don't use HSEM_CR_COREID_CURRENT as process id
      stm32: clock_control: Enforce HCLK prescaler value
      boards: stm32h747i_disco: Enforce same clock configuration on both ...
      boards: stm32h474i_disco: Fix m4 core sys clock
      boards: nucleo_wb55rg: Add link to reference manual

Filip Kokosinski (11):
      dts: bindings: sram: add SiFive dtim0 bindings
      dts: riscv32: microsemi-miv: add flash and sram
      dts: riscv32: hifive1: add flash
      soc: riscv32: miv: soc.h: use defines from device tree
      soc: riscv32: sifive-freedom: soc.h: use defines from device tree
      riscv32: use device tree defines in linker
      drivers: serial: add LiteUART driver
      drivers: timer: add LiteX timer driver
      drivers: interrupt_controller: add LiteX interrupt controller driver
      soc: riscv32: add LiteX VexRiscV SoC
      boards: riscv32: add LiteX VexRiscV board

Findlay Feng (3):
      bluetooth: Fix an undefined behavior
      drivers: spi: Fix spi related files of stm32f1x
      drivers: gpio: add stm32f1x SWJ configuration

Flavio Ceolin (6):
      arch: all: Remove legacy code
      arch: all: Remove not used struct _caller_saved
      sanitycheck: Fix an error in scan_path exception
      security: kernel: Fix STACK_POINTER_RANDOM dependency
      x86: Make .rodata readonly
      libc: types: Remove wrong definition

Francisco Munoz (10):
      dts : Introduce gpio node entries for Microchip MEC
      drivers: gpio: Introduce microchip gpio driver
      soc : microchip_mec : Add gpio driver common definitions
      boards: microchip_mec: Introduce gpio to the eval board
      drivers: pinmux: Pinmux driver for Microchip SOCs
      soc: microchip_mec: mec1501 Add pinmux definitions
      boards: mec15xxevb_assy6853: Use the pinmux api
      boards: mec15xxevb_assy6853: Documentation improvements
      ext: hal: microchip:  Fix compilation issue in HAL
      boards: mec15xxevb_assy6853: Update debug control flag

Francois Ramu (11):
      soc: arm: st_stm32: Add STM32G071 SoC series
      drivers: flash: Add STM32G0XX flash support
      drivers: clock_control: Add STM32G0XX clock support
      drivers: pwm: Add STM32G0XX pwm support
      drivers: pinmux: Add STM32G0X pinmux support
      drivers: gpio: Add STM32G0X pinmux support
      drivers: interrupt_controller: Add STM32G0X interrupt support
      soc: arm: uart: Add STM32G0X UART support
      boards: arm: Add nucleo for nucleo_g071rb board
      dts: remove unused clock-controllers property #17122
      drivers: usb/stm32: use dts information to populate clock settings

François Delawarde (4):
      subsys/settings: Allow to register custom backends in settings subsystem
      subsys/settings: Use strncpy instead of strcpy in settings_runtime
      subsys/settings: Correct size in strncpy to avoid unterminated strings
      bluetooth: fix GATT database hash done too many times

Geoffroy Van Cutsem (1):
      boards/x86: scripts: build_grub.sh to use grub-2.04-rc1-17-g8e8723a6b

George Dima (1):
      boards: galileo: Fix PINMUX_FUNC_D for io_pin 9.

Georgij Cernysiov (13):
      drivers: counter: stm32: fix LSE clock source for not F4 SoC
      drivers: serial: stm32: remove forced RXNE clearance
      drivers: serial: stm32: add err_check
      drivers: serial: stm32: add serial hw flow control
      drivers: pinmux: stm32: add F4 RTS/CTS definitions
      drivers: pinmux: stm32: add L4 RTS/CTS definitions
      drivers: pinmux: stm32: reformat L4 pinmux
      drivers: serial: stm32: dts binding, and fixup for flow control
      drivers: pinmux: stm32: add F4 RTS/CTS definitions
      boards: arm: st, stm32: add jlink runner args
      boards: arm: disco l475 iot: correct documentation
      doc: guides: debugging: probes: correct J-Link usage
      drivers: rtc: stm32: correct tm_mon conversion

Greg S. Woods (1):
      entropy: fix C++ compiler warnings

Habib Zaid (1):
      soc: arm: stm32: Updated SRAM Region Definitions

Harry Jiang (3):
      board: stm32_min_dev: Add USB support
      board: stm32_min_dev: add the missing usb node
      fs/nvs: fix the sector size check

Henrik Brix Andersen (65):
      gpio: rv32m1: enable GPIO port clocks
      boards: rv32m1_vega_ri5cy: add STS LED to DTS
      boards: rv32m1_vega: fix I2C bus references
      sensor: fxos8700: add support for hardware reset pin
      interrupt_controller: rv32m1: fix intmux driver initialization priority
      drivers: i2c: rv32m1: add I2C driver for the RV32M1 RI5CY SoC
      boards: rv32m1_vega: enable the onboard I2C busses and FXOS8700 sensor
      samples: sensors: fxos8700: whitelist rv32m1_vega board
      boards: holyiot_yj16019: add support for the Holyiot YJ-16019 board
      drivers: led: ht16k33: add LED driver for Holtek HT16K33 LED driver
      scripts/dts: allow node to be child on one bus and parent on another
      drivers: gpio: ht16k33: add GPIO driver for Holtek HT16K33 LED driver
      samples: drivers: ht16k33: add sample application for the HT16K33
      drivers: i2c: mcux_lpi2c: add support for I2C_0
      ext: hal: nxp: mcux: add device and driver files for KE1xF series SoCs
      clock_control: introduce mcux pcc driver
      drivers: serial: uart_mcux_lpuart: add support for LPUARTs with two IRQs
      drivers: clock_control_mcux_sim: add support for clkout
      soc: arm: ke1xf: add NXP Kinetis KE1xF SoC series support
      boards: twr-ke18f: add support for the NXP TWR-KE18F board
      soc: arm: nxp: ke1xf: add RTC support
      boards: arm: twr_ke18f: add RTC to list of supported peripherals
      soc: nxp: ke1xf: enable code cache
      drivers: led: ht16k33: add missing variable initialization
      soc: nxp: ke1xf: add I2C support
      boards: arm: twr_ke18f: add I2C support
      tests: kernel: common: add missing userspace tag
      drivers: counter: mcux_rtc: allow setting a new alarm from the callback
      ext: segger: update to SystemView v2.52h
      boards: twr_ke18f: list hwinfo as supported feature
      tests: flash_map: configure MPU to allow flash writes on twr_ke18f
      ext: hal: nxp: mcux_lpspi: add support for NXP Kinetis LPSPI modules
      soc: nxp: ke1xf: add SPI support
      boards: arm: twr_ke18f: add SPI support
      tests: drivers: spi_loopback: add twr_ke18f configuration
      tests: benchmarks: latency_measure: use 0.1s sys clk tick for twr_ke18f
      boards: twr_ke18f: configure SPI CS pins as GPIO if not used for SPI
      drivers: adc: mcux_adc12: add driver for the NXP ADC12 module
      soc: nxp: ke1xf: add ADC12 support
      boards: arm: twr_ke18f: add ADC support
      tests: drivers: adc_api: add support for the twr_ke18f board
      drivers: adc: mcux_adc12: fix compilation
      drivers: can: add support for two CAN controller instances
      tests: drivers: can: api: add support for CAN_0
      dts: can: allow individual specification of prop seg and phase seg1 quanta
      drivers: can: add support for the NXP Kinetis FlexCAN controller
      drivers: clock_control: mcux_scg: add NXP MCUX SCG clock control driver
      soc: arm: nxp: ke1xf: enable MCUX SCG clock controller driver
      soc: nxp: ke1xf: add CAN support
      boards: twr_ke18f: enable CAN controller
      samples: drivers: CAN: add support for twr_ke18f board
      tests: drivers: can: stm32: determine CAN device at compile-time
      gitignore: ignore Emacs TAGS file
      samples: sensors: fxos8700: add polling support
      samples: sensors: fxos8700: add support for twr-ke18f board
      drivers: watchdog: mcux_wdog32: add driver for the NXP Kinetis WDOG32
      soc: arm: nxp: ke1xf: add watchdog support
      boards: twr_ke18f: document watchdog support
      boards: match specified jlink swd speed when using pyocd runner
      tests: board_shell: enable ADC shell
      drivers: can: flexcan: implement timestamp for RX frames
      drivers: clock_control: mcux_mcg: add driver for NXP Kinetis MCG
      drivers: pwm: mcux_ftm: use device tree for obtaining clock frequency
      soc: arm: nxp: ke1xf: add FlexTimer (FTM) module support
      boards: arm: twr_ke18f: add PWM LEDs

Henrik Malvik Halvorsen (1):
      drivers: sensor: Add ADXL362 interrupt handling

Howard Liu (1):
      doc: fix build command on Windows for VEGAboard

Håkon Øye Amundsen (3):
      cmake: remove incorrect statement from doc
      cmake: helper function for importing library
      net: mqtt: add mqtt_readall_publish_payload()

Ioannis Glaropoulos (116):
      soc: arm: sam3x: add MPU capability
      CODEOWNERS: code-owner for SAM3X
      CODEOWNERS: add code-owner for Arduino Due
      soc: arm: sam3x: minor fixes in soc.h and arm_mpu_regions.c
      boards: arduino due: default to building with MPU support
      tests: kernel: mem_protect: protection: fix test-case filter
      soc: arm: remove redundant CPU_CORTEX_M selection
      soc: arm: select CPU_HAS_SYSTICK in ARCH Kconfig
      soc: arm: rename CPU_HAS_SYSTICK to CPU_CORTEX_M_HAS_SYSTICK
      soc: arm: remove default selection of system timer for ARM platforms
      arch: arm: restrict IRQ lock to minimum during pendSV exception
      arch: x86: mmu: typo fixes
      kernel: mem_domain: update name/doc of API function for partition add
      arch: arm: drop FP full-access for builds without user mode
      arch: arm: disable automatic FP stacking in unshared FP registers mode
      arch: arm: remove FP-context from ESF in unshared FP registers mode
      arch: arm: remove _preempt_float in unshared FP registers mode
      arch: arm: remove FP activation in system boot
      arch: arm: clear FPSCR before main()
      arch: arm: add internal structure to ESF
      arch: remove unused tracing_arch.h
      arch: arm: fix ESF pointer in SecureStackDump()
      dts: nordic: add missing erase-block-size entry
      soc: arm: move z_clearfaults() in kernel_arch_init()
      arch: arm: remove redundant definitions of typeof
      arch: arm: print thread name in z_NanoFatalErrorHandler()
      dts: arm: add DTS binding for ARM MPU peripheral
      arch: arm: mpu: use DTS-defined number of MPU regions
      soc: arm: add ARM MPU node info and fixup for ARMv8-M SoCs
      soc: arm: add ARM MPU node info and fixup for Cortex-M7 SoCs
      dts: atmel: sam0: correct ARM Cortex-m variant in dtsi
      dts: arm: delete systick node from SoCs not having the SysTick timer
      tests: benchmarks: timing_info: fix start of swap time
      arch: arm: enable lazy state preservation at boot in FP sharing mode
      arch: arm: carve only basic stack frame at thread init
      arch: arm: extend use of arch.mode variable in FP sharing mode
      arch: arm: fp sharing: save & restore FP registers in context-switch
      kernel: init: use K_THREAD_STACK_SIZEOF when switching to main thread
      kernel: remove redundant #ifdef CONFIG_MULTITHREADING
      arch: arm: minor clean-up in interrupt stack size derivation
      arch: arm: add z_ prefix to _PlatformInit
      soc: arm: nordic_nrf: force platform-specific initialization
      arch: arm: mpu: move internal API inside arch/arm/cortex_m/mpu
      tests: kernel: userspace: explicitly declare function for the test
      arch: arm: mpu: remove arm_core_mpu_enable/disable internal API
      ext: hal: cmsis: Update ARM CMSIS headers to version 5.5.1
      arch: arm: userspace: don't subtract MPU guard from top of stack
      arch: arm: fix start of MPU guard in stack-fail check (no user mode)
      kernel: introduce k_float_disable system call
      arch: restrict FLOAT and FP_SHARING for x86 and Arm
      arch: implement arch-specific float disable routines
      tests: kernel: fp_sharing: call k_float_disable() for ARM
      doc: kernel: rework doc section of shared FP registers mode
      tests: benchmarks: timing_info: add user space tag
      scripts: gen_priv_stacks: remove unused variable
      CODEOWNERS: update code-onwers' list for gen_priv_stacks.py
      tests: kernel: userspace: correct address of thread priv stack start
      include: scripts: fix typos in priv_stacks.ld
      kernel: app_memdomain: remove unused defines
      tests: kernel: fatal: add HW stack check for priv stack
      tests: kernel: fatal: add explicit no user-mode test case
      arch: common: nocache: fix linker section definition
      arch: arm: re-organize thread stack macro defines in arch.h
      arch: arm: introduce macro to describe the privilege stack alignment
      tests: kernel: mem_protect: use correct define for MEM_REGION_ALLOC
      scripts: gen_priv_stacks.py: use the right alignment for priv stacks
      arch: arm: expose start/end limits of the thread priv stack section
      arch: arm: make priv stack guard programming similar to normal guard
      tests: kernel: fatal: add explicit test case for ARM and FP Sharing mode
      kernel: mem_domain: fix warning in ASSERT expression
      lib: libc: newlib: define USED_RAM_END_ADDR only where it is needed
      lib: libc: fix alignment of HEAP base address for ARM
      tests: kernel: submit a simple test for zero-latency irqs
      tests: kernel: arm runtime nmi: add arm tag
      tests: kernel: add simple test for the ramfunc feature
      arch: arm: allocate a wide stack guard for FP-capable threads
      arch: arm: allocate a wide priv stack guard for FP-capable threads
      arch: arm: mpu: program a wide MPU stack guard for FP capable threads
      arch: arm: rework stack fail checking for FP capable threads
      arch: arm: update thread options flag and CONTROL atomically
      doc: reference: float: document ARM thread tag recommendation
      tests: kernel: fatal: check stack overflow of FP capable threads
      arch: arm: mpu: minor fix to the start of the guard
      tests: remove redundant CONFIG_HW_STACK_PROTECTION=y setting
      arch: arm: allow user to fall-back to MPU-based guards in ARMv8-M
      tests: kernel: fatal: run test for ARMv8-M with MPU stack guards
      soc: nordic: nrf9160: add IPC capabilities
      userspace: minor typo fixes in various places
      arch: arm: userspace: correct inline comment for bad syscalls
      arch: arm: userspace: don't use the default stack in z_arm_do_syscall
      tests: kernel: move arm-specific kernel tests under tests/arch/arm
      tests: arch: x86: move static_idx under tests/arch/x86
      kernel: fix #endif quard error for k_float_disable
      arch: x86: make z_arch_float_disable return -ENOSYS if not supported
      tests: kernel: fp_sharing: move fp_sharing test
      tests: kernel: fp_sharing: add test for k_float_disable
      tests: kernel: critical: alternative test-case for SAM SoCs with WDT
      tests: arch: arm: contribute a test for arm swap
      tests: arch: arm: enhance swap test for FP sharing
      tests: arch: arm_thread_swap: add README file
      CODEOWNERS: adding code-owner for arch/arm test suite
      boards: arm: mps2_an385: clean up redundant Kconfig setting
      boards: arm: mps2_an521: add QEMU target and coverage
      boards: arm: mps2_an521: some trivial Kconfig fixes
      arch: arm: cleanup workaround for QEMU Cortex-M3
      tests: kernel: fp_sharing: increase robustness of float_disable test
      arch: arm: only allow OOPS and STACK_CHK_FAIL from nPRIV mode
      tests: kernel: userspace: fix test skipping for ARC
      dts: arm: nrf9160: minor typo fix
      soc: arm: nrf9160: add missing NRF_UICR definition
      tests: several tweaks for passing tests on qemu
      boards: arm: mps2-an521: fix number of MPU regions in DTS
      boards: arm: mps2_an521: adding support for qemu
      arch: arm: BusFault, NMI, and HardFault in Secure state when in test
      boards: arm: mps2_an521: force secure firmware image by default
      release: Zephyr 2.0.0-rc1

Ioannis Konstantelias (8):
      soc: stm32: Remove package digit for STM32L496XG
      boards: Change to new STM32L496XX symbol
      soc: stm32: Add STM32L496XE support
      drivers: pinmux: stm32l4: Add extra pin functions
      dts: pinctrl: stm32l4: Add alternative USART3 pair
      drivers: flash: stm32: Fix insufficient wait time
      drivers: flash: stm32l4x: Support SOCs with < 1MB
      stm32: pinmux: spi: Opt for lower power consumption

Jacob Siverskog (4):
      cmake: Prevent infinite recursion
      doc: dfu: Fix mcuboot reference
      doc: dfu: Fix module links
      doc: Fix typos in flashmap.h

Jakob Olesen (6):
      misc: Portable math_extras.h implementations.
      toolchain: Define a HAS_BUILTIN(x) macro in toolchain.h.
      misc: Implement math_extras.h function with GCC builtins.
      misc: Always test the portable version of the math_extras.h functions.
      misc: Replace uses of __builtin_*_overflow() with <misc/math_extras.h>.
      shell: Initialize va_list variables portably.

Jakub Rzeszutko (6):
      shell: prompt configuration during project generation
      arm: nrf: Add support for the nRF52811
      boards: arm: Add Nordic nRF52811 board
      shell: add select command
      shell: add test for new built-in command
      CODEOWNERS: update due to nickname change

Jamie McCrae (1):
      tests: net: lib: dns: dns_addremove

Jan Sturm (1):
      boards: stm32f4_disco:  added missing LED aliases

Jan Van Winkel (21):
      west: Renamed cmake.py to zcmake.py
      sanitycheck: Execute binary in output directory
      dts: posix: Add DTS support for POSIX architecture
      drivers: flash: Added native POSIX flash driver
      tests: Added native POSIX to flash based tests
      gui: Corrected RGB888 pointer in LVGL write function
      fs: Added API to read mount point
      native_posix: Added support to access flash via FUSE
      samples: fs: Added  FS shell sample
      gui: Move lvgl into a zephyr module
      dts: posix: Added dummy serial current-speed entry
      driver: display: Clarified blanking API
      drivers: ssd16xx: Removed blanking support
      drivers: sdl: Added support to set def pix format
      samples: fs: Added libfuse req. to fs shell README
      samples: fs: Corrected flash ctrl name in fs shell
      west: gui: Updated lvgl revision
      gui: Add support for lvgl API version 6
      gui: Disable LVGL features by default
      west: gui: Added support for lvgl API V6
      gui: Corrected paths in Zephyr to LVGL FS mapping

Jim Paris (4):
      fs: add support for mount point listing on vfs root
      scripts/dts: Support 'io-channels' property just like 'pwms'
      dts/bindings: add '#cells' to nrf-saadc
      scripts/dts: add basic test for IO channel property

Joakim Andersson (44):
      CODEOWNERS: Fix missing '/' in codeowners file
      Bluetooth: controller: Remove incorrect comment
      Bluetooth: controller: Fix unknown rsp received during enc procedure
      Bluetooth: controller: Fix initialization of rl_idx and rpa_gen
      Bluetooth: controller: Fix pdu being overwritten while in use
      Bluetooth: controller: Copy the connect_ind into node_rx
      Bluetooth: controller: Fix compilation without broadcaster or observer
      Bluetooth: controller: Fix rx_ftr and extra overlapping memory
      Bluetooth: host: Fix gatt indicate when conn is NULL
      Bluetooth: controller: Fix scan request when advertising directed
      Bluetooth: GATT: Fix segfault discover descriptors all UUIDs
      Bluetooth: services: Move Heart rate service
      Bluetooth: services: Move health thermometer service
      Bluetooth: services: Move Current Time service sample
      Bluetooth: services: Move HID over GATT service
      Bluetooth: services: Delete unused IPSP sample
      Bluetooth: shell: Fix argument count of bt clear shell command
      kernel: lib: Add convert functions for hex strings and binary arrays
      Bluetooth: host: Move address string parsing to bluetooth API
      Bluetooth: smp: Add LE SC OOB support for central side
      Bluetooth: shell: Add support for LE SC OOB authentication in shell
      Bluetooth: Host: Fix advertiser state flags
      Bluetooth: SMP: Fix peripheral security request with authenticated keys
      Bluetooth: Keys: Fix logging assertions when enabling BT_DEBUG_KEYS.
      Bluetooth: Host: Move BT_DBG out of irq_lock
      Bluetooth: Settings: Fix generated identity not persistently stored.
      Bluetooth: Host: Fix bluetooth address string length
      Bluetooth: Host: Print error codes in hex
      Bluetooth: Host: Fix wrong init address when controller resolved address
      Bluetooth: Host: Fix bug in creating connection with wrong own address.
      Bluetooth: Controller: Fix privacy advertiser connect peer address type
      Bluetooth: SMP: Fix SMP identity distributing IRK for ID 0 always
      Bluetooth: SMP: Fix kernel crash if auth handler is NULL
      Bluetooth: SMP: Use error code for OOB data not available
      Bluetooth: controller: Fix assert in RPA timeout for advertiser
      Bluetooth: Host: Add identity addresses to conn info object
      Bluetooth: shell: Add info command to print connection information
      Bluetooth: shell: Handle error code of bt_conn_auth_cb_register
      Bluetooth: Shell: Use on-air addresses when checking for OOB data
      Bluetooth: Shell: Update sec level help text and validate input
      Bluetooth: SMP: MITM security possible without IO when OOB data present
      Bluetooth: Host: Improve shell OOB handling
      Bluetooth: Host: Add whitelist support in Bluetooth Host API
      Bluetooth: Shell: Add whitelist commands to shell

Joao Cordeiro (2):
      drivers: ieee802154: nrf5: Support when LOG is off
      samples: bluetooth: peripheral: Fix RX buffer size

Johan Hedberg (25):
      Bluetooth: Mesh: Add error checks for scan start/stop
      net: buf: Remove wrong alignment annotation from NET_BUF_SIMPLE()
      Bluetooth: Fix return type for settings read callback
      CODEOWNERS: Add joerchan and remove sjanc for Bluetooth host paths
      Bluetooth: Mesh: Fix RPL storage timeout handling
      Bluetooth: Mesh: Fix postponing storage deadline indefinitely
      Bluetooth: Mesh: Fix missing implementation of Proxy SAR timeout
      Bluetooth: Simplify bt_gatt_notify_cb() API
      Bluetooth: Increase BT_BUF_USER_DATA_MIN to 8
      Bluetooth: Remove unnecessary HCI command data array
      Bluetooth: Remove unused bt_hci_get_cmd_opcode() function
      Bluetooth: Fix expiring RPA when different local identities are used
      Bluetooth: Mesh: Fix segmented message RPL behavior
      Bluetooth: Fix not using log_strdup() for bt_uuid_str()
      Bluetooth: Mesh: Fix missing protocol error timeout
      Bluetooth: Mesh: Fix Public Key mismatch error handling
      Bluetooth: Mesh: Rename reset_link() to reset_adv_link()
      Bluetooth: SMP: Make public key handling more robust
      Bluetooth: Fix public key callback management
      Bluetooth: Mesh: Generate new public key for each provisioning session
      Bluetooth: Mesh: Fix rejecting invalid remote public key
      Bluetooth: Mesh: Fix provisioning send error handling
      Bluetooth: Add dedicated pool for HCI_Num_Completed_Packets HCI event
      Bluetooth: Introduce separate pool for discardable events
      Bluetooth: Mesh: Move under subsys/bluetooth/mesh

Johann Fischer (26):
      usb: usb_device: fix set configuration request
      usb: usb_dfu: do not set bwPollTimeout dynamically
      boards: reel_board: enable pull-up on UART TX pin
      usb: usb_device: fix handlers call for secondary descriptor
      drivers: usb_dc_nrfx: cleanup logging and fix style
      drivers: apds9960: allow to disable Ambient Light Sense
      drivers: apds9960: make ALS and proximity gain configurable
      drivers: apds9960: make proximity pulse length configurable
      drivers: apds9960: allow additional LED current configuration
      tests: build_all: add TI HDC sensor
      sample: ti_hdc: whitelist reel_board and nucleo_l496zg
      usb: sort usb config data by section
      drivers: ssd1673: rename driver to ssd16xx
      drivers: ssd16xx: add defines to resolve coding style issues
      mempool: move BUILD_ASSERT to the end of K_MEM_POOL_DEFINE
      tests: usb: do not set device address
      drivers: usb_dc_nrfx: do not use NRF_USBD_EP_NR_GET in ep_is_valid
      drivers: usb_dc_nrfx: check the device state before disable or uninit
      drivers: usb_dc_nrfx: validate pointer in usb_dc_ep_is_stalled
      drivers: usb_dc_nrfx: use REQTYPE_GET_DIR and REQTYPE_GET_TYPE macros
      drivers: usb_dc_nrfx: fix style issues
      drivers: usb_dc_nrfx: cleanup USB_NRFX_EVT_QUEUE_SIZE
      drivers: usb_dc_nrfx: remove unused EPSTATUS defines
      drivers: usb_dc_nrfx: make macros names less confusing
      boards: nrf52840_pca10056: add arduino spi, uart and i2c nodes
      usb: do not disable endpoints at USB_DC_SUSPEND event

Jose Alberto Meza (18):
      ext: hal: mchp: Fix compilation for MEC1501 SMB macros
      soc: arm: mchp: Add I2C to device tree for MEC1501
      dts: mchp: Add Microchip I2C SoC device tree
      drivers: i2c: mchp: Add I2C driver for MEC family
      boards : arm : Add I2C support for MEC15xx EVB
      CODEOWNERS: Add code ownership for Microchip XEC drivers
      API: espi: Add API for Enhanced Serial Peripheral Interface
      drivers: espi: Add Kconfig for eSPI driver
      dts: espi: Add dts bindings for eSPI
      dts: espi: mchp: Add dts bindings for XEC eSPI driver
      ext: hal: mchp: Fix compilation for MEC1501 HAL macros
      drivers: espi: Add driver for microchip XEC family
      samples: drivers: espi: Add eSPI driver sample app
      boards : arm : Add ESPI support for MEC15xx EVB
      boards: mchp: Fix MEC1501 dts warnings in eSPI
      soc: mchp: Add configuration option to switch timer drivers
      board: mec: Select cortex-M systick-based driver
      soc: mchp: Perform OTP override for 32KHz internal oscillator

Josef Gajdusek (2):
      drivers: usb_dc_stm32: Make pin remapping part of the device tree
      drivers: usb_dc_stm32: Reinitialize the write semaphores on bus reset

Jukka Rissanen (133):
      tests: net: pkt: Verify that net_pkt_write() writes correct data
      tests: net: all: Add more options to catch-all test
      net: if: Add access functions for network interface flags
      net: if: Only start the network interface during init if needed
      samples: net: dumb_http_server: Add net_pkt.h file inclusion
      samples: net: dumb_http_server: Check EOF while skipping headers
      CODEOWNERS: Update networking files
      net: core: In RX check if the pkt is for loopback interface
      tests: net: getaddrinfo: Fix test to check the query is sent
      net: arp: No need to check pkt for NULL
      tests: net: mqtt_publisher: Allow compilation in every platform
      net: Check device driver API pointer
      net: sockets: Add a way to register a socket family handler
      net: sockets: tls: Register handler for TLS sockets
      net: sockets: packet: Register handler for AF_PACKET
      net: sockets: can: Register handler for AF_CAN
      tests: net: socket: Add tests for socket family registration
      samples: net: can: Add missing tag to SocketCAN sample
      net: arp: Use proper dest hw address after receiving a request
      net: arp: Drop request where src hw address is our address
      net: ipv4: Allow UDP packets with broadcast dst address
      uart: native_posix: Add support for another serial port
      net: ipv4: Send multicast ICMPv4 reply with correct src address
      net: if: Select global IPv4 address if needed
      net: ethernet: Drop pkt if MAC dst is bcast address but IP is not
      net: shell: Indentation fixes for ping command
      net: shell: Remove leading underscore from parse_args()
      net: shell: Refactor help information for ping command
      samples: net: gptp: Fix compilation instructions
      drivers: console: Add support for log level option
      tests: net: socket: register: Close socket after test
      net: llmnr: Check that UDP header can be accessed
      samples: net: echo-server: Ignore the return value of close()
      net: socket: Add SO_PRIORITY support to setsockopt
      tests: net: udp: Add tests for SO_PRIORITY and setsockopt
      net: if: Fix null pointer deref when selecting IPv4 address
      net: utils: Print pkt address in net_pkt_hexdump()
      net: nbr: Set the link address type when saving neighbor data
      net: sockets: can: Add dispatcher
      samples: net: can: Add second RX socket receiver
      net: context: Set local address properly for AF_CAN connections
      net: shell: Print connection information properly for AF_CAN
      net: connection: The connection logic was not init properly
      net: sockets: can: Close the socket cleanly
      samples: net: socket: can: Close the socket periodically
      net: getaddrinfo: Query both IPv4 and IPv6 if family is AF_UNSPEC
      tests: net: getaddrinfo: Make sure we receive two queries
      net: Fix net_pkt_hexdump() to print pkt address properly
      net: ptp: clock: Create a dummy inline func for net_eth_get_ptp_clock()
      net: ethernet: Add net_eth_get_ptp_clock_by_index() function
      net: ptp: Add usermode support to net_eth_get_ptp_clock_by_index()
      net: ptp: clock: Add usermode support to ptp_clock_get()
      net: sntp: Ignore return value from close
      net: dns: Make dns_unpack_answer() to check non-compressed answers
      tests: net: dns: Add tests for dns_unpack_answer()
      net: if: Add syscall interface to IP address add and rm
      tests: net: if: Test userspace support in net_if
      net: if: Make IPv4 address const in removal function
      net: if: Add userspace support to IPv4 netmask set function
      net: if: Add userspace support to IPv4 gateway set function
      net: if: Make gateway address in net_if_ipv4_set_gw() const
      net: mgmt: Add info length to event wait API
      net: sockets: mgmt: Add AF_NET_MGMT address family support
      samples: net: sock: mgmt: Add network management socket app
      net: mgmt: Send event with info when applicaple
      tests: net: mgmt: Verify that info_length is correct
      net: utils: Add userspace support to net_addr_ntop/pton()
      tests: net: utils: Add userspace tests for net_addr_ntop/pton()
      samples: net: sock: mgmt: Print IP addresses for each event
      tests: net: socket: mgmt: Add unit tests for net_mgmt sockets
      net: socket: Add userspace support to setsockopt()
      net: socket: Add userspace support to getsockopt()
      net: socket: mgmt: Add setsockopt() and getsockopt() support
      tests: net: socket: mgmt: Add tests for get|setsockopt()
      tests: net: ip-addr: Avoid possible null pointer dereference
      net: Collect network packet TX send time
      net: socket: Add SO_TIMESTAMPING socket option
      net: shell: Show network packet TX transit times
      tests: net: tx_timestmp: Fix the tests
      samples: net: echo_server: Enable SO_TIMESTAMPING if needed
      net: mgmt: Remove L1 layer as that is useless
      net: sockets: Initialize IP socket addresses in getsockname()
      tests: net: socket: register: Do not close invalid fd
      tests: net: Increase stack sizes for coverage testing
      net: tcp: Adjust data length if TCP options are present
      net: llmnr_responder: Fix debug prints after receiving query
      net: mgmt: Add L4 layer and related events
      net: dns: Send net-mgmt event for DNS server add and del
      tests: net: dhcpv4: Make sure we get DNS add/del events
      net: ipv4: Drop pkt if src address is unspecified
      Revert ""libc: types: Remove wrong definition""
      tests: clib: Make sure ssize_t type is signed
      net: ipv6: Drop pkt if src address is unspecified
      tests: net: trickle: Adjust config options to avoid error prints
      net: ip: Helper for getting used network address family as string
      samples: net: echo-client: Start service in correct time
      net: pkt: Move everything up when pulling data
      net: ipv6: Fix fragmentation
      net: pkt: Allow larger packets for IPv6 fragmentation
      net: socket: userspace: Copy user specified value in getsockopt()
      net: ip: Add iovec and msghdr structs
      net: context: Use const for the IP address
      net: context: Add support for net_context_sendmsg()
      net: sockets: Add sendmsg() API
      tests: net: udp: Add tests for sendmsg() call
      net: Add support for TXTIME socket option
      tests: net: txtime: Add tests for SO_TXTIME and SCM_TXTIME
      net: ppp: Initial support for point-to-point protocol
      net: ppp: Add IPV6CP support
      cmake: Add serial port for ppp in qemu
      drivers: net: ppp: Driver for point-to-point protocol
      net: shell: Refactor network statistics printing
      net: shell: Add ppp network interface support
      tests: net: ppp: Add unit tests for PPP driver
      net: ppp: Allow delay of PPP protocol handshakes
      net: ppp: Reject unhandled protocols
      net: if: No need to set IP addresses etc for PPP
      net: pkt: Add net_pkt_write_le16() helper
      net: pkt: Add net_pkt_read_le16() helper
      samples: net: echo-server: Add PPP overlay config file
      net: ppp: Add proper support to receive Echo-Reply message
      net: ppp: Handle received Discard-Request
      doc: net: ppp: Add PPP documentation
      boards: Set support for serial port networking as netif:serial-net
      tests: net: context: Let the net_context cb to run first
      net: context: Clarify net_context_send() API documentation
      net: Move include files outside of extern ""C"" block
      net: sockets: Do not call NULL socket callback function
      samples: net: zperf: Use proper value in k_busy_wait()
      samples: usb: hid-cdc: Use proper value in k_busy_wait()
      net: context: Allow TCP to use sendmsg()
      net: context: sendmsg: Allow use of connected UDP sockets
      tests: net: sendmsg: Verify that connected UDP sock works

Jun Li (8):
      soc: stm32f4: add another pinmap for spi1
      driver: api: uart: remove exclusive config for async api
      west: fix import error on sign.py
      api: dma: fix issue of no-implemented reload
      soc: stm32f4: complete uart7's dts
      api: dma: add api to retrieve runtime status
      soc: stm32: enable outputing hex file
      board: nucleo_f429zi: add partitions to support mcuboot

Jun Yang (7):
      sdhc: rename disk_access_sdhc.c
      dts/sdhc: support mmc dts and usdhc dts
      Kconfig: Kconfig support i.MX RT USDHC
      usdhc/pinmux: configure pinmux of usdhc on mimxrt1050 evk
      clock/usdhc: Enable clock of USDHC of i.MXRT
      usdhc: support NXP i.MXRT usdhc
      samples/fs: support fs demo on mimxrt_1050 evk board

Justin Brzozoski (1):
      mqtt: Allow client to override keepalive

Kamil Piszczek (31):
      Bluetooth: hci: adding AD types used for OOB pairing
      bluetooth: host: format specifier alignment
      drivers: flash: add flash_simulator driver
      tests: drivers: add flash_simulator driver
      drivers: flash: fix flash-simulator build crash
      boards: changing flash simulator device name alias
      drivers: flash: flash_simulator enabled by default on qemu
      tests: storage: flash_map: adding qemu platform
      boards: qemu_x86: reducing flash size
      driver: flash: flash_simulator: moved part of Kconfig to DT
      dts: flash simulator cleanup
      drivers: flash: simulator Kconfig cleanup
      tests: drivers: flash_simulator: removing CONFIG_ prefix from defines
      stats: extending api to handle statistics with more than 256 elements
      util: extending UTIL_DEC_N definitions
      drivers: flash: covering more flash page with stats sections
      stats: changed API to use zephyr types
      fs: nvs: format specifier alignment
      drivers: flash: flash_simulator: added max write calls param
      tests: fs: nvs: added basic unittests for nvs
      tests: fs: nvs: test cases clean up flash on completion
      tests: fs: nvs: garbage collector test
      drivers: flash: flash_simulator: added max erase calls param
      drivers: flash: flash_simulator: added max len param
      tests: fs: nvs: moving nvs_clear to setup method
      tests: fs: nvs: unittest with corrupted sector close op
      Bluetooth: extending API for OOB pairing
      Bluetooth: smp: adding LE SC OOB support for peripheral side
      settings: adding new nvs backend
      tests: settings: adding nvs backend configuration to functional tests
      fs: nvs: format specifier aligned with off_t type

Karl Zhang (7):
      arm: V2M Musca B1: Add Musca B1 SoC and board support
      boards: v2m_musca_b1_nonsecure: Increase flash size
      Revert ""boards: v2m_musca_b1_nonsecure: disable sanitycheck [REVERT ME]""
      drivers: ipm: mhu: Add MHU driver for V2M Musca
      sample: mhu: IPM MHU dual core on V2M Musca
      arm: Musca B1: Migrate to eFlash
      Musca B1: MHU: IPM MHU dual core on V2M Musca B1

Karsten Koenig (4):
      drivers: can: mcp2515: Add driver for MCP2515 CAN controller
      drivers: can: mcp2515: Rework for DTS SPI bindings
      samples: can: Added project configuration for MCP2515
      drivers: can: mcp2515: Fixes for DT SPI cs

Kim Sekkelund (1):
      Bluetooth: Host: Find by type should accept 128bit UUIDs

Krzysztof Chruscinski (47):
      drivers: clock_control: nrf: Fix lfclk source settings for nrf9160
      drivers: counter: nrfx_rtc: Fix lack of interrupt when CC=0
      drivers: clock_control: nrf: add SYNTH LFCLK clock source
      shell: Add macros for creating conditional commands
      shell: Use conditional commands registeration in shell_cmds.c
      logging: Allow logger usage in C++ files
      lib: os: ring_buffer: Fix C++ compilation warning
      testsuite: ztest: Add zassert_within macro
      drivers: counter: Add optional (D)PPI wrapping to nRF RTC driver
      shell: Move signals initialization from thread to init
      dts: bindings: Document missing property boolean type
      drivers: counter: Move nRF TIMER and RTC configuration to device tree
      logging: Add string duplicates pool profiling
      drivers: counter: Add flags to counter_config_info structure
      samples: drivers: led_lp3943: Rename log module
      logging: Add option to detect missed transient string duplication
      tests: subsys: logging: Test for detection of missed log_strdup
      tests: subsys: shell: Add shell_history test
      ring_buffer: Add functions for getting capacity and reseting
      tests: lib: ring_buffer: Test for ring_buf_reset, ring_buf_capacity_get
      shell: Refactor shell_history to use less RW memory
      tests: shell: shell_history: Add more tests
      CODEOWNERS: Adding tests/subsys/shell codeowners
      shell: Fix shell uart not waking up shell on mcumgr data
      logging: Duplicate only strings from rw memory
      logging: Fix log_strdup detection on non-standard messages
      samples: drivers: counter: alarm: Fix compilation for nrf boards
      tests: drivers: counter: Add device name to zassert strings
      drivers: counter: Add helper macros for logging
      samples: drivers: counter: alarm: add nordic boards to the whitelist
      drivers: clock_control: API extension proposal
      ext: hal: nordic: Fix nrf_clock external clock source control
      drivers: clock_control: nrf: Add option to use external LF source
      drivers: sensor: temp_nrf5: Code cleanup
      drivers: counter: Fix references in the doxygen comment
      logging: Fix corruption in log panic when scheduler was active
      drivers: counter: Add optional flags to alarm configuration structure
      drivers: counter: Extend set channel alarm flags
      logging: Add header with common log backend functions
      logging: Add qemu_x86_64 backend
      logging: Removing redundant code from RTT backend
      logging: Removing redundant code from SWO backend
      logging: Removing redundant code from UART backend
      logging: Removing redundant code from xtensa sim backend
      logging: Clean up log.h dependencies
      settings: Fix missing kernel.h include
      bluetooth: host: Fix Kconfig error

Kumar Gala (153):
      release: Post-release patch level update
      ieee802154_kw41z: Fix build error with SYS_LOG_INFO
      ext/hal: stm32f0xx: Fix warnings for extraneous parentheses
      ext/hal: stm32f1xx: Fix warnings for extraneous parentheses
      ext/hal: stm32f2xx: Fix warnings for extraneous parentheses
      ext/hal: stm32f3xx: Fix warnings for extraneous parentheses
      ext/hal: stm32f4xx: Fix warnings for extraneous parentheses
      ext/hal: stm32f7xx: Fix warnings for extraneous parentheses
      ext/hal: stm32l0xx: Fix warnings for extraneous parentheses
      ext/hal: stm32l4xx: Fix warnings for extraneous parentheses
      samples: sensor: bme280: Convert code to use printk
      boards: acrn: remove duplicated Kconfig HAS_DTS
      dts: nordic: move flash/sram under SoC Node
      scripts/dts: Add support for enum's
      dts: bindings: usb: Add enum to maximum-speed property
      CODEOWNERS: Add codeowner for include/dt-bindings/usb/usb.h
      scripts/dts: Remove alias defines for bus parents with an alias
      dts: x86: Move ioapic node out of cpu container
      dts: x86: shring ioapic register size to 4k
      dts: atmel: Fix node name for device_id
      boards: atmel: Enable hwinfo as a supported feature
      scripts/dts: Fix issue in label generation of registers
      dts: nxp: nxp_rt: Fix unit-address for usb node
      scripts/dts: Remove alias defines for labels
      dts/bindings: Fix types in solomon,ssd1673fb.yaml
      dts/bindings: Fix type in spi-device.yaml
      dts/bindings: Fix nxp,kinetis-ptp.yaml
      dts/bindings: Remove generation from pinmux properties
      dts/extract: Remove bogus pinctrl generation
      dts/bindings: Move common properties into a base.yaml
      scripts/dts: Sort instance IDs by reg addr
      dts/bindings: Update soc-nv-flash to use base.yaml
      dts/binding: Cleanup a few new bindings for base.yaml
      scripts/dts: Change DT_<COMPAT>_<INSTANCE>_<PROP> define
      dts: Convert from DT_<COMPAT>_<INSTANCE>_<PROP> to DT_INST...
      dts/bindings: Rename stringlist to string-array
      dts/binding: Update compatible type in base.yaml
      dts: Convert new/missed DT_<COMPAT>_<INSTANCE>_<PROP> to DT_INST...
      drivers/uart_rv32m1_lpuart: Fix DT define usage
      dts/bindings: Add uint8-array type for ethernet mac address
      dts/bindings: Cleanup phy bindings
      drivers/i2c: Add missing HAS_DTS_I2C to sbcon
      drivers/i2c: Add missing HAS_DTS_I2C to nios
      scripts/sanitycheck: Add --cmake-only option
      dts/bindings: Remove pinctrl from bindings
      dts/bindings: Fix openisa,rv32m1-intmux binding
      dts: cleanup missing #{address,size}-cells
      dts/bindings: Add binding for riscv,cpu-intc
      dts/extract: Add ability to mark aliases as deprecated
      dts/extract: Fix IRQ alias define generation
      drivers: Update DT IRQ alias defines
      dts/extract: deprecate old IRQ alias define generation
      drivers/i2c_rv32m1_lpi2c: Remove accidently added debug code
      dts: Add concept of sub-nodes to YAML and generator
      tests/kernel/context: Fix TICK_IRQ define for RV32M1 lptmr_timer
      scripts/dts: Treat string-list always as a list
      scripts/dts: Treat array always as a list
      board: mps2_an385: Remove board.h
      drivers: rv32m1: remove bogus IRQ_PRI related defines
      sensor: lis2dh: Use general DT_<COMPAT>_BUS_<BUS> define.
      dts/extract: Remove 'use-prop-name' from cell and controller handling
      scripts/dts: Remove 'use-prop-name' from clock generation
      scripts/dts: Add ability to mark cell/ctrl defines as deprecated
      scripts/dts: Remove DT_CHOSEN generation
      samples: out_of_tree_board: remove board.h
      dts/bindings: remove 'use-prop-name' from bindings
      dts: Rename DT_.*_GPIO_* to DT_.*_GPIOS_*
      dts: Rename PWM to PWMS
      dts: remove unused clock-controller property
      dts: remove unused clock-controllers property
      boards: dts: Cleanup some ""ok"" -> ""okay""
      dts: Rename SW._GPIO_* -> DT_ALIAS_SW._GPIOS_*
      dts: Rename LED._GPIO_* -> DT_ALIAS_LED._GPIOS_*
      dts: lpc55s6x: Fix SRAM-X address
      dts: nxp_imx6sx_m4: fix cpu reg num
      dts: nios2: fix flash node name
      dts: silabs: fix gpio address
      arm: mps_an521: Add support for the AN521 on MPS2+
      boards: dts: cleanup partition node names
      dts/bindings: Fixup some clock bindings to match reality
      dts: Fix handling of fixed-clock
      dts/bindings: Add missing clock-cells property
      scripts/dts: Mark 'non-S' forms of cell and controllers as deprecated
      dts/scripts: mark all non DT_ prefix deprecated
      scripts/dts: deprecate DT_<COMPAT>_<INSTANCE ID>_BUS_<BUS>
      sensor: lis2dh: Fix stray use of old DT define
      dts: arc: fix cpu num
      scripts/dts: cleanup 'generation' usage
      dts/bindings: Remove generation from binding
      disk: sdhc: Fix use of deprecated DTS defines
      scripts/dts: Add option to generate only deprecated defines
      dts/extract: Mark DT_FLASH_AREA_*_LABEL defines as deprecated
      dts/bindings: Remove unused property num-irq-priority-bits
      dts: nxp: mimxrt: Add missing jedec-id property to flash nodes
      dts/bindings: remove stale cell_string
      dts/bindings: Remove unused required dts props from st,stm32-can
      dts/binding: Move clocks into base.yaml
      dts/bindings: remove required clock from intel,qmsi-watchdog
      dts/bindings: Mark rtc prescale as optional
      dts/bindings: Fix 'required' for interrupts
      dts/bindings: Mark uart current-speed as optional
      dts/bindings: Remove generation property from st,stm32-usb
      usb/stm32: Fix missing clock property for usb on stm32f103Xb
      dts: Remove unused virtualcom device node from dts
      dts/bindings: Mark 'rdc' as optional in nxp,imx-gpio
      dts/bindings: Fix category field for microchip,xec-i2c
      boards/arm/v2m_musca_b1: Add missing label to timer node
      dts/arm/microchip: Mark uart & i2c nodes as disabled by default
      native_posix: Remove reg property from uart node in dts
      dts/bindings: Remove version from litex,eth0.yaml
      dts/bindings: Make pwm-leds label optional
      cmake/dts: Remove import of CONFIG_ prefixed symbols from dts
      boards: cc3220sf_launchxl: Use SDK OpenOCD
      mec1701: fix dts build error
      nxp_imx: Fix dts build error
      dts/bindings: Cleanup microchip,xec-rtos-timer binding
      dts/bindings: Cleanup st,stm32-ipm-mailbox binding
      dts: Make instance defines consistent
      scripts/dts: Sort output of DT_COMPAT_ defines
      dts/nxp: Fix dtc warning with spi device node name
      scripts/sanitycheck: optimize disk usage for --save-tests
      cmake: Support SDK versions more broadly
      arc: snps_nsim: Fix -mfpu compiler flag for NSIM_HS build
      dts: arm: Remove device_type = ""memory"" from SRAM nodes
      dts: arc: Remove device_type = ""memory"" from {d,i}ccm nodes
      dts: riscv: Remove device_type = ""memory"" from SRAM nodes
      dts: nios2: Remove device_type = ""memory"" from SRAM nodes
      dts: pwm: nxp: Fixup bindings and dtsi so they build
      dts/bindings: Change clock type to compound
      scripts/dts/gen_defines: Cleanup write_prop for which props we process
      scripts/dts: Fix detection of a GPIO specifier
      dts/bindings: Remove unused snps,num-irq-priority-bits prop
      ci: Update to using SDK 0.10.2
      cmake: Bump min version to 0.10.2
      cmake/toolchain: Change to use riscv64 toolchain
      doc: sdk: Update docs to use SDK 0.10.2
      dts/gen_defines.py: Use err() instead of _err()
      lib/libc/min: Handle duplicate time definitions
      gpio: arm: cmsdk-gpio: Fixup dts binding / nodes
      dts/bindings: Remove #{addr,size}-cell props from st,stm32-timers
      dts/bindings: Mark #clock-cells as optional in nxp,kinetis-sim.yaml
      scripts/dts/edtlib.py: error check # and -map properties
      soc: microchip_mec: mec1501: Fixup GPIO dts defines
      dts: Add base interrupt-controller to dts bindings
      scripts/dts/gen_defines.py: Ignore 'interrupt-controller' prop
      dts: Add base gpio-controller to dts bindings
      scripts/dts/gen_defines.py: Ignore 'gpio-controller' prop
      dts/bindings: Add gpio-nexus base binding
      dts/bindings: Add base clock controller to dts bindings
      dts/bindings: Add required #pwm-cells property to pwm base
      dts/bindings: Update pwm base binding
      dts/bindings: cleanup partition binding
      dts: nxp: cleanup remove system-clock-frequency

Kwon Tae-young (5):
      soc: st: add STM32F415RG
      arm: Add support for MINI-M4 for STM32 Board
      boards: stm32f4_disco: Fix yaml ram size
      drivers: pinmux: stm32f3: Add SPI3, USB support of STM32F302x8
      drivers: i2c_ll_stm32_v1: add timeout

Laczen JMS (4):
      subsys/settings: change processing to const char
      subsys/settings: Update client modules
      subsys/settings: Enable handler ROM registration
      subsys/settings: Update bluetooth module

Leandro Pereira (1):
      drivers: hwinfo: Add support for ESP32

Loic Poulain (26):
      ext: mcux: csi: Fix wrong circular queue delta calculation
      soc: nxp_imx: mimxrt1064_evk: Add I2C support
      eth: eth_mcux: Register mDNS multicast address
      net: ethernet: Fix build issue with C++
      net: lib: Fix missing dns subdir include
      net: mdns_resolver: Fix malformed MDNS response
      boards: mimxrt1064_evk: Enable USB device controller 1
      drivers: usb: nxp: Fix board freeze with various USB classes
      usb: netusb: cdc_eem: Fix Interface select
      drivers: usb: nxp: Add cache management
      soc: nxp:rt: Add HAS_MCUX_GPT flag
      dts: arm: nxp_rt: Add GPT nodes
      drivers: counter: Add NXP MCUX GPT counter driver
      soc: nxp: rt: Enable mcux gpt when counter is enabled
      boards: mimxrt10xx: Add counter to supported list
      wifi: eswifi: Parse async messages
      wifi: eswifi: Allow nested locking
      wifi: eswifi: Implement TCP listen/accept
      dts: arm: nxp: rt: Add PWM nodes
      ext: mcux: Add HAS_MCUX_PWM config
      soc: nxp_imx: Add PWM config
      drivers: pwm: Add NXP MCUX PWM driver
      boards: mimxrt1064: Add PWM support
      boards: mimzzrt1064_evk: Add pwm-led0 alias
      sample: blink_led: Adjust PWM period
      dts: bindings: pwm: nxp: Fix missing copyright/license

Louis Dupont (1):
      net: lwm2m: Remove IPSO objects maximum number of instances limitation.

Lucas Peixoto (2):
      fs: implemented unmount function to fatfs
      disk: fixing the sending of commands with r1 response

Luiz Augusto von Dentz (65):
      Bluetooth: GATT: Skip ahead if handle is not within service handles
      Bluetooth: GATT: Fix iterating over requested handle range
      Bluetooth: Settings: Fix not allowing custom handlers without arguments
      Bluetooth: GATT: Store database hash
      Shell: Introduce shell_hexdump
      Bluetooth: Shell: Convert users of hexdump to shell_hexdump
      Bluetooth: shell: Make show-db print the total number of attributes
      Bluetooth: Shell: Add option UUID parameter to GATT show-db
      Bluetooth: Shell: Add GATT command get
      Bluetooth: Shell: Add GATT command set
      Bluetooth: GATT: Update read/write callback documentation
      Bluetooth: GATT: Fix usage of uint16_t instead of u16_t
      Bluetooth: GATT: Add support for static services
      Bluetooth: GATT: Add option to enable/disable database
      Bluetooth: Use BT_GATT_SERVICE_DEFINE whenever possible
      Bluetooth: GATT: Disable dynamic database by default
      Bluetooth: GATT: Fix typo in commments
      Bluetooth: GATT: Move GATT/ATT option to Kconfig.gatt
      Bluetooth: GATT: Rename BT_GATT_DB to BT_GATT_DYNAMIC_DB
      net: bt: Add multi-link support
      net: bt: Set NET_IF_NO_AUTO_START flag
      Bluetooth: shell: GATT: Make get command take a handle range
      Bluetooth: GATT: Fix not parsing result of Read by Type
      Log: Fix build error on Fedora 30
      Bluetooth: L2CAP: Move fixed channels to its own section in ROM
      Bluetooth: Add possibility to pass a user_data to conn_tx_cb_t
      Bluetooth: L2CAP: Add sent callback
      Bluetooth: shell: Add sent callback to L2CAP ops
      Bluetooth: L2CAP: Move Kconfig option to its own it own file
      Bluetooth: L2CAP: Add callback to notify status
      Bluetooth: shell: Print L2CAP channel status
      Bluetooth: GATT: Add bt_gatt_foreach_attr_type
      Bluetooth: GATT: Make use of bt_gatt_foreach_attr_type on bt_gatt_notify
      Bluetooth: shell: Make use of bt_gatt_foreach_attr_type
      Bluetooth: GATT: Add support to notify by UUID
      Bluetooth: conn: Defer bt_conn_tx callback to system wq
      Bluetooth: GATT: Disable flow control if running with POSIX_ARCH
      Bluetooth: GATT: Document the context in which callbacks are run
      Bluetooth: Shell: Fix having gatt unregister twice
      Bluetooth: Shell: Add gatt notify command
      Bluetooth: Fix BT_ATT_ENFORCE_FLOW
      Bluetooth: GATT: Fix using invalid handle
      Bluetooth: GATT: Fix assuming writes to CCC will always contain 2 bytes
      Bluetooth: GATT: Fix bt_gatt_foreach_attr_type
      Bluetooth: shell: Add number of matches to gatt show-db
      Bluetooth: L2CAP: Fix inverting of SCID and DCID on disconnect
      Bluetooth: ATT: Queue buffers on bt_att_send
      Bluetooth: ATT: Fix unbalanced use of k_sem_give
      Bluetooth: Make it safe to allocate buffers from TX callback
      Bluetooth: GATT: Fix bt_gatt_discovery with BT_GATT_DISCOVER_DESCRIPTOR
      Bluetooth: shell: gatt: Add discover command
      cmake: Set NO_QEMU_SERIAL_BT_SERVER when CONFIG_BT_NO_DRIVER is set
      Bluetooth: hci_prop_evt: Don't set NO_QEMU_SERIAL_BT_SERVER
      Bluetooth: tests: Add tests for UUID APIs
      Bluetooth: tests: Add tests for L2CAP
      Bluetooth: tests: Add tests for GATT
      Bluetooth: GATT: Fix registering on static service area
      Bluetooth: GATT: Make use of Z_STRUCT_SECTION_ITERABLE
      Bluetooth: L2CAP: Make use of Z_STRUCT_SECTION_ITERABLE
      Bluetooth: ATT: Fix bt_att_req_cancel clearing outstanding request
      Bluetooth: GATT: Fix not canceling on unsubscribe
      Bluetooth: GATT: Use atomic_t for subscribe flags
      Bluetooth: conn: Warn when blocking with K_FOREVER
      Bluetooth: Fix deadlock caused by blocking on syswq
      Bluetooth: Dispatch internal callbacks using RX thread

Lyle Zhu (3):
      dts: riscv32: update flash controller compatibility property
      driver: flash: add flash driver for the RV32M1 SOC
      boards: riscv32: rv32m1_vega: enable MCUboot for ri5cy core

Maciej Zagrabski (1):
      drivers: stm32: Fix disabling EXTI subsystem

Maksim Masalski (4):
      samples: LSM6DSL accel fix unchecked return value sensor_trigger_set()
      tests: fix unchecked return value in test_net_pkt_basics_of_rw
      drivers: added break in function stm32_clock_control_get_subsys_rate
      samples: sample modified according to the changes in Zephyr macros

Manivannan Sadhasivam (20):
      ext: hal: st: stm32cube: Add HAL for the STM32L1x series
      soc: arm: st_stm32: Add STM32L1 SoC series
      drivers: clock_control: Add STM32L1X clock support
      soc: arm: stm32: stm32l1: Add UART support
      drivers: pinmux: Add STM32L1X pinmux support
      drivers: gpio: Add STM32L1X GPIO support
      drivers: interrupt_controller: Add STM32L1X EXTI support
      drivers: i2c: Add STM32L1X I2C support
      boards: arm: Add 96Boards WisTrio LoRa Tracker board
      CODEOWNERS: Add codeowner for 96b_wistrio
      pinmux: stm32f4: Add STM32_OSPEEDR_VERY_HIGH_SPEED to pinmux header
      boards: arm: 96b_stm32_sensor_mez: Enable I2S2 peripheral
      boards: arm: 96b_stm32_sensor_mez: Add DTS node for on-board MIC
      boards: arm: Add support for 96Boards Meerkat96 board
      drivers: pinmux: stm32mp1: Add missing UART4 and UART7 pinctrl definitions
      dts: arm: st: mp1: Add missing uart4 and uart7 pinmux nodes
      boards: arm: Add 96Boards Avenger96 board support
      scripts: dts: Match alpha numeric property values
      boards: arm: 96b_avenger96: Add onboard LEDs
      boards: arm: 96b_avenger96: Enable Mailbox support

Marc (1):
      Apply David's English corrections from code review

Marc Herbert (41):
      cmake: zephyr_cc_option(-fmacro-prefix-map=${ZEPHYR_BASE}=.)
      file2hex.py: new --gzip-mtime option that defaults to zero + test
      cmake: atomic rename to fix toolchain cache creation race
      sanitycheck: order results.csv and discards.csv deterministically
      git.cmake: let the environment override BUILD_VERSION
      extensions.cmake: add two cc/compile_options callgraph comments
      CMakeLists.txt: fix misleading logical_target_for_zephyr_elf comment
      gen_kobject_list.py: better comments and --help. Zero code change.
      CODEOWNERS: include/cortex_m/csme/ -> include/cortex_m/csme.h
      sanitycheck: clarify who spawns processes and threads and where
      sanitycheck: support symbolic links in ZEPHYR_BASE
      cmake: explain BUILD_VERSION and KERNEL_VERSION_*
      sanitycheck: when present, point at handler.log instead of run.log
      tests/bluetooth/tester: remove spurious CONFIG_GPIO=y
      extensions.cmake: don't leak absolute paths in snippets-*.ld comment
      sanitycheck: CONFIG_TEST_USERSPACE / userspace tag cleanup
      cmake: warn if inconsistency between CMAKE_SOURCE_DIR and ZEPHYR_BASE
      cmake: stop destroying intermediate link maps like zephyr_prebuilt.map
      CMakeLists.txt: -fmacro-prefix-map=${CMAKE_SOURCE_DIR}=CMAKE_SOURCE_DIR
      cmake: silence ""WARNING: ASSERTs enabled"" when CONFIG_TEST is true
      generated/cfb_font_dice.h: don't leak absolute paths in comment
      BOOT_BANNER: show KERNEL_VERSION and BUILD_VERSION differently
      tests: minor FCB re-ordering not to leave a random flash.bin behind
      sanitycheck: show handler_time in -v output (qemu 2.032s)
      doc: how to unset Clear Linux' CFLAGS and CXXFLAGS
      gen_relocate_app.py: make generated/linker_relocate.ld deterministic
      gen_app_partitions.py: make generated/app_smem_*.ld files deterministic
      Revert ""gen_app_partitions.py: make generated/app_smem_*.ld files deterministic""
      gen_app_partitions: deterministic _and_ decreasing app_smem_*.ld
      samples/**/external_lib: invoke $(MAKE) instead of make
      cmake: remove spurious IS_ABSOLUTE logic in zephyr_sources()
      sanitycheck: fix --jobs help message + other cosmetic fixes
      tests/net/ptp/clock: add 'userspace' tag
      subsys tracing: remove (uintptr_t) casts in snprintk and use %p
      doc: add space after cmake -Bdir and ninja -Cdir options
      sanitycheck: replace cmake -H ""not meant for public use"" with -S
      sanitycheck help: how to spot tests that were not run and just built
      sanitycheck: fix priority of --extra-args=CONFIG_ over testcase.yaml
      toolchain/zephyr: invoke ar with -D for deterministic .a files
      tests/net/: samples/net/: add a few 'userspace' tags
      Revert ""toolchain/zephyr: invoke ar with -D for deterministic .a files""

Marc Reilly (2):
      display: Add support for an ST7789V based LCD
      samples: display: add a simple sample for st7789v display

Marcin Niestroj (7):
      shell: add Ctrl+N and Ctrl+P meta-keys
      doc: shell: document Ctrl+N and Ctrl+P meta-keys
      sensors: lis2dh: support high resolution mode
      mcumgr: fix type of pointer passed to base64_decode
      mcumgr: select NET_BUF when MCUMGR=y
      scripts: openocd: allow to overwrite elf file used to flash device
      scripts: openocd: use hex file for flash command

Marcin Szymczyk (13):
      cmake: fix support for out of tree shields
      ztest: make priority of testing thread configurable
      usb: cdc_acm: SerialState notification full support
      usb: samples: mass: add configuration and fs for FLASH
      usb: cdc: Add unique PIDs for each sample
      usb: cdc: add .inf file
      usb: cdc: add option to force IAD
      usb: add zero-length packet after MPS-sized IN transaction
      usb: cdc_acm: fix typo in CDC_ACM_DEFAULT_BAUDRATE
      usb: cdc_acm: reset to default after disconnect
      logging: add frontend API
      logging: add frontend calls in log_core
      doc: add custom logger frontend description

Marek Pieta (4):
      bluetooth: hci_core: Remove misleading log
      bluetooth: Fix bt_conn->id handling
      Bluetooth: host: Fix bt_keys_get_addr()
      debug: tracing: Fix tracing hooks

Mariusz Glebocki (2):
      drivers: ethernet: Add LiteEth driver
      boards: litex_vexriscv: Enable LiteEth driver

Mariusz Skamra (13):
      Bluetooth: gatt: Fix foreach iteration of static attributes
      Bluetooth: controller: Workaround CPR procedure collision at CPU instant
      Bluetooth: gatt: Fix infinite read_by_uuid procedure
      Bluetooth: Add BT_SMP_ENFORCE_MITM option
      Bluetooth: shell: Fix L2CAP connect parameters count
      Bluetooth: tester: Enable Mesh Friend support
      Bluetooth: tester: Enable GAP writable device name
      Bluetooth: tester: Update to recent conn param related changes in BTP
      Bluetooth: tester: Change RPA timeout
      Bluetooth: GATT: Fix byte order for database hash
      Bluetooth: Shell: Fix unregister GATT Metrics vendor service
      Bluetooth: Mesh: Fix rejecting invalid remote public key
      Bluetooth: GATT: Add BTP Discover All Primary Services command handler

Mark Ruvald Pedersen (23):
      cmake: fix whitespace
      cmake: fix intent description of toolchain_cc_nostdinc macro
      cmake: Toolchain abstraction: introduce LINKER variable
      cmake: Toolchain abstraction: use LINKER, introduce toolchain_ld_base
      cmake: Toolchain abstraction: move LINKERFLAGPREFIX under GNU ld
      cmake: Toolchain abstraction: introduce toolchain_ld_baremetal()
      Bluetooth: controller: commentary and readability improvements
      cmake: Toolchain abstraction: build-id,gc-sections to toolchain_ld_base
      cmake: Toolchain abstraction: orphan handling in toolchain_ld_baremetal
      cmake: Toolchain abstraction: move symbol sorting into toolchain_ld_base
      cmake: Toolchain abstraction: introduce toolchain_ld_cpp
      cmake: remove unused ALIGN_SIZING_DEP
      cmake: whitespace alignment of syscall_macros_h
      cmake: change construct_add_custom_command_for_linker_pass into macro
      cmake: rename construct_add_custom_command_for_linker_pass macro
      cmake: configure_linker_script: accept argument with file extension
      cmake: simplify configure_linker_script: avoid deriving define from name
      cmake: move configure_linker_script to ld/target.cmake
      cmake: Toolchain abstraction: Introduce toolchain_ld_relocation macro
      cmake: Toolchain abstraction: move PROPERTY_LINKER_SCRIPT_DEFINES
      cmake: Rename kernel_elf to zephyr_final
      cmake: Toolchain abstraction: Introduce toolchain_ld_configure_files
      cmake: Introduce toolchain_ld_link_elf to abstract linker invocation

Mark Wang (6):
      ext: mcux: Import NXP SDK USB EHCI controller driver to ext/ directory.
      drivers: usb: nxp: add NXP EHCI USB device controller driver shim
      soc: nxp_imx: configure USB device EHCI controller driver for rt1050
      boards: mimxrt1050_evk: configure USB device EHCI driver for rt1050
      dts: nxp: nxp_rt: add usbd1 for rt1050 and works as default usb.
      boards: frdm_k64f: button_1 has no callback when button is released

Markus Becker (1):
      net: openthread: Allow DHCP configuration of OpenThread in Zephyr

Markus Fuchs (5):
      net: sntp: add missing __cplusplus check
      include: data: add missing __cplusplus checks
      include: json: reorder designated initializers
      fs/nvs: improve C++ compatibility
      soc: arm: st_stm32: add STM32F437XI

Marti Bolivar (56):
      README.rst: shorten it
      doc: guides: add ""Asking for Help"" guide
      doc: nrf52840_pca10059: re-work programming notes
      scripts: fix and tweak west boards
      west: build: use CMAKE_HOME_DIRECTORY to locate source
      scripts: flake8 cleanup for west build
      scripts: add helpers to west build for getting config options
      scripts: improve west build's board handling
      doc: re-word and extend west build documentation
      scripts: add --cmake-only to west build
      scripts: add build.generator config option for west build
      scripts: fix up west build verbosity levels
      scripts: add --dry-run flags to west build
      scripts: add --build-opt option to west build
      scripts: make west build -h fit on a screen
      doc: fix west boards tip
      scripts: west build: propagate verbosity to cmake generator
      doc: save ZEPHYR_BASE in more places where it's needed
      doc: updates for west installation docs
      doc: updates to west multi-repo docs
      doc: move sign command docs before catch-all page
      scripts: fix west TypeError on unknown arguments
      doc: trivial fix for lpcxpresso54114 doc
      scripts: avoid unnecessary 'west build --force'
      cmake: delete obsolete deprecation checks
      cmake: add helpers for setting board runners
      boards: allow cmake-time overrides of all runners
      scripts: west: improve error message on missing cache
      boards: nrf52_sparkfun: fix board.cmake
      doc: periodic updates to getting started guide
      doc: unify documentation on setting environment variables
      doc: clear up qemu + zephyr sdk interaction
      getting_started: changes for custom toolchains
      west.yml: update open-amp SHA
      scripts: runners: add __contains__ to BuildConfiguration
      scripts: west sign: make it work again
      scripts: west sign: code style refactor
      scripts: west sign: move hex and bin default locations
      scripts: west sign: improve user friendliness
      scripts: west sign: test for input file existence
      docs: update west sign docs
      scripts: runners: abstract jlink's missing program support
      scripts: runners: check for required programs
      scripts: fix pyocd runner --flash-opt help
      scripts: west_commands: fix help string
      scripts: runners: update ZephyrBinaryRunner docstring
      scripts: west_commands: decouple runners pkg from west
      scripts: tweak runner-related command output
      scripts: tweak west build output
      scripts: west_commands: improve run_common error handling
      scripts: remove runner related cruft
      doc: add a release notes page for west
      doc: move runner documentation out of west-apis.rst
      west: require v0.6.0 or higher
      scripts: un-break test_nrfjprog.py
      boards: nrf9160_pca10090: add default uart2 pins

Mateusz Holenko (5):
      dts: riscv32: hifive1: configure sram
      dts: riscv32: qemu_riscv32: configure sram
      dts: riscv32: qemu_riscv32: add flash
      dts: m2gl025_miv: configure flash and sram
      dts: riscv32: fix reg-names for liteeth

Matthew Koch (4):
      drivers: pinmux: stm32f7: Add LTDC pinmux entries to STM32F7
      stm32f7: Kconfig: soc: Enable GPIO ports F & G by default
      dts: stm32f7: Remove DTCM from sram0
      boards: stm32f7: Remove DTCM from sram0

Maureen Helm (17):
      mimxrt1060_evk: mimxrt1064_evk: Enable pyocd runner
      boards: mimxrt1015_evk: Fix board image
      scripts: west_commands: Print error message when jlink exe not found
      soc: riscv32: Use same clock freq for both rv32m1 cores
      arch: soc: riscv32: Separate soc offsets from soc context save
      dts: riscv32: Add rv32m1 zero-riscy core support
      boards: rv32m1_vega: Introduce zero-riscy configuration
      boards: rv32m1_vega: Use different openocd config file for each core
      CODEOWNERS: Add code owner for rv32m1_vega related files
      soc: riscv32: Move rv32m1 sram memory definitions to dts
      soc: riscv32: Move rv32m1 flash memory definitions to dts
      boards: mimxrt1060_evk: Enable mcux lpi2c driver and pins
      scripts: west: Add reset-after-load argument to jlink runner
      tests: flash_map: Configure mpu to allow flash write
      boards: shields: Introduce frdm_cr20a shield
      samples: net: Convert mcr20a samples to use the frdm_cr20a shield
      boards: lpcxpresso55s69: Enable pyocd runner

Michael Hope (1):
      drivers: dma: Add SAM0 DMAC driver

Michael Scott (59):
      drivers: modem: wncm14a2a: dont free packet on error
      drivers: modem: wncm14a2a: correct pinconfig assert check
      dts-binding: modem: wnc-14a2a: add label binding
      dts/bindings: introduce Arduino-header-R3 GPIO binding
      boards: arm: frdm_k64f: add Arduino header definition to DTS
      boards: nrf52840_pca10056: add Arduino header definition to DTS
      board: disco_l475_iot1: add Arduino header definition to DTS
      samples: lwm2m_client: cleanup shield overlay files
      cmake: add handling for shield config and shield/board overlays
      shields: introduce shield-based WNC-M14A2A modem setup
      drivers: modem: wncm14a2a: remove HW specific Kconfig settings
      boards: arm: frdm_k64f: don't use ETH if MODEM is enabled
      samples: lwm2m_client: re-add sanity check for WNC-M14A2A build
      dts: bindings: add modem binding for u-blox SARA-R4
      drivers: modem: introduce u-blox SARA-R4 modem driver
      boards: arm: frdm_k64f: add pinmux for SARA-R4 modem
      boards: shields: introduce SparkFun u-blox SARA-R4 shield
      boards: arm: particle_boron: enable SARA-R4 modem
      boards: arm: particle_boron: fix SARA-R4 gpio definitions
      net: openthread: fix off-by-one error in settings offset calculation
      boards: rv32m1_vega: add Arduino header information
      net: lwm2m: fix log_strdup missing errors
      boards: rv32m1_vega_ri5cy: set shell UART in DTS
      net: lwm2m: remove IP CONFIG checks in lwm2m_sprint_ip_addr()
      net: lwm2m: remove IP CONFIG checks in lwm2m_parse_peerinfo()
      net: lwm2m: fix error message in load_tls_credential()
      net: lwm2m: dont select MBEDTLS or set MBEDTLS options in subsys
      net: lwm2m: firmware: add log_strdup to remove logging errors
      sanitycheck: add west-runner parameter
      sanitycheck: handle west-flash dependency for device-testing
      boards: arm: nrf52840_pca10056/nrf52_pca10040: enable pyocd runner
      net: lwm2m: add custom TLS credential load function pointer
      net: lwm2m: use server record to set default observe notify timing
      net: lwm2m: remove data storage for IPSO Timer application type
      net: lwm2m: add missing application type to IPSO Light Control
      samples: net: lwm2m_client: set LWM2M_COAP_BLOCK_SIZE to 512
      samples: net: lwm2m_client: send temp value back to engine
      net: lwm2m: update function prototypes and descriptions
      net: lwm2m: remove unused multi_max_count field from obj_field
      net: lwm2m: remove unique lwm2m_engine_obj_delete_cb_t definition
      net: lwm2m: remove lwm2m_engine_obj from most handlers/formatter OPs
      net: lwm2m: rework resource instance storage / access methods
      net: lwm2m: add IPSO Buzzer object support
      net: lwm2m: add IPSO On/Off Switch object support
      net: lwm2m: add IPSO Push Button object support
      net: lwm2m: add Connection Monitoring object support
      net: lwm2m: add Location object support
      net: lwm2m: add IPSO Accelerometer object support
      samples: net: lwm2m_client: support for compiling in new objects
      net: lwm2m: add LwM2M path to engine_set errors
      net: lwm2m: cleanup memset usage during init
      scripts: dts: support multiple binding dirs in new scripts
      net: lwm2m: fix IP address max calc in conn mon obj
      drivers: modem: context helper: introduce modem context helper driver
      drivers: modem: interface: introduce UART interface driver layer
      drivers: modem: cmd handler: introduce cmd handler driver layer
      drivers: modem: introduce socket helper layer
      drivers: modem: ublox SARA convert to modem context
      drivers: modem: ublox-sara-r4: Support SARA-U2 modems, sense VINT

Michael Zimmermann (1):
      drivers: i2c: i2c_esp32: fix configuring speed

Mieszko Mierunski (8):
      drivers: nrf: Fix long receptions in UARTE async API.
      tests: uart: Add long tranfer test to UART_ASYNC_API.
      drivers: nrf: Add power management to nrf TWIM peripheral.
      drivers: nrf: Add power management to nrf TWI driver.
      drivers: nrf: Add power management to nrf SPIM driver.
      drivers: nrf: Add power management to nrf SPI driver.
      drivers: nrf: Fix PM for TWI and TWIM in case of multi instance
      tests: drivers: Fix coverity issue 198873

Morten Priess (11):
      bluetooth: controller: Source code documentation of ticker
      bluetooth: controller: Minor refactoring in ticker.c
      bluetooth: controller: Added missing variable initializations
      bluetooth: controller: Moved library source for lll_test.c
      bluetooth: controller: Mayfly yield after call under Kconfig
      bluetooth: controller: Allow out-of-tree vendor specific HCI commands
      bluetooth: controller: Made BT_CTLR_RX_PRIO_STACK_SIZE non-hidden
      bluetooth: controller: Revised ticker for improved conflict resolution
      bluetooth: controller: Reverted revised ticker pending redesign
      bluetooth: controller: Moved ull_entropy_get to LLL
      bluetooth: controller: Revised ticker for improved conflict resolution

Nathaniel Graff (8):
      runners/jlink: Add --tool-opt option for more args
      boards/riscv32: Add support for the HiFive1 Rev B
      soc/riscv32: Make clock init code common to SoC
      drivers/uart: Remove DTS fixups for SiFive UART
      dts/i2c: Remove id field from sifive,i2c0
      boards/hifive1: Add copyright and license to dts
      drivers/gpio: Remove DTS fixups for SiFive GPIO
      drivers/plic: Remove DTS fixups for RISC-V PLIC

Nicholas Lowell (1):
      Includes: #ifdef CONFIG_USE_SWITCH instead of #if to avoid undef warning

Nick Ward (1):
      drivers: can: mcp2515: Fix interrupt bit tests for empty TX buffers

Nicolai Glud (1):
      shell: adc: adc shell for testing adcs

Nicolas Pitre (97):
      test/net: fix PTP clock test code
      rand32_entropy_device.c: remove atomic_t misuse
      kernel/init.c: remove needless casts
      ROUND_UP/DOWN macros: cast the entire align argument
      thread_cpu: make it 64-bit compatible
      tests: cmsis_rtos_v1: remove cast abuses
      k_fifo/K_lifo macros: avoid unnecessary casts
      ARRAY_SIZE(): make it usable on 64-bit systems
      misc: memory address type conversions
      PTHREAD_MUTEX_DEFINE(): don't store into the _k_mutex section
      json: make it 64-bit compatible
      DEVICE_DEFINE(): properly align struct device instances
      linker generated list: explicit alignment on data definitions
      linker generated list: introduce Z_STRUCT_SECTION_ITERABLE()
      linker generated list: provide an iterator to simplify list access
      time_t: define using a fixed-width type
      string.c: make it 64-bit compatible
      Kconfig: introduce CONFIG_64BIT
      memslab/mempool: make tests 64-bit compatible
      net: make __net_buf_align 64-bit compatible
      INT_TO_POINTER macros: make 64-bit compatible
      pointer-type args: cast appropriately to be 64-bit compatible
      prf.c: make it 64-bit compatible
      k_stack: make it 64-bit compatible
      printk: make it 64-bit compatible
      prf.c: implement the ll length modifiers
      usb: enforce byte alignment on USB records
      include: misc: macros to perform word/pointer boundary alignment
      mem_slab: rationalize block alignment assertion
      mem_slab: enforce minimum alignment on statically allocated slabs
      log facility: make its arguments 64-bit compatible
      log facility: make its records 64-bit compatible
      log_msg test: rework test_log_std_msg() to better cope with 64-bit builds
      mempool: fix corruption of the free block bitmap and beyond
      gptp: don't cast pointers to ints
      sflist: SYS_SFLIST_FLAGS_MASK must be a long not an int
      mempool: properly use the inline free block bitmap
      mempool: don't over-size the free block bitmap
      malloc: no longer need to round mempool's max_sz
      cmake: toolchain_cc_imacros: don't use space separated arguments
      stdint.h: streamline type definitions
      lifo/fifo: first word is not always first 4 bytes
      mempool: make alignment/rounding 64-bit compatible
      mempool: fully use the inline free block bitmap on 64-bit targets
      mempool: make sure max block size isn't smaller than minimum allowed
      cmake: toolchain_cc_imacros: don't use the long argument form
      CMakeLists.txt: parse zephyr_stdint.h after compiler specific flags
      toolchain/xcc: augment compiler provided macros to match gcc and clang
      malloc: make sure returned memory is properly aligned
      test/bluetooth: sizeof() is not strlen()
      shell_history: align buffer to pointer size
      net/socket: use the iterable section object constructor/iterator
      test/msgq: adjust overflow test for 64-bit targets
      shell_history_test: make the test succeed on 64-bit targets
      Bluetooth: L2CAP: fix use of Z_STRUCT_SECTION_ITERABLE
      limits.h: streamline value definitions
      net: socket: mgmt: use uintptr_t for the nm_pid field
      test/usb: fix pointer type mismatch
      libc: fix memchr() prototype
      tests: subsys: settings: fix pointer mismatch on 64-bit targets
      print format: adjust specifiers to be compatible with a 64-bit build
      realloc(): fix possible memory leak
      sys/util.h: helper macro to perform pointer difference
      tests: usb: make 64-bit compatible
      prf.c: code and style cleanup
      prf.c: implement the ""hh"" length modifier
      prf.c: abstract output method call
      prf.c: don't be silent with unknown conversion specifiers
      prf.c: remove buffer limitation on field width and string copy
      prf.c: remove buffer limitation on field width and padding for integers
      prf.c: remove buffer limitation on precision and padding for floats
      prf.c: remove arbitrary large stack buffer usage
      prf.c: fix display of float exponent >= 100
      prf.c: fix wrong results with %g conversion
      prf.c: properly format INF/NAN/zero with prefix
      prf.c: handle denormals properly
      realloc(): struct sys_mem_pool_block is word aligned
      native_posix: fix hw_irq_ctrl_get_irq_status() conflicting type
      arch/posix: 64-bit build flags
      native_posix: introduce a native_posix_64 board configuration
      tests: enable native_posix_64 testing
      mempool: significant reduction of memory waste
      Z_ISR_DECLARE: ensure proper alignment on 64-bit targets
      cpp: support for 64-bit constructors
      mempool: simplify the logic for sizing the free block bitmap
      m2gl025_miv: workaround for issue #17851
      tests/cmsis_rtos_v1: relax timing check a bit
      tests/cmsis_rtos_v2: exclude m2gl025_miv due to tick rate conflict
      riscv32: rename to riscv
      riscv: make core code 64-bit compatible
      riscv: isr.S: fix a missing lw to LR conversion
      LOG_BACKEND_DEFINE(): use Z_STRUCT_SECTION_ITERABLE()
      tests: fatal: make sure the illegal insn occupies a full word
      drivers: sifiv: make them 64-bit compatible
      riscv: freedom: rename RISCV32 to RISCV
      riscv: toolchain arguments for a 64-bit build
      riscv: add a qemu_riscv64 board

Nikos Oikonomou (5):
      sensors: renamed hdc1008 driver into ti_hdc
      sensors: ti_hdc driver wait conversion support
      sensors: ti_hdc now supports 1050 versions
      sensors: ti_hdc simplified ti_hdc_channel_get
      samples: added sample for ti_hdc

Oleg Zhurakivskyy (14):
      cmake: clang: Make clang pick -T option on linking
      doc/getting_started: mention ZEPHYR_TOOLCHAIN_VARIANT=llvm
      cmake: clang: Allow host's clang to be used for native_posix
      toolchain: Do not pollute TOOLCHAIN_HOME
      cmake: Set TOOLCHAIN_HOME for Zephyr's SDK
      cmake: llvm: Make the setup for host installed clang easier
      cmake: clang: Detect host installed clang
      cmake: clang: Don't unconditionally use gcc's fortify
      cmake: clang: Provide toolchain_cc_nostdinc() macro
      cmake: clang: Fix comment
      posix: cmake: Abstract freestanding options
      boards: native_posix: Add llvm to supported toolchains
      compiler: clang: Don't link libgcc for native_posix
      cmake: llvm: Invalidate toolchain capability cache

Parthiban Nallathambi (2):
      wifi: eswifi: init net_pkt cursor after net_pkt_write
      wifi: eswifi: add UDP support

Patrik Flykt (4):
      net/ip/dhcpv4: Set source IP address in DHCP Request
      net: ethernet: Set NET_ETH_PTYPE_ARP for IPv4 link local packet type
      net: ethernet: Send sender IP address in ARP announce packets
      scripts/coccinelle: Add script for counting identifier length

Paul Sokolovsky (41):
      net: sntp: Handle case of request timeout
      samples: sntp_client: Elaborate sample to workable state
      net: sntp: Add sntp_query() function with fractional precision
      arch: x86: fatal: If possible, print thread name in crash dump
      testsuite: Include thread name in crash dump for tests
      tests: socket: misc: Add tests for inet_pton()
      libc: minimal: Define time_t and suseconds_t
      libc: minimal: Introduce sys/_timeval.h
      posix: Move gettimeofday declaration to <sys/time.h>
      posix: sys/time.h: Add workaround for outdated newlib used by Xtensa
      CODEOWNERS: Add entry for lib/libc
      net: socket: Define NI_MAXHOST for compatibility
      net: socketutils: Add utils to manipulate network address strings
      net: sntp: Add convenience API for one-shot SNTP query
      samples: sntp_client: Switch from sntp_request() to sntp_query()
      samples: google_iot_mqtt: Switch from sntp_request() to sntp_query()
      samples: google_iot_mqtt: Explicitly cast socklen_t to int in printf
      net: getaddrinfo: Implement initial handling of host == NULL
      ext: mbedtls: Don't define MBEDTLS_PLATFORM_NO_STD_FUNCTIONS
      libc: minimal: Implement exit()/_exit() functions.
      tests: mbedtls: Call mbedtls_platform_set_printf() only if needed
      tests: benchmarks: mbedtls: Fix printf args
      ext: mbedtls: Enable easy integration with POSIX API
      net: getaddrinfo: Parse numeric IPv4 addresses
      tests: net: getaddrinfo: Add cases for numeric IPv4 addr
      include: arch: arc: Minor punctuation fix
      net: sockets: Make NET_SOCKETS_POSIX_NAMES depend on !POSIX_API
      posix: unistd.h: Add gethostname()
      posix: Move sys/stat.h to minimal libc
      posix: struct timespec: Move definition to sys/_timespec.h
      posix: time.h: Add workaround for outdated newlib used by Xtensa
      posix: mqueue.h: Move O_CREAT and friends to fcntl.h
      posix: unistd.h: open() doesn't belong here
      libc: minimal: time.h: Don't (re)define struct timespec.
      scripts: dts: Consistently open text files with utf-8.
      posix: Add headers related to BSD Sockets API
      lib: posix: Use ""posix_subsys"" as the CMake lib for the subsystem.
      CMakeLists.txt: Call toolchain_cc_nostdinc() at the end
      libc: minimal: Add headers as system includes
      lib: posix: Switch to use zephyr_interface_library_named cmake directive
      tests: posix: No longer use target_include_directories

Pavel Kral (2):
      shell: fs: add dependency on kernel allocator
      drivers: serial: uart_rtt: Virtual UARTs over RTT channels

Pavlo Hamov (3):
      boards: stm32_min_dev enable I2C_2
      boards: stm32f429_disc1: add i2c
      drivers: i2c: Add STM32F10X slave support

Pawel Dunaj (5):
      bluetooth: host: Save id when allocating CCC cfg slot
      bluetooth: host: Use correct identity when direct advertising
      bluetooth: host: Unref conn on direct adv start error
      include: sensor: Add position change channel
      include: sensor: Allow sensor private attr/chan/trig

Peter A. Bigot (68):
      drivers: timer: nrf: remove unnecessary event feature
      doc: clarify behavior of k_poll_signal_raise on error
      soc: arm: nordic_nrf: change default SYS_CLOCKS_PER_SEC
      soc: arm: nordic_nrf: unrevert provide custom busy_wait implementations
      Bluetooth: controller: remove duplicated code
      boards: nrf52840_papyr: support nrfjprog flash runner
      dts: misc: add SKY13351 SPDT switch description
      boards: arm: particle_*: enable PCB antenna on startup
      drivers: adc: add API to support calibration
      Bluetooth: gatt: avoid assumptions about characteristic handles
      Bluetooth: central_hr: use new API to get value handle
      scripts/dts: fix support for uint8-array property values
      drivers: eth_enc28j60: update for dts change to local-mac-address
      drivers: eth_mcux: update for dts change to local-mac-address
      drivers: eth_stellaris: update for dts change to local-mac-address
      cmake: DT: Add support for overlays that reference board-provided dtsi
      boards: particle_*: move DTS includes to dts subdirectory
      boards: arm: particle_*: uncomment cs-gpios in spi assignments
      subsys/fb: correct last character in vtiled fonts
      scripts: gen_cfb_font_header: correct last character
      scripts: gen_cfb_font_header: correct command sanitization
      Revert ""sys/util.h: helper macro to perform pointer difference""
      libc: minimal: provide types in time.h
      libc: minimal: provide gmtime implementation
      sys: timeutil: add module
      tests/lib/timeutil: add tests for time conversions
      samples: add board customization for native_posix_64
      subsys/cfb: correct font definition macro for linker script
      dts: add label property to all jedec,spi-nor nodes
      subsys/fs: add implementation helper module
      subsys/fs: remove FS_FLASH_STORAGE_PARTITION
      subsys/fs: fix log messages requiring strdup
      drivers/spi_nor: remove configurability of page/sector/block sizes
      drivers/spi_nor: remove write-block-size devicetree property
      drivers/spi_nor: allow application control of flash layout page size
      boards/particle_*: correct spi flash description
      boards/arm/nrf52840_pca10056: add alias for external flash
      samples/drivers/spi_flash: fix device naming
      samples/drivers/spi_flash: add board overrides
      subsys/storage/flash_map: detect missing flash device
      tests/subsys/settings/functional: ensure settings area is cleared
      tests/subsys/settings/functional: test external flash
      dts/spi-nor: use bytestring for JEDEC ID
      drivers/spi_nor: fix writes across page boundaries
      drivers/spi_nor: enable logging API
      subsys/fs: hide non-public API
      subsys/fs/shell: clean up nffs mount diagnostics
      subsys/fs/shell: add statvfs command
      samples/subsys/fs: move existing test into fat_fs
      sys/sem.h: fix path to atomic.h
      libc/minimal: fix reproducibility of gmtime
      CODEOWNERS: add owner for subsys/fb
      subsys/cfb: improve font structure packing
      scripts: gen_cfb_font_header: remove guard and make font data private
      scripts: gen_cfb_font_header: modify to replicate cfb fonts
      libc: minimal: add strspn and strcspn support
      drivers/adc: provide API to access reference voltage
      drivers/spi_nor: fix writes across page boundaries
      drivers/spi_nor: de-pessimize reads
      subsys/fs: clean up CMakeLists
      subsys/fs: add support for littlefs
      samples/subsys/fs/littlefs: add a basic sample
      subsys/fs/shell: add littlefs support
      subsys/fs/shell: avoid warning about output format truncation
      tests/subsys/fs/littlefs: add tests
      subsys/fs: remove ambiguity in readdir results
      subsys/fs/littlefs: allow customization of file system configuration
      lib/libc/minimal: Refined handle duplicate time definitions

Peter Herager (2):
      Bluetooth: Add debug kconfig for bluetooth services
      Bluetooth: Add additional attributes to DIS

Phil Erwin (1):
      cmake: Fix missing dependency

Pieterjan Camerlynck (2):
      net: lwm2m: fix automatic notification frequency
      net: lwm2m: cancel pending retransmit work when closing context

Piotr Mienkowski (8):
      flash_gecko: add support for page layout
      board: efr32_slwstk6061a enable SoC DC-DC converter
      boards: add jlink runner for efr32_slwstk6061a board
      drivers: Add counter driver (RTCC) for SiLabs Gecko SoCs
      scripts/dts: generate DT_ALIAS_<ALIAS>_<PROP> defines
      drivers: Define COUNTER_LOG_LEVEL using template
      dfu: make flash_img write to flash on buffer full
      drivers: fix printf formatting in flash drivers

Piotr Zierhoffer (3):
      build: west: Update the error message when not in west dir
      build: west: Change the remote of civetweb to upstream
      civetweb: Bump module to simplify the build process

Piotr Zięcik (46):
      tests: timer_api: Fix test for SYS_CLOCK_TICKS_PER_SEC != 100
      tests: tickless_concept: Fix slicing time measurement
      tests: test_sched_timeslice_reset: Fix slice time measurement
      drivers: litex_timer: Do not hard code tick rate
      tests: timer_api: Fix timer synchronization
      counter: Update counter API in order to provide more flexibility
      dts: bindings: Add bindings for ARM, ARC, Xtensa CPUs
      dts: bindings: Add fixed-clock DTS binding
      dts: Add information about CPU frequency to the cpu nodes
      dts: Add information about system bus frequency to the dts
      dts: bindings: nxp,kinetis-usbd: Make clocks property optional
      dts: bindings: fixed-clock: Make label optional
      tests: work_queue_api: Fix k_delayed_work_remaining_get() test
      drivers: i2c_bitbang: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      drivers: pwm_qmsi: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      drivers: timer: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      debug: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      logging: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      tests: benchmarks: Do not use CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC
      drivers: i2c_cc32xx: Get clock frequency from DTS
      soc: snps_arc_iot: Get CPU clock frequency from DTS
      soc: sam3x: Get CPU clock frequency from DTS
      soc: sam4s: Get CPU clock frequency from DTS
      soc: samd2x: Get CPU clock frequency from DTS
      soc: samr21: Get CPU clock frequency from DTS
      soc: same70: Get CPU clock frequency from DTS
      soc: k6x: Get CPU clock frequency from DTS
      soc: kl2x: Get CPU clock frequency from DTS
      soc: kwx: Get CPU clock frequency from DTS
      soc: lpc54xxx: Get CPU clock frequency from DTS
      arch: xtensa: Get CPU clock frequency from DTS
      soc: msp432p4xx: Get CPU clock frequency from DTS
      soc: nxp_rt: Get system clock frequency from DTS
      drivers: beetle_clock_control: Get CPU clock frequency from DTS
      logging: log_backend_swo: Get clock frequency from DTS
      drivers: spi_dw: Get clock frequency from DTS
      drivers: uart_cmsdk_apb: Get clock frequency from DTS
      drivers: uart_pl011: Get clock frequency from DTS
      drivers: uart_cc32xx: Get clock frequency from DTS
      drivers: uart_msp432p4xx: Get clock frequency from DTS
      drivers: uart_qmsi: Get clock frequency from DTS
      drivers: uart_stellaris: Get clock frequency from DTS
      drivers: uart_cc13xx_cc26xx: Get clock frequency from DTS
      drivers: wdog_cmsdk_apb: Get clock frequency from DTS
      drivers: adc_stm32: Get clock frequency from DTS
      debug: tracing: Fix compilation error

Pushpal Sidhu (2):
      boards: adafruit_trinket_m0: Set flash address
      boards: adafruit_trinket_m0: Force program flash to 0x2000

Radoslaw Koppel (7):
      subsys/ztest: Documentation fix
      subsys/storage/flash_map: Fix returned error codes
      drivers/flash/flash_simulator: Allow unaligned read
      subsys/settings: Add const modifier to the value pointer
      subsys/settings: Cleanup the initialisation of the subsys
      subsys/testsuite/ztest: change zassert_mem_equal to macro
      subsys/testsuite/ztest: Fix zassert_mem_equal user message printing

Radu Alexe (1):
      Bluetooth: controller: better field names

Ravi kumar Veeramally (12):
      net: ipv6: Trivial changes in fragmentation debug
      tests: net: Add more tests to ipv6 fragmentation
      net: tests: ipv6_fragment: Use NET_DBG instead of DBG
      net: ethernet: Add VLAN tag stripping capability flag
      net: ethernet: l2: Add support for VLAN tag strip
      net: shell: Add VLAN tag stripping to capabilites
      drivers: native_posix: Add VLAN tag strip feature
      net: sockets: Add timeout to socket connect call
      net: Add support for SOCKS5 socket option
      net: socks: Make SOCKS5 implementation transparent
      net: mqtt: Modify SOCKS5 based connections
      samples: net: Modify mqtt_publisher to use set proxy

Reham Tarek (1):
      Bluetooth: Mesh: AES-CCM: Fix output MIC with additional data

Reto Schneider (1):
      sample: button: Fix format specifier

Rich Barlow (1):
      Bluetooth: Mesh: LPN: Clear sent_req on failure

Richard Osterloh (1):
      drivers: pinmux: add SPI2 on Port B defines

Rick Conrey (20):
      drivers: counter: enable counter for STM32WB
      soc: stm32wb: enable counter on STM32WB
      dts: wb: Enable RTC
      boards: nucleo_wb55rg: Enable RTC
      drivers: spi: Enable SPI on stm32wb
      dts: wb: Enable spi on stm32wb
      soc: stm32wb: Enable SPI on stm32wb
      drivers: pinmux: enable SPI pins on stm32wb
      boards: nucleo_wb55rg: enable SPI1 on nucleo_wb55rg
      tests: spi: enable SPI on STM32WB
      drivers: pinmux: enable PWM pins on STM32WB
      dts: wb: enable PWM on STM32WB
      soc: stm32wb: Enable PWM on STM32WB
      boards: nucleo_wb55rg: enable PWM2 on nucleo_wb55rg
      drivers: adc: enable ADC on STM32WB
      drivers: pinmux: enable ADC pins on STM32WB
      dts: wb: enable ADC
      boards: nucleo_wb55rg: Enable ADC
      tests: nucleo_wb55rg: add adc test
      drivers: adc: Enable ADC on STM32WB

Robert Lubos (23):
      net: openthread: Do not overwrite stored dataset with defaults
      ext: lib: crypto: Extend mbedTLS generic config
      drivers: ieee802154: New API for ACK configuration
      drivers: ieee802154_nrf5: Rename nrf5_config to nrf5_irq_config
      drivers: ieee802154_nrf5: Implement configure API
      net: openthread: Implement frame pending API
      net: openthread: Fix utilsFlashErasePage function
      net: lib: mqtt: Enable blocking PUBLISH payload readout
      net: Allow to disable native IP stack with socket offloading
      net: Avoid calling L2 functions on offloaded interface
      net: sockets: Remove TI conditional from offloaded fcntl implementation
      drivers: sensor: Update DT symbols in qdec_nrfx driver
      ext: hal: nordic: Update DT symbols in nrfx config file
      ext: hal: nordic: Fix DT symbols in 802154 radio driver
      net: openthread: Verify iface in net_mgmt event handler
      net: lwm2m: Ignore `close` return value
      drivers: ieee802154_nrf: Fix SoC header inclusion
      boards: holyiot_yj16019: Fix radio capabilities
      manifest: Add OpenThread repository
      net: openthread: Use repository provided by west
      samples: net: echo_client: Fix bug in workqueue processing
      kernel: timeout: Fix macro usage in next_timeout function
      drivers: timer: nrf_rtc_timer: Fix set_comparator corner case

Roger N'Guessan (6):
      boards: nucleo_wb55rg: Enable I2C
      drivers: i2c: enable I2C on STM32WB
      dts: wb: enable I2C
      drivers: pinmux: enable I2C PINs on STM32WB
      boards: nucleo_wb55rg: add I2C doc
      Bluetooth: drivers: ipm_st32wb: Fix compilation

Ryan C Johnson (1):
      drivers: flash: w25q: erase operations must be erase-size aligned

Ryan QIAN (10):
      ext: hal: nxp: mcux: add device files for RT1015
      arch: arm: nxp: imxrt1015: add device support
      drivers: serial: add config for uart 4
      boards: arm: add board support for mimxrt1015_evk
      dts: arm: nxp: Add dtsi for RT1015 and RT1020
      soc: arm: nxp_imx: rt: update flash size of 32KB
      boards: arm: mimxrt1015_evk: update board dts
      boards: arm: mimxrt1020_evk: update board dts
      boards: arm: mimxrt1015_evk: update the ram size
      tests: change the min_ram for mbedtls and mem_protect

Saravanan Sekar (1):
      wifi: eswifi: Select socket before configuration

Sathish Kuttan (20):
      boards: intel_s1000_crb: Host interface config
      boards: intel_s1000_crb: Image download scripts
      doc: intel_s1000: image download from Linux host
      dts: intel_s1000: add low power sram as sram1
      soc: intel_s1000: add dts fixup for low power sram
      soc: intel_s1000: define lpsram memory for linker
      soc: intel_s1000: add lpsram in linker script
      samples: intel_s1000: audio buffers in lpsram
      samples: intel_s1000: audio buffers in lpsram
      samples: intel_s1000: audio buffers in lpsram
      samples: intel_s1000: USB control for audio sample
      samples: intel_s1000: tuning driver for audio app
      samples: intel_s1000: audio processing threads
      samples: intel_s1000: add background thread
      samples: intel_s1000: track status of audio app
      samples: intel_s1000: tuning commands in audio app
      samples: intel_s1000: update project configration
      samples: intel_s1000: add files to cmake build
      samples: intel_s1000: script to control from host
      samples: intel_s1000: update sample audio app doc

Scott Worley (8):
      ext : hal : mec1501 Add the MEC1501 external headers.
      dts : arm : Add Microchip MEC1501 SoC device tree
      soc : arm : microchip_mec Add Microchip MEC1501 SoC
      boards : arm : Add support for Microchip MEC15xx EVB ASSY 6853
      ext : hal : microchip Header updates for MEC1501
      drivers : timer : Add MEC1501 32KHz kernel timer driver
      soc : arm : microchip_mec Fix MEC1501 SoC ECIA initialization
      ext : hal : Microchip MEC1501 PS/2 and global configuration updates.

Sebastian Bøe (9):
      cmake: DT: Change from -Idts/common to -isystem dts/common
      cmake: DT: Add support for out-of-tree binding root directories
      cmake: LD: Allow input sections to remain unsorted
      cmake: Don't have users call zephyr_link_interface on mbedTLS
      cmake: Mark post_build files as BYPRODUCTS
      latency_measure: Remove commented-out code
      latency_measure: Fix bug where the wrong prj.conf file was used
      size_report: Don't crash when observing stripped symbols
      kconfig: Fix nrf91 NONSECURE dependency

Siddharth Chandrasekaran (3):
      board: stm32_min_dev: Add support for blue/black variant
      doc: stm32_min_dev: Update for blue/black variant support
      tests: kernel: Exclude platforms stm32_min_dev_*

Sigvart Hovland (1):
      cmake: boilerplate: Fix ZEPHYR_BASE variable for windows

Sigvart M. Hovland (1):
      cmake: zephyr_modules: Add west executable argument

Song Qiang (6):
      drivers: gpio: stm32: add ASCR configuration for L47x+
      dts: arm: stm32: add dts support for ADC1 of stm32
      drivers: pinmux: stm32: add pinmux support for ADC of stm32
      drivers: adc: add driver support for ADC1 of stm32
      test: driver: adc: add some nucleo boards support for adc test cases
      doc: boards: arm: nucleo: add ADC support to the boards doc

Stefan Kraus (1):
      96b_nitrogen: Increase size of boot partition.

Steven Wang (2):
      doc: intel_s1000: install the license key manually
      Doc: Use SDK 0.10.1 instead of 0.10.0.

Stig Bjørlykke (1):
      boards: arm: Add support for nRF51 Dongle (PCA10031)

Sören Tempel (5):
      soc/riscv32-fe310: add label for uart1
      net: slip: allow compilation without CONFIG_NET_LLDP
      net: slip: fix compilation without NET_L2_ETHERNET
      drivers: serial: sifive: Fix UART extern interrupts
      drivers: serial: sifive: fix configuration of rxcnt/txcnt

Tavish Naruka (2):
      boards: nrf52840_blip: enable default instances of peripherals
      boards: nrf52840_papyr: misc. board config fixes

Tedd Ho-Jeong An (10):
      Bluetooth: GATT: Add support for Read Using Characteristic UUID
      Bluetooth: shell: Add command for Read Using Characteristic UUID
      tests: bluetooth/tester: Add support Read Using Characteristic UUID
      Bluetooth: GATT: Fix using a wrong handle
      doc: Bluetooth: Update GAP ICS to 7.4.1
      doc: Bluetooth: Update GATT ICS to 7.4.1
      doc: Bluetooth: Update L2CAP ICS to 7.4.1
      doc: Bluetooth: Update SM ICS to 7.4.1
      doc: Bluetooth: Add ICS for Mesh Profile
      doc: Bluetooth: Update PICS to ICS

Thomas Ebert Hansen (5):
      tests: crypto: Update HMAC_PRNG test
      bluetooth: controller: Move Nordic specific code
      bluetooth: controller: Move Nordic specific code
      Bluetooth: Add support for vendor-specific events
      tests: bluetooth: Test vendor-specific events

Thomas Stenersen (2):
      Bluetooth: controller: Remove BT_HCI_RAW dependency
      Bluetooth: controller: Rename assert handler Kconfig title

Thomas Stilwell (1):
      cmake: fix regex for west version check in host-tools.cmake

Timo Teräs (1):
      libc: add strnlen implementation

Tobias Aschenbrenner (1):
      fix: kw41z: Use correct mapping for dBm

Tobias Schlaepfer (1):
      drivers/ieee802154: Fix KW41Z driver fault

Tobias Svehagen (3):
      Bluetooth: Make RSSI value available to mesh applications
      Bluetooth: Change from bitfields to normal types
      Settings: Initialize settings_lock mutex

Tomasz Bursztyka (43):
      net/offload: Add dummy functions when offloading is disabled
      net/ip: Make struct net_addr holding uninon of ipv6/4 unconditionally
      net/context: Reduce the usage of #ifdef/#endif
      net/context: Reordering some ipv4/6 logic to follow all other places
      net/connection: Removing cache feature
      net/connection: Reduce usage of #ifdef
      net/connection: Use slist to manage used/unused connections
      net/connection: Merge rank bits into flags attribute
      net/connection: Final cleanup
      net/iface: Modify function to get IPv6 global address
      net/iface: Add a function to get IPv4 global address
      net/pkt: Remove useless _reserved attribute
      net/arp: No need of 64bits timer precision on ARP requests
      net/pkt: Redefine the necessary fifo attribute
      net/udp: Computed checksum field should not be 0
      net/udp: Accept UDP packet with missing checksum
      net/udp: Check UDP header's length attribute
      tests/net: Fix IPv6 and UDP test as UDP got stricter on checking header
      net/udp: Always drop IPv6 UDP packet if checksum field is 0
      drivers/wdt: Rename STM32 IWDG files to follow naming rules
      drivers/wdt: Rename CMSDK driver to follow naming rules
      include: Removing legacy left-overs in wdt.h API header
      drivers/wdt: Fixing tiny style issues in sam0 driver
      net/llmnr: Fix LLMNR answer creation
      net/iface: Reduce usage of ifdef around CONFIG_NET_IPV6
      net/iface: Reduce usage of ifdef around CONFIG_NET_IPV4
      net/iface: Reduce ifdef usage on various options
      net/iface: Initialize IPv4/6 address so it removes more ifdef
      net/iface: Remove useless attributes in net_if_ipv6 structure
      net/iface: Coalesce all DAD timers through one
      net/iface: Coalesce all RS timers through one
      net/ipv4: Add a net mgmt event for IPv4 router deletion
      net/iface: Rework how routers are handled
      net/iface: Add IPv4 route find and add
      net/gptp: net_gptp_recv() dummy function needs to return a verdict
      net/ethernet: Cleanup a bit on the usage of ifdefs
      net/lldp: Simplify Kconfig file
      net: Add a connection manager preliminary logic
      doc/networking: Update network management part relevantly
      drivers/gpio: Adding missing braces for XEC driver
      driver/pinumx: Adding missing braces for XEC driver
      samples: Counter alarm should display seconds, not ticks
      net/conn_mgr: Fix events handler

Tomasz Gorochowik (4):
      drivers: eth: gmac: Fix MAC address info log
      libc: minimal: fix realloc function
      net: sockets: implement getsockname function
      samples: net: Add civetweb HTTP sample

Tomás Longeri (1):
      ring_buffer: Fix return types

Torsten Rasmussen (1):
      west: zephyr_module: Improved error messaging during west failures

Tyler Hall (1):
      scripts/sanitycheck: fix ZEPHYR_BASE subdir check edge case

Ulf Magnusson (82):
      kconfig: Add missing quotes after 'source' and 'menu'
      kconfiglib/menuconfig: Various behavior/UI improvements
      genrest: Include all parents in menu paths
      shell: kconfig: Put 'menuconfig SHELL' in top-level menu
      kconfig: Avoid potential issue parsing generated_dts_board.conf
      kconfig: Use 'default' instead of 'def_bool' in Kconfig.defconfig files
      west: Fix unused import and variable
      scripts: gen_kobject_list: Remove redundant parentheses
      ext: lib: mcumgr: Remove 'External Sources -> Management' menu
      Bluetooth: kconfig: Put 'menuconfig BT' in top-level menu
      ext: open-amp: kconfig: Add missing OPENAMP dep. to OPENAMP_SRC_PATH
      dfu: kconfig: Remove 'DFU Options' menu
      console: kconfig: Put 'menuconfig CONSOLE_SUBSYS' in top-level menu
      subsys/random: Hide 'Random generator' choice when empty
      c++: kconfig: Fix choice dependencies and use 'menuconfig' symbol
      kconfig: Use 'CONFIG_FOO_*' in #endif comments to avoid CI failures
      doc: kconfig: Fix accidental SPDX-License-Identifier in generated doc
      disk: kconfig: Group related symbols and use 'menuconfig' symbol
      lvgl: kconfig: Remove menu and use a 'menuconfig' symbol
      doc: kconfig: Clarify that 'depends on' works for string/int/hex
      doc: kconfig: Explain the 'menuconfig' keyword and good uses for it
      doc: kconfig: Encourage dropping 'Enable ...' from most prompts
      doc: kconfig: Fix typo in documentation for 'optional' on choices
      menuconfig: Small Space/Enter improvement + fix for obscure bug
      guiconfig: Add a graphical configuration interface
      doc: Add guiconfig documentation
      kconfiglib: Unclutter symbol strings, avoid redundant writes, misc.
      genrest: Mention that dependencies are only propagated to 'depends on'
      kconfig.py: Use messages returned by load_config() and write_config()
      dts: Replace status = ""ok"" with status = ""okay""
      scripts/dts: Make extract/flash.py easier to read
      drivers: pinmux: stm32l4: Fix CONFIG_SOC_STM32L496XX references
      yaml: Remove redundant document separators
      scripts/dts: Clarify extract/flash.py some more
      genrest: De-spam docs by skipping direct deps. in more places
      dts/bindings: Clarify #cells in template
      dts: bindings: Remove dead 'label:' keys on properties
      dts: bindings: Do not require a 'reg' property for snps,arcv2-intc
      dts: bindings: Make 'clocks' optional in i2c.yaml
      dts: bindings: Make 'clocks' optional in pwm.yaml
      dts: bindings: Make 'clocks' optional in adc.yaml
      dts: bindings: Make 'clocks' optional in nxp,{imx-uart,lpc-usart}.yaml
      dts: bindings: simplify !include in jedec,spi-nor
      dts: Add missing spi-max-frequency for mimxrt/nxp/hifive1/qemu_riscv2
      dts: bindings: Do not require 'interrupts' on STM32 GPIO nodes
      boards/arm/mps2_an521: Add missing timer labels to dts
      dts: riscv32: rv32m1: Disable unused interrupt multiplexers
      dts: bindings: Remove unused 'version' field
      dts: bindings: Remove some YAML document separators
      dts: bindings: Clean up microchip,xec-espi.yaml and espi.yaml
      scripts/dts: Rename --deprecate-only to --deprecated-only
      dts: Add new DTS/binding parser
      scripts/dts: Add deprecation comments to old scripts
      dts: bindings: Add lots more documentation
      dts: bindings: Rename binding template to binding-template.yaml
      doc: dts: Add more information to .dtsi example
      dts: arm: Remove leftover zephyr,irq-prio property from CC2650
      dts: posix: Fix 'current-speed' property typo
      boards: 96b_nitrogen: Remove 'csn-pin' property from SPI master
      dts: nxp: Remove unused 'clock-source' properties
      dts: nxp: Remove clk-* properties from nxp,kinetis-sim nodes
      dts: nxp: Remove unused 'reload-counter' properties
      dts: nxp: Remove unused 'start-on-boot' properties
      dts: nxp: Remove unused 'prescaler' properties from watchdog nodes
      dts: riscv: Add sifive,plic-1.0.0 binding and fix riscv,ndev values
      scripts: dts: Add test for multiple binding directories
      drivers: ethernet: Remove redundant NET_L2_ETHERNET dep. from ETH_LITETH
      drivers: flash: Remove redundant FLASH dep. from FLASH_SIMULATOR
      drivers: flash: Remove redundant FLASH dep. from FLASH_NATIVE_POSIX
      drivers: espi: kconfig: Remove redundant ESPI_PERIPHERAL_CHANNEL deps.
      disk: kconfig: Remove redundant DISK_ACCESS_SDHC dependency
      drivers: gpio: Remove redundant GPIO dep. from GPIO_HT16K33
      Bluetooth: L2CAP: Kconfig: Remove redundant BT_CONN dependency
      scripts: edtlib: Reduce code duplication in phandle/value list parsing
      drivers: sensors: Remove 'version:' field in Si7006 binding
      Bluetooth: GATT: Kconfig: Remove redundant BT_CONN dependencies
      dts: Replace more status = ""ok"" with status = ""okay""
      edtlib: Check that 'status' has one of the values from the DT spec.
      dts: edtlib: Improve naming in _check_binding()
      dts: edtlib: Simplify 'category: optional' code in Device._prop_val()
      dts: edtlib: Shorten _init_{interrupts,gpios}() a bit
      dts: edtlib: Shorten some license headers

Vaishali Pathak (1):
      drivers: sensors: Add Si7006 temperature/humidity sensor driver

Vikrant More (7):
      samples: mesh: enable SMP service for DFU
      samples: mesh: single timer to handle all transitions
      samples: mesh: removed bugs in on-off transition
      samples: mesh: removed redundant code
      samples: mesh: corrected implemenation of gen. move message handlers
      samples: mesh: replaced magic numbers with values defined in stdint.h
      samples: mesh: sync the init procedure to initialise the mesh

Vinayak Kariappa Chettimada (72):
      Bluetooth: controller: Data Length Update port to ULL/LLL arch
      Bluetooth: controller: Move PKT_US to ULL internal header
      Bluetooth: controller: Fixes to pass DLE/PHY conformance tests
      Bluetooth: controller: Fix advanced XTAL feature regression
      Bluetooth: controller: Fix regression in Coded PHY CI Change
      Bluetooth: controller: Fix nRF52840 Coded PHY timings
      Bluetooth: controller: Fix pin or key missing response
      Bluetooth: controller: Fix missing BT_CTLR_FILTER conditional
      Bluetooth: controller: Yield ULL processing when Ctrl PDU deferred
      Bluetooth: controller: Implement low latency ULL processing
      Bluetooth: controller: Move LLL-to-ULL Tx Ack API to ULL
      Bluetooth: controller: Add GPIO Debug Pins for HFCLK state
      Bluetooth: controller: Fix XTAL advanced feature
      Bluetooth: controller: Use void pointer to return rand value
      Bluetooth: controller: ull/lll: Increase adv random delay resolution
      Bluetooth: controller: ull/lll: Fix pin or key missing response
      Bluetooth: controller: Fix incorrect conditional compilation
      Bluetooth: controller: Fix incorrect data type use in slot calc
      Bluetooth: controller: Fix ULL LLL execution priority selection
      Bluetooth: controller: Fix Rx and Tx buffer sizes
      Bluetooth: controller: Enable Zephyr VS HCI in ULL/LLL impl.
      Bluetooth: controller: Disable controller privacy feature
      Bluetooth: controller: Enable additional ULL/LLL CI tests
      Bluetooth: controller: Fix Enc Setup overlap with Length Update
      Revert ""Bluetooth: controller: Disable controller privacy feature""
      Bluetooth: controller: split: Port h/w privacy feature
      Bluetooth: controller: split: Fix shell app regression
      Bluetooth: Fix building of broadcaster or observer only
      Bluetooth: shell: Fix disconnect command argument count
      Bluetooth: controller: split: Port Enc setup to be queueable
      Bluetooth: controller: split: Add internal ull_update_mark func
      Bluetooth: controller: split: Port slave conn update assert fix
      Bluetooth: controller: split: Fix tx_ack mfifo count
      Bluetooth: controller: split: Add ULL/LLL architecture assert checks
      Bluetooth: controller: split: Port random slave event backoff
      Bluetooth: controller: BT_CTLR_USER_EXT depends on BT_LL_SW_SPLIT
      Bluetooth: controller: split: Fix buffer leak on disconnect
      Bluetooth: controller: Fix handling zero length L2CAP start frame
      mailmap: Fix entry needing both name and email replace
      Bluetooth: controller: Add PA/LNA support on NRF_P1 GPIO pins
      Bluetooth: controller: split: Add interface to get adv/scan handle
      Bluetooth: controller: split: Port radio event abort
      cmake: check ZEPHYR_SDK_INSTALL_DIR is set
      Bluetooth: controller: Move ticker_id_prepare reset to early return
      Bluetooth: controller: Fix assert during DLE
      Bluetooth: controller: Fix logging assert
      Bluetooth: controller: split: Fix incorrect CU under latency
      Bluetooth: controller: split: Fix continuous initiator
      Bluetooth: controller: Fix PHY update proc symmetric rsp
      Bluetooth: controller: Fix packet timing restriction reset
      Bluetooth: controller: Fix missing data length update event
      Bluetooth: controller: Fix post DLE/PHY update event length
      Bluetooth: controller: Enable Fast Enc and RSSI features
      Bluetooth: controller: Add deferred procedure complete event
      Bluetooth: controller: Fix DLE during data transmission
      Bluetooth: controller: Update Bluetooth version to 5.1
      Bluetooth: controller: split: Fix packet timing restrict reset
      Bluetooth: controller: split: Fix PHY update proc symmetric rsp
      Bluetooth: controller: split: Handle zero length L2CAP start frame
      Bluetooth: controller: Fix cond compile of DLU event generation
      Bluetooth: controller: split: Conditional compile LL Rx pool use
      Bluetooth: controller: Rename BT_LL_SW to BT_LL_SW_LEGACY
      Bluetooth: mesh: Use legacy LL for microbit build
      Bluetooth: controller: Make ULL/LLL split the default
      Bluetooth: controller: split: Fix pipeline prepare/resume loop
      Bluetooth: controller: Decorrelate address generation from resolution
      Bluetooth: shell: Fix directed adv parameter check
      Bluetooth: mesh_shell: Disable controller filter
      Bluetooth: controller: split: Reduce event done queue size
      Bluetooth: controller: split: Increase event start overhead time
      Bluetooth: controller: split: Increase pipeline size
      Bluetooth: controller: split: Fix pipeline for continuous events

Vincent Wan (5):
      samples: sockets: sntp_client: make IPv6 & NET_CONFIG_SETTINGS optional
      samples: sockets: sntp_client: Add support for cc3220sf_launchxl
      drivers: wifi: simplelink: Add static IP address support
      soc: ti_simplelink: add macro to prevent double inclusion of soc.h
      doc: boards: cc3220sf_launchxl: update OpenOCD instructions

Watson Zeng (2):
      boards: arc: emsdp: add basic emsdp board support
      board: emsdp: doc update and bug fixes

Wayne Ren (37):
      arch: arc: optimize the push and pop of fast irq
      boards: iotdk: add mpu and fpu configuration
      soc: nsim: nsim em targets are EM4_FPUDA
      soc: arc: optmize and bug fix the compile options
      arch: arc: implement z_arch_switch to replace swap
      arch: arc: fix the bug caused by hardware sp switch in interrupt
      arch: arc: remove arc_exc_saved_sp used in exc handling
      arch: arc: remove saved_r0/saved_sp used in firq handling
      arch: arc: use IRQ_ACT to check nest interrupt
      ARC: Fix selection of custom atomic ops
      ARC: Add support for ARC HS family of CPU cores
      arch: arc: optimize the float support
      arch: arc: implement z_arch_float_enable
      arch: arc: add handling for accl regs, r25, r30
      doc: add doc of arc floating point support
      arch: arc: typo fixes and comments clean up
      arch: arc: remove custom atomic operations
      arch: arc: fix the offset generation of accl_regs
      arch: arc: add basic arc connect driver support
      drivers: arcv2_timer0: add support for smp
      arch: arc: add macros to get current cpu id
      arch: arc: add initial support of SMP
      arch: arc: the caculation of exception stack is wrong
      arch: arc: fixes the case triggering a cpu exception in user mode
      arch: arc: add extra handling about exception raised in interrupt
      arch: arc: fix on the reason of software-triggered fatal exceptions
      tests: remove the exception for arc
      arch: arc: add initial support of ARC TEE
      boards: emsk: add initial support of normal/non-secure application
      boards: nsim: add initial support of normal/non-secure application
      samples: add sample to show how ARC TEE works
      drivers: ns16550: add WORD only access support
      boards: hsdk: add initial support of ARC HS Development Kit
      arch: arc: no need of default n for arc_connect
      arch: arc: fix a bug when CONFIG_SMP is enabled
      tests: enable hsdk and nsim_hs_smp for smp test
      boards: nsim: disable CONFIG_SMP by default for nsim_hs_smp

Wendy Liang (2):
      serial: Add Xilinx ZynqMP PS uart driver
      timer: Add Xilinx ZynqMP PS ttc timer

Wentong Wu (19):
      lib/posix: correct the meaning of CONFIG_MAX_PTHREAD_COUNT
      arch: arm: switching stack pointer with assembly code
      tests: kernel: increase stack buffer when code coverage enabled
      scripts: mpu align for ro section of new memory region on non-XIP system
      scripts: make code relocation work for non-XIP system
      linker: kobject-text.ld: avoid backwards location counter
      CODEOWNERS: Add code ownership for gen_relocate_app.py
      linker: add no-flash system support
      testsuite: coverage: port GCOV linker code to CMake for X86
      kernel: add futex support
      tests: add futex test cases
      driver: timer: loapic_timer: fix compile issue
      scripts: elf_helper: correct kernel object address check range
      linker: move scripts generated code at the beginning of .text
      scripts: make mpu align in sections for code reloation
      target_relocation.cmake: fix spell typo
      lib: os: add sys_sem data type
      tests: add test cases for sys_sem
      kernel: timeout: do not active time slicing if idle thread ready

William Fish (2):
      drivers: sensor: APDS9660 WhoAmI check logic
      soc: nordic_nrf: MPU temperature sensor default

Wolfgang Puffitsch (4):
      Bluetooth: controller: hci: Add some documentation for encode_control().
      Bluetooth: controller: hci: Add user hooks.
      Bluetooth: controller: Settings for company_id and subversion_number.
      tests: Bluetooth: Add test case for settings in the controller.

Yannis Damigos (12):
      tests: can: api: Fix ""Device not not found"" error message
      tests/subsys/usb/device: Fix comment and message
      usb_dc_stm32: Check if functions' arguments are valid
      dts: xtensa: Fix compatible for xtensa lx6
      dts: Restructure xtensa dts directory
      dts: intel_s1000: Move core_intc node under soc node
      usb_dc_stm32: Don't update ret_bytes if send fails in usb_dc_ep_write()
      dts: stm32l4: Fix USB phy node for stm32l432 and stm32l452
      disco_l475_iot1: Enable I2C3
      i2c_ll_stm32_v2: Set slave_attached to false on slave unregister
      olimexino_stm32: Enable I2C1
      i2c_ll_stm32: Use macros to add I2C instances

Yasushi SHOJI (4):
      linker: Make alignment size for sw_isr_table configurable
      cmake: compiler: gcc: Explicitly spell out stddef.h and limits.h
      kernel: sched: Do not force preempt when k_sched_unlock()
      test: kernel: sched: Add a test for nested scheduler lock

Yaël Boutreux (23):
      stm32mp1: disable cmsis_rtos_v2 test
      dts: stm32mp157: Dtsi fixup
      drivers: clock_control: stm32: Modify file naming pattern
      clock_control: Add stm32mp157c_dk2 board support
      drivers: gpio: stm32: Indentation and cleanup
      gpio: Add stm32mp157c_dk2 board support
      uart: Add support for stm31mp157c_dk2 board
      drivers: pinmux: stm32: code cleanup
      pinmux: Add stm32mp157c_dk2 board support
      dts: bindings: Fix missing ""zephyr"" vendor name
      boards: shields: x_nucleo_iks01a2: doc: update dead URL link
      boards: arm: stm32mp157c_dk2: Add Arduino R3 connector definition
      drivers: bluetooth: hci: spi: Handle when the buffer is empty
      boards: arm: disco_l475_iot1: remove MCU slow down when using BlueRNG-MS
      drivers: spi: spi_ll_stm32: Fix uncleared MODF flag
      drivers: spi: spi_ll_stm32: Add config to manage slave select
      drivers: spi: spi_ll_stm32: Long line cleanup
      drivers: spi: spi_ll_stm32: set NSS before mode
      drivers: spi: st_stm32: Abstract LL function for spi ver. compatibility
      west.yml: update hal_stm32 revision to add SPI LL for CubeMP1
      soc: arm: st_stm32: stm32mp1: Add SPI support
      drivers: spi: spi_ll_stm32: Add support for STM32MP1x SoC
      boards: arm: stm32mp157c_dk2: Add SPI support

Yong Jin (1):
      driver: watchdog: stm32: rename the independent watchdog name

francois ramu (1):
      boards: stm32f469i_disco: add more leds to board

ling wei (1):
      net: trickle: Re-init trickle timer for multiple triggerings

Øyvind Rønningstad (13):
      scripts: mergehex: Add --overlap argument
      cmake: Add function for adding snippets to the linker file
      soc: arm: st_stm32: Port CCM sections to use the Cmake function
      arch: Port the ramfunc section to the Cmake function
      linker: Port usage of custom-sections to use Cmake
      soc: Port usage of soc-*.ld to use Cmake
      arch: port nocache linker code to use Cmake function
      arch: arm: cortex_m: Port some vector_relay linker code to Cmake
      arch: Put intlist.ld into Cmake
      testsuite: coverage: Port GCOV linker code to Cmake.
      cmake: Allow import_kconfig() to return a list of the variables it sets
      linker: Move sgstubs section to the very end and fix for nrf91
      arch: arm: core: tz: Linking of secure entry functions into NS firmware
```
",59771425
1524,False,True,2019-07-05T16:14:06Z,2019-07-05T16:14:59Z,"This is the first release candidate from the 1.14 branch (LTS) with many bug fixes and and test enhancements increasing coverage of testing. Highlights of this release:
- Bluetooth bugfixes needed for host and controller qualification
- Increase coverage of kernel and core OS tests and fixed issues uncovered by the newly added tests
- Various build system enhancements keeping 1.14 compatible with development branch
- Support for out-of-tree configurations
- Fixes for issues uncovered by static analysis
 

Below is the list of all commits since v1.14.0:

```
Alexander Mihajlovic (1):
      posix: Fix calculation of clock base in clock_settime

Alexander Wachter (1):
      drivers: can: stm32: fix filter mode set

Anas Nashif (5):
      ci: only build on specified branches
      manifest: add ci-tools
      ci: add v1.14-branch to email integration
      CODEOWNERS: remove non-existing path
      release: bump version to 1.14.1-rc1

Andrew Boie (46):
      arc: arm: fix support for MPUs on non-XIP systems
      newlib: fix user mode calls to _sbrk
      tests: pipe: fix error with optimization disabled
      tests: cmsis_v2: don't hard-code stack sizes
      lib: cmsis_v2: set default dynamic stack size
      lib: cmsis_v2: increase stack sizes if coverage
      tests: cmsis_v1: properly set stack size
      lib: cmsis_v1: set stack size larger if coverage
      kernel: increase workq sizes if COVERAGE=y
      testsuite: fix memory access
      tests: timer_api: run in user mode
      tests: stackprot: don't set main stack size
      kernel: adjust default main stack for riscv
      kernel: fix k_stack_alloc_init()
      tests: mutex_api: run in user mode
      kernel: init: exclude some funcs from coverage
      kernel: init: fix coverage gap
      kernel: init: exclude unreachable code
      kernel: allow k_sleep(K_FOREVER)
      tests: queue: test k_queue_alloc_*pend()
      kernel: idle: exclude no-op funcs from coverage
      lib: os: remove dead code
      tests: poll: expand userspace coverage
      tests: schedule_api: fix extern tstacks
      tests: schedule_api: exercise SCHED_MULTIQ
      tests: schedule_api: test syscalls from usermode
      tests: schedule_api: skip test assert if COVERAGE
      tests: userspace: cover missing/bad syscalls
      tests: dynamic_thread: cover thread_idx_free()
      tests: userspace: cover z_object_recycle()
      kernel: exclude stubs from code coverage
      tests: common: cover k_cycle_get_32() syscall
      tests: device: cover device_get_binding()
      tests: thread_apis: exercise some system calls
      tests: sys_mutex: improve code coverage
      kernel: offsets: exclude from coverage
      lib: os: fix vsnprintk coverage
      lib: os: exclude z_arch_printk_char_out()
      lib: os: fix slist code coverage
      kernel: test coverage for sflist
      tests: common: add tests for extra sflist APIs
      tests: schedule_api: cover priority checks
      arc: use different load instruction
      kernel: fix CONFIG_THREAD_NAME from user mode.
      tests: json: improve code coverage
      tests: fatal: test failed assertion

Andrzej Głąbek (2):
      boards: nrf52840_pca10059: Configure NFC pins as GPIOs by default
      drivers: pwm_nrfx: Correct prescaler value for undivided clock

Andrzej Puzdrowski (1):
      fs/nvs: fix startup for 2-sectors configuration

Armando Visconti (2):
      boards: 96b_argonkey: upgrade documentation using official info
      drivers/i2s_ll_stm32.c: (FIX) Avoid warning in LOG_ERR

Benjamin Valentin (3):
      usb: sam0: Ensure API arguments are valid
      usb: sam0: Implement missing API functions
      drivers: watchdog: sam0: Check if timeout is valid

Benoit Leforestier (1):
      C++: Fix compilation error ""invalid conversion""

Bradley Bolen (1):
      cmake: Fix missing dependency

Brett Witherspoon (1):
      net: fix errno returned without promiscuous mode support

Bub Wei (1):
      samples: net: zperf: Add __packed for zperf_udp_datagram

Carles Cufi (4):
      west: build: Use officially documented CMake options
      west: build: Add new pristine cmd-line and config option
      scripts: west: Run pristine.cmake directly instead of the target
      doc: west: Backport moving the build config opts doc

David B. Kinder (1):
      doc: fix watchdog API documentation

Derek Hageman (1):
      soc: sam0: Fix SAMD20 IRQ assignments

Georgij Cernysiov (2):
      drivers: counter: stm32: fix LSE clock source for not F4 SoC
      drivers: rtc: stm32: correct tm_mon conversion

Greg S. Woods (1):
      entropy: fix C++ compiler warnings

Henrik Brix Andersen (1):
      gpio: rv32m1: enable GPIO port clocks

Ioannis Glaropoulos (1):
      arch: arm: fix start of MPU guard in stack-fail check (no user mode)

Joao Cordeiro (1):
      samples: bluetooth: peripheral: Fix RX buffer size

Johan Hedberg (15):
      Bluetooth: Mesh: Fix RPL storage timeout handling
      Bluetooth: Mesh: Fix postponing storage deadline indefinitely
      Bluetooth: Mesh: Fix missing implementation of Proxy SAR timeout
      Bluetooth: Mesh: Fix segmented message RPL behavior
      Bluetooth: Fix expiring RPA when different local identities are used
      Bluetooth: Add dedicated pool for HCI_Num_Completed_Packets HCI event
      Bluetooth: Introduce separate pool for discardable events
      Bluetooth: Mesh: Fix missing protocol error timeout
      Bluetooth: Mesh: Fix Public Key mismatch error handling
      Bluetooth: Mesh: Rename reset_link() to reset_adv_link()
      Bluetooth: SMP: Make public key handling more robust
      Bluetooth: Fix public key callback management
      Bluetooth: Mesh: Generate new public key for each provisioning session
      Bluetooth: Mesh: Fix rejecting invalid remote public key
      Bluetooth: Mesh: Fix provisioning send error handling

Johann Fischer (2):
      boards: reel_board: enable pull-up on UART TX pin
      usb: usb_dfu: do not set bwPollTimeout dynamically

Josef Gajdusek (2):
      drivers: usb_dc_stm32: Make pin remapping part of the device tree
      drivers: usb_dc_stm32: Reinitialize the write semaphores on bus reset

Jukka Rissanen (13):
      samples: net: dumb_http_server: Add net_pkt.h file inclusion
      samples: net: dumb_http_server: Check EOF while skipping headers
      net: ipv4: Allow UDP packets with broadcast dst address
      net: ipv4: Send multicast ICMPv4 reply with correct src address
      net: if: Select global IPv4 address if needed
      net: llmnr: Check that UDP header can be accessed
      net: if: Fix null pointer deref when selecting IPv4 address
      net: sntp: Ignore return value from close
      net: mgmt: Add info length to event wait API
      net: mgmt: Send event with info when applicaple
      tests: net: mgmt: Verify that info_length is correct
      net: dns: Make dns_unpack_answer() to check non-compressed answers
      tests: net: dns: Add tests for dns_unpack_answer()

Krzysztof Chruscinski (4):
      logging: Allow logger usage in C++ files
      lib: os: ring_buffer: Fix C++ compilation warning
      drivers: clock_control: nrf: Fix lfclk source settings for nrf9160
      drivers: counter: nrfx_rtc: Fix lack of interrupt when CC=0

Kwon Tae-young (1):
      boards: stm32f4_disco: Fix yaml ram size

Loic Poulain (2):
      ext: mcux: csi: Fix wrong circular queue delta calculation
      net: ethernet: Fix build issue with C++

Luiz Augusto von Dentz (5):
      Bluetooth: GATT: Fix assuming writes to CCC will always contain 2 bytes
      Bluetooth: L2CAP: Fix inverting of SCID and DCID on disconnect
      Bluetooth: GATT: Fix bt_gatt_discovery with BT_GATT_DISCOVER_DESCRIPTOR
      Bluetooth: shell: gatt: Add discover command
      Bluetooth: GATT: Fix not parsing result of Read by Type

Marcin Szymczyk (2):
      cmake: fix support for out of tree shields
      usb: add zero-length packet after MPS-sized IN transaction

Marek Pieta (2):
      bluetooth: Fix bt_conn->id handling
      Bluetooth: host: Fix bt_keys_get_addr()

Mariusz Skamra (2):
      Bluetooth: controller: Workaround CPR procedure collision at CPU instant
      Bluetooth: gatt: Fix infinite read_by_uuid procedure

Marti Bolivar (2):
      scripts: flake8 cleanup for west build
      scripts: fix pyocd runner --flash-opt help

Michael Scott (1):
      net: openthread: fix off-by-one error in settings offset calculation

Nicolas Pitre (1):
      PTHREAD_MUTEX_DEFINE(): don't store into the _k_mutex section

Patrik Flykt (3):
      net: ethernet: Set NET_ETH_PTYPE_ARP for IPv4 link local packet type
      net: ethernet: Send sender IP address in ARP announce packets
      net/ip/dhcpv4: Set source IP address in DHCP Request

Pawel Dunaj (2):
      bluetooth: host: Use correct identity when direct advertising
      bluetooth: host: Unref conn on direct adv start error

Phil Erwin (1):
      cmake: Fix missing dependency

Ravi kumar Veeramally (1):
      net: sockets: Add timeout to socket connect call

Rich Barlow (1):
      Bluetooth: Mesh: LPN: Clear sent_req on failure

Ryan C Johnson (1):
      drivers: flash: w25q: erase operations must be erase-size aligned

Ryan QIAN (2):
      dts: arm: nxp: Add dtsi for RT1020
      boards: arm: mimxrt1020_evk: update board dts

Sebastian Bøe (3):
      cmake: Don't have users call zephyr_link_interface on mbedTLS
      cmake: DT: Change from -Idts/common to -isystem dts/common
      cmake: DT: Add support for out-of-tree binding root directories

Sören Tempel (4):
      soc/riscv32-fe310: add label for uart1
      net: slip: allow compilation without CONFIG_NET_LLDP
      net: slip: fix compilation without NET_L2_ETHERNET
      drivers: serial: sifive: Fix UART extern interrupts

Tedd Ho-Jeong An (2):
      Bluetooth: GATT: Add support for Read Using Characteristic UUID
      tests: bluetooth/tester: Add support Read Using Characteristic UUID

Thomas Stilwell (1):
      cmake: fix regex for west version check in host-tools.cmake

Tobias Aschenbrenner (1):
      fix: kw41z: Use correct mapping for dBm

Tomasz Bursztyka (2):
      net/iface: Modify function to get IPv6 global address
      net/iface: Add a function to get IPv4 global address

Tomasz Gorochowik (1):
      libc: minimal: fix realloc function

Vinayak Kariappa Chettimada (6):
      Bluetooth: controller: Fix advanced XTAL feature regression
      Bluetooth: controller: Fix pin or key missing response
      Bluetooth: controller: Fix XTAL advanced feature
      Bluetooth: controller: Add GPIO Debug Pins for HFCLK state
      Bluetooth: controller: Fix Enc Setup overlap with Length Update
      Bluetooth: controller: Fix handling zero length L2CAP start frame

Wayne Ren (1):
      boards: iotdk: add mpu and fpu configuration

Wentong Wu (5):
      arch: arm: switching stack pointer with assembly code
      tests: kernel: increase stack buffer when code coverage enabled
      scripts: mpu align for ro section of new memory region on non-XIP system
      scripts: make code relocation work for non-XIP system
      linker: add no-flash system support

ling wei (1):
      net: trickle: Re-init trickle timer for multiple triggerings
```",59771425
1525,False,False,2019-04-16T20:50:58Z,2019-04-16T20:24:15Z,"We are pleased to announce the release of Zephyr kernel version 1.14.0.

Major enhancements with this release include:

* The Zephyr project now supports over 160 different board configurations
  spanning 8 architectures. All architectures are rigorously tested and
  validated using one of the many simulation platforms supported by the
  project: QEMU, Renode, ARC Simulator, and the native POSIX configuration.

* The timing subsystem has been reworked and reimplemented, greatly
  simplifying the resulting drivers, removing thousands of lines
  of code, and reducing a typical kernel build size by hundreds of bytes.
  TICKLESS_KERNEL mode is now the default on all architectures.

* The Symmetric Multi-Processing (SMP) subsystem continues to evolve
  with the addition of a new CPU affinity API that can ""pin"" threads to
  specific cores or sets of cores. The core kernel no longer uses the
  global irq_lock on SMP systems, and exclusively uses the spinlock API
  (which on uniprocessor systems reduces to the same code).

* Zephyr now has support for the x86_64 architecture. It is currently
  implemented only for QEMU targets, supports arbitrary numbers of CPUs,
  and runs in SMP mode by default, our first platform to do so.

* We've overhauled the Network packet [net-pkt](https://docs.zephyrproject.org/latest/reference/networking/net_pkt.html#net-pkt-interface)
  API and moved the majority of components and protocols to use the
  [BSD socket API](https://docs.zephyrproject.org/latest/reference/networking/sockets.html#bsd-sockets-interface), including MQTT, CoAP,
  LWM2M, and SNTP.

* We enhanced the native POSIX port by adding UART, USB, and display
  drivers. Based on this port, we added a simulated NRF52832 SoC which enables
  running full system, multi-node simulations, without the need of real
  hardware.

* We added an experimental BLE split software Controller with Upper Link Layer
  and Lower Link Layer for supporting multiple BLE radio hardware
  architectures.

* The power management subsystem has been overhauled to support device idle
  power management and move most of the power management logic from the
  application back to the BSP.

* We introduced major updates and an overhaul to both the logging and
  shell subsystems, supporting multiple back-ends, integration
  of logging into the shell, and delayed log processing.

* Introduced the ``west`` tool for management of multiple repositories and
  enhanced support for flashing and debugging.

* Added support for application user mode, application memory
  partitions, and hardware stack protection in ARMv8m

* Applied MISRA-C code guideline on the kernel and core components of Zephyr.
  MISRA-C is a well established code guideline focused on embedded systems and
  aims to improve code safety, security and portability.

The following sections provide detailed lists of changes by component.

## Security Vulnerability Related

The following security vulnerabilities (CVEs) were addressed in this release:

* Tinycrypt HMAC-PRNG implementation doesn't take the HMAC state
  clearing into account as it performs the HMAC operations, thereby using a
  incorrect HMAC key for some of the HMAC operations.
  (CVE-2017-14200)

* The shell DNS command can cause unpredictable results due to misuse of stack
  variables.
  (CVE-2017-14201)

* The shell implementation does not protect against buffer overruns resulting
  in unpredictable behavior.
  (CVE-2017-14202)

* We introduced Kernel Page Table Isolation, a technique for
  mitigating the Meltdown security vulnerability on x86 systems. This
  technique helps isolate user and kernel space memory by ensuring
  non-essential kernel pages are unmapped in the page tables when the CPU
  is running in the least privileged user mode, Ring 3. This is the
  fix for Rogue Data Cache Load. (CVE-2017-5754)

* We also addressed these CVEs for the x86 port:

  - Bounds Check Bypass (CVE-2017-5753)
  - Branch Target Injection (CVE-2017-5715)
  - Speculative Store Bypass (CVE-2018-3639)
  - L1 Terminal Fault (CVE-2018-3620)
  - Lazy FP State Restore (CVE-2018-3665)

## Kernel

* The timing subsystem has been reworked and mostly replaced:

   - The timer driver API has been extensively reworked, greatly
     simplifying the resulting drivers. By removing thousands of lines
     of code, we reduced the size of a typical kernel build by hundreds
     of bytes.

   - TICKLESS_KERNEL mode is now the default on all architectures.  Many
     bugs were fixed in this support.

* Lots of work on the rapidly-evolving SMP subsystem:

  - There is a new CPU affinity API available to ""pin"" threads to
    specific cores or sets of cores.

  - The core kernel is now 100% free of use of the global irq_lock on
    SMP systems, and exclusively uses the spinlock API (which on
    uniprocessor systems reduces to the same code).

  - Zephyr now has a simple interprocessor interrupt framework for
    applications, such as the scheduler, to use for synchronously
    notifying other processors of state changes.  It's currently implemented
    only on x86_64 and used only for thread abort.

* Zephyr now has support for the x86_64 architecture.  It is
  currently implemented only for QEMU targets.

  - It supports arbitrary numbers of CPUs in SMP, and runs in SMP mode
    by default, our first platform to do so.

  - It currently runs code built for the ""x32"" ABI, which is a native
    64-bit hardware state, where pointers are 32 bit in memory.
    Zephyr still has some lurking word size bugs that will need to be
    fixed to turn on native 64 bit code generation.

* K_THREAD_STACK_BUFFER() has been demoted to a private API and will be removed
  in a future Zephyr release.
* A new API sys_mutex has been introduced. It has the same semantics
  as a k_mutex, but the memory for it can reside in user memory and so
  no explicit permission management is required.
* sys_mem_pool() now uses a sys_mutex() for concurrency control.
* Memory protection changes:

  - CONFIG_APPLICATION_MEMORY option has been removed from Zephyr. All test
    cases have been appropriately converted to use memory domains.
  - The build time memory domain partition generation mechanism, formerly
    an optional feature under CONFIG_APP_SHARED_MEM, has been overhauled
    and is now a core part of memory protection.
  - Userspace is no longer enabled by default for tests. Tests that are
    written to execute wholly or in part in user mode will need to enable
    CONFIG_TEST_USERSPACE in the test's project configuration. There are
    assertions in place to enforce that this is done.
  - The default stack size for handling system calls has been increased to
    1024 bytes.

* We started applying MISRA-C (https://www.misra.org.uk/) code guideline on
  the Zephyr kernel. MISRA-C is a well established code guideline focused on
  embedded systems and aims to improve code safety, security, and portability.
  This initial effort was narrowed to the Zephyr kernel and architecture
  code, and focused only on mandatory and required rules. The following rules
  were addressed:

  - Namespace changes
  - Normalize switch() operators
  - Avoid implicit conversion to boolean types
  - Fix and normalize headers guard
  - Make if() evaluate boolean operands
  - Remove all VLAs (variable length array)
  - Avoid undefined and implementation defined behavior with shift operator
  - Remove recursions

## Architectures

* Introduced X86_64 (64 bit) architecture support with SMP features
* High-level Kconfig symbol structure for Trusted Execution

* ARM:

  * Re-architect Memory Protection code for ARM and NXP
  * Fully support application user mode, memory partitions, and
    stack protection in ARMv8m
  * Support built-in stack overflow protection in user mode in ARMv8m
  * Fix stack overflow error reporting
  * Support executing from SRAM in XIP builds
  * Support non-cacheable memory sections
  * Remove power-of-two align and size requirement for ARMv8-m
  * Introduce sync barriers in ARM-specific IRQ lock/unlock functions
  * Enforce double-word stack alignment on exception entry
  * API to allow Non-Secure FPU Access (ARMv8-M)
  * Various enhancements in ARM system boot code
  * Indicate Secure domain fault in Non-Secure fault exception
  * Update ARM CMSIS headers to version 5.4.0

* ARC:

  * Userspace and MPU driver improvements
  * Optimization of the thread stack definition macros
  * Bug fixes: handling of lp_xxx registers in _rirq_return_from_coop, nested
    interrupt handling, hardware stack bounds checking, execution benchmarking
  * Atomic operations are now usable from user mode on all ARC CPUs

* x86:

  - Support for non-PAE page tables has been dropped.
  - Fixed various security CVEs related to micro-architecture side-effects of
    speculative execution, as detailed in the security notes.
  - Added robustness when reporting exceptions generated due to stack
    overflows or induced in user mode
  - Pages containing read-only data no longer have the execute disable (XD)
    bit un-set.
  - Fix potential IRQ stack corruption when handling double faults


## Boards & SoC Support

* Added the all new [NRF52 simulated board](https://docs.zephyrproject.org/latest/boards/posix/nrf52_bsim/doc/index.html#nrf52-bsim):
  This simulator models some of the hardware in an NRF52832 SOC, to enable
  running full system, multi-node simulations, without the need of real
  hardware.  It enables fast, reproducible testing, development, and debugging
  of an application, BlueTooth (BT) stack, and kernel. It relies on [BabbleSim](https://BabbleSim.github.io)
  to simulate the radio physical layer.

* Added SoC configuration for nRF9160 and Musca ARM Cortex-M33 CPU

* Added support for the following ARM boards:

  * 96b_stm32_sensor_mez
  * b_l072z_lrwan1
  * bl652_dvk
  * bl654_dvk
  * cy8ckit_062_wifi_bt_m0
  * cy8ckit_062_wifi_bt_m4
  * efm32hg_slstk3400a
  * efm32pg_stk3402a
  * efr32mg_sltb004a
  * mimxrt1020_evk
  * mimxrt1060_evk
  * mimxrt1064_evk
  * nrf52832_mdk
  * nrf52840_blip
  * nrf52840_mdk
  * nrf52840_papyr
  * nrf52840_pca10090
  * nrf9160_pca10090
  * nucleo_f302r8
  * nucleo_f746zg
  * nucleo_f756zg
  * nucleo_l496zg
  * nucleo_l4r5zi
  * particle_argon
  * particle_xenon
  * v2m_musca

* Added support for the following RISC-V boards:

  * rv32m1_vega

* Added support for the following ARC boards:
  * Synopsys ARC IoT DevKit
  * Several ARC simulation targets (ARC nSIM EM/SEM; with and without MPU stack guards)

* Added support for the following shield boards:

  * frdm_kw41z
  * x_nucleo_iks01a1
  * x_nucleo_iks01a2

## Drivers and Sensors

* Added new drivers and backends for [native_posix](https://docs.zephyrproject.org/latest/boards/posix/native_posix/doc/index.html#native-posix):

  * A UART driver that maps the Zephyr UART to a new host PTY
  * A USB driver that can expose a host connected USB device
  * A display driver that will render to a dedicated window using the SDL
    library
  * A dedicated backend for the new logger subsystem

* Counter

  * Refactored API
  * Ported existing counter and RTC drivers to the new API
  * Deprecated legacy API

* RTC

  - Deprecated the RTC API. The Counter API should be used instead

* UART

  * Added asynchronous API.
  * Added implementation of the new asynchronous API for nRF series (UART and
    UARTE).

* ADC

  * ADC driver APIs are now available to threads running in user mode.
  * Overhauled adc_dw and renamed it to adc_intel_quark_se_c1000_ss
  * Fixed handling of invalid sampling requests

* Display

  * Introduced mcux elcdif shim driver
  * Added support for ssd16xx monochrome controllers
  * Added support for ssd1608, gde029a1, and hink e0154a05
  * Added SDL based display emulation driver
  * Added SSD1673 EPD controller driver
  * Added SSD1306 display controller driver


* Flash:

  * nRF5 flash driver support UICR operations
  * Added driver for STM32F7x series
  * Added flash driver support for Atmel SAM E70
  * Added a generic spi nor flash driver
  * Added flash driver for SiLabs Gecko SoCs

* Ethernet:

  * Extended mcux driver for i.mx rt socs
  * Added driver for Intel PRO/1000 Ethernet controller

* I2C

  * Added mcux lpi2c shim driver
  * Removed deprecated i2c_atmel_sam3 driver
  * Introduced Silabs i2c shim driver
  * Added support for I2S stm32

* Pinmux

  * Added RV32M1 driver
  * Added pinmux driver for Intel S1000
  * Added support for STM32F302x8

* PWM

  * Added SiFive PWM driver
  * Added Atmel SAM PWM driver
  * Converted nRF drivers to use device tree

* Sensor

  * Added lis2ds12, lis2dw12, lis2mdl, and lsm303dlhc drivers
  * Added ms5837 driver
  * Added support for Nordic QDEC
  * Converted drivers to use device tree

* Serial

  * Added RV32M1 driver
  * Added new asynchronous UART API
  * Added support for ARM PL011 UART
  * Introduced Silabs leuart shim serial driver
  * Adapted gecko uart driver for Silabs EFM32HG

* USB

  * Added native_posix USB driver
  * Added usb device driver for Atmel SAM E70 family
  * Added nRF52840 USBD driver


* Other Drivers

  * clock_control: Added RV32M1 driver
  * console: Removed telnet driver
  * entropy: Added Atmel SAM entropy generator driver
  * spi: Converted nRF drivers to use device tree
  * watchdog: Converted drivers to new API
  * wifi: simplelink: Implemented setsockopt() for TLS offload
  * wifi: Added inventek es-WiFi driver
  * timer: Refactored and accuracy improvements of the arcv2 timer driver (boot
    time measurements)
  * timer: Added/reworked Xtensa, RISV-V, NRF, HPET, and ARM systick drivers
  * gpio: Added RV32M1 driver
  * hwinfo: Added new hwinfo API and drivers
  * ipm: Added IMX IPM driver for i.MX socs
  * interrupt_controller: Added RV32M1 driver
  * interrupt_controller: Added support for STM32F302x8 EXTI_LINES
  * neural_net: Added Intel GNA driver
  * can: Added socket CAN support


## Networking

* The [BSD socket API](https://docs.zephyrproject.org/latest/reference/networking/sockets.html#bsd-sockets-interface) should be used by
  applications for any network connectivity needs.
* Majority of the network sample applications were converted to use
  the BSD socket API.
* New BSD socket based APIs were created for these components and protocols:

  - [MQTT](https://docs.zephyrproject.org/latest/reference/networking/mqtt.html#mqtt-socket-interface)
  - [CoAP](https://docs.zephyrproject.org/latest/reference/networking/coap.html#coap-sock-interface)
  - [LWM2M](https://docs.zephyrproject.org/latest/reference/networking/lwm2m.html#lwm2m-interface)
  - [SNTP](https://docs.zephyrproject.org/latest/reference/networking/sntp.html#sntp-interface)
* net-app client and server APIs were removed. This also required removal of
  the following net-app based legacy APIs:

  - MQTT
  - CoAP
  - SNTP
  - LWM2M
  - HTTP client and server
  - Websocket
* Network packet ([net-pkt](https://docs.zephyrproject.org/latest/reference/networking/net_pkt.html#net-pkt-interface)) API overhaul. The new
  net-pkt API uses less memory and is more streamlined than the old one.
* Implement following BSD socket APIs: ``freeaddrinfo()``, ``gethostname()``,
  ``getnameinfo()``, ``getsockopt()``, ``select()``, ``setsockopt()``,
  ``shutdown()``
* Converted BSD socket code to use global file descriptor numbers.
* Network subsystem converted to use new [logging system](https://docs.zephyrproject.org/latest/reference/logging/index.html#logger).
* Added support for disabling IPv4, IPv6, UDP, and TCP simultaneously.
* Added support for [BSD socket offloading](https://docs.zephyrproject.org/latest/reference/networking/net_offload.html#net-socket-offloading).
* Added support for long lifetime IPv6 prefixes.
* Added enhancements to IPv6 multicast address checking.
* Added support for IPv6 Destination Options Header extension.
* Added support for packet socket (AF_PACKET).
* Added support for socket CAN (AF_CAN).
* Added support for SOCKS5 proxy in MQTT client.
* Added support for IPSO Timer object in LWM2M.
* Added support for receiving gratuitous ARP request.
* Added [sample application](https://docs.zephyrproject.org/latest/samples/net/google_iot_mqtt/README.html#google-iot-mqtt-sample) for Google IoT Cloud.
* [Network interface](https://docs.zephyrproject.org/latest/reference/networking/net_if.html#net-if-interface)  numbering starts now from 1 for
  POSIX compatibility.
* [OpenThread](https://docs.zephyrproject.org/latest/reference/networking/thread.html#thread-protocol-interface) enhancements.
* [zperf](https://docs.zephyrproject.org/latest/samples/net/zperf/README.html#zperf-sample) sample application fixes.
* [LLDP](https://docs.zephyrproject.org/latest/reference/networking/lldp.html#lldp-interface) (Link Layer Discovery Protocol) enhancements.
* ARP cache update fix.
* gPTP link delay calculation fixes.
* Changed how network data is passed from
  [L2 to network device driver](https://docs.zephyrproject.org/latest/guides/networking/net-stack-architecture.html#network-stack-architecture).
* Removed RPL (Ripple) IPv6 mesh routing support.
* MQTT is now available to threads running in user mode.
* Network device driver additions and enhancements:

  - Added Intel PRO/1000 Ethernet driver (e1000).
  - Added SMSC9118/LAN9118 Ethernet driver (smsc911x).
  - Added Inventek es-WiFi driver for disco_l475_iot1 board.
  - Added support for automatically enabling QEMU based Ethernet drivers.
  - SAM-E70 gmac Ethernet driver Qav fixes.
  - enc28j60 Ethernet driver fixes and enhancements.

## Bluetooth

* Host:

  * GATT: Added support for Robust Caching
  * GATT: L2CAP: User driven flow control
  * Many fixes to Mesh
  * Fixed and improved persistent storage handling
  * Fixed direct advertising support
  * Fixed security level 4 handling
  * Add option to configure peripheral connection parameters
  * Added support for updating advertising data without having to restart advertising
  * Added API to iterate through existing bonds
  * Added support for setting channel map
  * Converted SPI HCI driver to use device tree

* New BLE split software Controller (experimental):

  - Split design with Upper Link Layer and Lower Link Layer
  - Enabled with :option:`CONFIG_BT_LL_SW_SPLIT` (disabled by default)
  - Support for multiple BLE radio hardware architectures
  - Asynchronous handling of procedures in the ULL
  - Enhanced radio utilization (99% on continuous 100ms scan)
  - Latency resilience: Approx 100uS vs 10uS, 10x improvement
  - CPU and power usage: About 20% improvement
  - Multiple advertiser and scanner instances
  - Support for both Big and Little-Endian architectures

* Controller:

  * Added support for setting the public address
  * Multiple control procedures fixes and improvements
  * Advertising random delay fixes
  * Fixed a serious memory corruption issue during scanning
  * Fixes to RSSI measurement
  * Fixes to Connection Failed to be Established sequence
  * Transitioned to the new logging subsystem from syslog
  * Switched from ``-Ofast`` to ``-O2`` in time-critical sections
  * Reworked the RNG/entropy driver to make it available to apps
  * Multiple size optimizations to make it fit in smaller devices
  * nRF: Rework the PPI channel assignment to use pre-assigned ones
  * Add extensive documentation to the shared primitives

* Several fixes for big-endian architectures

## Build and Infrastructure

* Added support for out-of-tree architectures.
* Added support for out-of-tree implementations of in-tree drivers.
* `BabbleSim`_ has been integrated in Zephyr's CI system.
* Introduced ``DT_`` prefix for all labels generated for information extracted
  from device tree (with a few exceptions, such as labels for LEDs and buttons,
  kept for backward compatibility with existing applications).  Deprecated all
  other defines that are generated.
* Introduce CMake variables for DT symbols, just as we have for CONFIG symbols.
* Move DeviceTree processing before Kconfig. Thereby allowing software
  to be configured based on DeviceTree information.
* Automatically change the KCONFIG_ROOT when the application directory
  has a Kconfig file.
* Added [west](https://docs.zephyrproject.org/latest/guides/west/index.html#west) tool for multiple repository management
* Added support for [Zephyr modules](https://docs.zephyrproject.org/latest/application/index.html#ext-projs)
* Build system ``flash`` and ``debug`` targets now require west
* Added generation of DT_<COMPAT>_<INSTANCE>_<PROP> defines which allowed
  sensor or other drivers on buses like I2C or SPI to not require dts fixup.
* Added proper support for device tree boolean properties

## Libraries / Subsystems

* Added a new display API and subsystem
* Added support for CTF Tracing
* Added support for JWT (JSON Web Tokens)
* Flash Maps:

  - API extension
  - Automatic generation of the list of flash areas

* Settings:

  - Enabled logging instead of ASSERTs
  - Always use the storage partition for FCB
  - Fixed FCB backend and common bugs

* Logging:

  - Removed sys_log, which has been replaced by the new logging subsystem
    introduced in v1.13
  - Refactored log modules registration macros
  - Improved synchronous operation (see :option:`CONFIG_LOG_IMMEDIATE`)
  - Added commands to control the logger using shell
  - Added :c:macro:`LOG_PANIC()` call to the fault handlers to ensure that
    logs are output on fault
  - Added mechanism for handling logging of transient strings. See
    :cpp:func:`log_strdup`
  - Added support for up to 15 arguments in the log message
  - Added optional function name prefix in the log message
  - Changed logging thread priority to the lowest application priority
  - Added notification about dropped log messages due to insufficient logger
    buffer size
  - Added log backends:

    - RTT
    - native_posix
    - net
    - SWO
    - Xtensa Sim
  - Changed default timestamp source function to :cpp:func:`k_uptime_get_32`

* Shell:

  - Added new implementation of the shell sub-system. See [shell](https://docs.zephyrproject.org/latest/reference/shell/index.html#shell-label)
  - Added shell backends:

    - UART
    - RTT
    - telnet

* Ring buffer:

  - Added byte mode
  - Added API to work directly on ring buffer memory to reduce memory copying
  - Removed ``sys_`` prefix from API functions

* MBEDTLS APIs may now be used from user mode.


## HALs

* Updated Nordic nrfx to version 1.6.2
* Updated Nordic nrf ieee802154 radio driver to version 1.2.3
* Updated SimpleLink to TI CC32XX SDK 2.40.01.01
* Added Microchip MEC1701 Support
* Added Cypress PDL for PSoC6 SoC Support
* Updates to stm32cube, Silabs Gecko SDK, Atmel.
* Update ARM CMSIS headers to version 5.4.0


## Documentation

* Reorganized subsystem documentation into more meaningful collections
  and added or improved introductory material for each subsystem.
* Overhauled  Bluetooth documentation to split it into
  manageable units and included additional information, such as
  architecture and tooling.
* Added to and improved documentation on many subsystems and APIs
  including socket offloading, Ethernet management, LLDP networking,
  network architecture and overview, net shell, CoAP, network interface,
  network configuration library, DNS resolver, DHCPv4, DTS, flash_area,
  flash_mpa, NVS, settings, and more.
* Introduced a new debugging guide (see [debug probes](https://docs.zephyrproject.org/latest/guides/debugging/probes.html#debug-probes)) that documents
  the supported debug probes and host tools in
  one place, including which combinations are valid.
* Clarified and improved information about the west tool and its use.
* Improved [development process](https://docs.zephyrproject.org/latest/development_process/index.html#development-model) documentation
  including how new features
  are proposed and tracked, and clarifying API lifecycle, issue and PR
  tagging requirements, contributing guidelines, doc guidelines,
  release process, and PR review process.
* Introduced a developer ""fast"" doc build option to eliminate
  the time needed to create the full kconfig option docs from a local
  doc build, saving potentially five minutes for a full doc build. (Doc
  building time depends on your development hardware performance.)
* Made dramatic improvements to the doc build processing, bringing
  iterative local doc generation down from over two minutes to only a
  few seconds. This makes it much faster for doc developers to iteratively
  edit and test doc changes locally before submitting a PR.
* Added a new ``zephyr-file`` directive to link directly to files in the
  Git tree.
* Introduced simplified linking to doxygen-generated API reference
  material.
* Made board documentation consistent, enabling a board-image carousel
  on the zephyrproject.org home page.
* Reduced unnecessarily large images to improve page load times.
* Added CSS changes to improve API docs appearance and usability
* Made doc version selector more obvious, making it easier to select
  documentation for a specific release
* Added a friendlier and more graphic home page.

## Tests and Samples

* A new set of, multinode, full system tests of the BT stack,
  based on `BabbleSim`_ have been added.
* Added unique identifiers to all tests and samples.
* Removed old footprint benchmarks
* Added tests for CMSIS RTOS API v2, BSD Sockets, CANBus, Settings, USB,
  and miscellaneous drivers.
* Added benchmark applications for the scheduler and mbedTLS
* Added samples for the display subsystem, LVGL, Google IOT, Sockets, CMSIS RTOS
  API v2, Wifi, Shields, IPC subsystem, USB CDC ACM, and USB HID.
* Add support for using sanitycheck testing with Renode


## Issue Related Items

These GitHub issues were addressed since the previous 1.13.0 tagged
release:

* #15407 [Coverity CID :197597]Incorrect expression in /tests/kernel/static_idt/src/main.c
* #15406 [Coverity CID :197598]Incorrect expression in /tests/drivers/uart/uart_async_api/src/test_uart_async.c
* #15405 [Coverity CID :197599]Incorrect expression in /tests/kernel/fatal/src/main.c
* #15404 [Coverity CID :197600]Incorrect expression in /tests/lib/c_lib/src/main.c
* #15403 [Coverity CID :197601]Incorrect expression in /tests/kernel/common/src/intmath.c
* #15402 [Coverity CID :197602]Incorrect expression in /tests/kernel/common/src/intmath.c
* #15401 [Coverity CID :197603]Incorrect expression in /tests/kernel/fatal/src/main.c
* #15400 [Coverity CID :197604]Memory - corruptions in /tests/kernel/mem_protect/userspace/src/main.c
* #15399 [Coverity CID :197605]Null pointer dereferences in /subsys/testsuite/ztest/src/ztest_mock.c
* #15398 [Coverity CID :197606]Incorrect expression in /tests/kernel/common/src/irq_offload.c
* #15397 [Coverity CID :197607]Incorrect expression in /tests/drivers/uart/uart_async_api/src/test_uart_async.c
* #15396 [Coverity CID :197608]Incorrect expression in /tests/lib/c_lib/src/main.c
* #15395 [Coverity CID :197609]Incorrect expression in /tests/kernel/interrupt/src/nested_irq.c
* #15394 [Coverity CID :197610]Incorrect expression in /tests/kernel/fatal/src/main.c
* #15393 [Coverity CID :197611]Integer handling issues in /lib/os/printk.c
* #15392 [Coverity CID :197612]Integer handling issues in /lib/os/printk.c
* #15390 [Coverity CID :197614]Incorrect expression in /tests/lib/c_lib/src/main.c
* #15389 [Coverity CID :197615]Incorrect expression in /tests/kernel/fatal/src/main.c
* #15388 [Coverity CID :197616]Null pointer dereferences in /subsys/testsuite/ztest/src/ztest_mock.c
* #15387 [Coverity CID :197617]Incorrect expression in /tests/kernel/common/src/multilib.c
* #15386 [Coverity CID :197618]Error handling issues in /subsys/shell/shell_telnet.c
* #15385 [Coverity CID :197619]Incorrect expression in /tests/kernel/mem_pool/mem_pool/src/main.c
* #15384 [Coverity CID :197620]Incorrect expression in /tests/kernel/static_idt/src/main.c
* #15383 [Coverity CID :197621]Incorrect expression in /tests/kernel/static_idt/src/main.c
* #15382 [Coverity CID :197622]Incorrect expression in /tests/kernel/tickless/tickless_concept/src/main.c
* #15381 [Coverity CID :197623]Incorrect expression in /tests/kernel/interrupt/src/nested_irq.c
* #15380 USAGE FAULT on tests/crypto/rand32/ on sam_e70_xplained
* #15379 foundries.io CI: tests/kernel/mem_protect/stackprot fails on nrf52
* #15370 log_strdup() leaks memory if log message is filtered
* #15365 Bluetooth qualification test MESH/SR/HM/CFS/BV-02-C is failing
* #15361 nRF timer: investigate race condition when setting clock timeout in TICKLESS mode
* #15348 ARM Cortex-M: SysTick: unhandled race condition
* #15346 VLAN support is broken
* #15336 Unable to transmit data using interrupt driven API with nrf UARTE peripheral
* #15333 hci_uart controller driver loses sync after host driver is reset
* #15329 Bluetooth: GATT Client Configuration is not cleared when device is unpaired
* #15325 conn->le.keys pointer is not cleared even after the keys struct is invalidated after unpair
* #15324 Error undefined reference to '__aeabi_uldivmod' when build Zephyr for nrf52_pca10040 board
* #15309 ARM Cortex-M SysTick Load value setting off-by-one
* #15303 net: Stackoverflow in net mgmt thread
* #15300 Bluetooth: Mesh: bt_mesh_fault_update() doesn't update publication message
* #15299 west init fails in powershell
* #15289 Zephyr module uses '\' in path on windows when creating Kconfig files
* #15285 arc: it's not reliable to use exc_nest_count to check nest interrupt
* #15280 tests/kernel/mem_protect/stackprot fails on platform qemu_riscv32
* #15266 doc: Contribution guidelines still link to IRC
* #15260 Shell doesn't always process input data when it arrives
* #15259 CAN sample does not work
* #15251 nRF Watchdog not triggering on kernel panic
* #15246 doc: confusion about dtc version
* #15240 esp32 build broken
* #15236 add external spi-nor flash will build fail
* #15235 Missing license references in DTS files
* #15234 Missing SPDX license references in drivers source files.
* #15228 tests: getnameinfo runs with user mode disabled
* #15227 sockets: no syscall for gethostname()
* #15221 ARC: incorrect value checked for MPU violation
* #15216 k_sleep() expires sooner than expected on STM32F4 (Cortex M4)
* #15213 cmake infrastructure in code missing file level license identifiers
* #15206 sanitycheck --coverage: stack overflows on qemu_x86, mps2_an385 and qemu_x86_nommu
* #15205 hci_usb not working on v1.14.0rc3 with SDK 0.10.0
* #15204 lwm2m engine hangs on native_posix
* #15198 tests/booting: Considering remove it
* #15197 Socket-based DNS API will hang device if DNS query is not answered
* #15184 Fix build issue with z_sys_trace_thread_switched_in
* #15183 BLE HID sample often asserts on Windows 10 reconnection
* #15178 samples/mpu/mem_domain_apis_test:  Did not get to ""destroy app0 domain"", went into indefinite loop
* #15177 samples/drivers/crypto:  CBC and CTR mode not supported
* #15170 undefined symbol TINYCBOR during doc build
* #15169 [Coverity CID :197534]Memory - corruptions in /subsys/logging/log_backend_rtt.c
* #15168 [Coverity CID :197535]Incorrect expression in /tests/drivers/uart/uart_async_api/src/test_uart_async.c
* #15167 [Coverity CID :197536]Parse warnings in /include/mgmt/buf.h
* #15166 [Coverity CID :197537]Control flow issues in /subsys/power/power.c
* #15163 nsim_*_mpu_stack_guard fails if CONFIG_USERSPACE=n but CONFIG_HW_STACK_PROTECTION=y
* #15161 stack overflow in tests/posix/common on nsim_em_mpu_stack_guard
* #15157 mps2_an385 and GNU Arm Embedded gcc-arm-none-eabi-7-2018-q2-update failed tests
* #15154 mempool can result in OOM while memory is available
* #15153 Some empty qemu_x86 output when running code coverage using sanity_check
* #15152 tests/kernel/pipe/pipe: ""Kernel Oops"" and ""CPU Page Fault"" when running coverage for qemu_x86
* #15151 tests/tickless/tickless_concept: Assertions when running code coverage on qemu_x86
* #15150 tests/kernel/threads/thread_api: ""Double faults"" when running code coverage in qemu_x86
* #15149 mps2_an385: fatal lockup when running code coverage
* #15148 tests/kernel/mem_pool/mem_pool_concept/: Assertion failures for mpns2_an385
* #15146 mps2_an385: Multiple ""MPU Fault""s,  ""Hardware Fault""s ""Stack Check Fail!"" and ""Bus Fault"" when running code coverage
* #15145 USB HF clock stop fail
* #15131 ARC: off-by-one in MPU V2 _is_in_region()
* #15130 ARC: Z_ARCH_THREAD_STACK_MEMBER defined incorrectly
* #15129 ARC: tests/kernel/critical times out on nsim_sem
* #15126 multiple intermittent test failure on ARC
* #15124 DNS not working with NET_OFFLOAD
* #15109 ATSAME70 MCU(SAM E70 Xplained) RAM random after a watchdog reset.
* #15107 samples/application_development/code_relocation fails to build with coverage on mps2_an385
* #15103 nrf52810_pca10040 SRAM space not enough
* #15100 Bluetooth: GATT (un)subscribe can silently fail
* #15099 Bluetooth: GATT Subscribe does not detect duplicate if new parameters are used.
* #15096 Cannot build samples/net/ipv4_autoconf
* #15093 zephyr_library_compile_options() lost support for duplicates
* #15090 FIFO: Clarify doc for k_fifo_alloc_put
* #15085 Sanitycheck when running on devices is not counting samples in the final report
* #15083 MCUBoot is linked to slot0 because overlay is dropped in boilerplate.cmake
* #15077 Cannot boot application flashed to nrf52840_pca10059
* #15073 Device crashes when starting with USB connected
* #15070 ieee802154: Configuration for CC2520 is not working
* #15069 arch: arm: thread arch.mode not always inline with thread's privilege mode (e.g. system calls)
* #15067 bluetooth: bt_set_name rejects names of size CONFIG_BT_DEVICE_NAME_MAX
* #15064 tests/kernel/fp_sharing: undefined reference k_float_disable()
* #15063 tests/subsys/settings/fcb/src/settings_test_save_unaligned.c fail with assertion failure on nrf52_pca10040
* #15061 Builds on Windows are broken due to invalid zephyr_modules.txt parsing
* #15059 Fix builds w/o modules
* #15056 arch: arm: arch.mode variable _not_ initialized to nPRIV in user space enter
* #15050 Using TCP in zperf causes free memory access
* #15044 ARC: test failure in tests/kernel/threads/thread_apis
* #15039 ADC drivers adc_read_async() keep pointers to sequence
* #15037 xtensa: context returns to thread after kernel oops
* #15035 build breakage on two ARC targets: missing arc_exc_saved_sp
* #15031 net: 9cd547f53b ""Fix ref counting for the net_pkt"" allegedly broke reference counting
* #15019 tests/kernel/common: test_bitfield: test_bitfield: (b1 not equal to (1 << bit))
* #15018 tests/kernel/threads/no-multithreading: Not booting
* #15017 Not able to set ""0xFFFF No specific value"" for GAP PPCP structured data
* #15013 tests/kernel/fatal: check_stack_overflow: (rv equal to TC_FAIL)
* #15012 Unable to establish security after reconnect to dongle
* #15009 sanitycheck --coverage on qemu_x86:  cannot move location counter backwards
* #15008 SWO logger backend produces no output in 'in place' mode
* #14992 West documentation is largely missing
* #14989 Doc build does not include the zephyr modules Kconfig files
* #14988 USB device not recognized on PCA10056 preview-DK
* #14985 Clarify in release docs NOT to use github tagging.
* #14974 Kconfig.modules needs to be at the top level build folder
* #14958 [Coverity CID :197457]Control flow issues in /subsys/bluetooth/host/gatt.c
* #14957 [Coverity CID :197458]Insecure data handling in /subsys/usb/usb_device.c
* #14956 [Coverity CID :197459]Memory - corruptions in /subsys/bluetooth/shell/gatt.c
* #14955 [Coverity CID :197460]Integer handling issues in /samples/bluetooth/ipsp/src/main.c
* #14954 [Coverity CID :197461]Insecure data handling in /subsys/usb/usb_device.c
* #14953 [Coverity CID :197462]Memory - corruptions in /subsys/bluetooth/host/gatt.c
* #14952 [Coverity CID :197463]Memory - corruptions in /samples/bluetooth/central_hr/src/main.c
* #14951 [Coverity CID :197464]Memory - corruptions in /subsys/bluetooth/host/gatt.c
* #14950 [Coverity CID :197465]Integer handling issues in /samples/bluetooth/ipsp/src/main.c
* #14947 no user mode access to MQTT subsystem
* #14946 cdc_acm example doesn't work on nrf52840_pca10059
* #14945 nrf52840_pca10059 executables do not work without mcuboot
* #14943 config BOARD_HAS_NRF5_BOOTLOADER not honored for nrf52840_pca10059
* #14942 tests/posix/fs don't build on em_starterkit_em11d
* #14934 tinycbor is failing in nightly CI
* #14928 Bluetooth: Mesh: Provisioning state doesn't always get properly re-initialized when doing reset
* #14903 tests/posix/fs test show messages dropped in the logs
* #14902 logger: Enabling USB CDC ACM disables logging
* #14899 Bluetooth controller ACL data packets stall
* #14882 USB DFU never enters DFU mode, when composite device is enabled and mcuboot is used
* #14871 tests/posix/fs : Dropped console output
* #14870 samples/mpu/mpu_stack_guard_test: Found ""Test not passed""
* #14869 tests/lib/ringbuffer: Assertion failure at test_ring_buffer_main()
* #14840 settings: settings_save_one() doesn't always seem to store data, even if it returns success
* #14837 Bluetooth shell scan command parameter mandatory/optional evaluation is broken
* #14833 Bluetooth init procedure with BT_SETTINGS is not reliable
* #14827 cmake error
* #14821 [Coverity CID :196635]Error handling issues in /tests/net/mld/src/main.c
* #14820 [Coverity CID :196636]Integer handling issues in /kernel/sched.c
* #14819 [Coverity CID :196637]Uninitialized variables in /samples/net/sockets/can/src/main.c
* #14818 [Coverity CID :196638]Null pointer dereferences in /subsys/bluetooth/host/hci_core.c
* #14817 [Coverity CID :196639]Error handling issues in /samples/bluetooth/ipsp/src/main.c
* #14816 [Coverity CID :196640]Integer handling issues in /arch/x86/core/thread.c
* #14815 [Coverity CID :196641]Null pointer dereferences in /samples/net/nats/src/nats.c
* #14814 [Coverity CID :196642]Error handling issues in /subsys/shell/shell_uart.c
* #14813 [Coverity CID :196643]Null pointer dereferences in /subsys/net/ip/net_context.c
* #14807 disable SPIN_VALIDATE when SMP enabled
* #14789 doc: flash_map and flash_area
* #14786 Information about old sdk version provides wrong download link
* #14782 Build process produces hex files which will not install on BBC micro:bit
* #14780 USB: netusb: Unable to send maximum Ethernet packet
* #14779 stm32: If the memory usage is high, the flash is abnormal.
* #14770 samples/net/promiscuous_mode the include file is not there
* #14767 ARC: hang in exception handling when CONFIG_LOG is enabled
* #14766 K_THREAD_STACK_BUFFER() is broken
* #14763 PCI debug logging cannot work with PCI-enabled NS16550
* #14762 elf_helper: Call to undefined debug_die() in AggregateTypeMember (wrong class)
* #14753 nrf52840_pca10056: Get rid of leading spurious 0x00 byte in UART output
* #14743 Directed advertising to Android does not work
* #14741 Bluetooth scanning frequent resetting
* #14714 Mesh network traffic overflow ungraceful stop. (MMFAR Adress: 0x0)
* #14698 USB: usb/console sample does not work for most of the boards
* #14697 USB: cdc_acm_composite sample might lose characters
* #14693 ARC: need test coverage for MPU stack guards
* #14691 samples: telnet: net shell is not working
* #14684 samples/net/promiscuous _mode : Cannot set promiscuous mode for interface
* #14665 samples/net/zperf does not work for TCP in qemu_x86
* #14663 net: echo server sends unknown packets on start
* #14661 samples/net/syslog_net fails for native_posix
* #14658 Disabling CONFIG_BT_PHY_UPDATE makes connections stall with iOS
* #14657 Sample: echo_async: setsockopt fail
* #14654 Samples: echo_client: No reply packet from the server
* #14647 IP: Zephyr replies to broadcast ethernet packets in other subnets on the same wire
* #14643 ARC: tests/kernel/mem_protect/mem_protect/kernel.memory_protection fails on nsim_sem
* #14642 ARC: tests/posix/common/ and tests/kernel/critical time out on nsim_sem with userspace enabled
* #14641 ARC: tests/kernel/critical/kernel.common times out on nsim_em and nsim_sem
* #14640 ARC: tests/cmsis_rtos_v2/portability.cmsis_rtos_v2 fails on nsim_em and nsim_sem
* #14635 bluetooth: controller: Control procedure collision with Encryption and PHY update procedure
* #14627 USB HID device only detected after replugging
* #14623 sanitycheck error when trying to run specific test
* #14622 net: IPv6: malformed packet in fragmented echo reply
* #14612 samples/net/sockets/echo_async_select doesn’t work for qemu_x86 target
* #14609 mimxrt1050_evk Fatal fault in thread tests/kernel/mem_protect/stackprot Fatal fault in thread
* #14608 Promiscuous mode net sample cannot be build
* #14606 mimxrt1050_evk tests/kernel/fp_sharing kernel.fp_sharing fails
* #14605 mimxrt1060_evk cpp_synchronization meets Hardware exception
* #14603 pyocd can't support more board_runner_args
* #14586 Sanitycheck shows ""FAILED: failed"" for successful test: tests/kernel/fifo/fifo_api/kernel.fifo
* #14568 I2C stm32 LL driver V2 will hang when trying again after an error occurs
* #14566 mcuboot doesn't link into code-partition
* #14556 tests/benchmarks/timing_info reports strange values on quark_se_c1000:x86, altera_max10:nios2
* #14554 UP2 console no output after commit fb4f5e727b.
* #14546 shell compilation error when disabling CONFIG_SHELL_ECHO_STATUS
* #14542 STM32F4XX dts_fixup.h error
* #14540 kernel: message queue MACRO not compatible with C++
* #14536 out of bounds access in log_backend_rtt
* #14523 echo-client doesn't close socket if echo-server is offline
* #14510 USB DFU sample doc outdated
* #14508 mempool allocator can return with no allocation even if memory is available
* #14504 mempool can return success if no memory was available
* #14501 crash in qemu_x86_64:tests/kernel/fifo/fifo_usage/kernel.fifo.usage
* #14500 sanitycheck --coverage: stack overflows on qemu_x86 and mps2_an385
* #14499 sanitycheck --coverage on qemu_x86: stack overflows on qemu_x86 and mps2_an385
* #14496 PyYAML 5.1 breaks DTS parsing
* #14492 doc: update robots.txt to exclude more old docs
* #14479 Regression for net_offload API in net_if.c?
* #14477 tests/crypto/tinycrypt: test_ecc_dh() 's montecarlo_ecdh() hangs when num_tests (1st parameter) is greater than 1
* #14476 quark_d2000_crb: samples/sensor/bmg160 runs out of ROM (CI failure)
* #14471 MPU fault during application startup
* #14469 sanitycheck failures on 96b_carbon due to commit 75164763868ebd604904af3fdbc86845da833abc
* #14462 tests/kernel/threads/no-multithreading/testcase.yam: Not Booting
* #14460 python requirements.txt: pyocd and pyyaml conflict
* #14454 tests/kernel/threads/no-multithreading/:  Single/Repeated delay boot banner
* #14447 Rename macro functions starting with two or three underscores
* #14422 [Coverity CID :195758]Uninitialized variables in /drivers/usb/device/usb_dc_nrfx.c
* #14421 [Coverity CID :195760]Error handling issues in /tests/net/tcp/src/main.c
* #14420 [Coverity CID :195768]API usage errors in /arch/x86_64/core/xuk-stub32.c
* #14419 [Coverity CID :195770]Memory - illegal accesses in /drivers/ethernet/eth_native_posix_adapt.c
* #14418 [Coverity CID :195774]API usage errors in /arch/x86_64/core/xuk-stub32.c
* #14417 [Coverity CID :195786]Error handling issues in /samples/drivers/CAN/src/main.c
* #14416 [Coverity CID :195789]Uninitialized variables in /subsys/usb/class/netusb/function_rndis.c
* #14415 [Coverity CID :195793]Insecure data handling in /drivers/counter/counter_ll_stm32_rtc.c
* #14414 [Coverity CID :195800]Memory - corruptions in /tests/net/traffic_class/src/main.c
* #14413 [Coverity CID :195816]Null pointer dereferences in /tests/net/dhcpv4/src/main.c
* #14412 [Coverity CID :195819]Null pointer dereferences in /tests/net/tcp/src/main.c
* #14411 [Coverity CID :195821]Memory - corruptions in /tests/net/traffic_class/src/main.c
* #14410 [Coverity CID :195828]Memory - corruptions in /boards/posix/native_posix/cmdline.c
* #14409 [Coverity CID :195835]Null pointer dereferences in /tests/net/ipv6/src/main.c
* #14408 [Coverity CID :195838]Memory - illegal accesses in /samples/subsys/usb/hid-cdc/src/main.c
* #14407 [Coverity CID :195839]Memory - corruptions in /tests/net/traffic_class/src/main.c
* #14406 [Coverity CID :195841]Insecure data handling in /drivers/usb/device/usb_dc_native_posix.c
* #14405 [Coverity CID :195844]Null pointer dereferences in /tests/net/mld/src/main.c
* #14404 [Coverity CID :195845]Memory - corruptions in /tests/net/traffic_class/src/main.c
* #14403 [Coverity CID :195847]Memory - corruptions in /tests/net/traffic_class/src/main.c
* #14402 [Coverity CID :195848]Error handling issues in /samples/net/sockets/echo_async_select/src/socket_echo_select.c
* #14401 [Coverity CID :195855]Memory - corruptions in /drivers/serial/uart_native_posix.c
* #14400 [Coverity CID :195858]Incorrect expression in /arch/posix/core/posix_core.c
* #14399 [Coverity CID :195860]Null pointer dereferences in /tests/net/tcp/src/main.c
* #14398 [Coverity CID :195867]Memory - corruptions in /arch/posix/core/posix_core.c
* #14397 [Coverity CID :195871]Integer handling issues in /drivers/counter/counter_ll_stm32_rtc.c
* #14396 [Coverity CID :195872]Error handling issues in /drivers/serial/uart_native_posix.c
* #14395 [Coverity CID :195880]Null pointer dereferences in /tests/net/dhcpv4/src/main.c
* #14394 [Coverity CID :195884]Control flow issues in /arch/x86_64/core/xuk.c
* #14393 [Coverity CID :195896]Memory - corruptions in /tests/net/traffic_class/src/main.c
* #14392 [Coverity CID :195897]Error handling issues in /samples/net/sockets/echo_async/src/socket_echo.c
* #14391 [Coverity CID :195900]Security best practices violations in /drivers/entropy/fake_entropy_native_posix.c
* #14390 [Coverity CID :195903]Null pointer dereferences in /tests/net/iface/src/main.c
* #14389 [Coverity CID :195905]Control flow issues in /arch/x86_64/core/x86_64.c
* #14388 [Coverity CID :195921]Null pointer dereferences in /tests/net/tcp/src/main.c
* #14315 iamcu has build issues due to lfence
* #14313 doc: API references such as :c:func:`funcname` aren't creating links
* #14310 64 bit print format specifiers not defined with newlib and SDK 0.10.0
* #14297 mimxrt1020_evk tests/kernel/gen_isr_table test failure
* #14293 mimxrt1060_evk tests/benchmarks/latency_measure failed
* #14289 Cannot build GRUB2 boot loader image in Clear Linux
* #14275 [ci.foundries.io] regression 4344e27 all: Update reserved function names
* #14265 Bluetooth GATT descriptor discovery returns all attributes
* #14261 DTS file for the esp32
* #14258 doc: Recommended SDK version is out of date
* #14247 tests/net/ieee802154/crypto fails with assertion failure in subsys/net/ip/net_if.c
* #14246 ./sample/bluetooth/mesh/ always issue an ""HARD FALUT""
* #14244 tests/crypto/rand32/testcase.yaml#crypto.rand32.random_hw_xoroshiro.rand32: Not Booting
* #14235 Bluetooth connection timeout
* #14209 unable to flash sam_e70_xplained due to west errors
* #14191 Logger corrupts itself on rescheduling
* #14186  tests/cmsis_rtos_v1 fails on nrf boards
* #14184 tests/benchmarks: Stuck at  delaying boot banner on quark_se_c1000_ss_board
* #14177 Spurious Error: ""zephyr-no-west/samples/hello_world"" is not in a west installation
* #14160 Bluetooth API documentation - bt_conn_create_slave_le
* #14156 Mac OSX Documentation Update Needed
* #14141 USB suspend/resume on board startup
* #14139 nsim failed in tests/subsys/jwt/libraries_encoding
* #14127 netusb: TX path doesn't work in RNDIS driver
* #14125 system calls are vulnerable to Spectre V1 attacks on CPUs with speculative execution
* #14121 gaps between app shared memory partitions can waste a lot of space
* #14109 Incorrect documentation for k_work_*() API
* #14105 Race condition in k_delayed_work_submit_to_queue()
* #14104 Invalid locking in k_delayed_work_submit_to_queue()
* #14099 Minnowboard doesn't build tests/kernel/xip/
* #14098 Test Framework documentation issue
* #14096 Timeslicing is broken
* #14093 net: Description of net_pkt_skip() is not clear
* #14087 serial/stm32: uart_stm32_fifo_fill can't transmit data complete
* #14084 ADC driver subsystem has no system calls
* #14063 net: ipv6: Neighbor table management improvements
* #14059 CONFIG_XUK_64_BIT_ABI is referenced but undefined (outside of tests)
* #14044 BLE HID sample fails to reconnect on Windows 10 tablets - Wrong Sequence Number (follow-up)
* #14042 MCUboot fails to boot STM32L4 device
* #14010 logger: timestamp resets after 35.7 seconds on K64F
* #14001 drivers: modem: modem receiver is sending extra bytes around \r\n
* #13984 nucleo_l496zg: samples: console/echo: It doesn't echo
* #13972 bt_le_scan_stop()  before finding device results in Data Access Violation
* #13964 rv32m1_vega_ri5cy doesn't build w/o warnings
* #13960 tests/kernel/lifo/lifo_usage fails on m2gl025_miv
* #13956 CI scripting doesn't retry modifications to tests on non-default platforms
* #13949 tests: Ztest problem - not booting properly
* #13943 net: QEMU Ethernet drivers are flaky
* #13937 tests/net/tcp: Page fault
* #13934 tests/kernel/fatal: test_fatal rv equal to TC_FAIL
* #13923 app shared memory placeholders waste memory
* #13919 tests/crypto/mbedtls reports some errors without failing
* #13918 x86 memory domain configuration not always applied correctly on context switch when partitions are added
* #13906 posix: Recently enabled POSIX+newlib tests fail to build with gnuarmemb
* #13890 stm32: serial: Data is not read properly at a certain baud rate
* #13889 ARM: Userspace: should we have default system app partitions?
* #13888 [Coverity CID :190924]Integer handling issues in /subsys/net/lib/sntp/sntp.c
* #13887 [Coverity CID :190925]Memory - corruptions in /subsys/bluetooth/controller/hci/hci_driver.c
* #13886 [Coverity CID :190926]Error handling issues in /drivers/can/stm32_can.c
* #13885 [Coverity CID :190928]Error handling issues in /samples/net/sockets/echo_async/src/socket_echo.c
* #13884 [Coverity CID :190929]Integer handling issues in /tests/drivers/hwinfo/api/src/main.c
* #13883 [Coverity CID :190930]Integer handling issues in /samples/subsys/fs/src/main.c
* #13882 [Coverity CID :190931]Control flow issues in /subsys/net/lib/lwm2m/lwm2m_rw_json.c
* #13881 [Coverity CID :190932]Control flow issues in /samples/subsys/ipc/openamp/src/main.c
* #13880 [Coverity CID :190933]Control flow issues in /drivers/gpio/gpio_intel_apl.c
* #13879 [Coverity CID :190934]Parse warnings in /tests/drivers/can/stm32/src/main.c
* #13878 [Coverity CID :190935]Parse warnings in /tests/drivers/can/stm32/src/main.c
* #13877 [Coverity CID :190936]Uninitialized variables in /tests/subsys/fs/nffs_fs_api/common/test_performance.c
* #13876 [Coverity CID :190937]Incorrect expression in /tests/drivers/counter/counter_basic_api/src/test_counter.c
* #13875 [Coverity CID :190938]Parse warnings in /tests/drivers/can/stm32/src/main.c
* #13874 [Coverity CID :190939]Error handling issues in /tests/subsys/fs/fat_fs_dual_drive/src/test_fat_file.c
* #13873 [Coverity CID :190940]Memory - corruptions in /soc/arm/microchip_mec/mec1701/soc.c
* #13872 [Coverity CID :190942]Memory - corruptions in /subsys/mgmt/smp_shell.c
* #13871 [Coverity CID :190943]Incorrect expression in /tests/kernel/fatal/src/main.c
* #13870 [Coverity CID :190944]Control flow issues in /subsys/usb/class/usb_dfu.c
* #13869 [Coverity CID :190945]Parse warnings in /tests/drivers/can/api/src/main.c
* #13868 [Coverity CID :190946]Null pointer dereferences in /tests/net/utils/src/main.c
* #13867 [Coverity CID :190948]Null pointer dereferences in /subsys/net/lib/lwm2m/lwm2m_rw_json.c
* #13866 [Coverity CID :190949]Error handling issues in /tests/subsys/fs/nffs_fs_api/common/test_append.c
* #13865 [Coverity CID :190950]Integer handling issues in /arch/arm/core/cortex_m/mpu/nxp_mpu.c
* #13864 [Coverity CID :190951]Control flow issues in /subsys/net/ip/net_context.c
* #13863 [Coverity CID :190952]Incorrect expression in /tests/drivers/counter/counter_basic_api/src/test_counter.c
* #13862 [Coverity CID :190953]Error handling issues in /subsys/fs/shell.c
* #13861 [Coverity CID :190954]Error handling issues in /subsys/bluetooth/controller/ll_sw/nordic/lll/lll_test.c
* #13860 [Coverity CID :190955]Error handling issues in /tests/subsys/fs/nffs_fs_api/common/nffs_test_utils.c
* #13859 [Coverity CID :190956]Error handling issues in /samples/net/sockets/can/src/main.c
* #13858 [Coverity CID :190957]Incorrect expression in /tests/kernel/fatal/src/main.c
* #13857 [Coverity CID :190958]Control flow issues in /samples/boards/96b_argonkey/microphone/src/main.c
* #13856 [Coverity CID :190960]Various in /tests/subsys/fs/fcb/src/fcb_test_last_of_n.c
* #13855 [Coverity CID :190961]Error handling issues in /subsys/bluetooth/host/mesh/prov.c
* #13854 [Coverity CID :190964]Integer handling issues in /arch/arm/core/cortex_m/mpu/nxp_mpu.c
* #13853 [Coverity CID :190965]Error handling issues in /subsys/net/ip/ipv4_autoconf.c
* #13852 [Coverity CID :190966]Error handling issues in /samples/net/sockets/echo_async_select/src/socket_echo_select.c
* #13851 [Coverity CID :190967]Incorrect expression in /tests/drivers/counter/counter_basic_api/src/test_counter.c
* #13850 [Coverity CID :190969]Uninitialized variables in /samples/net/sockets/coap_client/src/coap-client.c
* #13849 [Coverity CID :190970]Uninitialized variables in /subsys/bluetooth/shell/ll.c
* #13848 [Coverity CID :190971]Null pointer dereferences in /subsys/net/ip/net_pkt.c
* #13847 [Coverity CID :190972]Control flow issues in /subsys/power/power.c
* #13846 [Coverity CID :190973]Control flow issues in /subsys/net/ip/net_context.c
* #13845 [Coverity CID :190974]Integer handling issues in /subsys/net/ip/trickle.c
* #13844 [Coverity CID :190976]Integer handling issues in /arch/arm/core/cortex_m/mpu/nxp_mpu.c
* #13843 [Coverity CID :190977]Integer handling issues in /lib/os/printk.c
* #13842 [Coverity CID :190978]Control flow issues in /drivers/spi/spi_intel.c
* #13841 [Coverity CID :190980]Parse warnings in /tests/drivers/can/api/src/main.c
* #13840 [Coverity CID :190981]Error handling issues in /subsys/fs/nffs_fs.c
* #13839 [Coverity CID :190983]Incorrect expression in /tests/drivers/counter/counter_basic_api/src/test_counter.c
* #13838 [Coverity CID :190985]Memory - illegal accesses in /arch/x86/core/x86_mmu.c
* #13837 [Coverity CID :190986]Control flow issues in /subsys/net/lib/sockets/sockets_tls.c
* #13836 [Coverity CID :190987]Integer handling issues in /arch/arm/core/cortex_m/mpu/nxp_mpu.c
* #13835 [Coverity CID :190989]Parse warnings in /tests/drivers/can/api/src/main.c
* #13834 [Coverity CID :190990]Null pointer dereferences in /subsys/net/ip/net_pkt.c
* #13833 [Coverity CID :190991]Error handling issues in /subsys/bluetooth/controller/ll_sw/ull_conn.c
* #13832 [Coverity CID :190992]Null pointer dereferences in /subsys/net/ip/dhcpv4.c
* #13831 [Coverity CID :190993]Various in /subsys/shell/shell.c
* #13830 [Coverity CID :190995]Control flow issues in /subsys/net/ip/ipv6.c
* #13829 [Coverity CID :190996]Integer handling issues in /drivers/can/stm32_can.c
* #13828 [Coverity CID :190997]Integer handling issues in /lib/os/printk.c
* #13827 [Coverity CID :190998]Incorrect expression in /tests/drivers/uart/uart_async_api/src/test_uart_async.c
* #13826 [Coverity CID :191001]Control flow issues in /subsys/net/lib/lwm2m/lwm2m_rw_json.c
* #13825 [Coverity CID :191002]Error handling issues in /tests/net/lib/mqtt_pubsub/src/test_mqtt_pubsub.c
* #13824 [Coverity CID :191003]Resource leaks in /samples/net/sockets/can/src/main.c
* #13823 tests/kernel/arm_irq_vector_table: test case cannot quit displaying ""isr 0 ran!""
* #13822 Invalid USB state: powered after cable is disconnected
* #13821 tests/kernel/sched/schedule_api: Assertion failed for test_slice_scheduling
* #13813 Test suite mslab_threadsafe fails randomly
* #13783 tests/kernel/mem_protect/stackprot failure in frdm_k64f due to limited privilege stack size
* #13780 mimxrt1060_evk tests/crypto/tinycrypt_hmac_prng and test_mbedtls meet Unaligned memory access
* #13779 mimxrt1060_evk tests/kernel/mem_pool/mem_pool_threadsafe meets Imprecise data bus error
* #13778 mimxrt1060_evk tests/kernel/pending meets assert
* #13777 mimxrt1060_evk tests/kernel/profiling/profiling_api meets Illegal use of the EPSR
* #13769 mimxrt1060_evk tests/kernel/fifo/fifo_timeout and kernel/fifo/fifo_usage meet system error
* #13768 mimxrt1060_evk tests/kernel/device illegal use of the EPSR
* #13767 mimxrt1060_evk tests/kernel/context and tests/kernel/critical caught system err
* #13766 mimxrt1060_evk tests/kernel/fatal meet many unwanted exceptions
* #13765 mimxrt1060_evk tests/kernel/workq/work_queue meets Illegal use of the EPSR
* #13764 mimxrt1060_evk test/kernel/mem_slab/mslab_threadsafe meets Imprecise data bus error
* #13762 mimxrt1060_evk test/lib/c_lib and test/lib/json test/lib/ringbuffer meet  Unaligned memory access
* #13754 Error: ""West version found in path does not support '/usr/bin/make flash', ensure west is installed and not only the bootstrapper""
* #13753 _UART_NS16550_PORT_{2,3}_ seems to be a (possibly broken) Kconfig/DTS mishmash
* #13752 The Arduino 101 docs tell people to set CONFIG_UART_QMSI_1_BAUDRATE, which was removed
* #13750 CONFIG_SPI_3_NRF_SPIS is undefined but referenced
* #13748 CONFIG_SOC_MCIMX7D_M4 is undefined but referenced
* #13747 CONFIG_NRFX_UARTE{2-3} are undefined but referenced
* #13735 mimxrt1020_evk tests/benchmarks/app_kernel meets Illegal use of the EPSR
* #13734 tests/subsys/settings/fcb/src/settings_test_save_unaligned.c fail with assertion failure on nrf52_pca10040
* #13733 mimxrt1020_evk samples/net/zperf meets Unaligned memory access
* #13729 sanitycheck --coverage failed
* #13728 mimxrt1020_evk tests/subsys/logging/log_core test_log_strdup_gc meets Unaligned memory access
* #13727 MIMXRT1020_EVK sample/subsys/logging/logger report unaligned memory access
* #13716 CAN tests don't build
* #13710 Build failure when using XCC toolchain
* #13703 Build error w/Flash driver enabled on hexiwear kw40
* #13701 x86 stack check fail w/posix-lib & newlib
* #13686 newlib, posix-lib and xtensa/riscv (with sdk-0.9.5) don't build cleanly
* #13680 XCC install directions need updating in boards/xtensa/intel_s1000_crb/doc/index.rst
* #13665 amples/subsys/usb/cdc_acm_composite: Stuck at ""Wait for DTR""
* #13664 samples/subsys/usb/cdc_acm_composite: No output beyond ""***** Booting Zephyr OS v1.14.0-rc- ....****** banner
* #13662 samples/subsys/usb/cdc_acm: Stuck at ""Wait for DTR""
* #13655 mimxrt1050_evk test/crypto/rand32 meets Kernel Panic
* #13654 mimxrt1050_evk test/kernel/mem_protect/stack_random fails on stack fault
* #13642 stack canaries don't work with user mode threads
* #13624 ATMEL SAM family UART and USART - functions u(s)art_sam_irq_is_pending doesn't respect IRQ settings
* #13610 kernel: Non-deterministic and very high ISR latencies
* #13609 samples: cfb: text is not displayed due to display_blanking_off()
* #13595 tests/kernel/stack fails to build on nios2 with new SDK 0.10.0-rc3
* #13594 tests/kernel/mem_protect/mem_protect/kernel.memory_protection build failure on minnowboard with new SDK
* #13585 CONFIG_BT_HCI_TX_STACK_SIZE is too small
* #13584 i.MX RT board flashing and debugging sections are out of date
* #13572 settings: Bluetooth: Failed parse/lookup
* #13567 tests/subsys/settings/fcb/base64 fails when write-block-size is 8
* #13560 STM32 USB: netusb: kernel crash when testing example echo_server with nucleo_f412zg  (ECM on Windows)
* #13550 stm32: i2c: SSD1306 does not work due to write size limitation
* #13547 tests/drivers/build_all: The Zephyr library 'drivers__adc' was created without source files
* #13541 sanitycheck errors when device-testing frdm_k64f
* #13536 test: tests/kernel/mem_slab/mslab_threadsafe fails sporadically on nrf52
* #13522 BT SUBSCRIBE to characteristic for Indication or WRITE to value results in kernel crash
* #13515 samples/net/sockets/echo doesn’t link with CONFIG_NO_OPTIMIZATIONS=y
* #13514 #stm32 creating #gpio #interrupts on 2+ pins with the same pin number failes
* #13502 tests/benchmarks/timing_info: Output only consist of Delay Boot Banner
* #13489 frdm_k64f test/net/tcp bus fault after test ends
* #13484 net: (At least) eth_smsc911x driver is broken in the master
* #13482 The frdm_k64f board resets itself periodically/A possible NXP MPU bug
* #13481 Regression in CI coverage for (at least) some Ethernet drivers after net_app code removal
* #13470 Lack of POSIX compliance for sched_param struct
* #13465 tests/lib/mem_alloc/testcase.yaml#libraries.libc.minimal: Bus fault at test_malloc
* #13464 rb.h: macro RB_FOR_EACH_CONTAINER bug
* #13463 frdm_kl25z samples/basic/threads Kernel Panic
* #13462 frdm_kl25z samples/basic/disco meet hard fault
* #13458 galileo I2C bus master names aren't getting set in the build
* #13449 sanitycheck failure: [nocache] build failures with sdk-ng-0.10.0
* #13448 OpenOCD support code version not raised on recent additions
* #13437 6LoWPAN: ICMP Ping Zephyr -> Linux broken in master [regression, bisected]
* #13434 Aliases inside dts leads to warnings
* #13433 Error when rebooting the frdm_k64f board
* #13424 Logger got recently slower
* #13423 Default logger stack size insufficient for various samples
* #13422 Can't use GPIO 2, 3 and 4
* #13421 tests/drivers/watchdog/wdt_basic_api: test_wdt_no_callback() repeats indefinitely
* #13413 x86 reports incorrect stack pointer for user mode exceptions
* #13411 kernel: ASSERTION FAIL [z_spin_lock_valid(l)]
* #13410 qemu_x86 transient build errors for mmu_tables.o
* #13408 DT_FLASH_AREA generated seems to be different for Zephyr and MCUBootloader
* #13397 Function documentation is missing for BSD sockets
* #13396 Cannot connect to Galaxy S8 via BLE
* #13394 Missing Documentation for Bluetooth subsystem
* #13384 linking error of gettimeofday with zephyr-sdk-0.10.0-rc2
* #13380 sockets: ordering of send() vs. poll() when using socket API + DTLS causes a crash
* #13378 Missing Documentation for Networking subsystem
* #13361 nucleo_f103rb blinky example cannot run
* #13357 Tracing hooks problem on POSIX
* #13353 z_timeout_remaining should substract z_clock_elapsed
* #13342 arm: user thread stack overflows do not report _NANO_ERR_STACK_CHK_FAIL
* #13341 arc: user thread stack overflows do not report _NANO_ERR_STACK_CHK_FAIL
* #13340 NRF52 pca10040 boards open the ""Flash hardware support"" option, the BT Mesh example does not work properly
* #13323 No USB instance
* #13320 sanitycheck miss extra_args: OVERLAY_CONFIG parameter
* #13316 Notification enabled before connection
* #13306 Checking if UARTE TX complete on nRF52
* #13301 frdm_k64f: samples/net/sockets/echo_server doesn't work
* #13300 NET: USB Ethernet tests were removed allowing to submit not compiling code
* #13291 samples/drivers/watchdog: Fatal fault in ISR
* #13290 samples/drivers/watchdog: Watchdog setup error
* #13289 tests/kernel/fifo/fifo_timeout fails on nrf52840_pca10056
* #13287 Zephyr can no longer apply DT overlays on a per-SoC basis
* #13272 Catch all bug for build issues with SDK 0.10.0-rc2
* #13257 Shell not compatible with c++
* #13256 UART error bitmask broken by new asynchronous UART API
* #13255 tests/drivers/counter/counter_basic_api: Kernel panic and an assertion error when you run  test_multiple_alarms() after test_single_shot_alarm_top() failed
* #13254 tests/drivers/counter/counter_basic_api: counter failed to raise alarm after ticks limit reached
* #13253 tests/drivers/counter/counter_basic_api: nchan  not equal to alarm_cnt
* #13251 frdm_k64f: samples/net/sockets/echo_server doesn't work
* #13249 Latest Zephyr HEAD results in a crash in mcuboot tree
* #13247 tests/drivers/counter/counter_basic_api:  counter_set_top_value() failed
* #13245 Including module(s):
* #13243 DT: error in generated_dts_board_fixups.h for board: frdm_k64f
* #13237 stm32 USB sanitycheck failures with sdk 0.10.0-beta2
* #13236 Failure tests/kernel/gen_isr_table on some stm32 platforms
* #13223 I2S transfers causes exception/crash in xtensa/Intel S1000
* #13220 qemu_x86_64 build failures
* #13218 tests: intel_s1000_crb: CONFIG_I2C_0_NAME undeclared build error
* #13211 net/sockets: send/sendto broken when len > MTU
* #13209 FATAL ERROR: unknown key ""posixpath"" in format string ""{posixpath}""
* #13203 drivers: wifi: simplelink: Need to translate socket family macro values
* #13194 soc/arm/nordic_nrf/nrf52/soc_power.h warning spew when CONFIG_SYS_POWER_MANAGEMENT=n
* #13192 silabs flash_gecko driver warning (will fail in CI)
* #13187 qemu_x86_64 leaks system headers into the build process
* #13166 tests/kernel/threads/dynamic_thread test cases are failing on frdm_k64f board
* #13161 QMSI drivers/counter/counter_qmsi_aon.c doesn't build
* #13147 net: ICMPv4 echo reply packets do not use default values in the IP header
* #13122 build for KW40z, KW41z fails to generate isr_tables
* #13113 Samples fail to build for SimpleLink when CONFIG_XIP=n
* #13110 MPU fault on performing fifo operations
* #13096 Remove CONFIG_X86_PAE_MODE from scripts/gen_mmu_x86.py
* #13084 net: Align interface numbering with POSIX/BSD/Linux
* #13083 Problem pairing/bonding 2nd device, whilst the first device is still connected using sample project (bluetooth\peripheral)
* #13082 s1000 board: multiple registrations for irq error
* #13073 intermittent failure in tests/benchmarks/timing_info
* #13066 Bug on STM32F2 USB Low Layer HAL
* #13065 CONFIG_BT leads Fatal fault in ISR on esp32
* #13051 Two timers are expiring at one time and crashing for platform nrf52_pca10040
* #13050 net: Zephyr drops TCPv4 packet with extended MAC frame size
* #13047 Build error while executing tests/kernel/tickless/tickless on quark_se_c1000_devboard
* #13044 intermittent tests/kernel/workq/work_queue failure
* #13043 intermittent tests/posix/common/ failure
* #13034 samples/bluetooth/peripheral_hr: could not connect with reel board
* #13025 CAN not working on Nucleo L432KC with external transciever
* #13014 sanitycheck fails to generate coverage report if samples/application_development/external_lib is run
* #13013 Problem executing 'west flash' outside zephyr directory.
* #13011 tests/posix/fs/ segfaults randomly in POSIX arch
* #13009 Coverage broken for nrf52_bsim
* #13005 syslog_net doc error
* #13001 app shared memory rules in CMakeLists.txt breaks incremental builds
* #12994 intermittent failures in tests/net/socket/select/ on qemu_x86
* #12982 net: Zephyr drops IPv4 packet with extended MAC frame size
* #12967 settings/fcb-backend: value size might be bigger than expected
* #12959 Error with cmake build ""string sub-command REGEX, mode MATCH needs at least 5 arguments""
* #12958 Missing LwM2M protocol information in the network section of docs
* #12957 Need documentation for MQTT
* #12956 CoAP missing documentation
* #12955 Missing Documentation for many subsystems and features
* #12950 tests/kernel/workq/work_queue_api/kernel.workqueue fails on nsim_em
* #12949 tests/benchmarks/timing_info/benchmark.timing.userspace fails on nsim_em
* #12948 tests/kernel/mem_protect/stack_random/kernel.memory_protection.stack_random fails on nsim_em
* #12947 tests/benchmarks/timing_info/benchmark.timing.default_kernel fails on nsim_em
* #12946 Zephyr/BLE stack: Problem pairing/bonding more than one device, whilst the first device is still connected.
* #12945 mqtt_socket connect is hung on sam_e70_xplained
* #12933 MCUboot: high current
* #12908 Data allocation in sections for quark_se is incorrect
* #12905 Build improperly does a partial discard of 'const' defined variables
* #12900 tests/benchmarks/timing_info doesn't print userspace stats
* #12886 Application development primer docs broken by west merge
* #12873 Early log panic does not print logs on shell
* #12851 Early log panic does not print logs
* #12849 i2c: frdm-k64f and mimxrt1050_evk I2C driver  will cause hardware exception if read/write to a not existing device
* #12844 ARC MPU version 3 is configured incorrectly
* #12821 When CPU_STATS is enable with MPU_STACK_GUARD in DEBUG_OPTIMIZATIONS mode, it cause a MPU FAULT /   Instruction Access Violation.
* #12820 CONFIG_NO_OPTIMIZATION triggers a usage fault
* #12813 DTS: CONFIG_FLASH_BASE_ADDRESS not being generated for SPI based Flash chip
* #12812 ninja flash when running without 'west'
* #12810 Up Squared serial console character output corrupted
* #12804 tests/drivers/watchdog/wdt_basic_api/: wdt_install_timeout() failed to call callback
* #12803 tests/drivers/watchdog/wdt_basic_api/: Watchdog setup error
* #12800 topic-counter: nrfx_*: counter_set_top_value inconsistent behavior
* #12796 USB Power Event Panic
* #12766 drivers: gpio: stm32: implementation silently ignores attempts to configure level interrupts
* #12765 drivers: gpio: intel_apl: implementation silently ignores double-edge interrupt config
* #12764 drivers: gpio: cmsdk_ahb: implementation silently ignores double-edge interrupt config
* #12763 drivers: gpio: sch: implementation does not configure interrupt level/edge
* #12758 doc: Samples and Demos documentation hierarchy looks unintentionally deep
* #12745 SimpleLink socket functions, on error, sometimes do not set errno and return (-1)
* #12734 drivers: flash: Recent change in spi_nor.c does not let have multiple flash devs on a board.
* #12726 Dead loop of the kernel during Bluetooth Mesh pressure communication
* #12724 SPI CS: in case of multiple slaves, wrong cs-gpio is chosen in DT\_ define
* #12708 Drivers may call net_pkt_(un)ref from ISR concurrently with other code
* #12696 CMAKE_EXPORT_COMPILE_COMMANDS is broken
* #12688 arm: userspace: inconsistent configuration between ARM and NXP MPU
* #12685 717aa9cea7 broke use of dtc 1.4.6
* #12657 subsys/settings: fcb might compress areas more than once
* #12654 Build error while executing tests/kernel/smp on ESP32
* #12652 UART console is showing garbage with driver uart_ns15560
* #12650 drivers: wifi: simplelink: socket() always returns fd of zero on success
* #12640 CONFIG_ETH_ENC28J60_0_GPIO_SPI_CS=y cause build error
* #12632 tests/drivers/adc/adc_api/ fails on quark platforms
* #12621 warning about images when building docs
* #12615 Network documentation might miss API documentation
* #12611 Shell does not support network backends
* #12609 ext: stm32: revert fix https://github.com/zephyrproject-rtos/zephyr/pull/8762
* #12594 stm32_min_dev board no console output
* #12589 Several nRF based boards enable both I2C & SPI by default in dts at same MMIO address
* #12574 Bluetooth: Mesh: 2nd time commissioning configuration details (APP Key) not get saved on SoC flash
* #12571 No coverage reports are being generated
* #12570 Zephyr codebase incorrectly uses #ifdef for boolean config values
* #12560 Using TCP w/ wired NIC results in mismanagement of buffers due to ACK accounting error
* #12559 tests/kernel/mem_pool/mem_pool_threadsafe/kernel.memory_pool fails sporadically
* #12553 List of tests that keep failing sporadically
* #12548 ISR sometimes run with the MPU disabled: breaks __nocache
* #12544 commit 2fb616e broke I2C on Nucleo F401RE + IKS01A2 shield
* #12543 doc: Wrong file path for code relocation sample
* #12541 nrf timer handling exceeds bluetooth hard realtime deadline
* #12530 DTS: Changes done to support QSPI memory mapped flash breaks intel_s1000 build
* #12528 a bug in code
* #12501 nRF52: UARTE lacks pm interface
* #12494 Logging with CONFIG_LOG_IMMEDIATE=y from ISR leads to assert
* #12488 RedBear Nano v2 Mesh Instruction Fault
* #12487 Power management and RTTLogger
* #12479 arc: the pollution of lp_start,lpend and lp_count will  break down the system
* #12478 tests/drivers/ipm/peripheral.mailbox failing sporadically on qemu_x86_64 (timeout)
* #12455 Fatal fault when openthread commissioner starts
* #12454 doc: Some board images are pretty big (> 1MB)
* #12453 nrf52 SPIM spi_transceive function occasionally doesn't return
* #12449 Existing LPN lookup in Mesh Friend Request handling
* #12441 include: net: Link error when inet_pton() is used and wifi offloading is enabled
* #12429 Bluetooth samples not working on qemu_x86
* #12419 cannot flash with segger jlink in windows environment
* #12410 Assert and printk not printed on RTT
* #12409 non-tickless kernels incorrectly advance system clock with delayed ticks
* #12395 Some Bluetooth samples wont run using the latest branch on some boards
* #12369 WDT: wdt callbacks are not getting triggerred before CPU going for a reboot
* #12362 BLE HID sample fails to reconnect on Windows 10 tablets
* #12352 intermittent kernel.mutex sanitycheck with mps2_an385
* #12347 net ping shell can't show reply
* #12339 drivers: nordic: usb: missing fragmentation handling for IN transfers, causing buffer overflow
* #12329 enable CONFIG_NET_DEBUG_HTTP_CONN cause build error
* #12326 [Coverity CID :158187]Control flow issues in /sanitylog/nrf52840_pca10056/samples/net/echo_server/test_nrf_openthread/zephyr/ext_proj/Source/ot/third_party/mbedtls/repo/library/ecp.c
* #12325 [Coverity CID :190377]Control flow issues in /sanitylog/nrf52840_pca10056/samples/net/echo_server/test_nrf_openthread/zephyr/ext_proj/Source/ot/examples/platforms/utils/settings_flash.c
* #12324 [Coverity CID :190380]Insecure data handling in /sanitylog/nrf52840_pca10056/samples/net/echo_server/test_nrf_openthread/zephyr/ext_proj/Source/ot/third_party/mbedtls/repo/library/ssl_tls.c
* #12323 [Coverity CID :190383]Null pointer dereferences in /sanitylog/nrf52840_pca10056/samples/net/echo_server/test_nrf_openthread/zephyr/ext_proj/Source/ot/third_party/mbedtls/repo/library/ssl_tls.c
* #12322 [Coverity CID :190611]Control flow issues in /drivers/usb/device/usb_dc_nrfx.c
* #12321 [Coverity CID :190612]Control flow issues in /subsys/net/lib/lwm2m/lwm2m_rw_json.c
* #12320 [Coverity CID :190613]Integer handling issues in /subsys/net/lib/lwm2m/lwm2m_engine.c
* #12319 [Coverity CID :190614]Control flow issues in /subsys/shell/shell_utils.c
* #12318 [Coverity CID :190615]Null pointer dereferences in /subsys/net/lib/lwm2m/lwm2m_engine.c
* #12317 [Coverity CID :190616]Integer handling issues in /subsys/net/lib/lwm2m/lwm2m_engine.c
* #12316 [Coverity CID :190617]Control flow issues in /subsys/net/lib/lwm2m/lwm2m_rw_json.c
* #12315 [Coverity CID :190618]Code maintainability issues in /drivers/modem/wncm14a2a.c
* #12314 [Coverity CID :190619]Memory - illegal accesses in /subsys/bluetooth/host/mesh/settings.c
* #12313 [Coverity CID :190620]Null pointer dereferences in /drivers/wifi/eswifi/eswifi_core.c
* #12312 [Coverity CID :190621]Memory - corruptions in /subsys/net/lib/lwm2m/lwm2m_rw_oma_tlv.c
* #12311 [Coverity CID :190622]Memory - corruptions in /drivers/wifi/eswifi/eswifi_offload.c
* #12310 [Coverity CID :190623]Error handling issues in /drivers/wifi/eswifi/eswifi_core.c
* #12309 [Coverity CID :190624]Memory - corruptions in /tests/posix/fs/src/test_fs_file.c
* #12308 [Coverity CID :190625]Integer handling issues in /samples/bluetooth/peripheral/src/main.c
* #12307 [Coverity CID :190626]Null pointer dereferences in /subsys/net/lib/coap/coap_sock.c
* #12306 [Coverity CID :190627]Incorrect expression in /samples/net/zperf/src/zperf_tcp_receiver.c
* #12305 [Coverity CID :190628]Memory - corruptions in /drivers/wifi/eswifi/eswifi_core.c
* #12304 [Coverity CID :190629]Incorrect expression in /samples/net/zperf/src/zperf_udp_receiver.c
* #12303 [Coverity CID :190630]Null pointer dereferences in /drivers/modem/wncm14a2a.c
* #12302 [Coverity CID :190631]Control flow issues in /subsys/net/lib/lwm2m/lwm2m_rw_json.c
* #12301 [Coverity CID :190632]Memory - corruptions in /drivers/wifi/eswifi/eswifi_offload.c
* #12300 [Coverity CID :190633]Control flow issues in /subsys/net/lib/lwm2m/lwm2m_rw_plain_text.c
* #12299 [Coverity CID :190634]Control flow issues in /subsys/net/lib/lwm2m/lwm2m_obj_device.c
* #12298 [Coverity CID :190635]Integer handling issues in /subsys/net/lib/coap/coap_link_format_sock.c
* #12297 [Coverity CID :190636]Incorrect expression in /samples/subsys/usb/console/src/main.c
* #12296 [Coverity CID :190637]Null pointer dereferences in /subsys/net/lib/lwm2m/lwm2m_rw_plain_text.c
* #12295 [Coverity CID :190638]Control flow issues in /samples/portability/cmsis_rtos_v2/timer_synchronization/src/main.c
* #12294 [Coverity CID :190639]Null pointer dereferences in /subsys/net/ip/route.c
* #12293 [Coverity CID :190640]Null pointer dereferences in /drivers/wifi/eswifi/eswifi_core.c
* #12292 [Coverity CID :190641]Null pointer dereferences in /lib/cmsis_rtos_v2/kernel.c
* #12291 [Coverity CID :190642]Error handling issues in /drivers/console/telnet_console.c
* #12290 [Coverity CID :190644]Memory - illegal accesses in /drivers/modem/wncm14a2a.c
* #12282 ""make htmldocs"" reports a cmake warning
* #12274 Assert crash in logger's out_func
* #12268 doc: nightly published AWS docs are not as generated
* #12265 doc: Some API documentation is not being generated
* #12257 The latest GNU ARM Embedded Toolchain can't produce hex files on Windows
* #12252 potential non-termination of k_mem_pool_alloc
* #12250 DTS: Inconsistencies seen for SPI node with size-cells
* #12249 Can't flash CC3220 with OpenOCD
* #12243 Build error with I2C driver for nucleo_f103rb: DT_ST_STM32_I2C_V1_40005400_BASE_ADDRESS' undeclared here
* #12241 logging: log output busy loops if log output function can not process buffer
* #12224 POSIX api are incompatible with arm gcc 2018q2 toolchain
* #12203 openthread: bind IP is randomly selected causing off-mesh communication problems
* #12201 Enabling CONFIG_LOG is throwing exceptions on intel_s1000
* #12192 include: __assert: enabling assert causes build errors
* #12190 Mbedtls MBEDTLS_PLATFORM_STD_SNPRINTF issue
* #12186 net: arp: Zephyr does not use MAC address from unicast ARP reply with wrong target MAC
* #12179 net: arp: Zephyr does not use MAC address from unicast ARP reply
* #12171 ot: ping ten times will crash
* #12170 logging: previous changes to dropped message notification break wifi sample debug
* #12164 net: icmpv4: Zephyr drops ICMPv4 packet with correct checksum 0
* #12162 net: icmpv4: Zephyr replies to ICMPv4 echo request with broadcast destination IPv4 address
* #12159 bt_gatt_attr_read_chrc: no characteristic for value
* #12154 802.15.4 6LowPAN stopped working with multiple samples
* #12147 tests/kernel/interrupt fails on quark_se_c1000_ss_devboard
* #12146 tests/kernel/arm_irq_vector_table fails on NRF5 boards
* #12144 There's lots of references to undefined Kconfig symbols
* #12123 samples: cmsis_rtos_v1/philosophers faults with a FATAL EXCEPTION on esp32
* #12122 system.settings.nffs fails on NRF5 boards
* #12120 Can't pair with nrf52832 running zephyr
* #12118 printf doesn't work on qemu_cortex_m3 with newlib and arm gcc 2018q2 toolchain
* #12092 Default Virtual COM port on nucleo_l4r5zi is lpuart1
* #12091 tests/subsys/settings/fcb/base64 fails on NRF5 boards
* #12089 Unexpected fault during test does not cause test failure
* #12069 iwdg_stm32.c: potential failure in wdt_set_config()
* #12066 Observing a Python path Issue with Git based Compile
* #12065 enormous .BSS size while building tests/subsys/fs/nffs_fs_api
* #12059 kernel.memory_protection.stack_random fails on quark_d2000_crb board
* #12058 Lots of tests don't honor CONFIG_TEST_EXTRA_STACK_SIZE
* #12051 LOG_PANIC never returns if RTT is disconnected
* #12045 frdm_k64f + shell breaks Ethernet driver
* #12043 logger: Invalid pointer deference in samples/subsys/logging/logger/
* #12040 Log messages are dropped even with huge log buffer
* #12037 nrf52840 ram retention example failed
* #12033 samples/application_development/code_relocation fails on mps2_an385
* #12029 CONFIG_STACK_CANARIES doesn't work on x86_64
* #12016 Crash while disconnecting device from USB
* #12006 valgrind detected issue in tests/net/ipv6/
* #11999 CONFIG_TEXT_SECTION_OFFSET doesn't seem to work on x86
* #11998 intermittent failures in tests/kernel/common: test_timeout_order: (poll_events[ii].state not equal to K_POLL_STATE_SEM_AVAILABLE)
* #11989 Reel Board mesh_badge sample | Light sensor bug
* #11980 cmake: Build fails in an environment without 'python' binary
* #11967 nrfx SPI driver blocks indefinitly when transfering
* #11961 Python warning in process_gperf.py
* #11935 Invalid usage of k_busy_wait()
* #11916 ISR table (_sw_isr_table) generation is fragile and can result in corrupted binaries
* #11914 NXP documentation: frdm-k64f links dead
* #11904 blinky example can't work on nucleo-f070rb and nucleo-f030r8 platform
* #11894 zephyr_env.sh failes to correctly set $ZEPHYR_BASE with zsh hooks bound to cd
* #11889 Race between SimpleLink WiFi driver FastConnect and networking app startup.
* #11859 sanitycheck failures on lpcxpresso54114_m4: Error: Aborting due to non-whitelisted Kconfig warning
* #11857 cmake does not detect most recent python, it is fixed somehow to 3.4.x
* #11844 rtc_ll_stm32.c:232: undefined reference to 'LL_RCC_LSE_SetDriveCapability'  #stm32 #rtc
* #11841 Assert invoked in exception in ctrl.c line 7653 (zephyr 1.13.00)
* #11827 gPTP Sample Application fails on frdm_k64f board ,and PDelay Response Receipt Timeout
* #11815 nxp_kinetis: system reset leaves interrupts enabled during startup
* #11806 gpio_nrf mishandles level interrupts
* #11798 A thread may lock a mutex before it is fully unlocked.
* #11794 cmake: CMake 3.13 doesn't like INTERFACE with target_link_libraries
* #11792 drivers: nrf: UARTE interrupt driven cannot be compiled
* #11780 Bluetooth: Mesh: initialisation delay after disabling CONFIG_BT_DEBUG_LOG
* #11779 watchdog sample application not being built on Nordic devices
* #11767 tests: counter api: Failed when MPU enabled
* #11763 logger drops log messages without any indication
* #11754 NRFX TWI driver does not compile with newlib
* #11752 tests/lib/ringbuffer: build error on Xtensa ESP32
* #11749 logging: default log thread priority is too high
* #11744 Regression: nNRF52840 HW dies at 8 minutes 20 seconds in various samples using IPSP
* #11741 mqtt_publisher sample not working with BLE IPSP and has outdated net setup/prj configs
* #11723 tests/cmsis_rtos_v1 fails on nrf52840_pca10056
* #11722 tests/kernel/timer/timer_api fails on nrf52_pca10040 board
* #11721 tests/kernel/sched/schedule_api fails on nrf5* boards
* #11719 Legacy MQTT sample app breaking
* #11698 net: ipv4: Zephyr replies to ICMPv4 packets with incorrect checksums
* #11694 system clock problem on NRF52 boards
* #11682 Mesh Friend replies to initial Friend Poll with ""old"" security credentials
* #11675 Cannot set UART device name in menuconfig
* #11674 Wrong assert condition @@zephyr/kernel/sched.c:345
* #11651 Time consumption is not constant during the pend and unpend operation with 0(1) pending queue
* #11633 logging: CONFIG_LOG_INPLACE_PROCESS is not synchronous
* #11626 k_busy_wait exits early on Nordic chips
* #11625 Problem with printk and LOG_ERR used with shell enabled
* #11618 net: icmpv4: Zephyr drops valid echo request
* #11617 net: ipv4: udp: broadcast delivery not supported
* #11612 i2c_burst_write on nrf51 is not a burst write
* #11586 mimxrt1050_evb board: Can't get Ethernet to work
* #11579 net: arp: MAC address not updated if target address is not its own
* #11565 gpio_callback ambiguity in union pin vs pin_mask
* #11564 Bluetooth: settings: Invalid base64 value written to flash
* #11562 net: arp: Zephyr does use MAC address from broadcast ARP reply
* #11561 Ping through net shell seems to be broken
* #11533 Energy-efficient BLE controller on the nRF52
* #11532 drivers: serial: uart_msp432p4xx.c not compile for interrupt API
* #11531 Networking samples documentation updates
* #11513 drivers: SPI NOR: Inconsistency with flash interface docs
* #11502 Delayed works are not scheduled when system is busy
* #11495 Printk processed by logger overwrites each other
* #11489 net: arp: Zephyr replies to localhost address
* #11488 [Coverity CID :183483]Incorrect expression in /sanitylog/v2m_beetle/tests/ztest/test/base/testing.ztest.verbose_2/zephyr/priv_stacks_hash.gperf
* #11487 [Coverity CID :185396]Incorrect expression in /sanitylog/v2m_beetle/tests/posix/fs/portability.posix/zephyr/kobject_hash.gperf
* #11486 [Coverity CID :186197]Parse warnings in /sanitylog/lpcxpresso54114_m4/samples/subsys/ipc/openamp/test/openamp_remote-prefix/src/openamp_remote-build/CMakeFiles/CheckIncludeFiles/HAVE_FCNTL_H.c
* #11485 [Coverity CID :189738]Null pointer dereferences in /subsys/net/lib/dns/llmnr_responder.c
* #11484 [Coverity CID :189739]Parse warnings in /subsys/usb/class/netusb/function_eem.c
* #11483 [Coverity CID :189740]Control flow issues in /samples/boards/reel_board/mesh_badge/src/reel_board.c
* #11482 [Coverity CID :189741]Memory - illegal accesses in /samples/boards/reel_board/mesh_badge/src/reel_board.c
* #11481 [Coverity CID :189742]Program hangs in /drivers/usb/device/usb_dc_sam.c
* #11480 [Coverity CID :189743]Incorrect expression in /drivers/usb/device/usb_dc_sam.c
* #11465 UART_INTERRUPT_DRIVEN broken on SOC_SERIES_IMX7_M4 and SOC_SERIES_IMX_6X_M4
* #11464 where is PM_CONTROL_OS defined in Kconfig?
* #11462 tests: intel_s1000: flash test will fail or erase code when booting from flash
* #11461 tests: intel_s1000: build error due to offsets lib
* #11447 Build error for lwm2m_client w/ modem overlay
* #11425 MISRA C Do not use recursions
* #11417 logging doesn't log, again
* #11409 Device crash on BLE reconnection
* #11394 GPIO API: Do not blindly re-install an already installed callback
* #11393 printk (RTT backend) from isr can deadlock the system
* #11390 soc: intel_s1000: Fix the tests for dma and i2s drivers
* #11384 CI ignores result of multiple test suites in one test application
* #11383 tests/drivers/i2s/i2s_api failing on sam_e70_xplained
* #11373 Move STM32 RTC to new counter API
* #11339 zephyr stm32f4 startup freezes at startup in PRINT_BOOT_BANNER() #stm32 #uart #boot
* #11329 net: arp: Zephyr replies to multicast address cause of malfored ARP request
* #11310 Wifi scan crashes on disco_l475_iot1
* #11301 KW41Z crash on echo apps (ieee802154)
* #11281 uart shell: ring buffer usage bug
* #11276 nrf51_pca10028:tests/kernel/interrupt/arch.interrupt registers IRQ 24 twice
* #11275 frdm_k64f/samples/net/gptp/test: irq line 85 registered twice
* #11268 soc: intel_s1000: linker section size updates
* #11266 intel_s1000: usb_hid: load/store alignment exception
* #11260 Detection of an MSYS environment sometimes fails
* #11255 Pinging sam_e70 leads to unresponsive ethernet device at some point
* #11250 'net help' or 'kernel help' shell commands lead to a fatal fault
* #11244 Turning on SystemView causes error
* #11232 nrf52: reel_board: USB unable to send fragmented packets through Control endpoint
* #11226 Logging: duplicate log messages for some samples when building for qemu_x86
* #11202 recent ""shell: shell_uart"" commit breaks shell samples on cc3220sf
* #11187 cmake/toolchain/clang: selecting clang doesn't select the correct compiler file
* #11182 qemu_xtensa tests fail spuriously under sanitycheck/CI
* #11179 Minor Typo ""dirver"" in UART of Native Posix
* #11171 usb: nrf: usb_nrfx is in endless loop when USB cable in not connected
* #11170 kernel.profiling.call_stacks_analyze_idle: assertion fails on em_starterkit_em7d_v22
* #11167 Building failing in arm cortex-m0
* #11166 quark_se_c1000_devboard has no docs
* #11147 subsys: logging: rtt: undeclared macro
* #11146 ext: debug: segger: rtt: SEGGER_RTT_Init() missing return statement
* #11136 drivers/spi: WARNING: Unsigned expression compared with zero
* #11135 subsys/net/lib/: WARNING: Unsigned expression compared with zero
* #11134 drivers/flash/soc_flash_nios2_qspi.c: WARNING: Unsigned expression compared with zero
* #11133 lib/posix/mqueue.c: WARNING: Unsigned expression compared with zero
* #11129 CONFIG_TICKLESS_KERNEL makes z_clock_set_timeout doesn't work
* #11103 The wrong Python version can be detected on Windows
* #11102 [Coverity CID :189504]Error handling issues in /samples/net/sockets/echo/src/socket_echo.c
* #11101 [Coverity CID :189505]Error handling issues in /drivers/sensor/lis2mdl/lis2mdl_trigger.c
* #11100 [Coverity CID :189506]Control flow issues in /subsys/net/ip/net_shell.c
* #11099 [Coverity CID :189507]Parse warnings in /samples/drivers/flash_shell/src/main.c
* #11098 [Coverity CID :189508]Control flow issues in /drivers/usb/device/usb_dc_nrfx.c
* #11097 [Coverity CID :189509]Integer handling issues in /drivers/sensor/ms5837/ms5837.c
* #11096 [Coverity CID :189510]Memory - corruptions in /subsys/bluetooth/host/monitor.c
* #11095 [Coverity CID :189511]Code maintainability issues in /subsys/settings/src/settings_fcb.c
* #11094 [Coverity CID :189512]Null pointer dereferences in /subsys/logging/log_msg.c
* #11093 [Coverity CID :189513]Control flow issues in /subsys/bluetooth/shell/gatt.c
* #11092 [Coverity CID :189514]Possible Control flow issues in /drivers/display/ssd1673.c
* #11091 [Coverity CID :189515]Incorrect expression in /drivers/usb/device/usb_dc_stm32.c
* #11090 [Coverity CID :189516]Null pointer dereferences in /drivers/wifi/simplelink/simplelink_sockets.c
* #11089 [Coverity CID :189517]Control flow issues in /drivers/sensor/fxos8700/fxos8700.c
* #11088 [Coverity CID :189518]Memory - illegal accesses in /samples/boards/reel_board/mesh_badge/src/reel_board.c
* #11087 [Coverity CID :189519]Error handling issues in /samples/net/sockets/echo/src/socket_echo.c
* #11086 [Coverity CID :189520]Error handling issues in /samples/net/sockets/echo/src/socket_echo.c
* #11077 Compiler warning at include/misc/util.h when building for ESP32
* #11047 doc: missing Doxygen generated documentation for any function which name starts with an underscore
* #11046 Enabling SYS_POWER_MANAGEMENT results in a linker error.
* #11034 Enabling config XTENSA_ASM2 is causing system crash on intel_s1000
* #11022 mempool allocator is broken
* #11019 About printk configuration
* #11016 nRF52840-PCA10056/59: Cannot bring up HCI0 when using HCI_USB sample
* #11008 net-related logging: Don't see the expected output + crash in logging
* #11007 logging: ""log_strdup pool empty!"" is confusing
* #10994 upsquared sample gpio_counter sample.yaml is malformatted/sanitycheck doens't build samples/boards/up_squared/gpio_counter
* #10993 upsquared sample gpio_counter doesnt build
* #10990 ext: lib: crypto: mbedTLS: warning in platform.h glue
* #10971 net: ipv6: Zephyr replies to ICMPv6 packets with incorrect checksums
* #10970 net: ipv6: Zephyr replies to malformed ICMPv6 message
* #10967 FRDM-K64F and MCR-20A configuration does not work
* #10961 net: ipv6: Zephyr replies to a packet with organization local multicast destination address
* #10960 net: ipv6: Zephyr replies to a packet with site-local multicast destination address
* #10959 net: ipv6: Zephyr replies to a packet with interface-local multicast destination
* #10958 net: ipv6: Zephyr replies to a packet with destination multicast with scope zero
* #10955 I can't see the output using the minicom when flash on STM32F429IGT6
* #10952 Bluetooth Mesh: Disabling ""CONFIG_BT_MESH_DEBUG_ACCESS"" leads to wrong OpCode attached to sent messages
* #10917 Convert iwdg_stm32 STM32 Watchdog driver to new API
* #10916 Convert CMSDK APB Watchdog driver to new API
* #10914 Convert Atmel SAM0 Watchdog driver to new API
* #10913 Convert Atmel SAM Watchdog driver to new API
* #10909 Missing stm32l433.dtsi file
* #10899 nRF52840 DevKit generates USB TX timeout when using HCI_USB
* #10894 Add dts support to SPI slave drivers & tests
* #10882 Web instructions: quotes are wrong in build chain for Windows
* #10878 errno for error codes for key management break on newlib
* #10845 ext: hal: nxp: Use ARRAY_SIZE helper macro
* #10825 The DesignWare SPI driver should be hidden on unsupported platforms
* #10817 Getting Started Guide script error
* #10811 crash while connecting a USB cable
* #10803 Compiler warning at /kernel/sched.c
* #10801 Compiler warning in soc/xtensa/esp32/include/_soc_inthandlers.h
* #10788 riscv_machine_timer driver don't follow the spec ?
* #10775 Build error in zephyr.git/include/toolchain/gcc.h leading to shippable failures
* #10772 tests/drivers/adc/adc_api results into build failure on nRF platforms
* #10760 Flash Shell compilation error without BT
* #10758 [Coverity CID :188881]Control flow issues in /samples/net/zperf/src/zperf_shell.c
* #10757 [Coverity CID :188882]Incorrect expression in /tests/kernel/interrupt/src/nested_irq.c
* #10756 [Coverity CID :188883]Memory - illegal accesses in /subsys/bluetooth/host/hci_core.c
* #10755 [Coverity CID :188885]Error handling issues in /lib/ring_buffer/ring_buffer.c
* #10754 [Coverity CID :188886]Error handling issues in /tests/posix/common/src/mqueue.c
* #10753 [Coverity CID :188887]Error handling issues in /tests/posix/common/src/pthread.c
* #10752 [Coverity CID :188888]Incorrect expression in /tests/kernel/interrupt/src/nested_irq.c
* #10751 [Coverity CID :188889]Memory - illegal accesses in /subsys/bluetooth/host/gatt.c
* #10750 [Coverity CID :188890]Insecure data handling in /drivers/watchdog/wdt_qmsi.c
* #10747 tests/kernel/tickless/tickless_concept fails on ARC boards
* #10733 Logger thread should be started earlier than _init_static_threads() in init.c
* #10720 SSD1673 driver it setting a Kconfig symbol in dts_fixup.h
* #10707 tests/benchmarks/latency_measure fails on sam_e70_xplained
* #10693 samples/subsys/usb/console: Console routed to UART of no USB
* #10685 Missing # for else in segger conf
* #10678 nRF52840: hci_usb timeout during initialization by bluez
* #10672 nRF52: UARTE: uart_fifo_fill return value unreliable
* #10671 Callback function le_param_req() is never called.
* #10668 nRF52832: RTT vs. Bluetooth
* #10662 ""Quick start - Integration testing"" does not work as intended.
* #10658 Cannot use SPI_0 on nRF52810
* #10649 bug when build project which new c lib
* #10639 make run for native_posix has dependency issues
* #10636 quark_se is missing SPI_DRV_NAME symbol
* #10635 tests/kernel/mem_pool/mem_pool_api#test_mpool_alloc_timeout crashes on qemu_riscv32
* #10633 tests/kernel/mem_protect/syscall crashes on freedom_k64f, sam_e70_xplained and nrf52_pca10040
* #10632 tests/kernel/poll faults on freedom_k64f, sam_e70_xplained and nrf52_pca10040
* #10623 tests/drivers/watchdog/wdt_basic_api fails on Quark platforms
* #10619 [Zephyr] Firmware upgrade through UART [Nordic 52840 - pca 10056 Board]
* #10617 net: shell: Converting net and wifi shells to new shell breaks samples/net/wifi app for SimpleLink WiFi driver
* #10611 STM32L4 GPIOC Missing Interrupt support? (nucleo_l476rg)
* #10610 i2s driver for stm still uses old logger
* #10609 RISC-V timer incorrectly written
* #10600 [Coverity CID :174409]Memory - illegal accesses in /ext/hal/ti/simplelink/source/ti/drivers/net/wifi/source/fs.c
* #10599 [Coverity CID :174410]Memory - corruptions in /ext/hal/ti/simplelink/source/ti/drivers/net/wifi/source/wlan.c
* #10598 [Coverity CID :174412]Incorrect expression in /ext/hal/ti/simplelink/source/ti/drivers/net/wifi/source/wlan.c
* #10597 [Coverity CID :174414]Error handling issues in /ext/hal/ti/simplelink/source/ti/drivers/net/wifi/source/driver.c
* #10596 [Coverity CID :174417]Code maintainability issues in /ext/hal/ti/simplelink/source/ti/drivers/net/wifi/source/device.c
* #10595 [Coverity CID :174418]Error handling issues in /ext/hal/ti/simplelink/source/ti/drivers/net/wifi/source/fs.c
* #10594 [Coverity CID :188729]Uninitialized variables in /subsys/bluetooth/shell/bt.c
* #10593 [Coverity CID :188730]Memory - corruptions in /drivers/sensor/lis2dh/lis2dh_trigger.c
* #10592 [Coverity CID :188731]Memory - illegal accesses in /ext/hal/ti/simplelink/source/ti/drivers/net/wifi/source/driver.c
* #10591 [Coverity CID :188732]Integer handling issues in /subsys/net/lib/http/http_server.c
* #10590 [Coverity CID :188733]Error handling issues in /drivers/sensor/lis2dh/lis2dh_trigger.c
* #10589 [Coverity CID :188734]Control flow issues in /drivers/sensor/lis2dh/lis2dh.c
* #10588 [Coverity CID :188735]Uninitialized variables in /subsys/bluetooth/shell/bt.c
* #10587 [Coverity CID :188738]Memory - illegal accesses in /subsys/bluetooth/host/conn.c
* #10586 [Coverity CID :188739]Program hangs in /tests/posix/common/src/posix_rwlock.c
* #10585 [Coverity CID :188740]Error handling issues in /drivers/sensor/isl29035/isl29035_trigger.c
* #10584 [Coverity CID :188741]Control flow issues in /subsys/shell/shell_utils.c
* #10583 [Coverity CID :188742]Incorrect expression in /subsys/net/ip/connection.c
* #10582 [Coverity CID :188743]Program hangs in /tests/posix/common/src/posix_rwlock.c
* #10581 [Coverity CID :188744]Memory - corruptions in /drivers/sensor/lis2dh/lis2dh_trigger.c
* #10580 [Coverity CID :188745]Error handling issues in /drivers/wifi/winc1500/wifi_winc1500.c
* #10579 [Coverity CID :188747]Security best practices violations in /subsys/shell/shell.c
* #10578 [Coverity CID :188748]Memory - corruptions in /subsys/bluetooth/host/gatt.c
* #10577 [Coverity CID :188749]Null pointer dereferences in /subsys/bluetooth/controller/ll_sw/ctrl.c
* #10576 [Coverity CID :188750]Memory - illegal accesses in /subsys/bluetooth/shell/bt.c
* #10575 [Coverity CID :188752]Security best practices violations in /subsys/shell/shell.c
* #10574 [Coverity CID :188753]Incorrect expression in /subsys/net/ip/connection.c
* #10573 [Coverity CID :188754]Control flow issues in /samples/basic/userspace/shared_mem/src/enc.c
* #10572 [Coverity CID :188755]Control flow issues in /subsys/shell/shell_utils.c
* #10571 [Coverity CID :188756]Memory - corruptions in /drivers/sensor/lis2dh/lis2dh_trigger.c
* #10570 [Coverity CID :188757]Memory - illegal accesses in /subsys/bluetooth/shell/bt.c
* #10569 [Coverity CID :188758]Incorrect expression in /drivers/wifi/winc1500/wifi_winc1500.c
* #10568 [Coverity CID :188759]Integer handling issues in /subsys/net/l2/ethernet/gptp/gptp_mi.c
* #10567 [Coverity CID :188760]Error handling issues in /drivers/wifi/winc1500/wifi_winc1500.c
* #10537 nRF52 regression: random resets noted across several boards / use cases
* #10535 Failure on tests/posix/common/ due to uninitialized memory access
* #10531 Default idle thread stack sizes too small when OS controlled power management is used
* #10524 PM_CONTROL_OS doesn't work in combination with certain I2C drivers in a single thread context
* #10518 drivers/modem/modem_receiver.c needs LOG_MODULE_REGISTER(mdm_receiver)
* #10517 Compatibility problem with increased BLE Tx buffers
* #10515 tests/benchmarks/timing_info faults on ARM platforms
* #10509 tests/kernel/interrupt is failing on NRFx boards
* #10508 tests/posix/common fails randomly on all platforms
* #10493 native_posix: Warnings during link on orphan sections after #10368
* #10476 kernel/threads/thread_apis tests crashes on ARM boards
* #10475 tests/kernel/threads/dynamic_thread test cases are failing on ARM boards
* #10474 tests/kernel/pipe/pipe test cases are failing on ARM boards
* #10473 tests/kernel/mem_protect/mem_protect tests are failing on ARM boards
* #10460 Bluetooth: settings: No space to store CCC config after successful pairing
* #10453 dma_stm32 driver has been broken by commit 07ff2d5
* #10444 tests/subsys/logging/log_core fails on few ARM platforms
* #10439 Logger calls will execute functions even though the LOG_LEVEL is masked
* #10428 logging: Weird output from log_strdup()
* #10420 gcc: ""Exec format error"" - WSL in Windows 10 1803
* #10415  logging: Unaligned memory access in log_free
* #10413 Shell: trying to browse history freezes shell on disco_l475_iot1
* #10402 Crash with new logger and with new shell
* #10389 Conversion of net core to new logger breaks WiFi driver builds
* #10382 samples/sensor/apds9960/ results into build failure on multiple platforms.
* #10369 Logger crashes shell when boot banner is enabled
* #10348 valgrind detected issue in logger, during msg free
* #10345 The OpenAMP remote build is for wrong board
* #10344 SPI Chip Select usage is not unambiguous
* #10329 SystemView overflow event
* #10320 arm: mpu: mpu_config and and mpu_regions to be declared/defined as const
* #10318 It is not documented what YAML bindings do
* #10316 net: sockets: Close doesn't unblock recv
* #10313 net: sockets: Packets are leaked on TCP abort connection
* #10312 Bluetooth: settings: CCC not stored on device reset
* #10271 Unexpected Kconfig warnings during documentation build
* #10243 native_posix linking issues under Ubuntu 18.04 after upgrade
* #10241 scripts/requirements.txt needs updating for west
* #10234 There is one too many ""Shields"" entry in the root Kconfig menu
* #10231 zephyr supported targets fail to flash with ""ImportError: No module named 'colorama'""
* #10207 Shell should accept either CR or LF as line delimiter
* #10204 net: ipv6: corrupted UDP header after forwarding over 6lo iface
* #10195 Shell dereferences invalid pointer when printing demo command help
* #10192 SHELL asserts when pressing tab
* #10191 The new shell uses CONSOLE kconfig options, even though it does not use CONSOLE.
* #10190 The new shell can only be compiled on boards with SERIAL but it does not set the dependency in its Kconfig
* #10186 GPIO callback disable has no effect due to _gpio_fire_callbacks
* #10164 logger sample fails on qemu_xtensa due to lack of backend
* #10152 gitlint complains of apostrophe in user name
* #10146 [bluetooth][PTS] Getting Connection failed to be established ocasionally
* #10143 Why does BT_SETTINGS require PRINTK?
* #10137 sample/basic/button should configure expected pin configuration
* #10134 sensor: vl53l0x: Warning message when building in ext/hal/st/lib/sensor/vl53l0x
* #10130 sanitycheck errors with ""not well-formed text"" warning
* #10127 Cannot use new shell with native_posix
* #10102 /tests/subsys/logging/log_core compilation fails on nios2 platform
* #10096 [Coverity CID :188167] Concurrent data access violations in /lib/posix/pthread.c
* #10095 [Coverity CID :188168] Concurrent data access violations in /lib/posix/pthread.c
* #10094 [Coverity CID :188169] Null pointer dereferences in /subsys/net/ip/rpl.c
* #10093 [Coverity CID :188170] Concurrent data access violations in /lib/posix/pthread.c
* #10092 [Coverity CID :188171] Null pointer dereferences in /lib/cmsis_rtos_v1/cmsis_thread.c
* #10091 [Coverity CID :188172] Null pointer dereferences in /subsys/net/ip/route.c
* #10090 [Coverity CID :188173] Null pointer dereferences in /subsys/net/ip/route.c
* #10089 [Coverity CID :188174] Control flow issues in /tests/crypto/mbedtls/src/mbedtls.c
* #10058 The test mem_pool_threadsafe sporadically hangs forever
* #10055 nRF52: MPU Fault issue
* #10054 Logger thread spins forever if there is no backend
* #10043 RISCv32 qemu configuration does not work with upstream qemu
* #10038 Inversed logic in fade_led sample for nRF boards
* #10037 fade_led sample doesn't work with pwm_nrfx driver
* #10035 nrfx PWM driver breaking API contract
* #10034 Possible regression of #8815 (""Nordic: Directly accessing GPIOTE might create unstable firmware""...)
* #10028 MCUBoot using W25Q SPI Flash not working (use of Zephyr semaphore)
* #10026 undefined reference to '__log_current_const_data_get' when using LOG_MODULE_DECLARE
* #10013 MISRA C - Review the use of memcpy, memcmp and memmove
* #10012 MISRA-C Do not use feature from stdarg.h
* #10003 Bluetooth: Identity creation is incomplete through vendor HCI
* #9993 Few error codes in POSIX API implementation is not supported
* #9992 cmake compiler cache failures in CI
* #9975 tests/lib/mem_alloc fails to build on Arduino Due after SoC move
* #9972 Porting to a new architecture needs to be documented
* #9971 doc: DT: use-prop-name is not documented
* #9970 Native posix port drivers need to be documented
* #9960 Stack check test fails - qemu_x86:tests/kernel/fatal/kernel.common.stack_protection
* #9956 Build failed when CONFIG_STM32_ARM_MPU_ENABLE=y
* #9954 samples/hello_world build failed on Windows/MSYS
* #9953 wrong behavior in pthread_barrier_wait()
* #9949 Make West launcher scripts in mainline zephyr compatible with multi- and mono-repo
* #9936 docs: Ring Buffers docs are hidden away under unexpected title
* #9935 sockets: Connect always binds the context to the default interface
* #9932 Invalid documentation link in README.rst
* #9926 samples/net/sockets/echo_client/server: No docs for testing TLS mode
* #9924 Segger Systemview + newlib does not compile
* #9922 Networking: Neighbour Discovery may be breaking an ongoing UDP Transmission
* #9912 Group posix tests
* #9901 Default nrfx PWM interrupt prio results in assert
* #9892 MISRA C Avoid dynamic memory allocation
* #9879 Portability: Arithmetic on void pointers
* #9867 Bluetooth LESC debug keys support (BT_USE_DEBUG_KEYS) is broken
* #9861 samples/subsys/usb/hid/  test hangs on quark_se_c1000_devboard
* #9849 samples/drivers/i2c fails with error writing to FRAM sensor
* #9843 tests/kernel/sched/deadline fails on NRF5x boards
* #9830 ASSERTION FAILURE : /tests/drivers/adc/adc_api fails on arduino_101 and quark_se_c1000 platforms
* #9816 DHT driver fetch fail
* #9812 drivers: eth: gmac: Fix incorrect cache coherency handling code
* #9777 tests/kernel/mem_pool/mem_pool_api:mpool_alloc_timeout crashes on qemu_riscv32 with boot delay
* #9767 [Coverity CID :187903] Uninitialized variables in /subsys/fs/nvs/nvs.c
* #9765 [Coverity CID :187905] Incorrect expression in /arch/arc/core/thread.c
* #9763 samples/net/http_client: Failed to send Head requrest
* #9749 NRF52 : NFFS file system : use of write function returns 0 but fails
* #9743 tests/posix/fs crashes with BUS FAULT on nRF52
* #9741 tests/kernel/spinlock:kernel.multiprocessing.spinlock_bounce crashing on ESP32
* #9720 samples\bluetooth\mesh_demo crash with real payload
* #9708 tests/kernel/tickless/tickless_concept fails on nRF5x with 1000msec boot delay
* #9704 tests/lib/mem_alloc/testcase.yaml#libraries.libc.newlib @ minnowboard:x86 results into exception
* #9703 tests/kernel/threads/no-multithreading: kernel.threads.no-multithreading failing on nrf52_pca10040 and qemu_x86 with boot delay
* #9695 Deprecated configurations around 'SPI_CS_GPIO'
* #9689 Multiple tests are failing on sam_e70_xplained once the cache is enabled
* #9666 tests/benchmarks/timing_info/testcase.yaml#benchmark.timing.default_kernel crashes on Arduino 101 / ARC
* #9656  tests/kernel/fp_sharing failing on sam_e70_xplained
* #9653 tests/lib/mem_alloc/testcase.yaml#libraries.libc.newlib @ esp32:xtensa BUILD failed
* #9651 Shell_module@mimxrt1050_evk runs failure on R1.13_RC1
* #9650 latency_measure@mimxrt1050_evk meets hard fault for R1.13 RC1
* #9590 Template with C linkage in util.h:41
* #9587 System stack usage analysis code seems to be broken
* #9582 Cannot find g++ when CONFIG_CPLUSPLUS is set to y
* #9560 Failed test: mem_protect/usespace failed in nsim_sem and em_starterkit_em7d_v22
* #9510 zephyr/doc/security/security-overview.rst needs update
* #9509 Unable to upload firmware over serial with mcumgr
* #9498 Invalid argument saved on IRQ_CONNECT
* #9463 bt_le_scan_start Fails with Error -5 after 128 scan start/stop cycles
* #9432 Overriding 'LOG_LEVEL' could crash the firmware
* #9411 checkpatch.pl generates warning messages during execution for tests/kernel/static_idt/src/main.c
* #9340 Failed test: kernel.common.errno.thread_context on em_starterkit_em7d_v22 and minnowboard
* #9290 [Coverity CID :187325] Control flow issues in /samples/boards/nrf52/mesh/onoff_level_lighting_vnd_app/src/mesh/device_composition.c
* #9289 [Coverity CID :187326] Control flow issues in /samples/boards/nrf52/mesh/onoff_level_lighting_vnd_app/src/mesh/device_composition.c
* #9174 STM32L4 I2C read polling hang on NACK in stm32_i2c_msg_read()
* #9076 doc: correct SMP server sample imgtool.py sign usage
* #9043 New logging subsystem's timestamps wrap a little before the 3-minute mark
* #9015 eth_sam_gmac driver (and BOARD=sam_e70_xplained using it) sets unduly high memory requirements on the IP stack overall
* #9003 [Coverity CID :187062] Incorrect expression in /samples/net/sockets/echo_server/src/udp.c
* #8999 [Coverity CID :187067] Memory - corruptions in /subsys/logging/log_output.c
* #8988 [Coverity CID :187079] Integer handling issues in /subsys/net/l2/ethernet/gptp/gptp.c
* #8979 Failed test:  tests/subsys/dfu/mcuboot/dfu.bank_erase failing on nrf52840_pca10056
* #8915 STM32 I2C hang
* #8914 Failed test: net.app.no-ipv6 (/tests/net/app/) on sam_e70_xplained
* #8869 uart: Problems with interrupt-driven UART in QEMU and some hw boards
* #8838 hello_world not working on frdm_k64f/qemu_cortex_m3 with newlib and arm gcc embedded 2018q2
* #8810 Cannot flash board stm32f4_disco
* #8804 esp32 cannot get character from UART port
* #8796 Bluetooth: controller: assert on conn update in slave role under max. throughput usecases
* #8789 tests/ztest/test/mock fails to complete on max10/nios2
* #8746 net_app DTLS Client net/pkt ERR log when doing handshake
* #8684 driver: i2c_mcux: unable to perform more than one write transfer like i2c_burst_write
* #8683 issue with nrf52840_pca10040 and peripheral sample
* #8631 memory leak in mbedtls using net_app DTLS client
* #8614 cmake: Zephyr wrapped functions does not allow keywords on zephyr_link_libraries
* #8470 Broken Arduino 101 Bluetooth Core flashing
* #8409 Pin interrupt not handled when two pin ints fires in quick succession
* #8376 DTS: 'boolean' type value was defined as True, not 1
* #8374 arm: core: cortex_m: wrongly assumes double precision FPU on Cortex-M7
* #8348 sanitycheck: localized make error message leads to false ""passed"" result
* #8339 crypto: drivers use cipher_aead_pkt.tag differently
* #8208 tests/crypto/ecc_dsa hangs in montecarlo_signverify test on nrf51_pca10028:arm
* #8197 kernel.memory_protection.stack_random: Stack pointer randomization fails on em_starterkit_em7d_v22
* #8190 scheduler: thread priorities need to be cleaned up
* #8187 QEMU serial output is not reliable, may affect SLIP and thus network testing
* #8160 BUILD_ASSERT doesn't work outside gcc
* #8159 tests/kernel/fifo/fifo_timeout fails on nrf51_pca10028 and nrf52_pca10040
* #8131 net_if_tx sends a 0 Reference counter(pkt->ref == 0) packet
* #8116 tests/kernel/profiling/profiling_api fails to complete on minnowboard
* #8115 tests/kernel/xip crasshes on minnowboard
* #8108 make 'rom_report' misreports _sw_isr_table
* #8104 open-amp: enable C library cause open-amp\open-amp\lib\common\sh_mem.c compile error
* #8097 tests/drivers/watchdog/wdt_basic_api fails on Quark SE / x86 and esp32
* #8057 samples/net/: Experiencing the delayed response from zephyr networking stack
* #7999 HCI UART with Linux host cannot connect to nrf52 6lowpan peripheral
* #7986 The scripts (debug, debugserver and flash) are not working for Intel S1000 board
* #7818 big_http_download stuck during download on qemu_x86
* #7817 Confusing macros: SECONDS vs K_SECONDS, MSEC vs K_MSEC
* #7760 cmake failure using ExternalProject and dependancies w/ninja
* #7706 ARM NXP hardware stack overflows do not report _NANO_ERR_STACK_CHK_FAIL or provide MPU fault information
* #7638 get FAULT when fuzzing sys_ring_buf\_ put and sys_ring_bug_get APIs
* #7510 [Coverity CID :185395] Memory - corruptions in /samples/net/mbedtls_sslclient/src/mini_client.c
* #7441 newlib support in zephyr is untested and very broken
* #7409 Networking examples crash on optimization levels different than -Os
* #7390 pinmux subsystem API is undocumented and does not enforce validation
* #7381 gpio_mcux driver needs to validate pin parameters
* #7291 intermittent issue with tests/kernel/fatal
* #7196 kernel: CONFIG_INIT_STACKS : minor documentation & dependency update
* #7193 tickless and timeslicing don't play well together
* #7179 _vprintk incorrectly prints 64-bit values
* #7048 Tickless Kernel Timekeeping Problem
* #7013 cleanup device tree warnings on STM32
* #6874 Not able to join OpenThread BorderRouter or a ot-ftd-cli network
* #6866 build: requirements: No module named yaml and elftools
* #6696 [Coverity CID: 183036] Control flow issues in /drivers/gpio/gpio_sam.c
* #6695 [Coverity CID: 183037] Memory - corruptions in /samples/net/mbedtls_dtlsclient/src/dtls_client.c
* #6666 [Coverity CID: 183066] Error handling issues in /tests/kernel/mbox/mbox_api/src/test_mbox_api.c
* #6585 kernel: re-delete event list node [bug]
* #6452 Jumbled Console log over USB
* #6365 ""dummy-flash"" device tree bug
* #6319 Missing documentation for zephyr API to query kernel version: sys_kernel_version_get
* #6276 assert when running sys_kernel on disco_l475_iot1 (with asserts enabled)
* #6226 IRC-bot sample eventually stops responding to IRC commands
* #6180 CONFIG_IS_BOOTLOADER is poorly named and documented
* #6147 ""ninja flash"" cannot be used with DFU-capable applications
* #5781 Initial TLS connection failure causes TLS client handler to stop and fail endlessly w/ EBUSY
* #5735 mpu_stack_guard_test fails on many arm platforms, including qemu
* #5734 samples/drivers/crypto fails on qemu_nios2
* #5702 usb subsystem doc not pulling from header doxygen comments
* #5678 USB: DW driver does not work properly with mass storage class
* #5634 The dependency between the Kconfig source files and the Kconfig output is missing
* #5605 Compiler flags added late in the build are not exported to external build systems
* #5603 Bluetooth logging is hardcoded with level 4 (debug)
* #5485 tests: kernel/xip: CONFIG_BOOT_DELAY issue for qemu_riscv32
* #5426 [kconfig] Allow user-input when new options are detected
* #5411 Secondary repos are missing licenses
* #5387 Many of the samples using mbedtls_ssl_conf_psk() dont check for error
* #5376 No way to get clock control subsystem type
* #5343 cmake: libapp.a in unexpected location
* #5289 IPv6 over BLE: IPSP sample crashes and ble controller gets disconnected
* #5244 UART continuous interrupt
* #5226 Compiling with -O0 causes the kobject text area to exceed the limit (linker error)
* #5006 syscalls: properly fix how unit testing deals with __syscall
* #4977 USB: documentation needs to be updated
* #4927 Hard Fault when no device driver is setup for ENTROPY results
* #4888 LwM2M: Fix BT device pending / retry errors
* #4836  connection disconnected due to Le timeout(0x22)
* #4682 http_server example fails for ESP32
* #4324 samples/net/http_client: error in detecting and processing the message received
* #4082 remove _current NULL check in ARM's _is_thread_user()
* #4042 net: NET_CONN_CACHE relevant
* #4002 Can not compile C++ project without setting -fpermissive
* #3999 qemu_xtensa crash while running sample/net/sockets/echo with ipv6 enabled
* #3997 *** ERROR *** pkt 0x2000c524 is freed already by prepare_segment():388 (mqtt_tx_publish():242)
* #3906 Static code scan (coverity CID: 151975, 173645, 173658 ) issues seen
* #3847 Fix LwM2M object firmware pull block transfer mode to select size via interface type (BT, ethernet, etc)
* #3796 Multiple issues with http_server library design and implementation
* #3670 ARC: timeslice not reset on interrupt-induced swap
* #3669 xtensa: timeslice not reset for interrupt-induced swaps
* #3606 _NanoFatalErrorHandler and other internal kernel APIs are inconsistently defined
* #3524 Bluetooth data types missing API documentation
* #3522 New Zephyr-defined types missing API documentation
* #3464 xtensa hifi_mini SOC does not build
* #3375 Debugging difficulties on Cortex-M with frame pointer missing
* #3288 Fatal fault in SPI ISR when using multiple interfaces
* #3244 Ataes132a fails to encrypt/decrypt with mode ECB and CCM mode
* #3226 ATT channel gets disconnected on ATT timeout but GATT API doesn't check for it
* #3198 ARC: Boot_time test not functioning
* #3132 frdm_k64f: Sometimes, there may be 1000+ms roundtrip for pings and other Ethernet packets (instead of sub-ms)
* #3129 frdm_k64f: Ethernet may become stuck in semi-persistent weird state, not transferring data, potentially affecting host Ethernet
* #2984 frdm_k64f bus exception bug due to peculiar RAM configuration
* #2907 make menuconfig .config easily overwritten
* #2627 LE L2CAP CoC transfers less octets that claims to be
* #2108 Stack alignment on ARM doesn't always follow Procedure Call Standard
* #1677 sys_*_bit and sys_bitfield_*_bit APIs are not implemented on ARM
* #1550 problem with pci_bus_scan resulting in an endless loop
* #1533 It is not documented how to discover, install, and use external toolchains
* #1495 esp32: newlibc errors
* #1429 LWM2M configs not defined
* #1381 HMC5883L driver config error
* #729 TCP SYN backlog change likely has concurrent global var access issues
",59771425
1526,False,True,2019-03-28T23:04:02Z,2019-03-28T23:08:33Z,"```
Aaron Tsui (4):
      samples: basic: disco_led without gpio driver
      boards: nucleo_f746zg: Remove repetitive yaml line
      samples: sensor: fix hardware fault when no sensor connected
      tests: watchdog: Debug for boards enabled TEST_WDT_CALLBACK_2

Alberto Escolar Piedras (4):
      doc: Bluetooth: Expand BabbleSim section
      doc: application: Correct note about external modules
      doc: Bluetooth: Correct how to run native_posix
      arch: POSIX: Add Kconfig option to stop on all faults

Anas Nashif (6):
      doc: remove note about calling recheck in CI
      modules: remove tinycbor from ext/ and use west module feature
      doc: move usermode under references
      kernel: do not use k_busy_wait when on single thread
      tests: no-multithreading: do not report success twice
      CODEOWNERS: add owner for /dts/bindings/

Andrei Emeltchenko (14):
      usb: netusb: Cleanup USB Ethernet networking
      usb: netusb: rndis: Add check for large packets
      usb: netusb: ecm: Use NET_ETH_MAX_FRAME_SIZE as frame size
      usb: netusb: ecm: Add check for large packets
      usb: netusb: eem: Use NET_ETH_MAX_FRAME_SIZE as frame size
      usb: netusb: eem: Add check for large packets
      usb: netusb: rndis: Fix maximum RNDIS frame size
      usb: netusb: rndis: Remove old unused code
      usb: netusb: ecm: Print packet hexdump only for VERBOSE_DEBUG
      usb: cdc_acm: Make parameters boolean
      usb: cdc_acm: Use ringbuf for RX path
      samples: usb: cdc_acm_composite: Fix missing irq handling
      usb: cdc_acm: Make ring buffer size configurable
      samples: usb: console: Select console device name

Andrei Gansari (1):
      arch: arm: fix thread's FPU initialization

Andrew Boie (12):
      kernel: fix atomic ops in user mode on some arches
      samples: bmg169: don't enable CONFIG_LOG
      userspace: renamespace some internal macros
      userspace: properly namespace handler functions
      arc: fix build error when MPU guards are enabled
      arm: remove duplicate stack macro docs
      kernel: add K_THREAD_STACK_RESERVED
      kernel: fix stack size check in k_thread_create
      kernel: amend comment in k_thread_create handler
      arc: fix off-by-one in mpu_buffer_validate()
      ARM: fix wrong stack bounds stored in thread
      elf_helper: fix debug_die call

Andrzej Głąbek (4):
      CODEOWNERS: Set @nordic-krch as the codeowner of the counter driver
      boards: nrf9160_pca10090: Fix LEDs active state
      boards: Enable GPIO by default on boards with nRF SoCs
      boards: nrf52840_pca10090: Force GPIO to be always enabled

Andrzej Puzdrowski (3):
      zephyr: fix mcuboot can't link into boot-partition
      storage/flash_map: API for get driver belongs to the flash_area.
      settings: remove dead code

Andy Ross (7):
      tests/kernel/fifo/fifo_usage: Disable SMP
      kernel/sched: Flag DEAD on correct thread in cross-CPU abort
      tests: More SMP disablement
      kernel/sched: Rework prio validity assertion
      kernel/sched: Mark sleeping threads suspended
      tests/kernel/smp: Give time for a wakeup to take effect
      tests: samples: Re-enable SMP on a few tests

Armando Visconti (2):
      dma: stm32f4: Add support for dma_reload API specific implementation
      drivers/i2s_ll_stm32.c: (FIX) use dma_reload() to re-start the DMA

Arun Joshi (1):
      host-tools.cmake: Corrected sdk download url

Aurelien Jarno (1):
      drivers: hwinfo: add driver support for Atmel SAM device ID

Benjamin Valentin (2):
      drivers: spi: sam/sam0: Don't claim support for async transfers
      drivers: spi: sam/sam0: Don't access uninitialized data

Carles Cufi (4):
      boards: nrf: Add bt-mon-uart to all nRF-based boards
      doc: Bluetooth: Document the debug monitor and btmon in general
      Bluetooth: shell: Add missing include path
      logging: Clarify contract of log_output_func_t

Charles E. Youse (4):
      boards/x86: add ACRN UOS sample board configuration
      kernel/msg_q: reorder _K_MSGQ_INITIALIZER() initializers
      net/ip: fix input packet filtering criteria
      drivers/pci: stop using LOG_DBG()

Cinly Ooi (1):
      samples: watchdog: Confirm that reset occured

Daniel Leung (6):
      tests: kernel/smp: fixed missing 'z_' renaming
      tests: kernel/smp: whitelist qemu_x86_64 for testing
      adc: quark_d2000: fix sampling conversion
      adc: overhaul adc_dw and rename it to adc_intel_quark_se_c1000_ss
      codecov: avoid inlining functions for correct execution counts
      kernel/mutex: remove object monitoring empty loop macros

David B. Kinder (2):
      doc: fix ACRN board list format
      doc: fix misspelling in docs and API comments

David Brown (1):
      kernel: Clarify warning about no multithreading

Emanuele Di Santo (1):
      boards: arm: nrf52840_pca10059: correctly set FLASH_LOAD_OFFSET

Erwan Gouriou (6):
      boards: stm32f4_disco: Update openocd config
      dts: stm32: Fix erroneous RAM sizes when CCM is available
      boards: stm32: Enable CCM and update yaml
      Bluetooth: Mesh: Increase advertising thread stack size
      driver/counter: rtc_stm32: Incorrect time_t offset
      samples/drivers/counter: alarm: fix printk usage

Filip Kubicz (2):
      settings: logging: Add log_strdup to error messages
      USB: Fix warning in DFU class

Flavio Ceolin (24):
      samples: ipc: openamp: Avoid dead code
      samples: 96_argonkey: sensors: Check function return
      lib: posix: fs: Fix access invalid memory
      tests: mbox: Check k_mbox_get return
      drivers: counter: stm32: Fix possible overflow
      arch: Use macro BIT for shift operations
      kernel: Use macro BIT for shift operations
      include: Use macro BIT for shift operations
      arch: x86: Use proper essential types in operands
      kernel: Make _is_thread_prevented_from_running return a bool
      include: Make statements evaluate boolean expressions
      kernel: Make statements evaluate boolean expressions
      arch: arm: Use proper essential types in operands
      include: Add U for unsigned constants
      arch: Use macro BIT for shift operations
      lib: rb: Make operands have an appropriate essential type
      spinlock: Change function signature to return bool
      include: Make statements evaluate boolean expressions
      lib: crc16_sw: Add missing U to unsigned constants
      arch: x86: Add missing U for unsigned constants
      kernel: Make if/iteration evaluate boolean operands
      lib: printk: Make if/iterations evaluate boolean operands
      include: Add missing U for unsigned constants
      include: i2c: Add U to unsigned constants

Florian Vaussard (1):
      flash: stm32l4: disable dcache before writting

Ioannis Glaropoulos (10):
      arch: arm: introduce barriers when disabling interrupts
      arch: arm: add explanatory comment in __swap()
      CODEOWNERS: add code-owner for cortex-m/cmse module
      arch: arm: mpu: improve documentation of ARMv8-M _mpu_buffer_validate
      arch: arm: mpu: fix _mpu_buffer_validate() implementation
      arch: arm: mpu: fix a loop index start value
      arch: arm: mpu: fix variable type
      arch: arm: no special case for MPUs with power-of-2-align requirement
      doc: kernel: float: several content fixes
      doc: kernel: float: fix ARM-specific content

Jakub Rzeszutko (5):
      shell: unify bt commands return value
      shell: removed dead code in bt command
      shell: fix command bt scan
      shell: fix coverity issue in uart backend
      dts: update mermory regions for nrf chips

Joakim Andersson (5):
      Bluetooth: controller: Fix bug in LL encryption.
      Bluetooth: controller: Fix transaction collision
      Bluetooth: controller: Fix PHY bits sets with PHY disabled
      Bluetooth: controller: Fix scanner memory corruption
      Bluetooth: controller: Fix unknown rsp received during enc procedure

Johan Hedberg (22):
      samples: bluetooth/mesh_demo: Fix using internal API
      doc: networking: buf: Add mentions of net_buf_add_mem & net_buf_pull_mem
      samples: bluetooth/mesh: Fix configuration
      Bluetooth: controller: Convert benign BT_WARN() messages to BT_DBG()
      Bluetooth: Fix missing return statement in le_conn_param_req()
      Bluetooth: Mesh: Clean up logging related to settings storage
      Bluetooth: Mesh: Fix clearing model subscription list
      Bluetooth: Mesh: Fix clearing model binding and subscriptions
      settings: Enforce value & length consistency in settings_save_one()
      settings: Fix check for duplicate when new value is smaller
      Bluetooth: Fix init procedure handling with BT_SETTINGS
      Bluetooth: Fix missing checks for the BT_DEV_READY flag
      Bluetooth: Use bt_addr_le_copy() instead of direct assignment
      Bluetooth: GATT: Fix attribute read return parameter type
      Bluetooth: Remove unused ID_SIZE_MAX macro
      Bluetooth: Clean up settings related code
      Bluetooth: Mesh: Take advantage of settings_delete() when possible
      samples: reel_board/mesh_badge: Fix IV Index type
      Bluetooth: Mesh: Fix gen_prov struct definition
      Bluetooth: Mesh: Fix re-initializing provisioning state upon reset
      Bluetooth: Mesh: Fix disconnecting existing provisioning bearers
      Bluetooth: Mesh: Remove redundant LOCAL_PUB_KEY flag

Jukka Rissanen (18):
      samples: net: promisc: Add sample.yaml file for build time checks
      samples: net: promisc: Fix compile error
      net: if: Init cursor for promiscuous mode after L2
      log: net: Fix the immediate logging mode in network backend
      net: context: Check if we run out of mem
      samples: net: dhcpv4: Add net-shell and e1000 driver support
      net: gptp: Fix bit shifting in time interval
      net: gptp: Rename z_gptp_pow2() to gptp_pow2()
      net: connection: Allow same port number for dest and source
      samples: net: zperf: Fix UDP uploader
      samples: net: zperf: Fix TCP uploader
      samples: net: zperf: Update the README file
      net: tcp: Fix ref counting for the net_pkt
      tests: socket: tcp: Increase the buf count
      doc: net: Minor fixes to BSD socket documentation
      doc: net: Fix networking overview document
      doc: net: Fix LLDP documentation
      net: ethernet: lldp: Use short types for ints

Jun Li (1):
      board: nucleo_f429zi: fix wrong comment

Krzysztof Chruscinski (10):
      logging: replace assert calls with __ASSERT_NO_MSG
      logging: rtt: Fix backend behavior when LOG_IMMEDIATE enabled
      logging: Force LOG_PRINTK option if RTT backend is used
      logging: Fix LOG_LEVEL_SET() not compiling when log disabled
      shell: Fix compile error when shell enabled and log disabled
      logging: defines clean up
      boards: Remove enabling RTT by default on pca10040 and pca10056
      sample: subsys: shell: Ensure that shell RTT backend is tested
      sample: subsys: logging: Ensure that logger RTT backend is tested
      CODEOWNERS: Add @nordic-krch and @jarz-nordic to shell, logging samples

Kumar Gala (4):
      net/pkt: Fix a few left over cases of net_pkt_read_new
      cmake: Bump min SDK version to 0.10.0
      ci: Bump to image 0.6.4 for west
      release: Zephyr 1.14-rc3

Loic Poulain (2):
      api: counter: Fix build issue with C++
      ext: hal: nxp: mcux: csi: Fix double buffering capture

Luiz Augusto von Dentz (1):
      Bluetooth: samples: IPSP: Fix not checking return of net_pkt_read

Maksim Masalski (1):
      can: fix unchecked return from clock_control_get_rate

Marc Herbert (5):
      sanitycheck: fix, expand and clarify test case selection --help
      host-gcc/target.cmake: stop discarding CMAKE_<tool>_FLAGS for x86
      sanitycheck: don't generate the top-level Makefile in random order
      sanitycheck: document that --save-tests appends to existing file
      extensions.cmake: need unique strings, not random ones

Marcio Montenegro (1):
      samples: net: sockets: echo_client : Fix tcp_stop() error

Mariusz Skamra (2):
      Bluetooth: mesh: Fix net_id net_buf_pull in secure_beacon_recv
      Bluetooth: tester: Fix possible NULL pointer dereference

Marti Bolivar (1):
      west: require version 0.5.6

Matias Karhumaa (1):
      usb: Fix ACL data tx stalling

Maureen Helm (1):
      soc: nxp_imx: Configure NUM_IRQS independently for each rt soc

Michael Scott (3):
      drivers: modem: wnc14a2a: correct IPv6 SRC and DST
      drivers: modem: wnc14a2a: dont stop RSSI processing on error
      net/context: Relocate offload handling in net_context_connect()

Mieszko Mierunski (7):
      drivers: nrf: Rework UARTE shim for uart ASYNC API.
      dts: nrf: Add DPPIC to device tree.
      boards: nrf: Enable TIMER1 by default in nrf9160_pca10090
      drivers: nrf: Enable usage of Async UART API for UARTE on nrf91
      tests: uart: Add chained write test case for UART async API
      tests: uart: Add nrf9160_pca10090 to UART async test
      drivers: nrf: Add power management to uarte shim

Patrik Flykt (4):
      scripts/coccinelle: Update Coccinelle script for unsigned values
      all: Add 'U' suffix when using unsigned variables
      scripts/coccinelle: Update unsigned suffix script
      all: Update unsigend 'U' suffix due to multiplication

Paul Sokolovsky (7):
      net: socket: Increment TCP context refcount on socket(), accept()
      net: context: put: Update for shared TCP context ownership
      net: sockets: recv_stream: Check that the underlying net_context active
      net: pkt: Clarify docstring of the new API
      net: ip: connection: Typo fixes in comment
      samples: sockets: Add e1000 and stellaris ethernet drivers overlays
      net: socket: Define flags for getaddrinfo()

Pawel Dunaj (2):
      lib: mempool: Return error if no block found
      lib: mempool: Synchronize level checks

Piotr Mienkowski (6):
      power: rename Low Power States to Sleep States
      power: clean up system power managment function names
      power: modify HAS_STATE_SLEEP_ Kconfig options
      power: rename residency policy Kconfig options
      doc: update power management subystem documentation
      console: deprecate console_register_line_input()

Piotr Zięcik (1):
      Revert ""soc: arm: nordic: provide custom busy_wait implementations""

Ravi kumar Veeramally (3):
      net: ipv6: Fix IPv6 neighbor table
      tests: net: ipv6: Add one more test case
      tests: net: Add more tests to ipv6 fragmentation

Robert Lubos (2):
      samples: net: Update overlay-bt.conf in various samples
      net: tls: Add credential type documentation

Sebastian Bøe (2):
      kconfig: Increase the size of KOBJECT_TEXT_AREA when NO_OPTIMIZATION
      kconfig: Move Kconfig.modules to the root build directory

Song Qiang (1):
      sensor: fxos8700: add forgot int2 defines to dts_fixup.h

Takumi Ando (1):
      driver: usb: nordic: Enable USB DC when VBUS is Hi

Tedd Ho-Jeong An (5):
      Samples: echo-client: Add overlay when echo-server is running on Linux
      Samples: net: can: initialize the variables
      tests: net: mld: Check return after updating packet
      net: sockets: Update setsockopt to handle IPV6_V6ONLY
      samples: net: nats: Check null before dereferrencing the variable

Thomas Ebert Hansen (9):
      doc: security: Unify name of security subcommittee
      doc: security: Fix section reference
      doc: security: Unify citations
      doc: security: Correct statement about Coverity
      doc: security: Reword unintelligible sentences
      doc: security: Update Security Group definition
      doc: security: Correct indentation
      doc: security: Update embargo period
      doc: security: Change link to development model.

Thomas Stenersen (1):
      drivers: nrf: add support for forcing driver implementation

Tomasz Bursztyka (31):
      net/ipv6: Set the right protocol when finalizing MLD packet
      net/context: Remove legacy API
      net/udp: Remove net_udp_insert legacy function
      net/pkt: Remove appdata/appdatalen attributes and related functions
      net/context: Remove _new suffix on net_context_send/sendto functions
      net/ipv4: Replace legacy net_ipv4_create by the new one
      net/ipv6: Replace legacy net_ipv6_create by the new one
      net/icmpv4: Remove unused net_icmpv4_set_checksum function
      net/pkt: Remove now useless net_pkt_get_data()
      net/pkt: Remove _new suffix to net_pkt_get_data_new function
      net/pkt: Remove _new suffix to net_pkt_read functions
      net/pkt: Remove legacy net_pkt_write functions
      net/pkt: Remove legacy net_pkt_insert functions
      net/pkt: Remove _new suffix to net_pkt_write functions
      net/pkt: Remove legacy net_frag_read/skip/get_pos functions
      net/pkt: Remove legacy net_pkt_append functions
      net/pkt: Remove legacy net_frag_linear_copy function
      net/pkt: Remove unused token attribute
      net/context: Remove token parameter from net_context_send/sendto
      net/pkt: Remove superfluous total_pkt_len attribute
      net/offload: Remove useless token parameter
      net/context: Re-enable offloaded send/sendto
      net: Switch usage of net_pkt_get_reserve to net_pkt_alloc
      net/pkt: Remove unused legacy net_pkt allocator
      net/pkt: Remove now useless attribute data_len
      net: Move the chksum offload verification to relevant places
      net/context: Fix net_context_send_cb documentation
      net/pkt: Improve net_pkt_skip documentation.
      net/pkt: Switch function internal notes to doxygen details
      doc/networking: Add documentation on struct net_pkt and its API
      net/ipv6: Take iface's MTU into account to decide fragmenting or not

Ulf Magnusson (28):
      x86: gen_mmu_x86: Fix error-reporting code for non-page-aligned region
      log: net: Fix CONFIG_LOG_IMMEDIATE typo in comment
      scripts: process_gperf: Fix broken module docstring
      scripts: Fix bad indentation in Python scripts
      doc: fix_tex: Remove redundant 'return'
      scripts: gen_priv_stacks: Remove unused static kernel object stuff
      doc: application.py: Remove unused _mkdir() 'compact' parameter
      scripts: gitlint: Fix broken module docstring
      scripts: Remove extra trailing newlines from Python scripts
      kconfig: Replace two leftover 'gsource' with 'source'
      kconfig: Remove blank line at end of Kconfig file
      soc: kconfig: Simplify SOC_*_LD deps. with an 'if'
      power: Fix reference to CONFIG_SYS_PM_LOG_LEVEL
      scripts: Remove accidental semicolons in Python scripts
      doc: conf.py: Fix spacing typos
      scripts: Remove unnecessary () around if/while conditions in Python
      scripts: gen_app_partition: Fix broken typo'd sys.exit()
      logging: kconfig: Remove legacy SYS_LOG symbols
      logging: doc: Remove SYS_LOG-related documentation
      logging: Remove SYS_LOG implementation
      ext: open-amp: Fix broken typo'd sys.exit()
      scripts/dts: Remove unused variables and imports
      scripts: Remove unused variables in all Python scripts
      scripts: Remove unused imports in all Python scripts
      scripts: elf_helper: Tidy up get_symbols() to eliminate pylint warning
      scripts: elf_helper: Remove undefined var ref. in ArrayType.__repr__()
      scripts/dts: Fix bug in dead /memreserve/ code
      scripts: Fix risky uses of non-raw regex strings in Python scripts

Vinayak Kariappa Chettimada (1):
      Bluetooth: Fix scan failed to start due to RPA timeout

Vincent Wan (7):
      doc: boards: cc3220sf_launchxl: Document limitations
      net: sockets: move fcntl back to socket_offload.c
      ext: simplelink: add workarounds when using POSIX headers
      drivers: wifi: simplelink: Implement fcntl to set/get non-blocking mode
      samples: sockets: echo_async: Make IPV6 optional
      samples: sockets: echo_async: Add support for cc3220sf_launchxl
      samples: net: mqtt_publisher: Add section on connecting with TLS

Wayne Ren (9):
      arch: arc: fixes the hanlding of CONFIG_EXECUTION_BENCHMARKING
      arch: arc: move the call of read_timer_start_xx to _isr_demux
      arch: arc: make the boot time more accurate
      cmake: add debugserver target for nsim
      board: nsim: optimize the timer accuracy of timer
      arch: arc: fix the unaligned declaration of saved_value
      board: emsk: fix the bug in dts
      board: emsk: fix the wrong info about DDR
      arch: arc: fix the handling of stack check exception

Yannis Damigos (2):
      i2c_ll_stm32: Remove length < 255 restriction
      i2c_ll_stm32_v2: Disable ReloadMode, if needed, when error occurs
```",59771425
1527,False,True,2019-03-15T17:27:35Z,2019-03-15T17:30:02Z,"```
Aaron Tsui (1):
      samples: threads: Fix ASSERTION FAIL without gpio driver

Adithya Baglody (3):
      doc: gcov: Added documentation for code coverage.
      arch: arm: arm_core_mpu: Fixed the build when coverage was enabled.
      tests: benchmarks: timing_info: Print all measurements.

Alberto Escolar Piedras (7):
      test: Kconfig: Correct HAS_COVERAGE_SUPPORT description
      tracing: Add missing isr_exit() for posix arch boards
      tracing: POSIX arch: Remove redundant trace call
      tracing: POSIX arch: Trace switch to main thread
      doc: Add more coverage documentation
      uart: native_posix: Check fcntl() return value
      uart: native_posix: Fix out of bounds access

Alexander Svensen (1):
      Bluetooth: controller: refactored llcp_req/ack test to helper function

Alexander Wachter (12):
      drivers: can: stm32_can rework
      tests: drivers: Add basic tests for CAN driver
      tests: drivers: Add aditional tests for stm32 CAN driver
      drivers: can: Update userspace handlers
      CODEOWNERS: CAN ownership
      CODEOWNERS: Add hwinfo ownership
      include: can: Fix positive and overlapping error numbers
      drivers: can: Make zcan_frame const for sending
      drivers: can: Fix userspace handler parameter types
      drivers: can: stm32_can: Fix shifting zero width or out of bounds
      drivers: hwinfo: change stm32 device id driver from HAL to LL
      tests: drivers: build_all: add CAN to the build tests

Anas Nashif (34):
      tests: adc: reduce footprint by tweaking logging
      sanitycheck: do no overide OVERLAY_CONFIG
      dfu: mcuboot: rename boot_swap_type> mcuboot_swap_type
      posix: rename priority in sched_param struct
      ci: Use latest docker image: 0.6.1
      CODEOWNERS: cleanup owners
      CODEOWNERS: fix path and remove outdated
      CODEOWNERS: prepend / to all entries
      CODEOWNERS: fix syntax for directories
      intel_s1000_crb: do not enable USB by default
      doc: Rework Development Process section
      tests: move testsuite and configs into subsys/
      boards: udoo_neo_full_m4: not a default testing platform
      tests: crypto: increase timeout
      tests: stacks: increase STACK_LEN to 4
      Revert ""tests: posix: add newlib cfg option""
      compiler: add xcc as a standalone compiler
      libc: do not enable newlib on x86_64
      toolchain: abstract setting -nostdinc
      CODEOWNERS: update owners and added xcc/s1000 related lines
      toolchain: Do not hardcode where the toolchain was installed
      doc: update xcc installation instructions
      arch: move common app_data_alignment.ld file
      doc: remove CONFIG_UART_QMSI_1_BAUDRATE from doc
      sanitycheck: handle serial exception
      samples: define harness for samples
      logging: add backend for xtensa simulator
      ci: add option to specify custom range
      sanitycheck: fixed handling of retries
      mbedtls: enable self-test in config-tls-generic.h
      tests: mbedtls: report results once only
      libc: minimal: add prototype of rand()
      Revert ""net: sockets: recv_stream: Check that the underlying net_context active""
      arch: remove unused arch defconfig

Andrei Emeltchenko (14):
      tests: usb: Use UTIL_LISTIFY macros
      usb: dfu: Fix missing break in case statement
      dts: usbserial: Fix USB serial console device name
      net: lldp: Move LLDP structure definition to lldp
      net: lldp: Add optional TLV API
      samples: net: lldp: Set optional TLV system_name
      net: lldp: Move optional End TLV to send function
      usb: dc: native_posix: Fix Coverity bug
      usb: netusb: eem: Use sys_get_le16() helper
      usb: netusb: ecm: Remove forward declaration
      usb: netusb: rndis: Cleanup code
      usb: rndis: Use usb_transfer() for data transfer
      usb: netusb: Remove unused helpers and cleanup
      net: ethernet: Define and use Ethernet frame and datagram size

Andrew Boie (56):
      x86: clear EFLAGS on double fault
      x86: add Kconfig for KPTI
      x86: set up shared kernel page
      x86: modify MMU APIs for multiple page tables
      x86: generate user mode page tables
      x86: implement interrupt stack trampoline
      build: remove meltdown warning
      x86: fix crash in _arch_buffer_validate
      x86: improve stack overflow detection
      tests: fatal: refactor and add user mode tests
      x86: get oops reason code more robustly
      x86: fix exception stack pointer reporting
      x86: fix ROM permissions
      userspace: increase gperf text areas
      gen_mmu_x86: fix overlapping region detection
      app_shmem: include stub macro definitions
      app_shmem: create generic libc partition
      kernel: add stack canary to libc partition
      tests: stackprot: run in user mode
      uart: ns16550: place header in correct spot
      userspace: remove APP_SHARED_MEM Kconfig
      x86: relocate some arch-specific scripts
      x86: gen_gdt.py: expand doctsring
      x86: gen_mmu_x86.py: simplify usage
      x86: gen_mmu_x86: add docstring and copyright
      x86: gen_idt.py: add docstring
      kernel: syscall_handler: get rid of stdarg
      libc: fix CONFIG_STDOUT_CONSOLE semantics
      x86: fix page directory out of bounds
      kernel: move CONFIG_RETPOLINE definition
      x86: don't default to 'y' for spectre configs
      x86: fix SSBD feature bit
      x86: enable Extended IBRS
      x86: mitigate L1 Terminal Fault vulnerability
      x86: fix pte corruption when setting large regions
      userspace: fix x86 issue with adding partitions
      tests: userspace: add some more scenarios
      tests: userspace: remove unused partition
      userspace: clarify memory domain assertions
      userspace: get rid of app section placeholders
      userspace: zero app memory bss earlier
      mbedtls: provide user mode access
      userspace: properly namespace linker vars
      tests: jwt: lower heap size
      drivers: can: fix multiple issues
      x86: organize vulnerability ontology
      kernel: add config for Spectre V1 mitigation
      kernel: add k_array_index_sanitize()
      x86: fix Spectre V1 index checks
      lib: fdtable: safely bounds check file descriptors
      gpio_intel_apl: bounds sanitize pins
      x86: implement eager FP save/restore
      userspace: add additional script documentation
      qemu_x86_iamcu: disable spec execution mitigations
      userspace: don't modify optimization options
      shell: fix build failure

Andrzej Głąbek (15):
      settings: Fix default value of flash area ID in Kconfig
      boards: nrf: Enable HW PWMs on nrf52832_mdk and nrf52840_mdk
      ext: hal: nordic: Update nrfx to version 1.6.2
      soc: nrf52810: Allow the use of SPI0, TWI0, and UART0
      boards: nrf52810_pca10040: Override delay loop cycles
      drivers: spi: nrfx: Add support for SPIS3
      ext: nordic: Add NRF_SPIS[0-3] definitions to nrfx_config_nrf9160.h
      ext: nordic: Add missing NRFX_UARTE[2,3] Kconfig options
      drivers: nrfx: Add Kconfig checks for mutually exclusive peripherals
      drivers: spi: nrfx: Improve a few Kconfig option prompts
      boards: 96b_nitrogen: Enable by default SPI_1 instead of SPI_0
      boards: nrf: Correct I2C and SPI instances enabled by default in dts
      ext: nordic: Update nrfx_config_nrf52810.h entries
      ext: nordic: Unify NRFX_UART[E]* options handling in nrfx_config*.h
      ext: nordic: Unify NRFX_RTC* options handling in nrfx_config*.h

Andrzej Puzdrowski (10):
      settings: fix read-out more than stored bug.
      sample/subsys/usb/dfu: correction to documentation
      tests/subsys/settings: fcb unaligned value test
      settings: get flash alignment from fcb instance
      settings: fix fcb record size for unaligned sizes
      settings: fix base64 encode test
      settings: always uses the storage partition for FCB
      CODEOWNERS: Add owners for tests of settings subsystems
      tests/subsys/fs/nffs_fs_api: build ram back-end only for qemu_x86
      settings: enable logging

Andy Gross (1):
      uart: pl011: Use correct masking for ICR

Andy Ross (38):
      samples/drivers/counter/alarm: Fix YAML schema failure
      kernel/work_q: Fix block-in-spinlock bug
      kernel/sched: More nonatomic swap fixes
      tests: Mass SMP disablement on non-SMP-safe tests
      kernel/spinlock: Predicate spinlock validation on flash size
      lib/os: Conditionally eliminate alloca/VLA usage
      lib/os: Remove recursion from mempool and rbtree
      tests: Mass SMP disablement on non-SMP-safe tests
      tests/kernel/sched/schedule_api: Restore spinning for timer alignment
      tests: Mass SMP disablement on non-SMP-safe tests
      drivers/timer: Restore non-tickless tick count behavior
      tests/kernel/fifo/fifo_timeout: Tick alignment for oversensitive timing
      include/kernel.h: Remove unsupported return values from k_work APIs
      arch/x86_64: Non-kconfig symbols shouldn't look like kconfig
      kernel/work_q: Clarify docs for k_delayed_work_cancel()
      kernel/work_q: Fix locking across multiple queues
      arch/x86_64: Fix printf format string
      arch/x86_64: Clean up stack initialization
      drivers/timer/hpet: Add noop SMP initialization function
      cmake/emu: Add qemu SMP flags automatically
      arch/x86_64: Add a per-CPU SMP bringup API
      kernel/smp: Warning cleanup
      kernel/sched: Handle aboring _current correctly in SMP
      x86_64: Missing a volatile on a struct used for spinning
      kernel/smp: Fix bitrot with the way the SMP ""start flag"" works
      kernel/sched: arch/x86_64: Support synchronous k_thread_abort() in SMP
      kernel/sched: Clean up tracing hooks
      tests/kernel/smp: Honor TEST_EXTRA_STACKSIZE
      kernel/spinlock: Fix race in spinlock validation
      kernel/sched: Fix spinlock validation glitch in SMP
      kernel/sched: Fix k_yield() in SMP
      tests/kernel/smp: Remove test_wakeup_pending_threads case
      tests/kernel/smp: Clean up ""guess waiting"" on SMP thread exit
      soc/x86_64: board/x86_64/qemu_x86_64: Enable 2-processor SMP as default
      arch/x86_64: Flag xuk shared page volatile
      kernel/sched: Nonatomic swap workaround update for qemu behavior
      tests/kernel/mem_pool/mem_pool_threadsafe: Reduce tick rate
      drivers/timer/nrf_rtc_timer: Revert recent changes

Anthony Kreft (1):
      boards: nucleo_l053r8: add clock ticks

Armando Visconti (4):
      drivers/audio: mpxxdtyy: Align log defines to audio dmic case
      samples/96b_argonkey: change log configurations
      samples/96b_argonkey: microphone: Fix coverity bug 190958
      driver/sensor: lis2mdl: (FIX) change 'uint32_t' type into 'u32_t'

Arnaud Pouliquen (1):
      tests: fix compilation error for printk

Aurelien Jarno (12):
      Revert ""drivers: eth: gmac: conservatively compute the number of descriptors""
      drivers: eth: gmac: reduce ETH_SAM_GMAC_BUF_RX_COUNT
      drivers: eth: gmac: drop compile-time check about number of TX packets
      arch: arm: mpu: get the region sizes from the linker
      driver: eth: gmac: wait until the packet is sent before returning
      driver: eth: gmac: remove ring_buf usage in the RX path
      usb/net: fix RNDIS driver in composite mode
      usb/net: fix EEM driver in composite mode
      usb/net: fix ECM driver in composite mode
      arch: arm: mpu: get the __ramfunc region size from the linker
      arch: make __ramfunc support transparent
      drivers: watchdog: wdt_sam: use the generic disable option

Benjamin Valentin (3):
      power: don't switch to power modes not enabled in Kconfig
      boards: arm: atsamd21: enable USB in dts
      boards: arm: atsamd21: enable button in dts

Bub Wei (1):
      samples: net: zperf: Refactor udp_received

Carles Cufi (16):
      doc: extensions: applications: Fix error handling
      doc: extensions: application: Fix multi-os handling
      doc: extensions: application: Overhauld and add west support
      doc: extensions: application: Use paragraphs for multi-tool
      doc: getting_started: Add a reference to west multi repo
      doc: getting_started: Document building with west
      doc: Fix the doxygen output directory references
      CODEOWNERS: Add owners for storage-related subsystems
      doc: Clean up build instructions and use of variables
      kconfig: Don't load env var if in doc mode
      segger: sysview: Fix constness of char pointer
      Bluetooth: controller: Fix unchecked return value
      west: commands: build: Specify source dir without a flag
      west_commands: pyocd: Sector erase by default
      doc: Bluetooth: Documentation overhaul
      boards: 96b_carbon: Require BT for NET_L2_BT

Carlos Stuart (1):
      include: misc: util.h: Rename min/max to MIN/MAX

Charles E. Youse (7):
      boards/x86: scripts: build_grub.sh fix for newer GCC versions
      uart: ns16550: support Apollo Lake PRV_CLOCK_PARAMS (PCP) register
      kernel/timeout: fix k_timer_remaining_get() when tickless
      tests/timer_api: revert testcase configuration
      tests/timer_api: revert testcase configuration
      posix/pthreads: fix pthread_barrier_wait() behavior to match Posix
      tests/xip: exclude Minnowboard from test (does not do XIP)

Cinly Ooi (1):
      tests: Enable kernel.device tests for qemu_x86_64

Daniel Egger (1):
      shell: Make sure digits of the device id are rendered with 2 hex digits

Daniel Glöckner (2):
      ext: hal: atmel: sam: really fix GMAC priority queues related registers
      debug: openocd: change how we manage differences between versions

Daniel Leung (26):
      boards/intel_s1000_crb: fix Python string format
      boards: intel_s1000_crb: fix setting cache attributes
      tests/boards/intel_s1000_crb: fix potential uninit variables
      boards/intel_s1000_crb: fix image creation with custom filename
      xtools: exclude ""sources"" when searching xtools output dir
      uart/ns16550: Use DT_ prefix for remaining device configs
      soc: intel_s1000: make zephyr_prebuilt.elf a lot smaller
      soc: intel_s1000_crb: fix GPIO IRQ in dts_fixup.h
      boards: up_squared: turn on PCI enumeration
      gpio: gpio_intel_apl: fix if condition leading to dead code
      xtensa: intel_s1000: turn on XTENSA_ASM2
      gpio: gpio_dw: rename CONFIG_GPIO_DW_*_IRQ_SHARED_NAME to DT_*
      eth: eth_dw: rename CONFIG_ETH_DW_0_IRQ_SHARED_NAME to DT_*
      i2c: i2c_dw: rename CONFIG_I2C_DW_0_IRQ_SHARED_NAME to DT_*
      tests: fs/fat_fs_dual_drive: check fs_seek return values
      tests: fs/nffs_fs_api: fix uninitialized reference time variable
      subsys/fs/shell: fix unchecked return from fs_seek in cmd_read
      adc: return EBUSY when requesting new sampling while one in progress
      linker: remove references to no longer exist _k_memory_pool
      linker: remove references to _k_task_list/_k_event_list
      linker: no need to sort by name for kernel object
      pci: properly scan all device resources
      linker: move app_smem.ld into include/linker
      linker: sort app shared mem partition by alignment
      linker: nios2: align rodata section
      linker: sort sections by alignment

Dave Marples (1):
      systemview: Use proper task names when these are available.

David B. Kinder (12):
      doc: tweak board doc titles
      doc: fix doxygen API comment misspellings
      doc: fix misspellings in docs
      doc: fix docs, include, and Kconfig misspellings
      doc: fix broken internal link in app dev doc
      doc: reduce size of large pictures
      doc: use :zephyr_file: where appropriate
      doc: update windows installation guide
      doc: Release notes initial (empty) draft
      doc: add note about force pushes to contrib guide
      doc: prepare for improving doc API linking
      doc: remove local version of Sphinx searchtools.js

Dennis Wildmark (2):
      logging: fix compiler warning when using -Wextra flag with gcc
      lib: cmsis_rtos_v2: changed printformat that produced warnings

Emanuele Di Santo (4):
      power: add stdbool.h to power.h
      power: declare power states unconditionally
      doc: boards: arm: nrf52840_pca10059: fix instructions for flashing
      kconfig: move Zephyr modules Kconfig entries to the top

Erwan Gouriou (38):
      ext/hal: stm32f1xx: Use of (__packed uint32_t *) produces warnings
      ext/hal: stm32f2xx: Use of (__packed uint32_t *) produces warnings
      ext/hal: stm32f4xx: Use of (__packed uint32_t *) produces warnings
      ext/hal: stm32f7xx: Use of (__packed uint32_t *) produces warnings
      ext/hal: stm32l4xx: Use of (__packed uint32_t *) produces warnings
      drivers/gpio: stm32: Return errors on not supported config
      kconfigfunctions: Disambiguate reference to DTS generated database
      samples/subsys/nvs: Add a clean test termination
      board: disco_l475_iot1: add storage partition
      samples/drivers/flash_shell: Add nucleo_f746zg to platform_whitelist
      boards: nucleo_f091rc: Add nvs support
      samples/bluetooth: Add note about Long term key clearance
      boards: nucleo_l4r5zi: Add flash & debug support
      samples/subsys/nvs: Fix typo in samples description.
      boards: nucleo_f091rc: Increase storage partition size
      boards: nucleo_l432kc: Fix comment on partition description
      boards: stm32f3_disco: Add a storage partition
      dts/arm/st: stm32f3: Provide erase and write block size
      drivers/flash: Move STM32F3 to generic STM32 series driver
      boards: nucleo_f334r8: Provide flash storage partition
      drivers/flash: Rework CMakeLists.txt for stm32 drivers
      drivers/sensor/vl53l0x: Remove unnecessary lib include check
      doc/guide/dts: DTS documentation add-on
      drivers/interrupt_controller: stm32: Fix issue in irq lines connect
      drivers/interrupt_controller: stm32: Remove RTC_Alarm IRQ handling
      codeowner: add codeowner for ST stm32 development boards
      drivers/clock_control: stm32: Fix default value for AHB prescaler
      drivers/clock_control: stm32: Use RCC_PLLCFGR_PLLQ_Pos directly
      soc/arm/st_stm32/stm32l4: Factorize definition of GPIO_STM32_PORTH
      soc/arm/st_stm32: Add comments on Kconfig.defconfig organization
      scripts: Add hook calllable series-push-hook script
      CODEOWNERS: Add codeowner to boards/shields
      scripts: fix path issue in push-hook script
      dts/st: stm32f4: uart4 is not available on whole series
      soc: stm32f4: fixup: Rename UART generated DT_ defines
      drivers/flash: stm32f3/stm32f1: define flash registers as volatile
      drivers/flash: stm32l4: Prepare for unaligned accesses in flash writes
      drivers/counter: stm32: Fix time_t usage

Filip Brozovic (1):
      lvgl: lvgl_color_1: add support for horizontally tiled displays

Filip Kubicz (3):
      Bluetooth: settings: Always initialize key when storing Client Features
      Bluetooth: host: Use log_strdup() for stack strings
      bluetooth: settings: Clean up storing Bluetooth host values

Flavio Ceolin (14):
      ext: tinycrypt: Update tinycrypt revision
      misc: rb: Fix possible infinity loop
      bluetooth: shell: Fix uninitialized variable
      libc: ctype: Fix operations between signed and unsigned types
      drivers: can: Z_SYCALL_HANDLER should return int
      tests: hwinfo: Fix invalid assertion
      tests: fs: Add missing return check
      power: Fix switch usage
      boards: galileo: Fix switch usage
      logging: Make statements evaluate boolean expressions
      kernel: Make statements evaluate boolean expressions
      compiler: clang: Include missing target
      x86: core: Remove extra parenthesis
      samples: can: Check return of can_attach_isr

François Delawarde (1):
      debug: Place Kconfig tracing options in debug submenu

Gaute Gamnes (6):
      dts: nrf: Temp device node added to nRF5 devices with yaml binding
      drivers: nrf5: temp: Migrate Kconfig priority option to DT
      drivers: nrf5: temp: Cleanup temp_nrf5.c source
      dts: nrf: SW PWM device node added to nRF5 devices with yaml binding
      drivers: pwm: nrf: Migrate SW PWM Kconfig options to DT
      samples: servo_motor: Fix servo_motor sample to use new DT options

Geoffroy Van Cutsem (4):
      doc: update udev rule instructions for the reel board
      x86: grub_build.sh: fix compilation failures on Fedora 29
      boards/x86: scripts: build_grub.sh to use grub-2.02-285-g5bc41db75
      doc: up_squared: add 'west' build option to the UP2 documentation

Georgij Cernysiov (10):
      drivers: modem: receiver: correct device bind error type
      drivers: modem: receiver: switch to ring buffer from pipe api
      drivers: modem: receiver: rearrange and comment
      drivers: modem: receiver: fix sending
      drivers: modem: receiver: use asserts internally
      drivers: modem: receiver: replace fifo_fill with poll_out
      drivers: modem: receiver: guards against 0 size
      drivers: modem: wistron kconfig separation
      drivers: entropy: stm32: fix invalid assert in rng init
      drivers: serial: stm32: l4 pinmux fix usart6 rx define

Henrik Brix Andersen (1):
      samples: nrf52: mesh: onoff-app: add missing CONFIG_GPIO

Henrik Malvik Halvorsen (2):
      drivers: sensor: adxl362: Driver update and CS support
      drivers: sensor: ADXL362 data conversion fix

Ioannis Glaropoulos (56):
      arch: arm: remove unnecessary stacking/unstacking
      arch: arm: remove unnecessary stacking of r3 in swap.S
      kernel: minor syntax fix in Kconfig
      arch: arm: update function documentation for __svc
      arch: arm: ARMv8-M built-in stack protection fixes in userspace.S
      arch: arm remove unnecessary stacking of r3 in userspace.S
      arch: arm: invoke MPU reprogramming while in privilege stack
      arch: arm: fix determining stacked frame for Non-Secure firmware
      arch: arm: indicate Secure domain fault in Non-Secure fault exception
      arch: arm: clear MMFSR status bits after fault handling
      arch: arm: minor typo fix in fault.c
      arch: arm: clear BFSR bits after error handling for all architectures
      arch: arm: mpu: fix start of stack guard for builds with no USERSPACE
      arch: arm: enhance built-time rule to check for start addr alignment
      arch: arm: define EXC_RETURN payload flag macros in non-secure FW
      arch: arm: fix return reason in Secure/Non-Secure FW builds
      boards: arm: nrf: do not overwrite flash0 reg property in nRF91 board
      boards: arm: nrf: explicitly set Load size for strictly Secure builds
      tests: kernel: userspace: fix test for non-secure builds
      arch: arm: nxp mpu: align MPU disable function with that of ARM MPU
      arch: arm: mpu: fix constant expression result errors
      arch: arm: mpu: fix constant expression result errors in ARMv8-M impl
      arch: arm: various documentation fixes in arm assembly
      arch: arm: nxp: mpu: fix constant expression result errors
      tests: kernel: arm_irq_vector_table: refactor custom IRQ settings
      tests: kernel: arm_irq_vector_table: minor typo and style fixes
      tests: kernel: arm_irq_vector_table: add clock ISR in the IRQ vector
      tests: kernel: arm_irq_vector_table: extend the test for nRF9160
      arch: minor white-space fix in Kconfig
      arch: arm: improve debug message and help test for UsageFault
      arch: arm: properly assess stack corruptions upon MPU faults
      arch: arm: nxp: properly assess stack corruptions upon BusFaults
      arch: arm: remove redundant check for imprecise error
      arch: arm: stress that IRQ tail-chaining cannot always be guaranteed
      arch: arm: core arch function to evaluate stack corruption
      tests: kernel: fatal: remove #ifdefs for ARM platforms
      soc: arm: nrf52810: reduce number of boot-time configured MPU regions
      arch: arm: MPU-align GCOV section, only if CONFIG_USERSPACE=y
      arch: arm: fix thread and interrupt stack start calculations
      samples: mpu: correct Kconfig setting in project configuration
      arch: arm: pointer argument to MPU region re-programming functions
      arch: arm: nxp mpu: refactor internal mpu functions
      arch: arm: mpu: refactor internal ARMv7-M and ARMv8-M MPU functions
      arch: arm: documentation improvements for _ARCH_THREAD_STACK_SIZEOF()
      arch: arm: userspace: Force arch-specific user local data reservation
      arch: arm: fix implementation of _new_thread()
      arch: arm: add an ASSERT for thread stack pointer coherence
      kernel: documentatation for _setup_new_thread()
      arch: arm: documentation fixes for _new_thread()
      arch: arm: introduce sync barriers in _arch_irq_unlock()
      kernel: enhance documentation of z_arch_buffer_validate
      kernel: userspace: correct documentation for Z_SYSCALL_MEMORY_ macros
      doc: guides: porting: correct references to user mode APIs
      arch: arm: move MPU reprogramming before switching to main stack
      arch: arm: revert back to use assembly to jump to main thread
      drivers: usb: nrfx: initialize local struct to zero

Ivan kyb Kuvaldin (1):
      doc: Fix links to docs.zephyrproject.org

Jacob Siverskog (3):
      toolchain: Improve error message on mismatching SDK version
      toolchain: Fix typo and grammar in error message
      include: uart: Fix function reference in docstrings

Jakub Rzeszutko (2):
      shell: allow commands to suspend shell thread
      shell: fix coverity issue

Jan Van Winkel (1):
      drivers: ssd1306: Corrected API mapping for blanking

Jiri Kubias (1):
      serial: u(s)art_sam: Fixed return value of usart_sam_irq_is_pending

Johan Hedberg (8):
      tests: bluetooth/mesh_shell: Fine-tune config for lower RAM footprint
      Bluetooth: Mesh: Increase advertising thread size
      Bluetooth: settings: Fix missing log_strdup() call
      Bluetooth: Clarify bt_conn_create_slave_le documentation
      doc: Bluetooth: use :cpp:func: instead of :c:func:
      doc: Bluetooth: Add initial guide for the host stack
      Bluetooth: Mesh: Fix checking for bt_mesh_provision() error
      samples: reel_board/mesh_badge: Add protection for fast key presses

Johann Fischer (7):
      drivers: apds9960: fix ALS in non-trigger mode
      boards: reel_board: enable pull-up on UART RX pin
      boards: reel_board: remove cts,rts pins from uart node
      drivers: ssd1306: fix build for SH1106 controller
      drivers: eth_enc28j60: fix typo and build for half duplex
      drivers: eth_enc28j60: fix calculation of frame length
      samples: usb_dfu: update application signing in README.rst

Jukka Rissanen (99):
      net: pkt: Check the minimum buf and pkt counts
      net: context: can: Fix typo in Kconfig option name
      net: Fix the function API documentation generation
      net: pkt: Add missing documentation for various insert helpers
      net: Hide internal code from documentation
      net: ethernet: mii: Fix the documentation
      net: ethernet_mgmt: Add missing documentation
      net: timeouts: Fix documentation for net_timeouts.h
      net: ethernet: vlan: Add missing function documentation
      net: dns: Fix DNS documentation
      samples: net: sockets: Add smoke testing support
      net: if: Start index numbering from 1
      tests: net: dns: Fix test as the interface index starts from 1
      tests: net: ip-addr: Fix interface index values
      tests: net: ipv6_fragment: Fix interface index values
      doc: net: Enhance link layer address documentation
      net: link_addr: Add more info to link layer address API
      samples: syslog_net: Fix link to RFC 5426
      doc: net: Enhance core API documentation
      net: core: Fix documentation for core helpers
      doc: net: Add more info for network connectivity with host
      doc: net: Enhance IEEE 802.15.4 documentation
      doc: net: Enhance PTP time format documentation
      doc: net: Enhance Trickle algorithm documentation
      net: trickle: Fix doxygen comments
      doc: net: Enhance DNS resolver documentation
      doc: net: Enhance network configuration library documentation
      net: config: Document the flags options
      doc: net: Enhance network hostname configuration documentation
      net: hostname: Fix Kconfig option help
      doc: net: Enhance network interface documentation
      net: if: Add documentation for NET_DEVICE_INIT() macros
      doc: net: Enhance DHCPv4 documentation
      net: route: Do not access null neighbor
      net: Remove the TODO file
      doc: net: Enhance network offloading API documentation
      doc: net: Hide UDP API documentation
      doc: net: Enhance network statistics documentation
      net: stats: Add missing doxygen comments
      samples: net: promiscuous_mode: Add missing README.rst file
      doc: net: Enhance promiscuous mode documentation
      doc: net: Enhance net_timeout API documentation
      doc: net: context: Add comment to use BSD socket API instead
      can: Add Linux compatible frame and filter structs
      tests: can: Add CAN frame struct handling tests
      can: Rename can_msg and can_msg_filter structs
      net: offload: Remove CONFIG_NET_OFFLOAD from header file
      doc: net: Move networking reference document chapters around
      doc: net: Add overview chapter to IPv4/6 helper doc
      net: ip: Add more documentation to net_ip.h
      tests: can: Fix name of CAN msg and filter structs
      net: ethernet: Fix doxygen documentation
      net: ethernet: Place MII defines into separate doxygen group
      doc: net: Enhance Ethernet documentation
      doc: net: Hide misc host connectivity chapters from index
      doc: net: Add documentation for net-shell
      net: stats: Wrong Kconfig options were used for statistics
      doc: net: Update network overview chapter
      doc: net: Change connectivity API doc to use BSD sockets
      doc: net: Enhance Ethernet management documentation
      net: doc: Add missing doxygen comments to structs
      doc: net: Minor tweaks to gptp documentation
      net: context: Remove dead code from net_context_connect
      samples: net: socket: can: Do cleanup if failure
      net: sntp: Remove useless comparison
      net: ipv6: Extension header length failure not properly checked
      doc: net: Enhance LLDP documentation
      net: lldp: Allow generation of documentation
      net: tcp: Check TCP ACK flag properly during conn establishment
      net: buf: Doxygen comment additions and fixes
      net: arp: Update the ARP cache if receiving ARP req
      doc: net: Add table of contents to networking docs
      doc: net: Move net-shell to system management page
      doc: net: Update the L2 documentation
      doc: net: Use proper github link for statistics Kconfig file
      doc: net: Minor fixes to DNS documentation
      doc: net: Fix instructions how to compile qemu_x86 with e1000
      doc: net: Fix VLAN documentation in doc and in sample
      doc: net: Updates to network architecture document
      can: Add the padding to can_frame as Linux expects that
      doc: net: Fix L2 documentation
      samples: net: zperf: Make client work in native_posix
      samples: net: zperf: Fix TCP download command
      samples: net: zperf: Fix the readme file
      drivers: eth: native_posix: Null terminate interface name
      tests: net: ipv6: Check null ptr dereference
      tests: net: dhcpv4: Check null ptr dereference
      tests: net: tcp: Check null ptr dereference
      drivers: can: socket: Use proper filter when setsockopt is called
      net: socket: can: Convert between can_frame and zcan_frame
      samples: net: can: setsockopt() requires can_filter
      samples: net: can: Send and receive can_frame type of data
      can: Make frame and filter conversion function params const
      samples: net: can: Readme file was missing
      doc: net: Add SNTP API documentation
      tests: net: mld: Check null ptr dereference
      doc: net: Add anchor to socket offloading chapter
      doc: Add networking information to 1.14 release note
      doc: net: Re-apply the networking release notes for 1.14

Jun Li (1):
      watchdog: stm32: fix logic error

Kamil Piszczek (1):
      Bluetooth: gatt: ccc changed cb after connection cb

Krzysztof Chruscinski (23):
      shell: Fix prompt length not updated in shell_prompt_change
      logging: Set panic_mode flag after flushing in log_panic
      tests: subsys: logging: Enable log_core test on nios2
      kernel: Reworking _K_TIMER_INITIALIZER and _K_PIPE_INITIALIZER for C++
      shell: Add support to log_panic in RTT backend
      tests: drivers: counter: Fix single_shot_alarm_top and  multiple_alarms
      tests: drivers: counter: Test cleanup
      shell: Refactor shell argument count validation
      shell: Add cpp-friendly shell macro for subcommands creation
      shell: Modify subcommands to use SHELL_STATIC_SUBCMD_SET_CREATE
      shell: Deprecate macros for subcommands creation
      shell: Making root command a global variable
      logging: Fix silent logs dropping when LOG_MODE_OVERFLOW disabled
      logging: Add assert when no backends defined
      logging: Use vprintk for string formatting by default
      tests: drivers: counter: Fix coverity issues 190937, 190967, 190983
      tests: drivers: counter: Fix coverity issue (190952)
      logging: Use k_uptime_get_32 for high frequency system clock
      logging: Fix RTT log backend lagging if no host
      drivers: counter: Fix handling of relative alarms on nrf platform
      doc: shell: Document logging to shell in case of early crash
      tests: drivers: counter: Fix coverity issues
      lib: os: ring_buffer: Fix not handled return value

Kumar Gala (77):
      console: Remove CONFIG_WEBSOCKET_CONSOLE code
      net: lib: Remove CONFIG_HTTP reference
      drivers: i2c: i2c_esp32: Fix Kconfig typo mismatch
      tests: i2c: i2c_slave_api: Remove dead Kconfig symbols from conf file
      boards: arc: iotdk: Fix missed CONFIG -> DT define transition
      logging: log_ctrl.h: Fix Kconfig symbol reference in comment
      cmake: Remove dead Kconfig CONFIG_READABLE_ASM
      samples: net: zperf: rename WLAN to WIFI
      modem: Fix LOG Kconfig typo
      pwm: pwm_sifive: Fix LOG Kconfig typo
      disk: Fix LOG Kconfig typo
      logging: Fix typo in logging comment
      tests: kernel: gen_isr_table: Exclude platforms test isnt valid on
      tests: spi_loopback: reduce footprint by tweaking logging
      soc: arm: atmel: sam4s: Fix Kconfig typo
      soc: arm: atmel: sam3x: Add missing SoC Kconfig symbols
      spi: spi_mcux_lpspi: Convert to use DT_ prefixed defines
      scripts/dts/extract: Fix how we determine DT_FLASH_AREA_<X>_DEV
      samples: Use DT_ prefix define for DT filters
      scripts/dts/extract_dts_includes: Limit conf file to DT prefix defines
      linker: riscv32: Fix .riscv.attributes orphan sections warning
      tests: mem_alloc: Fix build issue with malloc test
      scripts/sanitycheck: Add 'nocache' section to whitelist
      boards: galileo: Fix I2C device name defaults
      boards: x86_64: qemu_x86_64: Remove board.h
      cmake: Fix setting of -nostdinc
      soc: imxrt: Fixup setting of MPU Kconfig
      cmake: toolchain: zephyr-0.9.5: Fix setting of TOOLCHAIN_HAS_NEWLIB
      arm: cortex_m: prep_c: Fix compile warning with relocate_vector_table
      cmake: toolchain: zephyr-0.10.0: Fix setting of SYSROOT_DIR on xtensa
      boards: arm: mimxrt10*_evk: Enable MPU
      posix_lib: Disable support on native posix arch
      lib: posix: Fix compile issue with newer newlib
      tests: posix: add newlib cfg option
      lib: posix: Fix compile error with mqueue.h
      lib: posix: Fix compile error with time.h and older newlib
      drivers: can: stm32: Cleanup Kconfig enablement
      tests: posix: add newlib cfg option
      drivers: gpio: sx1509b: convert to DT_<COMPAT>_<INSTANCE> defines
      spi: spi_intel: Fix missing 'break' in case
      boards: rv32m1_vega: Have identifier match name
      serial: uart_rv32m1_lpuart: Fix build warnings
      soc: riscv32: openisa_rv32m1: Fix build warnings
      samples: ipc: openamp: Fix missed return error check
      samples: fs: Fix possible integer overflow
      samples: net: wpan_serial: Remove dead code related to CONFIG_DCD_DSR
      samples: net: nets: Remove references to CONFIG_NET_DHCPV6
      kconfig: Remove dead references to CONFIG_PCI_DEBUG
      kconfig: remove stale CONFIG_IEEE802154_CC2520_AUTO_ACK
      tests: spi: spi_loopback: Drop default SPI_1_NAME symbol
      gpio: gpio_cmsdk_ahb: Return error for not supported flag
      ci: Move to using SDK 0.10.0
      docs: Updated Linux Getting started for SDK 0.10.0
      boards: arm: Enable building with Zephyr toolchain
      ext: libmetal: Update libmetal to snapshot for bug fixes
      open-amp: Fix build issue with newlib
      libc: Fix fwrite function name
      libc: rename _zephyr_fputc to zephyr_fputc
      libc: newlib: Cleanup/fix setting of system include paths
      net: lwm2m: Fix minor bug with setting flags
      soc: riscv32: openisa_rv32m1: Link .srodata section
      tests: kernel: context: Fix build issue with RV32M1_LPTMR_TIMER
      scripts/sanitycheck: Add 'vectors' section to whitelist
      boards: rv32m1_vega: Enable building with Zephyr toolchain
      boards: arm: Fix setting of xtools
      arm: asm: Fix some asm issues when building with clang
      Bluetooth: Mesh: Fix clang uninitialized var warning
      drivers: led: lp5562: Fix use of logical or vs bitwise
      drivers: usb: nrf: Fix mixing of enum types
      arm: asm: Fix inline asm in Z_ARCH_EXCEPT for clang
      linker: Remove unused (OPTIONAL) from linker scripts
      logging: Workaround build warning with clang
      cmake: Fix how we set include dirs for userspace
      boards: mec2016evb_assy6797: Remove unneeded board.h
      Revert ""doc: Add networking information to 1.14 release note""
      arm: asm: Fix inline asm in z_arch_switch_to_main_thread for clang
      release: Zephyr 1.14-rc2

Kwon Tae-young (3):
      drivers: ssd1306: Fix dts read
      drivers: ssd1306: Support GPIO reset function
      drivers: ssd1306: Add high and delay for reset.

Laczen JMS (2):
      fs/nvs: Improve init speed and remove fs->locked
      fs/nvs: Improve init speed and remove fs->locked

Loic Poulain (8):
      soc: nxp_imx: Add on-chip flash code location support
      soc: nxp_imx: mimxrt1064_evk: Enable ethernet support
      net: context: Explicit net_sock_type enum conversion
      drivers: i2c: mcux_lpi2c: Fix unexpected I2C start condition
      drivers: i2c: mcux_i2c: Fix unexpected I2C start condition
      dts: arm: nxp: rt: Create dedicated rt1060 dtsi
      dts: arm: nxp: rt: Create dedicated rt1064 dtsi
      dts: arm: nxp: rt106x: Unified OCRAM node

Luiz Augusto von Dentz (9):
      Bluetooth: GATT: Add BT_GATT_CCC_MANAGED
      Bluetooth; GATT: Consolidate code for finding a CCC config
      Bluetooth: Mesh: Use BT_GATT_CCC_MANAGED
      doc: Bluetooth: Add initial documentation for the L2CAP layer
      doc: Bluetooth: Add initial documentation for the GATT layer
      Bluetooth: GATT: Skip certain attributes when discovering descriptors
      Bluetooth: GATT: Skip Characteristic Value when discovering Descriptors
      Bluetooth: GATT: Document discover types
      Bluetooth: GATT: Add BT_GATT_DISCOVER_ATTRIBUTE type

Maksim Masalski (6):
      shell: changed dead code part in function buffer_trim()
      can: cast value 1U to type u64_t in function can_stm32_set_filter
      can: cast value 1U to type ULL in function can_stm32_set_filter
      drivers: Changed return statement in function get_timeout()
      macros: deleted macros SECONDS(), MSEC(), USEC()
      bluetooth: fix unchecked return from lll_clk_off in ll_test_end

Manivannan Sadhasivam (1):
      dma: stm32f4: Use dma_config for checking memcopy support

Marc Herbert (14):
      doc: fix incremental build by fixing doxygen output mtime
      doc/getting_started: mention ZEPHYR_TOOLCHAIN_VARIANT=host briefly
      scripts/*syscalls.py: sort os.walk() for a more deterministic build
      doc/CMakeLists.txt: trivial comments and logging enhancements
      Instant doc/ gratification: do not re-run doxygen when not needed
      cmake: more deterministic git describe --abbrev=12
      filter-known-issues.py: clarify what ""new"" means
      CODEOWNERS: fix 3 check-compliance.py issues not reported by github
      run_ci.sh: run pytest-3 if found
      run_ci.sh: git log what [base] version is being tested
      extract_dts_includes.py: deterministic flash table with Python < 3.6
      gen_kobject_list.py: OrderedDict for < 3.6 determinism
      sanitycheck: group case selection options in the help message
      sanitycheck: make --subtest and --test mutually exclusive

Marcin Szymczyk (3):
      usb: hid: add keyboard report macro and enums
      usb: add hid-cdc example
      usb: samples: mass: add warning for no conf and nrf52840 conf

Mariusz Skamra (1):
      Bluetooth: tester: Move BTP specification to auto-pts repository

Mark Ruvald Pedersen (12):
      bluetooth: controller: Introduce ull_ref_dec for consistency
      bluetooth: controller: Add comments across ull
      bluetooth: controller: Document more of memq, mfifo
      bluetooth: controller: Commentary in LLL header
      bluetooth: controller: Add a few ticker comments
      cmake: Toolchain abstraction: optimizations
      bluetooth: controller: Document RX path flow from mayfly to HCI
      bluetooth: controller: Refactor PDU_RX_POOL_SIZE
      bluetooth: controller: Static mem_pdu_rx, remove PDU_RX_SIZE_MIN
      cmake: remove redundant compiler flags for C++
      cmake: Toolchain abstraction: C++
      cmake: Toolchain abstraction: Assembly

Marti Bolivar (4):
      storage: flash_map: fix copyright assignment
      west: fix issue with sign.py
      west: sign.py: usability fixes
      cmake: add west version checking

Maureen Helm (28):
      boards: shields: frdm_kw41z: Fix reference to undefined Kconfig symbol
      soc: nxp_imx: Move code/data location configs to soc level
      soc: nxp_imx: Clean up whitespace in dts_fixup.h
      soc: nxp_imx: Add missing dts fixups for gpio 2,3,4 instances
      soc: nxp_imx: Default to on-chip memories at soc level
      scripts: Update pyocd version to 0.16.1
      boards: Fix Segger RTT on hexiwear_kw40z and usb_kw24d512 boards
      boards: Add hwinfo to supported list for kinetis boards
      boards: mimxrt1060_evk: Add hwinfo to the supported list
      boards: rv32m1_vega: Fix red and blue led labels
      ext: mcux: Update imx rt clock drivers
      drivers: gpio: Fix mcux driver to init successfully with no irq
      soc: openisa_rv32m1: Implement sys_arch_reboot()
      drivers: gpio: Fix build warnings in rv32m1 driver
      drivers: clock_control: Fix build warnings in rv32m1 driver
      drivers: interrupt_controller: Fix build warnings in rv32m1 driver
      drivers: pinmux: Fix build warnings in rv32m1 driver
      drivers: timer: Fix build warnings in rv32m1 driver
      boards: mimxrt1064_evk: Default to internal flash and external sdram
      soc: nxp_kinetis: Add HAS_MCUX_FTFX to conditionalize mcux flash driver
      CODEOWNERS: Add code owner for nxp dts
      soc: nxp_imx: Sort imx rt part numbers in alpha order
      soc: nxp_imx: Add rt1052 A1 silicon part numbers
      ext: mcux: Fix handling of rt1052 part numbers
      boards: mimxrt10{50,60}_evk: Set lvgl defaults in board defconfigs
      boards: mimxrt1064_evk: Enable mcux elcdif driver and pins
      boards: reel_board: Fix apds9960 i2c address
      drivers: sensor: Refactor apds9960 to use const config struct

Michael Scott (38):
      net: lwm2m: fix float32/64 handling
      net: lwm2m: add support for IPSO Timer object
      samples: net: lwm2m: Add decimal value to dummy temp sensor
      samples: net: lwm2m: add timer object to lwm2m client
      net: lwm2m: fix rendering of zero value float32/64
      net: lwm2m: remove checks for long int > MAX_INT
      net: lwm2m: fix out-of-bounds access in put_s8()
      net: lwm2m: fix NULL deref in plain_text_read_number()
      drivers: modem: wncm14a2a: stop reading when bytes read is 0
      boards: nrf52_blenano2: standardize scratch and storage partitions
      boards: 96b_nitrogen: standardize scratch and storage partitions
      net: lwm2m: fix float exponent after fraction assign
      net: lwm2m: fix json formatter putchar check
      samples: basic: fix nRF52 PWM name in blink_led/fade_led samples
      net: lwm2m: fix json NULL deref / code flow in read_number()
      CODEOWNERS: add modem ownership
      drivers: modem: fix extra bytes sent by mdm_receiver_send()
      doc: net: lwm2m: add LwM2M high-level API documentation
      boards: arm: particle_*: add code-partition fix for mcuboot apps
      drivers: modem: wncm14a2a: Fix illegal mem access in on_cmd_sockread()
      drivers: modem: wncm14a2a: cleanup wncm14a2a_rx() handler block
      boards: arm: particle_*: remove SPI default enablement
      scripts/dts: Fix for PyYAML 5.1 Loader changes
      drivers: modem: wnc-m14a2a: imply GPIO usage
      drivers: modem: remove leftover artifact from wncm14a2a split
      drivers: modem: wncm14a2a: Fix timeout handling for AT@SOCKCONN
      drivers: modem: wncm14a2a: remove left-over includes
      doc: net: Add LwM2M high-level description and usage
      net: lwm2m: Follow POSIX send() API
      net: lwm2m: correct status change on send_reg error
      net: lwm2m: remove unnecessary check in sm_do_registration()
      net: lwm2m: cleanup observes when closing context
      net: lwm2m: change resend packet to an INF message
      net: lwm2m: raise stack sizes
      net: lwm2m: guard obj_field parameter of LWM2M_HAS_PERM
      net: lwm2m: fix write_handler sizes for float32/64
      net: lwm2m: handle delay_work error in lwm2m_engine_init()
      boards: arm: nrf52840-based: Free up flash room for sample apps

Mieszko Mierunski (1):
      api: uart: Revert to using bitmasks for errors.

Nicholas Lowell (1):
      pwm: add set nanosecond period and pulse width function

Nick Ward (1):
      Bluetooth: GATT: Remove ccc cfg value

Ole Sæther (1):
      boards: arm: nrf: added uart-mcumgr to nrf9160_pca10090

Patrik Flykt (4):
      drivers/led: Remove case ranges from the LP3943 LED driver
      lib/os: Remove case ranges from printk
      kernel/sched: Rename scheduler spinlock
      all: Update reserved function names

Paul Sokolovsky (28):
      net: shell: dns: Properly manage lifetime of callback data
      net: sockets: Properly handle EOF condition for poll()
      net: sockets: Add dummy shutdown() implementation.
      samples: dumb_http_server: Fix typos and improve wording in docs
      scripts: gitlint: Consistent case for Signed-off-by
      doc: sockets: Update to the current state of affairs
      net: sockets: Fix logging message
      net: socket: Define zsock_inet_ntop()
      net: sockets: Implement getnameinfo()
      tests: socket: Add test for getnameinfo()
      libc: newlib: Rename adhoc read/write implementation for stdin/stdout
      lib: fdtable: Update for zephyr_write() rename
      samples: sockets: echo_server: Print port number to connect to
      net: context: Fix send function documentation
      lib: os: fdtable: Add underscore aliases for read/write/close/lseek
      scripts: size_report: Fix output of header break line
      console: tty: Remove dependency on older ""consoles""
      net: ip: Add defines for IPPROTO_IP and IPPROTO_IPV6
      net: socket: Define a few well-known socket options
      net: sockets: Add dummy impl for SO_REUSEADDR and TCP_NODELAY sockopts
      drivers: eth: stellaris: Properly ifdef stats handling
      net: sockets: Trace socket/accept/close operations for debug logging
      net: sockets: recv_stream: Check that the underlying net_context active
      tests: socket: tcp: Test handling of EOF condition on socket
      samples: sockets: echo: Better error checks
      net: socket: Split select-related declaration to separate header
      tests: socket_helpers: Use zsock_ prefixed socket functions
      net: sockets: Implement gai_strerror()

Pawel Dunaj (6):
      include: misc: Use logger in STACK_ANALYZE macro
      bluetooth: Fix broken directed advertising
      bluetooth: host: Expand TX thread stack for BT_CENTRAL
      tests: bluetooth: MESH shell is observer not central
      drivers: spi: nRF SPI add control of MISO pin pull
      kernel: Make heap smallest object size configurable

Paweł Zadrożniak (4):
      usb: Add remote wakeup support
      drivers: usb: nordic: implement remote wakeup
      samples: usb: hid: remote wakeup in HID mouse example
      drivers: usb: nordic: Fix for events when cable is detached

Piotr Mienkowski (6):
      soc: silabs_exx32: register 'soc' logger module
      soc: silabs: add support for setting low power states
      ext: silabs: rename ramfunc section to match Zephyr's
      power: simplify SYS_POWER_*_SUPPORTED Kconfig options
      power: rename CPU_LPS_n power states
      power: doc: fix usage of 'low power state' phrase

Piotr Zierhoffer (2):
      m2gl025_miv: Set performance in Renode script.
      m2gl025_miv: Ignore lifo_usage tests

Piotr Zięcik (12):
      power: Fix naming of Kconfig options controlling low power states
      power: Fix naming of Kconfig options controlling deep sleep states
      power: Rework OS <-> Application interface
      power: Clean up power state names
      power: Do not suspend devices if device PM is not compiled in
      test: kernel: device.pm: Do not enable system-level PM. It is not used.
      power: policy_residency: Update Kconfig options description
      soc: Cleanup SYS_POWER_*_SUPPORTED Kconfig options
      drivers: nrf_power_clock: Migrate to DTS.
      drivers: pwm_nrfx: Use Device Tree label as instance name
      drivers: counter_nrfx_rtc: Port driver to DTS
      drivers: counter_nrfx_timer: Port driver to DTS

Pushpal Sidhu (1):
      clock_control: stm32_ll_clock: Enable MSI autocal when PLL source

Radoslaw Koppel (1):
      ext: encoding: tinycbor: Add missing files for pretty printing

Rajavardhan Gundi (3):
      drivers: flash: spi_nor.c: Correct the calculation of SECTORS_COUNT
      lib: cmsis_rtos_v2: kernel: Fix a coverity issue
      usb: dfu: Signal completion of DFU

Ramakrishna Pallala (5):
      tests: posix: Fix array overrun issue
      device: Extend device_set_power_state API to support async requests
      power: Add device idle power management support
      samples: power: Add test for device Idle PM
      power: Return error code for Device Idle PM disabled case

Ravi kumar Veeramally (9):
      doc: Add CoAP high-level description
      net: tests: Migrate DHCPv4 tests
      net: coap: Fix coverity issue
      samples: net: coap_client: Fix coverity issue
      net: dhcpv4: Introduce config option for max delay
      net: tests: Fix DHCPv4 tests
      net: tests: Migrate UDP tests
      net: tests: Migrate ARP tests
      net: samples: Fix packet socket sample iface index

Robert Lubos (11):
      net: icmpv6: Fix echo request packet generation
      net: ipv6: Do not pass ICMPv6 packets to net_conn_input
      net: lwm2m: Remove misused errno check
      samples: net: lwm2m: Fix system workqueue stack size
      net: sockets: tls: Use semaphore to notify that handshake is complete
      net: sockets: tls: Block DTLS client in poll until handshake is complete
      doc: net: Add Thread protocol description
      net: sockets: tls: Detect EOF in poll prepare
      net: sockets: tls: Add missing poll descriptor increment
      net: socket: Add doxygen descriptions for socket offloading
      doc: net: Add socket offload description

Ruth Fuchss (1):
      doc: boards: fix board target

Ryan Erickson (4):
      boards: bl652_dvk: Add BL652 DVK board
      tests: drivers: adc: adc_api: Add BL652 board support
      boards: bl654_dvk: Add BL654 DVK board
      tests: drivers: adc: adc_api: Add BL654 board support

Sathish Kuttan (15):
      soc: intel_s1000: add audio master clock config
      samples: intel_s1000: App for I2S audio playback
      doc: intel_s1000: I2S sample app documentation
      samples: intel_s1000: loopback audio to I2S host
      doc: intel_s1000: update I2S sample app doc
      samples: intel_s1000: 2-Way Audio Sample Application
      doc: intel_s1000: 2-Way audio sample documentation
      soc: intel_s1000: macros for data cache operations
      soc: intel_s1000: remove wrappers for cache ops
      drivers: i2s_cavs: replace cache operation macros
      drivers: intel_gna: replace cache operation macros
      drivers: intel_dmic: replace cache operation macros
      samples: intel_s1000: remove DCACHE_WRITEBACK
      Kconfig: intel_s1000: Remove DCACHE_WRITEBACK
      tests: intel_s1000: cache flush/invalidate tests

Savinay Dharmappa (3):
      boards: x86: quark_d2000_crb: exclude watchdog test case
      drivers: counter: Modify set top value api.
      tests: counter: Adapt test for the qmsi rtc driver

Sebastian Bøe (24):
      LD: Assert when CONFIG_PRIVILEGED_STACK_TEXT_AREA is too small
      kconfig: Have Kconfig fail when PROJECT_BINARY_DIR is not set
      cmake: kconfig: pass GENERATED_DTS_BOARD_CONF on to kconfig
      kconfig: flash: Move nios code into it's own file
      kconfig: flash: Move mcux code into it's own file
      kconfig: flash: Move nrf code into it's own file
      ld: Change the name of input section .mmu_data to mmu_tables
      ld: Change the name of section .user_mmu_data to user_mmu_tables
      ld: Change the name of input section .gdt_ram_data to gdt
      ld: Change the name of input section irq_vectors_alloc_data
      cmake: x86: Add wrapper targets for custom commands
      cmake: x86: Refactor build scripts
      cmake: Fix dependency issue in x86 build scripts
      cmake: Omit if statement that is always true
      cmake: Omit comments that are either redunant or wrong
      cmake: Deprecate 'set_conf_file'
      cmake: Drop all in-tree usage 'set_conf_file'
      cmake: Rename CMake variable out of the reserved CONFIG_ namespace
      cmake: Rename CMake variable out of the reserved CONFIG_ namespace
      cmake: Don't assert when empty libraries are detected
      cmake: Kconfig: Minor refactorings in preparation for solving #5634
      kconfig: Have ninja Re-run CMake when Kconfig sources change
      cmake: kconfig: Allow user to add custom menuconfig impl.
      doc: Instruct Windows users to not install the lastest gnuarmemb

Song Qiang (4):
      driver: pinmux: stm32f4: Remove duplicated defination
      doc: dts: bindings: Fix a spell mistake
      drivers: gpio: sifive: cleanup irq initialzation code
      sensor: fxos8700: Convert to new DT_<COMPAT>_<INSTANCE> defines

Stanislav Poboril (1):
      ext: hal: nxp: imx: Fixed duplicit file device_imx.h

Suryansh Sharma (2):
      doc: Fix typo and markup elements
      doc: arm: Update stm32_min_dev doc

Takumi Ando (3):
      soc: arm: nrf52: Fix CONFIG_SYS_POWER_MANAGEMENT exclusion
      soc: arm: nrf51: Fix CONFIG_SYS_POWER_MANAGEMENT exclusion
      net/l2: openthread: Add support for automatic joiner start

Tavish Naruka (1):
      boards: arm: add Electronut labs papyr (nrf52840_papyr)

Tedd Ho-Jeong An (7):
      Bluetooth: btp: Add overlay for nrf52 and reel boards
      samples: sockets: echo_async_select: Add error check
      samples: sockets: echo_async: Add more error checking
      sample: sockets: can: Update error handle flow
      tests: net: mqtt: Fix the error handling aftre read
      samples: sockets: echo_async: Check return value of setsockopt
      tests: net: iface: Handle pkt allocation failure

Thomas Stenersen (5):
      kconfig: Use depend on instead of select to avoid kconfig loop
      kconfig: bluetooth: Let BT_HCI_VS be configurable from controller
      drivers: nrf5: Don't force specific drivers from soc/arm/nordic_nrf
      drivers: clock_control: nrf: add choice variable
      bluetooth: host: Specify controller in BT_HCI_TX_STACK_SIZE defaults

Tim Sørensen (TIMS) (2):
      doc: Fixed a link in CONTRIBUTING.rst
      misc: assert_post_action: Added __weak keyword.

Tomasz Bursztyka (112):
      net/pkt: Add a function to get the available buffer for payload
      net/context: Update length according to available buffer for payload
      net/pkt: Add a function to trim the buffer
      net/sockets: Adapt net_pkt_get_src_addr to new net_pkt API
      net/pkt: Removing transport protocol attribute
      net/tcp: Move net_tcp_get_hdr() away from net core
      net/pkt: Fix legacy and new allocator attribute initialization
      net/context: Let's use the new net_ipv6_finalize
      net/utils: Backup the cursor at relevant place in chksum calculation
      net/context: Let's use the new net_ipv4_finalize
      net/ipv4: Always return result of the last finalizer
      net/ipv6: Always return result of the last finalizer
      net/ipv6: Rename net_ipv6_finalize since legacy version disappeared
[galak@spiff zephyr]$ git shortlog   v1.14.0-rc1..
Aaron Tsui (1):
      samples: threads: Fix ASSERTION FAIL without gpio driver

Adithya Baglody (3):
      doc: gcov: Added documentation for code coverage.
      arch: arm: arm_core_mpu: Fixed the build when coverage was enabled.
      tests: benchmarks: timing_info: Print all measurements.

Alberto Escolar Piedras (7):
      test: Kconfig: Correct HAS_COVERAGE_SUPPORT description
      tracing: Add missing isr_exit() for posix arch boards
      tracing: POSIX arch: Remove redundant trace call
      tracing: POSIX arch: Trace switch to main thread
      doc: Add more coverage documentation
      uart: native_posix: Check fcntl() return value
      uart: native_posix: Fix out of bounds access

Alexander Svensen (1):
      Bluetooth: controller: refactored llcp_req/ack test to helper function

Alexander Wachter (12):
      drivers: can: stm32_can rework
      tests: drivers: Add basic tests for CAN driver
      tests: drivers: Add aditional tests for stm32 CAN driver
      drivers: can: Update userspace handlers
      CODEOWNERS: CAN ownership
      CODEOWNERS: Add hwinfo ownership
      include: can: Fix positive and overlapping error numbers
      drivers: can: Make zcan_frame const for sending
      drivers: can: Fix userspace handler parameter types
      drivers: can: stm32_can: Fix shifting zero width or out of bounds
      drivers: hwinfo: change stm32 device id driver from HAL to LL
      tests: drivers: build_all: add CAN to the build tests

Anas Nashif (34):
      tests: adc: reduce footprint by tweaking logging
      sanitycheck: do no overide OVERLAY_CONFIG
      dfu: mcuboot: rename boot_swap_type> mcuboot_swap_type
      posix: rename priority in sched_param struct
      ci: Use latest docker image: 0.6.1
      CODEOWNERS: cleanup owners
      CODEOWNERS: fix path and remove outdated
      CODEOWNERS: prepend / to all entries
      CODEOWNERS: fix syntax for directories
      intel_s1000_crb: do not enable USB by default
      doc: Rework Development Process section
      tests: move testsuite and configs into subsys/
      boards: udoo_neo_full_m4: not a default testing platform
      tests: crypto: increase timeout
      tests: stacks: increase STACK_LEN to 4
      Revert ""tests: posix: add newlib cfg option""
      compiler: add xcc as a standalone compiler
      libc: do not enable newlib on x86_64
      toolchain: abstract setting -nostdinc
      CODEOWNERS: update owners and added xcc/s1000 related lines
      toolchain: Do not hardcode where the toolchain was installed
      doc: update xcc installation instructions
      arch: move common app_data_alignment.ld file
      doc: remove CONFIG_UART_QMSI_1_BAUDRATE from doc
      sanitycheck: handle serial exception
      samples: define harness for samples
      logging: add backend for xtensa simulator
      ci: add option to specify custom range
      sanitycheck: fixed handling of retries
      mbedtls: enable self-test in config-tls-generic.h
      tests: mbedtls: report results once only
      libc: minimal: add prototype of rand()
      Revert ""net: sockets: recv_stream: Check that the underlying net_context active""
      arch: remove unused arch defconfig

Andrei Emeltchenko (14):
      tests: usb: Use UTIL_LISTIFY macros
      usb: dfu: Fix missing break in case statement
      dts: usbserial: Fix USB serial console device name
      net: lldp: Move LLDP structure definition to lldp
      net: lldp: Add optional TLV API
      samples: net: lldp: Set optional TLV system_name
      net: lldp: Move optional End TLV to send function
      usb: dc: native_posix: Fix Coverity bug
      usb: netusb: eem: Use sys_get_le16() helper
      usb: netusb: ecm: Remove forward declaration
      usb: netusb: rndis: Cleanup code
      usb: rndis: Use usb_transfer() for data transfer
      usb: netusb: Remove unused helpers and cleanup
      net: ethernet: Define and use Ethernet frame and datagram size

Andrew Boie (56):
      x86: clear EFLAGS on double fault
      x86: add Kconfig for KPTI
      x86: set up shared kernel page
      x86: modify MMU APIs for multiple page tables
      x86: generate user mode page tables
      x86: implement interrupt stack trampoline
      build: remove meltdown warning
      x86: fix crash in _arch_buffer_validate
      x86: improve stack overflow detection
      tests: fatal: refactor and add user mode tests
      x86: get oops reason code more robustly
      x86: fix exception stack pointer reporting
      x86: fix ROM permissions
      userspace: increase gperf text areas
      gen_mmu_x86: fix overlapping region detection
      app_shmem: include stub macro definitions
      app_shmem: create generic libc partition
      kernel: add stack canary to libc partition
      tests: stackprot: run in user mode
      uart: ns16550: place header in correct spot
      userspace: remove APP_SHARED_MEM Kconfig
      x86: relocate some arch-specific scripts
      x86: gen_gdt.py: expand doctsring
      x86: gen_mmu_x86.py: simplify usage
      x86: gen_mmu_x86: add docstring and copyright
      x86: gen_idt.py: add docstring
      kernel: syscall_handler: get rid of stdarg
...skipping...
      arch: arc: fix the overkilled codes caused by removing APP_MEM
      arch: arc: implement stack pointer random
      arch: arc: refactor the ARC MPU driver

Wentong Wu (1):
      tests: move tests/coverage to subsys/testsuite

Wolfgang Puffitsch (4):
      tests: bsim_bt: Replace ad_parse function with bt_data_parse.
      tests: bsim_bt: Make peripheral role part of test case.
      tests: bsim_bt: Extend connection test case.
      Bluetooth: controller: Support big-endian archs in split controller.

Yong Jin (1):
      boards: stm32f769i_disco: supports ethernet

david leach (2):
      net: tcp: Clean up FIN send on socket shutdown
      net: sockets: Clean up socket shutdown on listen() socket

qianfan Zhao (1):
      arm: Placing the functions which holds __ramfunc into '.ramfunc'

```",59771425
1528,False,True,2019-02-11T17:13:14Z,2019-02-11T17:15:28Z,"```
AJ Palmer (16):
      boards: arm: nucleo_f746zg: Created new board
      boards: arm: nucleo_f746zg: Added ethernet support
      boards: arm: nucleo_f746zg: Added USB support
      boards: arm: nucleo_f746zg: Added I2C support
      boards: arm: nucleo_f746zg: Added PWM support
      boards: arm: nucleo_f746zg: Added SPI support
      stm32: drivers: spi: Added missing devices
      stm32: dts: f7: added i2c4 node
      docs: spi.h: removed dev doxygen comment from struct spi_config
      boards: arm: nucleo_f746zg: Highlight possible pin conflict
      boards: arm: nucleo_f756zg: Created new board and soc definition
      boards: arm: nucleo_f756zg: Added ethernet support
      boards: arm: nucleo_f756zg: Added USB support
      boards: arm: nucleo_f756zg: Added I2C support
      boards: arm: nucleo_f756zg: Added PWM support
      boards: arm: nucleo_f756zg: Added SPI support

Adithya Baglody (67):
      CMakeLists.txt: Set application shared memory dependency
      Bluetooth: Mesh: Enforce proper compilation.
      subsys: app_memory: Fixed the size calculation for power of 2 MPUs
      CMakeLists.txt: Updated the rule for shared memory alignment.
      tests: userspace: Update the required stack size for mps2_an385
      soc: mps2_an385: Added support for MPU
      drivers: timers: systick: Enforce a barrier in _timer_cycle_get_32.
      soc: mps2_an385: Enable Memory Protection unit.
      boards: mps2_an385: Enable userspace for MPS2_AN385.
      tests: kernel: pipe : Update the stack size.
      tests: mem_protect: mem_protect: Update the stack size.
      tests: userspace: Incorrect location to the privileged stack.
      tests: benchmarks: sys_kernel: Reduce the number of loops.
      include: arm: CMSIS header redefining MPU_PRESENT.
      subsys: app_memory: Fixed incorrect linker syntax.
      subsys: app_memory: Fixed the build issue wrt ARC.
      arch: arm: linker.ld: Fixed incorrect placement of noinit section
      kernel: MISRA C guideline compliance for rule 11.6
      kernel: sched: Fixed incorrect argument type of _reschedule()
      kernel: MISRA C: Fixes a few MISRA C issues.
      arch: arm: exc.h: MISRA C violation fix in _IsInIsr
      arch: arc: arcv2_irq_unit.h: MISRA C violation fix.
      arch: kernel_arch_func.h: Fix MISRA violation
      kernel: ksched.h: Incorrect argument type in _pend_current_thread
      include: toolchain: gcc.h: Fixed MISRA C violation.
      kernel: sem: Fix few MISRA C violations.
      linker: arm: place priv.noinit at the end of RAM
      tests: sched: schedule_api: Increase the minimum ram needed.
      kernel: device: MISRA C compliance.
      kernel: queue: MISRA C compliance.
      kernel: alert: Declare tracing variables only when needed.
      lib: rbtree: Fixed incorrect return type for rb_contains
      include: dlist.h: MISRA C compliance.
      kernel: mutex.c: MISRA C compliance.
      scripts: gen_relocate_app.py: Script for relocating files in memory.
      cmake: Added rule and helper functions for code relocation.
      kernel: init.c: Added required hooks for the relocation
      arch: Kconfig: Increased the text area for kobject and priv stack
      samples: code_relocation: An example for code relocation feature.
      tests: benchmarks: timing_info: Remove common variables
      drivers: ipm: ipm_quark_se: Remove object declaration from header
      include: drivers: pci: pci_mgr.h: Create a typdef instead of obj.
      include: stats.h: Packed attribute was incorrect.
      soc: ti_simplelink: cc32xx: soc.h: Incorrect enum definition.
      tests: subsys: fs: Fixed headers which were creating objects.
      samples: rpl_border_router: Fixed headers files.
      CMakeLists.txt: Enable -fno-common globally.
      scripts: gen_relocate_app: Use linker provided size variable.
      include: misc: util: Added new util macros FOR_EACH_FIXED_ARG
      kernel: Change the prototype of k_thread_access_grant.
      tests: Updated all the tests which use k_thread_access_grant.
      tests: coverage: Add Gcov support.
      Gcov: Enable Code coverage reporting over UART.
      Gcov: Added support for ARM.
      Gcov: Added support for x86.
      Gcov: Added linker changes needed by Gcov.
      Gcov: Added Kconfig changes needed by Gcov.
      tests: Increase the stack size by CONFIG_TEST_EXTRA_STACKSIZE.
      scripts: gen_gcov_files.py: Added python script to parse uart dump
      gcov: Add coverage supported boards.
      tests: Dont run coverage for select test cases.
      logging: Increase the stack size when coverage is enabled.
      cmake: Generated files are excluded from coverage.
      tests: coverage: GCOV counter value changed in GCC8.
      x86: fix app shared memory if XIP enabled
      app_shmem: use script for all arches
      CMakeLists: fix app_shmem dependency

Aiden Park (1):
      boards/x86: up_squared: add support for SBL(Slim Bootloader)

Ajay Kishore (4):
      tests: pipe: Enhance tests to improve code coverage
      tests: sched: Use SCHED_MULTIQ for native posix platform
      tests: add tests to validate interrupt nesting feature
      samples: USB mass storage sample.yaml cleanup

Alberto Escolar Piedras (89):
      Bluetooth: controller: Use nRFx functions for PPI reg access
      native_posix: Add control of traces color
      sample: subys: logging: fix for posix arch
      subsys: logging: Fix for no CONFIG_LOG_PROCESS_THREAD
      tests: subsys: logging: log_core fix with inplace process
      subsys: logging: for native_posix use appropriate tracing
      subsys: logger: fix merge error
      CODEOWNERS: Assing maintainer for all native_posix backends
      drivers: ethernet: native: Fix compile issue in RedHat 7
      subsys: shell: support posix arch
      subsys: shell: Add missing dependency to SERIAL
      uart: Add driver for posix arch
      tests: uart: add extra config for native_posix
      native_posix: doc: do not list command line options in doc
      native_posix: doc: reorder peripherals section
      native: doc: Improve UART documentation
      native_posix: doc: Remove legacy shell links
      POSIX arch: Add stub for sys_arch_reboot()
      drivers: timer: native_posix: Support SYSTEM_CLOCK_DISABLE
      Fix: Remove garbage leaked from developer workspace
      gitignore: add hide-defaults-note and a few more files
      CODEOWNERS: assign maintainer for include/arch/posix
      tests: lib: mem_alloc: Blacklist all POSIX arch boards
      drivers: console: native: header fix
      soc: Kconfig: Add options for compatible NRF SOCs
      clock_control: nRF5x: use new compatible SOC symbol
      drivers: timer nRF: simplify kconfig depend
      drivers: timer nRF: use new BabbleSim config option
      drivers: entropy nRF5x : use new compatible SOC symbol
      Bluetooth: Use new nrf COMPATIBLE options
      new simulated board: nrf52_bsim
      nrf52_bsim: Explicitly list the applicable HW models version
      sanitycheck: nf52_bsim testcases to run with other native
      shippable: Add support for nrf52_bsim board
      tests: posix: Bugfix unitialized array in posix_pthread_execution
      nrf52_bsim: Fix possible NULL pointer dereference
      nrf52_bsim: Fix typo in warning message
      nrf52_bsim: Codestyle fix
      posix arch: Improve description of posix_halt_cpu
      native_posix doc: Remove possible macOS support note
      tests: sched: schedule_api: Bugfix for POSIX arch in TICKLESS
      tests: sleep: Bugfix for POSIX arch in TICKLESS
      tests: kernel  tickless: Bugfix for POSIX arch in TICKLESS
      nrf52_bsim: Add compile time check of HW models version
      doc: Linux installation: Add gcc and gcc_mulitlib for Ubuntu
      nrf52_bsim: Support full include paths of nrfx hal files
      tests: sched: schedule_api: Bugfix for POSIX arch in TICKLESS
      tests: kernel: common: Bugfix for POSIX arch in TICKLESS
      tests: kernel: tickless: Bugfix for POSIX arch in TICKLESS
      tests: kernel: sched: Bugfix for POSIX arch in TICKLESS
      tests: kernel: context: Bugfix for POSIX arch in TICKLESS
      tests: Add new BabbleSim based BT test
      tests bsim_bt: Add script to execute the basic connection test
      tests bsim_bt: Add scripts to compile and run tests
      gitignore: Ignore default bsimt_bt test output folder
      tests: Add new bsim based encrypted BLE link test
      ci: Run bsim_bt tests and collect coverage results
      tests: bsim_bt: Add option to re-build incrementally
      ci: Add missing option to control placement of BT tests results file
      uart: native_posix driver: Fix typo
      nrf52_bsim: Require v1.2 of the HW models
      tests: bsim_bt tests: Fix malformed JUNIT results file
      ci: Copy results before handling coverage
      ci: Fail shippable if something fails catastrophically
      ci: Allow setting BSIM_OUT_PATH from environment
      Bluetooth: nordic ECB hal: Bugfix for simulation
      valgrind: Add error supression file for POSIX arch
      sanitycheck: Fail test if the process returns != 0
      sanitycheck: Use supression file for valgrind and dump log
      tests: cmsis_rtos_v2: Bugfix in test which leads to random errors
      nrf52_bsim: arg parsing: Be more user friendly with -nosim
      nrf52_bsim: arg parsing: Do not use bs_args_typical_dev_post_check
      nrf52_bsim: Add support for dynamically registering cmd line args
      nrf52_bsim: Improve compile time check of HW models version
      native_posix: Remove all references to the defunct legacy shell
      tests: Prolong BT encrypted connection test
      nrf52_bsim: Update to support incoming changes to clock driver
      nrf52_bsim: Fix copy pasted comment
      tests: bsim_bt: Compile each project in its own folder
      tests: bsim_bt: Add BLE connection test with split controller arch
      tests: bsim_bt: Rename test script for consistency
      coverage: Bugfix: Missing coverage in nrf52_bsim
      doc: native_posix: Fix minor typo
      arch: posix: Bugfix in POSIX cheats header
      misc: assert_post_action: Treat POSIX arch like others
      sanitycheck: coverage: Tolerate missing source files
      arch: posix: posix_cheats: Do not rename types
      arch: posix: posix_cheats: Add some comments
      doc: native_posix: Add section about subsystems' backends

Aleksandr Makarov (1):
      boards: arm: Add support for ST B-L072Z-LRWAN1 board

Alexander Polleti (8):
      boards: add usb to stm32f4_disco
      c++: Fix compilation of C++ file that includes i2c.h
      crc8: fix const correctness
      dma: check whether memory to memory is allowed
      c++: convert implicit conversion to explicit ones in header files
      logging: reorder designated initializers in __LOG macro
      ethernet: stm32: add MII mode
      pinmux: stm32f4: add MII interface

Alexander Wachter (8):
      drivers: Add hwinfo API
      drivers: hwinfo: add driver support for STM32 device ID
      drivers: hwinfo: add driver support for Nordic NRF device ID
      tests: drivers: Add basic tests for hwinfo_get_device_id API
      drivers: hwinfo: Add shell command for device id
      dts: Fix varying baudrate settings for CAN
      drivers: hwinfo: add driver support for kinetis device ID
      drivers: hwinfo: add driver support for NXP i.mx RT device ID

Alistair Francis (1):
      libc: riscv: Fix the RISC-V ifdef

Anas Nashif (400):
      release: Post-release patch level update
      release: Post-release patch level update
      tests: tinycrypt: consolidate tests
      tests: crypto: rename hmac_prng
      CODEOWNERS: fix syntax
      docs: fixed documenation pointers
      soc: adapt Kconfig/CMake for soc in top /
      x86: move soc/cpu to top-level under soc/
      kconfig: adapt help messages for new location of SoC code
      arm: soc: move arm SoCs to top-dir
      arc: move soc to top-level dir soc/
      xtensa: move soc to top-level dir soc/
      riscv32: move soc to top-level dir soc/
      nios2: move soc to top-level dir soc/
      posix: move soc to top-level dir soc/
      CODEOWNERS: adapt to new location of soc code
      soc: support out of dir soc code
      kconfig: move soc selection to ZEPHYR_BASE/soc/
      build: support out of tree SoC definition
      doc: custom SOC configurations
      scripts: elf_helper.py: run through flake8
      scripts: gen_kobject_list.py: run through flake8
      scripts: gen_priv_stacks.py: run through flake8
      sample: we have dedicated test for single thread
      samples: hello world: print board name
      ci: reduce minions to 5
      ci: disable cache
      ci: Use Ninja with sanitycheck
      samples: openamp: build with ninja
      docs: revamp section introducing Zephyr
      kernel: remove deprecate k_call_stacks_analyze
      gitlint: accept ""'"" in committer names
      doc: Update intro with ble mesh and kernel features
      samples: shell: enable kernel shell
      sanitycheck: fail on check_compliance issues
      sanitycheck: remove special ansi charachters from xml
      Revert ""sanitycheck: fail on check_compliance issues""
      kernel: remove unused macro parameter
      kernel: add a new API for setting thread names
      tests: test k_thread_name_set
      shell: kernel: print thread name
      samples: synchronization: remove unused conf
      samples: synchronisation: set thread names
      logging: rename log_process_thread to logging
      shell: kernel: add more thread data to threads command
      samples: logger: test sample in CI
      samples: logger: exclude qemu_xtensa [REVERTME]
      userspace: move KOBJECT/PRIVILEGED_STACK_TEXT_AREA to Kconfig
      kernel: move to new logger
      arch: setup logging using new logger
      soc: logging: move soc tree to new logger
      kernel: move malloc handling to new logger
      drivers: entropy: remove unused logger kconfig
      drivers: adc: move to new logger
      drivers: audio: move to new logger
      drivers: can: move to new logger
      drivers: clock_control: move to new logger
      drivers: crypto: move to new logger
      drivers: i2c: move to new logger
      drivers: dma: move to new logger
      samples: fix prj.conf to use new logger
      samples: crypto: move to new logger
      samples: move crypto sample to new logger
      driver: pwm: use new logger
      samples: led_lp5562: move to new logger
      samples: led_lp3943: move to new logger
      samples: led_ws2812: move to new logger
      samples: led_pca9633: move to new logger
      samples: led_lpd8806: move to new logger
      samples: flash_shell: move to new logger
      samples: led: fix default log level kconfig
      driver: spi: use new logger
      tests: crypto: use printk instead of logging
      arch: nxp_mpu: fix types in log macro
      drivers: spi_dw: remove debug message
      drivers: display: define DISPLAY log level
      samples: display: set log level correctly
      tests: logging: disable default log modules
      subsys: nvs: move to new logger
      nvs: fix style
      gpio_sch: fix log message
      gpio: log: rename level variable
      dfu: log: rename level variable
      console: move to new logger
      telnet_console: fix syntax
      websocket_console: fix syntax
      tests: crypto: use CONFIG_LOG
      ztest: remove unused include of sys_log.h
      kernel: remove deprecated k_thread_cancel
      driver: i2s: move to new logger
      drivers: i2s_cavs: fix syntax using uncrustify
      drivers: i2s_sam_ssc: fix syntax using uncrustify
      driver: led: move to new logger
      drivers: dma: fix logger call
      drivers: flash: fix Kconfig dependencies
      drivers: flash: move to new logger
      drivers: led_strip: move to new logger
      drivers: rtc: move to new logger
      drivers: wifi: move to new logger
      drivers: modem: move to new logger
      drivers: i2c: enable logging for drivers loading i2c-priv.h
      drivers: soc_flash_nios2_qspi: fix logging formatting
      samples: olimex_stm32_e407: move to new logger
      samples: dfu: move to new logger
      samples: usb: move to new logger
      tests: ring_buffer: move to new logger
      tests: boards: intel_s1000_crb: move to new logger
      tests: s1000: rename board
      boards: intel_s1000_crb: polish docs
      intel_1000_crb: fix path to xt-ocd
      west: runner: fix naming and paths to xt-ocd
      sanitycheck: force configured toolchain
      sanitycheck: run tests based on sub-testcases
      sanitycheck: fix skipped element in junit output
      Revert ""linker: use wildcards in rel-sections.ld""
      Revert ""linker: more .rel for orphan sections""
      Revert ""arch: arm: linker.ld: Fixed incorrect placement of noinit section""
      Revert ""linker: warn about orphan sections""
      Revert ""arm: cypress/psoc6: add SoC specific linker input sections""
      Revert ""linker: allow SoC to insert linker script fragments""
      tests: fatal: fix condition for NXP MPU
      drivers: modem: register logging module
      drivers: clock_control_mcux: register logging module
      sensors: lis2dh: move header after log module init
      tests: remove bat_commit, replace core with kernel
      tests: pm -> powermanagement
      samples: fix sample tags
      tests: fix test identifier
      tests/samples: rename 'app' tag to something meaningful
      tests/samples: cleanup tags
      drivers: grove: move to new logger
      drivers: lsm303dlhc_accel: move to new logger
      drivers: lsm303dlhc_magn: move to new logger
      drivers: usb_dc_nrfx: move to new logger
      drivers: ieee802154_cc2520: move to new logger
      subsys: disk access: move to new logger
      tests: interrupt: disable riscv32
      shell: kernel: list configured devices
      drivers: gpio: add shell for controlling GPIO
      flash: make flash shell generic
      build: do not rename elf file, copy it
      sanitycheck: support requirements on env variables
      nrf52_bsim: declare BSIM_OUT_PATH as required env var
      arch: increase privileged stack with mpu stack guard
      grove: lcd: move grove lcd driver to drivers/display
      sensors: move grove sensors under drivers/sensor
      sensors: qdex_nrfx: move to new logger
      samples: ms5837: move to new logger
      logging: deprecate SYS_LOG_ macros
      tests: remove logger-hook test
      sanitycheck: make nrf51_pca10028 the default for cortex-m0
      intel_s1000: include soc.h where needed
      drivers: timer: use weak functions after declaration
      toolchain: xcc: __builtin_unreachable needs to be a loop
      drivers: interrupt_controller: fix cmake file
      CODEOWNERS: maintainer updates
      dfu: image_mgr: make Kconfigs depend on IMG_MANAGER
      drivers: spi_dw: remove unused LOG_DOMAIN define
      subsys: disk: move conditional location
      subsys: filesystem: move conditional location
      subsys: mcumgr: make Kconfigs depend on MCUMGR
      logging: make LOG_LEVEL depend on LOG
      samples: echo_server: remove features to make binary fit
      shell: add PCI shell
      tests: add Kconfig for testing via shell
      tests: add board_shell test app
      ci: use sdk 0.9.5
      riscv32: hifive1: make board run in qemu
      boards: qemu_nios2: switch to ns16550 UART
      qemu_riscv32: use hifive1 configuration
      sanitycheck: only log printable chars
      sdk: require Zephyr SDK 0.9.4
      doc: update docs with latest SDK
      sanitycheck: make mps2_an385 default qemu for ARM
      boards: dts: define default console only
      tests: make ethernet build test depend on netif
      boards: frdm_k64f: move modem configurtion to overlay
      boards: dts: remove CONFIG_BT checking
      sanitycheck: clarify -s vs -T options in ztest doc
      boards: qemu_x86: remove deprecated qemu options
      samples: bmg160: use default log level
      scripts: remove unused ci scripts
      ci: move ci scripting from .shippable to a script
      doc: Add issue templates
      ci: build docs on last node
      stats: move from misc to subsys/stats
      kconfig: distribute misc/Kconfig option where they belong
      s1000: remove IPM config from board defconfig
      drivers: add semicolon after LOG_MODULE_REGISTER
      intel_s1000: do not enable options in _defconfig
      boards: xtensa: remove stray CONFIG_BOARD_XTENSA
      xtensa: fix dts_fixup.h with new DT_ prefix
      sanitycheck: filter by test fixtures
      sanitycheck: ignore generated headers in outdir
      sanitycheck: remove dependency of coverage on native_posix
      sanitycheck: use overlays to enable coverage
      usb: netusb: fix log level macro
      Revert ""Build: Offsets lib as OBJECT not STATIC""
      sanitycheck: remove unused platforms keyword
      ci: use v0.4-rc14 image
      ci: do not build btsim if we are not going to run it
      ci: overhaul check-compliance.py script
      ci: update to docker image 0.5-rc2
      ci: fix skipped testcase status posting
      gitignore: ignore IDE files
      sanitycheck: support running tests out of the tree
      sanitycheck: outdir should not be relative to ZEPHYR_BASE
      ci: do not build docs in main CI job
      Revert ""ci: do not build btsim if we are not going to run it""
      net: coap: Move both CoAP implementations into one Kconfig
      ci: update to latest docker image
      boards: quark_d2000_crb: fix board name
      boards: add docs for quark_se_c1000_devboard
      gitlint: do not start with subsys:
      samples: zperf: expand test coverage
      samples: http_server: fixed test dependencies
      ci: move pos processing to the CI script
      ci: define BSIM_* variables in ci script directly
      ci: remove sanitycheck options from .shippable
      ci: pass pull request number to CI script
      ci: use set -x for verbosity
      ci: PULL_REQUEST is reserved, use something else
      ci: do not build btsim if not installed
      ci: do not use pull request branch with commit based CI
      crc: move all crc APIs into one header
      crc: deprecate old headers and issue warning when used
      Revert ""samples/display: Introduce the cfb_shell sample app""
      Revert ""shell: Add initial code for Character Framebuffer shell module""
      Revert ""subsys/fb/cfb: Introduce cfb_get_numof_fonts function""
      Revert ""subsys/fb/cfb: Introduce cfb_framebuffer_invert function""
      ci: set second pass options correctly
      ci: remove bsim result options
      samples: cmsis_rtos_v1: remove tracing test
      templates: Update issue templates
      sanitycheck: add new _TEXT_SECTION_NAME_2 section to whitelist
      doc: add kernel version API to doxygen
      doc: document slack channel in the main README.rst
      doc: intel_s1000_crb: add picture and link
      watchdog: put in correct doxygen group
      doc: doxygen group power management APIs
      doc: kernel: fix obj param in doxygen comment
      doc: logging: fix doxygen references
      doc: group file system/storage APIs
      doc: put websocket library under networking
      doc: group logging and deprecate SYS_LOG_*
      drivers: flash_mcux: remove inclusion of sys+log.h
      samples: cfb: move native_posix config to boards
      sanitycheck: filter by device tree configs
      samples: threads: filter by device tree
      samples: disco: make sample more generic
      samples: basic: remove whitelisting and use DT filters
      samples: gpio: make sample generic and use DT
      samples: move userspace sample out of basic/
      power: rename APIs and removing leading _
      power: rename api sys_soc -> sys_
      ci: update to v0.5-rc5 docker file
      cmake: increase minimal required version to 3.13.1
      ext: fix path to source files with new cmake
      CODEOWNERS: update code owners
      xtools: support xtensa hal
      boards: qemu_xtensa: support xtools
      doc: net-app: Fix structure and section layout
      doc: remove leading 'Zephyr' for some documentation sections
      doc: restructure documentation
      doc: reloacation: shorten long lines
      doc: remove ip stack migration guide
      doc: minor tweaks to documentation guidelines
      doc: set author to the Zephyr project
      doc: remove SYS_LOG from documentation
      doc: move development process from the wiki
      doc: Add top-level navigation grid
      doc: remove unused theme
      drivers: spi_sam: initialize tx and rx
      linker: add orphan sections to linker script
      ci: reduce minions to 5
      sanitycheck: convert gcov data to gcda
      sanitycheck: add option to specify platforms with coverage support
      linker: add .note.GNU-stack to arc linker
      sanitycheck: do not keep extending timeout
      qmsi: remove handling of qmsi library
      power: remove obsolete power samples
      ci: remove check-compliance script
      tests: ipm: disable on qemu_x86_64 [REVERT ME]
      debug: move segger configs to subsys/debug
      cmake: fix assert message about misc/Kconfig
      lib: flatten all loose components into one lib
      power: move reboot.c to subsys/power
      printk: move into lib/os
      timer: cleanup dependencies in kconfig
      interrupt_controller: cleanup dependencies in kconfig
      hpet: remove unused HPET_TIMER_DEBUG option
      hpet: remove unused HPET_TIMER_LEGACY_EMULATION
      hpet: remove HPET_TIMER_*_EDGE and HPET_TIMER_LEVEL_*
      include: remove unused header file gdb_server.h
      doc: move logger to be main logging entry in doc
      doc: move source structure to application/
      doc: move kernel overview up
      doc: nvs: Change document title
      doc: settings: shorten title
      doc: add extension to handle HTML redirects
      requirements: update to pyocd 0.15.0
      doc: turbo mode for kconfig options
      doc: add extension for linking github files
      doc: tweak doxygen css and remove top border
      doc: whitelist CONFIG_NET_MGMT_EVENT in doxygen
      kernel: add cpu_idle functions to a doxy group
      doc: threads: merge into one document
      doc: kernel: flatten kernel docs and add API references
      doc: kernel: use zephyr_file role
      doc: move usermode API documentation
      doc: move logger API reference
      doc: move shell API documentation
      toolchains: move zephyr sdk host tools to toolchain folder
      toolchain: Support multiple versions of the Zephyr SDK
      coc: move to markdown format
      sanitycheck: adapt default boards
      linker: x86: add orphan linker sections
      ci: Use west to clone zephyr
      ci: install v0.6 docker image
      sanitycheck: link with --coverage only for native_posix
      sanitycheck: add option to point to gcov-tool
      scripts: gen_gcov_files: report if data capture is not complete
      samples: mpu_stack_guard_test: adapt filters
      sanitycheck: Handle data over UART from gcov
      kconfig: altera: remove undefined kconfig usage
      arm: CONFIG_ARM_SAU -> CONFIG_CPU_HAS_ARM_SAU
      kernel: fix typo in kconfig name
      doc: move device driver model API reference
      doc: move PM API to PM section
      doc: move USB API to USB section
      doc: add peripherals reference
      doc: move version API to kernel
      doc: fix link to contribution guide
      doc: move sensor APIs to main sensor doc
      doc: move sensor doc to peripherals section
      doc: group storage components
      doc: rename kconfig section
      boards: remove pulpino board
      ci: do not send CI messages to slack
      ci: do not abort if west is already initialised
      ci: run_ci.sh: make script run locally
      tests: intel_s1000: fixed test to use new DT defines
      flash_map: fix SPI_NOR DT label define
      gpio_shell: use convenience macros
      drivers: gpio: enable gpio_shell in board_shell
      flash: shell: fix dependency on FLASH_PAGE_LAYOUT
      tests: board_shell: add flash support
      kernel: fix smp build on esp32
      doc: consolidated filesystem API reference
      doc: display: cleanup display API page
      doc: restructure Bluetooth docs
      doc: bluetooth: split API docs
      doc: add bluetooth to api reference
      doc: changed structure and layout
      doc: move release notes to own folder
      doc: rename device driver section
      doc: device driver and dts cleanup
      doc: netowrking: split API reference
      net: lwm2m: add  doxygen group
      doc: networking: move API reference to new section
      doc: net: enable more net options in doxygen
      doc: move networking/bluetooth to user/developer guides
      doc: move kconfig docs into one document
      doc: update known issues for new structure
      doc: introduce final structure
      doc: change board dts documentation with new URLs
      doc: restructure and create index pages
      sanitycheck: return build.log when we think we crashed
      tests: common: move errno test to common
      tests: common: move boot_delay test to common
      tests: common: move irq_offload test to common
      tests: benchmarks: remove footprint tests
      tests: irq_offload: remove irq_offload test
      tests: remove aon_counter test
      samples: fix alarm sample doc and inclusion
      boards: quark_se_c1000_ss_devboard: fix build warning
      sanitycheck: support filtering based on cmake cache
      toolchain: espressif: mark newlib support false
      samples/tests: filter based on toolchain features
      counter: qmsi: use correct function prototype
      doc: create an empty Kconfig.modules
      ci: do not build all tests when docs/images change
      ci: tests: do not build all tests when docs/images change
      boards: fix intro text for many boards
      doc: boards: move all board docs to be index.rst
      boards: qemu_x86_64 can be built with host compiler
      toolchain: host toolchain does not support newlib
      x86_64: use host toolchain
      board: up_squared_sbl: fix board identifier
      doc: boards: make board images consistent with board name
      boards: 96b_carbon_nrf51: move note below overview
      boards: rv32m1_vega: move image under overview
      boards: up_squared: add intro and image
      doc: boards: split paragraph into multiple
      boards: galileo: add image
      boards: qemu: add image to qemu boards
      boards: minnowboard: add image to qemu boards
      docs: nrf52_blenano2: remove outdated info from docs
      docs: add figure to board doc template
      logger: xtensa: increase logger stack

Andrei Emeltchenko (129):
      net: lldp: Implement LLDP RX API
      samples: lldp: Add simple parsing to sample
      usb: dc: Clean doxygen documentation
      doc: Using doxygen comments from the code for USB DC
      usb: device: Clean doxygen documentation
      doc: Using doxygen comments from the code for USB Core
      logger: Rename SHOW_COLOR and FORMAT_TIMESTAMP options
      logger: Add native backend for native_posix
      native_posix: Add logger configuration backend
      logger: Add init() api and simplify init and activate
      logger: Move native_posix_backend definition
      logger: Simplify UART backend initialization
      doc: usb: Move generated api to the right place
      doc: usb: Use contents instead of hand made structure
      samples: zperf: Fix sanity check with NET, USB and logs
      usb: hid: Add status_cb to hid ops
      usb: hid: General code cleanup
      samples: hid: Refactor basic HID sample
      samples: hid: Add README for the sample
      samples: hid-mouse: Trivial README correct
      samples: hid: Make callbacks static
      samples: hid: Use delayed work for report send
      tests: Fix sanity_check
      usb: Use always single callback definition
      usb: Use const for status_callback parameter
      samples: hid: Use new logger
      netusb: Refactor ECM code
      netusb: Refactor EEM code
      netusb: Refactor RNDIS code
      netusb: Register each function
      netusb: Move init() to separate functions
      netusb: Remove ifdef registration for functions
      usb: Enable log level menu after enabling module
      wpanusb: Use USB_DBG instead of NET_DBG
      usb: logs: Remove newlines from the logs
      wpanusb: Add registering logs
      usb: loopback: Add documentation markers
      doc: usb: Use new USB API for sample code
      net: samples: Clean overlay-netusb.conf
      net: samples: Refactor netusb configuration for http_server
      net: llmnr_responder: Fix unused Warning
      net: llmnr_responder: Fix uninitialized use Warning
      usb: usb_dc_nrfx: Remove dead code
      samples: net: Add 802154 overlay configuration for reel_board
      samples: net: Correct FRDM + CR20A configuration
      usb: Do not include function name twice
      usb: logs: Rename USB_DBG to LOG_DBG
      usb: logs: Rename USB_ERR to LOG_ERR
      usb: logs: Rename USB_INF to LOG_INF
      usb: logs: Rename USB_WRN to LOG_WRN
      usb: hid: Implement Return HID Descriptor
      usb: hid: Define helper definitions and cleanup code
      usb: hid: Trivial syntax fix
      usb: msc: Set default Serial Number string
      usb: msc: Do not give warning after SET_INTERFACE
      usb: msc: Check input parameters for class handle
      ieee802154: Remove dead code
      ieee802154: Allow to set debug for RAW_CHANNEL
      usb: console: Notify user about incorrect configuration
      usb: testusb: Add README to the sample
      reel_board: Do not include Bluetooth to every project
      samples: mesh_badge: Update project config
      usb: Fix unaligned access
      usb: device: Use sys_le16_to_cpu conversion
      scripts: Add net and tftp to grub
      doc: up_squared: Clean up documentation
      doc: up_squared: Use contents instead of hardcoded toc
      doc: up_squared: Add network booting documentation
      pci: Fix presentation of PCI devices
      pci: Enable pci shell only when shell is enabled
      pci: Skip scanning Host Bridge
      pci: Scan all PCI buses
      pci: Fix endless loop scanning PCI devices on up_squared
      pci: Do not scan all functions for single function device
      pci: Use logger
      pci: Remove inlines
      pci: General code cleanup
      wpanusb: Correct configuration for frdm + mcr20a
      wpanusb: Add sanity check configurations
      doc: usb: Move API documentation to usb_api
      net: logs: Enable logging for NET_RAW
      samples: sensors: Add accelerometer based HID mouse
      usb: cdc_acm: Fix composite build
      usb: driver: Add native_posix USB driver
      usb: tests: Add basic unit test for USB drivers
      native_posix: Enable native posix USB driver if USB enabled
      doc: Add documentation for using native_posix USB driver
      usb: native_posix: Use non-blocking socket
      usb: native_posix: Use non-blocking connection socket
      usb: native_posix: Move to new logging subsystem
      usb: native_posix: Implement other then Control transfers
      tests: usb: Test USB data allocations in sections
      usb: Add instance parameter to descriptors definitions
      samples: fxos8700-hid: Use HID_MOUSE_REPORT_DESC macro
      usb: Remove unused variable
      samples: cdc_acm: Remove unneeded config options
      sample: cdc_acm: Add overlay configuration for composite device
      samples: cdc_acm: Add composite test configuration
      tests: usb: Include desc_sections test for native_posix
      teste: desc_sections: Add simple test
      tests: device: Remove wpanusb mentions from the test
      usb: native_posix: Fix ep_configure() and ep_mps()
      tests: usb: Add more basic device API tests
      usb: cdc_acm: Allow to create several CDC ACM devices
      usb: cdc_acm: Correct debug logging
      usb: Refactor usb_interface_config callback
      usb: device: Add composite status callback
      usb: cdc_acm: Use usb_cfg_data from config_info
      usb: cdc_acm: Add macros for multi instance configuration
      usb: cdc_acm: Add menuconfig option for multiple instances
      usb: hid: Add configuration options for second HID instance
      usb: hid: Add HID Device concept
      samples: hid: Use HID Device interface for samples
      samples: hid-mouse: Refactor and use new HID Device interface
      tests: hid: Use HID Device interface
      samples: fxos8700-hid: Use HID Device interface
      samples: usb: Update samples for new port name
      usb: cdc_acm: Use u8_t for interface number
      usb: hid: Add get_dev_data_by_cfg helper
      usb: hid: Add sys_le16_to_cpu() conversion
      usb: Add helpers for getting common device data
      usb: hid: Use new device data interface
      usb: cdc_acm: Use new device data interface
      samples: cdc_acm: Add composite CDC ACM sample
      samples: cdc_acm_composite: Add README documentation
      usb: cdc_acm: Refactor Kconfig for CDC ACM
      usb: msc: Fix redeclaration of enumerators
      tests: util: Correct test name
      tests: util: Add UTIL_LISTIFY tests

Andrei Gansari (20):
      boards: mimxrt1050_evk: EVKB documentation update
      drivers: eth_mcux: kinetis networking device Tree
      dts: added nxp.kinetis-ptp interrupts
      drivers: eth_mcux: adding i.mx-rt support
      mimxrt1050_evk: enabling networking hardware
      samples: net: some samples min_flash = 140k
      boards: mimxrt1050_evk: networking added to documentation
      mimix1050rt: ethernet initialization corrected
      mimix1050rt: gPTP build fix
      samples: minor documentation fixes
      drivers: eth_enc28j60: moved to dts
      mimxrt1050_evk: default external flash and sdram
      mimxrt1050_evk: cache enable
      mimxrt1050_evk: eth_mcux: driver fixup
      mimxrt1050_evk: eth_mcux: prevent PHY NANDTree
      tests: CONFIG_NET* fixup
      net: subsys: fixed comments CONFIG_NET*
      net: removed CONFIG_NET_APP
      samples: net: removed unused common cmake
      drivers: eth_dw: changed stranded error message

Andrei Laperie (4):
      net: gptp: Replace calls to power function with pre-computed values
      dts: Reduced CAN bitrate for stm32f072b_disco
      doc: Updated CAN part of stm32f072b_disco documentation
      doc: Documenting enablement of UART1 support for nrf52840_pca10056

Andrew Boie (66):
      kernel: add dynamic interrupt API
      doc: add details about dynamic interrupts
      x86: add dynamic interrupt support
      arch: common: add function for updating IRQ table
      arc: add _arch_irq_connect_dynamic()
      arm: add _arch_irq_connect_dynamic()
      nios2: add _arch_irq_connect_dynamic()
      riscv32: add _arch_irq_connect_dynamic()
      xtensa: add _arch_irq_connect_dynamic()
      interrupts: simplify position of sw ISR table
      interrupts: use weak linkage instead of linkonce
      kernel: expose device_get_binding() to user mode
      k_mem_slab: track as a kernel object
      kernel: expose k_busy_wait() to user mode
      i2s_handlers: fix incorrect k_mem_slab_free arg
      i2s: add i2s_configure() as a system call
      i2s_sam_ssc: fix compiler warning
      i2s: fix slab leak in i2s_buf_write()
      i2s: fix bad argument to k_mem_slab_free()
      tests: pci_enum: don't use STDOUT_CONSOLE
      tests: i2s_api: disable log subsystem
      ztest: wait for all suites to finish
      tests: i2s_api: run in user mode
      tests: test dynamic IRQ APIs
      x86: atom: do not select application memory
      tests: don't enable application memory
      boards: x86: don't turn on mem protection
      workqueues: remove object init calls
      workqueues: don't put k_work in special section
      kernel: add user mode work_q capability
      userspace: add additional debug to elf_helper
      CODEOWNERS: add owners to mem protection scripts
      kernel: add note in device.h
      elf_helper: skip SYS_INIT() ""devices""
      x86: print helpful message on FPU exception
      x86: always build the page fault handler
      kernel: check retval of driver init
      kernel: fix x86 stack protector with later GCC
      tests: mem_pool_api: reduce stack usage
      userspace: eliminate warning in process_gperf.py
      Revert ""interrupts: use weak linkage instead ...""
      arch: arm: fix error reporting for stack overflow
      userspace: easy checking for specific driver
      printk: fix printing 64-bit hex values
      printk: don't print incorrect 64-bit integers
      kernel: remove experimental tag from userspace
      app_shmem: delete parallel API for domains
      app_shmem: renamespace and document
      app_shmem: auto-initialize partitions
      gen_isr_tables: error out on duplicate irqs
      x86: remove support for non-PAE page tables
      gen_mmu_x86: remove unused function
      arc: uncrustify MPU sources
      userspace: do not auto-cleanup static objects
      tests: mem_protect: fix Kconfig
      tests: userspace: remove extra_sections
      tests: remove app_memory test
      app_shmem: overhaul partition specification
      tests: set CONFIG_MAX_THREAD_BYTES for a few tests
      ztest: setup a default app memory domain
      gen_app_partitions: add library support
      x86: don't automatically configure newlib malloc
      libc: set up memory partitions
      tests: convert to use app shared memory
      userspace: remove APPLICATION_MEMORY feature
      x86: fix app_smem MMU permissions

Andrzej Głąbek (50):
      ext: hal: nordic: Update nrfx to version 1.2.0
      drivers: gpio: nrfx: Use GPIOTE HAL for checking allocated channels
      ext: hal: nordic: Update nrfx to version 1.3.0
      ext: hal: nordic: Update nrfx adaptation layer
      drivers: adc: nrfx: Use SAADC HAL for setting the burst mode
      ext: hal: nrfx: Update README after upgrading to version 1.3.0
      ext: hal: nordic: Update nrfx to version 1.3.1
      samples: reel_board: Change a DTS-derived label to the alias one
      bluetooth: controller: nrf5: Use pre-programmed PPI channels
      bluetooth: controller: nrf5: Reorder used PPI channels
      scripts: dts: Use DT_ prefix in generated labels
      dts_fixups: Update labels generated from DTS with DT_ prefix
      drivers: serial: Update DTS-derived labels with DT_ prefix
      soc: cc2650: Update DTS-derived labels with DT_ prefix
      dts_fixups: Use DT_ prefix in all defined labels not related to Kconfig
      drivers: serial: Update more DTS-derived labels with DT_ prefix
      ext: hal: nrfx: Import soc/nrfx_coredep.h from nrfx 1.3.1
      ext: hal: nordic: Update nrfx to version 1.4.0
      drivers: usb_dc_nrfx: Align with nrfx version 1.4.0
      ext: hal: nordic: Update nrfx to version 1.5.0
      drivers: gpio_nrfx: Remove undesired NRF_P0 definition
      drivers: serial: nrf: Remove false dependency on the gpio driver
      drivers: nrf: Enable nRF drivers by default in Kconfig
      drivers: spi: nrfx: Set default value of SPIM3 RX delay to 2
      boards: nrf: Remove redundant Kconfig adjustments
      boards: nrf: Enable ADC, I2C, and SPI instances by default
      tests: drivers: Remove redundant Kconfig adjustments for nRF boards
      samples: Remove redundant Kconfig adjustments for nRF boards
      drivers: adc: nrfx: Correct log module name in adc_nrfx_adc.c
      tests: drivers: adc: Remove needless inputs definitions
      tests: drivers: adc: Revert inappropriate changes
      tests: drivers: adc: Add a test case for invalid requests handling
      drivers: adc: Fix handling of invalid sampling requests
      drivers: i2c: nrfx: Add support for TWIM2 and TWIM3
      drivers: serial: nrfx: Add support for UARTE2 and UARTE3
      dts: nrf: Add bindings for CLOCK, POWER, RTC, and TIMER peripherals
      dts: nrf9160: Add rtc0 node and replace nvmc node with alias
      dts: nrf9160: Add nodes for PWM peripherals
      ext: hal: nordic: Add nrfx_config for nRF9160 SoC
      drivers: clock_control: nrf: Use IRQ number symbol generated from DT
      drivers: nrf: Adjust clock_control and timer drivers for nRF9160
      drivers: pwm: nrf: Correct dependency of PWM_NRFX Kconfig option
      drivers: bluetooth: hci_spi: Use DT instead of Kconfig to get HW params
      dts: bindings: Add separate binding for Nordic nRF Family SPI Slave
      samples: bluetooth: hci_spi: Use DT instead of Kconfig to get HW params
      samples: bluetooth: Fix hci_spi sample
      boards: nrf: Indicate watchdog as supported on Nordic DK boards
      dts: nordic: Enable wdt nodes by default for all nRF SoCs
      drivers: pwm: nrf: Use HW PWM by default when available
      boards: nrf: Indicate pwm as supported on Nordic DK boards

Andrzej Puzdrowski (29):
      ext: nffs: bugfix of possible to corrupt filename
      subsys: storage: flash_map: add API for check flash driver support
      ext: lib: mgmt: mcumgr: update to latest master
      subsys/settings: stream-style encoding and decoding to/from storage
      tests: subsys: settings: stream encoding tests
      tests: subsys: settings: common tests rework
      tests: subsys: settings: fcb-backend tests rework
      tests: subsys: settings: fs-backend tests rework
      tests: subsys: settings: fcb-int tests rework
      settings: make base64 encoding optional
      tests: subsys: settings: extend nffs back-end testing
      tests: subsys: settings: extend fcb back-end testing
      settings: add API for check value size
      tests: subsys: settings: tests value get len API
      settings: add delete key-value pair API
      bluetooth: common: Add BT hexdump
      bluetooth: host: align code to reworked settings
      bluetooth: host: mesh: align code to reworked settings
      sample: host: mesh: onoff_level_lighting align code to reworked settings
      settings: fix key-value duplication check
      drivers: flash: support NRF UICR operations
      drivers: flash: fix the regular access range check
      settings: fix value-len-get while base64 is enabled
      doc: subsystem: settings: loading data behavior description
      subsys/settings: fcb compress areas only once
      doc: subsystem: nvs Added troubleshooting paragraph
      tests/subsys/storage/flash_map: use auto-generated fa ID
      usb/class/usb_dfu: use flash_map data instead of macro labels
      usb/class/usb_dfu: use predefined string for image descriptors

Andy Gross (8):
      serial: Add Support for ARM PL011 UART
      arch: arm: mpu: arm_mpu: Fix compiler error on stack_obj
      ARM: Add r3 to clobber list when configuring stack guard
      ARM: Fix push/pop alignment on ARM platforms
      shell: Allocate proper amount of history slab memory
      kernel: Enforce k_mem_slab block size alignment
      samples: net: Add Google IOT Cloud full stack application
      ext: crypto: mbedtls: Fix uninitialized variable

Andy Ross (138):
      sys_clock.h: Remove asm guards
      kernel.h: Header hygine, move clock/timer handling
      sys_clock.h: Make ""global variable"" APIs into proper functions
      clock: Remove CONFIG_TICKLESS_KERNEL_TIME_UNIT_IN_MICRO_SECS
      sys_clock.h: Remove sys_clock_ticks_per_sec()
      sys_clock: Make sys_clock_hw_cycles_per_tick() a proper API
      sys_clock: Make clock_always_on true by default
      sys_clock: Fix unsafe tick count usage
      system_timer.h: Remove ASMLANGUAGE guard
      sys_clock: Fix up tick announce API
      drivers/timer: Unify timeout setting APIs
      include/system_timer.h: Timer API cleanup
      timer: Clean up hairy tickless APIs
      idle: Remove needless ""expired"" logic in sys_power_save_idle()
      idle: Fix tickless timeout behavior
      kernel/timeoutq: Uninline the timeout methods
      kernel/sys_clock.c: Add asserts to watch dueling ""set time"" APIs
      kernel: Remove clock_always_on control from k_busy_wait()
      sys_clock.h: Remove variance of _TICK_ALIGN with TICKLESS_KERNEL
      kernel/sys_clock: Fix build when !SYS_CLOCK_EXISTS
      drivers/timer: Add default z_clock_set_timeout() fallback
      kernel: New timeslicing implementation
      kernel/include: Move stubs for timeout functions to their declarations
      kernel/timeout: Prepare unification of timeout/thread wait_q fields
      kernel/timeout: Remove timeout wait_q field
      kernel/timeout: Eliminate wait_q parameters from API
      kernel/timeout: Refactor API
      system_timer.h: Change ""now"" uptime API to be simpler for drivers
      kernel: Move timeout_remaining API
      kernel: New timeout implementation
      tests/kernel: Bump stack size for mem_protect/stackprot
      kernel: Checkpatch fixups
      system_timer.h: Update docs
      kernel/kconfig: Move TICKLESS options out of power management tree
      kernel/sched: Remove spurious locking
      kernel/sched: Fix timeslicing predicate
      kernel/timeout: Fix synchronization in z_tick_get_32()
      include/drivers: Fix docs on z_clock_set_timeout()
      kernel/timeout: Fix announcement tick logic
      tests/kernel/context: Disable test_kernel_interrupts when tickless
      kernel/timeout: Fix elapsed logic
      tests/kernel/context: Skip test_kernel_cpu_idle when tickless
      kernel/timeout: Clamp ticks argument to lower bound
      kernel/sched: Fix timeslice accounting for already-elapsed ticks
      kernel/timeout: Fix build breakage due to stdio name collision
      xtensa: Disable interrupts on entry to _Cstart
      drivers/timer: New ARM SysTick driver
      boards/arm/qemu_cortex_m3: Make it tickless by default
      drivers/timer: Add a standard workaround for known qemu issues
      tests/kernel/benchmarks: Disable TICKLESS_KERNEL for ""no tick"" tests
      tests/kernel/context: Limit no-tick-during-irq-load to !TICKLESS
      tests/kernel/interrupt: Shrink very long k_busy_wait() argument
      drivers/timer: Select tickless via driver kconfig flag
      drivers/timer: Add more default stubs
      drivers/timer/hpet: Completely new, simplified, tickless-capable driver
      kernel/sched: Fix race in k_sched_time_slice_set()
      drivers/timer: Reworked NRF driver with tickless support
      drivers/timer: New, tickless-capable RISC-V machine timer driver
      drivers/timer: New xtensa timer with tickless support
      misc/printk: Make the default char_out routine weak
      esp32: Enable an early-boot printk hook
      xtensa: Don't call ISRs for disabled interrupts
      xtensa legacy: Fix stale use of removed kconfigs
      drivers/timer/xtensa_sys_timer: Add hook for old-style interrupt handling
      lib/mempool: Fix spurious -ENOMEM due to agressive latency control
      lib/mempool: One more spurious -ENOMEM condition
      kernel/timeout: Fix race with clock timeout setting
      lib/cmsis_rtos_v2: Fix overflow in osKernelGetInfo()
      kernel/timeout: Refactor z_clock_announce() loop
      kernel/timeout: Fix ""not in list"" predication in timeout handling
      kernel/sched: Remove stale comment
      kernel/timeout: Don't reset imminent timeouts
      tests/kernel/timer_api: Synchronize racy subtest
      sanitycheck: Add --disable-size-report option
      samples/net/echo: Remove duplicate test case
      samples/net/echo: Mark OpenThread test cases as ""slow""
      scripts/sanitycheck: Don't build ""slow"" tests either
      kernel: Add missing include
      include/linker_defs.h: Remove noop architecture detection
      drivers/timer/hpet: Fix default IRQ
      include/arch: Steal native_posix bit manipulation routines
      tests/kernel/threads/thread_apis: Fix include hygine
      tests/benchmarks/timing: Unify the ""standard zephyr timing"" cases
      arch/x86_64: cmake: Make libgcc detection optional
      cmake/compiler/gcc: Fall back to host compiler for x86_64
      arch/x86_64: New architecture added
      kernel/swap: Simply/robustify return value handling
      drivers/timer/hpet: Fix logic for !TICKLESS
      samples/mpu/mpu_stack_guard_test: Whitelist x86_64
      tests/posix/common: Correct TEST_EXTRA_STACKSIZE usage
      tests/kernel/mem_protect/stackprot: Whitelist x86_64
      tests/kernel/sched/schedule_api: Honor TEST_EXTRA_STACKSIZE
      tests/kernel: Simplify timer spinning
      tests: samples: Disable newlib tests on x86_64
      tests: cmsis: Disable two cmsis portability tests on x86_64
      kernel: Add CONFIG_SWAP_NONATOMIC flag
      kernel/sched: Predicate SWAP_NONATOMIC workaround properly
      kernel/sched: SWAP_NONATOMIC workaround for timeslicing
      kernel/timeout: Fix recursive spinlock in z_set_timeout_expiry()
      kernel/spinlock: Augment runtime validation
      kernel/timeout: Fix another recursive spinlock()
      tests/benchmarks: Add scheduler microbenchmark
      misc/dlist: Swap insertion API for a faster one
      kernel/spinlock: Force inlining
      kernel/sched: Force inlining of some routines within the scheduler guts
      kernel/sched: Simplify init-time dummy thread & scheduling predicate
      kernel/sched: Limit idle testing in preemption hot path
      kernel/init: Fix dummy thread initialization on SMP systems
      kernel/sched: CPU mask affinity/pinning API
      tests/threads/thread_apis: Add test for CPU mask API
      kernel: Cleanup. Remove redundant test when calling _Swap()
      kernel: Use _reschedule() instead of _Swap() where possible
      kernel: Split _Swap() API into irqlock and spinlock variants
      kernel/spinlock: Move validation out of header inlines
      kernel/work_q: Spinlockify
      kernel/atomic_c: Spinlockify
      kernel/mem_domain: Spinlockify
      spinlock: Support ztest mocking
      kernel: Split reschdule & pend into irq/spin lock versions
      kernel/k_sem: Spinlockify
      kernel: Add _unlocked() variant to context switch primitives
      kernel/poll: Spinlockify
      kernel/mempool: Spinlockify
      kernel/thread: Spinlockify
      kernel/mem_slab: Spinlockify
      kernel/thread_abort: Remove needless locking
      kernel/queue: Spinlockify
      kernel/mutex: Spinlockify
      kernel/mbox: Spinlockify
      kernel/stack: Spinlockify
      kernel/msg_q: Spinlockify
      kernel/sched: Remove remaining irq_lock use
      kernel/pipe: Spinlockify
      kernel/timer: Spinlockify
      kernel/userspace: Spinlockification
      tests/kernel/schedule_api: Bump stack size and unify stacks
      kernel/sched: _thread_priority_set needs to be sched_lock aware
      samples/portability/cmsis_rtos_v2/philosophers: Exclude qemu_x86_64

Armando Visconti (53):
      boards: 96b_argonkey: Kconfig.board: Fix ArgonKey board building
      boards: arm: 96b_argonkey.yaml: Add i2c/spi/gpio to the supported list
      drivers: dma: stm32f4: Fix typo introduced with new logger
      arch: arm: soc: stm32f4xx: Add LL include file also for I2S case
      dts/arm/st/stm32f4: Add I2S support to DTS
      soc/arm/stm32f4xx: Add I2S defines to dts.fixup
      drivers: i2s: Add support for I2S stm32
      board: 96b_argonkey: Add on-board MP34DT05 microphone support in BSP
      drivers/i2s_ll_stm32.c: move to new logger
      drivers/i2s_ll_stm32.c: Fix dma_callback() signature
      drivers: dma: stm32f4: Fix typo introduced when removing board.h
      board/argonkey/dts: Configure i2c3 at 400KHz
      CODEOWNERS: Add @avisconti as maintainer
      sensors: convert lis2dh to use information coming from dts
      drivers/lis2dh: Add symbol to BUS_TYPE and TRIGGER_MODE config choices
      drivers: sensors: lis2dh: Fix out-of-bound access
      sensors: convert lis3dh to use information coming from dts
      drivers/lis3dh: Add symbol to TRIGGER_MODE config choice
      sensors: convert lis2mdl to use information coming from dts
      drivers: lsm9ds0_mfd: Fix typo in get accel/magn channels
      driver: sensors: convert lsm9ds0_mfd to use information coming from dts
      driver: sensors: convert lsm9ds0_gyro to use information coming from dts
      drivers/sensor/lsm6dsl: Use DT defines to select I2C/SPI bus
      drivers/sensor: lis2dh: Fix LP Enable bit mask
      drivers/i2c: stm32: (FIX) add mutex to lock bus
      driver/sensor: add LIS2DS12 sensor support
      dts: sensor: lsm6dsl-i2c: Add irq-gpios property
      boards/arm: disco_l475_iot1: Add lsm6dsl int gpio info in dts
      boards/arm: disco_l475_iot1: add supported sensors to yaml file
      boards/arm: 96b_argonkey: add supported sensors to yaml file
      samples: sensor: lsm6dsl
      driver/sensor: lis2dh: align driver to auto-generated dts macros
      driver/sensor: use lis2dh as common driver among multiple sensors
      ext: stm32cube: revert 71ba2de7 and 9a893202
      drivers/i2s_ll_stm32.c: pass proper PLLR param when setting I2S PLL
      driver: sensor: lps22hb: fix the temp sensor fractional value
      sensor/lis2mdl: use kconfig named choice for TRIGGER_MODE
      boards: shields/x_nucleo_iks01a2: Add LSM303AGR sensor support
      samples: Provide x-nucleo-iks01a2 shield sample
      driver/sensor: lsm6dsl: align driver to auto-generated dts macros
      driver/sensor: lsm6dsl: Fix attribute setting for gyroscope fs
      driver/sensor: lis2mdl: align driver to auto-generated dts macros
      driver/sensor: lis3mdl: align driver to auto-generated dts macros
      ext: Added OpenPDM2PCM ST external library
      drivers/audio: Add support to ST digital microphones (MPxxDTyy)
      dts/i2s: Extend the I2S dts binding with subnodes capability
      dts/bindings: audio: add binding for ST MPXXDYYY pdm microphones on I2S
      board/argonkey: Add MP34DT05 microphone in DTS
      samples/96b_argonkey: divided test into sensor and microphone
      driver/sensor: lsm6ds0: align driver to auto-generated dts macros
      driver/sensor: lps25hb: align driver to auto-generated dts macros
      drivers/pinmux: stm32: (FIX) Force very_high speed to SPIx_SCK gpio
      driver/sensor: add LIS2DW12 sensor support

Artur Pacholec (1):
      shell: Fix typo

Ashokkumar B (3):
      drivers: spi: fix typo bug in spi_sam.c
      drivers: gpio: Add support for Stellaris gpio controller driver.
      drivers: gpio: Add DTS support for Stellaris gpio driver.

Aurelien Jarno (103):
      subsys: fs/nvs: improve some comments
      subsys: fs/nvs: improve syslog messages
      subsys: fs/nvs: declare the ate structure as packed
      subsys: fs/nvs: simplify crc8 computation
      subsys: fs/nvs: break if no end of sector is found
      subsys: fs/nvs: do not change flash protection for zero-length case
      subsys: fs/nvs: do not leave the flash unprotected in case of error
      samples: nvs: improve one output message, fix another one
      drivers: pinmux: add PINMUX_DEV CMakeLists.txt
      scripts/dts/extract/flash.py: fix load offset
      dts/arm/st_stm32: Add timers and PWM nodes to STM32 F7 series
      drivers: pinmux: stm32f7: tidy up entries
      drivers: pinmux: stm32f7: add PWM pinmux entries
      usb: device: fix the log level of a debug message
      drivers: entropy nRF5x: hide the driver on non-nRF boards
      samples: usb: hid-mouse: enable CONFIG_GPIO
      samples: usb: mass: rewrite documentation
      usb: device: fix wrong direction in usb_transfer_ep_callback
      drivers: usb: add usb device driver for Atmel SAM E70 family
      boards: enable USB device on Atmel SMART SAM E70 Xplained Board
      subsys: nvs: error out if write block size is not supported
      subsys: nvs: kill a VLA
      subsys: nvs: fix ATE read/write when write block size > 8 bytes
      subsys: nvs: increase NVS_BLOCK_SIZE
      drivers: usb_dc_sam: use original logger functions
      arch: armv7-m: mpu: disable shareable bit in _get_mpu_ram_region_attr()
      arch: arm: mpu: force outstanding transactions before MPU disabling
      arch: arm: stm32f7: Kconfig: select CPU_HAS_ARM_MPU
      drivers: entropy: add Atmel SAM entropy generator driver
      drivers: flash: add flash driver support for Atmel SAM E70
      tests/i2s: align memory slabs to 32 bytes
      drivers/i2s_sam_ssc.c: enable cache support
      soc: same70: enable instruction cache on sam_e70
      soc: same70: enable data cache on sam_e70
      drivers: usb_dc_sam: kill a coverity warning
      shell: add a missing space in the help message
      c++: kconfig: EXCEPTIONS needs to depend on NEWLIB_LIBC
      arm: nRF5x: select ENTROPY_NRF5_RNG if ENTROPY_GENERATOR is enabled
      drivers: usb_dc_sam: add support for SoF event
      kernel: Add a ""nocache"" read-write memory section
      arch: ARM: set -mabi and -march in linker flags
      arch: ARM: set -mthumb, -mcpu, -mfpu and -mfloat-abi in linker flags
      usb: cdc_acm: fix interrupt mode
      usb: cdc_acm: select SERIAL_HAS_DRIVER and SERIAL_SUPPORT_INTERRUPT
      drivers: console: fix USB_UART_CONSOLE
      drivers: flash: stm32: improve timeout handling
      drivers: flash: stm32: always define flash_stm32_flush_caches
      drivers: flash: stm32: don't flush i-cache after an erase
      drivers: flash: stm32: pass offset and len to flash_stm32_flush_caches
      drivers: flash: add driver for STM32F7x series
      usb: fix CDC ACM breakage with CONFIG_USB_DEVICE_SOF
      drivers: usb_dc_stm32: add support for SoF event
      dts: stm32f7: move flash0 node below flash-controller
      ext: lib: crypto: Update mbedTLS 2.14.1
      ext: lib: crypto: Update mbedTLS 2.16.0
      nvs: avoid reading multiple times the same area
      nvs: workaround a GCC and Coverity warning
      net: coap: return -EPERM for a resource without requested method
      net: openthread: improve shell output
      net: openthread: remove one subcommand level in shell
      usb: cdc_acm: call the IRQ callback from the system work queue
      kernel: Fix asynchronous event polling interface
      drivers: entropy: mcux_trng: get the base address from the device tree
      soc: nxp_imx: Add support for TRNG
      net: tcp: do not drop successfully received packets
      drivers: eth: gmac: drop TX timeout handling
      drivers: eth: gmac: conservatively compute the number of descriptors
      drivers: eth: gmac: fix TX descriptor write process
      soc: nxp_imx: fix ENET_PLL selection for MIMXRT1021
      soc: nxp_imx: Fix enabling ENET PLL outputs
      boards: mimxrt1020_evk: Enable mcux ethernet driver and pins
      boards: mimxrt1020_evk: Enable mcux lpi2c driver and pins
      ext: lib: crypto: Extend generic mbedTLS config with HAVE_ASM
      nvs: fix warnings in logger
      drivers: eth: gmac: fix race condition in packet reference counting
      nvs: fix alloc/data wra log format string
      drivers: eth: gmac: drop wrong cache clean operation
      drivers: eth: gmac: use non-cached memory for descriptor lists
      drivers: eth: gmac: get rid of descriptors helpers
      drivers: flash: SAM E70: fix warnings when built with newlib
      ext: hal: atmel: sam: update to version 2.3.98
      ext: hal: atmel: sam: re-add missing header symbols following HAL import
      drivers: eth: gmac: fix IRQ names following import of latest HAL
      net: sntp: get rid of the callback function
      display: ssd1673: replace k_busy_wait by k_sleep
      display: ssd1673: drop unused constants
      display: ssd1673: replace hardcoded display dimensions by DT values
      display: ssd1673: add support for ssd16xx monochrome controllers
      usb: class: dfu: fix support for SPI based flash
      usb: class: dfu: fix firmware upload
      usb: class: dfu: use the request handler provided buffer
      usb: class: dfu: fix USB descriptors in composite mode
      usb: class: dfu: always provide payload_data
      soc: same70: always enable data cache
      ext: hal: atmel: sam: fix GMAC priority queues related registers
      drivers: eth: gmac: keep a reference to the packet fragments
      drivers: eth: gmac: only keep a reference to the packet when PTP is used
      drivers: add Atmel SAM PWM driver
      boards: enable PWM devices on Atmel SMART SAM E70 Xplained Board
      tests: Add sam_e70_xplained config in pwm_api
      drivers: ssd1673: add support for HINK E0154A05
      drivers: hwinfo: fix shell dependency
      drivers: hwinfo: fix build with NEWLIB_LIBC=y

Aurelien Vouaillat (1):
      drivers: i2c: i2c_nrfx_twi and twim: Return -EBUSY when I2C bus is busy

Benoit Leforestier (8):
      Build: Improve C++ support
      C++: Fix vtable with libstdc++
      Linker: Add "".ARM.extab"" section in linker script for Cortex-M
      board: Add support of STM32F143xG SOC
      Driver: Serial STM32: Fix use of TXE IRQ
      C++ :  Fix error: template with C linkage
      C++: Suppress warning
      C++ : Fix error: template with C linkage

Björn Stenberg (3):
      cmake: Add quotes to handle missing ZEPHYR_TOOLCHAIN_VARIANT variable
      net: ipv6: Remove incorrect length assignment in MLDv2
      net: tcp: Release connect() semaphore if connection is refused

Bobby Noelte (6):
      dts: bindings: consolidate binding for flash controller
      scripts/dts/extract: Cleanup reg extraction
      scripts: extract_dts_includes: fix cell name readout from yaml
      dts: scan application dir for files included by dts
      sanitycheck: fix false passed on localized error message
      arch: allow system clock driver selection for cortex m

Bryan O'Donoghue (2):
      arch: atmel_sam0: sam21j18a: Convert _U to __U to fix compile warning
      boards: arm: atsamd21: Add SAMD21 XPlained board

Bub Wei (5):
      samples: net: Fix zperf build issue
      samples: net: zperf: Allow to build with IPv4 or IPv6 only
      samples: net: zperf: Remove invalid forever sleep
      samples: net: zperf: Refactor zperf_*_receiver_init
      samples: net: zperf: Support existing IP

Carles Cufi (48):
      samples: shared_mem: Reduce CMake required version to 3.8.2
      cmake: menuconfig: Fix missing SOC_DIR macro
      scripts: ci: Set SOC_DIR for check-compliance.py
      CODEOWNERS: Assign missing nRF boards and SoC
      boards: arm: nrf: Update supported features
      doc: cmake: Do not use USES_TERMINAL on latex/pdf targets
      Bluetooth: controller: Remove timestamp from HCI
      Bluetooth: shell: Transition ll.c to the new shell
      Bluetooth: shell: Transition ticker.c to the new shell
      Bluetooth: shell: Transition flash.c to the new shell
      doc: cmake: Enable PDF build on Windows
      doc: getting started: Document pdf build on Windows
      tests: Bluetooth: shell: Whitelist nrf52840_pca10056
      drivers: usb: stm32: Limit the amount of bytes to write
      subsys: logging: Add CR/LF handling flags
      doc: extract_content: Normalize path of ignored folders
      doc: Remove quotes from Windows env var
      doc: bluetooth: Add existing qualification listings
      cmake: Set PYTHON_EXECUTABLE env var with kconfig
      doc: revert to copy files with extract_content.py directly
      doc: dts: Document aliases and chosen nodes
      doc: tools: Update links to Nordic website
      doc: samples: Update samples to point to active boards
      scripts: ci: check-compliance: Fix running out-of-tree
      soc: nrf: Add missing nRF52832 variants
      tests: nffs: Tweak Kconfig to fit in RAM
      tests: nffs: Run NFFS tests on nRF52840
      test: nffs: Remove unsupported ICs from CMake files
      scripts: remove west from scripts/
      cmake: Use west installation directly
      doc: scripts: Retrieve west path at runtime
      doc: Use west instead of Git to clone Zephyr
      doc: west: Move files to the correct location
      doc: west: Overhaul documentation to match current model
      ci: Update to the new west model
      west: Multiple CI fixes for the topic-west branch
      doc: west: Misc formatting fixes
      doc: west: Do not fail doc build if west not used
      scripts: west: Add support for nRF91 in nrfjprog
      doc: getting_started: Clarify what west does
      west: runners: nrfjprog: Correct nRF91 unit test reference data
      west: runners: nrfjprog: Enable testing of nRF91
      doc: Add KCONFIG_DOC_MODE env var handling
      boards: arm: nrf: Make Bluetooth optional
      scripts: west: Tweak west build doc
      doc: west: Document west build
      doc: west: Document build system integration
      doc: bluetooth: Add reference to Bluetooth API

Carlos Stuart (14):
      lib: cmsis_rtos_v2: Uncrustify source files
      tests: cmsis_rtos_v2: Uncrustify source files
      lib: cmsis_rtos_v2: Additional Kconfig dependency
      lib: cmsis_rtos_v2: Message queue checks
      lib: cmsis_rtos_v2: Dynamic memory pools
      tests: cmsis_rtos_v2: Dynamic memory pool tests
      lib: cmsis_rtos_v2: Dynamic thread stacks
      tests: cmsis_rtos_v2: Dynamic thread stack tests
      lib: cmsis_rtos_v2: Default name if name is NULL
      lib: cmsis_rtos_v2: Default thread prioity
      editorconfig: basic EditorConfig configuration
      lib: cmsis_rtos_v2: Join and detach support
      tests: cmsis_rtos_v2: Join and detach tests
      doc: cmsis_rtos_v2: Updated documentation

Chen Han (1):
      dts: stm32f1: fix UART4 define

Christian Taedcke (15):
      arm: exx32: Use one common soc.c for all exx32 socs
      boards: efm32wg_stk3800: Fix wrong doc for button pins
      boards: stm32f746g_disco: Update board yaml
      drivers: ethernet: stm32: Fix typo in comment
      boards: stm32f746g_disco: Enable Ethernet
      boards: stm32f746g_disco: Update peripheral mapping doc
      boards: nucleo_f429zi: Fix typo in code comments
      drivers/rtc: Enable RTC driver for STM32F7 series
      drivers: pinmux: stm32f7: Add SPI2 pinmux entries
      drivers: spi_ll_stm32: Enable SPI driver for F7 family
      dts/arm/st_stm32: Add SPI nodes to STM32 F7 series
      boards: stm32f746g_disco: Enable a few peripherals
      ext: gecko: Add workaround in em_emu.h
      ext: gecko: Update Silabs Gecko HAL to v5.6.1
      soc: silabs_exx32: Add SWO logger support to EFM32PG12B

Christoph Schramm (2):
      shell: Add a Segger RTT backend
      doc: shell: rtt: Add documentation for RTT shell backend

Christopher Métrailler (1):
      ext: hal: nordic: Add missing peripherals in Kconfig

Cinly Ooi (1):
      tests: lib: mem_alloc: esp32 to skip newlib test

Daniel Glöckner (3):
      net: pkt: fix race condition in packet reference counting
      net: pkt: convert remaining users of ref to atomic_ref
      net: gptp: fix src MAC address

Daniel Leung (45):
      doc: fix using Ninja to generate PDF
      doc: convert internal http links to references
      doc: document build target for PDF
      boards/x86: up_squared: add board option for SoC variants
      boards/x86: up_squared: updates SYS_CLOCK_HW_CYCLES_PER_SEC
      gpio: enable callback to specify pin in addition to pin_mask
      gpio: add driver for Intel Apollo Lake SoC
      boards/x86: up_squared: add GPIO dts configuration
      boards/x86: up_squared: add sample app for GPIO
      kernel: Fix compilation errors when CONFIG_TIMESLICING=n
      drivers: ethernet: native: fix compile error when glibc >= 2.20
      linker: arm: add missing period for CCM section name
      tests: wdt_basic_api: rename noinit section
      linker: allow SoC to insert linker script fragments
      arm: cypress/psoc6: add SoC specific linker input sections
      linker: warn about orphan sections
      linker: more .rel for orphan sections
      linker: use wildcards in rel-sections.ld
      linker: allow SoC to insert linker script fragments
      arm: cypress/psoc6: add SoC specific linker input sections
      linker: warn about orphan sections
      audio: tlv320dac310x.c:141: fix too few arguments for format
      toolchain: xcc: fake __builtin_umul[ll]_overflow
      dts: intel_s1000: fix warning about leading ""0x""
      xtensa: specify which SR to store pointer to _kernel.cpu struct
      xtensa: intel_s1000: turn on XTENSA_ASM2
      i2s: i2s_cavs: fix dma_tx_callback function signature
      cmake: parameterized flags to not include standard defines/files
      cmake: xcc: fix compile warnings and errors
      boards: up_squared: add GPIO sample to sanitycheck
      boards: up_squared: dts: fix a typo in I2C address
      soc: apollo_lake: fix build errors for GPIO due to DTS changes
      arch: xtensa: include soc.h to fix build errors
      timer: xtensa_sys_timer: set compare register at init
      boards: arm: nucleo_f746zg: fix empty image
      esp32: fix build error regarding multiplt BIT() definitions
      gen_isr_tables: fix typo for 3rd level INTR config symbol
      timer: xtensa: restore smp_timer_init()
      soc/intel_s1000: update DTS fixup due to CONFIG_SRAM_* changes
      kernel/sched: fix CPU mask kconfig typo
      drivers/interrupt_controller: shared_irq: configure by device tree
      gpio: intel_apl: rework driver for pin_mask callback
      Revert ""gpio: enable callback to specify pin in addition to pin_mask""
      gpio: gpio_sch: error when configure for level triggers
      gpio: gpio_sch: fix check for interrupt trigger

Dave Marples (1):
      nucleo_f429zi: Add JLink support for flash, as per nucleo_f070rb

David B. Kinder (29):
      doc: fix doxygen BUILD_ASSERT error
      doc: fix misspellings in API headers
      doc: fix doc misspellings
      doc: fix kconfig misspellings
      doc: fix misspellings in doxygen comments
      doc: fix misspellings in docs
      doc: update getting started pip3 --user info
      doc: filter expected dup decl warnings
      doc: fix links in Galileo doc
      doc: fix broken link in upsquared board doc
      doc: add sphinx extension improving only directive
      doc: filter new known doc build warnings
      doc: tweak API CSS for improved usability
      doc: regular misspelling scan
      doc: update doc footer copyright year
      doc: add missing cfb API
      doc: add missing networking APIs
      doc: add comment for API doxygen group check
      doc: add (more) missing API docs
      doc: update doc guidelines
      doc: eliminate doc build missing image warning
      doc: fix ordered list numbering in board doc
      doc: fix formatting error in security doc
      doc: reduce sample index clutter
      doc: fix broken link in board doc
      doc: add clean target to Makefile
      doc: add icons to the home page blocks
      doc: fix misspellings in docs
      doc: fix misspelling in kconfig doc

David Brown (5):
      lib: posix: clock: Add gettimeofday() call
      lib: posix: clock: Add read of CLOCK_REALTIME
      lib: posix: clock: Implement clock_settime
      tests: posix: Test realtime clock
      jwt: Add JSON web token library

David Kinder (3):
      ext: debug: segger: Fix grammar in Kconfig
      subsys: logging: Fix grammar in Kconfig
      doc: reduce image size of board pics

David Leach (3):
      scripts: extract: globals.py: Fix node name parsing
      samples: buttons: Add GPIO_INT_EDGE to button configuration
      scripts: extract_dts_includes: Enhance message information

David Vincze (1):
      drivers: timer: fix disable systick function

Dawid Wojciechowski (2):
      sanitycheck: Add Renode cmake configuration
      sanitycheck: Enable Renode tests on m2gl025_miv

Dennis Wildmark (1):
      drivers: lsm303dlhc_accel: support for sensor_attr_set

Dhananjay Gundapu Jayakrishnan (2):
      kernel: k_queue: extend k_queue API to append unique element
      drivers: sensor: temp_nrf5: update assert condition in nRF temp sensor

Diego Sueiro (24):
      ext: Silabs Gecko use a different config for uart
      drivers: Add more uart instances for Silabs Devices
      drivers: serial: Rework Silabs Gecko UART Driver
      ext: fix a typo in Silabs Gecko emlib
      ext: Add Silabs Gecko SDK for EFR32MG12P SoCs
      ext: Integrate Silabs EFR32MG12P Gecko SDK into Zephyr
      soc: arm: exx32: Add Silabs EFR32MG12P soc files
      drivers: Introduce Silabs leuart shim serial driver
      drivers: Introduce Silabs i2c shim driver
      boards: Add Silabs EFR32MG-SLTB004A (Thunderboard Sense 2) support
      drivers/ipm: Add IPM support for i.MX7
      boards: Enable IPM driver on warp7_m4 board
      boards: Enable IPM driver on colibri_imx7d_m4 board
      samples/ipm_imx: Add i.MX7 boards to platform_whitelist
      drivers/serial: Fix uart issues for i.MX7 and i.MX6
      boards: enable UART_INTERRUPT_DRIVEN for i.MX7 and i.MX6 boards
      subsys/fb/cfb: Introduce cfb_framebuffer_invert function
      subsys/fb/cfb: Introduce cfb_get_numof_fonts function
      shell: Add initial code for Character Framebuffer shell module
      samples/display: Introduce the cfb_shell sample app
      subsys/fb/cfb: Introduce cfb_framebuffer_invert function
      subsys/fb/cfb: Introduce cfb_get_numof_fonts function
      shell: Add initial code for Character Framebuffer shell module
      samples/display: Introduce the cfb_shell sample app

Dominik Kilian (1):
      dts: nrf: Expand nRF DTS to support ARM TrustZone CryptoCell 310

Dominik Rekawek (1):
      lib: posix: fix build break due to size comparsion

Dong Xiang (1):
      net: l2: update wifi mgmt to adapt non-offload wifi chip.

Emanuele Di Santo (20):
      samples: basic: button: use dts-generated defines
      boards: arm: nrf51_pca10028: use dts for LED and button configuration
      boards: arm: nrf52810_pca10040: use dts for LED and button config
      boards: arm: nrf52840_pca10059: use dts for LED and button config
      boards: arm: nrf52832_pca10040: use dts for LED and button config
      boards: arm: nrf52840_pca10056: use dts for LED and button config
      samples: nrf52: onoff_level_lightning_vnd_app: use dts-generated defines
      samples: nrf52: onoff-app: use dts-generated defines
      samples: nrf52: power_mgr: use dts-generated defines
      subsys: bluetooth: services: dev. information service enhancements
      boards: arm: nrf52840_pca10059: update dts and overlay
      doc: boards: arm: nrf52840_pca10059: add bootloader section
      boards: arm: nrf52840_pca10059: remove RTT_CONSOLE from defaults
      boards: arm: nrf52840_pca10059: update comment in fstab-stock.dts
      boards: arm: nrf52840_pca10059: update fstab-debugger.dts
      boards: arm: add nrf52840_pca10090
      samples: bluetooth: hci_uart: add configuration for nrf52840_pca10090
      boards: arm: nrf9160_pca10090: choose code-partition in secure variant
      boards: arm: nrf9160_pca10090: define BOARD_NRF9160_PCA10090NS
      boards: arm: nrf9160_pca10090: link into code-partition if non-secure

Endre Karlson (5):
      boards: efr32mg_sltb004a: Add debug capability to Silabs TB2
      soc: silabs: Enable Segger RTT
      arm: silabs: Enable DCDC before setting up clk
      boards: particle_xenon: Add support Xenon
      boards: efr32mg_sltb004a: Fix device name typos

Erwan Gouriou (121):
      doc: fix desription SoC tree structure example
      cmake: Add zephyr base address when looking file into soc/
      dts/bindings: Add 'generation' directive on for 'compatible' property
      scripts: extract_dts_includes.py: generate 'compatible' CONFIG flags
      dts/st: enables possibility to define Flash and SRAM out of tree
      dts/arm/st: Fix dtc warning in stm32 *-pinctrl.dtsi files
      dts/arm/st: Add missing properties to stm32f2 fash controller node
      dts/bindings: document use of value 'use-prop-name'
      boards/arm: Fix button dts syntax for stm32 based boards
      scripts/dts: extract_dts_includes: remove unused 'names' argument
      scripts/dts/extract: factorize 'reg' prop extraction
      dts: Add missing 'compatible' property in flash base nodes
      boards: add support for shields x-nucleo-iks01a1 and -iks01a2
      build: enable shields dir treatment
      samples: Provide x-nucleo-iks01a1 shield sample
      doc: provide shield usage documentation
      boards: dts: Fix dtc warning in stm32 board dts files
      boards/shields: Clean-up connectors Kconfig options
      boards: nucleo_f429zi: Enable USB
      boards: nucleo_f429zi: fix PWM instance
      boards: nucleo_f412zg: Fix default config
      boards: nucleo_f413zh: Fix default config
      boards: nucleo_f207zg: Fix default config
      drivers/spi: stm32: fix warning in SYS_LOG_ERR macro
      ext/hal/st: stm32f0: dos2unix and remove trailing white spaces
      ext/hal/st: stm32f2: dos2unix and remove trailing white spaces
      ext/hal/st: stm32f4: dos2unix and remove trailing white spaces
      ext/hal/st: stm32l0: dos2unix and remove trailing white spaces
      ext/hal/st: stm32l4: dos2unix and remove trailing white spaces
      ext/hal/st: update stm32f3 stm32cube package from v1.9.0 to v1.10.0
      ext/hal/st: update stm32f7 stm32cube package from v1.11.0 to v1.12.0
      ext/hal/st: stm32f3: Disable new API and enable Legacy
      scripts: cleanup unwanted updstreamed file
      ext/hal: stm32cube: fix exti declaration in STM32L4
      ext/hal: stm32cube: fix exti declaration in STM32F7
      scripts/dts: extract_dts_includes: fix alias creation for subnodes
      scripts/dts: extract: Provide a value to generated compat #define
      scripts/dts: extract: fix 'compatbible' property typo
      ext/hal/st: update stm32l4 stm32cube package from v1.12.0 to v1.13.0
      ext/hal/st: stm32f7: Fix README
      dts/arm/st: f4: gpioh node is defined twice for stm32f405
      drivers/i2c: stm32: get clock bits/bus from dts files
      dts/arm/st: Fix I2C issues in stm32l4 series
      boards: disco_l475_iot1: Conform to default configuration guidelines
      boards: stm32l496g_disco: Conform to default configuration guidelines
      boards: stm32f769i_disco: Conform to default configuration guidelines
      boards: stm32f723e_disco: Conform to default configuration guidelines
      boards: stm32l476g_disco: update yaml file
      boards: stm32f469i_disco: Conform to default configuration guidelines
      scripts/dts: extract_dts_includes: fix multi-compat bus parent
      drivers/serial: stm32: Get clocks information from device tree
      soc/st/stm32f7: Fix typo in stm32f7 fixup file
      drivers/serial: stm32: factorize device declaration
      drivers/gpio: stm32: Remove redundant AFIO bit for STM32F1
      dts: stm32f4: Fix clock settings for usart1
      drivers/spi: stm32: Use device tree for device clock configuration
      drivers/pwm: stm32: Use device tree for clocks and base address config
      doc/tools: stlink: Provide guidelines for openocd install on windows
      drivers/gpio: stm32: return error when pin line already in use
      drivers/pinmux: stm32: GPIO ports missing in array
      drivers/clock_control: stm32: add errors on unsupported bus value
      dts/arm: stm32f0: AHB2 but is not supported
      drivers: stm32: check clock_control_on return value
      boards: nucleo_f413zh: Update board images
      drivers/serial: stm32: Modify Kconfig instance flags
      samples/drivers: gpio: LED0 and SW0 might not share GPIO controller
      samples/basic: disco: LED0 and LED1 might not share GPIO controller
      samples: yaml: filter can be limited to GPIO_CONTROLLER
      dts: stm32f3: GPIO clocks are actually handled from AHB1 bus
      boards: stm32f3_disco: LD7 GPIO port is E
      boards: stm32f3_disco: Add LD7 as led1
      samples/basic: Update readme for blinky/button/disco
      boards: stm32072b_disco: Document CAN support
      boards: nucleo_l432kc: Document CAN support
      dts: stm32f1: add uart5
      drivers/gpio: stm32l4: PortG[15:2] requires dedicated VDDio2
      drivers/serial: stm32: rename symbol UART_LPUART_1 to LPUART_1
      drivers/serial: stm32: Remove superfluous dependency in Kconfig
      boards: nucleo_l4r5zi: set lpuart1 as VPC port
      boards: nucleo_f030r8: Update to default configuration guidelines
      boards: nucleo_f070rb: Update to default configuration guidelines
      boards: nucleo_f091rc: Update to default configuration guidelines
      boards: nucleo_f103rb: Update to default configuration guidelines
      boards: nucleo_f302r8: Update to default configuration guidelines
      boards: nucleo_f334r8: Update to default configuration guidelines
      boards: nucleo_f401re: Update to default configuration guidelines
      boards: nucleo_f411re: Update to default configuration guidelines
      boards: nucleo_f446re: Update to default configuration guidelines
      boards: nucleo_l053r8: Update to default configuration guidelines
      boards: nucleo_l073rz: Update to default configuration guidelines
      boards: nucleo_l476rg: Update to default configuration guidelines
      drivers/pinmux: stm32: Clean up after gpio driver factorization
      boards: Add arduino_i2c in yaml when supported
      cmake: dts: move to specifying shield on the command line
      boards/shields: Clean up Kconfig'ery
      boards: nucleo_l476rg: Fix arduino_i2c
      drivers/gpio: stm32: Fix gpio_stm32_configure
      drivers/interrupt_controller: stm32: Complete driver factorization
      drivers/interrupt_controller: stm32: Complete driver factorization
      drivers/interrupt_controller: stm32: Use LL API
      soc: stm32: Extended watchdog support to all series
      dts: stm32: Add watchdog nodes to STM32 dtsi files
      drivers/watchdog: stm32: move driver to dts based configuration
      boards: stm32: watchdog enable watchdog support with dt
      drivers/watchdog: stm32: Disable IWDG_STM32_START_AT_BOOT by default
      tests: watchdog: Update test to support drivers with no callback
      boards: disco_l475_iot1: Remove PA9 setting for USB
      boards: stm32f4_disco: Fix console documentation
      drivers: spi: Define SPI_6 symbol
      boards: nucleo_l4r5zi: Clean up Kconfig symbol.
      driver/interrupt_controller: Clean up Kconfig symbol in stm32 driver
      drivers/counter: stm32: Provide STM32 RTC driver using counter API
      samples/drivers: Provides basic sample for counter alarm
      drivers/counter: stm32 rtc: Use dts to get RTC clock information
      boards: nucleo_f746zg: Configure and document counter RTC
      tests/drivers: counter: bump cmake minimum version
      tests: counter: Update to support STM32 RTC counter
      soc: stm32: Convert CONFIG_RTC leftover to DT_
      boards: Update yaml for boards supporting rtc/counter (1/3)
      boards: Update yaml for boards supporting rtc/counter (2/3)
      boards: Update yaml for boards supporting rtc/counter (3/3)

Erwin Rol (2):
      drivers: can: fix typos
      drivers: can: fix typo

Filip Kubicz (7):
      dts: update I2C bindings for nRF chips
      dts: add SPI bindings for nRF family
      boards: nrf52840_pca10056: Fix SPI pin assignment conflicts
      Bluetooth: settings: store CCC on write
      include: adc: Fix async ADC API documentation
      Bluetooth: ctlr: Return different error codes on advertising start
      Bluetooth: host: Meaningful error codes on advertising start

Findlay Feng (6):
      kernel: Fix list-node add again corruption case in timeout handling
      dts: flash_map: Automatically generate of the list of flash area
      dfu/mcuboot: use flash_map instead of flash API
      dfu/flash_img: use flash_map instead of flash API
      ext/lib/mgmt/mcumgr: align zephyr port to changes in dfu sybsy'es
      usb/class/usb_dfu: align to changes in dfu subsys'es

Flavio Ceolin (111):
      kernel: Add missing break/default in switch statement
      kernel: userspace: Sanitize switch usage
      kernel: Fix k_stack_alloc_init behavior
      misc: printk: Change function return
      kernel: syscall: Explicitly ignoring not used return
      kernel: swap: Fix __swap signature
      kernel: Explicitly ignoring _Swap return
      coccicnelle: Ignore return of memset
      kernel: Ignore _pend_current_thread return in some cases
      kernel: Ignore _abort_timeout return
      kernel: atomic: Ignore atomic_and/or return when not used
      kernel: Change _reschedule signature
      kernel: Explicitly check _abort_thread_timemout
      kernel: Check k_thread_create return value
      kernel; Checking functions return
      headers: Fix headers guards
      headers: Fix headers across the project
      include: Add missing headers guard
      kernel: Make If statement have essentially Boolean type
      kernel: Using boolean constants instead of 0 or 1
      kernel: Compare pointers with NULL in while statements
      kernel: stack: Fix k_stack_pop api
      misc: dlist: Returning boolean for assertive functions
      misc: assert: Using boolean constants
      kernel: Using boolean types for boolean constants
      kernel: Using boolean expression on ASSERT macros
      misc: list_gen: Using boolean expressions
      misc: dlist: Using boolean expressions
      kernel: sched: Change boolean APIs to return bool
      kernel: Calling Z_SYSCALL_VERIFY_MSG with boolean expressions
      kernel: Explicitly comparing pointer with NULL
      kernel: syscalls: Change handlers namespace
      kernel: sys_clock: Remove unnecessary if
      kernel: Sanitize if else statement according with MISRA-C
      kernel: Remove unused variables
      kernel: Avoid duplicated type definition in x86
      kernel: Using the same paramenters names in a specific function
      kernel: mempool: Remove unnecessary condition check
      kernel: Fix overflow test problem introduced in 92ea2f9
      kernel: Remove redundant type name
      misc: mempool: Using distinct macro identifiers
      kernel: Use distinct macro names
      arch: x86: Remove unused struct
      drivers: sensor: Fix syscall name
      kernel: mutex: Change variable declaration
      kernel: Delimiting the scope of some variables
      kernel: Remove duplicated identifier
      kernel: stack: Making if's body a compound statement
      kernel: Change k_poll_signal api
      lib: Normalize if/else statements
      subsys: logging: Fix switch statement
      include: misc: Do not mix comment characters
      kernel: Make tag identifiers unique
      doc: Fix duplicated word
      subsys: logging: Fix invalid memory access
      kernel: Remove _IntLibInit function
      serial: Change poll_out signature
      misra: Ignoring the return atomic_set when not used
      arch: Making body of selection statement a compound statement
      libc: ctype: Fix isxdigit function
      arch: x86: Make if statement evaluate a boolean expression
      misc: assert: Expand to nothing when disabled
      toolchain: xcc: Builtin overflow functions return boolean
      kernel: sched: Make boolean functions return bool
      kernel: syscall: Object validation checks boolean statement
      misc: rb: Make an evaluation a boolean expression
      syscall: Return bool in a boolean function
      atomic: Change boolean functions to return bool
      lib: rbtree: Make boolean functions return bool
      kernel: Make boolean function return bool
      shell: utils: Remove dead code
      kernel: queue: Fix MISRA-C violation
      lib: rbtree: Do not use lowercase l for literal suffix
      kernel: poll: Fix switch usage
      include: misc: list_gen: Fix possible undefined behavior
      arch: x86: Make tag name unique
      kernel: sched: Fix undefined behavior
      x86: core: thread: Avoid clash with function identifier
      arch: x86: x86_mmu: Remove possible dead code
      misra: Fixes for MISRA-C rule 8.2
      misra: Fixes for MISRA-C rule 8.3
      logging: Simplify function to get number of log backends
      kernel: Use NULL instead of 0
      sys_clock: Explicitly set constants sign
      sys_clock: Change function signature
      kernel: Change function signature
      arch: x86: Use macro BIT to shift bits
      tests: benchmark: Remove redundant define
      kernel: init: Add nop instruction in main
      log: Explicitly ignoring return of memcpy
      coccinelle: Updating ignore_return to support memcpy
      lib: posix: Explicitly ignoring return of memcpy
      arch: arm: Explicitly ignoring return of memcpy
      log: Fix switch statement
      shell: Fix return error in shell_execute_cmd
      shell: Make shell_strlen return u16_t
      shell: Changing shell_history_get signature
      arc: cache: Change dcache_available signature
      kernel: userspace: Change _thread_idx_alloc to return bool
      kernel: Make statements evaluate boolean expressions
      kernel: Change is_condition_met signature
      arch: x86: Make statements evaluate boolean expressions
      log: Make statements evaluate boolean expressions
      arch: arm: Make statements evaluate boolean expressions
      arch: arc: Make statements evaluate boolean expressions
      kernel: Change _is_thread_essential to return bool
      kernel: Change k_is_in_isr to return bool
      lib: posix: Make statements evaluate boolean expressions
      soc: x86: Make statements evaluate boolean expressions
      soc: arm: Make statements evaluate boolean expressions
      kernel: Do not use zero-length array

Florian Gärtner (1):
      boards: arm: Fix and update nordic board doc links

Francesco Franchina (1):
      doc: Removed doc reference to non-existing HW PWM

Francisco Munoz (4):
      ext : hal : mec1701 Add the MEC1701 external header.
      serial/uart_ns16550: make UART_REG_ADDR_INTERVAL
      arch: arm: Add Microchip MEC1701 SoC
      boards : Add supoport for Microchip MEC2016 EVB ASSY 6797

Frank Li (3):
      drivers: sensor: dht: Fix fetch fail when config hw cycles=32768
      net: shell: Fix showing ping reply
      net: shell: Fix cmd_net_http_monitor build error

François Delawarde (3):
      cmake: Support custom out-of-tree toolchains
      ext: debug: Add C Pre-Processor MAP helper functions for CTF
      debug: CTF Tracing with POSIX backend

Galen Seitz (10):
      dts: arm: st: f3: Fix the unit-address for gpiof
      dts: arm: st: Add STM32F302x8 SoC device tree
      drivers: interrupt_controller: Add STM32F302x8 EXTI_LINES
      drivers: pinmux: stm32: Add support for STM32F302x8
      soc: arm: st_stm32: stm32f3: Add defines for USART3
      soc: arm: st_stm32: stm32f3: Add defines for I2C3
      soc: arm: st_stm32: stm32f3: Add support for STM32F302x8
      boards: arm: Add support for nucleo_f302r8
      samples: basic: blink_led: Add support for nucleo_f302r8
      tests: spi_loopback: Add nucleo_f302r8 configuration

Gaute Gamnes (4):
      dts: nrf: PWM device node added to nRF52 devices with yaml binding
      drivers: pwm: nrf: Migrate Kconfig options to DT
      drivers: pwm: nrf: Removed Kconfig prescaler option. Rewrite HW driver
      drivers: pwm: nrf: Modify fade_led PWM example, use new HW drv

Georgij Cernysiov (3):
      soc: st: add STM32L452XC
      drivers: modem: modem receiver dependencies adaptation
      drivers: pinmux: stm32: st: add L4 UART4 AF on PC10 and PC11

Gil Benkö (5):
      ext: gecko: Add Silabs Gecko HAL for EFM32PG12B SoCs
      ext: Integrate Silicon Labs Gecko SDK for EFM32PG12B into Zephyr
      arm: exx32: Add Silabs EFM32PG12B soc files
      drivers: gpio_gecko: Use emlib API for compatibility
      boards: arm: Add support for Silicon Labs EFM32PG-STK3402A

Gil Pitney (23):
      net: sockets: Add a socket offload module
      driver: wifi: simplelink: Register socket offload operations.
      samples: net: sockets: echo: enable socket offload for cc3220sf_launchxl
      driver: wifi: simplelink: Fix socket offload after s_addr cleanup
      drivers: wifi: simplelink: Move NWP configuration to iface_init
      net: sockets: Get socket offload to build after net logging overhaul.
      samples: net: include sockets echo sample build in cc3220sf sanitycheck
      drivers: wifi: simplelink: More fixes after logging update
      net: Fix assert on net_if_api send for NET_OFFLOAD drivers.
      net: samples: sockets: http_get: build for cc3220sf_launchxl
      net: socket.h: Add more BSD defines for getaddrinfo()
      drivers: wifi: simplelink: Implement offloaded getaddrinfo()
      net: wifi: Update connect cmd to deal with new shell quoted args
      samples: net: wifi: Remove sleep K_FOREVER, which asserts.
      samples: net: wifi: Fix README, to account for new shell regression
      drivers: wifi: simplelink: fix Coverity issue in getaddrinfo()
      drivers: serial: Update cc32xx uart interrupt handling
      drivers: wifi: simplelink: Implement setsockopt() for TLS offload
      net: samples: sockets: http_get: Add secure socket offload support
      doc: boards: cc3220sf_launchxl: Add notes on secure socket offload
      drivers: wifi: simplelink: add timeout for fast connect feature
      boards: cc3220sf_launchxl: Provide dts aliases for leds 1 and 2
      boards: cc3220sf_launchxl: Set CONFIG_FLASH defaults for non-XIP

Grzegorz Kolodziejczyk (5):
      samples: reel_board/mesh_badge: Add sensors
      samples: reel_board/mesh_badge: Add generic on off model
      samples: reel_board/mesh_badge: Introduce sensor model
      samples: reel_board/mesh_badge: Fix sensor statuses struct organization
      samples: reel_board/mesh_badge: Match onoff state with LED light

Gustavo F Nobrega (1):
      doc: ext: segger: Update link to SystemView

Harry Jiang (4):
      board: stm32_min_dev: Add I2C support
      board: stm32_min_dev: Add PWM support
      doc: fix the example code typo
      drivers: stm32: fix the STM32F1 series gpio configuration

Henrik Brix Andersen (12):
      boards: nrf52_adafruit_feather: remove RTS/CTS pin definitions from dts
      doc: bluetooth: clarify where to find the btmgmt binary
      boards: reel_board: add links to the PHYTEC reel board procuct page
      boards: reel_board: fix DTS compatible string
      samples: hci_uart: add note about reduced baudrate on the BBC micro:bit
      cmake: fix code section ordering
      drivers: watchdog: wdt_sam0: Convert Atmel SAM0 driver to the new API
      drivers: spi: sam: avoid unsigned comparision with less than zero
      drivers: spi: sam0: avoid unsigned comparision with less than zero
      samples: drivers: watchdog: enable debug logging
      subsys: fb: add support for generating CFB font headers at build time
      samples: display: add sample for demonstrating custom CFB font

Himanshu Jha (38):
      Coccinelle: Add support for Coccinelle infrastructure
      doc: application: Add documentation for Coccinelle tool
      coccinelle: Add script to enforce ARRAY_SIZE macro usage
      drivers: crypto: Fix precedence issue in if statement
      doc: Fix a typo
      doc: application: coccinelle: Miscellaneous cleanups
      util: Add GENMASK helper macro definition
      CODEOWNERS: Assign maintainer of Coccinelle Infrastructure
      sensor: lis2mdl: Handle return value of i2c_burst_read
      CODEOWNERS: Update list to add `scripts/coccinelle/` directory
      coccinelle: unsigned_shift.cocci: Update script
      coccinelle: Add script to report cases of NULL dereference
      coccinelle: ignore_return.cocci: Update script
      coccinelle: irq_lock.cocci: Update script
      coccinelle: Add script to find cases of missing locks
      coccinelle: Add script to find cases of unsigned < 0
      coccinelle: Add script to remove redundant semicolon
      drivers: Remove redundant semicolon
      coccinelle: Add script to check legal usage of sizeof expression
      drivers: audio: Use ARRAY_SIZE helper macro
      samples: flash_shell: Replace incorrect assignment to boolean expression
      sensors: lis2dh: Handle return value of `lis2dh_reg_read_byte` function
      coccinelle: Suppress reports/warnings for `ext/`
      doc: application: coccinelle: Add information about coccinelle list
      net: llmnr_responder: Check return value of net_udp_get_hdr
      coccinelle: Add script to remove unnecessary return variable
      tests: tinycrypt: remove unnecessary variable
      tests: net: mgmt: remove unnecessary variable
      drivers: flash_gecko: remove unnecessary variable
      drivers: sensor: vl53l0x: remove unnecessary variable
      net: lwm2m: ipso_light_control: remove unnecessary variable
      net: openthread: remove unnecessary variable
      net: lwm2m: ipso_temp_sensor: remove unnecessary variable
      samples: net: ws_echo_server: remove unnecessary variable
      scripts: coccicheck: Improve continuous run operation
      doc: application: coccinelle: Mention report mode as a necessary rule
      scripts: coccicheck: Add support for SPFLAGS
      doc: coccinelle: Add documentation for SPFLAGS usage

Håkon Alseth (1):
      clang-format: add support for clang-format

Håkon Øye Amundsen (12):
      kconfig: cmake: Support for images without gaps.
      soc: nordic: Add BPROT and MPU to list of supported HW.
      ext: segger: Use system include directive for configuration header.
      arch: arm: Add symbol for flash used
      cmake: Move MPU userspace declaration up.
      cmake: Move check for '-nostdinc' up.
      cmake: Move check for TOTP property up.
      cmake: Move helper function up, inline variable.
      cmake: flash: scripts: Include externally built hex files
      cmake: fix incorrect lower case variable
      cmake: flash: Conditional dependency to 'mergehex'
      cmake: Remove kconfig-usage target

Ioannis Glaropoulos (110):
      arch: arm: correct placement of macro documentation
      arch: arm: remove power-of-two align and size requirement for ARMv8-m
      CODEOWNERS: Assign maintainers for Nordic SoC .dtsi files
      arch: arm: fix error reason intialization
      arch: arm: add explanatory comment for SPLIM_NS set functions
      arch: arm: Minor style and typo fixes in inline comments
      soc: arm: mps2: remove un-necessary Kconfig option selection
      kernel: improve help text of INIT_STACKS option
      arch: arm: remove un-necessary inclusion of <string.h>
      arch: arm: group Userspace-related regions together
      arch: arm: style fixes in documentation of MPU region types
      arch: arm: remove obsolete inline comment
      arch: arm: mpu: improve documentation of mpu_config
      arch: arm: improve documentation for ARMv8-M fixed region setup
      drivers: serial: nrf: remove obsolete PIN Kconfig definitions
      arch: arm: fix K_MEM_PARTITION_IS_WRITABLE definition
      arch: arm: fix mem domain sample/test for ARMv8-M access permissions
      arch: arm: re-program MPU stack guard upon userspace enter
      arch: arm: support built-in stack protection in user mode for ARMv8m
      arch: arm: typos and style fixes in userspace.S
      arch: high-level Kconfig symbol structure for Trusted Execution
      arch: arm: API to allow Non-Secure FPU Access
      arch: increase priv stack with built-in stack-overflow checking
      kernel: mem_domain: minor typo fixes
      tests: kernel: userspace: minor typo fixes
      doc: kernel: usermode: correct prefixes in app memory section
      arch: arm: mpu: fix thread user stack region size
      arch: arm: mpu: move the early return higher in the execution process
      arch: arm: ensure shared mem and app sram MPU regions don't overlap
      kernel: mem_domain: fix partition end address calculations
      kernel: mem_domain: optimize sane partition checking
      arch: arm: mpu: improve documentation of nxp_mpu_config
      arch: arm: mpu: declare and define arm_mpu_config as const
      arch: arm: mpu: declare and define nxp_mpu_config as const
      ext: hal: cmsis: Update ARM CMSIS headers to version 5.4.0
      arch: arm: fix the convenience macro for ARMv7-M MPU
      arch: arm: Kconfig option for minimum MPU region size and alignment
      arch: arm: utilize Kconfig option for min ARM MPU region size
      arch: arm: properly enforce MPU-aware linker section alignment
      arch: arm: make _image_ram_start point to the beginning of sram
      scripts: add missing lincense in scripts/gen_app_partitions.py
      cmake: move app_data_alignment.ld under ARC sub-directory
      cmake: do not run app data section aligning post-script for ARM
      arch: arc: add missing macro helper definition
      kernel: remove MEM_PARTITION_ENTRY macro
      kernel: mem_domain: remove redundant clearing of mem_partition fields
      kernel: expose k_mem_partition_attr_t outside User mode
      arch: arm: mpu: Updates in ARM MPU-related convenience macros
      arch: arm: clean-up inclusions in arm_core_mpu
      test: kernel: userspace: add include for arm core mpu
      arch: arm: fix bug in linker symbol definitions for application memory
      arch: arm: fix initial value of _image_ram_start
      dts: nordic: simplify definition of flash and sram sizes in dts
      include: linker: improve documentation of app shared mem symbols
      dts: nordic: nrf91: DTS include headers for nRF9160 SOC
      soc: nordic: add Kconfig options for several peripherals
      soc: nordic: Fix flash driver defines nomenclature in fixup.h
      dts: nordic: add missing nRF91 flash controller binding
      drivers: clock control: nrf: rename CLOCK_CONTROL_NRF5 Kconfig symbol
      drivers: clock control: rename nrf5_power_clock source and header
      drivers: clock control: rename Kconfig.nrf5 to Kconfig.nrf
      soc: nordic: add Kconfig structure for nRF9160 SOC definition
      soc: nordic: add nRF9160 soc and mpu init configuration
      soc: arm: introduce Kconfig option for Nordic IDAU
      ext: hal: nordic: add nrfx misc for nRF9160
      soc: nrf: remove unnecessary macros in mpu_regions.c
      soc: nrf: clean up inclusions and style fixes
      boards: nrf: correct the source of LED and Button definitions
      boards: arm: nrf: board definition for nrf9160_pca10090
      boards: arm: nrf: board definition for nrf9160_pca10090 (non-secure)
      boards: nrf: add initial documentation for nrf9160_pca10090
      CODEOWNERS: Code-owner for nRF9160 Board
      soc: nrf: add include of nrfx_config_nrf9160.h in nrf9160 soc.h
      dts: nordic: add binding and macro mapping for SPU
      dts: nordic: correct binding file names
      dts: nordic: adding FICR binding file and macro define
      arch: arm: mpu: remove nxp_mpu_enabled state variable
      scripts: west: explicitly ask for --sectorerase for nRF9160_pca10090
      tests: kernel: interrupt: group IRQ line number selection together
      arch: arm: Kconfig option for non-overlapping MPU region requirement
      kernel: mem_domain: extend sane_partition for non-overlapping regions
      arch: arm: introduce/implement API for configuring static MPU regions
      arch: arm: mpu: update K_MEM_PARTITION_ macros for ARMv7-M
      arch: arm: mpu: internal API for configuring static memory regions
      arch: arm: mpu: implement internal API for configuring static regions
      arch: arm: mpu: remove init of static regions from arm_mpu_init()
      arch: arm: mpu: functionality to configure static memory regions (v7)
      arch: arm: mpu: functionality to configure static memory regions (v8)
      arch: arm: mpu: internal API for configuring dynamic memory regions
      arch: arm: mpu: implement internal API to configure dynamic regions
      arch: arm: introduce/implement API to configure dynamic MPU regions
      arch: arm: mpu: functionality to configure dynamic regions (v7)
      arch: arm: mpu: functionality to configure dynamic regions (v8)
      arch: arm: mpu: internal API for re-configuring active partitions
      arch: arm: mpu: implement internal API to configure partitions
      arch: arm: mpu: implement arm_core_mpu_get_max_available_dyn_regions
      arch: arm: mpu: implement API for memory domains in ARM (core) MPU
      arch: arm: mpu: group together USERSPACE-related implementation
      arch: arm: clean up depreciated implementation and API definition
      arch: arm: mpu: remove unnecessary MPU region type definitions
      arch: arm: mpu: align NXP MPU implementation with ARM MPU
      arch: arm: fix macro name inside an inline comment
      arch: arm: update doc for 8-byte stack alignment option for Cortex-M
      arch: arm: enforce double-word stack alignment on exception entry
      arch: arm: improve documentation of _arch_irq_lock(..)
      arch: arm: minor style fixes in funtion and headers' documentation
      soc: arm: add missing license header
      soc: arm: Kconfig option to indicate double-precision FP
      soc: arm: stm32: select double-precision FP in STM32F769XI
      soc: arm: indicate double precision floating-point unit

Ioannis Konstantelias (8):
      boards: stm32l496g_disco: fix copy-paste typo
      boards: stm32l496g_disco: fix sublist identation
      boards: arm: Add initial support for NUCLEO-L496ZG
      boards: nucleo_l496zg: Add UART for console
      boards: nucleo_l496zg: Add docs & flashing support
      boards: nucleo_l496zg: Add pwm mapping and RTC
      boards: nucleo_l496zg: Add SPI, I2C
      boards: nucleo_l496zg: Use shell-uart

Istvan Bisz (1):
      cmake: Eclipse CDT4 generator amendment

Iván Sánchez Ortega (1):
      doc: Indent RST code blocks and notes

Jakub Rzeszutko (68):
      subsys : shell : Added API changing prompt
      subsys: shell: removing troubleshooting assert
      shell : assert standardization
      doc: subsystems: shell: Add documentation.
      subsys: shell: manual `*` parsing
      subsys: shell: add int ret_val to command handlers
      doc: subsystems: shell: update documentation
      subsys: shell: add handlers diagnostic function
      subsys: shell: fix accept either CR or LF as as line delimiter
      doc: shell: update documentation to reflect bug fix #10207
      shell: Enable backends via Kconfig file
      samples: flash_shell: migrate example to new shell
      shell: parsing output LF character
      doc: shell: Updating documentation according to source changes
      shell: create instances automatically basing on enabled backend
      doc: shell: update documentation for shell init procedure
      CODEOWNERS: update logging and shell code owners
      samples: mpu: migrate sample to the new shell
      drivers: serial: nrfx: fix spelling mistake in an error message
      shell: commands help unification
      shell: examples unification
      doc: shell: update example usage of shell_cmd_precheck function
      shell: fix history feature
      subsys: shell: add dummy backend to simplify commands testing
      doc: shell: add information about dummy backend
      shell: fix assert in wildcard plugin
      shell: fix possible hanging reason when history feature is used
      shell: wildcard active by default
      shell: fix shell thread name
      test: unittest: run for 32bit architecture
      tests: shell: migrate tests to the new shell
      shell: fixing printing macros
      shell: fix make_argv function
      shell: fix double new line print for RTT backend
      shell: improve partial completion
      shell: documentation update
      shell: fix resize command
      shell: decrease built-in commands flash usage
      shell: remove ""options"" concept
      shell: printing command's help by shell engine
      shell: creating new module for help functionality
      doc: shell: update according to new help usage
      shell: rename shell_help_print function
      shell: remove Console dependencies
      shell: minor shell source cleanup
      shell: header file update
      shell: remove obsolete \r characters
      shell: static functions cleanup
      shell: fix execute command when help not active
      shell: fix tab key functionality.
      bt_shell: fix command bt advertise valid argument count
      samples: reel board: correct timeout condition
      shell: add meta-keys
      shell: documentation update according to new meta-keys
      shell: removing legacy shell
      shell: documentation update
      shell: meta-keys handle condition update
      shell: added static to char_replace function
      shell: removed foreground command functionality
      shell: safe print from different threads
      shell: documentation update
      shell: fix spelling mistake in Kconfig
      boards: add rtt console to nrf52 boards
      shell: add RTT backend to CI tests
      shell: update shell_uart backend test condition
      shell: fixed parameter type in exec_cmd function
      shell: improved shell_prompt_change function
      shell: unify commands execution

Jamie McCrae (1):
      soc: nordic: Add Nordic GPREGRET setting support

Jan Kowalewski (1):
      sanitycheck: Add Renode support

Jan Tore Guggedal (1):
      dts: bindings: Add binding for ADXL372 using SPI

Jan Van Winkel (38):
      drivers: display: Migrate to new logging subsystem
      samples: display: Migrate to new logging subsystem
      display: API for display driver
      driver: Updated ILI9340 driver to use display API
      drivers: sensors: Added MS5837 driver
      samples: sensor: Added sample for MS5837 sensor
      CODEOWNERS: Assign maintainer for display API & drivers
      drivers: display: Added DTS support for ili9340
      samples: display: Updated ili9340 sample to use DTS
      doc: Added generic display interface to API doc
      i2c: sensor: Replace static_assert by BUILD_ASSERT_MSG
      samples: cfb: Moved overlay config files to boards dir
      cfb: Set dimensions in character framebuffer
      drivers: Allow to set supported pix format in ssd drivers
      drivers: Added missing API functions in ssd drivers
      drivers: Return correct erorr codes in SSD1673 driver
      drivers: Clear SSD1673 display during display init
      drivers: display: Added windowing for SSD1673
      samples: doc: Added README.rst for CFB sample
      driver: SDL based display emulation driver
      samples: Added native posix board to cfb sample
      driver: display: sdl: Return correct pixel format
      driver: display: Added dummy display driver
      flash: Remove NRF dependency from flash shell
      settings: Corrected type for offset variables
      display: Added double buffer screen info to display API
      gui: Added glue logic for LittlevGL GUI library
      sample: gui: Added basic sample for lvgl library
      dfu: Cast offset to u32_t before calling LOG
      CODEOWNERS: Added code owner for GUI related code
      flash: Use flash page layout size in flash shell
      flash: Remove shell context from flash shell
      settings: Corrected __ASSERT include paths
      display: Remove stale ILI9340 header file
      tests: mcuboot: Do not read past image bounds
      tests: mcuboot: Erase image slot before starting test
      gui: Upstep LittlevGL to version 5.3
      gui: Corrected typo in object realign Kconfig option

Jean-Paul Saman (2):
      samples: blink_led: make it work for nrf52840-mdk
      samples: blink_led: make it work for nrf52832-mdk

Jiahao Li (2):
      Bluetooth: Mesh: Fixes existing friend lookup in Friend Request handling
      Bluetooth: Fixes length limit in `bt_hex_real`

Joakim Andersson (7):
      Bluetooth: host: Add set channel map command
      Bluetooth: shell: Add shell command set channel map
      Bluetooth: host: Fix name conflict with kernel smp_init in smp.c
      bluetooth: config: Fix bluetooth config dependencies
      Bluetooth: host: Allow to disable legacy pairing.
      Bluetooth: host: Require 128-bit encryption key for security level 4.
      Bluetooth: host: Fix identation of struct members

Joakim Andre Tønnesen (1):
      net: sockets: Add getaddrinfo and freeaddrinfo to socket offloading

Johan Hedberg (62):
      net: buf: Use void * instead of u8_t * for arbitrary data
      net: buf: Use size_t instead of u16_t for lengths in public API
      Bluetooth: Move bt_setup_id_addr() to avoid forward declaration
      Bluetooth: Fix identity creation through vendor HCI
      Bluetooth: Remove bogus condition for setting IRK for an identity
      Bluetooth: SMP: Remove bogus ARG_UNUSED() macro
      Bluetooth: GATT: Use BT_GATT_DESCRIPTOR() for descriptors
      Bluetooth: GATT: Fix const'ness of characteristic descriptor data
      doc: Bluetooth: Mention Mesh in the supported features
      Bluetooth: samples/peripheral_sc_only: Improve logging
      Bluetooth: Add API to iterate through existing bonds
      samples: boards: mesh/onoff-app: Remove SYS_LOG usage
      Bluetooth: Only build bt_hex() if BT_DEBUG is enabled
      Bluetooth: log: Make address helpers more robust
      Bluetooth: Switch from SYS_LOG to logger-based logging
      Bluetooth: Remove custom stack macros
      Bluetooth: Convert string helpers to use log_strdup
      Bluetooth: Convert monitor protocol to a logger backend
      samples: hci_spi: Convert from SYS_LOG to new logger
      samples: hci_uart: Convert from SYS_LOG to new logger
      samples: ipsp: Convert from SYS_LOG to new logger
      tests: bluetooth/tester: Convert from SYS_LOG to new logger
      samples: reel_board: Add Bluetooth Mesh badge demo app
      Bluetooth: Mesh: Add macros to encoded model publication periods
      samples: reel_board/mesh_badge: Add statistics and new message
      tests: bluetooth/tester: Fix having unique log domains
      Bluetooth: shell/gatt: Fix unreachable code
      samples: reel_board/mesh_badge: Fix null-termination of string buffer
      samples: boards/mesh_badge: Fix checking for null in hello message
      Bluetooth: Add basic documentation for address types
      Bluetooth: Mesh: Increase scan window from 10ms to 30ms
      samples: reel_board/mesh_badge: Fix comparison with unsigned number
      samples: reel_board/mesh_badge: Fix out-of-bounds array access
      samples: reel_board/mesh_badge: Fix various coding style issues
      samples: reel_board/mesh_badge: Fix string parsing from buffer
      samples: reel_board/mesh_badge: Fix long name truncation
      Bluetooth: Mesh: Fix matching for all elements of an LPN
      Bluetooth: Mesh: Fix missing log_strdup() for logging
      Bluetooth: Mesh: Fix confusing language in log messages
      Bluetooth: Mesh: Fix typo leading to incorrect settings storage
      Bluetooth: Mesh: Fix heartbeat publication storing
      Bluetooth: shell: Fix incorrect indentation
      Bluetooth: Mesh: Remove redundant stack variable
      Bluetooth: Increase default TX stack size
      Bluetooth: Give proper names to Bluetooth threads
      atomic: Add atomic_set_bit_to() API
      Bluetooth: Take advantage of atomic_set_bit_to() API
      Bluetooth: Move BT_ID_DEFAULT macro under the right subgroup
      Bluetooth: Fix doxygen parameter reference for bt_le_scan_cb_t
      Bluetooth: Mesh: Convert bit-fields into flags
      Bluetooth: Mesh: Clean up net validity & provisioning state handling
      Bluetooth: Mesh: Add support for suspend/resume
      Bluetooth: Mesh: Fix publish timer handling when sending fails
      samples: reel_board/mesh_badge: Add simple power saving implementation
      samples: reel_board/mesh_badge: Disable secure network beacon
      net: buf: Add net_buf_pull_mem() API
      Bluetooth: controller: Use net_buf_pull_mem() for command parsing
      Bluetooth: Mesh: Take advantage of net_buf_simple_pull_mem()
      Bluetooth: Redesign HCI event handling
      Bluetooth: Take advantage of net_buf_pull_mem()
      Bluetooth: Add identifiers for Bluetooth 5.1
      shell: remove empty lines at EOF

Johann Fischer (57):
      boards: arm: dts: remove unnecessary interrupt flag
      drivers: apds9960: use i2c_burst_read to fetch ALS data
      driver: apds9960: reorganize ALS and proximity setups
      drivers: apds9960: use interrupt output for sample
      drivers: apds9960: add trigger mode for proximity
      samples: apds9960: rework APDS9960 sample
      drivers: apds9960: use power management
      net: ipv6: set pkt properties prior to routing
      include: display: expand api for monochrome displays
      subsys: add monochrome character framebuffer
      drivers: add SSD1306 display controller driver
      drivers: add SSD1673 EPD controller driver
      boards: reel_board: add ssd1673 node and fixup
      samples: add sample for character framebuffer
      sanitycheck: whitelist font entry section
      drivers: fxos8700: allow to change output data rate
      samples: fxos8700: remove DECIMATION_FACTOR
      drivers: fxos8700: add power mode configuration
      drivers: fxos8700: add motion detection
      samples: fxos8700: add motion detection overlay and test
      samples: fxos8700: enable pulse and motion detection in sample.yaml
      drivers: fxos8700: add verification of the supported devices
      boards: reel_board: use MMA8652FC label
      boards: frdm_kl25z: use fxos8700 driver for MMA8451
      boards: bbc_microbit: use fxos8700 driver for MMA8653
      samples: fxos8700: revised the output of the sensor values
      Revert ""samples: sensors: mma8451q: Add accelerometer sample""
      Revert ""drivers: sensor: Add support for MMA8451Q (3-axis accelerometer)""
      tests: build_all: remove MMA8451Q from dts.fixup
      drivers: fxos8700: mention compatible devices in the help section
      samples: fxos8700: add config for accelerometer devices
      samples: fxos8700: add accelerometer devices to README.rst
      boards: reel_board: update docu for the first board release
      logging: fix out of bounds write in log_strdup
      boards: reel_board: add link to the board schematic
      drivers: ssd1673: fix SPI GPIO CS configuration
      boards: frdm_k64f: remove gpio cs property from mcr20a node
      drivers: ieee802154_mcr20a: fix update of indirect registers
      drivers: ieee802154_mcr20a: do not initialize reset gpio on KW2XD
      drivers: ieee802154_mcr20a: fix style
      boards: usb_kw24d512: add support for DAPLink based adapters
      drivers: adc_mcux: save pointer for repeated sampling
      drivers: adc_mcux: improve initialization of the ADC
      boards: frdm_kw41z: set VREF to alternate source
      samples: ipsp: remove undefined symbol NET_DEBUG_L2_BT
      samples: ipsp: clarify how to build for kernels before 4.12
      bluetooth: smp: fix build if BT_SMP_SELFTEST is enabled
      sensor: hdc1008: convert to DT_<COMPAT>_<INSTANCE> defines
      boards: reel_board: use appropriate labels for HDC1010 and MMA8652FC
      drivers: hdc1008: add macros for manufacturer and device IDs
      cfb: increase maximum resolution of the framebuffer
      samples: cfb: remove unused variable and fix style
      board: reel_board: remove board.h
      drivers: ssd1673: remove unnecessary defines
      drivers: ssd1673: add DT properties for configuration registers
      drivers: ssd1673: use compatible property to identify display
      drivers: ssd1673: add support for SSD1608 and GDE029A1

Johannes Hutter (2):
      samples: blink_led: add support for nRF boards
      boards: reel_board: add documentation for udev rules

Jonas Norling (2):
      drivers: clock_control: Remove asserts that break LF clock on nRF5
      ext: hal: nordic: Make it possible to build NRFX GPIOTE and PPI

Jukka Rissanen (220):
      net: if: Refactor IPv6 address lifetime timer
      tests: net: ipv6: Test long address lifetime timeouts
      net: if: Support long lifetime IPv6 prefixes
      tests: net: ipv6: Test long lifetime IPv6 prefixes
      net: if: Add utility function to return IPv6 prefix info
      net: shell: Add information about IPv6 configuration
      net: mdns: Select source IPv4 address properly for sent msg
      net: mdns: Wrong net_buf pool was used
      net: context: Select proper network interface when binding
      samples: net: echo_server: Add VLAN support
      samples: net: echo-client: Add VLAN support
      samples: net: sockets: echo-client: Add VLAN support
      samples: net: sockets: echo_server: Add VLAN support
      net: route: Check NULL value in debug print
      net: route: Check that neighbor exists before deleting it
      logging: Make log_strdup() parameter const
      net: Convert core IP stack to use log levels
      net: buf: Convert to new logging system
      net: lib: Convert net_app to use log level
      net: lib: Convert coap API to use log level
      net: lib: Convert config library to use log level
      net: lib: Convert dns library to use log level
      net: lib: Convert http library to use log level
      net: lib: Convert openthread library to use log level
      net: lib: Convert sntp library to use log level
      net: lib: Convert socket library to use log level
      net: lib: Convert websocket library to use log level
      net: lib: Convert mqtt library to use log level
      net: mgmt: Use correct printf modifier in debug print
      net: ip: Split debug prints into smaller pieces
      net: Use logger hexdump print macro
      drivers: eth: Convert to use new logging
      drivers: ieee802154: Convert to use new logging
      drivers: net: slip: Convert to use new logging
      drivers: net: loopback: Convert to use new logging
      samples: net: echo_server: Convert to new logging system
      samples: net: coap_server: Convert to new logging system
      samples: net: dhcpv4_client: Convert to new logging system
      samples: net: dns_resolve: Convert to new logging system
      samples: net: eth_native_posix: Convert to new logging system
      samples: net: gptp: Convert to new logging system
      samples: net: http_client: Convert to new logging system
      samples: net: http_server: Convert to new logging system
      samples: net: ipv4_autoconf: Convert to new logging system
      samples: net: irc_bot: Convert to new logging system
      samples: net: mdns_responder: Convert to new logging system
      samples: net: promiscuous: Convert to new logging system
      samples: net: throughput_server: Convert to new logging system
      samples: net: traffic_class: Convert to new logging system
      samples: net: vlan: Convert to new logging system
      samples: net: ws_console: Convert to new logging system
      samples: net: sockets: Convert to use new logging
      samples: net: stats: Convert to new logging system
      samples: net: telnet: Convert to new logging system
      samples: net: ws_echo_server: Convert to new logging system
      samples: net: zperf: Convert to new logging system
      samples: net: sntp: Convert to new logging system
      samples: net: lldp: Convert to new logging system
      samples: net: nats: Convert to new logging system
      samples: net: rpl_border_router: Convert to new logging system
      samples: net: rpl_node: Convert to new logging system
      samples: net: mqtt_publisher: Convert to new logging system
      samples: net: wpan_serial: Convert to new logging system
      samples: net: wpanusb: Convert to new logging system
      samples: net: echo-*: Add openthread tag for sanitychecker
      samples: net: leds_demo: Convert to new logging system
      tests: net: Convert to new logging system
      usb: Fix net_hexdump_frags() parameters
      usb: net: Convert to use new logging
      net: lwm2m: Convert to new logging system
      samples: net: lwm2m_client: Convert to new logging system
      net: app: No need to print anything if resolving is not possible
      samples: net: syslog: Remove the sample application
      net: Use log_strdup() when printing debug strings
      net: Make Kconfig template variables prettier
      net: wifi: Removing SYS_LOG_DBG as that is no longer used
      drivers: wifi: Convert to use new logging
      samples: net: wifi: Adding sample.yaml file
      net: arp: Add support for receiving gratuitous ARP request
      tests: net: arp: Add gratuitous ARP tests
      net: wifi: Allow mgmt interface to compile if not offloaded
      samples: net: coap_client: Remove obsolete prj_bt.conf file
      net: Remove obsolete config options from samples and tests
      net: shell: Migrate to new shell API
      net: wifi: Convert wifi shell to use new shell
      net: ieee802154: Convert IEEE 802.15.4 shell to use new shell
      net: bt: Convert network Bluetooth shell to use new shell
      net: openthread: Convert to use new shell
      samples: net: rpl_border_router: Convert to use new shell
      samples: net: wpanusb: Removing useless shell
      samples: net: zperf: Convert to use the new shell
      samples: net: http_server: Remove Quark devboard from sanity
      drivers: eth: e1000: Remove unused variable
      net: connection: Fix debug print for connection index
      net: gptp: Calculate GM rate ratio properly
      net: logging: Remove function name from NET_DBG if needed
      net: Honor default log level
      net: app: Fix register and unregister functions
      net: wifi: Check offloading pointers before accessing them
      net: wifi: Fix connect command parameter checks in shell
      net: wifi: Make sure shell is valid before trying to print to it
      net: buf: Remove remaining SYS_LOG usage
      net: openthread: Remove remaining SYS_LOG usage
      net: lib: init: Remove remaining SYS_LOG usage
      net: log: Add missing spaces around = in Kconfig.debug
      net: buf: Fix debug level setting
      drivers: eth: native_posix: Allow non-root access
      samples: net: zperf: UDP download cmd params incorrectly checked
      tests: net: Fix possible null dereference in net_pkt tests
      net: Honor max log level in net
      tests: net: pkt: Do not print extra errors
      net: buf: Use proper Kconfig log level template
      net: log: Max debug level was forced too high
      net: Set used transport protocol to net_pkt
      net: ipv4: Fix network byte ordering for netmask related computing
      net: ip: Add function to check if IPv4 address is broadcast one
      tests: net: ip-addr: Add checks for IPv4 broadcast addresses
      net: Properly handle pkt IPv4 broadcast destination address
      net: Drop IPv4 packet if source address is broadcast one
      net: ipv6: Drop outside pkt with ::1 dst or src address
      tests: net: ipv6: Check if we receive ::1 as src or dst address
      net: if: Move link address assert check to net_if_up()
      net: ipv6: Drop interface scope multicast dst address pkt
      tests: net: ipv6: Drop pkt for iface scope mcast addresses
      net: ipv6: Drop zero scope multicast packet
      tests: net: ipv6: Drop pkt for zero scope mcast addresses
      net: ipv6: Drop site scope multicast dst address pkt
      tests: net: ipv6: Drop pkt for site scope mcast addresses
      net: ipv6: Drop organisation scope multicast dst address pkt
      tests: net: ipv6: Drop pkt for org scope mcast addresses
      net: ipv6: Verify ICMPv6 checksum before accepting packet
      tests: net: mld: Fix ICMPv6 checksum calculation
      tests: net: ipv6: Calculate ICMPv6 checksum for RA message
      net: Rename net_is_xxx...() functions to net_xxx_is...()
      samples: net: zperf: Remove task_profiler as it is not used
      net: ipv6: Check the size of the ICMPv6 echo-req packet
      net: shell: Add IPv6 and IPv4 checks for ping command
      net: ipv6: Loopback interface local scope packets back to us
      tests: net: ipv6: Test interface local scope dst pkt sending
      samples: net: echo-server: ROM usage of quark_se_c1000_devboard
      net: if: Allow calling IPv6 specific functions
      net: if: Allow calling IPv4 specific functions
      net: eth: Remove old IPv6 interface identifier address
      tests: net: ethernet_mgmt: Enable IPv6 for this test
      net: qemu: Allow SLIP or normal ethernet connectivity
      samples: net: echo-server: Introduce overlay file for e1000
      net: promisc: Flush the promisc queue properly
      drivers: eth: e1000: Free packet after sending it
      net: if: Properly turn off promiscuous mode
      samples: net: promisc: Add simple shell to toggle promisc mode
      net: pkt: Print debug prints in one line
      net: app: Remove extra log_strdup() calls
      net: Discard received extra data at the end of the IP message
      drivers: eth: native_posix: Fix gPTP compile error
      drivers: eth: native_posix: Fix PTP driver init priority
      drivers: eth: native_posix: Enable PTP clock support for gPTP
      logging: Add network backend
      net: config: Enable syslog to network in init
      samples: net: syslog: Remote syslog service example
      net: Clarify logging in networking code
      samples: net: Convert to use generic logging macros
      net: Move net_analyze_stack() function to net_core.c
      net: core: Change NET_ASSERT*() to use zephyr standard assert
      tests: net: tcp: Fix interface initialization
      tests: net: context: Disable assertion for net_context tests
      net: if: Make dst address const when selecting src addr
      net: gptp: Get the gPTP header properly
      net: gptp: Remove log_strdup() when printing packet info
      net: gptp: Add more debugging when changing state
      net: gptp: state2str() func is only available if debugging
      doc: net: Add instructions for native_posix board
      samples: net: gptp: Add instructions for native_posix
      drivers: eth: mcux: Fix gPTP header parsing
      drivers: eth: sam-e70: Fix gPTP header parsing
      drivers: eth: native_posix: Fix gPTP header parsing
      net: gptp: Refactor the gPTP header addition
      net: gptp: Update pdelay req lost counter when needed
      tests: net: ipv6: Fix reference to stack variable
      samples: net: gptp: Update AVnu/gptp build instructions
      net: gptp: Make sure that neighbor_rate_ratio cannot be 0
      net: gptp: Add debug print if a gptp packet cannot be created
      net: gptp: Calculate the link delay same way as Avnu/gptp
      net: pkt: Show buffer allocations only when needed
      drivers: eth: gmac: Remove extra variable
      net: pkt: Only enable debug print when really needed
      net: gptp: Track memory allocations better
      net: rpl: Remove the deprecated code
      net: websocket: Remove the websocket as HTTP APIs are removed
      net: http: Remove HTTP client and server APIs
      net: mqtt: Remove legacy MQTT library
      net: shell: Fix network interface type for OpenThread
      net: mqtt: Remove legacy MQTT headers
      net: context: Add locking for concurrent access
      tests: net: context: Fix tests when using locking
      tests: net: dns: Temporarily disable IPv6 query test
      net: app: Remove net-app API files
      net: shell: Remove net-app command
      samples: net: Remove net-app based sample applications
      doc: net: Remove net-app API references
      net: shell: Remove HTTP command as it is obsolete
      net: Remove net_app references from the code
      net: ethernet: Add more IEEE 802.3 protocol types
      net: ip: Add helpers for packet socket support
      net: Add CAN protocol family type used in socket CAN support
      net: link: Add link addres type for CANBUS addresses
      net: socket: can: Add socket CAN support
      net: l2: Add CANBUS L2 layer
      net: utils: Fix net_proto2str() function
      net: can: Add CAN handling to net_context
      net: context: Use signed value for interface index
      net: socket: can: Add getsockopt() and setsockopt() support
      tests: net: context: Fix invalid address family test
      tests: net: ipv6: Fix the DAD failure in the test
      net: socket_can: Make sure that things work without IPv4
      net: shell: Add AF_CAN and AF_PACKET support to ""net conn"" command
      net: sockets: Remove extra ""default n"" setting from config
      net: canbus: Set link address type correctly
      net: socket: Dispatch all AF_CAN handling to sockets_can.c
      drivers: can: stm32: Add socket CAN support
      samples: net: can: Add socket CAN sample

Jun Li (4):
      soc: stm32f4: enable dma options for soc
      api: dma: allow to pass arbitrary user data into callback
      dma: use user data in callback
      tests: dma: use generic callback arg for all dma_callbacks

Kamil Gawor (2):
      subsys: bluetooth: Add notification TX complete callback
      drivers: gpio: Add reading port/pin in both direction

Kamil Piszczek (7):
      Bluetooth: host: directed advertising support
      Bluetooth: shell: adding command for directed advertising
      Bluetooth: gatt: gatt_discover_next with inclusive handle range
      Bluetooth: host: always set address via HCI before scanning
      ext: hal: nrfx: adding clock driver to Kconfig
      ext: hal: nrfx: adding timer driver to Kconfig
      ext: hal: nrfx: adding nfct driver to Kconfig

Karl Zhang (1):
      arm: v2m musca: Add support for v2m musca SoC and board

Karol Lasończyk (1):
      drivers: watchdog: align sample and test to new DT

Keguang Zhang (1):
      setting: avoid the registration of the same handler

Kim Sekkelund (1):
      bluetooth: host: Rename bt_conn_get_id and make it public.

Kiril Zyapkov (3):
      drivers: uart_stm32: fix ORE hogging the CPU
      boards: arm: fix openocd.cfg for nucleo_l476rg
      soc: st: add STM32L471xG

Klaus Petersen (3):
      Build: Offsets lib as OBJECT not STATIC
      Build: Offsets lib as OBJECT not STATIC
      Build: Added support for out-of-tree Arch

Krzysztof Chruscinski (107):
      logging: Refactor log_output module
      logging: add template for log configuration
      samples: subsys: logging: example of kconfig.log_template usage
      logging: fix undeclared __log_current_const_data_get
      tests: subsys; logging: log_core test to cover LOG_MODULE_DECLARE()
      shell: Rename shell to legacy_shell
      shell: Shell subsystem reimplementation
      samples: subsys: shell: Port sample to new shell subsystem
      sys: dlist: Add sys_dlist_peek_prev_no_check and sys_dlist_peek_prev
      shell: Add shell history feature
      shell: Add built-in shell commands
      shell: Extend shell as a log backend
      logging: Add shell commands
      ext: lib: Add fnmatch library
      shell: Add wildcard support
      shell: fix shell_log_backend dependency
      shell: modules: Adapt kernel commands to new shell
      logging: Add option to suppress level printing in log_output
      logging: Add option to suppress timestamp printing in log_output
      arch: Add LOG_PANIC to fault handlers
      logging: allow mulitple log_panic calls
      logging: add mechanism for handling transient strings
      tests: logging: add log_strdup test to log_core test
      lib: ring_buffer: Rename sys_ring_buf_ to ring_buf_item_
      lib: ring_buffer: add raw byte access mode
      logging: Add autostart option to LOG_BACKEND_DEFINE
      logging: Postpone log processing when no backends enabled
      fs: Port shell commands to new shell
      tests: subsys: logging: Fix log_core test
      logging: Added support for 10 arguments in log message
      logging: Add optional function name prefix
      logging: Fix possible out-of-bound access in log_output
      logging: add arguments counting in log_generic
      shell: Postpone enabling log backend
      shell: Fix TXDONE signal not being cleared
      logging: Support for up to 15 arguments in log message
      logging: Add compile time error on 64 bit platforms
      shell: shell_uart: add ring_buffers and interrupt support
      drivers: ieee802154: Fix log configuration in kconfig
      net: l2: Fix NET_L2_BT dependency in KConfig
      logging: Fix errors in log usage
      logging: Refactor LOG_MODULE_REGISTER and LOG_MODULE_DECLARE macros
      logging: Handle nios2 global pointer register issue
      logging: Add uart backend dependency to shell uart backend
      logging: Fix LOG_LEVEL dependency on log.h include
      shell: uart: Handle RX ring buffer full case
      shell: Add initial log level for rtt and uart backends
      logging: refactor log_filter_set to set existing log level
      shell: fix RTT backend not returning TX amount
      shell: enable UART backend without interrupts
      shell: Fix log messages queueing for multiple instances
      logging: Fix lost printk output when no newline
      logging: Make logging thread priority fixed
      logging: Fix RTT backend being enabled with shell RTT
      logging: Add dropped messages notification to backends
      logging: Clean up in log_backend.h (asserts and doxygen)
      tests: subsys: logging: Add test for message drop notification
      logging: Fix log_core initialization
      drivers: clock_control: Enable LFSTARTED event for nrf5
      shell: Refactor RTT backend
      shell: Fix thread priority
      logging: Fix initial log level in shell
      logging: Fix allocation of single chunk log messages
      logging: severity-wise filtering of function name prefix presence
      bluetooth: Simplifying log macros
      net: Simplifying log macros
      logging: Handle dropped messages in log_output
      logging: Add handling of dropped messages to UART backend
      logging: Add handling of dropped messages to RTT backend
      logging: Add handling of dropped messages to native POSIX backend
      shell: Improve handling of log messages
      shell: Add dropping of expired messages
      logging: Refactor RTT backend to handle host absence
      shell: Allow calling shell_fprintf from various contexts
      samples: subsys: shell: Add foreground command example
      shell: Fix code style errors in shell.c
      logging: Add buffer flushing on entering panic
      logging: Fix reporting of dropped logs before backend init
      misc: Extend util.h with conditional code macros
      tests: misc: Add test suite for util.h with tests for COND_CODE_n
      logging: Replace custom macros with generic ones from util.h
      logging: Refactoring 'in place' mode to reduce memory footprint
      logging: Extend log_output to support raw data
      tests: subsys: logging: Add log_output test suite
      logging: Add support for new 'in place' mode to UART backend
      logging: Add support for new 'in place' mode to RTT backend
      logging: Add support for new 'in place' mode to native posix backend
      shell: Add support for notifying about dropped logs
      logging: log_backend_rtt: Fix panic behavior when no host
      logging: Handle panic occuring before log initialization
      misc: Add k_panic on assert
      shell: Move internal functions from shell.c to shell_ops.c
      shell: Add handling of CONFIG_LOG_INPLACE_PROCESS option
      drivers: counter: Counter API implementation for nRF Series (RTC).
      tests: drivers: counter: Add tests for counter driver
      drivers: counter: rtc:  Deprecating legacy counter and rtc API
      drivers: counter: Counter API implementation for nRF Series (RTC).
      soc: arm: nordic_nrf: Remove duplicates from Kconfig.soc
      boards: Add counter capability to nordic boards
      tests: drivers: counter: Fix tests for nrf peripherals
      counter: Fix warning due to deprecation of legacy API
      drivers: timer: Fix broken dependency for nrf_rtc_timer
      drivers: counter: Add user_data to alarm callback
      drivers: counter: Rename wrap to top_value
      rtc: Fix call to counter API in adaptation layer
      drivers: counter: Fix default top value callback in counter_nrfx_rtc.c
      counter: Clarify behavior of counter_set_channel_alarm

Krzysztof Chruściński (2):
      drivers: counter: API unifying counter and rtc drivers.
      drivers: counter: Counter API implementation for nRF Series (TIMER).

Kumar Gala (389):
      log: make name param explicit
      boards: nucleo_f429zi: Fix typo in the docs
      dts: arm: ti: Remove use of CONFIG_SOC_* from TI SoC dts files
      dts: arm: silabs: Remove use of CONFIG_SOC_* from Silabs SoC dts files
      ci: Increase number of build slaves to 7
      dts/arm/st: Remove unneeded setting of #{address,size}-cells from RTC
      dts: Use new DT_SIZE_{K,M} macros
      dts: arm: atmel_same70: Remove use of CONFIG_SOC_* from Atmel dts files
      dts: arm: nrf: Remove use of CONFIG_SOC_* from Nordic dts files
      dts: Cleanup warnings associated with unit_address_format and leading 0s
      dts: Cleanup warnings associated with alias_paths using '-'
      dts: Cleanup warnings associated with gpio_keys that aren't buttons
      dts: Cleanup warnings associated with interrupt controller nodes
      dts: Cleanup warnings associated with unit_address_vs_reg and cpu node
      dts: Cleanup warnings associated with flash and memory nodes
      dts: Cleanup warnings associated with unit_address_vs_reg on intel_curie
      tests: mem_protect: syscalls: set CONFIG_USERSPACE in prj.conf
      boards: arm: nrf52810_pca10040: Fix dts avoid_unnecessary_addr_size warn
      dts: Cleanup warnings associated with cpu node
      boards: arm: nrf: Fix dts avoid_unnecessary_addr_size warn
      scripts/dts/extract: Fix handling of value extraction based on cells
      ext: hal: cypress: Protect floating point code with CONFIG_FLOAT
      dts: arm: st: Remove use of CONFIG_SOC_* from STM32 F0 dts files
      dts: arm: st: Remove use of CONFIG_SOC_* from STM32 F1 dts files
      dts: arm: st: Remove use of CONFIG_SOC_* from STM32 L0 dts files
      dts: arm: st: Remove use of CONFIG_SOC_* from STM32 L4 dts files
      dts: arm: st: Remove use of CONFIG_SOC_* from STM32 F2 dts files
      dts: arm: st: Remove use of CONFIG_SOC_* from STM32 F3 dts files
      dts: arm: st: Remove use of CONFIG_SOC_* from STM32 F4 dts files
      dts: arm: st: Remove use of CONFIG_SOC_* from STM32 F7 dts files
      dts: arm: st: mem.h
      boards: nrf51_ble400: Convert to using dts for led/button
      gpio: Remove deprecated macros
      gpio: remove unused GPIO_INT_CLOCK_SYNC flag
      arm: beetle: Use device tree for IRQs
      boards: atmel: Enable gpio in board.yaml
      dts: Reduce include paths for building dts
      riscv: Add device tree support to pulpino
      dts: pulpino: Add device tree support for GPIO controller
      boards: zedboard_pulpino: Move led & button to dts
      dts: atmel: gpio: rename dts binding file
      dts: atmel: Add missing GPIO properties
      boards: sam4s_xplained: Move led/button info to DTS
      boards: sam_e70_xplained: Move led/button info to DTS
      boards: lpcxpresso54114_m0: fix pinmux.c
      gitignore: Ignore any sanity-out* or build* dir
      scripts/dts/extract: Add get_parent_address helper function
      scripts/dts: Add help function to get address/size cells for a node
      scripts/dts/extract: Re-implement get_addr_size_cells
      scripts/dts/extract: Add support for translating range properties
      gpio: sifive: Add device tree support for GPIO generation
      boards: hifive1: Move LEDs to device tree
      drivers: serial: uart_sifive: Get clock frequency from device tree
      riscv32: sifive-freedom: Move dts.fixup into soc dir
      gpio: sx1509b: Add device tree support for GPIO generation
      boards: nrf: Convert boards to use device tree for LEDs & Buttons
      boards: atmel: Convert boards to use device tree for LEDs
      boards: x86: Convert boards to use device tree for LEDs & Buttons
      gpio: silabs gecko: Add device tree support for GPIO
      boards: silabs: Convert boards to use device tree for LEDs & Buttons
      boards: arc: Convert boards to use device tree for LEDs & Buttons
      boards: arm: stm32_mini_a15: Remove deprecated board
      soc: silabs: efm32hg: Move USART fixups from board to SoC
      dts: yaml: remove unused id field
      rtc: rtc_mcux: Fix build issue with logging change
      dts: yaml: remove unused id field
      scripts: dts: extract: Fix handling of reg prop being a list of lists
      dts: x86: Fix dts warnings when building up_squared
      dts/extract/globals.py: Add function to get list of compats
      dts: Add proper handling for boolean properties
      dts/extract_dts_includes.py: Filter out standard properties
      scripts/dts/extract: Change compat define prefix
      dts/extract_dts_includes.py: Move label override handling
      dts/extract_dts_includes.py: refactor get_node_label
      dts/extract_dts_includes.py: refactor get_node_label_string
      drivers: ssd1306: fixup dts support
      drivers: display: ssd1673: Fixup dts support
      Revert ""libc: minimal: Add error codes for key management""
      size_report: convert to use argparser as optparse has been deprecated
      size_report: Mark arguments as required
      size_report: cleanup up detection and error handling
      lib: mempool: Fix compile warning
      kernel: msq_q: Fix compile warning
      usb: device: Fix compile warning
      bluetooth: hci: spi: Fix compile warning
      drivers: uart: Remove deprecated uart_irq_tx_empty
      boards: arm: Remove CONFIG_MCUMGR_SMP_UART from dts files
      dts: bindings: cleanup soc-nv-flash binding
      driver: sensor: bmm150: Use SENSOR_CHAN_MAGN_XYZ
      drivers: sensors: remove deprecated enum values
      dts/bindings: document use of value 'base_label'
      dts/bindings: Remove id field from inventek,eswifi
      arch: Remove board.h include from arch files
      tests: Remove board.h include
      boards: Cleanup include of board.h
      soc: Remove board.h include
      subsys: Remove board.h include
      ext: hal: nxp: lpc: Remove board.h include
      samples: basic: limit board.h to where its needed
      samples: 96b_argonkey: Remove board.h
      samples: Remove board.h include
      samples: nrf52: power_mgr: Remove board.h
      drivers: i2c: remove deprecated dev_config struct
      drivers: Remove board.h include
      boards: bbc_microbit: Move button data into dts from board.h
      drivers/display: mb_display: Move gpio defines to driver
      subsys: usb_device: Fix removal of board.h
      scripts: dts: extract: Fix handling of prop being a list of lists
      linker: Fixup warning associated with .ARC.attributes section
      riscv: Add min dts support for miv SoC & m2gl025_miv board
      drivers: serial: uart_miv: Convert to use DTS
      riscv: Move DTS Kconfig enablement to arch level
      dts/bindings: Remove id field from atmel,sam-watchdog
      dts: bindings: remove setting use-prop-label in st,stm32-ccm
      drivers: uart_sam0: move sercom pad info to dts
      drivers: spi_sam0: move sercom pad info to dts
      dts/bindings: Fix warning in ti,cc32xx-i2c.yaml
      gpio: ti cc32xx: Add device tree support for GPIO
      boards: cc3220sf_launchxl: Add dts support for led/buttons
      scripts/dts: extract_dts_includes: Add support for client pwms
      arm: soc: kinetis: Update PWM dts support
      boards: hexiwear_k64: Add PWM LED to device tree
      dts/bindings: Add binding for pwm-leds
      samples: baisc: Update to use DT generated pwm defines
      boards: hexiwear_k64: Remove PWM defines
      dts/extract_dts_includes.py: remove use of 'use-property-label' in regs
      dts/extract_dts_includes.py: Rework flash partition extraction
      dts/extract_dts_includes.py: Expose flash partition extract function
      drivers: entropy: Get device name from dts if supported
      arm: kinetis: Add basic DTS support for RNGA
      arm: kinetis: Add basic DTS support for TRNG
      Kconfig: dts: Move HAS_DTS to arch level
      Bluetooth: host: Fix trivial comment mismatch
      samples: blinky: cleanup to use just DT and remove board.h
      shell: Fix reference to nonexistent Kconfig symbol
      dts: Fix warnings associated with reg/unit-address not matching
      dts: Update STM32 PWM device tree binding/nodes for #pwm-cells
      dts: Update i.MX PWM device tree binding/nodes for #pwm-cells
      adc: adc_dw: Remove dead code related to undefined Kconfig symbols
      ext: qmsi: Remove dead code related to undefined Kconfig symbols
      dts: Update sifive PWM device tree binding/nodes for #pwm-cells
      sensors: bmi160: Add DTS support
      usb: Make USB_VBUS_GPIO a Kconfig option
      wifi: winc1500: Add Device Tree support
      samples: wifi: winc1500: Don't assume all GPIO pins on same controller
      dts: Fix builds of arc EMSK & NSIM SoCs
      boards: Remove board.h from boards that don't need it
      boards: Remove including soc.h in board.h
      samples: boards: Rename microbit dir to bbc_microbit
      spi: sam: Specify pinmux for chipselect via Kconfig
      samples: Add explicit zephyr_include_directories to get <board.h>
      boards: nrf52840_mdk: move modem configurtion to overlay
      boards: nrf52840_pca10056: move modem configurtion to overlay
      dts: Remove ifdef CONFIG_FS_FLASH_STORAGE_PARTITION from dts files
      drivers: watchdog: Convert Atmel SAM driver to DTS
      dts: i2c: cleanup CONFIG_I2C_x_IRQ_PRI
      dts: Fix warning related to invalid alias name
      ieee802154: mcr20a: Cleanup Kconfig and DT support
      drivers/spi: Always selecet HAS_DTS_SPI once SPI is enabled
      ieee802154: cc2520: Move to DT only config support
      board: quark_se_c1000_devboard: Move the CC2520 DTS node to the board
      ieee802154: cc2520: quark_se_c1000_devboard: Move all GPIOs to DTS
      dts: atmel: samd: Fix reg address for NVM flash controller
      dts: riscv: pulpino: Fix warning for itim unit address
      boards: up_squared: Rework dts_fixup.h to work w/o BOARD_DIR include
      cmake: Remove global include of board dir
      kconfig: Hide the DesignWare SPI driver on unsupported platforms
      dts: spi: cleanup CONFIG_SPI_x_IRQ_PRI
      samples: wifi: Enable sample on disco_l475_iot1
      adc: ti_adc108s102: Remove driver as its bit-rotted
      driver: wifi: eswifi: Use DT_ prefixed names
      driver: wifi: eswifi: Fix how we get SPI bus
      adc: adc_intel_quark_d2000: Pass 0 for IRQ Priority
      dts: adc: cleanup CONFIG_ADC_x_IRQ_PRI
      dts: adc: cleanup CONFIG_ADC_x_NAME
      adc: remove adc_ti_adc108s102.h
      dts: arc: emsk: Remove DT_{I,D}CCM_SIZE from emsk_dt.h
      dts: arc: emsk: Remove DT_APB_CLK_HZ from emsk_dt.h
      dts: arc: emsk: Remove emsk_dt.h and CONFIG options from dtsi
      scripts: extract_dts_includes: Fix DeprecationWarning
      dts: ieee802154: cc1200: Add DTS support
      samples: cmsis_rtos_v1: Disable tests on qemu_xtensa
      scripts: extract_dts_includes: Handle YAML inheritance when we load
      scripts: extract_dts_includes: remove passing yaml param to functions
      scripts: extract_dts_includes: Add accessor function to access binding
      scripts: extract_dts_includes: Pass node address to get_binding
      scripts: extract_dts_includes: Split out yaml_list info
      scripts: extract_dts_includes: Support same sensor on different bus
      scripts: extract_dts_includes: Generate device bus info define
      sensor: lsm6dsl: Update DTS support
      dts: Add binding for NXP i.MX RT itcm/dtcm memories
      tests: crypto: tinycrypt: Limit to boards with more than 128K flash
      scripts: extract_dts_includes: Fix handing of no binding
      boards: mimxrt1050_evk: Split QSPI flash config as a seperate board
      drivers: wifi: eswifi: Fix build issue due to -fno-common
      drivers: wifi: eswifi: Remove unused code
      boards: cy8ckit_062_wifi_bt_m{0,4}: Add OpenOCD support for flashing
      dts: binding: Add mmio-sram binding
      scripts: extract_dts_includes: Rework get_binding
      boards: lpcxpresso54114: Enable SEGGER support by default for M0
      boards: hexiwear_kw40z: Enable SEGGER support by default
      boards: mimxrt1060_evk: Split hyperflash config as a separate board
      dts: nrf: Fix device tree warnings
      ci: update docker image to 0.5-rc4 to get sdk-ng
      dts: stm32: Move usb PHY nodes out of SoC to fix warning
      scripts: extract_dts_includes: Generate defines for chosen props
      arc: cleanup linker scripts to include autoconf.h first
      ci: bump number of builders to 7
      dts: Rename imx-rt-{i,d}tcm compatible
      dts: arm: nxp: imx: Use 'nxp,imx-{i,d}tcm' compatible
      dts: nrf: Fix missed device tree warnings
      dts: flash: w25qxxdv: Add Device Tree Support for SPI FLASH w25qxxdv
      boards: arm: Add xtools as a supported toolchain
      scripts/dts/extract: Support QSPI memory mapped flash
      boards: arm: nxp: imxrt: Fix SPI nodes on flexspi controller
      dts: silabs: Add SoC level compatible
      boards: arm: Cleanup xtools toolchain support
      scripts/dts/extract: Add an instance ID for each compatiable
      scripts/dts/extract: Fliter duplicates values inserted into defs
      scripts/dts/extract: Generate unique defines based on compat & instance
      scripts: extract_dts_includes: Change arg parsing requirements
      dts: nordic: Fix vendor prefix for flash controller
      boards: warp7_m4: Add i2c/gpio as supported peripherals
      boards: bbc_microbit: Add i2c/gpio as supported peripherals
      dts: nrf: Add SoC compatible property
      boards: 96b_argonkey: Add hts221 sensor to supported list
      boards: nrf52_pca20020: Add hts221 sensor to supported list
      sensor: bme280: Converting to using device tree
      sensors: lsm303dlhc: Convert to new DT_<COMPAT>_<INSTANCE> defines
      sensors: hts221: Convert to new DT_<COMPAT>_<INSTANCE> defines
      sensors: hts221: Get I2C address from device tree
      sensor: hts221: Move GPIO to device tree
      boards: reel_board: Fix dts for MMA8652FC/FXO8700 interrupt lines
      samples: sensor: fxos8700: Add boards to sample
      sensor: fxos8700: Convert to new DT_<COMPAT>_<INSTANCE> defines
      scripts/dts/extract: fix handling of non-MMIO SPI flash
      sensor: fxas21002: Convert to new DT_<COMPAT>_<INSTANCE> defines
      ieee802154: mcr20a: Convert to new DT_<COMPAT>_<INSTANCE> defines
      sensor: lps22hb: Convert to new DT_<COMPAT>_<INSTANCE> defines
      led_strip: ws2182: Add Device Tree support
      sensor: max30101: Convert to new DT_<COMPAT>_<INSTANCE> defines
      samples: sensor: vl53l0x: Fixup sample to build all boards with it
      sensor: vl53l0x: Convert to new DT_<COMPAT>_<INSTANCE> defines
      sensor: bmi160: Convert to new DT_<COMPAT>_<INSTANCE> defines
      doc: extensions: Add shield support to zephyr-app-commands
      samples: bluetooth: peripheral_hr: Rework FRDM-KW41Z shield support
      scripts/dts/extract: Don't warn for 'category' merge of 'required'
      cmake: dtc: Add ability to check of dtc flag is valid
      cmake: dts: Tweak warning flags for unit_address check
      boards: x86: arduino_101: Fix SPI dts node
      dts: arm: msp432p4xx: Fix memory compatible
      scripts/dts/extract: Move extract_{controller,cells} into globals
      scripts/dts/extract: Add single extract to extract_{controller,cells}
      scripts/dts/extract: Add support for generating SPI GPIO CS defines
      wifi: eswifi: Use generated SPI CS define
      dts: arm: nxp: Fix dtc warning from nxp_rt.dtsi
      dts: arm: nxp: Cleanup SPI node on K6X, KW4{0,1}Z
      dts: arm: nxp: kw2xd: Remove cs-gpios from SPI1
      drivers: eth_enc28j60: Fix CS GPIO support
      dts: bindings: smsc,lan9220: Fix warning related to id field
      boards: arm: mimxrt1064_evk: Always have QSPI flash enabled
      boards: arm: mimxrt10{20,50,60,64}_evk: Enable BOOT HEADER in Kconfig
      cmake: dts: Fix building with dtc 1.4.6
      drivers: i2c: i2c_sbcon: Convert to new DT_<COMPAT>_<INSTANCE> defines
      drivers: uart: cmsdk_apb: Convert to new DT_<COMPAT>_<INSTANCE> defines
      drivers: wdog: cmsdk: Convert to new DT_<COMPAT>_<INSTANCE> defines
      cmake: dtc: silence output from check_dtc_flag
      wifi: winc1500: Convert to new DT_<COMPAT>_<INSTANCE> defines
      ieee802154: cc2520: Convert to new DT_<COMPAT>_<INSTANCE> defines
      flash: w25qxxdv: Convert to new DT_<COMPAT>_<INSTANCE> defines
      dts: intel_s1000: Fix dtc warnings
      led_strip: apa102: Convert to new DT_<COMPAT>_<INSTANCE> defines
      boards: arm: mps2_an385: Fix dtc warning
      led_strip: lpd880x: Add Device Tree support
      display: ssd1673: Convert to new DT_<COMPAT>_<INSTANCE> defines
      display: ssd1306: Convert to new DT_<COMPAT>_<INSTANCE> defines
      modem: wncm14a2a: Convert to new DT_<COMPAT>_<INSTANCE> defines
      display: ili9340: Convert to new DT_<COMPAT>_<INSTANCE> defines
      sensor: ms5837: Convert to new DT_<COMPAT>_<INSTANCE> defines
      sensor: apds9960: Convert to new DT_<COMPAT>_<INSTANCE> defines
      audio: tlv320dac310x: Convert to new DT_<COMPAT>_<INSTANCE> defines
      sensor: ccs811: Convert to new DT_<COMPAT>_<INSTANCE> defines
      sensor: adt7420: Convert to new DT_<COMPAT>_<INSTANCE> defines
      scripts/dts/extract: Move flattening of list to one place
      scripts/dts/extract: Rework to extract_{controller,cells}
      tests: build_all: Remove explicit nsim_uart build test
      drivers: uart_nsim: Add device tree support
      gpio: mcux_igpio: Cleanup old CONFIG_ symbols
      ext: libmetal: Update libmetal to v2018.10 release
      ext: open-amp: Update OpenAMP to v2018.10 release
      samples: openamp: Update sample to OpenAMP v2018.10 release
      pinmux: remove pinmux dev
      sensor: lis2dh: Fix gcc8 compiler warning
      boards: arm: nrf52_pca10040: Add SPI & I2C as supported devices
      sensor: adxl372: Convert to new DT_<COMPAT>_<INSTANCE> defines
      dfu: Fix build issue with gcc8
      cmake: Fix how usage finds board names
      audio: mpxxdtyy: Convert to new DT_<COMPAT>_<INSTANCE> defines
      arch: riscv32: Fix trivial comment
      rtc: stm32: Remove trivial endif comment
      boards: nrf52840_pca10090: Fix typo in Kconfig
      led: lp5562: Remove dts_fixup.h
      led: pca9633: Remove dts_fixup.h
      led: lp3943: Remove dts_fixup.h
      sensor: lsm9ds0: Remove unused define/Kconfig symbol
      uart: sifive: Fix trivial CONFIG -> DT missed conversion
      usb: usb_dc: Replace CONFIG_ symbols that should be DT_
      soc: xtensa: intel_s1000: Encode IRQ in dts
      ieee802154: mcr20a: Remove dead Kconfig symbols
      ieee802154: mcr20a: Fixup SPI CS handling
      display: ili9340: Fixup SPI CS handling
      sensor: lsm6dsl: Fixup SPI CS handling
      usb: usb_dc_stm32: Convert to DT instance defines to remove dts_fixup.h
      cmake: export PROJECT_BINARY_DIR variable to kconfig
      cmake: Run dts before kconfig
      dts: Remove mcuboot.overlay
      dts: stop generating CONFIG_FLASH_LOAD_{OFFSET,SIZE}
      doc: Add docs about kconfigfunctions
      dts: Move CONFIG_SRAM_* & CONFIG_FLASH_* back to Kconfig
      boards: colibri_imx7d_m4/warp7_m4: Remove CONFIG_XIP for dts
      boards: mimxrt{1020,1050,1060,1064}_evk remove CONFIG_ from dts files
      drivers: watchdog: remove deprecated apis
      soc: riscv32: openisa_rv32m1: Remove duplicated HAS_DTS
      arch: xtensa: dts: Move HAS_DTS to arch level
      drivers: serial: uart_miv: Fix trivial comment mismatch
      serial: uart_sam0: Don't use CONFIG_ namespace for non Kconfig
      spie: spi_sam0: Don't use CONFIG_ namespace for non Kconfig
      samples: fxos8700-hid: Don't use CONFIG_ namespace for non Kconfig
      gui: Fix typo in Kconfig option
      pwm: pwm_mcux_ftm: Fixed missed CONFIG_ -> DT_ conversion
      boards: stm32: Cleanup/Fix USB Kconfig option
      disk: sdhc: Convert to new DT_<COMPAT>_<INSTANCE> defines
      sensor: lis2ds12: Fixup SPI CS handling
      cmake: kconfig: Expose ZEPHYR_TOOLCHAIN_VARIANT to Kconfig
      soc: riscv32: openisa_rv32m1: Support Zephyr toolchain
      sensors: adxl372: Fixup SPI CS handling
      tests: boards: intel_s1000_crb: Use DT_FLASH_AREA_<FOO>_ID define
      tests: subsys: fs: fcb: Use DT_FLASH_AREA_<FOO>_ID define
      tests: subsys: settings: Use DT_FLASH_AREA_<FOO>_ID define
      tests: kernel: interrupt: Exclude platforms test isnt valid on
      dts: arm_cmsdk_(d)timer: Add label property to (d)timer
      drivers: timer: Move Timer API to unified interface
      drivers: timer: Move Dual Timer API to unified interface
      tests: counter_basic_api: Enable tests for ARM CMSDK drivers
      drivers: counter: cmsdk: Convert to new DT_<COMPAT>_<INSTANCE> defines
      boards: Change supported 'rtc' to 'counter' for QMSI RTC based boards
      arch: arm: mpu: Remove dead Kconfig reference
      spi: spi_dw: Cleanup stale Kconfig symbols that should be DT
      dts: Convert CONFIG_CCM to DT_CCM
      kconfig: kconfigfunctions: Add dt_str_val function
      dts: bindings: ccm: Drop base_label setting
      dts: Convert CONFIG_ to DT_ symbols for chosen props
      kconfig: kconfigfunctions: update dt_str_val
      dts: bindings: openisa,rv32m1-event-unit: remove base_label
      dts: bindings: mtd: partition: remove base_label
      dts: Remove base_label support
      gpio: mcux: Convert to use DT_ prefixed defines
      i2c: i2c_imx: Convert to use DT_ prefixed defines
      soc: nxp_imx: Convert to use DT_ prefixed defines
      eth: eth_mcux: Convert to use DT_ prefixed defines
      boards: hexiwear_k64: Convert to use DT_ prefixed defines
      tests: drivers: counter_basic_api: Convert to use DT_ prefixed defines
      samples: subsys: ipm_mcux: Convert to use DT_ prefixed defines
      drivers: i2c: dw: Convert to new DT_<COMPAT>_<INSTANCE> defines
      scripts/dts/extract_dts_includes: Add DT_ prefix to FLASH defines
      scripts/dts/extract_dts_includes: Add DT_ prefix to FLASH_AREA defines
      scripts/dts/extract: Remove generation for FLASH_LABEL
      scripts/dts/extract_dts_includes: Hand alias to alias for write_conf
      scripts/dts/extract: Fix producing bogus alias if reg has no size
      boards: reel_board: Convert FLASH_AREA to DT_FLASH_AREA
      samples: nvs: Convert FLASH_AREA to DT_FLASH_AREA
      fs: nffs: Convert FLASH_AREA to DT_FLASH_AREA
      west: sign: Convert FLASH_AREA to DT_FLASH_AREA
      dfu: boot: mcuboot: Convert FLASH_AREA to DT_FLASH_AREA
      tests: fs: multi-fs: Convert FLASH_AREA to DT_FLASH_AREA
      flash: flash_stm32: Convert FLASH_WRITE_BLOCK_SIZE to DT_
      flash: soc_flash_mcux: Convert FLASH_ERASE_BLOCK_SIZE to DT_
      flash: flash_sam: Convert FLASH_{WRITE,ERASE}_BLOCK_SIZE to DT_
      flash: flash_gecko: Convert FLASH_WRITE_BLOCK_SIZE to DT_
      flash: spi_nor: Convert FLASH_{WRITE,ERASE}_BLOCK_SIZE to DT_
      samples: subsys: nvs: Convert FLASH_ERASE_BLOCK_SIZE to DT_
      openthread: Convert FLASH_ERASE_BLOCK_SIZE to DT_
      west: sign: Convert FLASH_WRITE_BLOCK_SIZE to DT_
      dfu: boot: mcuboot: Convert FLASH_WRITE_BLOCK_SIZE to DT_
      dfu: img_util: Convert FLASH_WRITE_BLOCK_SIZE to DT_
      tests: fs: nffs_fs_api: Convert FLASH_AREA to DT_FLASH_AREA
      scripts/dts/extract_dts_includes: Mark non DT_ defines as deprecated
      drivers: counter: mcux: Fix sanitycheck test build issue
      release: Zephyr 1.14-rc1

Laczen JMS (1):
      fs/nvs: Speed Improvement

Leandro Pereira (4):
      arch: xtensa: Reduce size of interrupt handling routines
      soc: esp32: Use the smaller interrupt handling routines
      arch: xtensa: Do not generate unused `handle_irq` label unless needed
      soc: esp32: Update auto-generated _soc_inthandlers.h

Linden Krouse (1):
      shell: Piped output of cd to /dev/null when setting ZEPHYR_BASE.

Loic Poulain (19):
      driver: wifi: Add inventek es-WiFi driver
      boards: disco_l475_iot1: Add es-WiFi module
      dts/bindings: Add bindings for es-WiFi module
      boards: disco_l475_iot1: Enable es-WiFi driver
      CODEOWNERS: Assign maintainer for eswifi driver
      samples/net/wifi: Add TCP stack
      wifi: eswifi: Add support for non-blocking TCP connect/send
      wifi: eswifi: Fix/clean TCP receive
      Revert ""boards: disco_l475_iot1: Remove used pinmux configuration""
      boards: disco_l475_iot1: Add USB OTGFS to DTS
      clock_control: stm32: Add support for MSI PLL MODE
      drivers: usb_dc_stm32: Add support for MSI clock
      boards: disco_l475_iot1: Enable MSI PLL-Mode config
      drivers: wifi: eswifi: Fix coverity issues
      wifi: eswifi: Add controller at command helpers
      drivers: wifi: eswifi: Fix mac address assignment
      net: wifi: shell: Add access point commands
      net: wifi: Add Access Point mode interface
      wifi: eswifi: Add access point offload support

Luiz Augusto von Dentz (52):
      Bluetooth: GATT: Fix long write procedure
      Bluetooth: GATT: Make bt_gatt_discover perform discover all procedure
      Bluetooth: shell: Fix requiring UUID for gatt-discover
      Bluetooth: GATT: Remove BT_GATT_WRITE_FLAG_PREPARE check in GAP
      Bluetooth: L2CAP: Add return to recv
      Bluetooth: L2CAP: Restore credits after receiving an SDU
      Bluetooth: L2CAP: Prevent the channel to stall
      Bluetooth: L2CAP: Fix identation of struct members
      Bluetooth: L2CAP: Make use of net_buf_append_bytes
      net: buf: Use net_buf_add_mem in net_buf_append_bytes
      Bluetooth: shell: Add l2cap-recv command
      Bluetooth: shell: Port commands to the news shell
      Bluetooth: shell: Split BR/EDR commands
      Bluetooth: shell: Split RFCOMM commands
      Bluetooth: shell: Split GATT commands
      Bluetooth: shell: Split L2CAP commands
      Bluetooth: shell: Use \r\n to terminate line
      Bluetooth: shell: Fix using \n with print/error
      Bluetooth: samples: shell: Don't use printk
      Bluetooth: Shell: Make error message for unknown parameter consistent
      shell: Make autocomplete works with non-sorted commands
      Shell: Remove reference to alphabetically sorted
      shell: Add APIs to set number of arguments
      shell: Add macros to print messages
      mesh: Port shell module to the new shell
      Bluetooth: shell: Fix illegal access
      Bluetooth: shell: Remove auto selecting of SERIAL
      Bluetooth: shell: Remove macros to print messages
      Bluetooth: shell: Make use of SHELL_CMD_ARG
      Bluetooth: ATT: Assert if request is invalid
      Bluetooth: GATT: Add flag to indicate write command
      Bluetooth: GATT: Fix comment related to write attribute
      Bluetooth: ATT: Rename op parameter of att_write_rsp
      Bluetooth: samples: peripheral: Add write command characteristic
      Bluetooth: GATT: Fix not resetting CCC storage
      Bluetooth: GATT: Fix not handling duplicated CCC storage
      Bluetooth: GATT: Ensure GATT service is registered first
      Bluetooth: GATT: Add groups for server and client APIs
      Bluetooth: GATT: Fix warning when attempting to use read callback
      Bluetooth: peripheral: Fix check of BT_GATT_WRITE_FLAG_CMD
      Bluetooth: GATT: Fix coding style
      Bluetooth: GATT: Add bt_gatt_write_response_cb
      Bluetooth: Shell: Add write-without-response-cb command
      Bluetooth: Add definitions for GATT Caching
      Bluetooth: Kconfig: Add BT_GATT_CACHING
      Bluetooth: Kconfig: Add menu for ATT and GATT options
      Bluetooth: GATT: Implement Client Supported Features
      Bluetooth: GATT: Implement Database Hash
      Bluetooth: GATT: Implement Robust Caching
      Bluetooth: GATT: Persist Client Features config only when paired
      Bluetooth: GATT: Store Client features
      Bluetooth: GATT: Add option to enforce client change-unware state

Léonard Bise (2):
      net: sockets: Unblock threads waiting on recv on socket close
      net: tcp: Call cb in case last ACK is not received

Manivannan Sadhasivam (12):
      boards: 96b_argonkey: adapt to the board configuration guidelines
      boards: 96b_carbon: adapt to the board configuration guidelines
      boards: 96b_carbon_nrf51: adapt to the board configuration guidelines
      boards: 96b_neonkey: adapt to the board configuration guidelines
      boards: 96b_nitrogen: adapt to the board configuration guidelines
      dma: stm32: Configure bus width and burst size for memcpy mode
      arm: stm32f4: Add UART4 pinmux definitions
      pinmux: stm32: Add missing pinmux for I2C2 and SPI2
      boards: Add 96Boards STM32 Sensor Mezzanine board support
      drivers: pinmux: stm32_f4: Add missing pinmux definitions for PWM
      boards: arm: 96b_stm32_sensor_mez: Enable on-board PWM
      CODEOWNERS: Add myself as the code owner for 96b_stm32_sensor_mez

Marc Herbert (4):
      host-gcc: add missing set(CMAKE_ASM_FLAGS -m32)
      host-gcc: TOOLCHAIN_LIBS += libgcc (copied from compiler/gcc/)
      host-gcc: exclude -lgcc to fix -mx32 [qemu_]x86_64 regression
      doc/CMakeLists.txt: find sphinx-build-3 before sphinx-build

Marc Pignat (2):
      samples: rename led_apa102c sample to led_apa102c_bitbang
      samples/drivers/led_apa102: add a sample for using APA102 LEDs strip

Marcin Szymczyk (9):
      usb: add SoF event
      usb: hid: default request handlers
      usb: hid: implement idle rate
      samples: usb: hid-mouse: type change
      samples: usb: hid-mouse: multiple buttons
      usb: hid: allow hid_ops to be null
      samples: usb: hid-mouse: remove get_report_cb
      usb: hid: boot protocol
      usb: hid: macro for report descriptor

Marcio Montenegro (6):
      ext: gecko: Add Silabs Gecko SDK for EFM32 Happy Gecko SoCs
      ext: Integrate Silabs EFM32HG into Gecko SDK into Zephyr
      ext: gecko: Remove arm_math stuff from efm32hg*.h
      arm: exx32: Add Silabs EFM32HG soc files
      boards: arm: Add support for Silabs EFM32HG-SLSTK3400A
      drivers: serial: Adapt gecko uart driver for Silabs EFM32HG

Marek Pieta (6):
      subsys: debug: tracing: Fix thread tracing
      subsys: debug: tracing: Fix interrupt hooks
      drivers: pwm: Add power management to pwm_nrfx
      doc: subsystems: shell: Documentation fix
      debug: tracing: Add CPU stats module
      debug: SystemView fix

Mario Tesi (2):
      driver: sensor: Add support for LIS2MDL Mag sensor
      tests: driver: lis2mdl: Add configuration for CI tests

Mariusz Skamra (16):
      Bluetooth: testing: Exclude Mesh related code if BT_MESH not set
      Bluetooth: Add Kconfig option to disable bondable mode
      Bluetooth: Add run-time option to disable SMP bondable mode
      Bluetooth: Add a shell command to disable bondable mode
      Bluetooth: L2CAP: Rename LE Connection Response Results
      Bluetooth: L2CAP: Extend available return codes from accept cb
      Bluetooth: shell: Add possibility to reject L2CAP CoC conn request
      Bluetooth: Change l2cap accept callback return error
      Bluetooth: Update advertising data without advertising restart
      Bluetooth: Do not compile GATT response handlers if Client is disabled
      mgmt: Add function to unregister GATT service
      Bluetooth: Mention that auto connect do not work along with scan
      Bluetooth: Add common Kconfig option to disable PHY Update
      Bluetooth: Add common Kconfig option to disable LE Data Length Update
      Bluetooth: Add Kconfig option to disable HCI ECDH support
      Bluetooth: Don't mask ECDH related events if CONFIG_BT_ECC disabled

Mark Ruvald Pedersen (16):
      ext: libmetal: Update import of libmetal from b4b5bea to a4f7630
      ext: nffs: portability: Avoid void* arithmetics which is a GNU extension
      portability: Avoid void* arithmetics which is a GNU extension
      portability: Warn at void* arithmetics which is a GNU C extension
      portability: Remove C99-illegal semicolons from the global scope
      portability: Ensure no C99-illegal semicolons exists in structs
      cmake: boilerplate: Move app-library to be with its documentation
      cmake: Remove setting CMAKE_FIND_ROOT_PATH_MODE_* variables
      cmake: boilerplate: move compiler-flag checks into boilerplate
      cmake: Move root CMakeLists.txt's comment-header to top
      cmake: Document CMAKE_SYSTEM_-variables, and add CMAKE_SYSTEM_VERSION
      cmake: Whitespace and commentary fixes
      cmake: boilerplate: Move out finding git+python to separate cmake files
      bluetooth: controller: Document mem, memq, util
      cmake: Introduce host toolchain for POSIX arch
      cmake: Toolchain abstraction: security

Mark Wang (1):
      boards: lpcxpresso54114: Add SW for lpcxpresso54114

Markus Roppelt (1):
      dts: arm: st: Add STM32L433 dtsi file

Marti Bolivar (59):
      scripts: requirements.txt: fix PyYAML for python 3.7
      scripts: update west to latest upstream version.
      scripts: fix west launcher for macOS
      scripts: add colorama to requirements.txt
      tracing: don't include kernel_structs.h from tracing_sysview.h
      .gitignore: only ignore build directories
      doc: make extract_content.py flake8 clean
      doc: clean up extract_content.py use of environment variables
      doc: rewrite extract_content.py for better input/output tracking
      doc: fix extract_content.py dependency tracking
      doc: add comment describing SPHINX_OUTPUT_DIR behavior
      doc: add sphinx-html and sphinx-latex convenience targets
      doc: cmake must be re-run if adding/removing files
      led_strip: ws2812: HACK: memory-hungry pulse timing bugfix
      drivers: led_strip: guard SPI defaults on stm32f4x kconfig
      drivers: led_strip: add ws2812 defaults for nRF5 devices
      doc: avoid copying content twice
      doc: add warning about sphinx errors
      doc: overhaul getting_started
      doc: reorder the sections for better flow
      doc: application primer: improvements to ""creating an application""
      lib: openamp: fix build info
      application: fix code-block directive in custom SoC section
      cmake: fix dts fixup file location for external SOC
      scripts: print notice that west's copy is a copy
      scripts: west: be more explicit in copy warning message
      net: lwm2m: increase IPSO light object color size
      arch: suspend CONFIG_SOC's doomsday
      arch: riscv32: fix fatal.c build without printk
      arch: riscv32: fix INCLUDE_RESET_VECTOR Kconfig help
      arch: riscv32: fix comment in offsets.c
      arch: riscv32: fix IRQ handling bugs when benchmarking
      arch: riscv32: provide a general mechanism for saving SoC context
      scripts: west: fix 'west debug'
      scripts: update west to upstream commit f01059a
      cmake: gcc.cmake: allow users to influence CMAKE_REQUIRED_FLAGS
      drivers: interrupt_controller: multi-level improvements
      arch: riscv32: follow-on tweaks
      arch: riscv32: support CONFIG_WDOG_INIT
      ext: hal: add openisa/vega_sdk_riscv
      soc: riscv32: add RV32M1 SoC as openisa_rv32m1
      interrupt_controller: RV32M1: add intmux driver / DT bindings
      boards: riscv32: add rv32m1_vega
      scripts: add west build, flash, and debug commands
      scripts: run_ci.sh: remove dead code
      scripts: run_ci.sh: add pytest-based testing for west commands
      west: add west.yml
      .shippable.yml: HACK: install latest west
      west_commands: add information on running tests
      scripts: west commands: add text for ""west --help""
      CODEOWNERS: add myself as maintainer for west commands
      boards: rv32m1_vega: fix the location of the YAML file
      doc: incremental improvements to west docs
      doc: without-west.rst: fixes for correctness
      scripts: west_commands: refactor build.py
      scripts: west_commands: refactor run_common.py
      scripts: west_commands: add sign command
      sanitycheck: print flash output if VERBOSE
      sanitycheck: various fixes for device testing

Martin Benda (3):
      boards: atsamd20_xpro: Add led/button info to DTS
      arch: arm: sam0: enable SEGGER RTT on Atmel sam0 SoCs
      drivers: timer: Add RTC-based system timer for Atmel SAM0 series MCU

Martin Bertsche (1):
      gpio: stm32 use dts extracted information to populate gpio instances.

Martin Gysel (1):
      doc: boards: arm: nrf52840_pca10059: fix name of dts file to include

Martin Schwan (1):
      net: mqtt: Fix typo ""seg_tag_list""

Martin Turon (1):
      openthread: Update openthread version to latest upstream/master.

Mathieu Audat (1):
      boards: correct config for openocd for stm32373c

Matias Karhumaa (1):
      Bluetooth: hci_ecc: Fix byte order of dbg keys

Matthias Boesl (1):
      boards: particle: add board support for particle argon

Maureen Helm (110):
      arm: Clear primask and faultmask during startup
      sensor: Eliminate repetitive Kconfig ""depends on"" in sensor drivers
      sensor: Remove redundant Kconfig ""depends on SENSOR"" in sensor drivers
      sensor: Remove unnecessary Kconfig parentheses in sensor drivers
      CODEOWNERS: Add @MeganHansen to review nxp board docs
      usb: device: Fix kinetis driver to compile with SYS_LOG disabled
      tests: usb: Don't enable stdout console
      tests: usb: Enable usb tests on frdm_k64f
      spi: Remove unused Kconfig symbols from mcux dspi driver
      drivers: i2c: Parse 10-bit addressing flag in mcux driver
      clock_control: Add support for lpspi clock in mcux ccm driver
      spi: Introduce mcux lpspi shim driver
      dts: Add lpspi yaml bindings and dts nodes
      soc: arm: Enable the lpspi driver and clock for the imxrt soc
      mimxrt1050_evk: Configure an lpspi instance and pins
      tests: spi_loopback: Add mimxrt1050_evk configuration
      samples: bme280: Disable i2c in spi project configuration
      drivers: sensor: Fix unused variable warnings
      drivers: sensor: Fix compiler format warning in bmi160
      drivers: sensor: Add missing cmake files for bmm150
      drivers: sensor: Fix casting warnings
      tests: build_all: Add missing dts fixups for sensor drivers
      tests: build_all: Add missing sensor drivers and rebalance testcases
      drivers: sensor: Fix incorrect Kconfig dependency in lsm6dsl
      tests: build_all: Add missing dts fixups for apds9960
      tests: i2c_slave_api: Add missing testcase.yaml
      boards: nucleo_f091rc: Add i2c to list of supported features
      cmake: Add build system target for west attach command
      drivers: i2c: Select HAS_DTS_I2C in designware and qmsi drivers
      boards: Remove redundant ""select HAS_DTS_I2C""
      drivers: serial: Add instances to mcux lpuart shim driver
      soc: nxp_imx: Use generated clock controller in dts fixup
      boards: mimxrt1050_evk: Enable lpuart3 for bluetooth hci
      drivers: spi: Select HAS_DTS_SPI in designware driver
      boards: Remove redundant ""select HAS_DTS_SPI""
      soc: x86: arc: Remove spi base address and irq macros
      samples: blinky: Remove platform whitelist
      drivers: gpio: Select HAS_DTS_GPIO in various drivers
      samples: arduino_101: Add dts overlay and fixup to env sensing sample
      drivers: boards: Merge HAS_DTS_I2C_DEVICE with HAS_DTS_I2C
      drivers: boards: Merge HAS_DTS_SPI_DEVICE with HAS_DTS_SPI
      drivers: boards: Merge HAS_DTS_GPIO_DEVICE with HAS_DTS_GPIO
      drivers: boards: Merge HAS_DTS_SPI_PINS with HAS_DTS_SPI
      drivers: sensor: Remove Kconfigs conditioned upon !HAS_DTS_I2C
      drivers: sensor: Remove Kconfigs conditioned upon !HAS_DTS_SPI
      drivers: sensor: Remove Kconfigs conditioned upon !HAS_DTS_GPIO
      boards: 96b_argonkey: Add missing dts fixup for lsm6dsl sensor
      boards: lpcxpresso54114: Combine m4/m0 boards into one directory
      debug: openocd: Add thread name to openocd offsets
      debug: openocd: Add floating point context to openocd offsets
      samples: synchronization: Add openocd configuration
      boards: Introduce frdm_kw41z ble controller shield
      boards: Convert frdm_k64f and mimxrt1050_evk to use ble controller shield
      samples: bluetooth: Add a configuration using the kw41z shield
      drivers: sensor: Fix missing case break in fxos8700 driver
      doc: Fix licensing links for cmsis, nordic, and mcux components
      drivers: sensor: Convert adxl362 to device tree
      boards: mimxrt1050_evk: Enable pyocd runner
      boards: Fix and update nxp board doc links
      dts: nxp: Add sram_l node to k64 dtsi
      soc: arm: Don't touch interrupts in kinetis watchdog init
      ext: mcux: Remove duplicate fsl_iomuxc.h
      ext: mcux: Refactor import script
      ext: mcux: Update import script for fsl_iomuxc
      ext: mcux: Enhance import script to include external xip flash support
      ext: mcux: Update to MCUXpresso SDK 2.5.0
      soc: nxp_imx: Fix ethernet build error
      ext: mcux: Import SDK 2.5.0 evkmimxrt1020 board support
      soc: nxp_imx: Add support for external xip flash boot header
      soc: boards: Reserve space for the imx boot header at the soc level
      boards: mimxrt1060_evk: Fix a Kconfig typo
      soc: nxp_imx: Add support for device configuration data (DCD)
      boards: Fix jlink device name on rt1020 and rt1060 boards
      boards: mimxrt1020_evk: Enable pyocd runner
      scripts: Update pyocd version to 0.14.3
      drivers: serial: Fix mcux lpuart instance 2
      soc: nxp_imx: Add missing dts fixups for lpuart instance 2
      boards: mimxrt1020_evk: Enable lpuart2 for bluetooth hci
      boards: mimxrt1060_evk: Enable lpuart3 for bluetooth hci
      samples: bluetooth: Build peripheral_hr sample on more imx rt boards
      dts: Add bindings for imx lpi2c
      drivers: i2c: Introduce mcux lpi2c shim driver
      clock_control: Add support for lpi2c clock in mcux ccm driver
      soc: nxp_imx: Enable mcux lpi2c driver and clocks
      boards: mimxrt1050_evk: Enable mcux lpi2c driver and pins
      boards: mimxrt1050_evk: Add fxos8700 dts node
      ext: mcux: Add HAS_MCUX_ENET config
      soc: nxp_imx: Promote driver defaults to soc series level
      samples: sensors: adt7420: Fail gracefully if sensor not found
      drivers: gpio: Validate pin number before indexing array in mcux drivers
      boards: Add missing sdram dts compatible to mimxrt10{20,60,64} boards
      scripts: west: Update pyocd runner to use unified tool subcommands
      boards: Add config to mimxrt10{20,60,64}_evk boards to link into sdram
      ext: mcux: Fix mimxrt1060_evk_hyperflash support for external memories
      boards: mimxrt1020_evk: Use external memories by default
      boards: mimxrt1060_evk: Use external memories by default
      dts: Add bindings for the imx lcd display controller
      drivers: display: Add RGB 565 pixel format to display api
      drivers: display: Introduce mcux elcdif shim driver
      soc: nxp_imx: Enable mcux elcdif driver and clocks
      boards: mimxrt1050_evk: Enable mcux elcdif driver and pins
      boards: mimxrt1060_evk: Enable mcux elcdif driver and pins
      samples: gui: Fix lvgl sample to use configured display device name
      samples: gui: Add support for imx rt boards to lvgl sample
      dts: boards: Add bindings and nodes for the rocktech lcd module
      drivers: counter: Introduce mcux rtc shim
      soc: nxp_kinetis: Enable the mcux rtc driver on kw41
      boards: frdm_kw41z: Document counter driver is supported
      tests: counter: Adapt test for the mcux rtc driver
      tests: counter: Enable debug logging

Michael Hennerich (1):
      drivers: sensors: adxl372: Add missing dts bindings

Michael Hope (3):
      lib: add crc7.
      disk: add a SDHC card over SPI driver.
      scripts: bossac: Support flashing at an offset.

Michael Scott (50):
      Bluetooth: controller: Fix advertising random delay resolution calc
      logging: init strdup mem_slab with aligned buffer size
      net: lwm2m: fix compile warning related to Logger changes
      drivers: modem: migrate modem shell to new shell API
      drivers: modem: wncm14a2a: fix void ptr math warning
      logging: start log processing thread in enable_logger()
      gen_isr_tables: fix check for CONFIG_3RD_LEVEL_INTERRUPTS
      gen_isr_tables: remove hard-coded max IRQ value of 32
      samples: net: lwm2m_client: add ""ok"" and baud rate to k64f overlay
      dts-binding: modem: wnc-14a2a: remove base_label to fix build errors
      samples: net: lwm2m_client: expand sanity testing
      drivers: modem: WNCM14A2A select UART_INTERRUPT_DRIVEN
      net: lwm2m: remove extra ref/unref in retransmit
      net: lwm2m: don't use pending pkt on retransmit error
      net: lwm2m: firmware_pull: don't use pending pkt for token
      net: lwm2m: handle pending before send in retransmit
      drivers: modem: wncm14a2a: remove socket_reading logic
      drivers: modem: wncm14a2a: correct comment in on_cmd_sockdataind()
      drivers: i2c: fix build break for nrfx_twi* with newlib
      boards: arm: reel_board: select BT_CTLR if BT is enabled
      clock_control: RV32M1: introduce PCC driver / DT bindings
      pinmux: RV32M1: introduce pinmux driver / DT bindings
      gpio: RV32M1: introduce gpio driver / DT bindings
      serial: RV32M1: introduce lpuart driver / DT bindings
      net: lwm2m: remove unused CONFIG_NET_CONTEXT_NET_PKT_POOL config
      net: lwm2m: fix unsigned check for <0 in LwM2M device obj
      net: lwm2m: refactor lwm2m_engine_context into lwm2m_message
      net: lwm2m: remove some unnecessary includes
      dts: bindings: nxp-uart: add hw-flow-control binding
      drivers: serial: mcux: Introduce support for HW flow control
      samples: lwm2m_client: enable HW flow control for WNC-M14A2A modem
      drivers: modem: wncm14a2a: wait for modem init
      drivers: modem: wncm14a2a: allow more time for getting IMEI data
      net: lwm2m: create DTLS config layer for LwM2M
      net: lwm2m: move to flat buffers
      net: lwm2m: save remote address during setup
      net: lwm2m: introduce input formatter private data
      net: lwm2m: add JSON formatter for WRITE operations
      net: lwm2m: update security obj with DTLS data
      net: lwm2m: use security data for connections
      net: lwm2m: support for LwM2M bootstrap
      net: lwm2m: replace periodic service thread with work queue
      net: lwm2m: fix firmware status after bad download attempts
      net: lwm2m: migrate LwM2M library to BSD-sockets API
      samples: lwm2m: migrate to BSD socket APIs
      net: lwm2m: add socket-based DNS support
      logging: introduce LOG_DISABLE_FANCY_OUTPUT_FORMATTING to save flash
      net: lwm2m: boostrap support cleanup
      net: lwm2m: fix connection handling in RD client
      boards: particle: fix BT selection

Mieszko Mierunski (24):
      drivers: i2c: Add 10 bit addressing flag to i2c message flags.
      drivers: nrf: Switched nrf i2c drivers to 10 bit address msg flag
      drivers: i2c: Add dts support for i2c slaves.
      script: dts: Fix alias generation for reg property.
      api: uart: Add configure functions for UART.
      dts: nrf: Remove TWI dts.fixup defines and use aliases instead.
      dts: nrf: Remove SPI dts.fixup defines and use aliases instead.
      dts: nrf: Remove UART dts.fixup defines and use aliases instead.
      dts: nrf: Remove ADC dts.fixup defines and use aliases instead.
      dts: nrf: Remove GPIOTE dts.fixup defines and use aliases instead.
      dts: nrf: Remove WDT dts.fixup defines and use aliases instead.
      dts: nrf: Remove USBD dts.fixup defines and use aliases instead.
      dts: nrf: Remove cryptocell dts.fixup defines and use aliases insted.
      dts: nrf: Remove qdec  dts.fixup defines and use aliases instead.
      drivers: nrf: Fix nrf uarte fifo_fill function.
      drivers: nrf: nrf uarte fix TX interrupts disabling.
      drivers: nrf: Support I2C initial speed configuration from dts
      drivers: nrf: Add UART and UARTE configure function.
      drivers: nrf: Fix TWI and TWIM current consumption issue
      drivers: nrf: Fix UARTE fixup defines.
      smp: shell: Add support for SMP in new shell.
      api: uart: Add new asynchronous UART API.
      drivers: nrf: Rework UART shim to support async UART API.
      tests: uart: Add tests for async UART API.

Miguel A. Borrego (1):
      soc: select CONFIG_CPU_CORTEX_M_HAS_VTOR for SAMD2x.

Mikkel Jakobsen (1):
      scripts: locked pyocd version to 0.12.0 in requirements.txt

Nathaniel Graff (16):
      drivers: gpio: sifive: Fix GPIO extern interrupts
      dts/plic: Remove base_label from PLIC binding
      soc/miv: Use DTS to generate PLIC addresses
      soc/sifive-freedom: Use DTS to generate PLIC addrs
      drivers/plic: Update PLIC driver with DTS symbols
      riscv32: linker: Link .srodata section
      drivers/spi: Generate clock-frequency for SPI bus
      drivers/spi: SPI driver for SiFive Freedom
      soc/riscv32-fe310: Enable DTS gen for SPI
      boards/hifive1: Enable SPI driver
      drivers/i2c: I2C driver for SiFive Freedom
      soc/sifive-freedom: Configure SoC for I2C driver
      drivers/pwm: Driver for SiFive PWM peripheral
      soc/sifive-freedom: Enable PWM peripheral in dts
      boards/hifive1: Enable PWM peripheral driver
      samples/basic/fade_led: Add support for HiFive 1

Nazar Chornenkyy (6):
      ext: hal: cypress: Import Cypress PDL for PSoC6 SoC Support
      ext: hal: cypress: Integrate Cypress PDL into Zephyr Build system
      arm: Add Cypress PSoC6 SoC support
      drivers: serial: Add Cypress PSoC6 UART driver
      boards: arm: Add Cypress PSoC6 cy8ckit_062_wifi_bt_m0 board support
      boards: arm: Add Cypress PSoC6 cy8ckit_062_wifi_bt_m4 board support

Nicolai Glud (1):
      drivers: adc: adc_mcux_adc16: improving configurability

Nicolas LANTZ (1):
      usb: netusb: Align NETUSB_MTU & wMaxSegmentSize and increase it to 1522

Nicolás Bértolo (1):
      kernel: mutex: delay setting lock_count = 0.

Nils Montenegro (1):
      libc: minimal: Add error codes for key management

Niranjhana N (12):
      lib: posix: fix couple of race conditions
      lib: cmsis_rtos_v1: do null check before use
      lib: posix: add error code return
      lib: posix: fix return error code
      lib: posix: remove return error code
      tests: posix: group pthread tests
      tests: posix: enhance pthread test
      drivers: wifi: fix an unchecked return
      samples: userspace: remove unwanted check
      samples: net: echo: fix unchecked returns
      tests: kernel: test force suspend of device
      lib: posix: fix a wrong type in mqueue.c

Ole Sæther (2):
      kconfig: Removed prompt for TEXT_SECTION_OFFSET when MCUboot is used
      samples: smp_svr: Surrounding BLE code with #ifdefs

Oleg Kapshii (1):
      boards: arm: Updated Cypress PSoC6 cy8ckit_062_wifi_bt_m0 doc

Oleg Zhurakivskyy (7):
      drivers: eth: e1000: Add driver for Intel PRO/1000 Ethernet controller
      boards/qemu_x86: Rename dts.fixup to dts_fixup.h
      drivers: eth: e1000: Call ethernet_init() on init
      drivers: eth: e1000: Enable interrupt in a safe way
      drivers: eth: e1000: Enable multicast
      drivers: eth: e1000: Use system log macros
      net: ethernet: Clean an obscure ref/unref logic in ethernet_send()

Olivier Martin (13):
      subsys: logging: native_posix: Fixed output buffer size
      subsys: logging: Mark the local functions as 'static'
      drivers: watchdog: Migrate to new logging subsys
      drivers: gpio: Migrate to new logging subsys
      subsys: dfu: Migrate to new logging subsys
      drivers: flash: w25q: Add support for page layout
      Bluetooth: host: Increase ECC thread stack
      Bluetooth: host: Clear CCC when clearing all keys
      Bluetooth: host: Remove peer from CCC cfg
      Bluetooth: Define log level at bluetooth subsystem level
      drivers: i2c: nrfx: Prevent transfer overlapping
      drivers: flash: w25q: Allow to skip SYNC_LOCK/SYNC_UNLOCK
      drivers: flash: w25qxxdv: write across programming pages

Patrik Flykt (16):
      arch/xtensa: Remove identifier looking as mixed C/C++ comments
      arch/xtensa: Use C style comments
      drivers/pci: Avoid nested C/C++ comments
      subsys/mgmt: Avoid C++ comments inside C comments
      arch/arm: Avoid C++ comments inside C comments
      scripts/coccinelle: Add Coccinelle script for unsigned values
      arch: Add 'U' to unsigned variable assignments
      boards: Add 'U' to unsigned variable assignments
      drivers: Add 'U' to unsigned variable assignments
      kernel: Add 'U' to unsigned variable assignments
      lib: Add 'U' to unsigned variable assignments
      misc: Add 'U' to unsigned variable assignments
      soc: Add 'U' to unsigned variable assignments
      tests: Add 'U' to unsigned variable assignments
      samples: Add 'U' to unsigned variable assignments
      misra-c: Add 'U' to unsigned variable assignments in subsys/

Paul Sokolovsky (111):
      net: config: Use sizeof() to get size of buffer for net_addr_ntop()
      net: Add INET_ADDRSTRLEN POSIX define
      libc: minimal: Add sys/fcntl.h enough to compile net/lib/sockets
      kernel: thread: Typo fixes in comment
      samples: sockets: echo_client/server: Build for minimal libc
      include: posix: types: Move some defs out of #ifdef CONFIG_PTHREAD_IPC
      include: posix: Split dirent.h from unistd.h
      lib: posix: Add top-level define for all POSIX APIs - CONFIG_POSIX_API
      include: posix: stat: Don't depend on CONFIG_PTHREAD_IPC
      include: posix: signal: Make sigev_notify_attributes depend on pthreads
      lib: posix: pthread_common: Don't depend on pthreads
      lib: posix: fs: Don't depend on pthreads
      lib: posix: Build pthreads files depending on CONFIG_PTHREAD_IPC
      include: posix: mqueue: Rely on O_RDWR and friends defines in sys/stat.h
      tests: posix: Enable CONFIG_POSIX_API
      subsys: console: Split serial tty handling to a separate module
      include: posix: unistd: Fix prototypes and dependency
      include: posix: time: Don't use from-curdir includes ('""""' vs '<>')
      include: posix: time: Explicitly include from <posix/...>
      tests: posix: fs: Use ssize_t/off_t types
      libc: minimal: Make fcntl.h be at top level, not sys/fcntl.h
      ext: hal: altera: Don't depend on NEWLIB_LIBC
      libc: minimal: Add dummy sys/stat.h [REVERTME]
      boards: nios2: altera_max10: Don't force Newlib libc.
      libc: minimal: fcntl.h: Fix include guards for the current path
      driver: ethernet: e1000: Use correct return for device init()
      drivers: pci: pci_show: Add missing space in output
      scripts: extract_dts_includes: Read files as utf-8
      kernel: syscall_handler.h: Typo fix in docstring
      kernel: system_work_q: Set dedicated ""sysworkq"" name.
      net: Set names for threads used by the network subsys/libs
      libc: newlib: libc-hooks: Consistently use const void* as arg to write
      include: uart: Another pass on improving docstrings
      doc: usermode: Add missing ""called"" in _k_object_init() description
      net: if: Assert that link layer addr was set by driver
      lib: posix: Implement generic file descriptor table
      lib: posix: fs: Convert to use generic fdtable
      libc: newlib: libc-hooks: s/CONFIG_POSIX_FS/CONFIG_POSIX_API/
      include: socket: Define ZSOCK_POLLHUP, ZSOCK_POLLNVAL
      net: lib: sockets: Switch to use fdtable
      tests: socket: Bump number of available fd's
      lib: fdtable: Define standard I/O file descriptors if CONFIG_POSIX_API
      lib/fdtable: Can call zephyr_write() only for CONFIG_NEWLIB_LIBC
      subsys: console: tty: Allow to specify receive timeout
      subsys: console: tty: Allow to specify transmit timeout
      subsys: console: Switch to POSIX-like read/write interface
      net: if: net_if_set_link_addr: Mention lifetime for address buffer
      lib: fdtable: FD method tables should be const.
      lib: fdtable: File descriptor table should reside in kernel memory
      drivers: serial: uart_cmsdk_apb: Fix interrupt-driven operation
      samples: console: echo: Test output-only mode too
      net: sockets: zsock_close: Be sure to free file descriptor
      drivers: serial: uart_cmsdk_apb: Ack IRQs before callback to avoid races
      boards: qemu_x86: Remove QEMU options which break eth_e1000 driver
      logging: log_core: Clarify message when log_strdup failed allocation
      logging: Elaborate description of CONFIG_LOG_STRDUP_BUF_COUNT
      subsys: console: Split tty definitions into tty.h, to form its own API
      subsys: console: tty: Use tty_putchar() instead of console_putchar()
      net: ipv4: Clarify basic IPv4 packet drop logging
      include: __assert: Fix output formatting of __ASSERT_NO_MSG()
      samples: console: echo: Be sure to print (both) CR LF in messages
      samples: sockets: echo_async: Don't include <sys/fcntl.h>
      samples: sockets: echo_async: Check results of fcntl() calls
      net: sockets: Rework fcntl() dispatching to the underlying fd object
      tests: posix: test_fs_file: Add testcase with non-zero lseek()
      lib: fdtable: Change ioctl vmethod signature to take va_list
      lib/fdtable: Add ioctl() and fcntl() implementations
      net: sockets_tls: Typo fix in comment
      tty: Support unbuffered operation to extend usecase coverage
      tty: Remove buffer params from tty_init()
      console: Kconfig: Update for recent changes
      CODEOWNERS: Add for drivers/wifi same reviewers as for drivers/ethernet
      net: buf: linearize: Never return -ENOMEM, just do what user asked to
      net: pkt: net_frag_linearize: Make consistent with net_buf_linearize
      tests: net_pkt: More net_frag_linearize tests
      drivers: eth: stellaris: Enable automatic Ethernet support in QEMU
      net: buf: linearize: Get rid of useless memset()
      samples: big_http_download: Set min_flash to 128K.
      boards: arm: mps2_an385: Add DTS node for Ethernet controller
      drivers: eth_smsc911x: Add driver for SMSC9118 aka LAN9118 chip
      boards: mps2_an385: Select QEMU_TARGET
      samples: net: echo_server: Add overlay for eth_smsc911x
      samples: sockets: Add eth_smsc911x overlays
      boards: mps2_an385: Enable SLIP networking
      samples: echo_server: Test overlay-smsc911x.conf via sanitycheck
      samples: echo_server: Test overlays for eth_e1000 and eth_stellaris
      drivers: eth_mcux: By default use 1 buffer each for hardware RX/TX
      net: sockets: Implement select() call.
      net: sockets: select: Get rid of timeval in favor of zsock_timeval
      samples: echo_async_select: Add select()-based async echo sample
      tests: socket: select: Basic test for select().
      tests: ztest: Add zassert_mem_equal()
      tests: net: socket: udp: Refactor and elaborate tests.
      tests: net: socket: socket_helpers.h: Factor out socket test helpers
      tests: net: socket: Add ""socket"" tag to testcase.yaml's
      samples: net: socket: Add ""socket"" tag to sample.yaml's
      tests: socket: poll: Add test for poll()
      samples: net: sockets: Set explicit min_flash on some samples
      tests: socket: select: Add actual tests for select()
      drivers: eth_mcux: Optimize check if received frame too large
      net: sockets_select: Fix build without CONFIG_NET_SOCKETS_POSIX_NAMES
      samples: sockets: Clean up headers included
      samples: sockets: Remove Zephyr logging from POSIX-compatible samples
      CODEOWNERS: Add @pfalcon for POSIX-related things
      tests: socket: poll, select: Fix non-blocking timing tests
      kernel: Document resolution of k_uptime_get*()
      net: sockets: Add gethostname() call
      tests: socket: misc: Add test for gethostname()
      net: socket: Add zsock_freeaddrinfo()
      sub-sys: disk: ram: Make RAM disk size be configurable
      tests: posix: fs: Decrease ramdisk size, increase stack size

Pavel Kral (13):
      logger: Add a Segger RTT backend
      logger: fix grammar/punctuation in rtt backend Kconfig
      ext: debug: segger: Terminal sharing using SEGGER_RTT_LOCK/UNLOCK macros
      ext: debug: segger: Add USE_SEGGER_RTT that enables RTT libraries.
      logger: fix PR codestyle issues
      logger: better code maintainability in rtt backend
      logger: fix line_pos setup in rtt backend drop mode
      logger: replace hardcoded constant in rtt backend
      logger: console: init rtt only once
      logger: rtt backend don't let starve others in blocking mode
      drivers: rtt: fix no return statement in rtt_init
      dts: stm32f103: add missing dts binding for port G
      logger: fix missing macro in RTT backend, when blocking mode is selected

Pawel Dunaj (9):
      arch: arm: soc: nordic_nrf: nrf52: Add missing header
      include: Add rotation to sensor channels
      ext: hal: nordic: Enable building of NRFX QDEC
      dts: Add support for Nordic QDEC
      drivers: sensors: qdec_nrfx: Add support for Nordic QDEC
      subsys: usb: class: hid: Allow control of USB poll interval
      kernel: Always set clock expiry with sync with timeout module
      ext: debug: segger: Fix SEGGER header inclusion
      drivers: usb: Do not enable non-existing USB endpoints

Paweł Zadrożniak (11):
      boards: nrf: uart: Moved UART pin configuration to DTS (nRF boards)
      subsys: usb: Change the buffer fragmentation for IN transfers.
      ext: hal: nordic: Add kconfig / CMakeLists entries for nrfx_usbd
      drivers: usb: Add nRF52840 USBD driver
      drivers: usb: nordic: Fix max packet size handling
      drivers: usb: nordic: change USBD driver locking scheme
      drivers: nordic: usbd: Fix long (fragmented) control OUT transfers
      drivers: usb: nordic: Fix class/vendor request handling
      drivers: usb: nordic: Fix IN transfer fragmentation
      drivers: nordic: usb: USBD event handling rework
      drivers: usb: nordic: Power consumption fix with cable detached

Peter A. Bigot (61):
      soc: arm: nordic: provide custom busy_wait implementations
      drivers: timer: nrf_rtc_timer: fix handling for 24-bit counter
      drivers: sensor: sht3xd: correct humidity threshold conversion
      drivers: sensor: sht3xd: migrate I2C from Kconfig to device tree
      drivers: sensor: sht3xd: migrate GPIO from Kconfig to device tree
      drivers: sensor: sht3xd: change from level to double edge trigger
      samples: sensor: add sample for SHT3XD sensor
      kernel: remove outdated comment in _Cstart
      kernel: update documentation referencing old init levels
      drivers: gpio: nrfx: fix lost level interrupts
      i2c: support const correctness for write operations
      soc: nordic: default GPIO when SPI enabled
      samples: driver: i2c_scanner: fix upper bound on address range
      samples: driver: i2c_scanner: fix support on Nordic TWIM driver
      boards: nucleo_l476rg: add corrected I2C pin assignments
      samples: driver: i2c_scanner: use arduino-defined device if available
      boards: arm: particle: refactor for commonalities
      dts: correct compatible name for I2C EEPROM devices
      tests: i2c_slave_spi: update to proposed DT compatible naming
      boards: arm: nrf51_ble400: add I2C and SPI configuration
      drivers: intel_gna: replace k_alert with work queue
      benchmarks: latency_measure: convert from k_alert to workqueue
      kernel: remove k_alert API
      drivers: sensors: sht3xd: move object definitions out of header
      drivers: sensors: sht3xd: uncrustify
      drivers: sensors: sht3xd: support multiple devices and DT bindings
      kernel: thread: correct type of dlist node
      kernel: sched: fix empty list detection
      sys: dlist: Add sys_dnode_is_linked
      kernel: timeout: remove local fix for double-remove
      kernel: poll: fix double-remove of node
      kernel: timeout: detect inactive timeouts using dnode linked state
      drivers: timer: nrf: use irq_lock instead of spinlock
      drivers: timer: nrf: drop unnecessary counter mask
      drivers: timer: nrf: refactor for speed and correctness
      drivers: nrf: timer: add inline qualifier where inlining is intended
      drivers: sensor: hts221: correct default log configuration
      drivers: sensor: hts221: correct bit for CTRL_REG1.BDU
      drivers: sensors: hts221: move static definition out of header
      boards: nrf52_pca20020: add hts221 drdy-gpios
      samples: sensors: hts221: support triggered readings
      dts: flash: add bindings for jedec,spi-nor
      drivers: flash: spi-nor: update towards device-tree support
      boards: particle: add bindings for on-board flash
      boards: nrf52840_pca10056: add bindings for on-board serial flash
      dts: intel_s1000_crb: switch flash to jedec spi-nor
      dts: bindings: cleanup mtd descriptions
      dts: intel_s1000_crb: put back block sizes
      driver: gpio: remove documentation related to pin-based callback config
      drivers: gpio: fix mis-use of slist API in callback processing
      tests: drivers: counter: improve comments on reserved instances
      drivers: counter: nrf: make name configuration consistent
      drivers: timer: conflict RTC timer with RTC1 counter
      drivers: counter: add API to query counter frequency
      drivers: counter: nrfx: update to newer HAL API
      drivers: i2c: add convenience wrapper for common I2C transaction pair
      drivers: eth_sam_gmac: replace deprecated API
      drivers: i2c: document problematic API and deprecated unused functions
      drivers: sht3xd: update to new I2C API
      drivers: gpio: esp32: correct constant test for interrupt trigger
      tests: gpio: basic_api: correct constant test for interrupt trigger

Philémon Jaermann (4):
      drivers: sensor: lsm303dlhc accel driver
      drivers: sensor: lsm303dlhc magnetometer driver
      bindings: sensor: Add binding for LSM303DLHC
      tests: drivers: lsm303dlhc build test

Piotr Mienkowski (21):
      drivers: flash_gecko: Add flash driver for SiLabs Gecko SoCs
      boards: efr32_slwstk6061a: add mcuboot flash partitions
      kernel: ensure System Power Managment enables Tickless Idle.
      soc: silabs_exx32: remove pinmap dependency on part number
      doc: efr32_slwstk6061a: update paragraph 'Flashing'
      soc: silabs_exx32: Simplify Kconfig options
      drivers: i2c: remove deprecated i2c_atmel_sam3 driver
      dts: silabs: use 'aliases' to remove dts_fixup defines
      drivers: i2c: add missing I2C_GECKO Kconfig option
      soc: silabs_exx32: Add independent Kconfig options for HAL libraries
      logger: add a SWO backend
      soc: silabs_exx32: Add SWO logger support
      ext: same70: Add missing PMC_SR_PCKRDY3 define
      soc: same70: Add SWO logger support
      drivers: uart_gecko: use DT_<COMPAT>_<INSTANCE>_<PROP> defines
      drivers: leuart_gecko: use DT_<COMPAT>_<INSTANCE>_<PROP> defines
      samples: convert altera_max10/pio to use gpio_pin functions
      drivers: mb_display: remove usage of gpio_port_ functions.
      api: gpio: deprecate all gpio_port_ functions
      drivers: i2c_gecko: use DT_<COMPAT>_<INSTANCE>_<PROP> defines
      api: counter: rename counter_disable_channel_alarm()

Piotr Zięcik (37):
      arch: stm32: Remove STM32_ARM_MPU_ENABLE option.
      arch: beetle: Remove ARM_MPU_ENABLE option.
      arch: nrf52: Remove ARM_MPU_NRF52X option.
      arch: nxp_imx: Remove ARM_MPU_IMX_RT option.
      arch: nxp_kinetis: Remove HAS_SYSMPU option.
      arch: arm: Introduce CPU_HAS_ARM_MPU and CPU_HAS_NXP_MPU options
      arch: arm: Make ARM_MPU the sole option controlling MPU usage
      drivers: entropy: nrf5: Use nrf_rng HAL for all hardware access
      drivers: entropy: nrf5: Fix race condition on hardware access
      drivers: entropy: nrf5: Fix hardware state management
      drivers: entropy: nrf5: Cleanup function naming
      drivers: entropy: nrf5: Pass device data to the ISR
      drivers: entropy: nrf5: Replace random number pool implementation
      drivers: entropy: nrf5: Save few cycles removing excessive dereferences.
      drivers: entropy: nrf5: Remove entropy_nrf_get_entropy_isr() function
      drivers: entropy: Use likely()/unlikely() macros to speed up the API
      Bluetooth: controller: Optimize RNG access
      kernel: sched: Make k_sleep() similar to POSIX equivalent
      arch: xtensa: Remove unused field from _thread_arch
      arch: arm: Remove priv_stack_size field form _thread_arch
      arch: arc: Remove priv_stack_size field form _thread_arch
      soc: arm: nrf52: Update power management code for nRF52
      soc: arm: nrf51: Backport power management code from nRF52
      samples: nrf52: power_mgr: Update sample to use Zephyr PM policy
      samples: nrf52: power_mgr: Enable the demo on the nRF51 SoC series
      samples: power: power_mgr: Remove redundant test
      power: policy_residency: Fix power level selection
      power: Implement weak notification functions.
      power: Make power_state enum global
      power: Remove sys_is_valid_power_state() interface
      power: pm_ctrl: Allow fine-grained power state locking
      samples: nrf52: power_mgr: Show effect of power state locking
      soc: quark_se: Fixed build after recent changes in Power Management.
      power: Eliminate SYS_PM_* power states.
      power: Add sys_pm_force_power_state() API
      samples: nrf52: power_mgr: Demonstrate power state forcing
      power: Move part of Power Management API to correct group

Praful Swarnakar (2):
      sanitycheck: Add fixture option for external hardware dependecy
      doc: Add description for harness and its various configs

Punit Vara (3):
      tests: adc_api: Fix delay problem with test
      drivers: sensor: Migrate to new logger
      lib: posix: Return errno code

Pushpal Sidhu (9):
      arm: st: add stm32l4r5xx support
      arch: arm: mpu: add support for 640k SRAM
      flash: stm32l4x: Correct getting page number from STM32L4R/S devices
      boards: arm: Add nucleo_l4r5zi board support
      fs: fat_fs: Implement fs_rename API
      tests: fat_fs_api: add renaming tests
      drivers: i2c_ll_stm32_v2: Handle errors during data transfers
      dts: stm32l4r5: add i2c2 node
      serial: stm32: Implement configure and config_get api calls

Radoslaw Koppel (4):
      subsys: bluetooth: shell: bt: Add command to show LL address
      bluetooth: host: conn: Add const to addr in bt_le_set_auto_conn
      samples: subsys: usb: hid-mouse: Activate pull on switch pin
      samples: subsys: usb: hid-mouse: Align report descriptor

Rajavardhan Gundi (53):
      lib/cmsis_rtos_v1: Use k_mbox_async_put instead of k_mbox_put
      tests/cmsis_rtos_v1: Introduce negative tests for mailQ
      drivers/gpio_sam: Fix incorrect flag checking
      tests/kernel: fifo_timeout: Remove wake-up order checking
      lib/cmsis_rtos_v1: Fix some Kconfig inconsistencies
      drivers: dma_cavs: Correct typo for logger
      xtensa: intel_s1000: Move some functions to SoC level SYS_INIT
      xtensa: intel_s1000: Remove redundant call to soc_get_ref_clk_freq
      kconfig: misc: Correct typo for TEXT_SECTION_OFFSET
      intel_s1000: DTS: fix dts_fixup.h with new DT_ prefix for SPI driver
      kconfig: intel_s1000: Clean up App level prj.conf
      lib/cmsis_rtos_v1: Use k_is_in_isr instead of _is_in_isr
      storage: flash_map: Make flash_map as extern
      tests: intel_s1000: Change flash offset from 0x10000 to 0x3F0000
      drivers: flash: spi_nor: Correct the return values for R/W
      tests: intel_s1000: Fix the spi flash tests for R/W
      drivers: flash: spi_nor: Remove page alignment requirement for R/W
      drivers: flash: spi_nor: Remove unused block_size parameter
      tests: intel_s1000: i2c: Support green and white LED blinking
      xtensa: Implement CONFIG_TEXT_SECTION_OFFSET
      linker: intel_s1000: Remove limits on code and data sections
      CMSIS RTOS V2: Introduce CMSIS RTOS V2 API header file
      lib/cmsis_rtos_v2: Implement support for thread APIs
      lib/cmsis_rtos_v2: Implement support for Kernel APIs
      lib/cmsis_rtos_v2: Implement support for generic wait APIs
      tests/cmsis_rtos_v2: Introduce tests to make use of Thread APIs
      lib/cmsis_rtos_v2: Implement support for timer APIs
      tests/cmsis_rtos_v2: Introduce tests to make use of Timer APIs
      lib/cmsis_rtos_v2: Implement support for mutex APIs
      tests/cmsis_rtos_v2: Introduce tests to make use of Mutex APIs
      lib/cmsis_rtos_v2: Implement support for semaphore APIs
      tests/cmsis_rtos_v2: Introduce tests to make use of Semaphore APIs
      lib/cmsis_rtos_v2: Implement support for mempool APIs
      tests/cmsis_rtos_v2: Introduce tests to make use of mempool APIs
      lib/cmsis_rtos_v2: Implement support for Message Queue APIs
      tests/cmsis_rtos_v2: Introduce tests to make use of messageQ APIs
      lib/cmsis_rtos_v2: Implement support for Event Flag APIs
      tests/cmsis_rtos_v2: Introduce tests to make use of EventFlag APIs
      lib/cmsis_rtos_v2: Implement support for Thread Flags APIs
      tests/cmsis_rtos_v2: Introduce tests to make use of ThreadFlags APIs
      tests/cmsis_rtos_v2: Use CONFIG_SCHED_SCALABLE
      DTS: flash: spi_nor: use DT_ for freq and other parameters
      drivers: flash: spi_nor: Enable Flash Page Layout and Map
      dts: intel_s1000_crb: Enable flash page layout support
      Kconfig: intel_s1000: Move FIFO_DEPTH to soc Kconfig
      tests: intel_s1000: flash_map: Enable tests for flash_map
      dts: intel_s1000: Exclude sram space dedicated for mcubootloader
      flash: spi_nor: Remove Kconfig parameter for SPI_NOR_SECTORS
      dts: spi_nor: Rename DT_SPI_NOR_SPI_SLAVE to DT_SPI_NOR_SPI_SLAVE_ID
      Kconfig: spi_nor: Remove Erase configuration from Kconfig
      CMakeLists: Introduce extra post build commands
      intel_s1000_crb: CMakeLists: Define building of custom image
      gen_isr_tables: Fix _sw_isr_table generation for multi-level IRQs

Ramakrishna Pallala (13):
      qemu: nios2: Enable UART 16550 driver for QEMU
      arch: Kconfig: Add Kconfig options for Low Power States
      soc: arm: nrf52: Select the supported Power States
      subsys: power: Add support for pluggable PM policies
      samples: subsys: power_mgr: Add changes as per PM policy Kconfig
      soc: arc: quark_se_c1000_ss: Select the supported Power States
      soc: x86: quark_se: Select the supported Power States
      include: device: Add a state for force suspend devices
      subsys: power: Add an API for force suspending the devices
      power: Add OS Power Management debug hooks
      power: Add API's to enable/disable System PM states
      power: Move application level API's to public header
      drivers: flash: Nios-II QSPI Coccinelle issue

Ravi kumar Veeramally (28):
      net: coap: CoAP library support over sockets
      samples: net: coap_client: Implemented over sockets
      samples: net: coap_server: Implemented over sockets
      tests: net: coap: Add new tests
      net: samples: Remove semaphore from sntp_client
      net: arp: Verify incoming packet HW and protocol type
      net: arp: Check invalid fields in ARP header
      net: rpl: Deprecate RPL
      net: coap: Deprecate net_pkt based CoAP library
      net: rpl: Remove __deprecated tag to one function
      net: arp: Discard ARP request on special scenario
      net: ipv4: Drop the replies if src address in unspecified
      net: arp: Fix ptype for non arp messages
      net: arp: Drop ARP requests from localhost address
      net: ipv4: Drop incoming packets with src addr is multicast
      samples: net: Port mbedtls benchmark sample to zephyr
      net: sntp: Rework SNTP client library to use sockets
      net: samples: Add socket based SNTP client application
      net: coap: Remove legacy CoAP implementation
      net: pkt: Set default data_len to iface MTU
      net: ip: Add protocol family type to conn handler
      net: context: Add packet socket support
      net: core: Handle packets when packet sockets are enabled
      net: l2: ethernet: Handover net packets to driver
      net: sockets: Add socket api to support AF_PACKET
      samples: sockets: Add packet socket sample application
      net: Allow disabling IPv4, IPv6, UDP and TCP simultaneously
      net: samples: Disable IPv4 from packet socket sample

Reto Schneider (2):
      boards: arm: nrf52840_pca10056: Fix typo
      samples, tests: Use semi-accurate project names

Ricardo Marramaque (1):
      doc: gs: Warn about Windows 10 CMake issue

Robert Konc (1):
      Bluetooth: Mesh: Add header file support for C++

Robert Lubos (53):
      net: tls: Add missing entropy header
      net: tls: Fix mbedtls hostname erros when certificates are not used
      samples: net: sockets: Put echo samples configuration into single file
      samples: net: sockets: Use TLS overlay config file
      net: sockets: Add missing POLLERR definition
      samples: net: sockets: Update docs with TLS information
      net: Remove s_addr/s6_addr defines from in_addr/in6_addr
      net: tls: Do not assume PSK id is NULL terminated
      samples: sockets: Configure correct number of FDs for echo_server
      sockets: tls: Fix getsockopt/setsockop return value
      sockets: tls: Use FD table to reach net_context
      net: mqtt: Mark existing implementation as legacy
      net: mqtt: Add BSD socket implementation
      net: mqtt: Add TLS socket transport
      samples: mqtt: Switch MQTT Publisher to new MQTT implementation
      tests: mqtt: Port tests to use new implementation
      tests: mqtt: Add test to verify publish reception
      samples: sockets: Set correct log module name in echo_server
      doc: Add secure sockets documentation
      doc: sockets: Make TLS option descriptions doxygen
      net: mqtt: Add missing mutex_unlock
      net: mqtt: Fix NULL pointer dereference in logs
      samples: net: echo_client config cleanup
      samples: net: echo_server config cleanup
      samples: sockets: Add overlay configs to socket echo samples
      lib: fdtable: Add function to retrieve fd vtable
      net: sockets: Extend socket vtable
      net: sockets: tls: Implement vtable for TLS sockets
      net: sockets: Rework poll to support ioctl helper commands
      samples: sockets: Tweak echo_client/server sample parameters for DTLS
      ext: mbedtls: Extend generic config file
      ext: mbedtls: Unify mbedTLS Kconfig prefixes
      drivers: ieee802154: nrf5: Prevent driver from spamming logs
      samples: sockets: Update OT overlays for echo samples
      net: 6lo: Fix ieee802154 fragmentation
      net: ieee802154: Fix ack check
      net: openthread: Increase default stack size when commissioner is on
      samples: openthread: Increase shell stack size
      net: sockets: Add fcntl to socket offloading API
      ext: lib: crypto: Extend generic mbedTLS config
      samples: crypto: Fix mbedtls benchmark time calculations
      samples: crypto: Whitelist nrf52840_pca10056 in mbedTLS benchmark tests
      net: openthread: Do not register RLOC and ALOC addresses
      net: ip: Introduce mesh_local address flag
      net: openthread: Set mesh_local flag in mesh-local OT addresses
      ext: hal: nordic: Update ieee802154 radio driver to version 1.2.3
      drivers: ieee802154: nrf5: Align to new radio driver API
      doc: api: Reference MQTT over sockets library
      net: openthread: Bump OpenThread commit to f9d757a1
      samples: sockets: Update echo_client/echo_server documentation
      ext: lib: mbedtls: Fix MBEDTLS_PEM_PARSE_C definition in generic config
      net: lib: mqtt: Get rid of _sock suffix
      doc: Add MQTT high-level description

Roman Vaughan (1):
      drivers: led_strip: Fix typo in APA102 driver

Ruslan Mstoi (3):
      net: ipv6: Add Destination Options Header support
      net: icmpv4: Drop ICMPv4 packet with zero checksum
      net: shell: Update info to enable allocs

Ruth Fuchss (1):
      doc: Add anchor in Getting Started

Ruud Derwig (1):
      arc: Fix zero-overhead loop in fake stackframe

Ryan QIAN (13):
      ext: hal: nxp: mcux: Add device files for RT1060
      arch: arm: nxp: imxrt1060: add device support
      boards: arm: Add board support for mimxrt1060_evk
      soc: nxp_imx: rt: fix enet pll initialization config macro name
      ext: hal: nxp: mcux: add device files for RT1020
      arch: arm: nxp: imxrt1021: add device support
      board: arm: Add board support for mimxrt1020_evk
      ext: hal: nxp: mcux: Add device files for RT1064
      arch: arm: nxp: imxrt1064: add device support
      dts: arm: nxp_rt: add flexspi1
      boards: arm: Add board support for mimxrt1064_evk
      ext: hal: rt1064: add support for XIP and DCD
      boards: mimxrt1064_evk: add configurations for XIP

Sathish Kuttan (39):
      drivers: dma: Add buffer reload API for DMA driver
      drivers: dma_cavs: add buffer refresh/reload
      drivers: i2s_cavs: Add bidirectional I2S support
      drivers: dmic: Intel PDM digital mic driver
      drivers: intel_gna: Add APIs for Intel GNA
      drivers: intel_gna: Driver for Intel GNA
      kconfig: intel_s1000: Add neural_net Kconfig
      drivers: neural_net: Add cmake files
      soc: intel_s1000: GNA model - linker script entry
      drivers: neural_net: Use correct Kconfig variable
      dts: intel_s1000: update SRAM size to 4MB
      kernel: Add k_msgq_peek() API
      kernel: msg_q: k_msgq_peek() implementation
      doc: kernel: add k_msgq_peek() API
      dts: intel_s1000: enable DTS for GPIO
      dts: intel_s1000: add pinctrl to device tree
      soc: intel_s1000: add I/O mux definitions
      drivers: pinmux: add pinmux driver for Intel S1000
      boards: intel_s1000: pinmux settings for CRB
      boards: intel_s1000: add pinmux in default config
      soc: intel_s1000: remove pinmux configuration
      soc: intel_s1000: add DMIC power control
      samples: intel_s1000_crb: add DMIC sample app
      samples: intel_s1000_crb: set BOARD for dmic sample
      samples: intel_s1000_crb: add doc for dmic sample
      boards: intel_s1000_crb: codec reset GPIO in DTS
      drivers: tlv320dac: add GPIO as Kconfig dependency
      drivers: tlv320dac: use reset GPIO from DTS
      soc: intel_s1000: Add SoC routine for GNA power-up
      soc: intel_s1000: Macro to encode multi-level IRQ
      soc: intel_s1000: Encoded IRQ definitions for I2S
      drivers: i2s_cavs: add transmit underrun status
      drivers: i2s_cavs: reduce buffer queue length
      drivers: i2s_cavs: macros for object instantiation
      drivers: i2s_cavs: fix for I2S start after stop
      tests: intel_s1000: DMA test update
      tests: intel_s1000: I2S test update
      tests: intel_s1000: use I2C device name directly
      boards: intel_s1000_crb: print short filename

Satya Bhattacharya (3):
      net: rpl: Null pointer dereferences
      bluetooth: shell: Uninitialized scalar variables
      sensor: isl29035: Unchecked return value

Savinay Dharmappa (26):
      drivers: wdt: Migrate qmsi wdt driver api to new wdt api interface.
      drivers: wdt: Migrate esp32 wdt driver api to new wdt interface
      test: drivers: watchdog: Modify test application.
      drivers: watchdog: Add dts support for QMSI based watchdog.
      soc: xtensa: intel_s1000: fix fatal exception.
      drivers: flash: add a generic spi nor flash driver
      arch: xtensa: Add I/O functions to read/write.
      boards: xtensa: intel_s1000_crb: Enable SPI Master driver
      dts: bindings: slave: Add yaml file to support spi flash
      board: xtensa: intel_s1000_crb: Add macronix flash support
      tests: boards: intel_s1000_crb: Add a test app to read/write from flash
      usb: class: hid: Fix fault due to unaligned access
      samples: subsys: usb: dfu: Fix build error for intel_s1000
      usb: class: dfu: Add a worker thread to flash data from usb to flash
      samples: subsys: usb: dfu: Add intel_s1000 to platform_whitelist
      boards: xtensa: intel_s1000_crb: set USB_DFU_MAX_XFER_SIZE to 4096
      dts: binding: Add i2c binding for nios2
      boards: nios2: Add dts support for i2c
      dts: xtensa: esp32: Add device tree support.
      dts: qemu_xtensa/xt-sim: Enable device tree support
      drivers: counter: Move AON and AONPT driver api to unified interface
      drivers: rtc_qmsi: Move rtc driver apis to unified interface
      soc: x86: Remove RTC config
      rtc: rename CONFIG_RTC_0_NAME to DT_RTC_0_NAME.
      drivers: counter: incorporate changes of api name and signature.
      tests: drivers: counter: Enable tests

Sean Nyekjaer (3):
      drivers: gpio: shell: rectify gpio get error msg
      boards: atsamd20_xpro: fix tx pin number for sercom3
      boards: arm: frdm_k64f: remove default n configs

Sebastian Bøe (106):
      cmake: Use find_program on CMAKE_CXX_COMPILER
      cmake: move ti_lm3s6965-specific code into the soc directory
      ld: Put 'sizeof(struct device)' in the generated offsets header
      ci: Print the toolchain database when CI fails
      cmake: Suppress the stderr from 'git describe' on successfull runs
      arch: arm: Use BL instead of B to jump to _PrepC
      kconfig: Make CONIG_FP_SOFTABI generate floating point instructions
      cmake: Re-direct KCONFIG_ROOT when convention is used
      cmake: Remove unnecessary KCONFIG_ROOT configuration
      dts: Simplify overlay build scripts
      Kconfig: BT: Give the LL selection option a name
      kconfig: Remove remnants of unimplemented BUILD_TIMESTAMP feature
      misc: mic
      kconfig: Don't set the deprecated env var KCONFIG_AUTOHEADER
      kconfig: Change the format of KERNELVERSION
      doc: cmake: Change the format of KERNELVERSION to match Zephyr
      cmake: version: Misc. refactorings for readability
      cmake: Misc. cleanups of how BOARD_ROOT and BOARD_DIR are used
      cmake: Fall back to ZEPHYR_BASE when the board is not in BOARD_ROOT
      boards: dts: Fix dtc warning in board dts files
      revert: print a note about the changed 'default' behavior""
      boards: dts: Fix dtc warning in board dts files
      dts: Treat a missing 'reg property warning' as an error
      dts: Allow users to pass extra flags to DTC
      cmake: openamp: Fixed a bug where the wrong BOARD was set
      DT: Rename from dts.fixup to dts_fixup.h
      cmake: Error-out when dts.fixup files are detected
      boards: yaml: Use corrrect toolchain name
      sanitycheck: Support legacy variant 'gccarmemb'
      cmake: Fix minor typo in docs
      cmake: Fix 'run' command of native_posix
      drivers: wifi: Don't include ti/drivers/net/wifi/bsd from simplelink
      cmake: Export the target name of the final elf file to the app
      Bluetooth: host: Improve error feedback on invalid input
      cmake: Re-write the capability database to avoid file appends
      cmake: Enforce that the DTC is at least 1.4.6
      doc: Fix pip3 install command
      kconfig: Hide the DesignWare I2C driver on unsupported platforms
      Bluetooth: Controller: Use a different flag for speed optimization
      cmake: openamp: Fix OpenAMP sample
      cmake: ipc: Fix ipm_mcux sample
      cmake: Make the target name generation code re-usable
      cmake: Move MDK-defines from 'soc' to the MDK build script
      cmake: nrf51: Don't #define NRF51822
      Bluetooth: controller: Refactor the k32src_wait() function
      cmake: Add support for out-of-tree shields
      cmake: Abort early if Python3 is not found
      isr_wrapper: Use 'bx' instead of 'b' to jump to _IntExit
      msys: Drop support for building in an MSYS environment
      sanitycheck: Allow skipping the 'unrecognized section' test
      kernel: Fix type of Z_EXC_HANDLE
      cmake: Don't remember misnamed boards
      kconfig: Drop support for specifying CROSS_COMPILE through Kconfig
      cmake: Copy CMake's FindPythonInterp.cmake into the repo
      cmake: Fix python version detection
      cmake: Align the DT build logs with Kconfig
      cmake: Move libapp.a into it's own directory
      cmake: Fix warning related to policy CMP0079
      cmake: FindPythonInterp: Prioritize 'python' from path the highest
      xcc: Drop the seemingly unused XCC_BUILD variable
      cmake: toolchain: Use ARCH instead of CONFIG_ARCH
      cmake: Remove unnecessary comments
      cmake: toolchain: Minor refactoring
      cmake: PythonInterp: Fixed a bug related to python detection
      cmake: Fixed a bug in 'cmake -DCONFIG_'
      cmake: Minor refactoring of 'import_kconfig'
      cmake: import_kconfig: Generalize 'import_kconfig' to support DT
      cmake: DT: Introduce 'DT_' symbols into the CMake namespace
      cmake: toolchain: Change the names of 'clang' and 'llvm'
      cmake: toolchain: llvm: Move the compiler assignment into 'compiler'
      cmake: toolchain: clang: Use 'find_program' and TOOLCHAIN_HOME
      cmake: clang: Add the runtime library to the link command
      cmake: Split toolchain configuration into pre-and post-DT
      cmake: Fixed python detection bug
      cmake: Remove dead code LTO references
      test: code_relocation: Fixed CI failure
      kconfig: libmetal: Have LIBMETAL_SRC_PATH depend on LIBMETAL
      kconfig: Have the 'framebuffer' menu depend on it being enabled
      kconfig: Have the 'FLOAT' menu depend on it being enabled
      kconfig: Disable 'RETPOLINE' on unsupported platforms
      kconfig: Have the 'SMP' option depend on 'USE_SWITCH'
      Kconfig: Hide SMP and USE_SWITCH from unsupported platforms
      kconfig: Minor comments and 'help' text fixes
      kconfig: Fixed missing dependency for ETH_SAM_GMAC
      kconfig: Refactor the dependency on 'NET_L2_ETHERNET'
      kconfig: Hide the Stellaris serial driver on unsupported platforms
      cmake: Fix VERSION warning in doc build
      cmake: Remove dead code 'FindRegex.cmake'
      cmake: samples: mesh: Remove redundant CMake code
      cmake: Use a variable for 'zephyr_prebuilt'
      cmake: Use variables for target names
      sanitycheck: Error out when running sanitycheck from Windows
      cmake: STACK_CANARIES: Re-write how compatibility is checked
      Kconfig: STACK_CANARIES: Correct the help text
      DeviceTree: Convert 'generated_dts_board.h' into a source file
      DeviceTree: Fix generated header comment
      cmake: Rebuild when DTS sources are modified
      cmake: Fix the generation of fixup files
      cmake: userspce: Always compile priv_stacks_hash.c as -Os
      mergehex: Improve the error feedback when merged hex files overlap
      cmake: Don't use non-existing include paths
      Bluetooth: Increase hci_tx stack size when CONFIG_NO_OPTIMIZATIONS
      logging: Increase log processing stack size when NO_OPTIMIZATIONS
      cmake: Various refactorings and whitespace fixes
      cmake: Allow deps to be added to the preprocessing of LD scripts
      cmake: Fix dependencies for LD script generation

Shawn Mosley (1):
      userspace: sample app domain applications

Sigvart Hovland (1):
      dts: arm: nordic: Add flash controller alias to nrf9160ns.dtsi

Sigvart M. Hovland (2):
      ext: debug: segger: Add missing # for else in SEGGER config header
      ext: debug: segger: Add missing include directories

Simen Tinderholt (1):
      ext: nordic: mdk: Set UICR HFXOCNT value to 0x20 if erased

Song Qiang (2):
      soc: arm: st_stm32: Cleanup gpio function code.
      soc: arm: st_stm32: Using LL library to implement gpio functions

Spoorthi K (25):
      samples: Include regex matching in samples
      lib: POSIX: Add check for deadlock in pthread_join
      tests: POSIX: Enhance test to verify deadlock
      tests: POSIX: Refactor POSIX API tests
      tests: POSIX: Enhance semaphore tests
      tests: POSIX: Enhance clock tests
      kernel: sched: Fix compiler warning
      tests: posix: Check for return values
      tests: kernel: Validate set thread name to current thread
      samples: sensor: Include regex matching and fixture
      samples: drivers: Update yaml with regex and fixture
      tests: msgq: Modify test to verify k_msgq_peek
      samples: cmsis_rtos_v1: Demo with Dining philosopher's problem
      samples: cmsis_rtos_v1: Demo on msgq and timers
      tests: nested_irq: Fix k_busy_wait usage and interrupt priority
      samples: cmsis_rtos_v2: Demo with Dining Philosopher's algorithm
      samples: cmsis_rtos_v2: Demo on msgq and timers synchronization
      tests: interrupt: Change IRQ priorities in test
      tests: cmsis_rtos_v2: Add tests for kernel management APIs
      tests: cmsis_rtos_v2: Enhance event flags tests
      tests: cmsis_rtos_v2: Enhance mempool tests
      tests: cmsis_rtos_v2: Enhance msgq tests
      tests: cmsis_rtos_v2: Enhance semaphore tests
      samples: cmsis_rtos_v1: Resolve control flow issue
      samples: cmsis_rtos_v2: Resolve control flow issue

Stanislav Poboril (8):
      imx: Add IMX IPM driver for i.MX socs
      imx: Add Messaging Unit peripheral support for i.MX6SoloX soc
      imx: Enabled Messaging Unit in Udoo Neo Full board
      sample: Add IMX IPM sample application
      imx: Add IMX EPIT driver for i.MX socs
      imx: Add EPIT peripheral support for i.MX6SoloX soc
      imx: Enabled EPIT in Udoo Neo Full board
      tests: drivers: counter: Enabled counter tests on UDOO Neo board

Stephen Yi (1):
      boards stm32_min_dev: modify board led pin assignment

Stig Bjørlykke (2):
      boards: doc: Remove empty table rows
      boards: doc: Remove 802.15.4 support

Subramanian Meenakshi Sundaram (1):
      drivers: watchdog: Adding watchdog support for sam SOC

Szymon Janc (21):
      shell: Add support for custom line2argv callback
      Bluetooth: Fix security level checking with LE SC and no-bonding
      Bluetooth: Controller: Add CONFIG_BT_HCI_VS option
      Bluetooth: Read static address from FICR on nRF5 if no VS enabled
      Bluetooth: Controller: Add support for setting public address
      Bluetooth: Fix connection parameters update
      Bluetooth: Add option to configure peripheral connection parameters
      Bluetooth: Allow to configure background scan window and interval
      Bluetooth: Allow to configure LE Create Connection timeout
      Bluetooth: Fix incorrectly reporting connection as failure
      Bluetooth: Use BT_CMD_TEST macro for testing supported commands
      Bluetooth: Fix autoconnect if cancelled pending connection
      Bluetooth: host: Avoid using out-of-scope pointer
      Bluetooth: host: Compile master role conn complete conditionally
      Bluetooth: controller: Compile conn complete due to cancel conditionally
      ext: lib: mgmt: mcumgr: update to latest master
      Bluetooth: host: Fallback to L2CAP for CPUP if rejected by master on LL
      Bluetooth: host: Add comment clarifying L2CAP fallback for CPUP
      Bluetooth: host: Don't restart scan if connection is pending
      Bluetooth: host: Don't send slave conn param request if not needed
      Bluetooth: host: Fix not starting slave conn param update timer

Taehwa Kang (1):
      net: coap: Fix Coap coap_option_value_to_int and coap_append_option_int

Takumi Ando (2):
      ext: hal: nordic: usb: Fix compile error with newlib
      driver: usb: nordic: Fix compile warning with newlib

Tavish Naruka (9):
      log: Don't enable LOG_CMDS if SHELL is disabled
      samples: net: mqtt_publisher: Update for latest net_config and TLS setup
      samples: driver: i2c scanner
      runners: add Black Magic Probe runner cmake file
      boards: add new board Electronut-labs Blip
      boards: arm: nrf52840_blip: switch spi0 with spi1
      boards: arm: nrf52840_blip: fix LED documenation
      boards: arm: nrf52840_blip dts fixup for SDHC
      samples: subsys: Filesystem API sample with SDHC

Tedd Ho-Jeong An (1):
      net: ip: Fix compile error due to config dependency

Thea Aldrich (4):
      doc: addition of a code of conduct
      doc: Fixing trailing whitespace.
      doc: add enforcement section
      doc: add reporting address to CoC

Theis Blickfeldt (1):
      bluetooth: Updated comment in conn.h to clarify CB PoV

Thomas Ebert Hansen (1):
      CODEOWNERS: Add @thoh-ot for subsys/bluetooth/controller

Timon Baetz (1):
      boards: hifive1: Added flash runner

Tom Burdick (2):
      samples: usb: Fixes usb/console sample for nrf52840
      usb: fix usb data race

Tomasz Bursztyka (162):
      net/pkt: Rename link layer address accessors relevantly
      net/udp: Removing useless insert/append _raw functions
      net/udp: Removing useless init function
      net/udp: Separating net_context from udp and other cleanup
      dts/bindings: Add YAML bindings for the E1000 Ethernet controller
      dts: Add a dedicated config option for Ethernet DTS based entries
      boards/qemu_x86: Add a dts entry for the e1000 Ethernet controller
      net/ipv4: Use iface's ll reserve relevantly
      net/ethernet: Remove as many ifdef for CONFIG_NET_VLAN as possible
      dts/bindings: Add YAML bindings for the CC2520 15.4 device
      samples/net: Removing support of cc2520 on frdm_k64f
      boards/x86: Removing cc1200 support on quark_se_c1000_devboard
      dts: Add YAML bindings for Intel SPI driver
      dts: Add the dts entries for Intel SPI on Galileo
      drivers/spi: Enable HAS_DTS_SPI for Intel SPI driver
      soc: Remove useless Kconfig options and config for Galileo and SPI
      boards/galileo: Enable SPI port 0 by default
      drivers/spi: Remove unused legacy options
      net/ieee802154: Remove unnecessary __packed keyword on API struct
      drivers/spi: Set CS inactive when releasing unconditionally
      dts/boards: Add a dedicated cc2520 config for quark_se_c1000_devboard
      boards/x86: Use dts for configuring the cc2520 device
      drivers/spi: Do not reconfigure at every transaction
      drivers/spi: Adding async mode to SAM and SAM0 drivers
      net/ethernet: Make ethernet allocating its own frag for the header
      net/ethernet: Centralize where and when header is filled in
      net/ethernet: Move sending to a one-pass logic
      net/arp: ARP packet can be queued right away
      net/iface: Switch fully to a one-pass sending logic in net_if
      net/dummy: Switch to L2 sending path
      net/ieee802154: Switch to L2 sending path
      net/bluetooth: Switch to L2 sending path
      tests/net: Apply L2 change everywhere where relevant
      net/iface: Finally remove the send function from net_if_api
      net/pkt: Add a gptp marker to know whether pkt is a gptp message or not
      net/gptp: Let Ethernet setting up the header
      net/net_if: Do not set TCP related flags on non-INET/6 family
      net: Return fully calculated chksum
      net/connection: Verify UDP and TCP checksum the easy way
      net/ipv4: Verify header's checksum relevantly
      net/icmpv4: Verify header's checksum relevantly
      net/icmpv6: Verify header's checksum relevantly
      drivers/ethernet: Adapt stellaris driver to new L2 behaviour
      net/icmpv6: Optimize how chksum is verified
      drivers/ethernet: Remove double unref from stellaris driver
      net/ethernet: Let L2 updating common rx/tx statistics
      drivers/ethernet: Update RX error statistics relevantly
      net/icmpv6: Refactoring ICMPv6 input end-point
      net/ipv6: Have a unique call for net_conn_input()
      net/ipv4: Use existing hdr pointer to get ttl value
      net/ipv4: Rework ipv4 processing to clarify drop issues
      net/icmpv4: Avoid input function to access IPv4 header again
      net/icmpv4: No need of a local variable
      net/pkt: Add a pointer to link-layer data in the structure
      net/ethernet: Let's remove the use for ll reserve
      usb/netusb: Let's remove the use for ll reserve
      net/pkt: Let's ignore ll reserve and use 0 instead
      net/ipv4: Remove any use of ll reserve
      net/ipv6: Remove any use of ll reserve
      samples/net: Let's remove the use of ll reserve
      tests/net: Get rid of the ll reserve
      net/if: Remove function to get ll reserve
      net/6lo: Remove fragmentation function parameter on compression
      net/ieee802154: Serialize packet fragmentation
      net/ieee802154: Finally removing usage of ll_reserve in L2
      tests/ieee80154: Apply L2 changes
      tests/net: Switch ieee802154 tests to ztest
      drivers/wifi: Remove usage of ll_reserve
      net/l2: Finally get rid of reserve concept from L2
      net/pkt: Remove ll_reserve attribute and related functions
      net/pkt: Remove parameters to ""reserve"" some headroom
      net/pkt: Rename net_pkt_ll_clear for better relevancy
      net/pkt: Introducing a new helper to get the start of the buffer
      net/ieee802154: Remove usage of net_pkt_ll() function
      net/ethernet: Remove usage of net_pkt_ll() function
      tests/net: Remove usage of net_pkt_ll() function
      net/pkt: Finally removing net_pkt_ll() and the relevant attribute
      net/icmpv4: A checksum value of 0 is valid
      samples/sockets: Enable 802.15.4 properly for echo apps
      cmake: Enable server/client rules in case of 802.15.4 UPIPE driver
      drivers/ieee802154: Fix UPIPE driver at boot
      net/ieee802154: Compute ll hdr size before 6lo compression
      net/icmpv4: Disable broadcast echo request reply by default
      drivers/gpio: Manage callback addition/removal properly
      api/gpio: Controller may not support GPIO_INT at all
      drivers/gpio: Act relevantly if GPIO_INT is an unsupported flag
      net/ip: Protocol family do not have to follow any other OS's value
      net/pkt: Add dummy getter/setters for IPv4/IPv6 attributes
      net/pkt: Add new allocators
      net/pkt: Add an API to read/write into the buffer in a simpler way
      net/pkt: Add generic get/set data functions
      net/ipv4: Add new API to create/finalize IPv4 headers.
      net/udp: Add new API to create/finalize UDP headers
      net/icmpv4: Switch echo request to new net pkt allocator and API
      drivers/ethernet: Use new net_pkt API for sending and receiving
      net/dhcpv4: Switch to new net_pkt API
      net: Adapt checksum calculation to new net_pkt API
      net/core: Each and every received packet are being set to overwrite
      net/core: Set cursor relevantly
      net/ipv4: Input headers are gathered through new API
      net/icmpv4: Input headers are gathered through new API
      net/icmpv4: Add a new function to finalize the ICMPv4 packet
      net/icmpv4: Rework relevant signatures to pass ipv4 header pointer
      net/icmpv4: Switch echo request handler to new API
      net/icmpv4: Switch error message to new API
      net/icmpv4: Remove useless create, get and set header functions
      net/context: Create new send sendto functions using new net_pkt API
      net/sockets: Use the new send/sendto from net_context
      net/udp: Add an input function
      net/tcp: Add an input function for pre-validation
      net/connection: Modify input function
      net/ipv4: Rework input function
      tests/net: Avoid using net_udp_get_chksum()
      net/udp: Remove now useless net_udp_get_chksum function
      net/icmpv6: Add a new function to finalize the ICMPv6 packet
      net/ipv6: Add new API to create/finalize IPv6 headers.
      net/pkt: Use next_hdr field only for IPv6
      net/ipv6: Account for extension headers when finalizing
      net/icmpv6: Switch echo request to new net pkt allocator and API
      net/ipv6: Rework input function
      net/icmpv6: Rework relevant signatures to pass ipv6 header pointer
      net/icmpv6: Switch echo request handler to new API
      net/icmpv6: Switch error message to new API
      net/context: Add support for IPv6 on the new send/sendto functions
      net/icmpv6: Make header creation function public
      net/ipv6: Switch NA msg sending to new net_pkt API
      net/ipv6: Switch NS msg sending to new net_pkt API
      net/ipv6: Switch RS msg sending to new net_pkt API
      net/ipv6: Removing useless macros in nbr code
      net/icmpv6: Improve callback signature to pass icmp header
      net/ipv6: Switch NA msg handler to new net_pkt API
      net/ipv6: Switch NS msg handler to new net_pkt API
      net/ipv6: Switch RA msg handler to new net_pkt API
      net/ipv6: Switch MLD query msg handler to new net_pkt API
      net/icmpv6: Remove various useless get/set hdr functions
      net/ipv6: Switch IPv6 sending preparation to new net_pkt API
      net/ipv6: Switch MLD join, leave and report to new net_pkt API
      net/ipv6: Re-enable support for fragmented packet at input
      net/ipv6: Switch sending fragmented IPv6 packet to new API
      net/ipv4: Move autoconf to new net_pkt API
      net/arp: Switch ARP to new net_pkt API
      net/gptp: Switch GPTP to new net_pkt API
      net/pkt: Add a marker to identify LLDP message
      net/lldp: Fix where Ethernet PTYPE is set for LLDP message
      net/lldp: Switch LLDP to new net_pkt API
      net/context: Expose new functions to create ipv4/6 packet from context
      net/tcp: Switch TCP segment preparation to new net_pkt API
      net/conn: Change callback signature to pass TCP/IP headers
      net/tcp: Apply connection callback signature change
      net/tcp: Switch rest of TCP to new net_pkt API
      tests/icmpv6: Real packet length must be given
      net/context: Enable support for TCP on new sendto function
      net/tcp: Fix net_tcp_print_recv/send_info macros
      test/net: Quick sample explaining/testing the new net_pkt buffer API
      net/pkt: Add a debug option to track free pkt access more easily
      net/ip: Let's make public the 2 utility unions for ip/proto headers
      net/context: Make recv_cb providing the ip and protocol headers
      net/context: Lock/unlock mutex on new send/sendto functions
      net/context: Fix mutex unlock issues
      net/pkt: Allocate relevant size on AF_UNSPEC
      net/pkt: Make sure all attributes are copied while cloning
      net/ethernet: Remove inserted L2 header buffer

Tomasz Gorochowik (19):
      drivers: eth: gmac: Proper ptp clock setup
      net: gptp: kconfig: Fix log-based intervals help
      net: gptp: Fix sync timeout calculation
      net: gptp: Fix the default value of sync receipt timeout
      net: gptp: Remove unused macro
      net: gptp: Rename the ClockMasterSyncReceive state struct
      net: gptp: Convert SyncReceiptTime to ExtendedTimestamp
      net: gptp: Fix port number in SYN and FUP packets
      net: gptp: Use packed enums when applicable
      net: gptp: Initial GrandMaster capability support
      net: gptp: Add clock accuracy selection
      net: gptp: Fix sync receipt timeout timer starting
      net: gptp: Fix sync interval timeout timer starting
      net/pkt: Fix debug logs checking
      net: Add initial SOCKS5 support
      net: mqtt: Remove explicit numeration of transport enum
      net: mqtt: Add SOCKS5 proxy support
      samples: net: mqtt_publisher: Add proxy support
      eth: eth_mcux: Fix the DT_ prefixed defines

Torsten Rasmussen (1):
      CMake/Kconfig: CMake and Kconfig build integration

Ulf Magnusson (58):
      Kconfig: Support macro expansion within symbol names
      Kconfig: Rename $ENV_VAR_{ARCH,BOARD_DIR} to $ARCH/$BOARD_DIR
      Kconfig: Use new preprocessor syntax for env. variables
      doc: Fix RST error in Kconfig template documentation
      menuconfig: Fix some minor graphical glitching and add custom styles
      doc: kconfig: Explain the '<type> <prompt>' shorthand
      Kconfig: Improve error messages for mismatched endchoice/endif/endmenu
      genrest/menuconfig: Fix crash for promptless choices
      Kconfig: Remove redundant $(ZEPHYR_BASE) from 'source's
      menuconfig: Add jump-to for choices, menus, and comments
      menuconfig: Add two small error reporting and UI improvements
      scripts: west: Add documentation for the multi-repo commands
      doc: Document some Kconfig best practices and tips
      doc: Fix some typos on the Kconfig best practices page
      Kconfig: Remove unused symbols defined only in Kconfig.defconfig files
      Kconfig: Use 'default' instead of 'def_bool' in Kconfig.defconfig files
      kconfiglib/menuconfig/kconfig.py: Various improvements
      kconfiglib/menuconfig: Various improvements
      menuconfig: Improve behavior for named choices included multiple times
      kconfiglib: Save previous configuration to .config.old
      menuconfig: Add show-help mode
      menuconfig: Prompt for save when Kconfig files change
      scripts/dts: Remove redundant dict.keys() calls
      scripts/dts: Remove redundant and confusing dict.get() calls
      scripts/dts: Remove dead and confusing code in get_all_compatibles()
      scripts/dts: Remove dead and confusing code in get_phandles()
      scripts/dts: Remove dead and confusing pwm/gpio-related code
      scripts/dts: Remove redundant parentheses around 'if' conditions
      scripts/dts: Simplify code around insert_defs() calls
      scripts/dts: Rename convert_string_to_label() to str_to_label()
      scripts/dts: Remove dead type-checking code in extract_single()
      scripts/dts: Remove the prop_def variable in extract_single()
      scripts/dts: Inline 'prop' and 'key' params into extract_single()
      scripts/dts: Simplify extract_single()
      scripts/dts: Rename extract_single() to extract_bus_name()
      scripts/dts: Simplify code around extract_bus_name() call
      scripts/dts: Remove redundant nargs=1 argparse args
      scripts/dts: Inline simple single-caller functions into main()
      scripts/dts: Remove generate_node_definitions() return value
      scripts/dts: Simplify find_parent_prop()
      scripts/dts: Simplify get_parent_address()
      scripts/dts: Simplify output_keyvalue_lines()
      scripts/dts: Rename conf/header-writing functions to write_conf/header
      scripts/dts: Remove unused os.listdir import
      scripts/dts: Simplify write_header()
      scripts/dts: Simplify tabstop logic in write_header()
      scripts/dts: Rename get_key_value() to define_str()
      scripts/dts: Simplify extract_string_prop()
      scripts/dts: Rename get_reduced() to create_reduced()
      scripts/dts: Rename get_phandles() to create_phandles()
      scripts/dts: Rename get_aliases() to create_aliases()
      scripts/dts: Rename get_chosen() to create_chosen()
      scripts/dts: Replace dts['/'] with 'root'
      scripts/dts: Simplify get_all_compatibles()
      scripts/dts: Remove unused create_phandles() 'handle' parameter
      scripts/dts: Improve naming in create_phandles()
      scripts/dts: Make all_compats() return a set with all compats
      scripts/dts: Clean up Bindings.bindings()

Uri Shaked (1):
      drivers: ssd1673: fix typo in string

Varun Sharma (8):
      subsys: shell : fs new shell module for fs mount operation
      subsys: fs: Migrate to new logging subsys
      subsys: fs: Use template to define CONFIG_FS_LOG_LEVEL
      doc: code_data_relocation: Details about code data relocation feature
      tests: subsys: fs: multifs: Enable fs shell using new shell
      drivers: Modify drivers to use DEVICE_AND_API_INIT()
      samples: Modify samples to use DEVICE_AND_API_INIT()
      doc: tools: corrected file path in documentation

Vasili Slapik (2):
      boards: stm32_min_dev: Add SPI support
      boards: arm: stm32: Fix openocd warning

Vijay Kumar B (4):
      net: ethernet: Add helper functions to update error stats.
      drivers: ethernet: Add TI Stellaris ethernet controller driver.
      drivers: ethernet: Add DTS support for Stellaris Ethernet controller.
      samples: net: Modify echo server / client for Stellaris Ethernet.

Vikas Manocha (3):
      arch: arm: use cmsis functions to configure PSP and interrupts
      arch: arm: make stack pointer switch & initialization part of C prep
      arch: arm: replace main thread switching assembly to C using cmsis

Vikrant More (55):
      samples: mesh: nrf52: upgrade README.rst
      samples: mesh: nrf52: initialized dev_uuid to some arbitrary value
      samples: mesh: nrf52: corrected conditional compilation
      samples: mesh: nrf52: revised status resp. behaviour & TT calculation
      samples: mesh: nrf52: corrected spelling
      samples: mesh: nrf52: corrected state Binding for Delta Level
      samples: mesh: nrf52: corrected Range status response
      samples: mesh: nrf52: added separate Server's Publisher functions
      samples: mesh: nrf52: support for extra status responses
      samples: mesh: nrf52: short time multireset bt-mesh unprovisioning
      samples: mesh: nrf52: storing of some Prime states on SoC flash
      samples: mesh: nrf52: improvements in gen. delta message handler
      samples: mesh: nrf52: coding style improvements
      samples: mesh: nrf52: Vendor Model opcodes redefine
      samples: mesh: nrf52: improvement in status responses details
      samples: mesh: nrf52: removed unnecessary Models
      samples: mesh: nrf52: follow the standard while naming variables
      samples: mesh: nrf52: upgrade bound states publish mechanism
      samples: mesh: nrf52: enum redefined
      samples: mesh: nrf52: defined common publisher for Gen. Level
      samples: mesh: nrf52: unsolicitedly publishing the states
      samples: mesh: nrf52: edition to improve Mesh performance
      samples: mesh: nrf52: coding style improvements.
      samples: mesh: nrf52: corrected mapping of Message handler
      samples: mesh: nrf52: optimisation in timer uses
      samples: mesh: nrf52: Removed bug in reassignment of transition type
      samples: mesh: nrf52: merged timer in transtion structure
      samples: mesh: nrf52: improvement in transition type reassignment
      samples: mesh: nrf52: changes to make immediatly send GET responses
      samples: mesh: nrf52: use timer in case of transition
      samples: mesh: nrf52: make all transition timer dependent
      samples: mesh: nrf52: coding style improvements
      samples: mesh: nrf52: implementation as Mesh Model specs 3.1.1.1
      samples: mesh: nrf52: improve in execution if trnasition time is Zero
      samples: mesh: nrf52: removed bug in Gen. onoff unack handler
      samples: mesh: update Kconfig parameter for better performance
      samples: mesh: nrf52: upgrade re-transmission parameters
      samples: mesh: nrf52: removed bug in Gen. level Move GET & Publish
      samples: mesh: nrf52: rename some functions name
      samples: mesh: nrf52: improved coding style
      samples: mesh: nrf52: removed bugs in Target values calculation
      samples: mesh: nrf52: state binding improvements
      samples: mesh: nrf52: improved code readability
      samples: nrf52: mesh: removed unwanted lines of Code
      samples: mesh: nrf52: removed bug introduced by PR:9521
      samples: mesh: nrf52: coding style improvement (Vendor Model)
      samples: mesh: follow Mesh study guide to avoid retransmitted message
      samples: mesh: enable retransmission of GET & Publish messages
      samples: mesh: Remove redundant code
      samples: mesh: revised states binding & target value calculation
      samples: mesh: code improvements
      samples: mesh: feature to save Lightness & Temp. Range on Flash
      samples: mesh: restriction to re-transmit publish messages
      samples: mesh: removed bug which is cause of divide by zero exception
      samples: mesh: taking care of interrupted transition

Vinayak Kariappa Chettimada (35):
      drivers: flash: nrf5: Use faster write interval with BT sync
      Bluetooth: controller: Fix Data Length Update implementation
      Bluetooth: controller: Increase advertising random delay resolution
      Bluetooth: controller: Fix default Tx buffers
      Bluetooth: controller: Avoid offseting to lldata
      Bluetooth: controller: Fix connection cancel deadlock
      Bluetooth: controller: Refactor adv random delay resolution fix
      Bluetooth: controller: Fix conn param req procedure response
      Bluetooth: controller: Fix connection failed to be established
      Bluetooth: controller: Fix master role RSSI measurement
      Bluetooth: controller: Avoid retransmission of NACK-ed Tx PDU
      clock_control: nRF5x: Workaround Errata [192] LFRC frequency offs
      Bluetooth: controller: Fix integer overflow in scheduling code
      clock_control: nrf5: Ensure HF & LF running before calibration
      Bluetooth: controller: Add min & max interval support in CPR
      Bluetooth: controller: Do not feature exchange more than once
      Bluetooth: controller: Fix enable and disable of scan state
      Bluetooth: controller: Fix conn update assert in slave role
      Bluetooth: controller: Fix CPR procedure regression
      Bluetooth: controller: Fix chan map update's diff trans collision
      Bluetooth: controller: Fix Conn Param Req procedure stall issue
      Bluetooth: controller: Prepare to introduce LL split architecture
      Bluetooth: shell: Changes related to controller split preparation
      Bluetooth: controller: Refactor the internal LL interfaces
      Bluetooth: controller: Updates to prep to introduce new arch
      Bluetooth: controller: Preliminary work in progress mesh ext.
      Bluetooth: controller: Introduce ULL LLL architecture
      Bluetooth: controller: Fix control procedure context safety
      Bluetooth: shell: Updates related to new ULL LLL architecture
      Bluetooth: tests : Include building the LL split in CI
      Bluetooth: controller: ULL/LLL: Fix compile error with PA/LNA
      Bluetooth: controller: Remove redundant tmp role implementation
      Bluetooth: controller: Fix dereferencing type punned pointer
      Bluetooth: tests : Include building the LL split with debug options
      Bluetooth: tests: Include building mesh ext. in CI

Vincent Wan (8):
      drivers: wifi: simplelink: Fix strings used in assertions
      doc: boards: cc3220sf_launchxl: update link to XDS110 firmware update
      net: Fix inet_pton when offloading is enabled
      drivers: wifi: simplelink: socket() should return non-zero fds
      samples: net: Add support for cc3220sf_launchxl in mqtt_publisher
      tests: net: port mqtt tests to cc3220sf_launchxl
      drivers: wifi: simplelink: Add handling for unknown root CA
      samples: net: add TLS offload support to mqtt_publisher

Vincent van der Locht (3):
      soc: sam4s: added missing devices in sam4s range
      net: dhcpv4: net_dhcpv4_stop() removing address during renew
      net: dhcpv4: dhcp start/stop made compatible for multiple interfaces

Vincenzo Frascino (8):
      arm: beetle: Fix UART1 IRQ number
      drivers: wdog: Update CMSDK Wdog driver
      dts: arm: Fix Dual Timer base address in v2m_beetle
      dts: arm: Fix Dual Timer IRQ config for v2m_beetle
      dts: arm: Fix Dual Timer base address in mps2_an385
      dts: arm: Fix Dual Timer IRQ config for mps2_an385
      dts: arm: Code Cleanup in v2m_beetle
      dts: arm: Code Cleanup in mps2_an385

Vitaly Gaiduk (1):
      linker: riscv: Disable creating ROM domain by config option.

Wayne Ren (14):
      arc: fix the coverity issuse in thread.c
      driver: refactor the arcv2 timer0 driver
      driver: arcv2_timer0.c: minor changes according to review
      drivers: arcv2_timer0: bug fixes
      soc: arc: clean up the timer relatted definitions
      driver: arcv2_timer0: optimze the code
      board: add the initial support of iotdk
      driver: uart_ns16550.c: necessary changes for arc iot soc
      board: iotdk: necessary clean up based on latest master branch
      board: iotdk: bug fixes and remove unsupported drivers config
      arc: fix the pollution of lp_xxx regs in _rirq_return_from_coop
      driver: arcv2_timer0: fixes and optimize the timer driver
      drivers: uart_ns16550: remove soc specific codes and bug fixes
      arch: arc: add the handling of APP_SHARED_MEM

Wenjie Xu (1):
      Bluetooth: shell: Fix NULL shell context

Wolfgang Puffitsch (3):
      bluetooth: controller: Update ticker_user_op for predictable layout.
      bluetooth: host: Fix endianness issue for group end_handle.
      bluetooth: controller: Remove trailing semicolons in HCI defines.

Yannis Damigos (33):
      dts: stm32f429vX: Fix delete-node syntax
      drivers/rtc: Enable RTC driver for STM32F4 series
      dts/arm/st: Add rtc node to STM32F4
      boards/arm: Enable RTC on STM32F4 based boards
      drivers/rtc: Enable RTC driver for STM32F3 series
      dts/arm/st: Add rtc node to STM32F3
      boards/arm: Enable RTC on STM32F3 based boards
      include/logging: Avoid subtraction on void pointers
      drivers: usb: device: Migrate to new logger
      include/usb/usb_device: Add USB_* log macros
      subsys/usb: Move to new logger subsystem
      dts: bindings: usb: Add maximum-speed property
      dts: st: Add maximum-speed property to usb nodes
      arch: stm32f4/f7/l4: Add usb maximum speed defines to dts fixup
      drivers: usb_dc_stm32: Get maximum-speed from DT
      dts: st: f2/l4: Add missing maximum-speed property
      drivers: usb_dc_stm32: Add HIGH and HIGH_IN_FULL defines for L4 series
      boards/arm/stm32f3_disco: Enable LSM303DLHC MEMS sensors
      samples/sensor/lsm303dlhc: Add LSM303DLHC sample
      dts: stm32f302: Delete spi1 node from STM32F302X8
      dts: stm32f334: Delete usb node
      boards: olimexino_stm32: Conform to default configuration guidelines
      dts: bindings: Add yaml files for PHY subsystem
      dts/bindings/usb: Add phys property to STM32 USB yaml
      dts: st: Add USB PHY nodes
      drivers: usb_dc_stm32: Use DT to check if USBPHYC exists
      disk: disk_access_sdhc: Move to new logger subsystem
      disk: disk_access_sdhc: Enable multiple disk interfaces
      disk: disck_access_sdhc: Switch to new SPI API
      boards/arm/olimexino_stm32: Add SDHC support
      crc: Move crc7 into CRC single header
      samples: cdc_acm: Remove redundant inclusion
      usb_dc_stm32: Fix check endpoint capabilities

Yasushi SHOJI (4):
      cmake: Do not abort even if git describe failed
      gitignore: Ignore GNU Global's tag files
      arch: add big endian support
      uncrustify: Add a rule to remove space inside function argument

Yurii Hamann (1):
      dts: arm: stm32: USART1 fix in device tree for STM32F7 series devices

Zelin Cai (2):
      boards: nrf52832_mdk: add board support for nRF52832-MDK
      boards: nrf52840_mdk: add board support for nRF52840-MDK

Zhang WenChao (1):
      samples: application_development: fix #11074

qianfan Zhao (24):
      drivers: eth_sam: Add generate random mac address feature
      drivers: add spi support for atmel sam series soc
      dts: Add spi node for atmel sam series soc
      same70: Add SPI1, SPI2 support
      drivers: usart_sam: fix usart2 device config informations
      dts_fixup: fix atmel same70 CONFIG_UART_SAM_PORT_2_NAME define
      drivers: spi_sam: fix compiler waring
      drivers: spi_sam: fix spi peripheral chip select config
      drivers: spi_sam: Config chip select pin when driver init
      boards: same70: Enable SPI0 on dts
      drivers: gpio_sam: Add ACCESS_BY_PORT mode for gpio config
      drivers: gpio_sam: fix gpio_sam_write ACCESS_BY_PORT mode
      net: shell: Return -ETIMEDOUT if ping target timeout
      soc: same70: Auto select SAME70 SoC drivers based Kconfig
      boards: sam_e70_xplained: Delete drivers select in defconfig
      arch: sam: Enable SEGGER RTT on all sam0 and same70 SoCs
      subsys: logging: Using struct to manger log_strdup buffer.
      subsys: shell: Print help message only if command doesn't available
      clock_control: stm32: add supports for MCO output
      pinmux: stm32f4: add MCO pin multiplexing helper
      soc: same70: don't switch main clock if already did
      openocd.board.cmake: Fix flash load address
      drivers: iwdg_stm32: Convent STM32 watchdong driver to new API
      samples: watchdog: Remove stm32 iwdg sample
```",59771425
1529,False,False,2018-09-11T01:27:40Z,2018-09-11T02:00:24Z,"We are pleased to announce the release of Zephyr kernel version 1.13.0.

Major enhancements with this release include:

* Extensible and Pluggable Tracing Support
* Compartmentalized application memory organization
* Logging System Overhaul
* Introduce system calls for BSD socket APIs
* Support for IEEE 802.1AS-2011 generalized Precision Time Protocol (gPTP)
* Link Layer Discovery Protocol (LLDP) TX support
* Support for TLS and DTLS using BSD socket API
* Support for Link Layer Multicast Name Resolution (LLMNR)
* Introduced reworked ADC API and updated Nordic, NXP, Atmel, and
  Synopsys DesignWare drivers
* Support OS driven Power Management framework
* Basic support for Arm TrustZone in Armv8-M

The following sections provide detailed lists of changes by component.

## Kernel

* Remove kernel event manager, replaced by generic tracing interface
* Enhanced Timeout and Tick handling in kernel
* Compartmentalized application memory organization
* Fix errno access for user mode

## Architectures

* arch: arc: improve the reset code
* arch: arc: use a separate stack for exception handling
* arch: arc: refactor the arc stack check support
* arch: arm: stm32: enable instruction and data caches on STM32F7
* arch: arm: implement ARMv8-M MPU driver
* irq: Fix irq_lock api usage
* arch: arm: macro API for defining non-secure entry functions
* arch: arm: allow processor to ignore/recover from faults
* arm: nxp: mpu: Consolidate k64 mpu regions
* arm: Print NXP MPU error information in BusFault dump
* arch: ARM: Change the march used by cortex-m0 and cortex-m0plus
* arch: arm: integrate ARM CMSE with CMake
* arch: arm: basic Arm TrustZone-M functionality for Cortex-M23 and Cortex-M33
* arch: arm: built-in stack protection using Armv8-M SPLIM registers
* arch: arm: API for using TT intrinsics in Secure/Non-Secure Armv8-M firmware
* arch: arm: clean up MPU code for ARM and NXP
* arch: arm: Set Zero Latency IRQ to priority level zero
* arch/arm: Fix locking in __pendsv

## Boards & SoC Support

* x86: add SoC configuration for Apollo Lake
* x86: add support for UP Squared (Pentium/Celeron)
* arc: Support Synopsys ARC nSim instruction set simulator
* riscv32: riscv-privilege: Microsemi Mi-V support
* Added support for the following Arm boards:

  * efr32_slwstk6061a
  * nrf52_adafruit_feather
  * nrf52810_pca10040
  * nrf52840_pca10059
  * nucleo_f207zg
  * reel_board
  * stm32f723e_disco
  * stm32f746g_disco
  * stm32f769i_disco
  * udoo_neo_full_m4
  * warp7_m4

## Drivers and Sensors

* adc: Introduced reworked API and updated Nordic, NXP, Atmel, and
  Synopsys DesignWare drivers
* audio: Added TLV320DAC310x audio DAC driver
* can: Added can support for STM32L432
* clock_control: Added STM32F7 family clock control
* entropy: Added support for STM32F7
* eth: Enabled gPTP support in mcux and gmac drivers
* eth: Added promiscuous mode support to native_posix
* eth: mcux: Added an option for randomized, but stable MAC address
* gpio: Added STM32F7 GPIO support
* interrupt_controller: Added STM32F7 EXTI support
* i2c: Added support for STM32F7
* i2c: Added i.MX shim driver
* i2c: Implemented slave support for stm32_v2
* i2c: Added EEPROM I2C slave driver
* i2c: Added shims for nrfx TWI and TWIM drivers
* i2s: Exposed i2s APIs to user mode
* led: Added TI LP5562 and NXP PCA9633 drivers
* modem: Added Wistron WNC-M14A2A LTE-M Modem driver
* modem: Added modem receiver (tty) driver
* pinmux: Added STM32F7 pinmux support
* pwm: Added i.MX shim driver
* pwm: Added shim for nrfx PWM HW driver
* serial: Added power management to nRF UART driver
* serial: Added STM32F7 UART support
* serial: Allow to pass arbitrary user data to irq callback
* serial: Added UARTE driver for the nRFx family
* sensor: Added adxl372, mma8451q, adt7420 drivers
* sensor: lis2dh: Fix I2C burst read/write operations
* rtc: Added support for STM32
* usb: Added support for OTG FS on STM32F2 and STM32F7
* usb: Added High Speed support for DesignWare USB
* wifi: Added SimpleLink WiFi Offload Driver (wifi_mgmt only)

## Networking

* Introduce system calls for BSD socket APIs.
* Add IPv4 autoconf support. This adds support for IPv4 link-local addresses
  (169.254.*.*)
* Add TLS and DTLS support to BSD socket API. They are configured via
  setsockopt() API.
* Add support for IEEE 802.1AS-2011 generalized Precision Time Protocol (gPTP)
  for ethernet networks. A sample application is created to show how to interact
  with gPTP code.
* Add support for PTP clock driver. This driver will be used by gPTP supported
  ethernet drivers.
* Add Link Layer Discovery Protocol (LLDP) TX support.
* Add support for managing Qav credit-based shaper algorithm.
* Add generic TX timestamping support.
* Add carrier detection support to ethernet L2 driver.
* Add support for having vendor specific ethernet statistics.
* Add getter support to ethernet management interface.
* Add promiscuous mode support to network interface. A sample application is
  created that shows how to use the user API for getting all network packets.
  The native_posix ethernet driver supports promiscuous mode at this point.
* Add support for Link Layer Multicast Name Resolution (LLMNR). LLMNR is used in
  Microsoft Windows networks for local name resolution.
* Add API to net_pkt to prefill a network packet to a pre-defined value.
* Add IEEE 802.1Qav support to Atmel GMAC ethernet driver.
* Add hardware TX timestamping support to Atmel GMAC ethernet driver.
* Add multiple hardware queue support to Atmel GMAC ethernet driver.
* Add gPTP support to Atmel GMAC ethernet driver.
* Add support for TI SimpleLink WiFI offload driver.
* Add support for randomized but stable MAC address in NXP MCUX ethernet driver.
* Add extra prints to net-shell for ethernet based network interfaces. The
  supported features and priority queue information is printed.
* Add and fix string to integer conversions in net-shell.
* Allow user to configure MAC address filters into ethernet devices.
* Catch network interface ON and OFF events in DHCPv4 and renew address lease if
  we re-connected.
* Remove forever timeouts when waiting a new network buffer to be available.
* Relay network interface up/down command from net-shell to Linux host for
  native_posix ethernet driver.
* No need to join IPv6 solicited node multicast group for Bluetooth IPSP
  supported nodes.
* Allow external program to be started for native_posix ethernet driver. This
  allows for example startup of wireshark when zeth is created.
* Network packet priority and traffic class fixes and clarifications.
* Lower memory consumption in net by using packed enums when applicable.
* Correctly notify net_app server when TCP is disconnected.
* Register OpenThread used unicast and multicast IPv6 addresses for network
  interface.
* Enable Fast Connect policy for TI SimpleLink ethernet driver.
* Fix ieee802154 simulator driver channel/tx power settings.
* Handle large IPv6 packets properly.
* Enable gPTP support in native_posix, NXP mcux and Atmel GMAC ethernet drivers.
  The native_posix ethernet driver gPTP support is only for testing purposes.
* Network configuration (net_config) library split from the net_app library.
  (This change requires updating application configs to refer to corresponding
  NET_CONFIG_* options instead of NET_APP_*).
* Moving all layer 2 (L2) network code into subsys/net/l2 directory.
* Add MSS option on sending TCP SYN request.
* Fix TCP by processing zero window probes when our receive window is 0.
* IPv4, IPv6, ICMPv6, ARP code refactoring and cleanup.
* IPv6 address lifetime fixes.
* IPv6 fragmentation fixes.
* ARP fixes when using VLAN.
* Timeout too long lasting ARP requests.
* DHCPv4 fixes and timeout management refactoring.
* TCP retry, RST packet handling, and memory leak fixes.
* IP address print function enhancements.
* HTTP fix when sending the last chunk.
* MQTT fixes.
* LWM2M cleanups and fixes.
* Fix cache support in Atmel GMAC ethernet driver.
* Fix NXP MCUX ethernet driver to detect carrier lost event.
* Port native API echo-server/echo-client samples to BSD sockets API, with
  TLS/DTLS support.
* Handle out-of-buf situations gracefully in echo-client and echo-server sample
  applications.

## Bluetooth

* New user-friendly service population using a refreshed BT_GATT_CHARACTERISTIC
  macro.
* Added support for Bluetooth hardware in the native_posix board, allowing
  developers to use the native POSIX architecture with Bluetooth.
* Added a new helper API to parse advertising data.
* Added a new flag, BT_LE_ADV_OPT_USE_NAME, to include the Bluetooth Device
  Name in the advertising data.
* Added support for fixed passkeys to use in bonding procedures.
* Added a new Bluetooth shell command to send arbitrary HCI commands to the
  controller.
* Added a new feature to support multiple local identities using a single
  controller.
* Added a new, board-specific mesh sample for the nRF52x series that
  implements the following models:

  - Generic OnOff client and server.
  - Generic Level client and server.
  - Generic Power OnOff client and server.
  - Light Lightness client and server.
  - Light CTL client and server.
  - Vendor Model.
* Controller: Added a TX Power Kconfig option.
* Controller: Use the newly available nrfx utility functions to access the
  nRF5x hardware.
* Controller: Multiple bug fixes.
* Controller: Added support for the nRF52810 SoC from Nordic Semiconductor.
* New HCI driver quirks API to support controllers that need uncommon reset
  sequences.
* Host: Multiple bug fixes for GATT and SMP.
* Mesh: Multiple bug fixes.

## Build and Infrastructure

* Kconfig: Remove redundant 'default n' properties
* cmake: replace PROJECT_SOURCE_DIR with ZEPHYR_BASE
* Kconfig: Switch to improved globbing statements


## Libraries / Subsystems

* Tracing: Basic support SEGGER systemview
* Logging: Introduce a new logging subsystem
* fs/nvs: Improved nvs for larger blocksizes
* subsys: console: Refactor code to allow per-UART ""tty"" wrapper


## HALs

* ext/hal: stm32cube: STM32L4: Enable legacy CAN API
* ext: Import Atmel SAMD20 header files from ASF library
* ext: gecko: Add Silabs Gecko SDK for EFR32FG1P SoCs
* drivers: add i.MX I2C driver shim
* hal: stm32f2x: Add HAL for the STM32F2x series
* ext: stm32cube: update stm32l4xx cube version
* ext: stm32cube: update stm32f7xx cube version
* ext: stm32cube: update stm32f4xx cube version
* ext: stm32cube: update stm32f3xx cube version
* ext: stm32cube: update stm32f1xx cube version
* ext: hal: nordic: Update nrfx to version 1.1.0
* net: drivers: wifi: SimpleLink WiFi Offload Driver (wifi_mgmt only)
* ext/hal/nxp/imx: Import the nxp imx6 freertos bsp

## Documentation

* Simplified and more maintainable theme applied to documentation.
  Latest and previous four releases regenerated and published to
  https://docs.zephyrproject.org
* Updated contributing guidelines
* General organization cleanup and spell check on docs including content
  generated from Kconfig files and doxygen API comments.
* General improvements to documentation following code,
  implementation changes, and in support of new features, boards, and
  samples.
* Documentation generation now supported on Windows host systems
  (previously only linux doc generation was supported).
* PDF version of documentation can now be created


## Tests and Samples

* Enhanced benchmarks to support userspace
* Improve test coverage for the kernel


## Issue Related Items

These GitHub issues were addressed since the previous 1.12.0 tagged
release:


* #9862 tests/drivers/build_all#test_build_sensors_a_m @ quark_se_c1000_devboard:x86 BUILD failed
* #9857 tests/cmsis_rtos_v1 - test_signal_events_signalled results in Assertion failure on all targets with PR#9856
* #9840 doc: potential broken link when referencing latest doc version
* #9833 Bluetooth Mesh incorrect reference to CONFIG_BT_SETTINGS
* #9788 update to mbedTLS 2.12.0
* #9786 arch: xtensa: build failure due to extra #endif
* #9785 Bluetooth: bt_gatt_service_register() assumes sc delayed work handler is initialized
* #9772 Test application hangs without any console output on x86/ARC based boards @arduino_101:arc
* #9768 [Coverity CID :187902] Memory - illegal accesses in /subsys/net/ip/ipv6_fragment.c
* #9766 [Coverity CID :187904] Integer handling issues in /tests/benchmarks/timing_info/src/semaphore_bench.c
* #9753 ESP32: Failing to build project
* #9746 zephyr networking non socket client server, qemu_x86  issue
* #9744 tests/kernel/mbox/mbox_usage/testcase.yaml#kernel.mailbox crashes on ESP32
* #9727 Bluetooth: IPSP Sample Doc no match for new path
* #9723 tests/drivers/adc/adc_api/ fails on sam_e70_xplained
* #9718 The test suite test_spi (spi_loopback) when built and run on the nrf52832_pca10040 board
* #9701 Suggestion: Turn warnings into errors in extract_dts_includes.py
* #9689 Multiple tests are failing on sam_e70_xplained once the cache is enabled
* #9684 tests/posix/ fails on sam_e70_xplained
* #9683 Multiple testcases in tests/kernel/mem_protect/mem_protect, tests/kernel/alert, tests/kernel/mem_pool test fails on sam_e70_xplained due to commit c090776
* #9682 tests/kernel/init: kernel.common.init.verify_bootdelay fails on sam_e70_xplained
* #9680 tests/mem_slab/mslab, tests/mem_slab/mslab_api and tests/mem_slab/mslab_threadsafe tests are crashing on sam_e70_xplained
* #9677 tests:cmsis_rtos_v1: test_mutex crashes with bus fault on sam_e70_xplained
* #9676 benchmark.timing.userspace not working on nrf52840 with v1.13.0-rc1
* #9671 Zephyr with WNC-M14A2A not compiling
* #9670 Bluetooth: Mesh: Persistent Storage: AppKey not restored
* #9667 LwM2M: Writeable parameter /3311/0/5850 doesn't persist write
* #9665 tests/drivers/watchdog/wdt_basic_api crashes on Quark D2k / SE and ESP32
* #9664 tests/kernel/threads/thread_apis/kernel.threads.user_mode crases on QEMU-x86
* #9652 gen_isr_table@mimxrt1050_evk runs failure on R1.13_RC1.
* #9649 readme of LPCxpresso54114_mo core needs update for R1.13
* #9646 sanitycheck: crashes after test execution summary report are not caught
* #9644 [Coverity CID :187817] Error handling issues in /tests/benchmarks/timing_info/src/msg_passing_bench.c
* #9643 [Coverity CID :187818] Error handling issues in /tests/benchmarks/timing_info/src/msg_passing_bench.c
* #9642 [Coverity CID :187819] Memory - illegal accesses in /subsys/logging/log_msg.c
* #9641 [Coverity CID :187820] Memory - illegal accesses in /subsys/bluetooth/host/hci_core.c
* #9640 [Coverity CID :187821] Memory - illegal accesses in /subsys/bluetooth/host/hci_core.c
* #9639 [Coverity CID :187822] Null pointer dereferences in /subsys/net/ip/tcp.c
* #9638 [Coverity CID :187823] Memory - corruptions in /samples/net/coap_server/src/coap-server.c
* #9637 [Coverity CID :187824] Integer handling issues in /lib/cmsis_rtos_v1/cmsis_thread.c
* #9636 [Coverity CID :187825] Error handling issues in /subsys/net/ip/udp.c
* #9635 [Coverity CID :187826] Error handling issues in /tests/benchmarks/timing_info/src/msg_passing_bench.c
* #9634 [Coverity CID :187827] Null pointer dereferences in /subsys/logging/log_msg.c
* #9633 [Coverity CID :187828] Error handling issues in /tests/benchmarks/timing_info/src/msg_passing_bench.c
* #9630 STM32L4: something wrong with GPIO interrupts
* #9623 tests/net/lib/tls_credentials/ crashed on sam_e70_xplained and frdm_k64f
* #9622 tests/net/mgmt/ crashed on sam_e70_xplained
* #9621 tests/net/promiscuous crashed on sam_e70_xplained
* #9619 tests/net/socket/getaddrinfo/ - crashes on sam_e70_xplained and  frdm_k64f
* #9618 tests/net/udp/ - MPU fault on sam_e70_xplained
* #9617 tests/net/websocket/ - passed on QEMUx86 but the target crashed after that
* #9614 tests/net/socket/ faults on sam_e70_xplained and frdm_k64f
* #9611 tests/kernel/sched/schedule_api/testcase.yaml#kernel.sched.slice_reset fails on nrf52840_pca10056, sam_e70_xplained, nrf52_pca10040
* #9609 tests/kernel/mem_protect/stack_random: kernel.memory_protection.stack_random fails on emsk7d_v22
* #9598 tests/power/power_states fail on arduino101:x86
* #9597 tests/subsys/fs/fat_fs_api assertion fail on arduino101
* #9591 @hci.h use of magic-number in bluetooth addr struct (Missing define in @bluetooth.h)
* #9580 peripheral_hids does not remember bonds
* #9575 Network NULL pointer reference when enable net/dhcpv4 debug
* #9574 tests/cmsis_rtos_v1 - test_mutex_lock_timeout results in Assertion failure on all targets with PR#9569
* #9561 Question: Does it support passing the bootloader(mcuboot) parameter to the kernel(zephyr)?
* #9558 DTC 1.4.7 breaks at least FRDM_K64F builds
* #9537 ENC28J60 can‘t receive packets properly
* #9536 console: missing kernel.h include in header
* #9535 broken callback handling in nrfx gpio driver
* #9530 Bluetooth/gatt: bt_gatt_notify never return -ENOMEM, undocumented return value.
* #9527 tests/kernel/sched/schedule_api/testcase.yaml#kernel.sched.unlock_preemptible fails on nrf52840_pca10056, sam_e70_xplained, nrf52_pca10040
* #9523 tests/kernel/mem_protect/stackprot hangs without any console output on nrf51/52
* #9494 Nordic nrf52810_pca10040 is missing default bluetooth configuration options
* #9487 tests/cmsis_rtos_v1 - test_kernel_systick results in Assertion failure on nrf51/52
* #9486 sanitycheck filter rules does not work
* #9471 soc: efr32fg1p: hello_world sample app hangs when started by MCUboot
* #9470 LWM2M: TLV encoding of read result is wrong
* #9468 tests/kernel/mem_pool/mem_pool_concept/testcase.yaml#kernel.memory_pool fails on nrf52840_pca10056, nrf52_pca10040 and  nrf51_pca10028
* #9466 tests/kernel/context/testcase.yaml#kernel.common.k_sleep fails on nrf52_pca10040 and nrf52840_pca10056
* #9465 tests/net/ptp/clock: PTP clock test are failing on FRDM_K64f and same_e70_xplained platforms
* #9462 [Coverity CID :187670] Integer handling issues in /tests/net/ethernet_mgmt/src/main.c
* #9461 [Coverity CID :187671] Uninitialized variables in /tests/net/iface/src/main.c
* #9460 [Coverity CID :187672] Uninitialized variables in /tests/net/iface/src/main.c
* #9459 tests/posix/timer fails on nRF51/52
* #9452 Error parsing DTS 'compatible' property list
* #9446 CI didn't report failure due to ARC_INIT issue
* #9444 sanitycheck not able to run due to CONFIG_ARC_INIT=n
* #9441 tests/kernel/gen_isr_table fails on mimxrt1050_evk
* #9413 tests/cmsis_rtos_v1 - test_signal_events_signalled results in Assertion failure on nrf51/52
* #9402 samples/drivers/watchdog fails on frdm_k64f
* #9396 ./loop-socat.sh not running
* #9392 samples/bluetooth/hci_uart ninja flash - UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 360: ordinal not in range(128)
* #9389 ESP32 support: setting env var ESP_DEVICE not working
* #9356 Test tests/crypto/rand32 hangs on nrf51_pca10028
* #9348 samples: net: echo_client/echo_server does not work with IPv4 qemu_x86
* #9310 nRF52_PCA10040: Failing test_slice_reset
* #9297 [Coverity CID :187318] Error handling issues in /tests/posix/pthread_key/src/pthread_key.c
* #9296 [Coverity CID :187319] Control flow issues in /subsys/net/lib/sockets/sockets.c
* #9295 [Coverity CID :187320] Control flow issues in /drivers/ethernet/eth_sam_gmac.c
* #9294 [Coverity CID :187321] Possible Control flow issues in /samples/net/sockets/big_http_download/src/big_http_download.c
* #9293 [Coverity CID :187322] Incorrect expression in /tests/posix/pthread_key/src/pthread_key.c
* #9292 [Coverity CID :187323] Control flow issues in /subsys/net/ip/net_if.c
* #9291 [Coverity CID :187324] Control flow issues in /subsys/net/lib/sockets/sockets.c
* #9287 net/dhcpv4: Fix single byte buffer filling madness
* #9273 k_pipe_alloc_init() api is failing on qemu_x86
* #9270 cmake: kconfig: menuconfig is not writing zephyr/.config
* #9262 tests/kernel/mem_protect/userspace.access_other_memdomain fails on sam_e70_xplained and nrf52840_pca10056
* #9238 Get POSIX board compliant with default configuration guidelines
* #9234 Get ARC boards compliant with default configuration guidelines
* #9224 sam_e70_xplained fails to build several tests
* #9221 calloc memory data is not initialized to zero for MINIMAL_LIBC
* #9198 Out-of-Tree YAML and DTS support
* #9196 optimize gen_kobject_list.py
* #9160 net: openthread: Mesh Local IPv6 is not in zephyr stack
* #9148 samples/net/http_server: Failed to respond back to CURL command on http Client
* #9135 Failure : ""integer overflow in exp"" on Altera-Max 10 platform
* #9134 Build failure with SAM_e70 platform
* #9131 samples/net/coaps_server: Failed to send response to coaps_client
* #9128 doc build fails if no reST reference to file
* #9113 Enabling various thread options causes failures on cortex-M0 boards
* #9108 Which board is suit with esidon??
* #9098 Doc build failure not noticed by CI test system
* #9081 dynamic thread objects do not have a thread ID assigned
* #9067 Failed tests: posix.sema and posix_checks on em_starterkit_em7d_v22
* #9061 sanitycheck not printing QEMU console in some cases
* #9058 Kconfig default on BT_ACL_RX_COUNT can be 1, but range is 2-64
* #9054 Build failures with mimxrt1050_evk board
* #9044 ""logging: Remove log.h including in headers limitation"" breaks logging
* #9032 net/sockets/echo_async crashes after several connections (qemu_x86)
* #9028 STM32 SPI/I2S: LSB bit corrupted for the received data
* #9019 cmsis Include/ version mismatch
* #9006 Create driver for the MMA8451Q accelerometer sensor on FRDM-KL25Z
* #9002 [Coverity CID :187063] Control flow issues in /subsys/net/l2/ethernet/ethernet_mgmt.c
* #9001 [Coverity CID :187064] Control flow issues in /subsys/bluetooth/host/mesh/cfg_srv.c
* #9000 [Coverity CID :187065] Memory - corruptions in /subsys/net/l2/ethernet/gptp/gptp_mi.c
* #8998 [Coverity CID :187068] Memory - illegal accesses in /subsys/bluetooth/host/mesh/cfg_srv.c
* #8997 [Coverity CID :187069] Memory - illegal accesses in /subsys/logging/log_msg.c
* #8996 [Coverity CID :187070] Control flow issues in /drivers/bluetooth/hci/spi.c
* #8995 [Coverity CID :187071] Insecure data handling in /subsys/net/l2/ethernet/gptp/gptp_mi.c
* #8994 [Coverity CID :187072] Error handling issues in /samples/net/sockets/echo_server/src/udp.c
* #8993 [Coverity CID :187073] Null pointer dereferences in /subsys/net/ip/utils.c
* #8992 [Coverity CID :187074] Incorrect expression in /samples/net/traffic_class/src/main.c
* #8991 [Coverity CID :187075] Memory - corruptions in /subsys/net/l2/ethernet/gptp/gptp_mi.c
* #8990 [Coverity CID :187077] Memory - corruptions in /samples/net/rpl_border_router/src/http.c
* #8989 [Coverity CID :187078] Control flow issues in /subsys/net/l2/ethernet/gptp/gptp_md.c
* #8988 [Coverity CID :187079] Integer handling issues in /subsys/net/l2/ethernet/gptp/gptp.c
* #8987 [Coverity CID :187080] Control flow issues in /subsys/net/l2/ethernet/gptp/gptp_mi.c
* #8982 tests/drivers/watchdog/wdt_basic_api results in FATAL EXCEPTION on esp32
* #8977 CMake Error
* #8976 nordic: watchdog: Cannot be initialized - circular dependency
* #8968 The tests/kernel/tickless/tickless_concept fails on nRF5x
* #8963 tests/net/trickle, utils and icmpv6 hangs on sam_e70_xplained:arm
* #8960 Tcp connection not connecting
* #8950 ARM fault dumping code does too much, assumes all faults are fatal, and doesn't work under some configurations
* #8949 nsim_sem board does not work
* #8933 doc: build WARNING on windows 7
* #8931 STM32L4 CAN sample project does not compile
* #8924 Get rid of -fno-strict-overflow
* #8906 zsock_getaddrinfo is not reentrant
* #8899 Failed test: kernel.common.timing.sleep on nrf52 (tests/kernel/sleep/kernel.common.timing)
* #8898 Failed test: kernel.timer.timer_periodicity on nrf51/nrf52
* #8897 Failed test: kernel.tickless.tickless_slice on nrf51/nrf52
* #8896 Failed test: kernel.sched.slice_reset and kernel.sched.slice_scheduling (tests/kernel/sched/schedule_api/kernel.sched) on nrf51/nrf52
* #8895 Failed test: kernel.common.timing.pending on nrf51_pca10028 and nrf52_pca10040 (tests/kernel/pending/kernel.common.timing)
* #8888 http client example fails on mimxrt1050_evk
* #8887 Ping command crash on mimxrt1050_evk
* #8871 drivers: can: Compiling error due to stm23Cube update
* #8866 Failed test: net.arp.arp (tests/net/arp) on sam_e70_xplained
* #8865 Failed test: net.udp.udp (tests/net/udp/)  on sam_e70_xplained
* #8864 ARM MPU _arch_buffer_validate allowing reads to kernel memory
* #8860 GATT MTU Callback
* #8849 Allow application to define its own DTS bindings
* #8833 OpenThread: Minimal Thread Device (MTD) option is not building
* #8829 BLE ""device name"" characteristic of Generic Access Service is read only
* #8820 wifi_winc1500 driver socket id stored in net_context->user_data may be overwritten at socket layer
* #8815 Nordic: Directly accessing GPIOTE might create unstable firmware (GPIO, PWM, BLE)
* #8800 cmake errors with menuconfig
* #8798 k_cycle_get_32() implementation on nrf series is too slow.
* #8791 Request supporting OTG_HS port on STM32F4/F7 SoCs
* #8790 K64F/Kinetis: extract_dts_includes.py warnings when building sample
* #8752 net: ARP is broken after PR #8608
* #8732 tests/subsys/usb/bos/ fails randomly
* #8727 Network stack cleanup: DHCPv4
* #8720 Network stack cleanup: IPv4
* #8717 posix:  Memory is not returned to mempool when a pthread complete its execution
* #8715 buffer-overflow in tests/net/tx_timestamp
* #8713 add DTS gpio support for NRF51
* #8705 Out of the box error in samples/subsys/nvs with nRF52-PCA10040
* #8700 [Coverity CID :186841] Null pointer dereferences in /subsys/usb/usb_descriptor.c
* #8699 [Coverity CID :186842] Memory - illegal accesses in /drivers/interrupt_controller/plic.c
* #8698 [Coverity CID :186843] Parse warnings in /tests/kernel/mem_protect/mem_protect/src/mem_domain.c
* #8697 [Coverity CID :186844] Parse warnings in /tests/net/ieee802154/fragment/src/main.c
* #8696 [Coverity CID :186845] Parse warnings in /tests/net/ieee802154/l2/src/ieee802154_test.c
* #8695 [Coverity CID :186846] Null pointer dereferences in /tests/net/ptp/clock/src/main.c
* #8694 [Coverity CID :186847] Parse warnings in /tests/kernel/mem_protect/mem_protect/src/inherit.c
* #8693 [Coverity CID :186848] Parse warnings in /tests/kernel/mem_protect/mem_protect/src/mem_domain.c
* #8692 [Coverity CID :186849] Parse warnings in /tests/kernel/mem_protect/mem_protect/src/mem_domain.c
* #8691 [Coverity CID :186850] Parse warnings in /tests/kernel/mem_protect/mem_protect/src/mem_domain.c
* #8690 [Coverity CID :186851] Error handling issues in /tests/bluetooth/mesh/src/microbit.c
* #8689 [Coverity CID :186852] Parse warnings in /tests/kernel/mem_protect/mem_protect/src/mem_domain.c
* #8669 fault during my timer testing
* #8668 net: ARP is broken in master (at least) on STM32
* #8658 tests/net/trickle fails on FRDM k64f
* #8657 tests/net/ptp fails on QEMU x86
* #8646 CONFIG_NET_OFFLOAD defined in subsys/net/l2/, but not referenced there
* #8643 Add SAADC driver for nRF52
* #8642 ieee802154 tests fail to build
* #8636 MCUboot firmware update issue
* #8611 RT1050EVK: MPU FAULT with Zephyr OS v1.12.0-360-gf3d1b22 using ztest
* #8610 USB: Setup stage in control transfers
* #8605 mbedtls_ssl_close_notify was called after DTLS context released
* #8602 master broken for stm32 ARM boards
* #8600 Not able to bind the adc device structure for nrf52832 controller
* #8598 [Coverity CID :186057] - Out of bounds write in samples/net/rpl_border_router/src/coap.c
* #8596 drivers: dma_cavs: NULL pointer exception when DMA start called after DMA stop
* #8593 samples/mpu/mem_domain_apis_test/kernel.memory_protection.memory_domains fails to build
* #8587 ZTEST should support multiple calls to mocked function
* #8584 ToolchainCapabilityDatabase.cmake:93 error in PR #8579
* #8576 there have a error in doc
* #8567 Can't parse json
* #8563 Compilation warning/error on stm32l4: ""__weak"" redefined
* #8529 tests/kernel/common/kernel.common fails for native_posix on Ubuntu 16.04
* #8528 rpl-mesh-qemu sample, the net inface init failed.
* #8511 nrf52_blenano2 tmp112 sensor sample build failed - redefined I2C
* #8506 tests/subsys/fs/fat_fs_api - test_fat_mount results into assertion failure on Arduino_101 - FS init failed (-19)
* #8502 Compiling for native_posix with newlib is missing various math symbols
* #8501 I think there is a issue about shell.
* #8470 Broken Arduino 101 Bluetooth Core flashing
* #8466 k_sleep on mimxrt1050_evk board broken
* #8464 sdk_version file missing
* #8462 non-ASCII / non-UTF-8 files in ext/
* #8452 ieee802154: csma-ca: random backoff factor looks wrong
* #8444 ""make clean"" removes include directory
* #8438 cmake: Propagation of library specific compile flag
* #8434 Networking Problems, Size Missmatch 15 vs 13
* #8431 mqtt: unimplemented MQTT_UNSUBACK in mqtt_parser function in mqtt.c file
* #8424 HID example broken
* #8416 [Coverity CID :186580] Uninitialized variables in /drivers/can/stm32_can.c
* #8415 [Coverity CID :186581] Memory - corruptions in /subsys/bluetooth/host/gatt.c
* #8414 [Coverity CID :186582] Memory - corruptions in /subsys/bluetooth/host/gatt.c
* #8413 [Coverity CID :186583] Error handling issues in /samples/net/sockets/dumb_http_server/src/socket_dumb_http.c
* #8393 `CONFIG_MULTITHREADING=n` builds call `main()` with interrupts locked
* #8391 nrf52_blenano2 tmp112 sensor sample build failed.
* #8390 bluetooth: request APIs to notify application that pairing is complete or not
* #8388 Assigning to promptless symbols should have a better error message
* #8385 Missing documentation on bt_conn_auth_cb(...)
* #8382 ESP32: add support for ESP-IDF bootloader
* #8380 cmake: ninja clean tries to remove include folders
* #8378 subsys: settings: Idea for a very simple settings system
* #8371 nRF5: enable UARTE peripheral support
* #8367 fs: nvs: auto restore FS on writing while power down error.
* #8366 mcumgr: unable to perform 2nd update
* #8365 mcumgr: improper response to ""image list"" command after update.
* #8361 __ASSERT() triggers with `CONFIG_MULTITHREADING=n`
* #8358 Flashing Target Device FAIL
* #8357 bluetooth: request the capability to change gap device name programmatically
* #8356 Failed test: kernel.common.bitfield (tests/kernel/common) on Altera Max10
* #8355 CMake prints a spammy warning about ""policy CMP0000""
* #8350 bluetooth: request BLE stack to support pre-set passkey for pairing
* #8334 nrf52840.dtsi contains ""0x"" in device label
* #8329 qustion: build-system: How to generate a preprocess file
* #8327 CONFIG_SPI_FLASH_W25QXXDV_MAX_DATA_LEN doesn't work in proj.conf
* #8322 LwM2M: Occasional registration updates fail with 4.4 error
* #8313 Enable hardware stack checking for ARC em_starterkit_em7d (Secure mode)
* #8311 tests/benchmarks/sys_kernel fails on frdm_k64f, sam_e70
* #8309 lpcxpresso54114_m4: when i configed system clock from 48M to 96M the target can't work.
* #8302 Failed test: peripheral.adc.adc on quark_se
* #8300 Failed test: kernel.memory_protection.userspace.access_after_revoke (in tests/kernel/mem_protect/userspace)
* #8299 Failed test: kernel.memory_pool.mpool_alloc_free_isr (in tests/kernel/mem_pool/mem_pool_api)
* #8298 Failed test: kernel.alert.isr_alert_consumed (in tests/kernel/alert/) on quark_se_c1000_ss
* #8293 ARM: MPU faults should indicate faulting memory address
* #8292 Rework ARC exception stack
* #8287 LwM2M: Cancelling an observation doesn't work
* #8286 LwM2M: Observe of not allowed value still creates observer
* #8284 Documentation build on Windows
* #8283 Failed test: kernel.mailbox.msg_receiver_unlimited (tests/kernel/mbox/mbox_usage/) on ESP32
* #8262 [Bluetooth] MPU FAULT on sdu_recv
* #8255 [RFC] Add support for system suspend/resume handling from kernel
* #8252 GPIO interrupt only called once on nRF52832
* #8240 ESP32: update to recent ESP-IDF
* #8235 nxp_lpc54102: how to add lpc54102 support?
* #8231 GATT Macro Confusion
* #8226 drivers: can: stm32_can: various issues
* #8225 Error mbedtls_pk_verify MBEDTLS_ERR_RSA_VERIFY_FAILED
* #8215 Update watchdog driver sample to new API
* #8210 Always rebuilding even though there are no changes.
* #8206 Stray files in libapp.a
* #8203 Implement system calls for the new socket APIs
* #8199 Tests: Crypto: rand32 faults on nrf51_pca10028 and nrf52_pca10040
* #8188 net: TCP: FIN packets aren't queued for retransmission, loss leads to TCP timeout on peer's side
* #8183 zsock_getaddrinfo() is not reentrant
* #8173 Driver tests failing with an assertion on frdm_k64f
* #8138 Unsatisfactory kernel benchmark results on SAM E-70 Xplained
* #8128 scheduler: threads using k_sleep can be _swap()'d back too early
* #8125 About BMI160 reading issue.
* #8090 tests/sched/schedule_api fails to build on EMSK7d
* #8041 arm: NXP MPU does not report faulting address for Stacking Errors
* #8039 tests/shell failing on Arduino 101 / Quark SE arc
* #8026 Verify TLS server side operation
* #8019 ARP: should drop any packet pended when timeout
* #8013 Open-AMP：power on can not communicate
* #7999 HCI UART with Linux host cannot connect to nrf52 6lowpan peripheral
* #7978 SSE and SSE_FP_MATH are set on frdm_k64f, which doesn't have it, triggering Kconfig warnings
* #7977 ARC_INIT is set on boards that don't have it, triggering Kconfig warnings
* #7966 Move k_thread_foreach() tests to tests/kernel/threads
* #7924 mcu_mgmt: Memory corruption (cborattr suspected) - test case with smp_svr
* #7906 tests/benchmarks/sys_kernel fails on Arduino Due
* #7884 tests/power/power_states never completes on Arduino 101's arc core
* #7882 tests/dfu/mcuboot.test_bank_erase fails on nrf52840_pca10056
* #7869 Improve Zero Latency IRQ on ARM
* #7848 CONFIG_BMM150_SET_ATTR not defined (and now removed), giving dead code
* #7800 ext/lib/mgmt/mcumgr/cmd/log_mgmt/Kconfig references MDLOG, but MDLOG doesn't exist
* #7758 sanitycheck error with --coverage
* #7705 nxp_kinetis/k6x boot MPU regions are configured incorrectly
* #7703 NUM_KERNEL_OBJECT_FILES is too small
* #7685 API for 802.1Qav parameters configuration
* #7678 Unstable ping RTT with ethernet ipv4 networking
* #7658 [RFC] net: Split off net_app_settings lib to a separate directory under subsys/net/lib/
* #7596 API to communicate list of MAC addresses to the Ethernet controller
* #7595 Promiscuous mode and receiving all packets at applications level
* #7571 IP stack can't recover from a packet overload
* #7570 usb: update bcdUSB to 2.00
* #7553 DHCP client does not notice missing link
* #7509 [Coverity CID :185398] Memory - corruptions in /samples/net/mbedtls_sslclient/src/mini_client.c
* #7502 samples/mbedtls_sslclient: Discards TLS records, handshake does not work
* #7473 Bluetooth: Support for multiple local identity addresses
* #7423 samples: net: echo_client: sample runs failed with prj_qemu_x86_tls.conf configuration file
* #7384 ARM MPU region configuration possibly out of bounds
* #7372 Create socket options for certificates and ciphers
* #7371 Move TLS connection data out from net_context
* #7370 Add Kconfig options to handle certificates and ciphers.
* #7367 Doxygen warnings about device.h macros
* #7314 Generate SPDX TagValue document as part of 1.13 release
* #7310 Provide signed Zephyr releases
* #7243 BLE DTM ll_test does not set correct TXPower
* #7230 The guidelines for whether something should be in DTS or Kconfig are too vague
* #7173 Difference between the ZEPHYR_BASE and PROJECT_SOURCE_DIR CMake variables is unclear
* #7145 Configuration file for Cross Toolchain on macOS
* #7112 ARMv8-M: API for checking permissions using ARMv8-M TT intrinsics
* #7106 tests: obj_tracing: Test fails on ESP32, semaphore count is more than what is created in the application
* #7042 Ethernet network management interface additions for MAC filtering
* #6982 STM32F746G DISCOVERY board support
* #6981 STM32F7 series MCUs support
* #6866 build: requirements: No module named yaml and elftools
* #6846 need console subsystem abstraction for console syscalls
* #6785 Fail to compile when OT l2 debug is enabled.
* #6778 Push latest docs down into a ""latest"" folder
* #6775 Simplify left nav index on technical docs
* #6749 kconfig: The error message is misleading when values are out-of-range
* #6730 ARMv8-M: internal low-level (TrustZone) API & implementation for configuring IRQ target
* #6727 k_mem_pool crash with larger values of n_max
* #6681 [Coverity CID: 183051] Error handling issues in /tests/benchmarks/app_kernel/src/memmap_b.c
* #6678 [Coverity CID: 183054] Memory - corruptions in /tests/lib/c_lib/src/main.c
* #6676 [Coverity CID: 183056] Memory - corruptions in /tests/kernel/common/src/atomic.c
* #6673 [Coverity CID: 183059] Memory - corruptions in /samples/net/mbedtls_dtlsclient/src/dtls_client.c
* #6593 Allow configuring the USB serial number string in runtime
* #6533 1.12 Release Checklist
* #6522 Should have a ""dumb"" O(N) scheduler
* #6514 samples/drivers/i2c_fujitsu_fram: Data comparison on data written and data read fails randomly
* #6399 How to using the PPI chanels from 20-31 in Nrf5 chip?
* #6373 ARMv8-M: Implement stack limit checking for Secure/Non-secure stack pointers
* #6188 doc: Merge non-apache contributing into CONTRIBUTING
* #6132 [RFC] Restructuring and cleanup of mbedTLS configurations
* #5980 NRF5 I2C standard speed 250kHz
* #5939 NRF5 I2C (TWI) driver
* #5900 net: Prototype a TLS convenience API based on sockets
* #5896 Accidentally using MSYS's python from native windows leads to obscure error messages
* #5833 Script to import mcux sdk
* #5733 single threaded applications fail when asserts are enabled
* #5732 sanitycheck fails with gcc 7 as the host compiler
* #5725 Ninja: Running sanitycheck has byproducts outside of sanity-out
* #5723 cmake: Accept CONFIG_XX overrides from command line
* #5524 reorg documentation structure on website (docs.zephyrproject.org)
* #5445 Shadowed declarations in bluetooth stack
* #5371 [Coverity CID: 180698] Null pointer dereferences in /tests/bluetooth/tester/src/gatt.c
* #5366 Document zephyr-app-commands usage
* #5357 CII Badge: Generate list of externally maintained dependencies
* #5153 [RFC] Discussion of ""cmake"" vs ""make"" variables, aka ""build environment"" vs ""work environment"" setup
* #5132 Soft real-time ""tasklets"" in kernel
* #4963 Convert NIOS2 boards to device tree
* #4957 Add build targets for each explicit debug/flash option
* #4883 Should command line examples be ""cut and paste"" ready?
* #4829 device tree: gpio
* #4767 USB: assign endpoints at runtime
* #4762 [nrf][power][Sample] nrf52 exits from Low Power Mode immedately
* #4590 [CID: 178238] Parse warnings in samples/mpu/mem_domain_apis_test/src/main.c
* #4283 kconfig warning are being ignored by sanitycheck
* #4060 net: NET_CONTEXT_SYNC_RECV relevant
* #4047 [nrf] nrf GPIO does not have sense configuration value
* #4018  zephyr.git/tests/net/mld/testcase.yaml#test  :evalution failed
* #3995 net tcp retry triggers assert in kernel/sem.c:145
* #3993 Enabling  Low Power Mode on nordic based platforms(nrf52/51)
* #3980 Remove adc_enable/adc_disable functions
* #3947 multiple build failures with XCC toolchain
* #3935 Bluetooth sample setup docs mentions unknown ""btproxy"" tool
* #3903 Static code scan (coverity) issues seen
* #3845 Enable Sphinx option doc_role='any' for improved reference linking
* #3826 RISCV32 {__irq_wrapper} exception handling error under compressed instruction mode?
* #3770 mbedtls build error when CONFIG_DEBUG=y
* #3754 Support static BT MAC address
* #3666 schedule_api test uses zassert without cleaning up properly
* #3631 program text should be in its own memory region
* #3602 power_mgr and power_states: need build option to keep the app exiting in ""active"" state
* #3583 NUCLEO-L073RZ/NUCLEO-L053R8 Dev Board Support
* #3458 Port Zephyr to Silabs EFM32ZG-STK3200
* #3395 Provide a sample app that demonstrates VLANs
* #3394 Support basic VLAN tags
* #3393 VLAN: Expose through virtual network interfaces
* #3377 Missing le_param_updated callback when conn param update request fails
* #3363 Missing board documentation for nios2/qemu_nois2
* #3354 Missing board documentation for x86/se_c1000_devboard
* #3263 improve Galileo flashing process
* #3233 LLDP Transmitting Agent
* #3222 No negative response if remote enabled encryption too soon
* #3221 re-pairing with no-bond legacy pairing results in using all zeros LTK
* #3187 frdm_k64f: Ethernet networking starts to respond ~10s after boot
* #3173 k_cpu_atomic_idle failed @ARM
* #3150 Si1153 Ambient Light Sensor, Proximity, and Gesture detector support
* #3149 Add support for ADXRS290
* #3073 Add Atmel SAM family DAC (DACC) driver
* #3071 Add Atmel SAM family Timer Counter (TC) driver
* #3067 Support Precision Time Protocol (PTP)
* #3056 arch-specific inline functions cannot manipulate _kernel
* #3025 Implement _tsc_read equivalent for NiosII
* #3024 Implement _tsc_read equivalent for ARM
* #3007 Provide board documentation for all boards
* #2991 Enable NXP Cortex-M SoCs with MCUXpresso SDK
* #2975 add arc nSIM simulator build target
* #2972 extend sanitycheck to support ARC simulator
* #2956 I2C Slave Driver
* #2954 nRF5x interrupt-driven TX UART driver
* #2952 ADC: ADC fails to work when fetch multiple sequence entries
* #2934 Ecosystem and Tool Support
* #2879 ARC: Interrupt latency too large
* #2645 create DRAM_BASE_ADDRESS and SIZE config parameters
* #2623 nRF52 UART behaviour sensitive to timing of baud rate initialization.
* #2568 Have the kernel give the leftover memory to the IP stack
* #2422 O(1) pend queue support
* #2353 nRF5x: Refactor gpio_nrf5.c to use the MDK headers
* #1678 support edge/pulse interrupts on ARC
* #1662 Problem sourcing the project environment file from zsh
* #1600 Could you give me BTP upper tester demo which can work on PC
* #1464 SYS_CLOCK_HW_CYCLES_PER_SEC is missing a default value",59771425
1530,False,True,2018-09-07T03:33:33Z,2018-09-07T03:36:16Z,"```
Adithya Baglody (2):
      tests: benchmarks: timing_info: Fixed userspace benchmarks for nrf52
      subsys: random: xoroshiro128: Use entropy get isr during init

Alexander Polleti (2):
      net: fix return type of net_addr_type2str
      c++: fix comparison between signed and unsigned types

Anas Nashif (11):
      tests: preempt: increase stack size for test
      tests: rename test entry functions
      xtensa: removed obsolete headers
      boards: arduino_101: remove mention of boot stub
      tracing: remove stray event_logger code
      doc: esp32: update flashing instructions
      Revert ""kernel: Disable tick handling when !MULTITHREADING""
      Revert ""kernel: Enable interrupts for MULTITHREADING=n on supported arch's""
      release: wrap lines in release notes
      doc: update release notes
      release: bump to 1.13.0-rc3

Andy Ross (1):
      tests: Add kernel/sched/deadline test for EDF validation

Carles Cufi (2):
      Bluetooth: mesh: Fix missing semicolon
      doc: Add Bluetooth release notes for 1.13

Daniel Leung (7):
      drivers: grove/temperature: ADC resolution to be 12-bit
      drivers: grove/light: change ADC resolution to 12-bit
      adc: add native driver for Quark D2000
      adc: remove adc_qmsi driver
      tests/drivers: adc: add config for Quark D2000
      Revert ""boards: quark_d2000_crb: Remove adc support""
      samples: grove: re-add Quark D2000 to sample.yaml

David B. Kinder (5):
      doc: fix reference to props file
      doc: fix reference to log.h
      doc: give nicer error if env not set up
      doc: fix 404 error page message
      doc: add doc changes to 1.13 release notes

Flavio Ceolin (5):
      misc: mempool: Fix bit mask value
      crypto: tests: Change crypto tests to use Kconfig defined header
      tests: crypto: mbedtls: Fix mbedTLS self test usage
      ext: lib: crypto: Update mbedTLS to 2.12.0
      samples: drivers: crypto: Fix minimum values for mbedTLS
Frank Li (1):
      drivers: eth: enc28j60: Fix read error when ERDPT < ERXRDPT

Henrik Brix Andersen (1):
      doc: settings: fix inline sample code

Ioannis Glaropoulos (1):
      doc: fix minor typo in clock.rst

Ismael Fillonneau (1):
      doc: kernel: usermode: fix macro name

Istvan Bisz (1):
      scripts: dts: extract: clock.py fix node alias name

Johan Hedberg (1):
      Bluetooth: Mesh: Fix checking for subnet when recovering App Key

Jukka Rissanen (1):
      net: gptp: Set stack size correctly for handler thread

Justin Watson (1):
      adc: sam: Fixed adc_api test for the SAM E70.

Kumar Gala (1):
      scripts: dts: extract: Fix handling of irq prop being a list of lists

Marti Bolivar (1):
      boards: fix up reel_board Kconfig warnings

Maureen Helm (2):
      doc: release notes: Add arm arch and boards for 1.13
      doc: release notes: Fill in driver section for 1.13

Paul Sokolovsky (3):
      doc: relnotes-1.13: Condense/cleanup networking section
      CODEOWNERS: Add @pfalcon for drivers/ethernet/
      net: net_addr_ntop: Clarify docstring

Piotr Mienkowski (1):
      board: efr32_slwstk6061a: add support for flashing via OpenOCD

Praful Swarnakar (1):
      lib: cmsis_rtos_v1: Minor refactor of CMSIS implemetation

Ravi kumar Veeramally (3):
      samples: net: Fix out-of-bound access
      net: ipv6: Initialize memory
      samples: net: coap: Remove apps using raw mbedtls APIs

Sathish Kuttan (1):
      arch: xtensa: remove extra #endif

Sebastian Bøe (1):
      cmake: Don't use the environment variable CFLAGS

Ulf Magnusson (2):
      scripts: kconfig: Use unique_{defined_syms,choices} and clean up a bit
      scripts: kconfig: Put a blank line before warnings and errors

Vinayak Kariappa Chettimada (3):
      kernel: Improve precision of ticks and ms conversions
      drivers: entropy: nrf5: Fix ENTROPY_BUSYWAIT from hanging
      usb: device: nrf5: Fix HF clock enable check

```",59771425
1531,False,True,2018-08-30T20:15:57Z,2018-08-30T20:21:39Z,"```
Adithya Baglody (3):
      tests: kernel: sched: schedule_api: Increase stack size.
      Revert ""sam_e70: enable instruction and data caches on sam_e70""
      tests: benchmarks: sys_kernel: Enable benchmark for slower SoCs

Ajay Kishore (1):
      tests: kernel: init: Fix integer overflow issue

Anas Nashif (10):
      qemu: support alternate path of qemu binaries
      sam_e70: enable instruction and data caches on sam_e70
      Revert ""sched: Properly account for timeslicing in tickless mode""
      tests: thread_api: increase stack for test
      nrf52_pca10040: get the erase block size from dts
      doc: DRAFT start for 1.13 release notes
      sanitycheck: capture delayed faults
      sanitycheck: do not abort logging on faults
      tests: syscalls: ignore faults, they are intentional
      release: Zephyr 1.13rc2

Andrzej Głąbek (6):
      dts: nrf: Add ADC nodes and bindings for nRF SoCs
      boards: nrf: Enable ADC nodes in DTS for nRF boards
      drivers: adc: Introduce reworked API
      drivers: adc: Add shims for nrfx ADC and SAADC drivers
      tests: adc_api: Add configurations for nRF5 boards
      drivers: adc: Select HAS_DTS_ADC for all ADC drivers

Andy Ross (9):
      mempool: Fix bit pointer state for N_MAX > 31
      kernel: Remove unused variable
      kernel: Fix double-list-removal corruption case in timeout handling
      sched: Properly account for timeslicing in tickless mode
      kernel: Enable interrupts for MULTITHREADING=n on supported arch's
      sched: Properly account for timeslicing in tickless mode
      tests/kernel/threads/no-multithreading: Disable USERSPACE
      kernel: Final spin in !MULTITHREADING should be locked
      kernel: Disable tick handling when !MULTITHREADING

Aurelien Jarno (5):
      subsys: fs/nvs: fix writes when write_block_size != 1
      arch: arm: stm32: enable instruction and data caches on STM32F7
      dts: stm32l4: add flash erase block size entry
      boards: nucleo_l432kc: add a storage flash partition
      boards: nucleo_l432kc: mark nvs sample as supported

Bobby Noelte (1):
      dts: bindings: scan application dir for bindings

Daniel Leung (3):
      kernel: pipes: fix k_pipe_block_put() when not enough space
      tests/kernel: pipes: add tests for smaller pipe buffers
      doc: add ability to generate PDF

David B. Kinder (3):
      doc: fix misspellings in API documentation
      doc: fix kconfig misspellings
      doc: fix misspellings in reST files

Diego Sueiro (1):
      gpio: Use GPIO_FLAGS instead of GPIO_INT_CONF

Erwan Gouriou (2):
      dts/st: fix stm32l4 gpioh gpioi node addresses
      sensors: introduce kconfig named choices

Flavio Ceolin (1):
      subsys: logging: Fix possible out-of-bounds read

Gil Pitney (1):
      samples: net: sockets: echo-client: fix sock fd test, allow zero.

Henrik Brix Andersen (3):
      boards: nrf52_adafruit_feather: Add pyOCD configuration
      boards: nrf52840_pca10059: Add pyOCD configuration
      boards: nrf52840_pca10059: Fix pyOCD configuration

Johan Hedberg (1):
      Bluetooth: Fix using correct IRK when generating RPA

Jukka Rissanen (8):
      net: udp: Check return value when appending UDP data
      net: tcp: Handle out-of-buf properly when preparing segment
      tests: net: Run networking tests only for selected platforms
      tests: net: websocket: Fix crash when tearing down tests
      net: app: Notify peers properly when DTLS connection is closed
      net: dhcpv4: Do not debug print IP address using NULL pointer
      samples: net: mbedtls: Remove apps using raw mbedtls APIs
      doc: Add networking information to 1.13 release note

Justin Watson (1):
      sam: adc: Updated SAM ADC driver.

Jørgen Kvalvaag (1):
      tests: net: mqtt: Fix rc check in mqtt_publisher test

Kiril Zyapkov (1):
      arch: arm: stm32l4: add missing I2C_3 to dts.fixup

Luiz Augusto von Dentz (1):
      Bluetooth: IPSP: Fix pointing to invalid file

Maureen Helm (9):
      samples: nvs: Allow mpu flash write
      samples: nvs: Use depends_on to select platforms
      samples: nvs: Use flash erase block size from dts
      samples: mpu_stack_guard_test: Fix yaml regexes
      samples: mpu_stack_guard_test: Update console output in README
      adc: Convert mcux adc16 driver to the new adc api
      tests: adc_api: Add support for kinetis boards
      tests: gen_isr_table: Add barriers after triggering the irq
      boards: Remove CONFIG_OSC_EXTERNAL defconfigs from non-kinetis boards

Michael Scott (25):
      drivers: gpio: sx1509b: Kconfig options depend on GPIO_SX1509B
      net: lwm2m: correct Copyright to Foundries.io
      net: lwm2m: check for read permission on observe
      net: lwm2m: fix typo in observe error message
      net: lwm2m: return observe errors immediately
      net: lwm2m: simplify MATCH_ logic in do_read_op()
      net: lwm2m: fix logic for lwm2m_next_engine_obj_inst()
      net: lwm2m: fix reading multiple objects that don't start at 0
      net: lwm2m: allow formatters to perform processing prior to read_op
      net: lwm2m: plain-text: process only reads for a specific resource
      net: lwm2m: introduce output context user_data
      net: lwm2m: json formatter use private data
      net: lwm2m: tlv formatter use private data
      net: lwm2m: remove unused members from lwm2m_output_context
      net: lwm2m: optimize variable order in lwm2m_perform_read_op()
      net: lwm2m: correct placement of put_begin/put_end in READ op
      net: lwm2m: fix JSON format for multi-instance reads
      net: lwm2m: optimize lwm2m_perform_read_op()
      net: lwm2m: introduce put_begin/end for object instance and resources
      net: lwm2m: store a backup of the entire path in perform_read_op
      net: lwm2m: implement begin/end processing for obj inst and resources
      net: lwm2m: refactor put_begin_ri/put_end_ri into generic functions
      net: lwm2m: TLV: mark object instance boundry when needed
      net: lwm2m: in oma_tlv_put don't re-add value when insert is true
      net: lwm2m: fix formatter reader/writer initialization syntax

Niranjhana N (5):
      tests: power: exclude arduino_101
      tests: cmsis_rtos_v1: add semaphore negative tests
      lib: cmsis_rtos_v1: replace an else case
      tests: cmsis_rtos_v1: add and enhance msgq tests
      lib: cmsis_rtos_v1: remove unhit return case

Olivier Martin (1):
      subsys: bluetooth: host: Ensure PDUs are not allocated in ISR

Paul Sokolovsky (9):
      net: pkt: Cleanup validation of min fragment size based on max headers
      net: context: Move/rename net_context_set_appdata_values() to net_pkt.c
      net: sockets: close: Call net_context_accept only for listening socket
      net: tcp: Properly queue FIN packets for retransmission
      net: tcp: Remove NET_TCP_FINAL_* flags
      net: tcp: Add comment of func prototype for NET_CONN_CB macro usages
      kernel: k_poll: Introduce separate status for cancelled events
      tests: k_poll: Add testcase to poll fifo which gets k_fifo_cancel_wait
      net: sockets: poll: Handle EINTR return from k_poll

Pawel Dunaj (1):
      drivers: gpio: Fix two bugs in nrfx gpio

Praful Swarnakar (2):
      tests: cmsis_rtos_v1: Add more test scenarios in mutex
      tests: crypto: sha256: Add the missing test case for execution

Punit Vara (12):
      drivers: Use Designware driver for sensor subsystem
      dts: arc: Use dts tree for designware driver
      boards: quark_se_c1000_ss_devboard: Enable ADC node
      drivers: adc: Update new ADC APIs
      drivers: Kconfig.dw: Remove unnecessary Kconfig
      drivers: grove: Modify light sensor
      drivers: grove: Update temperature driver
      tests: adc_api: Add ARC related parameters for ADC
      samples: grove_light: Provide device name from Kconfig
      samples: grove_temperature: Use device name from Kconfig
      boards: quark_d2000_crb: Remove adc support
      tests: adc_api: Remove sample width test scenario

Radoslaw Koppel (1):
      samples: bluetooth: peripheral_hids: Add settings module

Rajavardhan Gundi (2):
      lib/cmsis_rtos_v1: Remove redundant stack size check
      lib/posix: Use static allocation for posix_thread objects

Ramakrishna Pallala (1):
      boards: nios2: qemu_nios2: Add board documentation

Ruslan Mstoi (1):
      net: ipv6: Drop packet with multiple HBHO

Savinay Dharmappa (2):
      subsys: usb: class: hid: Add OUT interrupt endpoint
      boards: x86: arduino_101: set DISK_FLASH_MAX_RW_SIZE to 256

Sebastian Bøe (1):
      syscalls: Correct the type of _k_syscall_table

Spoorthi K (3):
      tests: benchmark: Check for return values
      lib/cmsis_rtos_v1: Check if osKernelStart() is called from ISR
      tests: cmsis_rtos_v1: Wait for longer duration in k_busy_wait

Stanislav Poboril (1):
      doc: fix wrong board name in NXP LPCXpresso54114 doc

Subramanian Meenakshi Sundaram (1):
      subsys: logging: Fix possible null dereference

Ulf Magnusson (3):
      Kconfiglib: Make header symbol order match .config files again
      Kconfig: Show include paths in menuconfig and documentation
      menuconfig: Fix a case of visible symbols not being shown

Vinayak Kariappa Chettimada (5):
      Bluetooth: controller: Fix assert on different transaction collision
      Bluetooth: Add HCI Error Code definitions required by LE controller
      Bluetooth: controller: Use HCI Error Code definitions
      Bluetooth: Kconfig the Auto PHY Update Procedure initiation
      Bluetooth: controller: Fix compile error when PHY update disabled

Wayne Ren (2):
      boards: cleanup and update the default config of arc boards
      tests: a fix for ARC and MPU VER 3

Yannis Damigos (4):
      drivers: i2c_ll_stm32_v1: Generate STOP condition if NACK
      drivers: i2c_ll_stm32_v1: Handle NACK during address tranmsission
      arch: st_stm32: Remove I2C and SPI instances from common defconfig
      arch: stm32l4: Enable gpio interrupts correctly

Yasushi SHOJI (1):
      doc: enhance multi-level interrupts diagram


```",59771425
1532,False,True,2018-08-22T21:41:07Z,2018-08-22T21:46:03Z,"```
Adithya Baglody (15):
      benchmarks: app_kernel: Fixed coverity issue.
      syscalls: Scan multiple folders to build complete syscall list
      userspace: app_shared_mem: Fixed incorrect implementation.
      scripts: gen_app_smem.py: Removing a needless file.
      tests: kernel: fp_sharing: Added support for Cortex-M7
      benchmarks: timing_info: Add hooks in the kernel for userspace.
      tests: benchmarks: timing_info: Add userspace related KPIs.
      arch: arc: Added benchmark related hooks.
      tests: benchmarks: timing_info: Enable benchmarks for ARC.
      tests: include: Add implementation of timestamp_serialize()
      tests: benchmarks: timing_info: Discard selected measurements.
      tests: benchmarks: timing_info: Enable benchmarks for xtensa.
      tests: benchmarks: timing_info: Enable benchmarks for nios2.
      tests: benchmarks: timing_info: Enable benchmarks for riscv32.
      tests: benchmarks: timing_info: Cleanup testcase.yaml

Ajay Kishore (12):
      tests: kernel: Add description for test case
      tests: kernel: document gen_isr_table tests for RTM
      tests: kernel: Add test to validate k_stack_alloc_init, k_stack_cleanup
      tests: msgq: Enhance tests to improve code coverage
      tests: sched: Enhance tests to improve code coverage
      tests: msgq: Add description and RTM links
      tests: lifo: Add description and RTM links
      tests: static_idt: Add description and RTM links
      tests: FIFO: Add description and RTM links
      tests: fatal: Add description and RTM links
      tests: cmsis_rtos_v1: add negative tests for timer api
      tests: mempool: Enhance tests to improve code coverage

Alberto Escolar Piedras (55):
      native_posix: irq_offload to use a sw interrupt
      native_posix & kernel: Remove legacy preemption checking
      tests/kernel/sched/preempt: enable test for native_posix
      native: Add command line options to control real timeness
      native tests: fix kernel sched preempt for arch posix
      native: Fix entropy generator kconfig warning
      native: Fix host BT driver kconfig warning
      drivers: timer: nRFx: Use nrf_rtc hal for registers w sideeffects
      drivers: clock_control: Use nrf_clock HAL for registers w sideeffects
      drivers: entropy: nrf5: Use nrf_rng hal for registers w sideeffects
      Bluetooth: controller: Use nRFx functions for RTC reg with sideeffects
      Bluetooth: controller: Use nRFx functions for ECB reg with sideeffect
      Bluetooth: controller: Use SOC series macro instead of board macro
      Bluetooth: controller: Use SOC series macro instead of the board macro
      Bluetooth: controller: Use nRFx functions for RTC reg w sideeffects
      Bluetooth: controller: Use nRFx functions for CCM reg w sideeffects
      Bluetooth: controller: Use nRFx functions for TIMER reg w sideeffects
      Bluetooth: controller: Use nRFx functions for PPI reg with sideef
      drivers: entropy: native: implement standard ISR-specific call
      native_posix: Let users use math functions
      drivers: entropy: nrf5: Use nrf_rng hal for registers w sideeffects
      tests: sprintf: suppress Wformat-truncation warning
      native: Do not ignore format-truncation warnings
      CODEOWNERS: fix due to username change
      sanitycheck: control coverage from command line
      CI: explicitly enable compiling w coverage in sanitycheck
      native_posix: Do not select COVERAGE by default
      doc: native_posix: Add paragraph about ASan
      cmake: Allow C standard version to be overriden
      native_posix: override C standard version to 2011
      sanitycheck: Do not calculate size for native builds
      native: Add NATIVE_EXIT_TASK hooks
      tests: Add test for NATIVE_EXIT_TASK
      native_posix: Be more precise with stop-at
      native_posix: command line parsing fix
      native_posix: Add realtime control and real time clok model
      test: Add test for native_posix RTC and real time control
      native: Generalize native tasks
      native: Allow cmd line options to be registered dynamically
      native_posix: Refactor cmd line options
      drivers: console: Kconfig: Improve native descriptions
      codeowners: Assign tests/boards/native_posix to aescolar
      native_posix: minor doc fixes
      posix arch: Add missing header
      shell: Add missing header
      Bluetooth: Userchan: Add missing headers
      native_posix: Add missing headers and function prototypes
      arch posix: Allow including XOPEN extensions
      net: eth: native_posix: Add missing headers
      tests: native_tasks: Add missing header
      posix arch: Do not disable warnings
      Bluetooth: controller: HAL: Separate simulated SOC in own header
      Bluetooth: controller: remove unnecessary guards in hal headers
      native_posix: argparsing: Fix possible segfault
      native_posix: Minor fix in message printed on kill

Alex Tereschenko (2):
      dt: nrf52840: remove 0x from USBD address
      cmake: replace PROJECT_SOURCE_DIR with ZEPHYR_BASE

Alexander Wachter (3):
      drivers: can: Prepare STM32 driver for other series than STM32F0
      can: Add can support for STM32L432
      drivers: can: Fix Issue #8226

Alexei Colin (1):
      doc: getting started: add Arch Linux package

Anas Nashif (68):
      boards: lpcxpresso54114_m0: do not set as default
      tests: posix: fix meta-data and rename test file
      samples: can: move CAN sample under drivers
      samples: remove sample.tc
      samples: cleanup sample test naming
      samples: move grove samples to sensors and display
      tests: disable preempt testcase for native_posix
      ci: user latest docker file
      sanitycheck: whitelist logging sections
      clang/llvm: add initial configuration file for clang
      clang: fix for x86 iamcu
      net: fix header guard
      tests: fix struct initialization
      usb: mark unused arguments correctly
      kernel/drivers: fix compile warnings
      ci: remove tests and samples from coverage reports
      mailmap: add entry for ruuddw
      ci: use latest docker image v0.4-rc7
      toolchains: add xtools support for ARC
      toolchain: iamcu support with xtools toolchain
      toolchains: fix multilib libc linking with xtools
      boards: more boards with xtools support
      toolchain: require Zephyr SDK 0.9.3
      xtools: set toolchain vendor to zephyr
      samples: exclude socket samples on esp32
      esp32: include register headers in soc.h
      coverage: exclude k_call_stacks_analyze from coverage
      tests: nffs: fixed types
      drivers: qmsi: Fix types and u32_t/uint32_t conflicts
      samples: fix u32_t type usage
      tests: fix u32_t type usage
      Bluetooth: shell: fix type usage
      sanitycheck: refactor add_goal
      sanitycheck: do not redefine handler_log
      nsim: add run target
      sanitycheck: merge native and unit handlers
      sanitycheck: add nsim as simulation type
      boards: nsim_sem: fix identifier
      boards: nsim_em: mark as simulation platform
      sanitycheck: support additional handlers
      sanitycheck: do not run if we do not have nsimdrv
      sanitycheck: set state correctly in case of a crash
      Revert ""sanitycheck: set state correctly in case of a crash""
      sanitycheck: allow blacklisting boards
      mimxrt1050_evk: disable sanitycheck on this board [REVERT ME]
      ci: handle documentation errors in ci
      logging: use BUILD_ASSERT_MSG instead of _Static_assert
      samples: ipm: improve sample metadata
      tests: CONFIG_ARC_INIT is n by default
      kconfig: remove whitelisting for ARC_INIT
      arch: x86: set output format/arch per arch
      samples: led_lp5562: cmake_minimum_required added
      tests: update test identifier
      samples: hello_world: remove single thread variant
      tests: remove subsys from test identifier
      sanitycheck: exit on exceptions
      ci: Handle errors and exit on them
      tests: disable HDC1008 from build tests
      tests: fp_sharing: use filter
      tracing: support generic tracing hooks
      tests: qmsi: remove soc watch sample
      samples: remove kernel_event_logger sample
      samples: debug: remove sysview sample
      kernel: event_logger: remove kernel_event_logger
      systemview: add support natively using tracing hooks
      tests: build philosophers sample with systemview
      doc: add tracing section
      release:  bump version to 1.13-rc1

Andrei Emeltchenko (29):
      usb: tests: Add missing sections to sanitycheck
      usb: Allow to enable stack on native_posix arch
      usb: webusb: Correct total length
      usb: bos: Add linker sections for USB BOS descriptor
      usb: trivial: Remove unneeded braces
      usb: bos: Add USB BOS descriptors API
      usb: tests: Add usb_bos_desc to sanitycheck table
      usb: bos: unit: Add unit test for BOS testing
      usb: webusb: Refactor WebUSB using BOS API
      usb: webusb: Strip CDC ACM function from the code
      usb: tests: Fix BOS test related to linker order
      usb: netusb: Add ethernet_init()
      usb: webusb: Use struct string_desc instead of char array
      usb: Correct include path
      usb: Cleanup code style for usb_device
      usb: osdesc: Add MS OS Descriptors version 1 support
      usb: rndis: Add MS OS v1 descriptors to RNDIS
      usb: rndis: Set subCompatibleID parameter for exact MS driver
      usb: tests: Add unit tests for MS OS Descriptors testing
      usb: tests: Add testing os_desc feature
      usb: composite: Add handling osdesc feature
      usb: rndis: Use RFC 7042 Doc value for Host MAC
      usb: device: Refactor vendor_handler
      usb: osdesc: Use definition for string descriptor index
      samples: webusb: Reformat README txt to rst
      samples: webusb: Change webusb app repository name
      samples: wpanusb: Remove old dead code
      board: quark_se_c1000: Add default setting for cc2520 radio
      usb_dc_stm32: Fix FS mode

Andrew Boie (29):
      tests: sprintf: remove kconfig options
      sanitycheck: fix spammy build output
      arch: arm: clean up MPU code for ARM and NXP
      net: getaddrinfo: ai_state no longer global
      net: getaddrinfo: use memory allocation for res
      arm: arch.h: move extern ""C"" after includes
      arc: arch.h: move extern ""C"" after includes
      syscalls: pull in arch/cpu.h
      kernel: fix errno access for user mode
      arc: fix update of ERET on exc return
      libc: minimal: add malloc functions
      net: relax net_ip.h check
      userspace: adjust syscall generation scripts
      libc: minimal: add console system calls
      lib: newlib: add read/write syscalls
      arm: fix assembler offset errors on Cortex-M0
      gen_syscalls.py: do not output data to stdout
      arch: introduce exc_handle.h
      kernel: add z_arch_user_string_nlen prototype
      x86: add z_arch_user_string_nlen
      arm: add z_arch_user_string_nlen
      arc: add z_arch_user_string_nlen
      userspace: add functions for copying to/from user
      userspace: add syscalls test case
      libc: minimal: fix calloc()
      userspace: add _k_object_recycle()
      userspace: add net_context as a kernel object
      net: introduce system calls for zsock socket APIs
      i2s: expose i2s APIs to user mode

Andrzej Głąbek (11):
      ext: hal: nordic: Update nrfx to version 1.1.0
      arch: arm: nrf: Use SystemInit() from MDK in SoC initialization
      ext: nordic: Correct CMakeLists.txt
      drivers: pwm: nrf: Add nrfx_pwm.c to the build when PWM_NRFX is enabled
      ext: nordic: Fix PWM related nrfx_config entries for nRF52840
      drivers: serial: Add power management to nRF UART driver
      drivers: spi: nrfx: Use HAS_HW_NRF_* in driver options dependencies
      drivers: spi: nrfx: Remove ""optional"" from driver type choices
      drivers: i2c: nrfx: Use HAS_HW_NRF_* in driver options dependencies
      drivers: watchdog: nrfx: Remove false dependency on CLOCK_CONTROL_NRF5
      drivers: nrfx: Allow simultaneous use of SPI_0 and I2C_0 on nRF52810

Andrzej Puzdrowski (1):
      samples: subsys: mgmt: mcumgr: smp_svr: documentation update

Andy Ross (9):
      kernel/queue: Fix spurious NULL exit condition when using timeouts
      kernel/poll: Remove POLLING thread state bit
      arch/arm: Fix locking in __pendsv
      kernel: Restore CONFIG_MULTITHREADING=n behavior
      tests/kernel: Add a test for CONFIG_MULTITHREADING=n
      kernel/Kconfig: Reorgnize wait_q and sched algorithm choices
      kernel: Add the old ""multi queue"" scheduler algorithm as an option
      boards/qemu_cortex_m3: Use SCHED_MULTIQ by default
      tests/sched/scheduler_api: samples/philosophers: Use SCHED_SCALABLE

Arjun Warty (2):
      frdm_k64f: dts: Addition of a Flash Partion
      Doc: installation_linux.rst: Feedback Updates

Armando Visconti (9):
      drivers: sensor: lis2dh: Fix I2C burst read/write operations
      boards: stm32: argonkey: Add support to led controller
      samples: board: 96b_argonkey: Add testing of 12 on-board leds
      drivers: pinmux: stm32f4: Added pinmux macros for I2S master
      drivers/dma: dma_stm32f4x: Fix Peripheral To Memory case
      drivers/dma: dma_stm32f4x: use dma_slot to select peripheral
      ext: stm32cube: stm32f4xx: shift I2SR field in PLLI2SCFGR register
      ext: stm32cube: stm32f7xx: shift I2SR field in PLLI2SCFGR register
      samples: board: 96b_argonkey: remove led blinking

Aurelien Jarno (19):
      subsys: usb/class/hid: make interrupt endpoint size configurable
      arch: arm: core: cortex_m: add a barrier before the dummy FP instruction
      cmake: allow multiple compiler options
      kconfig: add a compiler speed optimization
      drivers: usb_dc_stm32: change all endpoints to bidirectional
      arch: arm: stm32f7: remove core zephyr header inclusions from soc.h
      arch: arm: stm32: add basic support for STM32F723 SoC
      boards: arm: stm32: basic support for STM32F723E-DISCO board
      drivers: entropy: stm32: add support for STM32F7
      arch: arm: mpu: remove REGION_USER_RAM_ATTR macro
      arch: arm: mpu: fix outer inner WBWA non-shareable macro
      arch: arm: mpu: enable WBWA caching on RAM
      arch: arm: mpu: enable WT caching on Flash
      arch: arm: mpu: enable WBWA caching on per thread user RAM
      drivers: usb: add support for USB OTG FS on STM32F7
      boards: arm: stm32f723e_disco: enable USB FS OTG
      drivers: i2c: stm32: add support for STM32F7
      boards: arm: stm32f723e_disco: enable I2C support
      drivers: i2c: stm32: Kconfig: Remove redundant 'default n' properties

Bartosz Sokolski (2):
      dts: add parentheses around argument in macro __SIZE_K
      arch: soc: nrf52: add UART1 to dts fixup

Bobby Noelte (2):
      scripts: extract_dts_includes.py: refactor for better maintenance
      scripts: extract_dts_includes.py: fix false info message

Carles Cufi (40):
      drivers: flash: nrf: Avoid locking when not threaded
      doc: dt: Clarify the relationship between DT and Kconfig
      boards: 96_nitrogen: Specify the IC
      ext: hal: nordic: nrfx: Add nRF52810 configuration
      boards: arm: Add Nordic nRF52810 board
      tests: Fix sizing for several test for chips with 24KB of RAM
      arch: arm: nrf: Add support for the nRF52810
      boards: arm: nrf52_pca10040: Enable DC/DC by default
      boards: arm: nrf52810_pca10040: Enable DC/DC by default
      boards: arm: nrf52840_pca10056: Align DC/DC option
      cmake: util: Add process.cmake script
      cmake: util: Add fmerge.cmake script
      scripts: Print results from filter-known-issues.py
      doc: Support building with CMake
      doc: Change Makefile and doc for building docs to CMake
      doc: Remove old Makefile
      doc: Remove unused filter-doc-log.sh
      doc: known issues: Fix regexes for Windows
      cmake: Rename process.cmake to reflect contents
      scripts: filter-known-issues: Add extra newline
      doc: sphinx: Reshuffle sphinx cmd-line options
      doc: Makefil: Propagate Make options
      doc: cmake: Fix argument parsing
      doc: cmake: Use flexible variables for inclusion
      doc: Add doxygen to Chocolatey package list
      doc: cmake: Use proper dependencies
      doc: cmake: Conditionally add USES_TERMINAL to html targets
      doc: windows: Clarify Python paths
      codeowners: Assign doc CMake and scripts to me
      doc: cmake: Enable out-of-tree builds
      doc: Makefile: Switch to Ninja as a generator
      doc: Replace title with logo in front page
      doc: Add getting started to README.rst
      doc: Correct arch spellings in README.rst
      doc: Copy all doc/ contents and not just .rst files
      doc: Remove workaround file
      doc: Remove unnecessary copy statements
      build: Replace GCC ARM Embedded with GNU Arm Embedded
      doc: Make Sphinx output directory configurable
      boards: reel_board: Remove old reference to GPIO_NRF5

Christian Taedcke (7):
      ext: gecko: Add Silabs Gecko SDK for EFR32FG1P SoCs
      ext: Integrate Silabs EFR32FG1P Gecko SDK into Zephyr
      arm: exx32: Add Silabs EFR32FG1P soc files
      arm: exx32: Add additional include to efm32wg soc.h
      drivers: gpio_gecko: Adapt driver for Silabs EFR32 MCUs
      drivers: serial: Adapt gecko uart driver for Silabs EFR32
      boards: arm: Add support for Silabs EFR32 SLWSTK6061A board

Christian Tavares (1):
      lib: json: add helper macro for array of array

Christophe Priouzeau (5):
      arch: arm: stm32: correct include issue
      bt: hci driver over spi: BlueNRG-MS read until IRQ pin goes low
      drivers/clock_control: stm32: fix HCLK calculation when using MSI
      bt: hci driver over spi: Configure BlueNRG-MS in controller mode
      boards: disco_l475_iot1: update BT configuration

Daniel Egger (9):
      dts: arm: st: Correct pin assignment of node usart6@0
      drivers: eth: stm32: Added missing ethernet_init() call
      drivers: pinmux: stm32: STM32F7 added ETH support to pinmux
      dts: stm32f7-pinctrl Add definitions for F7 USART/UARTs
      sanitycheck: Recommend installing ""ply"" instead of ""python3-ply""
      drivers: pinmux: stm32: STM32F2 added ETH support to pinmux and use it
      drivers: ethernet: Kconfig: Document availability of eth_stm32_hal
      net: pkt: Added new function net_pkt_append_memset() to prefill packet
      net/dhcpv4: Use new net_pkt_append_memset() function

Daniel Leung (20):
      doc: getting_started: add instructions to build on Clear Linux
      drivers: uart_ns16550: restore config UART_NS16550_PORT_1_PCI
      boards/x86: scripts: extend build_grub.sh for 64-bit UEFI
      arch/x86/soc: add SoC configuration for Apollo Lake
      boards: x86: add support for UP Squared (Pentium/Celeron)
      drivers/serial: ns16550: extend to support 4 ports
      boards/x86: up_squared: fix UART interrupt triggers
      drivers/i2c: extends Kconfig to support 8 controllers
      drivers/i2c: i2c_dw: extends driver to support 8 controllers
      arch/x86: apollo_lake: add MMU regions for I2C controllers
      tests/benchmarks/footprint/min/x86: disable I2C and SPI
      boards/x86: up_squared: add I2C configurations
      arch/x86: apollo_lake: add PCI related bits for UARTs/I2Cs
      boards/x86: up_squared: support new devices and Atom SoC
      arch/x86: update linker definition for x86 real mode
      arch/x86: always make BSS section MMU page align if X86_MMU
      tests/kernel: kernel.queue.poll: fails if MAX_THREAD_BYTES > 2
      kernel: threads: assign index no. to dynamically created threads
      tests: kernel: add tests for dynamic threads
      kernel: userspace: reserve stack space to store local data

Daniel Wagenknecht (3):
      i2c: stm32: check messages before starting transmission
      i2c: stm32_v2: restructure interrupt handling
      i2c: stm32_v2: implement slave support

David B. Kinder (24):
      release: 1.12 doc cleanup
      doc: fix doxygen error for device.h macros
      doc: update known-issues filter
      doc: update .gitignore file list
      doc: update doc build tools documentation
      doc: remove local copy of jquery.js
      doc: improved error reporting for non-UTF8 docs
      doc: fix genrest.py to use utf-8 encoding
      doc: fix misspelling in watchdog Kconfig
      doc: fix misspelling in hci API docs
      doc: fix misspelling in vlan document
      doc: fix doxygen error in ethernet.h
      doc: fix incorrect defgroup comment in Queue tests
      doc: fix doxygen error for BUILD_ASSERT_MSG
      doc: prepare for read_the_docs theme change
      doc: simplify CONTRIBUTING, merge non-apache
      doc: more RTD theme tweaks
      doc: tweak table CSS for caption location
      doc: fix misspellings in API docs
      doc: fix kconfig misspellings
      doc: fix misspellings in docs
      doc: tweak doc build instructions
      doc: switch to use RTD theme
      doc: fix errors in ipv4_autoconf sample doc

David Brown (1):
      doc: Enumerate threats in model

David Lamparter (1):
      arch: arm: soc: add STM32L433

Diego Sueiro (20):
      drivers: add i.MX I2C driver shim
      arch: Add imx7d_m4 i2c definitions
      board: add i2c support for colibri_imx7d_m4 board
      drivers: Fix asserts in i.MX UART Driver
      arch: Add i.MX7 PWM get clock frequency function
      drivers: add i.MX PWM driver
      arch: Add support for i.MX PWM
      board: Add PWM support for colibri_imx7d_m4
      samples: Add colibri_imx7d_m4 config in blink_led
      tests: Add colibri_imx7d_m4 config in pwm_api
      arch: i.MX add RDC peripheral permission setting for applications cores
      drivers/sensor/fxos8700: Fix race condition during initialization
      drivers/sensor/fxas21002: Fix race condition during initialization
      ext/hal/nxp/imx: Add all UARTs clock frequency information
      dts: Fix cmake warning about missing id field for fsl,imx7d-i2c
      drivers/i2c/i2c_imx: Check for I2C bus busy before starting transaction
      arch/mcimx7_m4: Add pad, clock and gate config for GPIO7 and UART6
      arch/mcimx7_m4: Add i.MX7 Solo Kconfig SoC partnumber define
      boards: Add support for WaRP7 board
      sensors: add WaRP7 board listing for fxos8700 and fxas21002

Dong Xiang (1):
      net: l2: Fixed wifi can not connect to open AP.

Emanuele Di Santo (1):
      boards: arm: add nrf52840_pca10059

Erwan Gouriou (27):
      scripts: extract: globals.py: fix node name when it includes ""@""
      drivers/exti: stm32: Use CMSIS IRQ defines instead of zephyr
      drivers/dma: stm32: Use CMSIS IRQ defines instead of zephyr
      arch/stm32: remove irq definition files
      drivers/serial: stm32: simplify check of TEACK/REACK flags
      drivers/serial: stm32: Put LPUART code under LPUART Kconfig symbol
      dts/bindings: Remove redundant clock properties in st,stm32-i2c...
      ext: stm32cube: update stm32f1xx cube version
      ext: stm32cube: update stm32f3xx cube version
      ext: stm32cube: update stm32f4xx cube version
      ext: stm32cube: update stm32f7xx cube version
      ext: stm32cube: update stm32l4xx cube version
      boards: disco_l475_iot1: Move BT_SPI_BLUENRG selection to avoid warning
      dts/stm32: add clock property to spi nodes
      dts/st: add clock property to i2c nodes
      scripts: devicetree.py: get alternate labels from dt
      scripts/extract/globals: treat node alternate names as 'aliases'
      boards: Set nucleo_f429zi compatible with configuration guidelines
      boards/shields: Add connector flags for compatibility checks
      boards: nucleo_f429zi: state compatibility with Arduino connectors
      drivers/pinmux: stm32 fix ports_enable array definition
      boards: 96b_argonkey, fix lsm6dsl label name
      scripts/dts: extract_dts_includes: makes 'defs' and 'structs' global
      scripts: extract_dts_includes: use deepcopcy when accessing reduced
      ext/hal: stm32cube: STM32F4: Enable legacy CAN API
      ext/hal: stm32cube: STM32F7: Enable legacy CAN API
      ext/hal: stm32cube: STM32L4: Enable legacy CAN API

Evgeny Kalugin (1):
      drivers: sensor: lis2dh: Fix of compilation issue

Findlay Feng (1):
      arch: ARM: Change the march used by cortex-m0 and cortex-m0plus

Flavio Ceolin (11):
      ext: tinycrypt: Update revision
      drivers: crypto: Fix input len size for cbc decryption
      tests: crypto: cbc_mode: Fix input length
      kernel: Fix k_*_sys_clock_always_on macro
      kernel: Remove unused definition
      irq: Fix irq_lock api usage
      kernel: Fix bitwise operators with unsigned operators
      kernel: Explicitly ignoring results of queue_insert
      assert: Explicitly ignoring printk() return
      kernel: Explicitly ignoring memcpy return
      constants: Use uppercase to indicate long

Florian Gärtner (1):
      boards: Add support for nRF52 Adafruit Feather

Florian Vaussard (17):
      pwm: stm32: Use macro to simplify registration
      pwm: stm32: Add support for all PWMs up to PWM20
      pwm: stm32: Do not hardcode the prescalers
      pwm: stm32: Add clock group information
      pwm: stm32: Add STM32F0-specific clocks
      pwm: stm32: Fix driver to compile with STM32F0
      pinmux: stm32f3: Add PA8_PWM1_CH1
      dts: stm32: Add Timer and PWM binding
      dts: stm32f0: Add PWM nodes
      dts: stm32f1: Add PWM nodes
      dts: stm32f3: Add PWM nodes
      dts: stm32f4: Add PWM nodes
      dts: stm32l4: Add PWM nodes
      dts: stm32: Enable PWM nodes on selected boards
      pwm: stm32: Add PWM fixup for STM32* and remove Kconfig options
      ip: route: disable LL address check when using dummy L2
      net: tcp: fix spurious TCP retries

Franco Saworski (1):
      net: ieee802154: fix csma-ca backoff

Gautier Seidel (4):
      esp32: update to ESP-IDF v3.0-dev-2648-gb2ff235b
      esp32: add ESP-IDF bootloader option
      esp32: Re-order bootloader condition in Kconfig
      esp32: add abitily to flash bootloader

Gil Pitney (6):
      boards: cc3220sf_launchxl: Restore removal of CONFIG_XIP setting
      net: drivers: wifi: SimpleLink WiFi Offload Driver (wifi_mgmt only)
      samples: net: wifi: Add a cc3220sf_launchxl conf file
      drivers: wifi: simplelink: move files into a dedicated subdir
      drivers: wifi: winc1500: Use offload_context instead of user_data.
      drivers: wifi: simplelink: enable Fast Connect policy

Grzegorz Kolodziejczyk (1):
      bluetooth: tester: Increase SDU size to meet PTS requirement

Henrik Brix Andersen (5):
      drivers: pwm: pwm_nrf5_sw: Fix calculation of cycles per second
      drivers: pwm: pwm_nrf5_sw: Add prescaler support
      samples: servo_motor: Add support for the BBC micro:bit
      build: fix git describe call on older Git versions
      drivers: pwm_nrf5_sw: Perform static initialization only once

Inaky Perez-Gonzalez (1):
      tests/booting/stub: remove CONFIG_ARC_INIT

Ioannis Glaropoulos (75):
      arch: arm: block ARM_MPU K-option in Cortex-M0
      arch: arm: accelerate _get_num_regions() for Cortex-M0+, M3, and M4
      arch: arm: improve inline comment in _arm_mpu_config/enable
      arch: arm: remove redundant flag
      arch: arm: set VECTOR_ADDRESS to _vector_start
      arch: arm: improve help text for ARM_SECURE_FIRMWARE
      arch: arm: introduce ARM_NONSECURE_FIRMWARE option
      arch: arm: introduce ARMV8_M_SE option
      arch: arm: introduce dependencies for CPU_CORTEX_M_HAS_SPLIM option
      arch: arm: Define and implement API for test target (Secure)
      arch: arm: refactor function to align with the adopted api
      arch: arm: implement cmse address range check (secure)
      arch: arm: convenience wrappers for C variable Non-Secure permissions
      arch: arm: define and implement ARM IRQ target state API
      arch: arm: use CMSIS macro defines for MPU_CTRL register bit setting
      arch: arm: use CMSIS defines for MPU_RBAR register bit setting
      arch: arm: use CMSIS defines for MPU_RASR register bit setting
      arch: arm: beetle: duplicate CMSIS MPU-related macros
      arch: arm: mpu: include CMSIS header in arm_mpu.h
      include: create kernel_includes.h header to hold kernel includes
      arch: arm: soc: remove core zephyr header inclusions from soc.h
      boards: arm: nrf: add directive for nrf52810_pca10040 initialization
      boards: arm: nrf: move LED and Button definitions in DTS
      boards: arm: nrf: update I2C-related defines for nrf52810
      boards: arm: nrf: select HAS_DTS_I2C for nrf52_pca10040
      arch: arm: soc: add explanatory comment for kernel headers' inclusion
      arch: arm: nrf: remove kernel_includes.h from nRF5x soc.h inclusions
      arch: arm: nrf: minor header files' clean up in soc/nrfx
      arch: arm: update compile options for DSP
      arch: arm: add compile-time guards for arm_mpu code
      arch: arm: minor refactor in arm_core_mpu_configure_user_context
      arch: arm: Remove redundant HAL definition for ARM MPU
      arch: arm: use CMSIS bitset flags for MPU attribute definitions
      arch: arm: beetle: duplicate ARM MPU registers' definition
      arch: arm: move ARMv7-m specific content in corresponding header file
      arch: arm: nrf: conditionally compile mpu_regions.c
      arch: arm: refactor _region_init(..) function
      arch: arm: abstract MPU attribute generation in inline function
      arch: arm: mpu: replace literals with CMSIS bitsets
      arch: arm: mpu: get REGION_SIZE_<X> defines directly from ARM CMSIS
      arch: arm: fix linker script title comment
      boards: arm: nrf: enable UARTE on nrf52810_pca10040
      drivers: gpio: nrf: remove GPIO register structure definition
      drivers: gpio: nrf: remove GPIOTE register structure definition
      arch: arm: mpu: fix _get_region_ap(.) function
      kernel: minor improve in SYS_CLOCK_HW_CYCLES_PER_SEC help description
      arch: arm: enable/disable MPU using API functions
      arch: arm: improve documentation of _Fault(.)
      arch: arm: Call NanoFatalErrorHandler and split out Secure stack dump
      arch: arm: re-organize arm fault handling
      arch: arm: allow processor to ignore/recover from faults
      arch: arm: optimize _size_to_mpu_rasr_size function
      arch: arm: configure non-secure registers from secure firmware
      arch: arm: internal API to enable/disable SAU
      arch: arm: configure NS stack pointer limit registers
      arch: arm: add macro definition for vector key write permit value
      arch: arm: API to configure fault target state
      arch: arm: API to configure Secure exception boost
      arch: arm: api for reading MCU SAU regions
      arch: arm: include GCC -mcmse compile option for secure firmware
      arch: arm: API macros for CMSE non-secure function pointers
      arch: arm: macro API for defining non-secure entry functions
      arch: arm: api to permit/block NS system reset requests
      arch: arm: API & implementation of SAU region configuration
      arch: arm: add option to define an NSC region
      arch: arm: export entry veneers
      arch: arm: clean-up ""default n"" entries in Kconfig option definitions
      arch: arm: type definition for arm mpu attribute container
      arch: arm: adapt region_init(.) to use arm_mpu_region_attr structure
      arch: arm: refactor _get_region_attr_by_type() function
      arch: arm: refactor _get_region_attr_by_conf(.) function
      arch: arm: mpu: move ARMv7m-specific functions in internal header
      arch: arm: implement ARMv8-M MPU driver
      arch: arm: mpu: explicitly add UL in numerical shift operations
      arch: arm: add ASSERT in _get_region_attr_by_type

Ismael Fillonneau (1):
      subsys: dfu: img_util: Fix warning with ERR log

Istvan Bisz (13):
      drivers: usb_dc_stm32: Change SYS_LOG_LEVEL
      arch: arm: stm32f2: remove core zephyr header inclusions from soc.h
      hal: stm32f2x: usbotg_fs: fix VBUS sensing deactivation
      drivers: usb: add support for USB OTG FS on STM32F2
      boards: nucleo_f207zg: enable usb
      drivers: pinmux: stm32: complete stm32f2 header
      drivers: pinmux: stm32: complete stm32f0 header
      include: dt-bindings: pinctrl: stm32-pinctrlf1.h complete stm32f1 header
      drivers: pinmux: stm32: complete stm32f3 header
      drivers: pinmux: stm32: complete stm32f4 header
      drivers: pinmux: stm32: complete stm32f7 header
      drivers: pinmux: stm32: complete stm32l0 header
      drivers: pinmux: stm32: complete stm32l4x header

Jakub Rzeszutko (13):
      drivers: uart: Refactor nrf uart shim
      drivers: uart: Rename nrf5 namings to nrfx
      arch: arm: nrf: add hardware description for nrf Kconfig files
      arch: arm: nrf: modification of config parameter: SOC_SERIES_NRF52X
      drivers: serial: simplify Kconfig.nrfx by using HAS_HW_NRF_UART0
      drivers: uart: nrf: fixing hardware flow control
      drivers: uart: nrf: fixing interrupt driven API
      drivers: serial: nrf: Use nrfx GPIO HAL to properly handle pins from P1
      drivers: serial: nrf: Adding missing baud rates to UART driver
      drivers: serial: nrf: Adding UARTE driver for the nRFx family
      drivers: serial: nrf: Adopting define for UART driver.
      drivers: serial: nrf: Serial driver modification to use DT
      misc: dlist: Fixed dlist.h error to pass checkpatch.pl script.

Jamie McCrae (2):
      drivers: flash: w25qxxdv: Add options for delay and device ID
      scripts: runner: nrfjprog: Allow specifying serial number of nrfjprog

Jesus Sanchez-Palencia (2):
      net: l2: Add support for Link Layer Discovery Protocol (LLDP)
      drivers: slip: Add LLDP support

Joakim Andersson (5):
      drivers: serial: Revert change to init level for nrfx uart driver.
      arch: arm: Set Zero Latency IRQ to priority level zero:
      bluetooth: Make controller crypto functions optional
      Bluetooth: Reorganize Kconfig options for BLE controller
      Bluetooth: controller: Fix empty_pkt_us_get for 2M phy.

Johan Hedberg (54):
      Bluetooth: Add HCI User Channel driver for native POSIX port
      Bluetooth: GATT: Fix notifications
      Bluetooth: Export HCI command APIs through public hci.h header file
      Bluetooth: Introduce HCI driver quirks
      shell: Fix command completion logic
      Bluetooth: Add helper for parsing advertising data
      Bluetooth: Convert sample code to use the new bt_data_parse() API
      Bluetooth: Mesh: Fix initialization order during node reset
      Bluetooth: Mesh: Fix redundant model publication clearing
      Bluetooth: Mesh: Fix cyclic rewriting to flash when restoring state
      Bluetooth: Mesh: Fix checking for model subscription address
      Bluetooth: Mesh: cfg_srv: Ignore Prohibited element addresses
      net: buf: Make net_buf_user_data() parameter const
      mgmt: Reduce net_buf user data requirement
      shell: Fix command completion logic
      logging: Make prefixes the same length
      Bluetooth: Mesh: Fix missing semicolon for debug log
      Bluetooth: Kconfig: Lower minimum required ACL buffer count
      logging: Use vsnprintk instead of vsnprintf
      Bluetooth: Mesh: Use more reasonable advertising buffer counts
      Bluetooth: Mesh: Improve outgoing segment count configuration
      Bluetooth: Mesh: Kconfig: Tweak RX SDU value
      Bluetooth: SMP: Fix minor coding style issues
      Bluetooth: SMP: Fix missing NULL-checks for bt_auth
      Bluetooth: SMP: Don't return STK if it hasn't been generated yet
      samples: net/mqtt_publisher: Explicitly disable BT_TINYCRYPT_ECC
      Bluetooth: Kconfig: Enable TINYCRYPT_ECC for combined builds
      Bluetooth: Fix documentation and other issues with auth callbacks
      Bluetooth: SMP: Remove redundant check for smp pointer
      Bluetooth: SMP: Fix SMP context init when sending security request
      Bluetooth: Add support for fixed passkeys
      Bluetooth: shell: Add command for setting fixed passkey
      Bluetooth: shell: Add pairing failed/complete callbacks
      Bluetooth: shell: Add support for pairing confirm-only callbacks
      Bluetooth: SMP: Don't try to encrypt with a non-existing LTK
      Bluetooth: Mesh: Clarify confusing log message
      Bluetooth: Minor whitespace fixes
      Bluetooth: Add infrastructure to handle multiple identities
      Bluetooth: Add initial APIs for identity manipulation
      Bluetooth: Remove redundant BT_DEV_ID_STATIC_RANDOM flag
      Bluetooth: Add full storage support for multiple identities
      Bluetooth: Pass identity to connection and pairing clearing functions
      Bluetooth: Remove bogus bt_keys_func_t typedef
      Bluetooth: Remove return parameter from bt_id_add/del
      Bluetooth: Introduce bt_id_reset() API
      Bluetooth: shell: Add multiple identity support
      Bluetooth: Add safe-guards for creating duplicate identities
      Bluetooth: Introduce bt_id_delete() API
      Bluetooth: shell: Add id-delete command
      Bluetooth: Mesh: Transport: Fix calculating SeqAuth
      samples/mesh: Fix dev_uuid initialization from identity address
      Bluetooth: Mesh: Move Device UUID log to bt_mesh_prov_enable()
      Bluetooth: Mesh: Initialize PB-GATT advertising data at the right time
      Bluetooth: Mesh: Fix heartbeat subscription state handling

Johann Fischer (29):
      subsys: usb: update bcdUSB to 2.00
      boards: frdm_kl25z: add USB support
      include: linker: add sections for USB device stack
      include: usb: add descriptor and data section macros
      subsys: usb: rework usb string descriptor fixup
      subsys: usb: add function to find and fix USB descriptors
      subsys: usb: move descriptor parts to the class drivers
      include: driver: usb: add check for endpoint capabilities
      driver: usb: add check for endpoint capabilities
      subsys: usb: fetch endpoint address from usb_ep_cfg_data
      subsys: usb: validate and update endpoint address
      subsys: usb: configure Interface descriptor at runtime
      subsys: usb: rework composite device support
      usb: class: adapt functions for new composite interface
      usb: hid: fix write to interrupt IN endpoint
      usb: remove all CONFIG_*_EP_ADDR options
      include: i2c: replace num_bytes type u8_t with u32_t
      usb: usb_descriptor: fix null pointer dereference
      boards: curie_ble: add board.cmake
      usb: add callback codes for Set/Clear Feature ENDPOINT_HALT
      subsys: usb: stall if there is no data buffer
      subsys: usb: class: add loopback function
      drivers: usb_dc_kinetis: fix gcc 7.3.1 warning
      drivers: hdc1008: do not use hardcoded I2C address
      drivers: hdc1008: add dt bindings
      samples: apds9960: whitelist arduino_101_sss
      drivers: apds9960: add dt bindings
      boards: add basis support for the reel board
      samples: apds9960: whitelist reel board

Johannes Hutter (5):
      drivers: flash: w25qxxdv: Avoid locking when not threaded
      ext: lib: mgmt: mcumgr: update to latest master
      drivers: usb_dc_stm32: don't wait for semaphore in ISR context
      drivers: led: Add LED driver support for TI LP5562
      samples: drivers: Add sample application for LP5562

Jonathan Yong (2):
      net: eth: Convert to use callbacks to query stats
      net: eth: Vendor specific statistics

Jukka Rissanen (119):
      net: ethernet: Provide stubs for ethernet carrier functions
      net: ethernet: Add carrier detection to L2
      drivers: eth: mcux: Inform IP stack when carrier is lost
      net: dhcpv4: Fix IPv4 and UDP checksum calculation
      net: dhcpv4: Detect network interface on/off events
      samples: net: echo-client: Increase buf count for frdm-k64f
      net: ethernet: Show interface for dropped RX packet
      net: arp: Timeout too long ARP request
      doc: net: Add information about websocket server API
      net: if: Add TX timestamp callback support
      tests: net: Add unit test for network pkt timestamping
      driver: ptp_clock: PTP clock driver definition
      tests: net: ptp: Add ptp clock driver tests
      net: l2: Move the layer 2 code into subsys/net/
      net: gptp: Initial core IEEE 802.1AS support
      samples: net: gptp: Sample application for gPTP support
      net: shell: Add gptp command
      doc: net: Add information about gPTP
      net: llmnr: Add link-local mcast name resolution client support
      samples: net: dns: Add LLMNR client support to DNS resolver
      net: llmnr: Add LLMNR responder support
      samples: net: dns: Cross reference mDNS config option
      net: shell: Check link address when printing iface info
      net: gptp: Set priority of the sent gPTP packets
      net: gptp: Use the ptp clock instead of zephyr uptime
      net: gptp: Fix buf leak in PDELAY_REQ send
      net: gptp: Fix shell statistics output
      net: mgmt: Add VLAN enabled / disabled event support
      net: eth: Add helper to return VLAN info for an interface
      net: gptp: Allow gPTP to run over VLAN
      samples: net: gptp: Allow running gPTP over VLAN
      tests: net: ptp: Make sure we check clock increment properly
      tests: net: tx_timestamp: Check max number of interfaces
      net: gptp: Init only the ports we have configured
      net: gptp: Print port state change information
      drivers: eth: native_posix: Enable gPTP support
      net: gptp: Fix debug prints and use correct modifier
      net: icmpv4: Set the ICMPv4 header correctly
      tests: net: trickle: Initialize test variables earlier
      doc: net: Fix source tree layout documentation
      doc: net: gptp: Fix gptp API function description
      samples: net: gptp: Documentation fixes
      doc: net: gptp: Enhance gPTP documentation
      logging: Provide 8 and 9 parameter logging macros
      logging: Print 7, 8 or 9 parameter macros properly
      logging: Avoid compile warning because of wrong type
      net: dhcpv4: Use less parameters in debug print
      tests: net: arp: Increase network buffer counts
      tests: net: tcp: Use correct network interface for sending
      ext: hal: nxp: mcux: Fix PTP event packet type check
      ext: hal: nxp: mcux: Enable enhanced buffer desc mode if needed
      drivers: eth: mcux: Enable gPTP support
      samples: net: gptp: Add support for FRDM-K64F board
      drivers: eth: mcux: Allow gPTP over VLAN
      drivers: eth: mcux: Prioritize received PTP packets to high
      ext: hal: nxp: mcux: Update README file
      tests: net: udp: Increase network buffer counts
      net: ipv6: Fix NA debug print
      net: gptp: Fix unsigned value comparison
      net: gptp: Check overflow of log msg interval
      net: gptp: Add comment for falling through case
      net: utils: Check null pointer when parsing IPv6 address
      net: ethernet: mgmt: Fix Qav deltaBandwith check
      tests: net: Print proper error if we run out of net bufs
      tests: net: Run various tests only in qemu_x86 or native_posix
      samples: net: echo-server: Add overlay config support
      net: if: Add promiscuous mode set / unset functionality
      net: eth: Add generic promiscuous mode support
      tests: net: ethernet_mgmt: Add promisc mode tests
      tests: net: if: Add promisc mode tests
      net: Add promiscuous mode support
      tests: net: Add tests for net_promisc API
      net: eth: native_posix: Return proper error code from linux
      net: eth: native_posix: Add promiscuous mode support
      net: shell: Print information about promiscuous mode
      samples: net: Add promiscuous mode application
      samples: net: tp: Avoid compiler warning
      net: stats: Simplify periodic statistics printing
      samples: net: echo-client: Add overlay config support
      net: Avoid holes in structs
      samples: net: gptp: Add support for Atmel SAM E70 Xplained board
      net: arp: Fix ARP message sending if VLAN is enabled
      net: l2: Move individual L2 to dedicated directories
      drivers: eth: native_posix: Make sure sent pkt is freed properly
      net: IPv4 link local support
      samples: net: IPv4 autoconf sample application
      net: shell: Print supported features for ethernet interfaces
      net: ipv4_autoconf: Fix requested IPv4 address in ARP packet
      tests: net: ipv6: Must use Ethernet L2 instead of Dummy L2
      drivers: eth: native_posix: Exec program after creating zeth
      net: shell: Check strtol() conversion errors
      drivers: eth: Enable LLDP support for native_posix board
      samples: net: lldp: Sample application that enables LLDP support
      net: l2: Add flags to tell if L2 supports multicast
      net: if: No need to always join solicit node mcast group
      net: l2: Add promiscuous mode to L2 flags when applicable
      net: if: Add net_if_ipv6_select_src_iface() function
      tests: net: iface: Add test for net_if_ipv6_select_src_iface()
      net: if: Add net_if_select_src_iface() function
      tests: net: iface: Add test for net_if_select_src_iface() function
      net: if: Do not inline net_if_ipv6_addr_lookup_by_iface()
      net: ipv4: Corrupted ARP pkt was sent instead of real IPv4 pkt
      tests: net: ipv6: Wrong API struct was used for ethernet device
      net: eth: Add start and stop L2 functions
      drivers: eth: native_posix: Allow user to manipulate zeth status
      net: if: Lower memory usage for IPv6 address, prefix and router info
      net: core: Always have a timeout when allocating a net_buf
      net: l2/lib: Always have a timeout when allocating a net_buf
      samples: net: echo-client: Handle net_buf out-of-mem gracefully
      samples: net: echo-server: Handle net_buf out-of-mem gracefully
      net: Use packed enums when applicable
      net: http: One extra byte was sent in last chunk
      net: if: Lower ram usage for IP address lifetime handling
      tests: net: ptp: Check max number of interfaces
      tests: net: iface: Initialize port number
      net: if: Mark IPv6 address as preferred if lifetime is renewed
      net: if: Remove IPv6 auto addresses if the prefix is removed
      net: lldp: Fix timeout triggering if multiple workers
      tests: net: ipv6: Add tests for verifying DAD timers

Julien Chevrier (1):
      ext: hal: nxp: mcux: Fix ethernet timestamping driver

Jun Li (4):
      settings: fix typo in header file
      stm32_pwm: add pinmux port definition for pwm4
      soc: stm32f4: add pinmux defs for usb on pb14 and pb15
      bluetooth: add callback to notify pairing is complete

Justin DeMartino (1):
      drivers: pwm: Add shim for nrfx PWM HW driver

Kamil Piszczek (1):
      Bluetooth: UUID: add UUIDs for missing HIDS characteristics

Karol Gugala (3):
      drivers: plic: do not compile plic for qemu target
      riscv32: riscv-privilege: integrate common code
      riscv32: riscv-privilege: Microsemi Mi-V support

Karol Lasończyk (5):
      drivers: watchdog: Align nrf wdt driver to new nrfx
      drivers: watchdog: Fix assert errors in nrf watchdog implementation
      tests: watchdog: Add new testcase and improve existing ones
      samples: watchdog: Update watchdog example to new API
      tests/samples: watchdog: Update projects' configuration

Kiril Zyapkov (2):
      drivers: rtc: add support for STM32 RTC
      boards/arm: Enable RTC on STM32L4 boards

Krzysztof Chruscinski (17):
      syscall: Add support for syscall_ret64_arg2
      doc: subsys: logging: Add documentation for new logger
      logging: log_output: Data lost because of uninitialized variable
      logging: Fix fail when log locally disabled
      logging: Handle 0 Hz frequency in log_output
      logging: Ensure constant side effects of log API
      logging: Add log initialization to system startup
      logging: Logger to wake up logs processing thread
      logging: Add internal thread for log processing
      doc: subsys: logging: internal thread and thread wake up
      logging: Internal processing thread enabled by default
      logging: Internal logger headers cleanup
      logging: Remove log.h including in headers limitation
      logging: Fix static log filtering
      logging: Macro argument evaluated when enabled
      logging: Replace ifdefs with if
      logging: Add metadata to hexdump

Krzysztof Chruściński (6):
      drivers: console: rtt: RTT session awareness
      ext: debug: segger: Move RTT configuration to KConfig
      ext: debug: segger: Updating Segger RTT to 6.32d
      logging: subsystem major redesign
      tests: subsys: logging: Add tests for log_msg and log_list
      samples: subsys: logging: Add logger example

Kumar Gala (33):
      boards: arm: stm32: Added pwm to supported list
      toolchain: gcc: check if __weak is defined
      Revert ""arch: arm: stm32: correct include issue""
      samples: sysview: limit to systems with enough ram
      tests: Cleanup converting int result to string
      drivers: i2c: nrfx: Move device tree selection to driver Kconfig
      drivers: gpio: nrfx: Move device tree selection to driver Kconfig
      arch: arm: beetle: Pull in CMSDK header for CMSIS support on Beetle
      dts: Fix warning related to arm,v{6,7,8}m-nvic yaml files
      arch: arm: nrf52: Support UARTE defines in dts.fixup
      nrf52: dts: Force user to explicitly set UART0 compatible
      arch: atmel_sam0: Fix Kconfig warnings
      net: lwm2m: Fix warning when building with newlib
      libc: minimal: Fix handling of floating point exponent
      libc: minimal: Fix handling of %f conversion specifiers for inf & nan
      libc: minimal: Fix support for -nan
      libc: minimal: Add support for %F conversion specifiers
      tests: sprintf: Add inf/nan testing for %{e,E,g,G}
      lib: json: Fix warning when building with newlib
      samples: nats: Fix warning when building with newlib
      bluetooth: mesh: shell:  Fix warning when building with newlib
      bluetooth: at: Fix warning when building with newlib
      samples: mesh_demo: Fix  Fix warning when building with newlib
      ext: hal: altera: Add ifdef protection for __LINUX_ERRNO_EXTENSIONS__
      libc: newlib: Enable extended linux errno defines
      ext: hal: cmsis: Remove headers from old CMSIS import
      Fix compile errors related to errno.h
      syscall: Move arch specific syscall code into its own header
      doc: Fix warning associated with GNU ARM embedded rename
      log: make name param explicit
      tests: CONFIG_ARC_INIT is n by default
      Revert ""log: make name param explicit""
      tests/net: ieee802154: fragment: Fix build error

Laczen JMS (2):
      subsys: fs/nvs: Improved nvs for larger blocksizes
      subsys: fs/nvs: Rewrite for improved robustness

Lars Knudsen (3):
      drivers: sensor: Add support for MMA8451Q (3-axis accelerometer)
      boards: frdm_kl25z: Add mma8451q to i2c in dts
      samples: sensors: mma8451q: Add accelerometer sample

Leandro Pereira (4):
      samples: mbedtls_sslclient: Use entropy driver to kickstart RNG
      samples, subsys, tests: Use ARRAY_SIZE() whenever possible
      lib: libc: minimal: Get rid of the bit (256-byte) charmap table
      boards: native_posix: Add option to build with Address Sanitizer

Loic Poulain (4):
      Bluetooth: hci: spi: Select BT_RECV_IS_RX_THREAD
      usb: bluetooth: Add TX thread
      usb: bluetooth: Fix assert due to unreserved headroom
      usb: bluetooth: Use transfer API for ACL packets

Luiz Augusto von Dentz (15):
      Bluetooth: GATT: Allow Characterist to be used with bt_gatt_notify
      Bluetooth: GATT: Allow Characterist to be used with bt_gatt_indicate
      Bluetooth: Use Characteristic attribute whenever possible
      Bluetooth: Store device name
      Bluetooth: GATT: Make GAP name writable
      Bluetooth: Add BT_LE_ADV_OPT_USE_NAME
      Bluetooth: Allow use of ScanData with BT_LE_ADV_OPT_USE_NAME
      Bluetooth: Use shortened name if complete doesn't fit
      Bluetooth: samples: Make use of BT_LE_ADV_OPT_USE_NAME
      Bluetooth: peripheral: Set CONFIG_BT_DEVICE_NAME_MAX
      Bluetooth: shell: Make use of BT_LE_ADV_OPT_USE_NAME
      Bluetooth: shell: Add name command
      Bluetooth: shell: Add hci-cmd command
      Bluetooth: Fix storing name in plain text
      Bluetooth: GATT: Make CCC cfg_changed optional

Léonard Bise (1):
      net: ipv6: Fix memory leak caused by NS request failure

Mandar Chandrakant Thorat (3):
      boards: nrf52_blenano2: Add i2c's to nrf52_blenano2 board dts.
      boards: arm: nrf: select HAS_DTS_I2C for nrf52_blenano2
      boards: arm: bbc_microbit: select HAS_DTS_I2C for bbc_microbit

Marc Reilly (1):
      drivers: gpio: add dts support for nrf52 gpio

Marcin Niestroj (1):
      net: tcp: Fix net_buf leak in case of low available net_buf count

Mariusz Skamra (14):
      bluetooth: tester: Increase system workqueue stack size
      bluetooth: tester: Fix bt_gatt_service_register call with invalid params
      bluetooth: tester: Remove redundant config option from qemu.conf
      bluetooth: tester: Set configuration file for qemu_cortex_m3 target
      Bluetooth: Fix assertion condition in bt_gatt_discover
      Bluetooth: hci_core: Exclude conn creation related code for non-central
      Bluetooth: mesh_demo: Enable missing options in configuration file
      Bluetooth: Mesh: Depend Mesh upon Observer and Broadcaster roles
      Bluetooth: hci_core: Exclude scan related code if non-observer
      Bluetooth: att: Do not build Signed Write cmd handler if SMP disabled
      Bluetooth: att: Add Kconfig option to disable Multiple Read operation
      samples: smp_svr: Disable GATT Multiple Read
      Bluetooth: controller: Fix LE Extended Scanner Filter Policy dependency
      subsys: mgmt: Fix broken OTA firmware update

Marti Bolivar (5):
      cmake: fix git describe command line
      subsys: logging: fix trigger threshold corner case
      scripts: west: sync with upstream
      logging: fix multi-file module support
      logging: fix runtime filtering initialization

Maureen Helm (22):
      release: Post-release patch level update
      imxrt1050: Disable low-power modes
      tests: fp_sharing: Extract x86 configs to separate .conf
      arm: Print NXP MPU error information in BusFault dump
      CODEOWNERS: Update entry for sensor drivers
      arm: nxp: mpu: Consolidate k64 mpu regions
      dts: yaml: Remove unused nxp,kw41z-sim.yaml
      dts: yaml: Add missing id property to nxp bindings
      dts: yaml: Align serial driver clocks bindings
      dts: yaml: Align spi driver clocks bindings
      ext: mcux: Add a script to import new versions of mcux
      doc: scripts: Updates for pyocd v0.11.1
      tests: flash_map: Disable write protection before erase
      tests: flash_map: Enable mpu and allow flash write
      tests: flash_map: Don't enable stdout console
      tests: flash_map: Add k64-based boards to platform whitelist
      Revert ""mimxrt1050_evk: disable sanitycheck on this board [REVERT ME]""
      doc: Update OpenSDA document for flashing with jlink
      mimxrt1050_evk: Update jlink device name
      tests: spi_loopback: Increase size of async callback thread stack
      tests: spi_loopback: Add zasserts to fix false passes
      tests: spi_loopback: Increase k_poll timeout

Michael Hennerich (4):
      drivers: sensors: adt7420: Add driver for ADT7420 Temperature Sensor
      samples: sensor: adt7420: Add ADT7420 sample application
      drivers: sensors: adxl372: Add driver for ADXL372 high-g accelerometer
      samples: sensor: adxl372: Add ADXL372 sample application

Michael R Rosen (2):
      cmake: fix CONF_FILE parsing to allow for cmake lists
      doc: update application docs wrt CONF_FILE

Michael Scott (22):
      boards: arm: nrf52840: default IEEE802154_NRF5 if IEEE802154 enabled
      net: lwm2m: retry registration update 6 seconds before expiration
      samples: net: wpanusb: split cc2520 settings from prj.conf
      samples: net: wpanusb: add TI CC1200 overlay config
      samples: usb: wpanusb: add MCR20A overlay config
      samples: usb: wpanusb: update README to rst format
      samples: net: wpanusb: fix sanitycheck
      net: lwm2m: make lwm2m_engine_exec_cb_t more generic
      net: lwm2m: introduce user-code callbacks for obj create/delete
      net: lwm2m: use ARRAY_SIZE to calculate # of options
      net: lwm2m: read past not supported TLV resources
      dts: bindings: add generic yaml description for uart-devices
      net: buf: add linearize, append_bytes and skip APIs to net_buf
      drivers: modem: add modem receiver (tty) driver
      drivers: modem: add Wistron WNC-M14A2A LTE-M Modem Driver
      drivers: modem: add modem shell extension
      boards: arm: k64f: add settings for UART_2
      boards: arm: frdm_k64f: add settings to use WNC-M14A2A LTE-M modem
      boards: arm: nrf52840_pca10056: add settings for WNC-M14A2A modem
      samples: net: lwm2m: add wnc-m14a2a overlay .conf file
      samples: net: lwm2m: cleanup prj.conf
      net: lwm2m: no need to cleanup net_app_ctx in RD client

Mieszko Mierunski (12):
      drivers: i2c: Add shims for nrfx TWI and TWIM drivers
      boards: nrf: Use i2c drivers from nrfx
      drivers: i2c: Removed redundant i2c_nrf5 shim
      boards: nrf: Moved SDA and SCL pin configuration to DTS for nRF boards
      boards: nrf: Fix nrf52_pca20020 board for benchmark test.
      dts: nrf: Added DTS support for nRF51
      util: Add WRITE_BIT macro to util.h
      drivers: gpio: Add shim for nrfx GPIO and GPIOTE drivers
      tests: gpio: Added nRF board to gpio test
      boards: nrf: Changed GPIO default driver to NRFX shim
      drivers: nrf: Remove redundant gpio_nrf5 shim
      dts: nrf5: Changed GPIO and GPIOTE define names

Morten Priess (3):
      tests: ztest: fixed off-by-one in sys_bitfield_find_first_clear
      tests: ztest: added test case for multiple mock expects
      tests: ztest: ztest_mock to support multiple calls to same mock

Nathaniel Graff (6):
      linker: riscv: Relocate .eh_frame symbol
      boards: riscv: Convert HiFive1 to DTS
      arch: riscv32: Move MEPC increment in irq_wrapper
      dts: Fix get_compat when parent compat is a list
      riscv: Rename the FE310 SoC to Sifive Freedom
      drivers: gpio: SiFive GPIO allows <32 pins

Neil Armstrong (3):
      i2c: Add new I2C Slave syscalls
      i2c: slave: Add EEPROM I2C Slave driver
      test: i2c: Add i2c_slave_api test

Niranjhana N (8):
      tests: drivers: adc: fix failing test for frdm_k64f
      samples: console: add print statements for user
      posix: add pthread_key and pthread_once APIs
      tests: posix: add test for pthread_key
      tests: posix: improve pthread_key test
      tests: power: refactor power_states test
      tests: cmsis_rtos_v1: add negative tests
      lib: cmsis_rtos_v1: fix couple of nonconformities

Oleg Zhurakivskyy (13):
      net: icmpv4: Merge process_icmpv4_pkt() into net_icmpv4_input()
      net: icmpv4: Simplify the flow at net_icmpv4_get_hdr()
      net: ipv4: Minor refactoring
      net: ipv4: Refactor IPv4 header length handling
      net: ipv6: Refactor IPv6 header length handling
      net: ip: Remove unused function
      net: ip: Add net_sprint_addr()
      net: ip: Redirect net_sprint_ipv*_addr() invocations
      net: ip: Refactor usage of net_sprint_ip*()
      sanitycheck: Get ZEPHYR_BASE only once
      sanitycheck: Fix the logic for jobs
      sanitycheck: Rename CPU_COUNTS to JOBS
      sanitycheck: Overcommit the default number of jobs

Olivier Gay (1):
      doc: fix wrong board name in Nordic doc

Olivier Martin (5):
      drivers: rtc: Fix build
      drivers: serial: Fix syntax error
      drivers: flash: w25q: Fix typo
      lib/crc: Add CRC32 support
      dts/rtc: Introduce binding for STM32 RTC

Paul Sokolovsky (24):
      kernel: work_q: Document implications of default sys work_q priority
      net: shell: conn: Always show TCP state
      samples: sockets: dumb_http_server: Use consistent logging settings
      net: tcp: Process zero window probes when our recv_wnd == 0
      subsys: console: getchar: Use consistent var names for RX path
      net: ethernet: Fix asserts in net_eth_fill_header()
      net: ethernet: net_eth_fill_header: Remove superfluous ""frag"" param
      net: tcp: Add MSS option on sending SYN request
      libc: minimal: Add typedefs for ""least"" types
      net: app: Split code for configuring network to a separate lib, ""config""
      net: lib: app: Convert CMakeLists.txt to avoid library
      subsys: console: Factor out fifo-based console input abstraction
      subsys: console: Make CONSOLE_GETCHAR and *_GETLINE optional
      net: config: Introduce a dedicated header for the library
      eth: mcux: Add an option for randomized, but stable MAC address
      net: sockets: Make poll() call threadsafe by avoiding global array
      net: getaddrinfo: Make availability depend on CONFIG_DNS_RESOLVER
      drivers: uart: Allow to pass arbitrary user data to irq callback
      drivers: serial: uart_sam: Fix typo in param name.
      net: config: Rename Kconfig options to correspond to library name
      subsys: console: Mark as EXPERIMENTAL.
      subsys: console: Refactor code to allow per-UART ""tty"" wrapper
      include: console: Include kernel.h for struct k_fifo
      net: Move CONFIG_NET_OFFLOAD definition to net/ip/

Paweł Zadrożniak (1):
      subsys: usb: Fixes USB DFU class by updating the bcdUSB value.

Philémon Jaermann (1):
      net: net_app: Correctly notify server on TCP disconnection

Piotr Mienkowski (1):
      soc: efr32fg1p: correct clock initialization sequence

Piotr Zięcik (19):
      drivers: timer: Use sys_clock_hw_cycles_per_tick in nrf_rtc_timer.
      arch: arm: nrf: Enable SEGGER RTT on all Nordic SoCs
      samples: sysview: Update memory requirements
      kernel: Cleanup _ms_to_ticks().
      kernel: Do not use fixed list of ""good"" sys_clock_ticks_per_sec values.
      kernel: Improve tick <-> ms conversion.
      kernel: Move _ms_to_ticks() and __ticks_to_ms() close to each other.
      ext: debug: segger: Fix CONFIG_SEGGER_RTT_MODE generation.
      tests: sleep: Fix _TICK_ALIGN correction.
      kernel: Deprecate sys_clock_us_per_tick variable.
      kernel: Use accurate tick/ms conversion if clock rate is set at runtime
      kernel: sched: Fix comparsion in _update_time_slice_before_swap()
      kernel: sched: Use ticks as time unit in time slicing.
      drivers: timer: nrf: Optimize k_cycle_get_32().
      driver: timer: nrf: Remove redundant RTC_COUNTER reads.
      kernel: sched: Fix comparsion in _update_time_slice_before_swap()
      kernel: sched: Use ticks as time unit in time slicing.
      kernel: Do not use sys_clock_ticks_per_sec in _ms_to_ticks()
      tests: kernel: Do not use exact time in timing checks.

Praful Swarnakar (9):
      doc: tests: Add test description and doxygen groups in timer
      tests: kernel: init: Add description and RTM links
      tests: kernel: profiling: Add description and doxygen group
      coverage: kernel: poll: Cleanup redundant code to improve coverage
      coverage: tests: poll: Add missing poll event to improve code coverage
      tests: lib: mem_alloc: Add tests to validate dynamic allocation
      tests: kernel: device: Add RTM link, description and doxygen group
      lib: cmsis_rtos_v1: Fix timeout calculation in signals
      coverage: tests: poll: Add test to validate multiple polling threads

Rajavardhan Gundi (24):
      DTS: interrupt controller: Define IRQ priorities for CAVS & DW ICTL
      DTS: intel_s1000: Clean up I2C and UART stuff from soc.h
      kernel/stack: Introduce K_THREAD_STACK_LEN macro
      CMSIS RTOS V1: Introduce CMSIS RTOS V1 API header file
      lib/cmsis_rtos_v1: Implement support for thread APIs
      lib/cmsis_rtos_v1: Implement support for osDelay
      lib/cmsis_rtos_v1: Implement support for osKernelSysTick
      tests/cmsis_rtos_v1: Introduce tests to make use of Thread APIs
      tests/cmsis_rtos_v1: Introduce tests to verify Thread instances
      lib/cmsis_rtos_v1: Implement support for timer APIs
      tests/cmsis_rtos_v1: Introduce tests to make use of Timer APIs
      lib/cmsis_rtos_v1: Implement support for mutex APIs
      tests/cmsis_rtos_v1: Introduce tests to make use of Mutex APIs
      lib/cmsis_rtos_v1: Implement support for semaphore APIs
      tests/cmsis_rtos_v1: Introduce tests to make use of Semaphore APIs
      lib/cmsis_rtos_v1: Implement support for mempool APIs
      tests/cmsis_rtos_v1: Introduce tests to make use of mempool APIs
      lib/cmsis_rtos_v1: Implement support for kernel APIs
      lib/cmsis_rtos_v1: Implement support for Mail Queue APIs
      tests/cmsis_rtos_v1: Introduce tests to make use of mailq APIs
      lib/cmsis_rtos_v1: Implement support for Message Queue APIs
      tests/cmsis_rtos_v1: Introduce tests to make use of messageQ APIs
      lib/cmsis_rtos_v1: Implement support for Signal Event APIs
      tests/cmsis_rtos_v1: Introduce tests to make use of Signal APIs

Ramakrishna Pallala (19):
      drivers: timer: nrf: Fix expected_sys_ticks issue in case of k_busy_wait
      arch: arm: nrf52: Enable interrupts on wake up from sleep
      samples: boards: nrf52: Refactor power_mgr app code
      kernel: thread: Simplify k_thread_foreach conditional inclusion
      arch: x86: Reorder the SoC power states for Quark SE
      arch: arc: Fix Deep Sleep hang issue on Quark SE(ARC)
      tests: power: power_states: Define power states as per architecture
      tests: power: multicore: Fix the idle synchronization issue
      tests: power: multicore: Fix power state entry for LMT
      kernel: idle: Define _sys_soc_resume functions conditionally
      tests: crypto: rand32: Add test for z_early_boot_rand32_get
      tests: kernel: device: Set device power state
      tests: kernel: timer: Add a test case to cover k_timer_start
      tests: power: power_states: Do not enter LPS states on test exit
      samples: boards: quark_se_c1000: Do not enter LPS states on test exit
      tests: kernel: Move k_thread_foreach() API test to thread_apis test
      arch: arm: nordic_nrf: Add an API to check for valid PM state
      subsys: power: Add OS managed Power Management framework
      samples: subsys: Add sample app to demo OS managed PM

Ramon Ribeiro (2):
      net: openThread: Fix MTD build
      net: openthread: Add NETWORKNAME and XPANID config

Ravi kumar Veeramally (13):
      net: ipv6: Handle large IPv6 packets properly
      samples: net: echo_server: Fix building of echo replies
      samples: net: coaps_client: Increase IPv6 mcast table size
      net: Do not set appdata on a cloned packet
      net: ipv6: Fix memory leak
      net: icmpv6: Simplify the flow at net_icmpv6_get/set_xxx() calls
      net: icmpv4: Simplify the flow at net_icmpv4_get/set_xxx() calls
      net: ipv6: Fix regression in IPv6 cleanup
      net: ipv6: Centralize IPv6 send NS timeout through one k_delayed_work
      net: ipv6: Centralize ND reachable timeout through one k_delayed_work
      net: ipv6: Separate IPv6 Neighbor functionality
      net: ipv6: Separate IPv6 MLD functionality
      net: ipv6: Separate IPv6 fragment functionality

Robert Lubos (52):
      net: stats: do not use deallocated packet pointer
      net: samples: increase main stack size for echo_client
      net: stats: handle_na_input: unref packet after stats are updated
      samples: net: Socket based echo_client
      samples: net: Socket based echo_server
      samples: net: Fix echo_client/echo_server TLS config files
      ext: lib: crypto: Add generic mbedTLS config file
      ext: lib: crypto: Make config-tls-generic.h default config
      samples: net: Make echo_client/echo_server use generic mbedTLS config
      net: socket: Add switch to enable TLS socket option support
      net: tls: Add TLS context allocation/deallocation
      net: tls: Add mbedTLS entropy source
      net: tls: Add mbedTLS logging
      net: tls: Handle TLS handshake
      net: tls: Handle TLS socket send and recv
      net: tls: Implement poll with support for mbedTLS pending data
      net: samples: Add TLS support to http_get and big_http_download samples
      samples: net: Explicitly ignore socket close return value
      samples: net: Fix incorrect error check in echo_server
      net: tls: Add credential management subsystem
      net: socket: Define getsockopt() and setsockopt()
      net: tls: Add TLS socket options placeholder
      net: tls: Add socket option to select TLS credentials
      net: tls: Set TLS credentials in mbedTLS
      net: tls: Add socket option to set TLS hostname
      net: tls: Add socket option to select ciphersuites
      net: tls: Add socket option to read chosen ciphersuite
      net: tls: Add socket option to set peer verification level
      net: samples: Add CA certificates to http_get and big_http_download
      net: samples: Add TLS support to socket echo_client/echo_server
      tests: net: TLS credentials subsystem tests
      samples: net: Allow to register more adresses for OpenThread
      net: openthread: Register OT unicast adresses in Zephyr
      net: openthread: Don't regsiter mcast addresses in Zephyr multiple times
      net: sockets: Fix setsockopt coverity issues
      net: tls: Add DTLS protocol types
      net: tls: Add socket option to set DTLS role
      net: tls: Add timer handling for DTLS
      net: tls: Add cookie for DTLS
      net: tls: Add DTLS peer address helpers
      net: socket: Extract flag related functions to internal header file
      net: tls: Add DTLS bio functions
      net: tls: Handle HELLO_VERIFY_REQUIRED during DTLS handshake
      net: tls: Adapt connect for DTLS
      net: tls: Support DTLS send and handshake
      net: tls: Support DTLS recv and handshake
      net: tls: Add timeout for mbetTLS read
      net: tls: Make TLS poll implementation check mbedTLS data
      net: tls: Enable non-blocking DTLS handshake
      samples: net: Add DTLS support to socket echo_client/echo_server
      net: tls: Use EINVAL for NULL pointer error in option setters
      net: tls: Apply DTLS review fixes

Rodrigo Peixoto (1):
      docs: Fix mailbox k_mbox_msg.tx_block documentation

Ruslan Mstoi (3):
      sanitycheck: Add progress to verbose mode
      net: pkt: Fix comment typo in word tailroom
      net: ipv6: Fix crash from fragmented packets

Sathish Kuttan (16):
      drivers: dma_cavs: Add support for circular list
      boards: intel_s1000: Config for USB PHY 2.0
      drivers: usb: Add High Speed support for DesignWare USB
      subsys: usb: Make HID payload size configurable
      doc: intel_s1000: Procedure to obtain toolchain
      drivers: dma_cavs: preserve DMA LLIs on stop
      drivers: codec: APIs for Audio Codecs
      drivers: audio: Add audio support in Kconfig
      dts: audio: device tree support for audio devices
      boards: intel_s1000: audio codec in device tree
      drivers: audio: TLV320DAC310x audio DAC driver
      drivers: audio: add audio to cmake system
      drivers: dmic: APIs for digital microphones
      drivers: i2s_cavs: Remove resource owner config
      drivers: dma_cavs: Remove resource owner config
      xtensa: intel_s1000: Add SoC level SYS_INIT

Satya Bhattacharya (1):
      samples: net: Check the return value of close()

Savinay Dharmappa (3):
      dts: riscv32: riscv32-qemu: Add device tree support
      drivers: usb: Fix build error for intel_s1000.
      tests: boards: intel_s1000_crb: Fix build error.

Sean Nyekjaer (5):
      ext: Import Atmel SAMD20 header files from ASF library
      arch: atmel_sam0: move clk config options to common Kconfig
      dts: arm: sam0: move contents samd21 to samd
      arch: add support SAMD20 used in the SAMD20 Xplained Pro Board
      boards: add board and DTS definitions for the SAMD20 Xplained Pro Board

Sebastian Bøe (29):
      cmake: libc: minimal: Move sources from 'app' to a new CMake library
      cmake: Improve user error feedback when -H$ZEPHYR_BASE is specified
      gpio: doc: Be explicit about how EDGE and DOUBLE_EDGE work together
      net: bluetooth: Enforce the minimum user_data size at Kconfig
      cmake: bluetooth: Don't #include gatt files from src files
      kconfig: Change how BT affects SYSTEM_WORKQUEUE_PRIORITY
      isr_tables: Simplify how the spurious irq function address is found
      isr_tables: Simplify how the sw_irq_handler function is used
      cmake: Support specifying Kconfig options on the CLI
      cmake: Remove stray CMakeLists.txt file
      cmake: Invoke 'python' instead of py scripts directly
      gen_isr_tables: Delete the dead code accompanying .intList.num_isrs
      cmake: Remove duplicate invocations of target_link_libraries on app
      cmake: LD: Specify the entry point in the linker scripts
      cmake: default to linking 'app' with the interface library 'FS'
      cmake: Remove duplicate invocations of target_link_libraries on app
      cmake: settings: Don't add ext nffs include dir to global includes
      cmake: Improve the error message when the compiler is not executable
      ld: Don't use --start-group and --end-group
      cmake: Refactor usage of target_link_libraries on Zephyr libraries
      syscalls: Define the syscall id's with '#define' instead of enum
      cmake: Don't propagate zephyr_library_compile_options
      cmake: Prepend 'cmake_minimum_required()' into 'app' build scripts
      cmake: change policy CMP0000 to NEW
      doc: Document new app boilerplate requirement
      cmake: Deprecate the 2 symbols _SYSCALL_{LIMIT,BAD}
      linker: Minor refactor of the APP_SMEM_SECTION macro
      linker: Re-implement {APP,KERNEL}_INPUT_SECTION
      kconfig: BT: Default to using BT_CTLR when BT

Sebastien Bourdelin (2):
      drivers: led: Add LED driver support for NXP PCA9633
      samples: drivers: Add sample application for PCA9633

Shawn Mosley (1):
      userspace: compartmentalized app memory organization

Spoorthi K (30):
      tests: obj_tracing: Enhance object counter logic
      tests: pending: Add description and RTM links
      tests: kernel: Add description and doxygen groups for workq
      tests: kernel: Add description and group tests for doxygen
      tests: poll: Add description and RTM links
      tests: semaphore: Add description for semaphore tests
      tests: kernel: Add description for common and interrrupt
      tests: spinlock: Add description and doxygen groups
      tests: sleep: Add description and RTM links
      kernel: thread: Exclude deprecated function from lcov
      tests: stack: Add description for test cases
      tests: queue: Add description and doxygen groups
      tests: queue: Enhance tests to improve coverage
      tests: pipe: Add description and RTM links
      tests: obj_tracing: Add obj_tracing tests for kernel objects
      obj_tracing: Declare object trace list for queue
      tests: kernel: Add test to verify k_thread_user_mode_enter()
      tests: mem_protect: Add description and doxygen groups
      tests: mem_protect: Add RTM links and description
      tests: mp: Add description, RTM links and doxygen group
      tests: syscall: Add description and RTM links
      tests: x86_mmu_api: Add description and doxygen groups
      tests: userspace: Remove extra call to same testcase
      tests: protection: Add description and doxygen group
      tests: userspace: Add description and doxygen links
      tests: obj_tracing: Enhance object tracing test
      tests: kernel: Add doxygen groups
      tests: cmsis_rtos_v1: Add and enhance test suite
      tests: smp: Additional tests to verify SMP functionality
      tests: smp: Modify test to verify thread delay

Sritej Kanakadandi Venkata Rama (1):
      drivers: can: Set a initial state to the can device before HAL_CAN_Init

Stanislav Poboril (3):
      ext/hal/nxp/imx: Import the nxp imx6 freertos bsp
      arch: Add imx6sx m4 soc support
      boards/arm: add support for udoo_neo_full_m4 board

Subramanian Meenakshi Sundaram (4):
      doc: boards: arm: Update datasheet link
      lib: posix: Fix Out-of-bound write to char array
      samples: net: Fix incorrect use of ipv4 in ipv6 branch
      samples: boards: Fix incorrect min max range validation

Szymon Janc (2):
      Bluetooth: controller: Fix disabling LE Encryption support
      Bluetooth: att: Add option to disable GATT writable name

Tarun Kumar Agarwal (1):
      tests: net: lib: coap: Added new functions to improve code coverage

Tedd Ho-Jeong An (1):
      net: tcp: Handle RST packet when multiple flags are set

Thomas Ebert Hansen (1):
      cmake: Use _FORTIFY_SOURCE only with optimizations enabled

Tomasz Bursztyka (36):
      net/ethernet: There is no need to fill in the header in all frags
      net/arp: There is no need to fill in the header in all frags
      net/arp: Removing header filling duplicate
      net/arp: Clear cache per-iface when relevant
      net/icmpv6: Removing duplicate checksum calculation
      net/pkt: Simplify a tiny bit how TC priority is set
      net/pkt: Use IS_ENABLED instead of ifdef
      drivers/flash: Remove irrelevant option in w25qxxdv driver
      include: Remove unused header
      net/ethernet: Let's use the same parameter names everywhere
      net/arp: No need to expose publicly arp header
      net/arp: Optimize ARP table by switching to various single list
      net/arp: Centralize ARP request timeout through one k_delayed_work
      net/arp: Let's reduce the size of each ARP entry
      net/arp: Normalize all function names
      tests/net: Fix L2 directory lookup for header inclusion
      net/ipv4: Properly separate what belongs to ipv4 from the rest
      net/ipv6: Properly separate what belongs to ipv6 from the rest
      net/ipv4: Remove useless proto field setting in ipv4 header
      net/ipv4: Remove ifdefs and use IS_ENABLED instead
      net/ipv4: Remove useless return value
      net/icmpv4: Use generic IPv4 relevantly
      net/icmpv4: Checksum is always set to 0 prior to being calculated
      net/icmpv4: src ll address does not need to be set
      net/icmpv4: Rename static function with icmpv4_ prefix
      drivers/ieee802154: Fix settings channel/tx power in uart pipe driver
      net/ethernet: A device driver api uses struct device *dev
      net/ethernet: Pre-assigned declaration always comes first
      net/dhcpv4: Move definitions to header
      net/dhcpv4: Rename functions to follow domain related naming rules
      net/dhcpv4: Reorder variable declaration
      net/dhcpv4: Reuse generic IPv4 function relevantly
      net/dhcpv4: Tiny style fixes
      net/dhcpv4: Cleanup debug messages
      net/dhcpv4: Unify timeout management in a unique k_delayed_work
      net/ethernet: Add a way to configure MAC address filters into devices

Tomasz Gorochowik (55):
      menuconfig: Fix searching for nonexistent objects
      arch: arm: atmel_sam: Use a single RAM region when possible
      arch: arm: atmel_sam: Map the whole RAM in MPU
      drivers: eth: gmac: Fix cache support for SAM GMAC
      drivers: eth: gmac: Ensure caches are enabled before using them
      net: if: vlan: Implement packet priority to PCP conversion
      drivers: eth: gmac: Cast to type expected by HAL
      net: gptp: Fix sync follow up packets content
      net: gptp: Do not handle multiple pdelay requests at once
      net: gptp: Fix sync timestamp callback registration
      net: gptp: Use calculated neighbor ratios only once
      net: gptp: Fix validation of non-numeric inputs from net shell
      net: gptp: Fix gptp port number validation
      net: gptp: Drop the older pdelay req after receiving a new one
      net: if: Fix TX timestamp callbacks invocation
      net: gptp: Fix memcpy calls on arrays
      net: gptp: Normalize seconds and nanoseconds differences
      net: gptp: Send Announce messages with correct GM info
      net: ethernet: Add 802.1Qav settings to eth mgmt api
      tests: net: Add 802.1Qav test
      net: eth: mgmt: Minor formatting fix
      net: eth: Add API callback to get hw configuration
      net: eth: mgmt: Extend the management interface with a getter
      tests: net: ethernet_mgmt: Test the new get_config callback
      drivers: eth: gmac: Restore original frags data after transmitting
      drivers: eth: gmac: Enable gPTP support
      drivers: eth: gmac: Use correct iface for gPTP over VLAN
      drivers: eth: gmac: Disallow drastic rate changes
      drivers: eth: gmac: Fix ptp clock rate re-calculation
      ext: Atmel ASF: Add missing interrupt number definitions
      drivers: eth: gmac: Add support for multiple hardware queues
      drivers: eth: gmac: Minor reformatting
      drivers: eth: gmac: rework timestamping
      ext: hal: atmel: sam: Add README for Atmel SAM E70 HAL
      drivers: eth: gmac: Implement the get_config callback
      drivers: eth: gmac: Enable 802.1Qav support
      net: eth: mgmt: Add Qav status hooks
      tests: net: ethernet_mgmt: Add Qav status tests
      drivers: eth: gmac: Implement Qav status callbacks
      net: shell: print info about priority queues
      net: eth: mgmt: Merge 802.1Qav related mgmt requests
      drivers: eth: gmac: Don't verify RX buffers count for unit tests
      net: tc: Fix priority to traffic class mappings
      net: tc: Add other priority to traffic class mappings
      tests: net: Add new TC mappings testcases
      net: ip: Fix net priorities definitions
      net: eth: mgmt: Add remaining 802.1Qav parameter types
      tests: net: ethernet_mgmt: Improve and finish Qav testing
      drivers: eth: gmac: Fix idle slope setting
      drivers: eth: gmac: Do not implicitly enable Qav
      drivers: eth: gmac: Prefer routing packets based on TC
      drivers: eth: gmac: Finish 802.1Qav support
      net: Fix credit-based shaper typos
      drivers: eth: gmac: Don't use Qav code without priority queues
      tests: net: ethernet_mgmt: Don't recalculate deltaBW with no link

Torsten Rasmussen (3):
      cmake: Removing the need for always rebuild
      cmake: Update to dependency handling for syscalls.json
      cmake: Using symlinks on unix like os'es for dependencies

Ulf Magnusson (112):
      doc: Makefile: Remove CONFIG_SHELL assignment
      doc: Makefile: Remove the 'doxy-code' target
      doc: Makefile: Remove the 'prep' target
      doc: Makefile: Lowercase internal Make variables
      doc: Makefile: Remove latex_paper_size (PAPER) option
      kconfiglib: Update to add list of choices
      genrest: Generate documentation and links for choices
      scripts: kconfig: Improve the 'user value != actual value' warning
      net: Remove redundant NETWORKING dependency
      tests: Do not build arm_irq_vector_table .config's for ARC
      samples: bluetooth: Fix microbit/nrf5 UART flow control assignments
      scripts: kconfig: Turn most warnings into errors
      scripts: kconfig: Disable the ""FOO set more than once"" warning
      arch: arc: Fix reference to removed NSIM Kconfig symbol
      lib: Fix malformed JSON_LIBARY Kconfig default
      net: rpl: Fix malformed Kconfig default
      ext: lib: mgmt: Remove MDLOG Kconfig reference
      kconfig: Remove UART_QMSI_{0,1}_NAME Kconfig reference
      drivers: ieee802154: Remove GPIO_MCUX_PORT{A,B}_NAME Kconfig references
      drivers: gpio: Fix GPIO_QMSI_{0,1}_NAME Kconfig references
      drivers: sensors: Consistently quote ""GPIO_0"" string default
      drivers: Replace ff hex constants with 0xff
      kconfiglib: Fix incorrectly ordered props. for some multi.def symbols
      drivers: serial: Remove SOC_NRF52810 Kconfig reference
      kconfig: Fail in CI if Kconfig files reference undefined symbols
      scripts: kconfig: Extend the assignment-failed warning
      kconfiglib: Correctly report choice locations in some warnings
      menuconfig: Allow searches from the info dialog and vice versa
      ext: Kconfig: Remove redundant 'default n' properties
      drivers: spi: Fix SPI_2_NRF_SPIS-related dependency loop
      kconfiglib: Add dependency loop detection
      misc: kconfig: Remove redundant 'default n' properties
      dts: kconfig: Remove redundant 'default n' properties
      tests: kconfig: Remove redundant 'default n' properties
      lib: kconfig: Remove redundant 'default n' properties
      kernel: Kconfig: Remove redundant 'default n' properties
      kconfiglib: Update to use redesigned 'referenced' API
      genrest: Mention implicit default values
      arch/Kconfig: Remove redundant 'default n' properties
      arch: x86: Kconfig: Remove redundant 'default n' properties
      arch: riscv32: Kconfig: Remove redundant 'default n' properties
      arch: nios: Kconfig: Remove redundant 'default n' properties
      arch: xtensa: Kconfig: Remove redundant 'default n' properties
      arch: arc: Kconfig: Remove redundant 'default n' properties
      arch: arm: Kconfig: Remove redundant 'default n' properties
      kconfig: Stop whitelisting ""undefined symbol SSE"" warning
      check-compliance: Fix list_undef_kconfig_refs.py for external projects
      boards: Kconfig: Remove redundant 'default n' properties
      drivers: sensor: Kconfig: Remove redundant 'default n' properties
      scripts: kconfig: Do not print warnings for choice overriding
      drivers: interrupt_controller: Remove redundant 'default n' properties
      drivers: grove: Kconfig: Remove redundant 'default n' properties
      drivers: rtc: Kconfig: Remove redundant 'default n' properties
      drivers: usb: Kconfig: Remove redundant 'default n' properties
      drivers: led: Kconfig: Remove redundant 'default n' properties
      drivers: pinmux: Kconfig: Remove redundant 'default n' properties
      drivers: counter: Kconfig: Remove redundant 'default n' properties
      drivers: net: Kconfig: Remove redundant 'default n' properties
      drivers: spi: Kconfig: Remove redundant 'default n' properties
      drivers: clock_control: Remove redundant 'default n' properties
      drivers: ethernet: Kconfig: Remove redundant 'default n' properties
      drivers: flash: Kconfig: Remove redundant 'default n' properties
      drivers: adc: Kconfig: Remove redundant 'default n' properties
      drivers: pwm: Kconfig: Remove redundant 'default n' properties
      drivers: watchdog: Kconfig: Remove redundant 'default n' properties
      drivers: can: Kconfig: Remove redundant 'default n' properties
      drivers: timer: Kconfig: Remove redundant 'default n' properties
      drivers: i2c: Kconfig: Remove redundant 'default n' properties
      drivers: gpio: Kconfig: Remove redundant 'default n' properties
      drivers: crypto: Kconfig: Remove redundant 'default n' properties
      drivers: ipm: Kconfig: Remove redundant 'default n' properties
      drivers: display: Kconfig: Remove redundant 'default n' properties
      drivers: dma: Kconfig: Remove redundant 'default n' properties
      drivers: pci: Kconfig: Remove redundant 'default n' properties
      drivers: ptp_clock: Kconfig: Remove redundant 'default n' properties
      drivers: bluetooth: Kconfig: Remove redundant 'default n' properties
      drivers: wifi: Kconfig: Remove redundant 'default n' properties
      drivers: ieee802154: Kconfig: Remove redundant 'default n' properties
      drivers: aio: Kconfig: Remove redundant 'default n' properties
      drivers: led_strip: Kconfig: Remove redundant 'default n' properties
      drivers: entropy: Kconfig: Remove redundant 'default n' properties
      drivers: i2c: Kconfig: Remove redundant 'default n' properties
      drivers: console: Kconfig: Remove redundant 'default n' properties
      boards: arduino_101_mcuboot: Remove Kconfig settings moved to DTS
      kconfiglib: Add preprocessor and two warnings
      arch: x86: Kconfig: Fix CACHE_LINE_SIZE default for CPU_ATOM
      subsys: kconfig: Remove 'default n' properties and clean up a bit
      kconfiglib: Fix paths for gsource'd files in the documentation
      net: ip: kconfig: Simplify NET_RX_STACK_RPL definition
      bluetooth: kconfig: Fix swapped 'range's on BT_RFCOMM_L2CAP_MTU
      scripts: kconfig: Handle warnings generated during evaluation
      Kconfig: Clean up some symbol definitions
      drivers/i2c: kconfig: Clean up I2C Kconfigs a bit
      cmake: kconfig: Fix rerunning cmake after Kconfig warnings
      cmake: kconfig: Fix broken menuconfig due to misspelling
      Kconfig: Use the first default with a satisfied condition
      Kconfig: Get rid of some leftover 'option env's
      Kconfig: Include Kconfig.zephyr last in sample Kconfig files
      Kconfig: Document the new prefer-earlier-defaults behavior
      Kconfig: Have CMake print a note about the changed 'default' behavior
      kconfiglib/menuconfig: Add functionality and improve symbol information
      genrest: Generate RST links in a less hacky way
      check-compliance: Simplify undefined Kconfig symbol check
      net: rpl: Kconfig: Fix 'Network type' choice default
      Kconfig: Switch to improved globbing statements
      Kconfig: Document new def_{int,hex,string} extensions
      Kconfig: Use a short, consistent style for prompts
      Kconfiglib: Fix $srctree behavior for the top-level Kconfig file
      check-compliance: Fix undef. Kconfig symbol check for external projects
      arch: arm: kconfig: Remove redundant FLOAT dependencies
      samples/net/lldp/Kconfig: Get rid of leftover 'option env'
      genrest: List symbols selected by each symbol

Vikrant More (22):
      samples: mesh/onoff-app: Enable persistent storage support
      Bluetooth: Mesh: Gen. OnOff, Gen. Level, Lighting & Vendor Models
      samples: mesh/onoff_level_lighting_vnd_app: States binding corrections
      samples: mesh/onoff_level_lighting_vnd_app: update publication context
      samples: mesh/onoff_level_lighting_vnd_app: update handlers mapping
      samples: mesh/onoff_level_lighting_vnd_app: fix bug in state binding
      samples: mesh/onoff_level_lighting_vnd_app: edited message handlers
      samples: mesh/onoff_level_lighting_vnd_app: Vendor Model upgrade
      samples: mesh/onoff_level_lighting_vnd_app: fix buffers length
      samples: mesh/onoff_level_lighting_vnd_app: corrected printk message
      samples: mesh/onoff_level_lighting_vnd_app: improved state binding
      samples: mesh: boards: nrf52: upgrade to pass PTS test
      samples: mesh: boards: nrf52: improved vendor model
      samples: mesh: improved code readability & remove redudancy
      samples: mesh: boards: nrf52: randomize publishers TID on boot
      samples: mesh: boards: nrf52: modifications as per 3.3.2.2.3
      samples: mesh: boards: nrf52: edit struct for gen. level
      samples: mesh: boards: nrf52: avoid responding to wrong messages
      samples: mesh: nrf52: upgrade state binding
      samples: mesh: nrf52: Time filtering, Coding style & others
      samples: mesh: nrf52: Transition Time support, Coding Style
      samples: mesh: nrf52 : to solve remaining PTS issues

Vinayak Kariappa Chettimada (16):
      Bluetooth: controller: Remove redundant include of cmsis.h
      Bluetooth: controller: Add Tx Power Kconfig option
      Bluetooth: controller: Fix to use max. tx power in DTM test mode
      soc: nRF52x: Add Kconfig options to enable DC/DC converter
      Bluetooth: controller: Remove include guards in internal files
      Bluetooth: Fix central from failing to start encryption
      Bluetooth: controller: Add support for the nRF52810
      Bluetooth: tests: exclude btshell/mesh_shell on NRF52810_PCA10040
      drivers: gpio: nrf5: Fix GPIOTE channel use overlap
      Bluetooth: controller: Update AA generation for Coded PHY support
      Bluetooth: controller: Fix HCI LE Set PHY command status response
      clock_control: nRF5x: Non-blocking 32KHz crystal oscillator startup
      clock_control: nRF5x: Fix HFSTAT and LFSTAT check
      Bluetooth: controller: Wait for stable k32src for connected roles
      drivers: entropy: nrf5: Fix ENTROPY_BUSYWAIT implementation
      Bluetooth: controller: Fix assert on different transaction collision

Vitor Massaru Iha (1):
      include: drivers: gpio: Turn functions generic - esp32

Walter Xie (2):
      net: add bound checking in net_addr_pton()
      cmake: Add ""gap-fill 0xFF"" option for CMAKE_OBJCOPY command.

Wayne Ren (13):
      arch: arc: add nsim support in soc
      boards: arc: add virtual board based on nsim
      drivers: serial: add virtual uart driver for nsim
      scripts: west: add nsim runner
      boards: arc: fix the wrong mpu configuration of nsim board
      dts: arc: fixes the warning msgs during cmake
      arch: arc: fix a bug in mpu driver
      arch: arc: stack check will be disabled in exception
      arch: arc: enable stack check when arc is in secure mode
      arch: arc: set the right init status for user space
      arch: arc: re-orgnize the code in _new_thread
      arch: arc: put the init context into privileged stack
      arch: arc: small optimization in mpu driver

Xuan Ze (2):
      doc: device: dts: Fix the error in the doc.
      net/mqtt: Fix function mqtt_parser

Yannis Damigos (10):
      dts/arm/st: Fix OTG_FS endpoint number for STM32F4 SoCs
      arch: stm32f0/f1/f3/l0: remove core zephyr header inclusions
      dts/arm/st: Fix I2C1 clock property
      dts/arm/st: Fix I2C3 clock property on L0 series
      dts/arm/st: Fix SPI1 clock property on F0 series
      dts/bindings/usb: Add yaml files for STM32 OTG HS
      dts/arm/st: Add OTG HS node to STM32 F4 and F7 series
      arch: stm32f4/f7: Add OTG HS defines to dts fixup file
      drivers: usb_dc_stm32: Add OTG HS full-speed PHY support
      arch: st_stm32: Fix IRQs number of various SoCs

Yasushi SHOJI (3):
      build: remove unused CMakeLists.txt
      include: remove unused macros from include/arch/*/arch.h
      doc: enhance cross compile section in getting started

Yong Jin (2):
      arch: arm: stm32: add basic support for STM32F769 SoC
      boards: arm: stm32: basic support for STM32F769I-DISCO board

Yurii Hamann (9):
      arch: arm: stm32: Basic STM32F7 family support
      drivers: clock_control: STM32F7 family clock control
      drivers: flash: stm32: STM32F7 flash memory suport
      drivers: gpio: stm32: STM32F7 GPIO support
      drivers: pinmux: stm32: STM32F7 pinmux support
      serial: stm32: STM32F7 UART support
      drivers: interrupt_controller: stm32: STM32F7 EXTI support
      arm: stm32: STM32F7 family device tree
      boards: arm: stm32: Basic support for STM32F746G-DISCO board

Zide Chen (3):
      ioapic: IOREGSEL register needs to be treated as 32 bits
      loapic timer: LVTT should be programmed before ICR
      kconfig: decouple realmode boot from CONFIG_JAIHOUSE

qianfan Zhao (16):
      nucleo_f070rb: Enable USART1 ports on nucleo_f070rb
      nucleo_f070rb: Add JLink tools for debug and download support
      doc: Introduct debugging and downloading using Jlink on stm32 boards
      arch: stm32: Enable HAS_SEGGER_RTT on all stm32 SoCs
      hal: stm32f2x: Add HAL for the STM32F2x series
      arm: stm32f2: Add support for stm32f2 series
      stm32f2: add stm32f207xg soc
      drivers: clock_control: Add support for stm32f2
      drivers: stm32-gpio: Provide GPIO driver for stm32f2
      driver: pinmux: Add pinmux driver for stm32f2
      driver: interrupt_controller: Add support for stm32f2
      driver: uart_stm32: add support for stm32f2 series
      boards: arm: add st nucleo-f207zg
      stm32f2: add stm32f207xe soc
      usb: set SN string descriptor at runtime
      arm: _FaultShow: fix typo MMFSR -> UFSR

ravishankar karkala Mallikarjunayya (1):
      samples/driver/gpio : Updated gpio support

```",59771425
1533,False,False,2018-06-11T16:55:10Z,2018-06-11T17:27:11Z,"We are pleased to announce the release of Zephyr kernel version 1.12.0.

Major enhancements with this release include:

- Asymmetric multiprocessing (AMP) via integration of OpenAMP
- Persistent storage support for Bluetooth Low Energy including Mesh
- 802.1Q - Virtual Local Area Network (VLAN) traffic on an Ethernet network
- Support multiple concurrent filesystem devices, partitions, and FS types
- Ethernet network management interface
- Networking traffic prioritization on a per-connection basis
- Support for Ethernet statistical counters
- Support for TAP net device on the the native POSIX port
- Command-line Zephyr meta-tool ""west""
- SPI slave support
- Runtime non-volatile configuration data storage system (settings)


The following sections provide detailed lists of changes by component.

# Security Vulnerability Related

* A suitably sized k_malloc() request can result in a smaller than
  requested buffer.  Use of that buffer could result in writes to
  unallocated memory.  Proper overflow checks were added to fix this
  issue in k_malloc and k_calloc.

  * kernel: mempool: Check for overflow in k_malloc()
  * kernel: mempool: Always check for overflow in k_calloc()
  * tests: mempool: Add overflow checks

# Kernel

* Added k_thread_foreach API
* kernel/sched: Fix preemption logic
* kernel/sched: Fix SMP scheduling
* kernel/sched: Don't preempt cooperative threads
* kernel: Scheduler rewrite
* kernel: Fix sloppy wait queue API
* kernel/mempool: Handle transient failure condition
* kernel: handle early entropy issues
* kernel: Earliest-deadline-first scheduling policy
* kernel: Add ""meta IRQ"" thread priorities
* kernel: introduce initial stack randomization
* k_poll: expose to user mode
* k_queue: allow user mode access via allocators
* mempool: add API for malloc semantics
* userspace: add support for dynamic kernel objects

# Architectures

* arch: arc: refactor the arc stack check support
* arch: arc: add the support of STACK_SENTINEL
* arch: arc: optimize the _SysFatalErrorHandler
* arch: arc: bug fixes in irq_load
* arch: arc: bug fixes and optimization in exception handling
* arch: arm: Fix zero interrupt latency priority level
* arch: arm: refactor default _FaultDump to provide fatal error code
* arch: arm: Define & implement API for test target (Non-Secure)
* arch: arm: thread built-in stack guard implementation
* arch: arm: lpc: Added support for Cortex-M0+ on lpc54114 soc
* arch: arm: Secure fault handling for Cortex-M23
* arch: arm: SecureFault Handling for Cortex-M33A
* arch: arm: Change method of __swap processing
* arm_mpu: reduce boot MPU regions for various soc
* arm: userspace: fix initial user sp location
* arm: userspace: Rework system call arguments
* arm: syscalls: fix some register issues
* dts: nios2-qemu: add device tree support
* dts: nios2f: Add device tree support
* dts: x86: derive RAM and ROM size from dts instead of Kconfig
* dts: xtensa: Add device tree support for xtensa
* newlib: fix heap user mode access for MPU devices
* nxp_imx/mcimx7_m4: Added support for i.MX7 Cortex M4 core
* x86: minnowboard: Enable the userspace mode
* arch: x86: Unwind the stack on fatal errors
* xtensa: provide XCC compiler support for Xtensa

# Boards

* Added support for the following Arm boards:

  * 96b_argonkey
  * adafruit_feather_m0_basic_proto
  * colibri_imx7d_m4
  * dragino_lsn50
  * lpcxpresso54114_m0
  * nrf51_ble400
  * nrf52_pca20020
  * nucleo_f070rb
  * nucleo_f446re
  * nucleo_l053r8
  * nucleo_l073rzA
  * olimex_stm32_h407
  * stm32f0_disco

* Added support for the following RISC-V boards:

  * hifive1

* Added support for the following Xtensa boards:

  * intel_s1000_crb

* arc: Added device tree support for all ARC SoCs
* arm: Renamed lpcxpresso54114 to lpcxpresso54114_m4
* nios2: Added device tree support for qemu_nios2 and altera_max10
* Continued adding dts support for device drivers (gpio, spi, i2c, sensors, usb)

# Drivers and Sensors

* can: Added CAN driver support for STM32 SoCs
* display: Added ILI9340 LCD display driver
* dma: Added dma driver for Nios-II MSGDMA core
* dma: Introduce Intel CAVS DMA
* ethernet: Added ethernet driver for native posix arch
* gpio: Added support for i.MX GPIO
* gpio: Added driver for SX1509B
* gpio: Added GPIO for SAM family
* gpio: Added GPIO driver for stm32l0x
* i2s: Introduce CAVS I2S
* ieee802154: Added OpenThread modifications to KW41Z driver
* interrupts: introduce CAVS interrupt logic
* interrupts: Introduce Designware interrupt controller
* ipm: Added mcux ipm driver for LPC SoCs
* led: Added new public API and driver support for TI LP3943
* pinmux: Added pinmux driver for stm32l0x
* rtc: Added mcux RTC driver for Kinetis SoCs
* sensor: Added sensorhub support to lsm6dsl driver
* sensor: Added trigger support to lsm6dsl
* serial: Added support for i.MX UART interface
* spi: Added shims for nrfx SPIS and SPIM drivers
* spi: Updated mcux shim driver to new SPI API
* spi: Updated sensor and radio drivers to new SPI API
* usb: Added usb device driver for Kinetis USBFSOTG controller
* usb: Added usb support for stml072/73, stm32f070/72
* usb: Enable usb2.0 on intel_s1000
* usb: Added nRF52840 USB Device Controller Driver
* watchdog: Added mcux watchdog driver for Kinetis SoCs
* watchdog: Added nrfx watchdog driver for NRF SoCs
* wifi: Added winc1500 WiFi driver

# Networking

* Minimal server side websocket support.
* Add network support to syslog.
* Reducing net_pkt RAM usage.
* TCP code refactoring. TCP code is now in one place in tcp.c
* Support MSG_DONTWAIT and MSG_PEEK in recvfrom() socket call.
* Support MSG_DONTWAIT in sendto() socket call.
* Add support for freeaddrinfo() API.
* Allow empty service in getaddrinfo() API.
* Add PRIORITY support to net_context. This is working same way as SO_PRIORITY
  in BSD sockets API.
* Add network traffic classification support to Rx and Tx paths. This allows
  prioritization of incoming or outgoing network traffic. Both Rx and Tx can
  have max 8 network queues.
* Add network interface up/down command to net-shell.
* Create ethernet driver for native_posix board. The driver is enabled
  automatically if networking is active when compiling for native_posix board.
* Support network packet checksum calculation offloading. This is available for
  ethernet based boards.
* Add support for ethernet virtual LANs (VLAN). Following ethernet drivers
  support VLANs: frdm_k64f, sam_e70_explained, native_posix and qemu.
* Allow network statistics collection / network interface.
* Add network management support to ethernet sub-system.
* Add network capabilities support to ethernet network drivers. This is used
  for management purposes.
* Allow collection of ethernet statistics. Currently only native_posix ethernet
  driver supports this.
* Add OpenThread support for KW41Z driver.
* Add initial WiFi management API definitions.
* Add a shell module for controlling WiFi devices.
* Add dedicated net mgmt hooks for WiFi offload devices.
* Use proper IPv4 source address when sending IPv4 packets.
* Add support for energy detection scan on IEEE 802.15.4 driver API.
* Add support for filtering source short IEEE 802.15.4 addresses.
* Add RPL border router sample application.
* LWM2M code refactoring.
* LWM2M OPTIONAL resource fixes.
* LWM2M source port fixes.
* LWM2M resource usage enhancements.
* Fixing network management event ordering.
* Fix ENC28J70 ethernet driver.
* CoAP sample application fixes.
* Network timeout fixes.
* ICMPv6 error check fixes.
* Net-app API port number fixes.
* WPAN USB driver and sample application fixes.
* BSD socket sample application fixes.
* Fix IPv4 echo-request (ping) in net-shell when having multiple network
  interfaces.
* Fixing IPv6 compile error in certain configuration.

# Bluetooth

* settings-based persistent storage functionality for BLE (including CCC) and
  Mesh
* Mesh-specific optimizations to avoid flash wear
* Added a new API to set the identity address from the application
* Old bt_storage API removed from the codebase
* Rewrote the HCI SPI driver to comply with the new API
* Added BLE support for the standard entropy driver via an ISR-friendly call
* Multiple BLE Mesh bugfixes and improvements
* Added option to use the identity address for advertising even when using
  privacy
* Added support for L2CAP dynamically allocated PSM values
* GATT CCC handling fixes
* GATT attribute declaration macros reworked for clarity
* Fixed handlng of connection cancellation in the controller
* Fixed a potential assertion failure in the controller related to white list
  handling

# Build and Infrastructure

* build: use git version and hash for boot banner
* kconfig: Drop support for CONFIG_TOOLCHAIN_VARIANT
* kconfig: Remove the C Kconfig implementation
* scripts: kconfig: Add a Python menuconfig implementation
* scripts: west: introduce common runner configuration
* scripts: debug, debugserver and flash scripts for intel_s1000
* xtensa: provide XCC compiler support for Xtensa

# Libraries / Subsystems

* subsys/disk: Added support for multiple disk interfaces
* subsys/fs: Added support for multiple instances of filesystem
* subsys/fs: Added Virtual File system Switch (VFS) support
* lib/posix: Added POSIX Mutex support
* lib/posix: Added POSIX semaphore support
* crypto: Updated mbedTLS to 2.9.0
* Imported libmetal and OpenAMP for IPC

# HALs

* altera: Add modular Scatter-Gather DMA HAL driver
* atmel: Added winc1500 driver from Atmel
* cmsis: Update ARM CMSIS headers to version 5.3.0
* nordic: Import SVD files for nRF5 SoCs
* nordic: Update nrfx to version 1.0.0
* nxp: imported i.MX7 FreeRTOS HAL
* nxp: Added dual core startup code for lpc54114 based on mcux 2.3.0
* stm32l0x: Add HAL for the STM32L0x series

# Documentation

* Added description for kernel test cases through extensive doxygen comments
* Discovered some API docs were missing, and fixed
* Documentation added covering system calls and userspace, kernel, and
  threading APIs, POSIX compability, VLANs, network traffic
  classification, and the sanitycheck script used by CI.
* Documented writing guidelines and local doc generation process
* Improved Sphinx search results output (removed markup)
* Improved configuration options auto-generated documentation
* Significantly reduced local doc regeneration time

# Tests and Samples

* Added test for POSIX mutex
* Added Apple iBeacon sample application
* Enhanced threads test suite
* Added tests for memory domain

# Issue Related Items

These GitHub issues were closed since the previous 1.11.0 tagged release:

* #1420 - LXR for Zephyr
* #1582 - USB: Add support for MS OS Descriptors
* #1620 - BT 4.2 Controller-based link-layer privacy
* #1651 - ARC: remove tickless idle dependency on SW ISR table
* #1655 - clean up how internal APIs are used
* #1799 - Provide an interface for cpu/soc id and version
* #1882 - SMP - Multi-core
* #1896 - Thread Protocol
* #2001 - Add support in I2C shim driver for DMA transfer mode
* #2002 - Add support in SPI shim driver for DMA transfer mode
* #2341 - Thread requirements in RFC1122
* #2342 - Thread requirements in RFC2460
* #2343 - Thread requirements in RFC4291
* #2344 - Thread requirements in RFC4443
* #2345 - Thread requirements in RFC4944
* #2346 - Thread Requirements on RFC6282
* #2360 - Review ALL device driver APIs and enhance them to support variety of devices and MCUs
* #2410 - Create APIs for app to create and mount FS
* #2446 - Different address used for advertising in non-connectable mode from oob data
* #2452 - Add framework for provisioning-style device configuration
* #2529 - GPIO API Update
* #2593 - Consider subdividing applications into different categories
* #2613 - Extend USB stack so it covers multiple device classes switchable on runtime
* #2654 - Encoding/Decoding Libraries
* #2860 - Customer: GUI for Zephyr configuration
* #2916 - event logger: context switch event is not supported at ARC
* #2977 - Install nSIM on CI machines
* #2978 - Add Support for Multiple Simultaneous Backends/Partitions for FS
* #2987 - Add support for computing IP, TCP, UDP checksums in hardware
* #3065 -  Asymmetric multiprocessing (AMP)
* #3152 - Support Atmel WINC1500 Wifi module
* #3167 - consolidate all quark se c1000 arc boards into one
* #3234 - 802.1Q - Virtual LANs
* #3282 - Quick Kernel Resume
* #3339 - IoTivity Import and Interoperability with CoAP and DTLS
* #3348 - Missing board documentation for arc/quark_se_c1000_ss_devboard
* #3369 - BSD Sockets API layer
* #3373 - Atmel board/ Driver Support
* #3384 - DataReady triggers failed to stop on BMI160 when both Accel/Gyro is enabled
* #3388 - Power management-Idle State
* #3389 - Power management-Device State
* #3433 - Nordic SPI driver
* #3471 - Espressif ESP Architecture Support
* #3479 - Implement complete set of stm32cube driver based on LL API for STM32 SoCs
* #3482 - Standardize stm32 SoCs porting
* #3500 - ESP8266 Architecture Configuration
* #3516 - Arduino 101 filesystem fails test
* #3624 - Memory protection: define allocators for kernel objects
* #3637 - Xtensa build is producing huge zephyr.bin
* #3650 - no board target for Risc-V Freedom E310 SOC
* #3703 - Doesn't compile if XCHAL_HAVE_ICACHE_DYN_WAYS and XCHAL_HAVE_DCACHE_DYN_WAYS are defined for an Xtensa processor
* #3711 - RPL root node Grounded flag should be followed by client node
* #3739 - linker: implement MPU alignment constraints
* #3744 - Improve configuration tools for Windows developers
* #3782 - SPI Slave support
* #3819 - Add 802.15.4 Sub-Ghz TI CC1200 driver
* #3824 - Add RPL border router functionality to Zephyr
* #3849 - Reduce the overall memory usage of the LwM2M library
* #3869 - Verify thath echo_server and echo_client examples work over Thread network
* #3910 - IEEE 802.15.4 MCR20A driver problem sending packets
* #3994 - Watchdog API update
* #4012 - echo_server with DTLS drops lots of packets on frdm_k64f
* #4052 - Coverity issue seen with CID: 177217 , in file: /tests/subsys/dfu/img_util/src/main.c
* #4053 - Coverity issue seen with CID: 177216 , in file: /tests/subsys/dfu/mcuboot/src/main.c
* #4066 - Function typedef issue when generating htmldocs.
* #4213 - samples/net/: unexpected communication happens between echo_client and echo_server sample applications
* #4217 - samples:net:sockets:echo_async : unexpected communication blocks between client and server after few packets transmission
* #4309 - xtensa: GDB: Unable to debug
* #4533 - IPv6/DAD: Things should be synchronized around net if up status and ipv6 addr add
* #4684 - mtls and tinycrypt crypto drivers not returning number of bytes written to output buffer
* #4713 - SPI: Update drivers to drop support of the legacy API
* #4959 - Failure to install on Mac OS High Sierra (return of the same error)
* #4963 - Convert NIOS2 boards to device tree
* #4964 - Convert ARC boards to device tree
* #5149 - Runtime non-volatile configuration system
* #5254 - missing test for kernel event logger
* #5274 - Issue with pinmux combination for FRDK-K64F setup for cc2520
* #5327 - 1.11 Release Checklist
* #5344 - samples/net/http_client: unable to send the proper http request to Apache server  in IPv6
* #5482 - net: RFC: Move TCP-related code from net_context.c to tcp.c
* #5554 - Support maintaining subsystems out-of-tree
* #5577 - Document interaction between mcuboot and Zephyr
* #5622 - Use the kconfiglib in scripts/kconfig for generating Kconfig documentation
* #5633 - Optimize the CMake configuration time by reducing the time spent testing the toolchain
* #5653 - STM32 boards: Generic guidelines for pin configuration
* #5658 - Clicking on intra-page links broken on docs.zephyrproject.org
* #5714 - 15.4 features required for OpenThread certification
* #5718 - sanitycheck doesn't work on Windows (mkfifo not supported)
* #5738 - [Coverity CID: 182194] Control flow issues in /subsys/storage/flash_map/flash_map.c
* #5739 - [Coverity CID: 182193] Control flow issues in /subsys/storage/flash_map/flash_map.c
* #5742 - [Coverity CID: 181921] Incorrect expression in /subsys/bluetooth/controller/ll_sw/ctrl.c
* #5757 - native: fix -T warning while linking
* #5767 - docs: Zephyr OpenOCD documentation is weak/non-existent
* #5797 - SPI subsystem API & features updates
* #5807 - Can't build Arduino_101 on Mac following instructions
* #5839 - SPI API improvements proposals
* #5847 - make menuconfig not supported on Windows
* #5891 - [Coverity CID: 182585] Integer handling issues in /arch/x86/core/thread.c
* #5892 - [Coverity CID: 182584] Integer handling issues in /kernel/sched.c
* #5942 - OT: add framing part to OT build for the radio drivers with dependence on AR flag
* #5953 - Build system: typedef not fit with zephyr type when CONFIG_NEWLIB_LIBC is enabled
* #5956 - samples/net/coap_server: Failed to send response to coap client
* #5978 - ""$ ninja kconfig-usage"" is out-of-date
* #6007 - native: Add support for TAP net device
* #6022 - Consistent feature dependency checks based on ARMvX-M
* #6029 - doc: Zephyr sphinx/pygments support DTS
* #6038 - Update Zephyr Licensing page
* #6093 - [Coverity CID: 182778] Error handling issues in /samples/net/sockets/dumb_http_server/src/socket_dumb_http.c
* #6094 - [Coverity CID: 182777] Error handling issues in /samples/net/sockets/dumb_http_server/src/socket_dumb_http.c
* #6095 - [Coverity CID: 182776] Uninitialized variables in /tests/net/socket/udp/src/main.c
* #6096 - [Coverity CID: 182775] Error handling issues in /tests/net/socket/udp/src/main.c
* #6097 - [Coverity CID: 182774] Resource leaks in /tests/net/socket/udp/src/main.c
* #6098 - [Coverity CID: 182773] Error handling issues in /samples/net/sockets/http_get/src/http_get.c
* #6099 - [Coverity CID: 182772] Error handling issues in /tests/net/socket/udp/src/main.c
* #6100 - [Coverity CID: 182771] Error handling issues in /samples/net/sockets/dumb_http_server/src/socket_dumb_http.c
* #6101 - [Coverity CID: 182770] Error handling issues in /samples/net/sockets/http_get/src/http_get.c
* #6103 - [Coverity CID: 182768] Error handling issues in /samples/net/sockets/dumb_http_server/src/socket_dumb_http.c
* #6104 - [Coverity CID: 182767] Error handling issues in /tests/net/socket/udp/src/main.c
* #6105 - [Coverity CID: 182766] Uninitialized variables in /tests/net/socket/udp/src/main.c
* #6106 - [Coverity CID: 182765] Error handling issues in /tests/net/socket/udp/src/main.c
* #6107 - [Coverity CID: 182764] Resource leaks in /tests/net/socket/udp/src/main.c
* #6108 - [Coverity CID: 182763] Uninitialized variables in /tests/net/socket/udp/src/main.c
* #6109 - [Coverity CID: 182762] Control flow issues in /subsys/storage/flash_map/flash_map.c
* #6230 - Bluetooth: controller: refactor to use min/max macro
* #6258 - [Coverity CID: 182894] Error handling issues in /samples/net/nats/src/main.c
* #6259 - [Coverity CID: 182892] Various in /tests/ztest/src/ztest.c
* #6260 - [Coverity CID: 182890] Null pointer dereferences in /tests/net/net_pkt/src/main.c
* #6262 - [Coverity CID: 182886] Error handling issues in /subsys/bluetooth/controller/hal/nrf5/ticker.c
* #6287 - runtime allocation of kernel objects
* #6288 - better heap APIs for user mode
* #6307 - Unaligned access in networking code causes unaligned exception on Nucleo-F429ZI
* #6338 - Bluetooth: mesh: Node Identity Advertising issue
* #6342 - echo server: incorrect Ethernet FCS and checksum in echo response when running in QEMU
* #6347 - dhcpv4_client sample on spi_api_rework branch with board olimexino_stm32 does not work well
* #6356 - samples/net/http_server causes an endless loop with wget
* #6370 - I can't find adc name which is f429zi board
* #6372 - ARMv8-M: implement & integrate SecureFault Handling
* #6384 - Native (POSIX) zephyr.exe command line options not documented
* #6388 - entropy_native_posix doesn't follow ""entropy"" contract and is thus security risk
* #6400 - samples/net/http_client: Failed to connect to samples/net/http_server
* #6413 - net_mgmt.h API event set data structure leads to undesirable behavior
* #6424 - tests/kernel/mem_protect/x86_mmu_api: crashes on Arduino_101
* #6450 - Several devices of same type on same bus - how to address?
* #6511 - simics/qemu_x86_nommu: testscases with CONFIG_BOOT_DELAY !=0 do not boot
* #6513 - arch: arc: the stack_sentinel is not supported in arc
* #6514 - samples/drivers/i2c_fujitsu_fram: Data comparison on data written and data read fails randomly
* #6515 - boards: em_starterkit:  the reset mechanism is not stable
* #6534 - coap-server: Canceling Observation not working
* #6559 - boards with i2c child nodes fail to build on windows
* #6564 - samples/net/echo_client: Failed to connect to samples/net/echo_server for IPV4 test
* #6565 - samples/net/sockets/echo: Failed to connect to samples/net/echo_server for IPV6 test
* #6577 - sam0: SPI CS released too early
* #6583 - samples/net/http_client: Failed to connect to
* #6588 - Traffic prioritization on per-connection basis
* #6594 - usb: replace ""unicode"" with ""utf16le""
* #6611 - Make sanitycheck run on Windows
* #6616 - Non-detected/delayed sanitycheck failures due to ROM/RAM overflow
* #6621 - newlib expects HEAP to be in CONFIG_SRAM_*, on arc there isn't always SRAM
* #6623 - Request to support Application's Kconfig tree
* #6625 - stm32: pwm: PWM 3 typo
* #6635 - tests/net/websocket/test doesnt build on qemu_xtensa
* #6640 - Ethernet network management interface additions
* #6643 - usb: nrf52 returns empty configuration responses
* #6644 - Bluetooth: Add reason parameter to L2CAP Channel disconnected callback
* #6646 - usb: protocol field in descriptor for CDC ACM should default to zero
* #6651 - sanity tries to compile things when it should not
* #6657 - Question: Is Bluetooth avrcp supported in Zephyr? Or any plan?
* #6660 - [Coverity CID: 183072] Incorrect expression in /tests/lib/c_lib/src/main.c
* #6661 - [Coverity CID: 183071] Incorrect expression in /tests/kernel/static_idt/src/static_idt.c
* #6662 - [Coverity CID: 183070] Uninitialized variables in /tests/posix/timer/src/posix_timer.c
* #6663 - [Coverity CID: 183068] Incorrect expression in /tests/kernel/fatal/src/main.c
* #6665 - [Coverity CID: 183067] Incorrect expression in /tests/lib/c_lib/src/main.c
* #6666 - [Coverity CID: 183066] Error handling issues in /tests/kernel/mbox/mbox_api/src/test_mbox_api.c
* #6667 - [Coverity CID: 183065] Integer handling issues in /tests/posix/timer/src/posix_timer.c
* #6668 - [Coverity CID: 183064] Incorrect expression in /tests/kernel/common/src/intmath.c
* #6669 - [Coverity CID: 183063] Null pointer dereferences in /tests/net/websocket/src/server.c
* #6670 - [Coverity CID: 183062] Error handling issues in /samples/net/sockets/big_http_download/src/big_http_download.c
* #6671 - [Coverity CID: 183061] Incorrect expression in /tests/kernel/mem_pool/mem_pool/src/main.c
* #6672 - [Coverity CID: 183060] Incorrect expression in /tests/kernel/fatal/src/main.c
* #6674 - [Coverity CID: 183058] Incorrect expression in /tests/kernel/static_idt/src/static_idt.c
* #6675 - [Coverity CID: 183057] Memory - illegal accesses in /subsys/net/lib/websocket/websocket.c
* #6677 - [Coverity CID: 183055] Concurrent data access violations in /kernel/posix/pthread.c
* #6679 - [Coverity CID: 183053] Memory - corruptions in /samples/net/ws_echo_server/src/ws.c
* #6680 - [Coverity CID: 183052] Memory - corruptions in /tests/net/app/src/main.c
* #6682 - [Coverity CID: 183050] Memory - illegal accesses in /subsys/net/lib/websocket/websocket.c
* #6683 - [Coverity CID: 183049] Incorrect expression in /tests/lib/c_lib/src/main.c
* #6684 - [Coverity CID: 183048] Program hangs in /tests/posix/pthread_rwlock/src/posix_rwlock.c
* #6685 - [Coverity CID: 183047] Uninitialized variables in /kernel/smp.c
* #6686 - [Coverity CID: 183046] Memory - corruptions in /drivers/console/uart_console.c
* #6687 - [Coverity CID: 183045] Error handling issues in /tests/drivers/spi/spi_loopback/src/spi.c
* #6688 - [Coverity CID: 183044] Memory - corruptions in /tests/net/app/src/main.c
* #6689 - [Coverity CID: 183043] Incorrect expression in /tests/kernel/common/src/intmath.c
* #6690 - [Coverity CID: 183042] Program hangs in /tests/posix/pthread_rwlock/src/posix_rwlock.c
* #6691 - [Coverity CID: 183041] Memory - corruptions in /tests/net/websocket/src/server.c
* #6692 - [Coverity CID: 183040] Incorrect expression in /tests/kernel/static_idt/src/static_idt.c
* #6693 - [Coverity CID: 183039] Error handling issues in /tests/kernel/mem_slab/mslab_threadsafe/src/test_mslab_threadsafe.c
* #6694 - [Coverity CID: 183038] Integer handling issues in /kernel/posix/timer.c
* #6697 - [Coverity CID: 183035] Null pointer dereferences in /tests/net/udp/src/main.c
* #6698 - [Coverity CID: 183034] Error handling issues in /tests/net/websocket/src/main.c
* #6699 - [Coverity CID: 183033] Program hangs in /tests/posix/pthread_rwlock/src/posix_rwlock.c
* #6700 - [Coverity CID: 183032] Error handling issues in /tests/net/websocket/src/main.c
* #6701 - [Coverity CID: 183031] Error handling issues in /tests/posix/semaphore/src/sem.c
* #6702 - [Coverity CID: 183030] Memory - corruptions in /drivers/console/uart_console.c
* #6719 - compilation problems with posix/unistd.h
* #6726 - setting locale breaks MacOS X builds
* #6749 - kconfig: The error message is misleading when values are out-of-range
* #6755 - stm32: Compile error if 2-nd UART console enabled
* #6757 - kernel:the API of k_mem_pool_alloc need try again to -EAGAIN[bug]
* #6759 - sanitycheck in shippable states faillure but reports 0 errors
* #6764 - ARC EMSK dts enhancements
* #6779 - websocket API documentation missing
* #6792 - [Coverity CID: 183443] Memory - corruptions in /subsys/bluetooth/controller/ll_sw/ctrl.c
* #6793 - [Coverity CID: 183442] Null pointer dereferences in /subsys/net/ip/icmpv6.c
* #6802 - unexpected user mode stack overflows on ARM
* #6811 - Add ReST/Sphinx usage guide to our contributing documentation
* #6814 - user mode does not work with newlib
* #6821 - Simplify rendering of Kconfig variable doc
* #6822 - Document how to flash with openocd on windows
* #6831 - Update template docs with build example
* #6833 - Question: BLE 5.0 extended advertising feature support for HCI
* #6844 - Update Kconfiglib to improve generated documentation
* #6849 - Some Kconfig symbols select choice symbols, which is a no-op
* #6851 - 'make html' in doc/ fails with lexer.DtsLexer import error
* #6854 - 'make html' in doc/ gives an error if doc.log is missing or empty
* #6866 - build: requirements: No module named yaml and elftools
* #6874 - Not able to join OpenThread BorderRouter or a ot-ftd-cli network
* #6879 - Display symbols with multiple defs. with the right properties in the Kconfig documentation
* #6881 - [Coverity CID: 183487] Control flow issues in /subsys/net/ip/net_core.c
* #6882 - [Coverity CID: 183486] Null pointer dereferences in /tests/net/traffic_class/src/main.c
* #6883 - [Coverity CID: 183485] Memory - illegal accesses in /subsys/net/ip/net_tc.c
* #6884 - [Coverity CID: 183484] Null pointer dereferences in /tests/net/checksum_offload/src/main.c
* #6885 - [Coverity CID: 183482] Memory - illegal accesses in /subsys/net/ip/net_tc.c
* #6886 - [Coverity CID: 183481] Insecure data handling in /ext/lib/crypto/mbedtls/library/pkparse.c
* #6887 - [Coverity CID: 183480] Null pointer dereferences in /tests/net/checksum_offload/src/main.c
* #6888 - [Coverity CID: 183479] Insecure data handling in /ext/lib/crypto/mbedtls/library/pkparse.c
* #6889 - [Coverity CID: 183478] Error handling issues in /tests/net/ipv6/src/main.c
* #6890 - tests: kernel: arm_irq_vector_table: Usage fault on nrf52_pca10040
* #6891 - jlink flashing is broken in windows
* #6893 - http_client: Struct data is erased for no apparent reason
* #6896 - too many static MPU regions on many ARM targets
* #6897 - Can't build i586 on Mac following instructions
* #6899 - support Ethernet statistical counters
* #6902 - k_call_stacks_analyze needs to be reimplemented and optimized
* #6907 - driver_api structs should have all function pointers defined
* #6908 - shippable: console limit error (Console size exceeds 16 MB limit)
* #6909 - Number of regions in arm_core_mpu_buffer_validate() can overflow
* #6911 - xtools build hard-coded to use IAMCU compiler for all x86 targets
* #6912 - OS X: setup instructions are wrong
* #6929 - Make slab allocator work on user mode
* #6937 - Add option for configuring P0.9 and P0.10 as GPIO
* #6948 - Kconfig choice symbols could not be assigned in Kconfig.* files
* #6957 - NRF52840: I2C, SPI driver
* #6972 - RFC: kernel heap requests on behalf of syscalls
* #6973 - bad magic number in 'kconfiglib' error when generating docs
* #6978 - Fix issues with running Python's curses module on Windows
* #6980 - extended Advertising BLE-5
* #6983 - top level CMakeList.txt test if LINKER_SCRIPT points to existing file
* #6984 - include pthread in app -> compilation failed
* #6988 - test checksum_offload fail on native_posix
* #6992 - extern object declarations interfere with kernel object detection
* #6996 - buffer management issues with k_pipe syscalls
* #6997 - buffer management issues with k_msgq syscalls
* #7009 - LSM6DSL: Isse with spi_config
* #7020 - tests/kernel/smp: Test fails, scheduler schedules the threads on only one core
* #7022 - HTTP Server crashes on native posix
* #7026 - i2c based sensor test cases fails on arc core
* #7032 - Have Sphinx search display txt not ReST as results
* #7033 - tests:fp_sharing: Test takes almost an hour on frdm_k64f
* #7044 - Boot banner not correct for application builds outside of zephyr
* #7050 - tests: sys_mem_pool: Bus fault occurs on ARM boards (frdmk64f and nrf52840_pca10056)
* #7055 - tests: fatal: Stack protection fatal test fails on ARC core
* #7067 - scripts: extract_dts_includes: fails on multiple includes in yaml bindings file
* #7070 - lwm2m: possible buffer overflow in LwM2M engine debug output
* #7073 - Full persistent storage support for Bluetooth
* #7075 - No such file or directory: CMAKE_READELF: 'CMAKE_READELF-NOTFOUND'
* #7076 - NRF52840: I2C Sensor (SHT3XD) driver issue
* #7078 - [Coverity CID: 185286] Error handling issues in /subsys/settings/src/settings_store.c
* #7079 - [Coverity CID: 185285] Error handling issues in /subsys/settings/src/settings_fcb.c
* #7080 - [Coverity CID: 185284] Error handling issues in /subsys/settings/src/settings_fcb.c
* #7081 - [Coverity CID: 185283] Control flow issues in /subsys/fs/nffs_fs.c
* #7082 - [Coverity CID: 185282] Error handling issues in /subsys/settings/src/settings_init.c
* #7083 - [Coverity CID: 185281] Null pointer dereferences in /kernel/posix/mqueue.c
* #7084 - [Coverity CID: 185280] Error handling issues in /tests/posix/pthread_rwlock/src/posix_rwlock.c
* #7085 - [Coverity CID: 185279] Resource leaks in /tests/net/socket/getaddrinfo/src/main.c
* #7086 - [Coverity CID: 185278] Null pointer dereferences in /samples/net/coap_server/src/coap-server.c
* #7087 - [Coverity CID: 185277] Null pointer dereferences in /samples/net/coap_server/src/coap-server.c
* #7088 - [Coverity CID: 185276] Uninitialized variables in /tests/posix/posix_checks/src/posix_checks.c
* #7089 - [Coverity CID: 185275] Integer handling issues in /kernel/posix/pthread_common.c
* #7090 - [Coverity CID: 185274] Error handling issues in /subsys/settings/src/settings_store.c
* #7091 - [Coverity CID: 185273] Resource leaks in /tests/net/socket/getaddrinfo/src/main.c
* #7097 - doc build kconfig warning for XOROSHIRO_RANDOM_GENERATOR
* #7103 - Unpatched upstream vulnerabilities in mbedTLS
* #7107 - Crash while running echo_server with openthread
* #7115 - doc/subsystems/settings/settings.rst references non-existing variables
* #7127 - STM32 ethernet driver crashes without connected cable
* #7128 - msp uninitialized on reset leading to usage fault for non-XIP targets
* #7137 - I2C Driver does not compile for nrf5 boards
* #7144 - SDK Openocd stm32f4discovery.cfg is incorrect for new versions of the STM32F407G-DISC1
* #7146 - scripts/sanitycheck will delete any folder given to --outdir argument
* #7155 - DTS: qemu_x86.dts: Warning (unit_address_format): Node /flash@00001000 unit name should not have leading 0s
* #7159 - Kconfig.defconfig is undocumented and unclear
* #7170 - zassert: Confusing rules and actual usage for messages in zassert_*() calls
* #7172 - Mcr20a initialization crashes with frdm_k64f board
* #7184 - List of supported boards is incorrect when $BOARD_ROOT is set by user.
* #7186 - settings_load() never returns when called
* #7198 - sanitycheck issue w/ztest
* #7200 - Commit 'tests: kernel: mem_protect: tests for userspace mode' breaks scripts/sanitycheck
* #7207 - cmake fails when zephyr is used as submodule
* #7208 - ztest_test_fail() not failing?
* #7219 - printk output with gdbserver?
* #7227 - /subsys/storage/flash_map/flash_map_default.c missing declarations.
* #7236 - Sample Http_Client  is deprecated
* #7245 - EMSK 7d: can't build after 60ec8be309cb84d72c5fc61330abc968eb62333e
* #7246 - esp32 fails to build with xtensa-esp32-elf-gcc: error: unrecognized command line option '-no-pie'
* #7248 - i2c: Seems issue in dts
* #7249 - Arduino 101 / ARC:  tests/kernel/fifo/fifo_api/ fails after 3d9ba10b5c903265d870a9f24065340d93e7d465
* #7254 - [Coverity CID :185402] Code maintainability issues in /drivers/spi/spi_dw.c
* #7255 - [Coverity CID :185401] Integer handling issues in /drivers/spi/spi_mcux_dspi.c
* #7256 - [Coverity CID :185400] Null pointer dereferences in /drivers/spi/spi_dw.c
* #7257 - [Coverity CID :185399] Integer handling issues in /subsys/usb/usb_device.c
* #7258 - [Coverity CID :185398] Memory - corruptions in /samples/net/mbedtls_sslclient/src/mini_client.c
* #7259 - [Coverity CID :185397] Null pointer dereferences in /tests/net/ipv6_fragment/src/main.c
* #7260 - [Coverity CID :185395] Memory - corruptions in /samples/net/mbedtls_sslclient/src/mini_client.c
* #7261 - [Coverity CID :185394] Null pointer dereferences in /subsys/net/ip/l2/ethernet/arp.c
* #7262 - [Coverity CID :185393] Memory - illegal accesses in /drivers/interrupt_controller/plic_fe310.c
* #7263 - [Coverity CID :185392] Null pointer dereferences in /drivers/spi/spi_dw.c
* #7264 - [Coverity CID :185391] Incorrect expression in /tests/lib/rbtree/src/main.c
* #7266 - Zephyr's C Kconfig tools do not support <, <=, >, >=, due to being too old
* #7269 - /samples/net/http_client: Error using https in http_cliente sample
* #7280 - if we have two flash on board?
* #7285 - buffer management issues with k_stack syscalls
* #7287 - Git describe broken with older versions of Git
* #7308 - qemu_xtensa cannot be debugged with SDK
* #7309 - minnowboard DTS is not configured correctly
* #7311 - FCB: CRC write size in append_finish doesn't honor flash min write size
* #7327 - Interrupt stack is not initialized for Xtensa target
* #7329 - is there has anyone who having portting stm32f2?
* #7336 - USB DFU: this area can not be overwritten
* #7340 - DISCUSS: usb_device.c: If condition judgment
* #7342 - samples: net/dns_resolve does not build when activating dhcp
* #7349 - Add STM32L0 USB support
* #7364 - kernel crash: USB ECM: echo_server
* #7365 - net: Regression in multiple client connection handling with samples/net/sockets/dumb_http_server (QEMU/SLIP)
* #7377 - net: Regression in multiple client connection handling with samples/net/sockets/dumb_http_server (frdm_k64f/Ethernet)
* #7378 - TOCTOU in spi_transceive syscall handler
* #7379 - TOCTOU in adc_read() handler
* #7380 - dma_stm32f4x possible access out of bounds in start/stop handlers
* #7388 - nxp_mpu: suspicious ENDADDR_ROUND() macro
* #7389 - t1_adc108s102 buffer overflow due to chan->buf_idx growth
* #7412 - Mismatch between 'uint32_t' (and `off_t`) definitions in minimal libc and newlib
* #7434 - bluetooth: host: sample applications can't set BT address w/o using an FS
* #7437 - Zephyr's mailing list archives were hard to find
* #7442 - menuconfig should perform fuzzy string matching for symbols
* #7447 - net tests: valgrind detected issues
* #7452 - nRF52, NXP kinetis, ARM Beetle and  STM `MPU` option appear for every MPU-equipped device
* #7453 - Bluetooth mesh message context API needs to expose DST address of RX messages
* #7459 - net: Multiple inconsistent settings to configure TIME_WAIT delay in the IP stack
* #7460 - Unable to view PR #6391
* #7475 - LwM2M: UDP local port setting not obeyed, random port doesn't work
* #7478 - tests: valgrind detected issues
* #7480 - pthread_attr_init( ) does not conform to POSIX specification
* #7482 - [Coverity CID :185523]  Out-of-bounds read in lsm6dsl driver
* #7495 - cmake: extensions: ToolchainCapabilityDatabase.cmake parse error in shippable
* #7500 - DHCP: when CONFIG_NET_APP_MY_IPV4_ADDR is IP stack needs to rebind on DHCP aquire
* #7508 - [Coverity CID :185523] Memory - illegal accesses in /drivers/sensor/lsm6dsl/lsm6dsl.c
* #7511 - [Coverity CID :185391] Incorrect expression in /tests/lib/rbtree/src/main.c
* #7519 - Verify CODEOWNERS (not) including subfolders is intended
* #7521 - Website: git clone instructions refer to old (v1.10.0) tag
* #7536 - tests: kernel.timer: fails on riscv32
* #7541 - arm: struct k_thread->entry is overwritten once the thread is scheduled
* #7565 - zephyr_library_ifdef has unexpected behaviour
* #7569 - test: posix/pthread_rwlock
* #7608 - ARC objdump crash when creating zephyr.lst for one test
* #7610 - tests/lib/c_lib fails on native_posix on FC28
* #7613 - OTA:an issue about OTA/mcumgr
* #7644 - k_mem_slab_free triggers rescheduling even when no threads are pending
* #7651 - nRF5x console broken
* #7655 - Invalid argument passed to k_sleep
* #7656 - Invalid argument passed to k_sleep
* #7657 - Invalid argument passed to k_sleep
* #7661 - LwM2M error: invisible error during registration
* #7663 - Sample ipsp: bluetooth: not functional on disco_l475_iot1
* #7666 - NVS API documentation is missing
* #7671 - NVS broken for write-align > 4
* #7673 - Eliminate recursive make in OpenAMP integration
* #7676 - buildsystem: 'make flash' failed
* #7677 - mcuboot-master imgtool.py sign error
* #7692 - Kernel tests failing at runtime on frdm_k64f
* #7694 - Have RTC binding for QMSI utilize base rtc.yaml
* #7698 - Kernel tests failing at runtime on frdm_kw41z
* #7699 - drivers: i2s: intel_s1000: I2S BCLK cannot be a fraction of reference clock
* #7704 - nrf52_pca10040:tests/bluetooth/init/test_controller_dbg fails build with CONFIG_USERSPACE=y
* #7709 - native_posix: hello_world fails to link on Fedora 28
* #7712 - [Coverity CID :186063] Null pointer dereferences in /subsys/disk/disk_access.c
* #7713 - [Coverity CID :186062] Error handling issues in /samples/net/sockets/big_http_download/src/big_http_download.c
* #7714 - [Coverity CID :186061] Memory - corruptions in /drivers/usb/device/usb_dc_kinetis.c
* #7715 - [Coverity CID :186059] Memory - illegal accesses in /drivers/usb/device/usb_dc_kinetis.c
* #7716 - [Coverity CID :186058] Null pointer dereferences in /tests/kernel/fifo/fifo_timeout/src/main.c
* #7717 - [Coverity CID :186057] Memory - corruptions in /samples/net/rpl_border_router/src/coap.c
* #7718 - [Coverity CID :186056] Null pointer dereferences in /subsys/disk/disk_access.c
* #7719 - [Coverity CID :186055] Memory - corruptions in /drivers/usb/device/usb_dc_kinetis.c
* #7720 - [Coverity CID :186053] Code maintainability issues in /samples/net/rpl_border_router/src/http.c
* #7721 - [Coverity CID :186051] Memory - illegal accesses in /drivers/usb/device/usb_dc_kinetis.c
* #7722 - [Coverity CID :186049] Memory - corruptions in /samples/subsys/mgmt/mcumgr/smp_svr/src/main.c
* #7723 - [Coverity CID :186048] Memory - illegal accesses in /drivers/usb/device/usb_dc_kinetis.c
* #7724 - [Coverity CID :186047] Null pointer dereferences in /tests/net/arp/src/main.c
* #7725 - [Coverity CID :186046] Memory - corruptions in /drivers/usb/device/usb_dc_kinetis.c
* #7726 - [Coverity CID :186045] Null pointer dereferences in /subsys/disk/disk_access.c
* #7727 - [Coverity CID :186044] Memory - illegal accesses in /drivers/usb/device/usb_dc_kinetis.c
* #7728 - [Coverity CID :186043] Incorrect expression in /tests/posix/fs/src/test_fs_dir.c
* #7729 - [Coverity CID :186042] Program hangs in /tests/posix/mutex/src/posix_mutex.c
* #7730 - [Coverity CID :186041] Memory - corruptions in /samples/net/rpl_border_router/src/http.c
* #7731 - [Coverity CID :186040] Resource leaks in /tests/posix/fs/src/test_fs_dir.c
* #7732 - [Coverity CID :186039] Control flow issues in /subsys/net/ip/connection.c
* #7733 - [Coverity CID :186037] Memory - corruptions in /lib/posix/fs.c
* #7734 - [Coverity CID :186036] Memory - corruptions in /drivers/usb/device/usb_dc_kinetis.c
* #7735 - [Coverity CID :186035] Incorrect expression in /drivers/ipm/ipm_mcux.c
* #7736 - [Coverity CID :186034] Memory - corruptions in /tests/net/udp/src/main.c
* #7737 - [Coverity CID :186033] Control flow issues in /subsys/mgmt/smp.c
* #7738 - [Coverity CID :186032] Memory - illegal accesses in /drivers/usb/device/usb_dc_kinetis.c
* #7739 - [Coverity CID :186030] Error handling issues in /subsys/bluetooth/host/settings.c
* #7740 - [Coverity CID :186029] Null pointer dereferences in /subsys/disk/disk_access.c
* #7741 - [Coverity CID :186028] Incorrect expression in /drivers/gpio/gpio_imx.c
* #7742 - [Coverity CID :186027] Null pointer dereferences in /subsys/disk/disk_access.c
* #7753 - security: ARM does not scrub registers when returning from system calls
* #7754 - tests/kernel/threads/lifecycle/thread_init register corruption on ARM with user mode enabled
* #7755 - getchar sample not working on nRF5x
* #7761 - ARM: failed syscalls do not report site of faulting syscall
* #7766 - tests/subsys/fs/fat_fs_api - fat_fs_basic_test hangs in fatfs_mount
* #7776 - possible unaligned memory access to struct _k_object's perms
* #7780 - Using latest Openthread in Zephyr
* #7782 - tests/kernel/mem_protect/stack_random hangs without any console output on frdm_k64f
* #7787 - tests: kernel: smp fatal exception observed on ESP32
* #7789 - Reset sequence broken on nRF5x chips
* #7793 - samples\sensor: bme280 and tmp112 hangs without any console output on quark_se_c1000_devboard
* #7795 - STM32 related Kconfig symbols don't exist anymore or aren't referenced anywhere
* #7797 - subsys/net/ip/Kconfig references NET_L2_OFFLOAD but that doesn't exist
* #7798 - nonexistent Kconfig symbol in defconfig arch/x86/soc/intel_quark/quark_x1000/Kconfig.defconfig.series
* #7799 - nonexistent Kconfig symbol in defconfig boards/x86/quark_se_c1000_devboard/Kconfig.defconfig
* #7802 - Add RTC support for all NXP MCUX platforms
* #7804 - samples/sensor/apds9960 fails with assertion ""Fatal fault in essential thread"" on quark_se_c1000_ss_devboard
* #7811 - CAVS Interrupt controller - using undefined Kconfig symbols
* #7812 - tests: Crypto tests fail on nrf52 boards after enabling user mode
* #7814 - networking - Cleanup undefined but referenced Kconfig
* #7815 - bluetooth - cleanup undefined Kconfig symbols
* #7819 - build breakage due to enabling USER_SPACE by default
* #7821 - net: Loopback broken: Packets sent locally to loopback address are now dropped
* #7858 - Test for k_thread_foreach() is failing on some boards
* #7862 - rpl_border_router sample bus_faults on frdm_k64f
* #7873 - cc2650_sensortag_defconfig assigned missing Kconfig symbols (now dead code)
* #7877 - tests: kernel/mem_protect/mem_protect is failed on nucleo_f429zi/disco_l475_iot1
* #7882 - tests/dfu/mcuboot.test_bank_erase fails on nrf52840_pca10056
* #7885 - em_starterkit_em7d_v22 failing multiple tests in user mode
* #7891 - tests/posix/timer.test_timer fails on nrf51_pca10028
* #7907 - tests/benchmarks/latency_measure fails on sam_e70_xplained
* #7927 - West runner command doesn't work for em-starterkit
* #7931 - Bluetooth controller nrf52 - connection event status
* #7933 - drivers: can: stm32_can: bitrate ignored
* #7942 - tests: benchmarks: build fail in arm/core/fault.c for frdm_k64f in footprint/min
* #7954 - make flash failing for altera_max10
* #7959 - shell: backspace doesn't work in minicom
* #7972 - Bluetooth: Mesh: adv bearer does not use correct interval
* #7974 - extract_dts_includes: Binding merge warning should be enhanced
* #7979 - drivers: dma: dma_cavs: DMA driver does not support per-channel callbacks
* #7989 - eth: ping: can't ping others from zephyr console
* #8005 - FRDM-K64F boot hang w/ mcuboot + lwm2m client
* #8009 - POSIX `clock_gettime()` is discontinuous
* #8015 - Driver:spi_flash_w25qxxdv.c init mistake and can not be erased
* #8032 - _SysFatalErrorHandler not working properly for arc on quark_se_c1000_ss_devboard
* #8033 - tests/crypto/mbedtls/ results in exception on frdm_k64f
* #8038 - tests/subsys/settings/fcb system.settings.fcb fails on nrf52
* #8049 - kernel: scheduler tries to make polling threads active
* #8054 - Ethernet initialization is unreliable and gets stuck on frdm-k64f
* #8062 - [Coverity CID :186196] Error handling issues in /samples/sensor/mcp9808/src/main.c
* #8063 - [Coverity CID :186190] Null pointer dereferences in /tests/kernel/fifo/fifo_timeout/src/main.c
* #8064 - arm: multiple MemManage status flags may be set simultaneously
* #8065 - tests/subsys/fs/fat_fs_api - test_fat_file and test_fat_dir results into Assertion failure on Arduino_101 due to spi_flash changes
* #8069 - mem_slab/mslab_threadsafe testcase fails in CI sporadically
* #8070 - table broken in S1000 documentation
* #8073 - Zero Latency IRQ masked by interrupt locking
* #8083 - Bluetooth ATT trying to access invalid pointer after disconnect
* #8085 - tests/subsys/logging/logger-hook crashes on sam_e70_explained
* #8086 - tests/net/ieee802154/crypto fails on Quark SE / x86
* #8087 - tests/misc/test_build fails to build on esp32
* #8088 - tests/kernel/xip fails on QEMU riscv32 with no output
* #8090 - tests/sched/schedule_api fails to build on EMSK7d
* #8092 - tests/kernel/fatal crashes on Quark SE / ARC
* #8093 - tests/kernel/common fails to build on xtensa / ESP32
* #8094 - tests/drivers/watchdog/wdt_basic_api fails to build on esp32 / xtensa
* #8096 - tests/drivers/watchdog/wdt_basic_api fails on Quark SE / ARC with no output
* #8098 - tests/drivers/rtc/rtc_basic_api fails on Quark SE / x86
* #8099 - tests/drivers/rtc/rtc_basic_api assertion failure on Arduino 101 / ARC
* #8111 - kconfiglib warning ""quotes recommended around default value for string symbol SOC_SERIES""
* #8117 - tests/kernel/errno crashes on minnowboard
* #8118 - x86 may expose private kernel data to user mode
* #8129 - scheduler: in update_cache() thread from next_up() and _current are the same
* #8132 - stm3210c_eval.dts_compiled: Warning
* #8142 - GPIO API not shown on docs.zephyrproject.org
* #8145 - samples/subsys/usb/dfu: Build failure, Reference to non-existent node or label ""slot0_partition""
* #8150 - Doc: Update Zephyr security overview
* #8171 - Tests failing with a stacking error on frdm_k64f
* #8172 - Networking tests failing with an assertion on frdm_k64f
* #8180 - objcopy bug？
* #8182 - Problem with obtaining hop_limit from a received packet
* #8189 - lwm2m: Quickly running out of resources when using observe
* #8192 - MPU Fault on some platforms after THREAD_MONITOR ""fix""
* #8193 - STM32 config BUILD_OUTPUT_HEX fail
* #8198 - Tests: fifo_timeout fails on nrf51_pca10028
* #8200 - Tests: arm_irq_vector_table: Assertion failure on nrf52840_pca10056
* #8202 - question: is the irq_lock is necessary in console_putchar
* #8213 - Failed test: usb.device.dfu.bank_erase
* #8214 - Failed test: kernel.threads.customdata_get_set_coop
* #8222 - tests/drivers/watchdog/wdt_basic_api crashes on multiple platforms
* #8232 - Failed test: kernel.memory_protection.create_new_essential_thread_from_user
* #8250 - UDP socket may lose data
* #8274 - Make flash doesn't work on nrf51_pca10028
* #8275 - when zephyr can support popular IDE develop?
* #8280 - [Coverity CID :186491] Memory - corruptions in /lib/posix/fs.c
* #8292 - Rework ARC exception stack
* #8298 - Failed test: kernel.alert.isr_alert_consumed (in tests/kernel/alert/) on quark_se_c1000_ss
* #8299 - Failed test: kernel.memory_pool.mpool_alloc_free_isr (in tests/kernel/mem_pool/mem_pool_api)
* #8302 - Failed test: peripheral.adc.adc on quark_se
* #8311 - tests/benchmarks/sys_kernel fails on frdm_k64f, sam_e70
",59771425
1534,False,True,2018-06-09T13:31:19Z,2018-06-09T13:38:21Z,"```
Adithya Baglody (8):
      benchmarks: object_footprint: Disable userspace for benchmarks
      benchmarks: app_kernel: Disable userspace for benchmarks
      benchmarks: latency_measure: Disable userspace for benchmarks
      benchmarks: boot_time: Disable userspace for benchmarks
      benchmarks: footprint: Disable userspace for benchmarks
      benchmarks: sys_kernel: Disable userspace for benchmarks
      benchmarks: timing_info: Disable userspace for benchmarks
      boards: common: bossac: Fix bossac flash script.

Alexander Wachter (1):
      drivers: can: Move bit timing and clock to device tree

Anas Nashif (12):
      ci: remove ext/ from coverage
      ci: increase ccache size
      tests: workqueue: fix doxygen group
      tests: mem_pool: organise test documentation
      tests: ieee802154/crypto: use console harness
      tests: remove obsolete k_thread_cancel
      samples: crypto: adapt harness
      tests: logger-hook: increase ztest stack size
      sanitycheck: export list of tests as CSV
      boards: make em_starterkit_em7d default test platform
      sanitycheck: fail on faults/panics/oopses
      tests: fix test identifiers

Andrei Emeltchenko (1):
      usb: cdc_acm: Set bInterfaceProtocol to No Protocol (0)

Andrew Boie (6):
      tests: mbedtls: don't use stdout console
      kernel: update stack macro documentation
      kernel: clarify thread->stack_info documentation
      tests: mem_protect: use better stack size arg
      x86: align stack buffer sizes
      kernel: move thread monitor init to common code

Andrzej Puzdrowski (3):
      tests: subsys: settings: fcb: Fix failure on nrf52_pca10040
      susbys: disk: Fix misleading menuconfig prompts
      subsys: mgmt: Remove unnecessary comparison

Andy Gross (3):
      doc: security: Update security overview for recent features
      doc: security: Remove revision history
      doc: relnotes: Add security vulnerability information

Andy Ross (9):
      kernel/sched: Fix SMP scheduling
      tests/kernel/smp: Properly synchronize CPU counters at test start
      esp32: Add some ""logging"" voodoo to SMP initialization
      tests/kernel/mem_slab: Fix memory overcommit
      kernel/sched: Fix preemption logic
      tests/kernel/mem_slab: Fix memory overcommit for real
      include/toolchain/gcc.h: Fix static assert detection
      tests/kernel/preempt: Add yield and sleep cases
      arch/arm: Fix THREAD_MONITOR entry struct

Armando Visconti (1):
      spi: spi_ll_stm32: (fix) Clear OVR bit condition

Carles Cufi (3):
      tests: arm: irq_vector_table: Fix Kconfig override
      doc: relnotes: Correct a couple of headline items
      doc: relnotes: 1.12 Bluetooth release notes

Daniele Biagetti (1):
      subsys: settings: Fix file exist error.

David B. Kinder (4):
      doc: fix broken table display
      doc: fix misspellings in docs
      releasenotes: update with doc issues addressed
      releasenotes: updated documentation changes

Erwan Gouriou (2):
      drivers/gpio: stm32 fix gpio device init prio
      arch: stm32: remove .hex binary build by default

Gil Pitney (1):
      arch: arm: soc: cc2650: Remove dead code.

Henrik Brix Andersen (1):
      doc: updated doc for Zephyr release 1.12.

Ioannis Glaropoulos (8):
      cmake: fix warning message
      arch: arm: use stored value for MMFAR
      arch: arm: force MpuFaultHandler to inspect multiple error conditions
      arch: arm: coding and comment style fixes
      arch: arm: enhance internal function documentation
      arch: arm: implement internal function to disable MPU region
      arch: arm: add additional sanity checks before MPU config change
      arch: arm: mpu: minor comment style fixes

Joakim Andersson (1):
      arch: arm: Fix zero interrupt latency priority level

Johan Hedberg (2):
      Bluetooth: Fix unchecked settings value lengths
      Bluetooth: Mesh: Fix (re)transmit interval handling

Johann Fischer (4):
      drivers: usb_dc_kinetis: fix usb_dc_ep_read_continue
      dts: nxp: fix typo in usbd bindings
      boards: frdm_k64f: add USB comment to documentation
      boards: usb_kw24d512: add USB comment to documentation

Johannes Hutter (1):
      doc: fix early closing of GPIO doxygen defgroup

Jukka Rissanen (7):
      doc: net: Add information about VLANs
      doc: net: Add information about network traffic classification
      tests: net: Increase the stack size of frdm-k64f
      tests: net: trickle: Fix running on frdm-k64f
      tests: net: Fix tests so they can be run in real hw
      net: ipv6: Set hop limit in net_pkt according to IPv6 header
      net: ipv4: Set TTL in net_pkt according to IPv4 header

Leandro Pereira (12):
      drivers: watchdog: esp32: Use common Kconfig option to disable at boot
      drivers: watchdog: Use common name configuration for all drivers
      tests: crypto: Fully initialize variables using named initializers
      kernel: k_work: k_work_init() should initialize all fields
      tests: mbox_api: Fully initialize k_box_msg struct
      samples: crypto: Ensure cap_flags is always initialized
      samples: drivers: crypto: Do not show colors in logs
      samples: drivers: crypto: Update expected sample output
      tests: kernel: fifo_timeout: Do not potentially dereference NULL ptrs
      samples: net: dumb_http_server: Handle recv() errors
      samples: net: rpl_border_router: Fix out-of-bounds write
      samples: net: hrpl_border_router: Fix NULL pointer dereference

Luiz Augusto von Dentz (1):
      Bluetooth: ATT: Fix clearing context at disconnect

Marti Bolivar (13):
      boards: intel_s1000: move runner config out of boards/common
      scripts: west: update to upstream 894aedbc0
      getting_started: fix UNIX-ism
      getting_started: fixes for intro section
      getting_started: fixes and cleanups for installation_linux
      getting_started: building: fix inaccuracies
      doc: extensions: fix :app: behavior for zephyr-app-commands
      doc: conf.py: remove unused import
      doc: conf.py: make sure west is importable from Python
      doc: conf.py: add sphinx.ext.autodoc extension
      doc: add initial west documentation
      conf.py: clean up exit if ZEPHYR_BASE is unset
      scripts: west: cherry-pick upstream 321ab2e17

Maureen Helm (3):
      nxp_imx: Move i.MX RT PLL selects to Kconfig.soc
      doc: release notes: Fill in summary, arch, and kernel sections for 1.12
      release: Move version to 1.12.0-rc3

Michael Scott (6):
      net: tc: dont yield during net_rc tx/rx workq init
      drivers: eth: mcux: use CONFIG_SYS_LOG_ETHERNET_LEVEL for syslog level
      kernel: thread: fix _THREAD_DUMMY check in _check_stack_sentinel()
      kernel: sched: use _is_thread_ready() in should_preempt()
      net: lwm2m: lower priority of engine thread
      net: lwm2m: fix observer attribute update logic

Nagaraj Hegde (1):
      tests: fifo_timeout : Dereference after null check

Paras Jain (2):
      samples: sensor : mcp9808: check return value
      lib: posix: fix out-of-bound write

Paul Sokolovsky (3):
      cmake: toolchain: Don't warn of both ZEPHYR_*_VARIANT envvars defined
      net: shell: Correct help text for ""mem"" command
      toolchain: gcc: Add compiler barrier at the end of UNALIGNED_PUT()

Piotr Mienkowski (1):
      api: watchdog: fix wdt_install_timeout doxygen comment

Piotr Zięcik (1):
      arm: userspace: Do not overwrite r7 during syscall.

Punit Vara (1):
      doc: Update doc for POSIX feature

Rajavardhan Gundi (2):
      release: Update release notes with CAVS ICTL info
      boards: intel_s1000: Fix runner invocation

Ramakrishna Pallala (4):
      dts: arc: Fix IRQ priorities for quark_se_c1000_ss
      tests: kernel: profiling: Fix _sys_soc_suspend logic
      lib: posix: Make sure the name string is NULL terminated
      lib: posix: clock: Use k_uptime_get() to compute tv_nsec

Ruslan Mstoi (1):
      drivers: eth: native_posix: Fix malformed echo response

Ryan QIAN (5):
      mimxrt1050: remove app specific code from soc file
      boards: mimxrt1050_evk: add condition to initialize different PLL
      boards: mimxrt1050_evk: move iomuxc to soc folder
      mimxrt1050: fix dcdc value change process
      mimxrt1050: check if D-cache is enabled before enabling it.

Sathish Kuttan (4):
      drivers: dma_cavs: separate callbacks per channel
      arch: xtensa: intel_s1000: Reference clock API
      drivers: i2s: intel_s1000: Fractional bit-clock
      arch: soc: intel_s1000: set M/N divider ownership

Satya Bhattacharya (1):
      samples: net: Check the return value of nats_publish

Spoorthi K (1):
      doc: Update release note for 1.12

Sritej Kanakadandi Venkata Rama (1):
      tests: posix: Function call return values need to be validated.

Tomasz Bursztyka (7):
      arch/x86: Rename a legacy network Kconfig option
      boards/x86: Removing undefined Kconfig symbol in quark_se_c1000_devboard
      drivers/flags: W25QXXDW internal erase logic fix
      net/ethernet: Fix ethernet net mgmt interface layer code
      drivers/rtc: Fix how prescaler is used in QMSI driver
      boards/x86: Use right GPIO names for CC2520
      arch/arc: Set the right priority for WDT on quark_se

Ulf Magnusson (1):
      genrest: Highlight Kconfig as Kconfig, not Python

Wayne Ren (12):
      arch: arc: fix the wrong setting of STACK_CHECK for user thread
      arch: arc: fix the bug in STACK_ARRAY defintion.
      tests: fixes for ARC
      tests: fixes for ARC
      tests: necessary fixes for ARC
      arch: arc: refactor the arc stack check support
      arch: arc: add comments for _load_stack_check_regs
      arch: arc: use a separate stack for exception handling
      tests: fix the bug of sentinel.conf
      arch: arc: STACK_CHECK_FAIL of STACK_CHECK not hang the system
      arch: arc: remove unused codes
      arch: arc: improve the reset code

qianfan Zhao (1):
      net: icmpv4: fix incorrect IP header checksum
```",59771425
1535,False,True,2018-05-29T23:17:40Z,2018-05-29T23:26:37Z,"```
Adithya Baglody (11):
      arch: arm: add_subdirectory shouldn't depend on a hidden kconfig.
      arch: arm: add_subdirectory shouldn't depend on a hidden kconfig.
      arch: arm/arc: Remove usage of zephyr_library_ifdef.
      boards: arm: cc2650: Remove CONFIG_FLASH from defconfig.
      boards: arm: cc3220sf: Remove CONFIG_FLASH from defconfig.
      boards: arm: msp_exp432p401r: Remove CONFIG_FLASH from defconfig.
      drivers: sensors: Remove usage of zephyr_library_ifdef
      drivers: flash: Remove usage of zephyr_library_ifdef
      drivers: serial: Remove usage of zephyr_library_ifdef
      drivers: entropy: Remove usage of zephyr_library_ifdef
      cmake: extensions: Remove macro zephyr_library_ifdef.

Alberto Escolar Piedras (1):
      native: ethernet: fix k_sleep() wait time

Anas Nashif (29):
      doxygen: reference requirements
      tests: semaphore: improve test documentation
      tests: alert: improve test documentation
      tests: fifo: improve test documentation
      tests: lifo: improve test documentation
      tests: msgq: improve test documentation
      kernel: add requirement Ids to implementation
      doc: build with CONFIG_USERSPACE enabled
      tests: pipe: improve test documentation
      tests: stack: improve test documentation
      sanitycheck: update script arguments
      sanitycheck: document --device-testing feature
      sanitycheck: improve help message
      tests: kernel: document thread tests for RTM
      doxygen: enable more option for docs
      doc: document kernel APIs with doxygen
      tests: threads: fold systemthread tests into main test
      tests: threads: fold customdata tests into main test
      tests: kernel: put all thread tests on one level
      doc: document thread options
      doc: add requirement IDs
      tests: critical: fix naming and comments
      tests: move schedule_api under sched/
      tests: schedule_api: fix references to tested APIs
      tests: schedule_api: change category to sched
      test: early_sleep: cleanup test
      tests: posix: rename entry file to main.c
      tests: kernel context: rewrite test to use ztest correctly
      tests: workqueue: add API references and doxygen group

Andrei Emeltchenko (7):
      usb: netusb: Add subsys/usb to include list
      usb: netusb: Use function - defined status callbacks
      usb: netusb: Implement status callback for ECM
      usb: netusb: Implement status callback for EEM
      usb: netusb: Implement status callback for RNDIS
      samples: echo_server: Remove conflicting option from conf file
      usb: netusb: Refactor function's status callbacks

Andrew Boie (24):
      tests: mem_protect: fix off-by-one
      elf_helper: fix member offset calculation
      test_build_sensors_a_m: disable app memory
      kernel: prepare threads after PRE_KERNEL*
      tests: fatal: fix several issues
      bluetooth: disable user mode for one test
      tests: enable user mode by default
      arm: syscalls: fix some register issues
      arm: userspace: fix initial user sp location
      scripts: generalize kobject -> enum naming
      kernel: remove STACK_ALIGN checks
      tests: footprint: only use user mode for max
      tests: crypto: disable user mode on 2 tests
      doc: update syscall docs to new handler APIs
      init: run kernel_arch_init() earlier
      kernel: handle early entropy issues
      tests: benchmarks: force assertions off
      build: suppress asserts warning if forced off
      debug: enable assertions for all tests
      sanitycheck: deprecate assertion options
      arm: st_stm32: reduce boot MPU regions
      arm_mpu: reduce boot MPU regions for various soc
      userspace: align _k_object to 4 bytes
      tests: enable HW stack protection by default

Andrzej Głąbek (1):
      drivers: serial: nrf: Fix interrupts enabling/disabling

Andy Ross (10):
      sanitycheck: Disable parallel builds with Ninja
      kernel/sched: Don't preempt cooperative threads
      kernel: Add ""meta IRQ"" thread priorities
      kernel: Earliest-deadline-first scheduling policy
      sanitycheck: Add support for _bt_settings_area linker section
      tests/lib/c_lib: Turn off too-clever compiler warning
      tests/kernel/common: Add rigorous integer typing test
      kernel: Remove legacy preemption checking
      tests/kernel: Add preemption priority test
      kernel/mempool: Handle transient failure condition

Anthony Kreft (2):
      arch: arm: STM32L053X8 support
      boards: arm: add support for NUCLEO-L053R8

Armando Visconti (1):
      spi: spi_ll_stm32: Fix transceive() ret value in spi_slave case

Asbjørn Sæbø (1):
      Bluetooth: GATT: Change attribute count from u16_t to size_t

Aurelien Jarno (15):
      arch: stm32l4: only enable USB OTG on SoCs supporting it
      arch: stm32l432: add support for USB controller
      ext: hal: stm32cube: fix stm32l4xx VDDUSB supply control
      drivers: usb_dc_stm32: enable VDDUSB on STM32L4x2
      boards: nucleo_l432kc: fix GPIO definitions
      subsys: fs/nvs: explicitly pad flash writes up to the write block size
      subsys: fs/nvs: never read more than the destination buffer
      subsys: fs/nvs: never write more than the source buffer
      subsys: fs/nvs: remove explicit padding from structures
      subsys: fs/nvs: kill a warning
      subsys: fs/nvs: do not assume the flash is mapped at address 0
      subsys: fs/nvs: fix _nvs_sector_is_used
      arch: arm: fix a typos in Kconfig file
      i2c: i2c_gpio: fix typos in Kconfig file
      arch: arm: select CPU_HAS_FPU on STM32L4 family

Bobby Noelte (2):
      scripts: extract_dts_includes.py: fix multiple include in bindings
      scripts: extract_dts_includes: fix recursion in extract_controller

Carles Cufi (7):
      arch: arm: swap: Remove old context switch code
      scripts: check-compliance: Allow to run from any path
      drivers: entropy: Introduce ISR-specific entropy function
      kernel: Use IS-specific entropy function when available
      drivers: entropy: nrf5: Implement standard ISR-specific call
      bluetooth: controller: Handle non-priority events correctly
      arch: arm: nordic: nrf52: Enable instruction cache

Daniel Egger (1):
      net: lwm2m: remove silent fail for bad endpoint data in rd_client

David B. Kinder (6):
      doc: CODEOWNERS for .rst files
      doc: fix misspellings in test documentation
      doc: fix misspellings in API doxygen comments
      doc: fix misspellings in Kconfig files
      doc: fix misspellings in docs
      doc: tweak CSS for option table display

David Brown (1):
      doc: Create a sensor threat model doc

Diego Sueiro (1):
      doc: i.MX7 updated doc for Zephyr release 1.12

Erwan Gouriou (9):
      boards: stm32_mini_a15: fix PLL source selection
      drivers: clock_control: remove reference unknown config flag
      drivers: clock_control: stm32: Remove unsupported clock configuration
      boards: disco_l475_iot1: Remove used pinmux configuration
      arch: stm32: Remove unsupported MPU options
      drivers/ethernet: stm32: Don't exit driver init on HAL timeout
      codeowner: Fix wildcard issue for arch/arm/soc/st_stm32/
      dts/bindings: Remove superfluous property definition
      arch: stm32: Fix inclusion of SPI headers

Gil Pitney (4):
      boards: cc3220sf_launchxl: Make cc3220sf XIP by default
      boards: cc3220sf_launchxl: Enable standard flash/debug build targets
      boards: cc3220sf_launchxl: Update board documentation for flash/debug
      boards: cc3220sf_launchxl: Fix documentation links

Ilya Tagunov (5):
      drivers: serial: stm32: remove HAL driver legacy
      drivers: serial: stm32: rework macros and fixups
      drivers: serial: stm32: enable LBD only for UARTs with LIN support
      drivers: serial: stm32: add LPUART support for L0/L4 series
      arch: arm: soc: stm32l0: add LPUART1 pinmux options

Inaky Perez-Gonzalez (1):
      tests: unfold nffs_fs_api

Ioannis Glaropoulos (8):
      misc: improve description of BOOTLOADER_SRAM_SIZE
      arch: arm: fix fault status register bitfield masks
      test: kernel: remove workaround for arm_mpu (keep for nxp_mpu)
      arch: arm: document non-returning fatal handlers
      arch: arm: refactor FAULT_DUMP to retrieve the fatal error reason
      arch: arm: refactor default _FaultDump to provide fatal error code
      arch: arm: remove redundant ifdef check
      arch: arm: fix undefined variable bug

Joakim Andersson (1):
      doc: Update description of BT_RECV_IS_RX_THREAD.

Johan Hedberg (3):
      Bluetooth: Mesh: Fix reference to CONFIG_BT_MESH_FRIEND
      Bluetooth: Remove references to non-existing Kconfig symbols
      Bluetooth: Mesh: Fix build error when LPN is not enabled

Johann Fischer (3):
      drivers: usb_dc_kinetis: fix out-of-bounds write/read
      net: rpl: fix null pointer dereference
      usb: function_eem: fix eem_read_cb

Jukka Rissanen (9):
      net: Too long timeout was passed to k_sleep
      samples: net: Fix VLAN tag name in prj.conf file
      tests: net: arp: Check NULL in unicast test
      samples: net: zperf: Remove config files for Galileo board
      net: Fix dependency to offload driver in Kconfig
      doc: Add networking information to 1.12 release note
      net: Too long timeout for k_sleep
      net: Convert MSEC_PER_SEC to K_SECONDS()
      net: Convert raw timeout values to use K_MSEC() macro

Jun Li (1):
      soc: stm32f1: add port uart4

Kumar Gala (43):
      arch: arm: kw41z: Set DTS fixup for CONFIG_RTC_0_NAME
      samples: xtensa_asm2: Cleanup stray IS_TEST reference
      tests: net: all: Fix COAP enablement in prj.conf
      drivers: net: loopback: Fix setting of SYS_LOG_LEVEL
      newlib: Fix typo in Kconfig related to NEWLIB_LIBC_ALIGNED_HEAP_SIZE
      arch: arm: atmel_sam: Add quotes to strings in Kconfig
      boards: arm: Remove nonexistent Kconfig symbols
      boards: arm: Fixup comment related to CONFIG_USB_DC_STM
      kernel: Fix trivial typo in CONFIG_WAIT_Q_FAST
      arch: arc: Fix typo in comment
      board: frdm_kl25z: Remove undefined Kconfig symbol from defconfig
      ext: simplelink: Fix minor typo in CONFIG_NUM_IRQs
      tests: kernel: timer: timer_api: Remove nonexistent config option
      samples: wifi: remove dead Kconfig symbol
      drivers: crypto_ataes132a: Fix typo in Kconfig symbol
      drivers: sensor: bmm150: Fix typo in Kconfig symbol
      arch: arm: thread.c: Fix typo in comment
      cmake: Remove dead logic related to CONFIG_DEBUG_SECTION_MISMATCH
      samples: net: zperf: Remove dead Kconfig symbol from galileo conf
      samples: board: 96b_argonkey: Remove dead code
      arch: arm: Fix typo in comment
      drivers: sensor: pms7003: Rename CONFIG_PMS7003_SERIAL_TIMEOUT
      usb: rndis: Rename CONFIG_RNDIS_TX_BUF_* and CONFIG_RNDIS_CMD_BUF_*
      arch: arc: userspace: Fix typo in comment
      drivers: pinmux: Remove dead logic
      arch: arm: nxp: Fixup HAS_MCUX_RTC
      ext: move libmetal to hal
      ext: libmetal: Update import of libmetal
      ext: libmetal: Change build integration so its not recursive
      ext: open-amp: move open-amp down one dir
      ext: open-amp: Update import of open-amp
      ext: open-amp: Change build integration so its not recursive
      boards: arm: lpcxpresso54114: Remove sample specific defconfig setting
      samples: openamp: Cleanup CMakeLists.txt files
      ext: hal: libmetal: Allow for libmetal source to be external
      ext: hal: open-amp: Allow for open-amp source to be external
      drivers: spi: remove dead references to CONFIG_SPI_QMSI{_SS}
      drivers: serial: uart_fe310: Match Kconfig defines in comment
      subsys: usb: Remove undefined CONFIG_USB_DEVICE_HID_BOOTP
      drivers: i2s: i2s_cavs: Fix typo in IRQ priority
      arch: arc: snps_emsk: Removed dead code
      samples: openamp: Update docs
      samples: openamp: add some comments to the code

Leandro Pereira (8):
      devices: entropy: Initialize drivers during PRE_KERNEL_1 stage
      subsys: random: xoroshiro128: Use SYS_INIT hook to initialize properly
      arch: x86: Rename MSR-handling functions to conform to convention
      kernel: init: Use entropy API directly to initialize stack canary
      arch: x86: Rename CPU_NO_SPECTRE to CPU_NO_SPECTRE_V2
      arch: x86: Allow disabling speculative store bypass
      boards: x86: minnowboard: Unset CONFIG_X86_NO_SPECTRE_V4 by default
      arch: x86: Better document that CR0.WP will also be set when CR0.PG is

Marti Bolivar (1):
      scripts: west: downgrade missing ZEPHYR_BASE to a warning

Maureen Helm (10):
      frdm_kl25z: Remove incorrect references to spi
      dts/nxp: Fix dtc v1.4.6 warning: Missing property '#clock-cells' in node
      dts/nxp: Fix dtc v1.4.6 warning: Aliases property name is not valid
      dts/nxp: Fix dtc v1.4.6 warning: Node has a reg but not unit name
      dts/nxp: Fix dtc v1.4.6 warning: Node has a unit name, but no reg prop
      gpio: Fix imx driver edge selection when configuring by port
      ext: lib: crypto: Update mbedTLS to 2.9.0
      ext: lib: crypto: Restore config macros removed in mbedTLS 2.9.0
      doc: release notes: Add details to various sections for 1.12 release
      release: Move version to 1.12.0-rc2

Michael Scott (1):
      net: lwm2m: dont release reply for duplicate block transfer

Neil Armstrong (1):
      spi: spi_ll_stm32: fix slave frame shifting

Paul Sokolovsky (1):
      samples: net: big_http_download: Ignore close() return value.

Punit Vara (7):
      tests: Remove newline character
      tests: mslab_threadsafe: Check for return value
      tests: semaphore: Check return value
      tests: spi: Check for return value
      dts: x86: Fix wrong interrupt number for I2C
      drivers: apds9960: Always default on I2C_0
      doc: Update doc for posix feature

Rajavardhan Gundi (1):
      kconfig: Define the IRQ priorities for CAVS & DW ICTL

Ramakrishna Pallala (6):
      tests: posix: Fix pthread attribute initialization
      subsys: disk: Fix NULL pointer checks for disk operations
      tests: posix: fs: Free dirp resource in case error
      tests: kernel: fifo: Do NULL pointer check before accessing data
      doc: updated doc for Zephyr release 1.12.
      subsys: disk: Fix log level issues

Ravi kumar Veeramally (5):
      net: coap: Fix CoAP observer helper function
      samples: net: Fix coap-server sample
      samples: net: Fix coap-client sample
      samples: net: Remove unwanted code from coap-server
      samples: net: rpl_br: Fix coverity issues

Ruslan Mstoi (1):
      net: conn: Fix is_invalid_packet

Savinay Dharmappa (4):
      doc: updated doc for Zephyr release 1.12.
      dts: xtensa: Fix build error due to dts changes for ns16550 driver.
      dts: intel_s1000: Enable generating IRQ priority.
      dts: intel_s1000: use dts to set i2c0 priority.

Sebastian Bøe (1):
      kconfig: Drop support for CONFIG_TOOLCHAIN_VARIANT

Spoorthi K (2):
      tests: kernel: Add description for test cases
      tests: posix: timer: Fix integer handling issues

Tomasz Bursztyka (7):
      dts/bindings: Make use of RTC base in QMSI bindings
      arch/arc: UART QMSI's baudrate is not present in Kconfig anymore
      drivers/flash: A support for SPI gpio-cs logic into w25qxxdv driver
      boards/x86: Fix support for w25qxxdv on arduino_101
      drivers/flash: Cleaning up Kconfig
      drivers/spi: Handle the case when tx buf/len is NULL/>0 in DW driver
      net/ieee802154: Security session must be initialized with a valid key

Ulf Magnusson (44):
      menuconfig/genrest: Exclude implicit submenus from menu paths
      genrest: Move from doc/scripts/genrest/ to doc/scripts/
      doc: Makefile: Use phony targets and remove unneeded prereqs
      samples: subsys: debug: Remove CONFIG_SEGGER_RTT assignment
      boards: arduino_101: Fix separated-line interrupt Kconfig setting
      tests: mqtt: Fix CONFIG_NET_BUF_DATA_SIZE assignments
      tests: net: Fix misspelled CONFIG_DNS_NUM_CONCUR_QUERIES assignments
      tests: drivers: build_all: Fix CONFIG_ETH_ENC28J60_0_MAC2 reference
      tests: Remove CONFIG_COMMAND_STACK_SIZE assignments
      samples: net: Remove undefined references to CONFIG_NET_LOG_ENABLED
      samples: net: mqtt: Remove CONFIG_BT_MAX_CMD_LEN assignment
      samples: grove: Remove CONFIG_GROVE_LCD_RGB_INIT_PRIORITY assignment
      samples: grove: Fix CONFIG_GROVE_TEMPERATURE_SENSOR_V1_X assignment
      gdb_server: Remove leftover testing and x86 parts
      boards: cc2650_sensortag: Remove Kconfig FLASH/SRAM address assignments
      samples: mcp9808: Fix CONFIG_MCP9808_TRIGGER_GLOBAL_THREAD assignment
      menuconfig: Add search and save/load improvements from upstream
      serial: nsim: Fix impossible-to-enable CONFIG_UART_NSIM
      tests: power: multicore: Remove CONFIG_UART_{0,1}=n assignments
      boards: exp432p401r_launchxl: Remove Flash base address Kconfig setting
      tests: adc_simple: Change ADC_DEBUG=y to SYS_LOG_ADC_LEVEL=4
      samples: hci_uart: Remove NRF5 Kconfig baud rate setting
      net: ieee802154: Remove old cc2520 AUTO_ACK assignments
      tests: net: all: Remove redundant/misspelled NET_RPL assignments
      tests: net: all: Fix assignments to old TIME_WAIT Kconfig symbols
      tests: net: all: Fix assignments to old nbuf API Kconfig symbols
      tests: net: all: Remove CONFIG_HTTP_HEADER_FIELD_ITEMS assignment
      boards: cc2650_sensortag: Remove TRNG and PINMUX prio Kconfig settings
      samples: bmm150: Remove assignment to missing CONFIG_BMM150_SET_ATTR
      samples: mbedTLS server: Remove CONFIG_NET_SLIP_TAP assignment
      soc: defconfig: Consistently quote string defaults
      boards: defconfig: Consistently quote string defaults
      soc: defconfig.series: Consistently quote string defaults
      soc: soc_family: Consistently quote string defaults
      Kconfiglib: Warn for unquoted string defaults
      samples: Quote BOARD value in custom board definition
      tests: net: all: Increase NET_MAX_CONTEXTS from 4 to 5
      menuconfig: Add show-name mode + small help dialog improvement
      tests: power states: Remove CONFIG_GPIO_QMSI_1_{NAME,PRI} assignments
      kconfig: Remove remaining 'option env' bounce symbols
      boards: arm: Remove CONFIG_{FLASH,SRAM}_BASE_ADDRESS assignments
      samples: hci_uart: Remove CONFIG_UART_NRF5_BAUD_RATE assignment
      boards: arm: argonkey: Properly set choice default
      tests: net: Fix assignments to CONFIG_NET_DEBUG_6LO

Wayne Ren (2):
      arch: arc: fix the bug in exception return for secure mode
      arch: arc: fix the bug in register clear for USER_SPACE

Yannis Damigos (1):
      boards: stm32f3_disco: Add usb_device to supported features

qianfan Zhao (2):
      eth_stm32_hal: fix dev_data->mac_addr typo
      uart_console: delete char using BS(08H) or DEL(7FH)

ruuddw (1):
      Fix struct offsets (DWARF v2 compatibility)
```",59771425
1536,False,True,2018-05-19T18:32:13Z,2018-05-19T18:45:27Z,"```
Aapo Vienamo (11):
      scripts: nrfjprog.py: Add --softreset switch
      dts: bindings: i2c: Add bindings for i2c_nrf5
      dts: arm: nrf5: Add i2c nodes
      boards: arm: nrf5: Enable i2c dts nodes for boards
      soc: nrf5: Use i2c configure options generated from dts
      gpio: Add a driver for SX1509B
      tests: drivers: build_all: Add SX1509 GPIO test
      sensors: ccs811: Deassert the reset pin with GPIO
      boards: Add support for nRF52 Thingy:52 (PCA20020)
      boards: arm: nrf52_pca20020: Add board documentation
      gpio: nrf5: Make the init priority configurable

Adithya Baglody (23):
      tests: mbox: mbox_api: Added required kconfigs to test obj tracing
      tests: mbox: mbox_api: Added new test cases.
      tests: mbox: mbox_api: Disable execution on RAM constrained devices.
      tests: Kconfig: Added a new kconfig.
      tests: kernel: pipe: Added new test cases for pipe.
      tests: kernel: pipe_api: Run test with userspace enabled.
      kernel: mem_domain: k_mem_partition is now placed in kernel memory.
      tests: kernel: semaphore: Added tests for semaphore.
      boards: sam_e70_xplained: Enable userspace
      tests: kernel: mem_protect: tests for userspace mode.
      x86: minnowboard: Add support for enabling MMU
      x86: linker: Maintain 4K alignment for application memory.
      x86: minnowboard: Enable the userspace mode
      soc: sam_e70: Mpu regions should include SRAM regions.
      cmake: extensions: Added a new macro zephyr_library_ifdef
      kernel: Cmake: Add __ZEPHYR_SUPERVISOR__ macro for kernel files.
      arch: Cmake: Add __ZEPHYR_SUPERVISOR__ macro for arch files.
      drivers: Cmake: Add __ZEPHYR_SUPERVISOR__ macro for driver files.
      tests: Kconfig: Added a new Kconfig for qemu_x86
      linker-defs: Increase the number of kernel objects
      kernel: thread: Move out the function _thread_entry() to lib
      tests: drivers: build_all: Ensure correct builds.
      tests: subsys: fs: Enable proper configuration for qemu_x86.

Ajay Kishore (2):
      tests: kernel: Add description for test cases
      tests: kernel: Add description for test cases

Alberto Escolar Piedras (7):
      entropy: nrf5x remove unnecessary header
      native: doc eth TAP: can only be compiled in Unix
      native doc: minor improvement in ethernet driver
      POSIX arch: Fix linker -T warning
      sanitycheck: Stop on linker warnings also in native_posix
      tests kernel pending: unitialized variable
      native: entropy: warn of security risk

Alexander Wachter (7):
      API: can: Add API for Controller Area Network driver
      drivers: can: Add Kconfig for CAN driver
      drivers: can: Add syscall handlers for CAN API
      drivers: can: Add dts bindings for CAN
      drivers: can: Add CAN driver support for STM32
      boards: stm: Add CAN support for stm32f072b micro controller
      samples: can: Add example code for CAN driver

Anas Nashif (113):
      doc: add test coverage and proposal policy
      lib: move ring_buffer Kconfig to lib/, cleanup lib/Kconfig
      kernel: smp: group SMP options in Kconfig file
      kernel: kconfig: reorg kernel Kconfig a bit
      debug: fix RTT console Kconfig
      Revert ""sanitycheck: Default to using Ninja""
      kernel: api: fix doxygen group ending
      doc: kernel: capitalize Fifo/Lifo
      doc: do not show undocumented members
      kernel: api: mark internal functions as such
      doc: http: add HTTP APIs to net group
      boards: delete arduino_101_ble board
      drivers: timer: remove unkown jira ID
      cleanup: replace old jira numbers with GH issues
      ci: update docker image
      samples: fix sample yaml file syntax
      tests: ztest: test_main takes no arguments
      scripts: cleanup scripts directory
      sanitycheck: do not always dump footprint statistics
      sanitycheck: do not call cmake twice on run
      sanitycheck: do not create overlays for filtered platforms
      sanitycheck: simplify logic of build_only/enable_slow checking
      sanitycheck: add option to list all available tags
      tests: context: rename main test
      tests: context: use ztest macros
      tests: mutex: rename main test function
      tests: rename test -> main.c
      tests: kernel: use a consistent test suite name
      tests: tags should not be required
      tests: add missing harness support
      tests: mbedtls_sslclient: fix filtering and default conf
      tests: enhance test filtering for net tests
      tests: mqtt: fix dependencies
      tests: xip: cleanup test
      tests: classify tests
      tests: posix: fix tags and sections
      tests: classify periphera tests
      qemu_xtensa: ignore net and bluetooth tests
      tests: classify net tests and cleanup
      tests: ipv6: cleanup tests
      tests: base64: do not exclude newlib
      tests: net: context: simplify filtering
      tests: cleanup meta-data of various tests
      boards: native_posix: mark netif as supported
      boards: fix yaml syntax and reduce indentation
      boards: reduce testing on the same platform with variations
      boards: test networking only in one qemu type
      samples: sample.yaml cleanup
      tests: cleanup subsystem tests meta-data
      samples: power_mgr: add harnesss configuration
      tests: net: checksum_offload: exclude native [REVERTME]
      build: use git version and hash for boot banner
      license: fix spdx identifier in a few files
      CODEOWNERS: update owners
      tests: kernel: style, tag, and category fixes
      tests: use consistent test function names
      tests: net: style, tag, and category fixes
      tests: crypto: style, tag, and category fixes
      tests: posix: style, tag, and category fixes
      tests: ztest: style, tag and category fixes
      tests: posix: mqueue remove extra printk
      tests: stackprot: move to ztest
      ztest: support skipping tests
      sanitycheck: parse test cases from source files
      tests: allow unsupported tests to be skipped
      sanitycheck: support listing test cases
      tests: fix meta data of peripheral tests
      tests: mem_prot: skip unsupported tests
      ztest: fix result checking
      build: simplify git describe call
      toolchain: update xtools config
      tests: irq_offload: document test functions
      tests: critical: document test functions
      tests: errno: document test functions
      tests: fixed doxygen comments
      samples: enhance integration sample and document it
      tests/samples: add hw dependencies
      samples: remove stray config
      tests: remove comma from whitelist
      tests: document skipping tests and listing them
      tests: enhance test meta-data/improve test naming
      tests: neighbor: use ztest asserts
      tests: http: call tests via ztest macro
      tests: ipv6: convert to ztest
      tests: flash_map: use proper test name
      tests: integration: do not run test on hw
      tests: remove duplicate tests
      tests: rename main test to main.c
      tests: fix doxygen comments
      tests: alert: add doxygen documentation
      doc: process test documentation
      CODEOWNERS: add more owners to tests/*
      CODEOWNERS: more fix and and updates
      sanitycheck: device handler, allow running tests on real hw
      sanitycheck: parse test results and create detailed report
      sanitycheck: cleanup handler class
      sanitycheck: simplify argument passing and use global options
      tests: remove dot after PASS|FAIL
      sanitycheck: do not count duplicate tests
      sanitycheck: support skipped tests, enhance device handler
      ci: remove pyserial install
      sanitycheck: we need pyserial for sanitycheck
      checkpatch: downgrade COMPLEX_MACRO to a warning
      tests: doxygen comment cleanup
      ci: use new docker file with new SDK
      CODEOWNERS: fix path syntax
      boards: frdm_kw41z: enable xoroshiro on board level only
      doc: update mac instructions
      samples: leds_demo: depend on netif and gpio
      boards: minnowboard: do not run net/bluetooth tests
      doc: Update Zephyr SDK version
      tests: common: fixed pointer formatting
      doc: tests: remove obsolete and bogus test groups

Andrei Emeltchenko (49):
      usb: cdc_acm: Fix typo
      usb: cdc_acm: Fix write when USB writes only chunk
      usb: cdc_acm: yield in the waiting loop
      Bluetooth: hci_usb: Simplify write function
      usb: Remove USB VID / PID for sanity check builds
      tests: Add USB HID composite test
      usb: hid: Fix setting report size for composite configuration
      usb: sample: Add support for composite configuration for HID
      usb: Add multifunction composite build test
      usb: Remove duplicated CDC_ECM_SUBCLASS definition
      usb: Remove duplicated ACM_SUBCLASS definition
      wpanusb: Assign USB Product ID to 802.15.4 over USB
      wpanusb: Remove unneeded configuration option
      wpanusb: Remove old hardcoded VID / PID
      wpanusb: Use DEBUG syslog level
      Bluetooth: hci_usb: Use USB Device defined VID / PID
      usb: dfu: Use USB Device defined VID / PID
      doc: usb: Move USB sections to USB Stack
      doc: Make code consistent lowering case
      doc: Add USB documentation identifiers and links
      usb: usb_dc_dw: Fix incorrect MPS return
      usb: Add BOS Descriptors
      usb: Add sys_cpu_to_le16() conversion for USB field
      usb: Add subsys/usb for device descriptor header
      usb: mass_storage: Use simpler header include
      usb: Add Bluetooth USB Device configuration options
      usb: Add Bluetooth device decriptors
      usb: Add Bluetooth device class core functionality
      usb: Use new USB Device interface for Bluetooth over USB sample
      usb: hci_usb: Fix test name
      usb: hci_usb: Correct README
      usb: wpanusb: Replace char array with structs for descriptor table
      usb: wpanusb: Replace local hexdump() with net_hexdump()
      usb: wpanusb: Clean up code
      usb: Remove unneeded header include
      usb: wpanusb: Remove unused headers
      usb: wpanusb: Remove unused packet handlers
      usb: wpanusb: Correct protocol description
      usb: wpanusb: Code cleanup
      samples: echo_server: Update prj_cc2520 configuration
      usb: wpanusb: Fix regression with putting LQI to wrong place
      usb: wpanusb: Make generic interface to raw 802.15.4 channel
      usb: wpanusb: Fix setting wrong length
      netusb: rndis: Add more debugs
      netusb: rndis: Fix RNDIS always disabled state
      usb: dw: Fix Coverity issue with get_mps()
      usb: webusb: Define and use MS descriptor structures
      usb: webusb: Use sizeof instead of magic numbers
      usb: webusb: Trivial cleanup

Andrew Boie (42):
      x86: fix logic for thread wrappers
      qemu_x86: enable CONFIG_DEBUG_INFO
      arch: add Kconfig for stack growth direction
      kernel: introduce initial stack randomization
      gen_syscalls.py: fix include issue
      gen_syscall_header.py: fix include issue
      mpu: arm: restrict access to PPB/IO regions
      cmake: qemu_x86: remove useless options
      tests: add tag for memory pool tests
      lib: user mode compatible mempools
      sys_mem_pool: add test case
      arm_mpu: fix _get_region_attr()
      kernel: restore stack size check
      userspace: add support for dynamic kernel objects
      kconfig: fix menuconfig
      slist: abstract node and list implementation
      pinmux: remove user mode access
      uart_qmsi: fix possible divide-by-zero
      ti_adc108s102: fix verification off-by-one
      ti_adc108s102: validate num_entries
      arm_mpu: fix off-by-one in mpu_buffer_validate
      x86: grant user mode access to newlib heap
      newlib: fix heap user mode access for MPU devices
      xtensa: fix CONFIG_INIT_STACKS for IRQ stack
      userspace: fix kobj detection declared extern
      list_gen: slist: mark some APIs are private
      sflist: slist-alike that stores flags
      mempool: add API for malloc semantics
      kernel: remove k_object_access_revoke() as syscall
      userspace: automatic resource release framework
      kernel: internal APIs for thread resource pools
      userspace: get dynamic objs from thread rsrc pools
      kernel: pipes: add k_pipe_alloc_init()
      kernel: add k_msgq_alloc_init()
      kernel: stacks: add k_stack_alloc() init
      userspace: generate list of kernel object sizes
      HACK: tests: disable output disasm for 1 ARC test
      k_queue: allow user mode access via allocators
      syscalls: remove policy from handler checks
      k_poll: expose to user mode
      spi_handlers: fix some build issues
      drivers: adc: fix TOCTOU attacks

Andrzej GÅ‚Ä…bek (14):
      usb: device: nrf5: Remove support for the ACCESSFAULT event
      ext: hal: nordic: Update nrfx to version 1.0.0
      ext: hal: nordic: Import SVD files for nRF5 SoCs
      drivers: spi: Add shim for nrfx SPI driver
      tests: spi_loopback: Add configurations for a few nRF5 boards
      hal: nordic: Move nrfx IRQ related stuff from SPI shim to nrfx_glue
      arch: nrf52: Correct the number of IRQs in nRF52840
      drivers: spi: Add shim for nrfx SPIM driver
      drivers: spi: Align nrfx_spi shim with the nrfx_spim one
      drivers: spi: Correct a typo in spi_nrfx_spi.c
      drivers: spi: Add shim for nrfx SPIS driver
      drivers: spi: Add missing periods in Kconfig.nrfx
      boards: 96_carbon_nrf51: Update SPI driver default configuration
      tests: net:  Make ""app"" tests dependent on netif

Andrzej Puzdrowski (20):
      samples: subsys: mgmt: mcumgr: Fix FS part of smp_svr example
      ext: nffs: update for enabling statistic
      subsys: fs: add NFFS rename API implementation
      subsys: Add a new settings subsystem
      doc: subsystem: settings subsystem doc
      ext: lib: tinycbor: fix Zephyr specific settings
      ext: lib: tinycbor: fix half-FP feature compilation
      net: l2: ethernet: fix kconfig
      susbsys: settings: fix coverity issues
      subsys: settings: fix fcb back-end initialization
      tests: subsys: settings: Add FCB-beckend initialization test
      subsys: fs: fix generic storage partition selection
      boards/arm/nrf52_blenano2: add storage flash partition
      subsys: fs: fcb: fix - crc write size not aligned
      smaples/mgmt/mcumgr/smp_svr: fix missing nffs.h header
      susbsys: settings: optimized fcb compression for deleted entry
      tests/subsys/settings/fcb: add deleted settings compression test
      doc/subsystem/settings: fix wrong settings_handler field names
      arch/arm/soc/nordic_nrf/nrf52: NFCT pins configuration
      boards/arm/nrf52xx_boards: makes GPIO_AS_PINRESET common

Andy Gross (15):
      arch: arm: Change method of __swap processing
      arm: userspace: Rework system call arguments
      makefile: Fix dependencies for privileged stacks
      subsys: debug: Fix stack sentinel dependencies
      tests: net: checksum_offload: Check for valid UDP_HDR
      tests: posix: Fix sigevent initialization
      tests: net: ipv6: Add assert for net_if_config_ipv6_get
      drivers: sensors: lsm6dsl: Fix array overrun
      tests: lib: rbtree: Clarify increment of variable
      rtc: Kconfig: Split off QMSI into separate Kconfig
      rtc: Add prescalar configuration option
      yaml: rtc: Add yaml definitions for RTC
      dts: nxp: kw41z: Fixup NXP Kinetis RTCs on KW41Z
      rtc: nxp: Add RTC driver for NXP Kinetis
      tests: rtc: Adjust RTC samples tests for NXP RTC

Andy Ross (34):
      xtensa, kernel/sched: Move next switch_handle selection to the scheduler
      kernel_event_logger: Ignore events before subsystem init
      kernel: Cleanup, unify _add_thread_to_ready_q() and _ready_thread()
      kernel/queue: Clean up scheduler API usage
      kernel/sched: Clean up docs for _pend_thread(), limit scope
      lib: Red/Black balanced tree data structure
      tests: rbtree test
      lib/rbtree: Add a rb_contains() predicate
      kernel: Allow pending w/o wait_q for scheduler API cleanup
      kernel: Scheduler refactoring: use _reschedule_*() always
      kernel: Refactor, unifying _pend_current_thread() + _Swap() idiom
      kernel: include cleanup
      kernel: Further unify _reschedule APIs
      kernel: Deprecate k_thread_cancel() API
      pthread: Respect cooperative thread schedulign in condition variable
      kernel/mutex: Clean up k_mutex_unlock()
      kernel: Clean up _unpend_thread() API
      kernel, posix: Move ready_one_thread() to scheduler
      kernel: Prune ksched.h of dead code
      kernel: Move SMP initialization to start of main thread
      kernel: Rework SMP irq_lock() compatibility layer
      lib: rbtree: Add RB_FOR_EACH macro for iterative enumeration
      kernel: Add _unpend_all convenience wrapper to scheduler API
      kernel: Fix sloppy wait queue API
      lib/rbtree: Fix crash condition with empty trees and rb_min/max()
      lib/rbtree: Fix & document insert comparison order
      kernel: Don't _arch_switch() to yourself
      kernel: Scheduler rewrite
      boards/qemu_x86: Enable fast scheduler options
      lib/rbtree:  Add RB_FOR_EACH_CONTAINER()
      kernel: Wait queues aren't dlists anymore
      samples/subsys/console: Remove unused tx_sem semaphore
      tests/kernel: Bump stack sizes for a few tests on qemu_x86
      lib/posix: Port wait_q usage to new API

Armando Visconti (18):
      drivers: pinmux: stm32f4: Added configuration macro for I2C2 on PB9
      boards: arm: Add support for 96Boards Argonkey Board
      boards: arm: argonkey: Add flashing section to documentation
      drivers: sensor: lsm6dsl: add SPI support
      sensors: Add separation between ambient and die temperature
      drivers: sensor: lsm6dsl: add trigger support
      tests: build_all: Add LPS22HB and LSM6DSL sensors build test
      drivers: sensor: lsm6dsl: Adding sensorhub support
      drivers: sensor: lsm6dsl: Fix typos
      drivers: sensor: lsm6dsl: add .attr_set callback
      sensor: vl53l0x: make xshut pin control optional
      boards: disco_l475_iot1: enable XSHUT master control
      sensors: hts221: Fix a crash due to bad device init
      boards: stm32: argonkey: Enable STM32 I2C interrupt support
      dts: bindings: Add SPI yaml file for LSM6DSL sensor
      boards: stm32: argonkey: Add dts support to sensors
      samples/boards: Add ArgonKey test
      board: argonkey: add LSM6DSL configuration in Kconfig.defconfig

Bobby Noelte (2):
      doc: sphinx: Add Pygment lexer for DTS
      scripts: extract_dts_includes.py: factorize globals for module usage

Carles Cufi (27):
      release: Post-release patch level update
      kconfig: Remove UTF-8 character from author's name
      drivers: entropy: Port the LL rand driver to entropy
      Bluetooth: Remove rand driver and use entropy instead
      arch: arm: nrf: Rename nrf5 SoC Family to nrf
      arch: arm: nrf: Rename common header to apply to all nRFx ICs
      arch: arm: nordic_nrf: Restore copyright years
      drivers: flash: nrf: Rename nrf5 to nrf
      lib: Add base64 library
      test: lib: base64: Add a base64 test
      mgmt: Switch to new base64 library
      lib: base64: Add statement of changes
      samples: mgmt: Remove unneeded DTC overlay
      samples: mgmt: Remove unnecessary mbedTLS reference
      doc; bluetooth: Rework and expand the Bluetooth doc
      doc: samples: hci_uart: Expand instructions for the Controller
      drivers: entropy: nrf5: Clarify Kconfig options
      doc: dts: Add reference to mcuboot flash partitions
      samples: hci_uart: Add references to sections
      doc: subsys: Add dfu and mgmt subsytem doc
      samples: mgmt: Expand smp_svr sample documentation
      doc: getting_started: Modernize macOS instructions
      doc: subsys: Remove unnecessary subsystem from titles
      boards: arm: nrf: Enable mcumgr UART
      samples: smp_svr: Rename conf file
      samples: smp_svr: Add sample.yaml
      drivers: serial: nrf: Fix is_pending handling

Dario Pennisi (2):
      net: Remove the need for an l2 on offloaded drivers
      drivers/wifi: Add winc1500 WiFi driver

David B. Kinder (20):
      doc: fix doxy syntax for hiding internal symbols
      doc: fix backslashes in doc
      doc: misspellings in public API doxygen comments
      doc: fix doc misspellings in doc, boards, samples
      doc: clean up QEMU networking doc
      doc: fix note for forcing a CI recheck
      doc: fix misspellings in Kconfig files
      doc: improve Sphinx search results output
      doc: fix links to mailing lists
      doc: update doc generation instructions
      doc: change https://zephyrproject.org/doc refs
      doc: DRAFT start for 1.12 release notes
      doc: flatten doxygen-generated HTML structure
      doc: fix misspellings in doc and Kconfig files
      doc: fix references to mailing lists
      doc: add doc writing guides w/common usages
      doc: add native posix command line help
      doc: fix missing NVS API documentation
      doc: fix missing networking API documentation
      doc: mark bt_test_cb API as not documented

David Leach (9):
      drivers: ieee802154: Add auto-ack support to KW41Z driver
      drivers: ieee802154: Add OpenThread modifications to KW41Z driver
      newlib: Fix compiler warning when using Newlib
      subsys: net: ip: l2: openthread: Fixed compiler errors and warnings
      OpenThread: Normalize IEEE802.15.4 driver name for use by L2 layers
      openthread: kw41z: Adding echo/server project config files for KW41Z OT
      drivers: entropy: Change KW41Z to use XOROSHIRO for RNG source
      samples/echo_server: Increased stack sizes for testing OT on kw41z
      OpenThread: Change SETTINGS_CONFIG_PAGE_SIZE to target specific value

David Maitland (1):
      Bluetooth: controller: Refactor to use max macro

Diego Sueiro (9):
      tests: add min_flash option for some tests
      ext/hal/nxp/imx: Import the nxp imx7 freertos bsp
      serial: Add imx uart driver shim
      arch: Add imx7d m4 soc support
      boards/arm: add support for colibri_imx7d_m4 board
      sanitycheck: add min_flash option for 32K devices
      arch: Add imx7d_m4 gpio definitions
      board: add gpio support for colibri_imx7d_m4 board
      doc: fix colibri_imx7d_m4 board documentation

Ding Tao (1):
      arch: arm: Fix coding style in file irq_relay.S

Endre Karlson (8):
      hal: stm32l0x: Add HAL for the STM32L0x series
      arm: stm32l0: Add support for stm32l0 soc
      dts: arm: provider support for the stm32l0
      drivers: clock_control: Provide support for stm32l0x
      drivers: gpio: Provide GPIO driver for stm32l0x
      driver: interrupt_controller: Add support for stm32l0x
      driver: pinmux: Add pinmux driver for stm32l0x
      boards: arm: Add Dragino LSN50 LoRA node

Erwan Gouriou (39):
      boards: nucleo_f412zg: Enable eth over USB as default net i/f
      boards: nucleo_l432kc: provide flash support
      scripts: extract_dts_include: convert inherited 'id' to 'node_type'
      doc: provide board porting guidelines
      arch/arm: stm32: All SoCs have dts for I2C and SPI
      script/extract_dts_includes: factorize call to upper()
      scripts: dts_extract_include: generate aliases defs
      dts: stm32: stm32f469 is a stm32f429 derivative
      dts: stm32: Populate gpio nodes for stm32f4 series
      dts: stm32: Populate gpio nodes for stm32f0 series
      dts: stm32: Populate gpio nodes for stm32f1 series
      dts: stm32: Populate gpio nodes for stm32f3 series
      dts: stm32: Populate gpio nodes for stm32l4 series
      dts: stm32: Populate gpio nodes for stm32l0 series
      arm: nucleo_f103rb: Do not enable PWM by default
      yaml: rename cell_string clocks
      dts: bindings: add bindings for stm32 gpio
      dts: provide yaml bindings for led and gpio keys
      dts: gpio: create gpio dt-bingings and inlude in stm32 dtsi files
      boards: stm32: add button and leds gpio definitions
      scripts: extract_dts_inlcudes: generate cells for gpio
      tests/net: utils: increase min RAM requirement to 24K
      scripts: extract_dts_inlcudes: look up compatible field in parents
      scripts: extract_dts_includes: generate controller #define's
      samples: Allow use of ""CONTROLLER"" postfix for LED and GPIO
      boards: stm32 remove led and button definitions from board.h
      drivers: clock_control: Add MSI as possible clock source for stm32
      boards: disco_l475_iot1: define 2 default clock configurations
      dts/st: dtc v1.4.6 warnings: #address-cells/#size-cells without ""ranges""
      dts/st: dtc v1.4.6 warnings: Missing property '#clock-cells' in node
      dts/st: dtc v1.4.6 warnings: pin-c... node has a reg ... no unit name
      scripts: extract_dts_includes: rename arguments for easier reading
      scripts: extract_dts_includes: Generate'_0' defines only when needed
      scripts: extract_dts_includes: remove prefix argument
      scripts: extract_includes_dts: Remove usage of cell_string yaml attribute
      arch: nxp dts bindings: Set IP clock name to matching clock controller
      dts/bindings: Add reset and irq gpios to ""st,spbtle-rf"" yaml
      boards: disco_l475_iot1/dts: add gpios in bt controller node
      drivers/dma: dma_stm32f4x: check stream id boundaries

Florian Vaussard (9):
      libc: minimal: fix fwrite()
      pwm: stm32: fix off-by-one on PWM period
      i2c: stm32: add support for I2C4
      pinmux: stm32l4: add I2C4 pinmux on PD12/PD13
      dts: stm32l4: add node and fixup for i2c4
      watchdog: iwdg: honor IWDG_STM32_START_AT_BOOT
      watchdog: stm32: fix style issue
      net: icmpv6: Fix error condition
      net: icmpv6: replace NET_ASSERT with NET_ERR

Gil Pitney (6):
      net: Don't call l2->enable for offload devices
      net: wifi: Add a wifi.h to hold WiFi definitions
      ext: hal: ti: simplelink: ensure ROM APIs used in board port file
      ext: hal: ti: simplelink: Add comments to CMakeLists.txt
      cc3220sf: soc: Update PRCM call to allow use of ROM API
      cc3220sf: Fix linker map and dtsi to ensure full 256K SRAM size

Henrik Brix Andersen (12):
      boards: Add support for the Adafruit Feather M0 Basic Proto.
      boards: adafruit_feather_m0_basic_proto: Disable legacy SPI API.
      tests: spi_loopback: Fix Arduino Zero SPI device name.
      boards: adafruit_feather_m0_basic_proto: Add USB device support.
      boards: arduino_zero: Fix SPI pinmux configuration.
      doc: Add Elixir cross-referencer to resources list
      doc: Fix SAM0 SPI controller device names
      drivers: flash: atmel sam0: Fix compilation without page layout support
      shell: kernel: Add reboot command
      samples: bluetooth: Add Apple iBeacon demo application
      samples: flash_shell: Use correct flash write block size
      build: fix git describe call on older Git versions

HÃ¥kon Ã˜ye Amundsen (4):
      boards: dts: Add i2c to nrf5X_pcaX board dts.
      drivers/spi: Fixed incorrect prompt.
      cmake: Fix printed list of supported boards.
      sanitycheck: Updated helptext to -O/--outdir argument.

Ilya Tagunov (14):
      boards: arm: enable CLOCK_STM32_HSE_BYPASS in Nucleo F0/F3 defconfigs
      arch: arm: soc: stm32l0: fix indentation and comments in Kconfigs
      arch: arm: soc: stm32l0: add STM32L073xZ SOC
      boards: arm: add NUCLEO-L073RZ board
      arch: arm: soc: stm32l0: add I2C support
      boards: arm: nucleo_l073rz: add I2C support
      boards: arm: improve Nucleo boards documentation formatting
      ext: hal: stm32l0xx: spi: remove offending cast
      arch: arm: soc: stm32l0: add I2C support
      boards: arm: nucleo_l073rz: add SPI support
      drivers: flash: stm32f0: remove CONFIG_FLASH_PAGE_SIZE
      drivers: uart: stm32: make comments and options less specific
      drivers: uart: stm32: improve STM32L0 support
      arch: arm: soc: stm32l0: fix port H EXTI

Inaky Perez-Gonzalez (4):
      tests/kernel/gen_isr_table: fix mispelled 'kerne'
      sanitycheck: refinements to --list-tests
      ztest: prints newline after failure message
      doc: document best practices for main.c suite declaration

Ioannis Glaropoulos (30):
      arch: arm: cmsis: cleanup cmsis.h and update error-code macros
      arch: arm: add missing floating-point fault logging
      arch: arm: ARMv7-M/ARMv8-M Mainline dependency for programmable prios
      arch: arm: define ARMv8-M Mainline K-option
      arch: arm: Stack Overflow Usage Fault log for ARMv8-M Mainline
      arch: arm: conditionally select FP extension in cortex-m MCUs
      arch: arm: remove redundant asm inline headers
      arch: arm: SecureFault Handling for Cortex-M33
      arch: arm: define the ARM_SECURE_FIRMWARE option
      arch: arm: SecureFault_IRQn for non-CMSIS-compliant MCUs
      tests: kernel: add Cortex-M33/M7 in list of MCUs
      drivers: timer: expose RTC1 ISR handler function
      tests: kernel: fix irq_vector_table test for nRF52X platforms
      arch: arm: clear BFSR sticky bits in ARMv8-M Mainline MCUs
      arch: arm: improve help text for PROGRAMMABLE_FAULT_PRIOS option
      arch: arm: set interrupt stack protection with MSPLIM
      arch: arm: ignore stack pointer limit checks during HF and NMI
      arch: arm: thread built-in stack guard implementation
      arch: arm: add synchronization point after Stack Pointer switch
      arch: arm: improve description of ARMV7_M_ARMV8_M_MAINLINE option
      arch: arm: feature consistency checks for Cortex M regs
      arch: arm: Secure fault handling for Cortex-M23
      arch: arm: fix bug in AIRCR config on init
      arch: arm: improve fault dump for secure firmware
      arch: arm: distinguish integrity signatures with/without FP
      arch: arm: fix SecureFault IRQn for non-CMSIS compliant MCUs
      arch: arm: Define & implement API for test target (Non-Secure)
      arch: arm:  select CPU_CORTEX_M_HAS_CMSE in ARMv8-m
      arch: arm: implement cmse address range check
      arch: arm: convenience wrappers for C variable permissions checks

Ismael Fillonneau (1):
      doc: fix mgmt sample path

IvÃ¡n SÃ¡nchez Ortega (11):
      usb: provide different USB product strings in the USB samples
      usb: Rename unicode into UTF16LE
      boards: Remove USB VID/PID from tinytile
      doc: Add 'apt-get install python3-wheel' to linux installation docs
      samples: usb: Make each sample have its own USB product string
      docs: group the GPIO_* flags into logical groups.
      doc: Fix path in documentation about uncrustify.cfg
      samples: usb: webusb: Prettify binary object store descriptor
      doc: Expand info about troubleshooting ModemManager
      samples: usb: webusb: Add MS-OS descriptors for compatible IDs
      samples: usb: webusb: Add MS OS v1.0 descriptors too

Jan Van Winkel (2):
      driver: ILI9340 LCD display driver
      driver: sample: ILI9340 sample application

Johan Hedberg (57):
      Bluetooth: Mesh: cfg_cli: Fix trying to write a NULL pointer
      Bluetooth: Mesh: cfg_cli: Fix possible race condition
      Bluetooth: Add option to force using identity address for advertising
      Bluetooth: Remove 'own_addr' from advertising parameters
      Bluetooth: Mesh: Introduce debug option to use identity address
      Bluetooth: Mesh: Fix possible NULL dereferences in client models
      Bluetooth: Mesh: Fix Node Identity advertising with PB-ADV
      tests: settings: Remove references to non-existent Kconfig variable
      Bluetooth: Mesh: Fix IV Update tests when duration is unknown
      Bluetooth: Mesh: Fix missing IVU normal mode timer when provisioning
      Bluetooth: Mesh: Remove redundant branch for IV Update
      fs: Convert NFFS partition to a generic one
      subsys: settings: Fix Kconfig dependencies
      boards: microbit: Add flash partition definitions to dts
      Bluetooth: Mesh: Remove unnecessary #ifdefs from header file
      Bluetooth: Mesh: Fix enabling Node Identity advertising
      Bluetooth: GATT: Fix CCC handling
      Bluetooth: Mesh: Fix sequence number in Friend queue
      Bluetooth: Introduce skeleton for settings-based storage
      Bluetooth: Remove bt_storage API
      Bluetooth: settings: Add support for per-submodule handlers
      Bluetooth: Add support for persistent pairing keys storage
      Bluetooth: Compress bt_keys struct
      Bluetooth: shell: Add settings support
      Bluetooth: Mesh: Move IV Update defines to net.h
      Bluetooth: Mesh: Increase visibility of net & app key helpers
      Bluetooth: Mesh: Remove redundant initialization
      Bluetooth: Mesh: Create dedicated helper for incrementing seq
      Bluetooth: Mesh: Add skeleton for persistent storage
      Bluetooth: Mesh: Add storage APIs for core network values
      Bluetooth: Mesh: Remove redundant 'provisioned' variable
      Bluetooth: Mesh: Move network startup operations to common function
      Bluetooth: Mesh: Introduce measures to avoid too frequent flash writes
      Bluetooth: Mesh: Fix resetting configuration model state
      Bluetooth: Mesh: Add support for clearing persistent network storage
      Bluetooth: Introduce new bt_set_id_addr() API
      Bluetooth: Mesh: Expose destination address in bt_mesh_msg_ctx
      Bluetooth: Mesh: Convert RPL storage timer into a generic one
      Bluetooth: Mesh: Introduce generic storage timer
      Bluetooth: Mesh: Perform storage clearing also through delayed work
      Bluetooth: Mesh: Redesign element and storage info for models
      Bluetooth: Mesh: Support for storing model bindings persistently
      Bluetooth: Mesh: Support for storing model subscriptions persistently
      Bluetooth: Mesh: Support for storing model publication persistently
      Bluetooth: Mesh: Support for storing heartbeat publication persistently
      Bluetooth: Mesh: Support for storing common configuration states
      Bluetooth: Mesh: Fix updating RPL for locally originated messages
      Bluetooth: Mesh: Fix sequence number restoring
      Bluetooth: samples/mesh_demo: Add support for settings-based storage
      Bluetooth: Mesh: Remove sequence number from bt_mesh_provision()
      Bluetooth: Remove unused rx_prio_queue
      Bluetooth: Mesh: Expose bt_mesh_is_provisioned() publicly
      Bluetooth: Mesh: shell: Add persistent storage support
      settings: Make it safe to call settings_subsys_init() multiple times
      Bluetooth: Mesh: Fix IV Update duration tracking
      Bluetooth: Mesh: Remove redundant ivu_unknown variable
      Bluetooth: L2CAP: Add support for dynamically allocated PSM values

Johann Fischer (13):
      subsys: usb: usb_descriptor: fix style and function declaration
      include: usb: add USB DFU class header
      subsys: usb: rework USB DFU class driver
      subsys: usb: check for invalid descriptor type request
      boards: nucleo_f413zh: enable usb
      dts: bindings: add yaml file for Kinetis USBD support
      dts: arm: nxp: use DT to configure USBD on Kinetis SoC
      arm: mpu: nxp: set bus master 4 to write and read access
      drivers: usb: add usb device driver for Kinetis USBFSOTG Controller
      arch: nxp_kinetis: enable USB device driver
      samples: cdc_acm: enable sanitycheck for Kinetis boards
      tests: samples: exclude usb_kw24d512 from wpanusb sample
      drivers: usb: kinetis: fixup endpoint config, stall and read

Josh Triplett (1):
      kernel: Disable build timestamps by default for reproducibility

Juan Manuel Torres Palma (2):
      posix: semaphore: fix bugs and simplify code
      tests: posix: fix semaphore.h test

Jukka Rissanen (96):
      net: websocket: Initial support for server websocket
      samples: net: websocket echo-server application
      tests: net: websocket: Add tests for websocket
      net: websocket: Add console support
      samples: net: websocket: Add console sample application
      syslog: Add networking backend
      net: app: Enable syslog to network in init
      samples: net: syslog: Remote syslog service example
      net: app: Fix debug level check
      net: ipv6: Fix compile error if neighbor cache is disabled
      tests: net: websocket: Fix buiding on qemu_xtensa
      net: Create helper to convert MAC strings to array of bytes
      drivers: eth: Add ethernet driver for native posix arch
      samples: net: eth_native_posix: Sample for native networking
      net: ethernet: Avoid overlapping memcpy for tx packets
      net: pkt: net_pkt_get_reserve_data() was aliased incorrectly
      boards: sam_e70_explained: Enable ethernet by default
      drivers: eth: gmac: Do not verify config for unit tests
      tests: net: websocket: Fix null pointer dereference
      net: websocket: Leave space for null in strncpy
      net: Support network packet checksum calc offloading
      tests: net: Network packet checksum offloading tests
      net: websocket: Use system provided base64 function
      samples: net: websocket_console: Do not copy pass end of string
      tests: net: websocket: Fix null at the end of string
      drivers: eth: native_posix: No need to sleep in select
      net: if: Separate IP address configuration from net_if
      net: if: Make interface IP configuration more flexible
      net: context: Add PRIORITY option support
      net: core: Add array support to stack info helpers
      net: Add initial TX and RX traffic class support
      tests: net: Add unit test for traffic class support
      net: stats: Add traffic class statistics
      net: shell: Print TX and RX threads stacks with more info
      samples: net: Add traffic class sample application
      tests: net: Increase the size of main stack
      net: Align the stack infos in net_stack linker section
      sample: net: echo-server: Cleanup config files
      doc: net: Add websocket and websocket_console to net API docs
      net: if: Bring back __net_if_align
      samples: net: http_server: Send final chunk
      tests: net: tc: Run the tests only for qemu_x86
      net: tc: Fix array checks
      net: tc: Using u8_t for queue and thread priority
      drivers: eth: native_posix: Enable ethernet by default if needed
      boards: sam_e70_xplained: Enable L2 ethernet layer
      samples: net: Fix sanitycheck for sam_e70_xplained board
      net: if: vlan: Add virtual lan support
      tests: net: vlan: Add VLAN tests
      net: shell: Add VLAN support
      samples: net: vlan: Simple app for setting virtual lan settings
      drivers: eth: mcux: Enabling VLAN
      drivers: eth: gmac: Adding VLAN support to Atmel E70 board
      drivers: eth: native_posix: Add VLAN support
      drivers: net: slip: Add VLAN support
      net: l2: ethernet:  Add priority to sent ethernet VLAN header
      net: Add function to convert VLAN priority to packet priority
      drivers: net: mcux: Use VLAN priority to set RX packet priority
      net: if: Use DEVICE_NAME_GET() instead of fixed string
      net: shell: Add network interface up/down command
      net: core: Check interface when receiving a packet
      net: l2: Remove l2_data section start and end pointers
      net: ethernet: Return correct non VLAN interface
      tests: net: vlan: Fix VLAN disable test
      net: stats: Fix the net_mgmt statistics collection
      net: stats: Make statistics collection per network interface
      sample: net: stats: Example how to use net_mgmt for statistics
      tests: net: checksum_offload: Adjust number of interfaces
      net: app: server: Create IPv4 listener also if IPv6 is enabled
      net: stats: Add infrastructure for collecting ethernet stats
      drivers: eth: native_posix: Add ethernet statistics support
      samples: net: stats: Print ethernet statistics
      net: shell: Print ethernet statistics
      samples: net: coap_client: Fix compile error
      net: if: Add helper to select src interface for a IPv4 dst addr
      net: shell: Use correct network interface for IPv4 ping
      net: app: Select local IP address properly if multiple interfaces
      syslog: net: Fix multiple network interface selection for IPv4
      net: http: Fix client compilation if HTTPS is enabled
      samples: net: http: Add TLS compilation test
      net: hostname: Fix hostname buffer length
      net: arp: Do not access NULL network packet
      samples: net: https-client: Increasing main stack size
      net: if: Add functions to get correct IPv4 address
      tests: net: ip: Refactor and add IPv4 tests
      net: tc: Proper packet priority to traffic class mapping
      tests: net: mgmt: Do not allocate link address from stack
      tests: net: coap: Fix uninitialized memory access
      tests: net: tcp: IPv4 header was not initialized
      tests: net: tcp: Remove unnecessary code
      samples: net: dns: Fix compile error
      samples: net: dns_resolver: Add config options for tests
      samples: net: mbedtls_sslclient: Fix prj.conf file
      net: app: Select proper source IPv4 address in client
      samples: net: rpl: Simple RPL border router application
      net: app: server: Fix compile error if TCP is disabled

Justin Watson (5):
      doc: boards: Fixed doc. output with hello_world sample
      cmake: 'ninja flash' support for sam4s_xplained
      boards: sam4s_xplained: Changed the sample to use USB on debug port
      drivers: GPIO Added GPIO for SAM family.
      driver: usart: Added support for interrupt driver USART on SAM E70.

Karol LasoÅ„czyk (3):
      dts: nrf: Expand nRF DTS to support watchdog
      drivers: watchdog: Add shim for nrfx WDT driver
      tests: watchdog: Add new test implementation

Kristian Klomsten Skordal (2):
      kernel: Fix left shift into sign bit
      sample: add OpenAMP sample application

Krzysztof Chruscinski (1):
      kernel: mem_slab: Reschedule in k_mem_slab_free only when necessary.

Kumar Gala (41):
      arch: arm: Refactor CONFIG_CORTEX_M
      arch: arm: mps2: Remove unused defines and structs
      drivers: i2c: Add DTS support to ARM SBCon I2C controller
      arch: arm: mps2: remove soc_memory_map.h
      arch: arm: mps2: Remove soc_irq.h
      usb: ateml: samd21: enable usb controller in board dts not soc
      subsys: fs: Fix fs_file_t and fs_dir_t usage
      tests: arm_runtime_nmi: Make test build on v8m
      arm: mps2_an385: Move dts.fixup to board dir
      boards: mps2_an385: cleanup pinmux comments
      ext: hal: cmsis: Update ARM CMSIS headers to version 5.3.0
      scripts: extract_dts_inculdes: Fix issue if no zephyr,flash prop
      arch: arc: quark_se_c1000_ss: Fix DCCM_SIZE
      tests: net: websocket: Bump min ram to 46k
      tests: net: websocket: exclude qemu_xtensa
      samples/tests: net: websocket: Fix yaml files
      arch: em{7,9,11}d: Add dts support
      arch: arc: Use DTS for all ARC SoCs
      arch: arc: em{7,9,11}d: Add initial DTS UART support
      board: x86: tinytile: Enable I2C through DTS
      ci: Increase number of build slaves to 5
      tests: rbtree: Fix test so its actually runs
      sanitycheck: Exit on load errors
      kernel: Fix building of k_thread_create
      boards: hifive1: Add missing board yaml file
      boards: dts: Cleanup aliases
      arm: soc: NXP: Enable SEGGER RTT on all NXP SoCs
      scripts: extract_dts_includes: Fix extract_cells for a list
      scripts: extract_dts_includes: Fix extract_controller for a list
      arch: arm: soc: Cleanup Kconfig inclusion per SoC
      arch: arm: atmel_sam: Fixup build issue on sam_e70
      dts: spi: Add optional cs-gpios to the spi bus controller binding
      gpio: dts: Introduce Kconfig symbols to convey GPIO dts support
      pwm: stm32: Fix type for PMW3 support
      board: lpcxpresso54114: Rename to lpcxpresso54114_m4
      kernel: Fix compile warning with _impl_k_object_alloc
      cmake: Add new generate_inc_file_for_gen_target function
      arch: arm: lpc: Added support for Cortex-M0+ on lpc54114 soc
      arch: arm: nxp_lpc: Added support for init of slave core
      ext: Import libmetal for IPC/open-amp
      ext: Import OpenAMP for IPC

Laczen JMS (1):
      subsys: fs: Add Non Volatile Storage (NVS) for zephyr

Leandro Pereira (34):
      kernel: Name of static functions should not begin with an underscore
      arch: x86: Unwind the stack on fatal errors
      kernel: thread: Consider stack pointer fuzz underflow
      drivers: clock_control: quark_se: Fix ""make menuconfig""
      kernel: mutex: Copy assertions to assertions to syscall handler
      kernel: mempool: Check for overflow in k_malloc()
      kernel: mempool: Always check for overflow in k_calloc()
      tests: mempool: Add overflow checks
      arch: arm: Flush pipeline after switching privilege levels
      subsys: nffs: Unlock mutex before returning
      ext: lib: crypto: Update mbedTLS to 2.8.0
      lib: posix: mqueue: Do not dereference mqd pointer before null check
      lib: posix: mqueue: Minor formatting cleanups
      kernel: sched: Fix validation of priority levels
      include: toolchain: common: Remove deprecated __stack macro
      arch: x86: Use retpolines in core assembly routines
      arch: x86: segmentation: Remove unused _far_call() and _far_jump()
      warnings: Disable ""unused-local-typedefs"" compiler warning
      toolchain: gcc: Only use _Static_assert if building with C11
      toolchain: common: Allow multiple uses of BUILD_ASSERT() in same scope
      kernel: sem: Ensure that initial count is lesser or equal than limit
      drivers: i2c: Fix TOCTOU while transferring I2C messages
      drivers: Perform a runtime check if a driver is capable of an operation
      scripts: gen_kobject_list: Generate enums and case statements
      lib: json: Efficiently pack field name, offset, alignment, type
      net: Update bit size of _unused member in struct net_pkt
      net: lwm2m: Do not use snprintk() to get debugging token
      net: websocket: Simplify building of responses
      net: websocket: Revise generation of Sec-WebSocket-Accept header
      samples: drivers: crypto: Print output length for all operations
      drivers: crypto: crypto_tc_shim: Set output length for all operations
      drivers: crypto: crypto_mtls_shim: Set output length for all operations
      drivers: spi: Fix TOCTOU while transceiving SPI messages
      lib: posix: Do not redefine PATH_MAX in unistd.h

Loic Poulain (15):
      Revert ""usb: stm32: Introduce transfer method""
      usb_dc: Add usb_dc_ep_mps function
      usb: Add transfer management API
      usb: usbnet: Add USBNET_MTU definition
      usb: dc_dw: Fix FIFO available space
      usb: dc_dw: Do not clear RX NAK at init for transfer endpoints
      usb: call status_callback on interface set
      usb: netusb: consider media connected on interface selection event
      net: samples: Reduce net pkt RAM usage
      usb: usbnet: ecm: Use transfer API
      doc: usb: Update API doc
      usb: netusb: Rework netusb media connect/disconnect
      usb: netusb: Add CDC EEM network usb function
      samples: net: Add test cases for USB EEM
      boards: arm: nrf52_blenano2: Add I2C default config

Luiz Augusto von Dentz (5):
      Bluetooth: GATT: Add support to persistent CCC config
      Bluetooth: GATT: Introduce BT_GATT_ATTRIBUTE
      Bluetooth: GATT: Make BT_GATT_CHARACTERISTIC declare its value
      mgmt: Fix smp_bt.c build
      Bluetooth: GATT: Fix documentation of bt_gatt_notify

Manivannan Sadhasivam (8):
      drivers: led: Add public API for LED drivers
      drivers: led: Add LED driver support for TI LP3943
      samples: drivers: Add sample application for LP3943
      boards: arm: 96b_neonkey: Fix I2C_3 for LP3943 LED driver
      arm: Fix title for SoC configuration in Kconfig
      arm: soc: Elaborate Kconfig strings for MPU selection
      CODEOWNERS: Add myself as the Codeowner for LED API and drivers
      drivers: led: Add system call handler support

Marcin Niestroj (1):
      net: tcp: Cancel fin_timer in FIN_WAIT_2 instead FIN_WAIT_1

Mariusz Skamra (4):
      Bluetooth: btp: Add missing Clear Replay Protection List Cache cmd
      Bluetooth: btp: Add Enable advertising with Node Identity cmd
      Bluetooth: L2CAP: Use BR definition on connection success
      Bluetooth: L2CAP: Update LE specific connection result values

Marti Bolivar (32):
      cmake: fix set_ifndef() usage patterns
      drivers: sensor: temp_nrf5: fix sensor type
      tests: drivers: build_all: add TEMP_NRF5 to sensor test
      jlink: fix flashing behavior on Windows
      docs: network-management-api: update a changed function name
      samples: coap_client: fix net mgmt event handler
      samples: telnet: fix net mgmt event handler
      tests: net: mld: fix net mgmt event handler
      tests: net: dhcpv4: fix net mgmt event handler
      doc: network-management-api: clarify intended event listening usage
      samples: sensor: vl53l0x: trivial README.rst fix
      samples: olimex_stm32_e407: ccm: trivial README.rst fix
      scripts: runner: add __str__ for RunnerCaps
      scripts: runner: core: don't print unless self.debug
      cmake: flash: save runner configuration to CMake cache
      boards: adjust openocd runner arg syntax
      scripts: create meta-tool package, ""west""
      scripts: west: add cmake utility module
      scripts: make runner a west subpackage
      scripts: west: remove redundant quote_sh_list definition
      scripts: west: runner: add get_runner_cls()
      scripts: west: add flash, debug, debugserver commands
      scripts: remove zephyr_flash_debug.py
      scripts: west: remove command from runner arguments
      scripts: west: trivial fix to runner comments
      scripts: west: add subprocess.call wrapper to runner classes
      scripts: west: clean up intel_s1000 runner
      scripts: west: fix some intel_s1000 runner issues
      scripts: west: convert runner to use log module
      scripts: west: introduce common runner configuration
      scripts: west: add build directory to runner configuration
      scripts: west: add context-sensitive runner help

Matthias Boesl (2):
      drivers/ethernet: Switch enc28j60 to new SPI API
      driver: ieee802154: cc1200: fix context handling

Maureen Helm (45):
      scripts: extract_dts_includes: Fix path handling in Windows
      adafruit_feather_m0_basic_proto: Enable usb controller in board dts
      doc: application: Add Eclipse debugging section
      build: doc: Add support for a Windows equivalent to .zephyrrc
      spi: Implement new spi api in the mcux dspi driver
      tests: spi_loopback: Add frdm_k64f configuration
      dts: Add gpio labels to all kinetis socs
      boards: Move led and button definitions to dts for kinetis boards
      gpio: Refactor the mcux gpio driver to use dts
      arm: nxp_kinetis: Remove unused defines from soc.h
      ext: mcux: Update README to follow template format
      ext: mcux: Reorganize imported drivers into soc family subfolders
      lpc54114: Remove unused include in soc.c
      ext: mcux: Remove clock_config.c/h
      spi: Fix mcux dspi driver to parse lsb transfer mode correctly
      tests: fp_sharing: Fix definition of PI_NUM_ITERATIONS
      frdm_k64f: Fix pin name typos in the board doc
      arm: Add more flash and ram size options to i.MX RT MPU config
      dts: mimxrt1050_evk: Add external memory nodes
      mimxrt1050_evk: Add config to select code linking location
      boards: dts: Add fxos8700 interrupt bindings and fix sensor sample
      boards: dts: Add fxas21002 interrupt bindings and fix sensor sample
      hexiwear_k64: Fix whitespace in dts.fixup
      spi: Wrap instance configs consistently with ifdefs
      spi: Fix missing ""depends on !HAS_DTS_SPI""
      dts: nxp_kinetis: Add spi bindings for kinetis dspi and update soc nodes
      spi: Refactor mcux dspi driver to use dts
      spi: Refactor mcux dspi shim driver to use clock control interface
      nxp_kinetis: Enable mcux dspi driver on kw40/41z socs
      nxp_kinetis: Remove unused dspi irq defines from soc.h
      frdm_kw41z: Configure spi0 pinmuxes and update board doc accordingly
      tests: spi_loopback: Add frdm_kw41z configuration
      boards: Select HAS_DTS_SPI_DEVICE on kinetis boards
      boards: dts: Add mcr20a bindings and fix networking samples
      mimxrt1050_evk: Move led and button definitions to dts
      CODEOWNERS: Fix nxp related directories
      clock_control: Add support for getting LPO frequency in mcux sim driver
      dts: Add kinetis watchdog bindings and update k64, kw2xd soc nodes
      watchdog: Introduce mcux wdog shim driver
      nxp_kinetis: Enable mcux watchdog driver on k64, kw2xd socs
      boards: Document watchdog driver support on k64, kw2xd boards
      tests: watchdog: Update test to work with the mcux watchdog driver
      tests: watchdog: Replace platform whitelists with depends_on
      nxp_kinetis: Fix rtc base address in kw41z dts.fixup
      release: Move version to 1.12.0-rc1

Michael Hope (20):
      usb: sam0: add a USB device driver.
      boards: document and enable USB on the Arduino Zero and Trinket M0.
      tests: gpio: add a configuration for the Arduino Zero.
      gpio: sam0: add pull up/pull down support.
      spi: sam0: use Device Tree for configuration.
      crc: make crc8_ccitt() match the other CRC functions.
      spi: sam0: fix CS and back-to-back transfers.
      hid: change the API table to const.
      usb: sam0: add the new usb_dc_ep_mps() function.
      usb: netusb: implement the ethernet interface.
      ethernet: fix an unaligned access fault by removing __packed.
      cdc_acm: fix interrupt handling, API registration, and propgate errors.
      usb: hid: add a INT IN transfer complete callback.
      usb: hid: implement set_report()
      include: improve compatibility with C++ apps.
      cpp: mark __dso_handle as weak.
      ztest: define test_main in the header file.
      tests: add a C++ compile test.
      uart_pipe: re-work the RX function to match the API and work with USB.
      dma: define and document the source and dest adjust enum.

Michael Scott (38):
      samples: lwm2m: replace prj_dtls.conf with overlay fragment
      samples: lwm2m: add overlay conf to support BT networking
      samples: lwm2m: update README with use of overlay files
      net: lwm2m: refactor engine_get_obj to be more useful
      net: lwm2m: clear lwm2m_obj_path obj in string_to_path
      net: lwm2m: fix error code in read and write handlers
      net: lwm2m: introduce LWM2M_HAS_PERM macro
      net: lwm2m: remove LWM2M_OP_NONE flag and renumber the rest
      net: lwm2m: use BIT macro instead of LWM2M_OP_BIT
      net: lwm2m: remove unused CONFIG_LWM2M_BOOTSTRAP_PORT config
      net: lwm2m: remove unused LWM2M_PEER_PORT define
      net: lwm2m: Re-order lwm2m object structs for memory alignment
      net: lwm2m: remove ""path"" from object and resource instances
      net: lwm2m: relocate/memory align notification_attrs struct
      net: lwm2m: improve return errors from update_attrs()
      net: lwm2m: remove attr_list from obj, obj_inst and res_inst structs
      net: lwm2m: remove ""used"" from observe_node
      net: lwm2m: lower default maximum observes from 20 to 10
      samples: net: lwm2m: adjust BT RX buffer count /sizes for BT
      net: tcp: expose some TCP helper functions
      net: app: fix build warning in _net_app_ssl_mainloop()
      net: lwm2m: return error from lwm2m_engine_get_* functions
      net: lwm2m: introduce FLAG_OPTIONAL to denote optional resources
      net: lwm2m: mark OPTIONAL resources for LwM2M Security
      net: lwm2m: mark OPTIONAL resources for LwM2M Server
      net: lwm2m: mark OPTIONAL resources for LwM2M Device
      net: lwm2m: mark OPTIONAL resources for LwM2M Firmware Update
      net: lwm2m: mark OPTIONAL resources for IPSO Light Control
      net: lwm2m: mark OPTIONAL resources for IPSO Temperature
      net: lwm2m: remove unused OBJ_FIELD_MULTI_DATA macro
      net: coap: add COAP_INIT_ACK_TIMEOUT_MS setting
      net: coap: clear more fields in coap_reply_clear()
      net: app: client: fix local port byte-order in bind_local()
      net: app: client: handle client_addr port in net_app_init_client()
      net: lwm2m: honor CONFIG_LWM2M_LOCAL_PORT when starting client
      net: lwm2m: default LWM2M_LOCAL_PORT to 0 (random)
      net: lwm2m: add LWM2M_FIRMWARE_UPDATE_PULL_LOCAL_PORT setting
      net: lwm2m: simplify registration client

MichaÅ‚ Kruszewski (1):
      drivers: watchdog: Watchdog API redesign

Nathan Tsoi (2):
      arch: arm: STM32F051X8 support
      boards: arm: add support for STM32F0DISCOVERY

Niranjhana N (2):
      tests: posix: Fixing pthread attr object initialization.
      tests: posix: add more tests

Paolo Teti (1):
      ARM: -march compile option is not set

Paras Jain (1):
      tests : ipv6_fragment : Avoid NULL pointer access

Patrick Boettcher (1):
      uncrustify: add space before name of typedef

Patrik Flykt (15):
      tests: socket: Enable loopback and net tests
      net: tcp: Define empty static functions when TCP is disabled
      net: context: Update net_context_sendto()
      net: context: Refactor sendto()
      net: context: Factor out TCP header length checking
      net: context: Remove unnecessary ifdefs
      net: context: Factor out code for TCP receive
      net: context: Refactor net_tcp_send_data()
      net: context: Remove unnecessary callback clearing
      net: context: Refactor queueing of a TCP FIN when closing socket
      net: context: Factor out TCP context listen state
      net: context: Factor out TCP receive window handling
      net: context: Fix connect for UDP contexts
      net: tcp: Move TCP stack to tcp.c
      net/mgmt: Add initial WiFi management API definitions

Paul Sokolovsky (19):
      boards: Add ""ram"" and ""flash"" properties for a number of boards
      tests: bluetooth: shell: Set min_flash to 145K
      mbedtls: Add CONFIG_MBEDTLS_SSL_MAX_CONTENT_LEN
      mbedtls: Replace COAP-specific max len setting with generic
      CODEOWNERS: Add @pfalcon as a maintainer of BSD Sockets subsystem
      boards: arduino_due, nrf52_pca20020: Add ""ram"" and ""flash"" properties
      tests: socket: udp: Make sure client sockaddr fully initialized
      tests: socket: udp: Tighten up error checking
      tests: socket: udp: Close test sockets
      net: tcp: send_syn_segment: Log packet before it's sent
      newlib: libc-hooks: Print ""exit"" message with newline
      net: ip: context: Merge send_data() into the only caller
      CODEOWNERS: Add pfalcon for various net directories
      samples: sockets: dumb_http_server: Improve error handling
      samples: sockets: Make more errors fatal
      net: tcp: Define single config option for TIME_WAIT delay
      samples: sockets: dumb_http_server: Disable TIME_WAIT delay
      doc: networking: qemu_setup: Update details and add DNS information
      samples: sockets: big_http_download: Update for DHCPv4 support.

Peter Gielda (1):
      drivers: serial: Add missing FE310 UART driver reference to CMakeLists

PhilÃ©mon Jaermann (2):
      arm: stm32f446: Add support for stm32f446 SoC
      boards: arm: Add nucleo-f446re board

Praful Swarnakar (3):
      tests: crypto: mbedtls: enabled test for esp32
      tests/kernel/common: Random32 test update for entropy subsystem
      tests: crypto: rand32: move rand32 test out of kernel

Punit Vara (8):
      tests: semaphore: test APIs
      tests: msgq_api: Improve scenario testing
      tests: lifo: Add lifo test with scenario
      test: mbox_usage: add legacy test case for mailbox
      lib: posix: Implement posix mutex APIs
      lib: posix: Use default attribute for mutex
      tests: mutex: Add test case to test mutex API
      tests: posix: Increase sram size

Pushpal Sidhu (4):
      drivers: pinmux_stm32l4x: add usb otg pinmux
      drivers: usb_dc_stm32: use HSI48 if available
      arch: stm32l4: add HAL_Delay for hal library hooks
      drivers: usb_dc_stm32: enable VDDUSB if needed

Rajavardhan Gundi (25):
      init: verify boot_delay
      tests: kernel: timers: Added a test to check periodicity
      tests: kernel: threads: Additional tests for set_priority
      Revert ""warnings: Disable ""unused-local-typedefs"" compiler warning""
      kernel: sem: Modify the way BUILD_ASSERT is used
      intel_s1000: Add intel_s1000 SoC
      intel_s1000: define memctl_default.S and memerror-vector.S files
      intel_s1000: create xt-sim_intel_s1000_defconfig
      intel_s1000: add intel_s1000_crb board
      xtensa: reset-vector.S hack for booting intel_s1000 [REVERTME]
      intel_s1000: uart: configure UART for intel_s1000
      arch: xtensa: set __start as entry point for Xtensa.
      intel_s1000: gpio: enable GPIO handling
      intel_s1000: i2c: enable I2C for intel_s1000
      drivers: interrupts: introduce CAVS interrupt logic
      drivers: interrupts: introduce Designware interrupt controller
      xtensa: intel_s1000: implement interrupt mechanism
      intel_s1000: tests: introduce tests to check features enabled
      intel_s1000: scripts: debug, debugserver and flash scripts
      xtensa: provide XCC compiler support for Xtensa
      drivers: dma: introduce Intel CAVS DMA
      boards: intel_s1000_crb: enable DMA
      drivers: i2s: introduce CAVS I2S
      boards: intel_s1000: enable I2S
      doc: brief description on intel_s1000 usage

Ramakrishna Pallala (38):
      tests: kernel: Add stack usage scenario tests
      subsys: fs: Kconfig: Add log level support for fs subsystem
      subsys: fs: Add Virtual File system Switch (VFS) support
      tests: subsys: fs: Adapt fat_fs_api test as per VFS changes
      tests: subsys: fs: Adapt nffs_fs_api test as per VFS changes
      subsys: fs: Kconfig changes to enable multiple file systems
      tests: subsys: fs: Add test for multiple file systems
      tests: kernel: Add fifo usage scenario tests
      tests: kernel: Add fifo timeout scenario tests
      include: kernel: Fix typo in fifo API description
      include: kernel: Fix documentation for TICKLESS_KERNEL API's
      lib: posix: Move posix layer from 'kernel' to 'lib'
      tests: posix: Resolve header file dependencies
      lib: posix: Fix mutex locking in pthread_cancel
      lib: posix: Fix integer overflow in timer_gettime
      lib: posix: pthread_common: Fix potential integer overflow issue
      ext: hal: altera: Add modular Scatter-Gather DMA HAL driver
      ext: hal: altera: Add wrapper function for Altera HAL runtime API
      arch: nios2: Add _nios2_dcache_flush_no_writeback() routine
      drivers: dma: Add dma driver for Nios-II MSGDMA core
      tests: boards: altera_max10: Add test for Nios-II MSGDMA soft IP
      subsys: fs: Extend storage_dev type beyond 'struct device'
      subsys: disk: Add support for multiple disk interfaces
      samples: subsys: usb: Set disk name Kconfig option
      subsys: fs: Add the support for multiple instances of fs
      tests: subsys: fs: Add changes to support multiple FS instance
      tests: subsys: fs: Add test for FAT FS dual instance case
      kernel: Add k_thread_foreach API
      kernel: Deprecate k_call_stacks_analyze() API
      tests: kernel: profiling: Add test for k_thread_foreach API
      subsys: shell: Remove deprcated k_call_stacks_analyze API
      subsys: bluetooth: Remove deprcated k_call_stacks_analyze API
      samples: boards: Remove deprcated k_call_stacks_analyze API
      samples: subsys: debug: sysview: Adapt k_thread_foreach API
      lib: posix: Fix pthread_attr_init() return code
      lib: posix: Add Posix Style File System API support
      tests: posix: Add test for Posix File System API's
      tests: posix: fs: Add description for test cases

Ravi kumar Veeramally (4):
      samples: net: Fix CoAP server payload dump function
      samples: net: Fix echo_server reply packet preparation
      samples: net: rpl: Enhance RPL border router application
      samples: net: rpl: Add observer support to node application

Reto Schneider (4):
      boards: olimex stm32-e407: Fix comment
      boards: olimex stm32-h407: Add initial support
      boards: sensortag: Update links to reference manual
      doc: boards: Remove hint to ini file

Robert Lubos (2):
      net: openthread: Bump OpenThread commit to db4759cc
      net: openthread: Add function for getting current radio channel

Roman Tataurov (1):
      boards: Add support for Waveshare BLE400 board.

Ruslan Mstoi (10):
      net: ipv6: Drop RA with MTU out of valid range
      net: icmpv6: Drop malformed ICMPv6 echo request
      net: ipv6: fix memory leak caused by echo request
      net: tcp: Fix crash from SYN flood
      net: ipv6: Fix crash from NULL fragment pointer access
      net: ipv6: Fix crash from malformed fragment payload
      net: ipv6: Remove irrelevant error log
      net: ipv6: Fix crash from double free of fragment
      net: icmpv6: Fix payload length and checksum
      net: conn: Drop invalid packet

Sathish Kuttan (1):
      boards: intel_s1000_crb: Assign Intel VID and PID for S1000 CRB

Savinay Dharmappa (16):
      drivers: usb: device: code cleanup
      tests: kernel: work_q: Add testcases
      tests: kernel: alert: Add testcases
      dts: arc: quark_se_c1000_ss: Fix worng interrupt number in i2c 0/1
      driver: usb: enable usb2.0 on intel_s1000
      test: board: intel_S1000: Add test application for HID
      tests: boards: intel_s1000_crb: select application based on config
      dts: xtensa: Add device tree support for xtensa
      dts: i2c: Add dts support for i2c
      dts: interrupt_controller: Add dts support for DesignWare controller
      dts: x86: derive RAM and ROM size from dts instead of Kconfig
      dts: xtensa: fix build error.
      dts: nios2f: Add device tree support
      boards: nios2: altera_max10: Enable device support for altera_max10
      dts: nios2-qemu: add device tree support
      boards: nios2: qemu: Enable device support for qemu

Sebastian BÃ¸e (38):
      kconfig: Don't source the non-existing zephyr/net/Kconfig
      kconfig: Removed source ""[...]mgmt/mcumgr/mgmt/port/zephyr/Kconfig""
      kconfiglib: Update to fd21c5cb320b9
      kconfig: Decode Kconfig sources as UTF-8 instead of as LC_CTYPE
      doc: Kconfig: Decode Kconfig sources as UTF-8 instead of as LC_CTYPE
      Revert ""kconfig: Decode Kconfig sources as UTF-8 instead of [...]""
      Revert ""doc: Kconfig: Decode Kconfig sources as UTF-8 instead [...]""
      cmake: Minor refactor
      cmake: Support UTF-8 characters in Kconfig values
      tests: Added test for UTF-8 characters in Kconfig values
      docs: Use simple english
      doc: drivers: Re-order error-handling section
      doc: drivers: Include device_config declaration in documentation
      docs: Fix reference to non-existent SYS_INIT_PM macro
      init.h: Fix english in comment
      device.h: doc: Refactor to keep documentation infront of impl.
      doc: Introduce the sample category app. dev. to the docs
      samples: Add sample that demonstrates a custom board definition
      doc: Add a comment describing the algorithm used by entropy_nrf5.c
      kconfig: Make CONIG_FP_SOFTABI generate floating point instructions
      doc: getting_started: Make it more obvious how to follow the guide
      cmake: Fix CONFIG_CUSTOM_LINKER_SCRIPT
      cmake: toolchain: Improve error feedback when toolchain is not found
      doc: win: Invoke pip3 instead of pip to be safe
      cmake: Add function for checking if a directory is write-able
      cmake: Find a directory that could be used to cache files
      cmake: check_compiler_flag: Support empty-string options
      cmake: toolchain: Checksum the toolchain to uniquely identify it
      cmake: Introduce zephyr_check_compiler_flag()
      cmake: Port Zephyr to use zephyr_check_compiler_flag
      cmake: posix: Use absolute paths for toolchain paths
      kconfig: Move CPLUSPLUS from root to ""Compiler Options""
      cmake: check_compiler_flag: Fix bug where checks were aliased
      cmake: Suppress messages about compiler checks
      cmake: Introduce a key version to invalidate corrupted caches
      kconfig: Refactor kconfig.py to use __main__ and argparse
      ci: Clean the capability cache when the ccache is cleaned
      doc: getting_started: Remove redundant and erronous doc's

Spoorthi K (8):
      tests: kernel: Test for essential thread set/clear
      tests: kernel: Add test to verify k_thread_start()
      tests: kernel: mem_protect: Update platform whitelist
      tests: stack_random: Add Ztest support
      tests: threads: Add test to verify delayed thread abort
      tests: threads: Document description for test cases
      tests: mem_protect: Add memory domain testcases
      tests: threads: Add test case to verify k_wakeup()

Stanislav Poboril (9):
      gpio: Add imx gpio driver shim
      board: lpcxpresso54114: Move led and button definitions to dts
      arch: arm: Add platform init hook at __start
      arch: nxp: lpc54xxx: Rename SoC bits from LPC54114 to LPC54114_M4
      ext: Add dual core startup code for lpc54114 based on mcux 2.3.0
      ext: Modified lpc54114 startup code from mcux for use with Zephyr.
      arm: lpcxpresso54114_m0: Add board support for slave core
      mcux: Add MCUX IPM driver for lpc and kinetis socs
      sample: Add MCUX IPM sample application

Stig BjÃ¸rlykke (14):
      samples: net: Remove references to ZoAP
      doc: Fix K_ALERT_DEFINE in a code example
      net: sockets: Refactoring zsock_recvfrom
      net: sockets: Support MSG_DONTWAIT flag in zsock_recvfrom
      net: sockets: Support MSG_PEEK flag in zsock_recvfrom
      net: sockets: Support MSG_DONTWAIT flag in zsock_sendto
      net: sockets: Add freeaddrinfo()
      net: sockets: Allow empty service in getaddrinfo()
      doc: Supplement list of implemented socket operations
      doc: Show a command to enable IPv4 forwarding
      net: sockets: Do not lookup DNS AAAA entries if IPv6 is disabled
      net: dns: Fix end-of-results callback on error
      net: sockets: Check for errors from dns_get_addr_info
      tests: socket: Free resources with freeaddrinfo

Sundar Subramaniyan (12):
      Bluetooth: hci_usb: Write large packets to USB in multiple chunks
      Bluetooth: hci_usb: Read the whole USB EPOUT buffer at once
      dts: bindings: Add yaml file for nRF52840 USBD support to DT
      dts: arm: nrf52840_pca10056: Use DT to configure USB
      clock_control: nrf5: Add USBD power event support for USB enumeration
      drivers: usbd_nrf5: Add nRF52840 USB Device Controller Driver
      boards: arm: nrf: Make USB default for nrf52840_pca10056 board
      tests: samples: Add nrf52840_pca10056 board to USB test cases
      tests: samples: Exclude nrf52840_pca10056 from wpanusb sample
      drivers: usb: nrf5: Add usb_dc_ep_mps function
      drivers: usb: nrf5: Fix cdc_acm OUT endpoint read size issue
      drivers: usb: nrf5: Fix ISO IN/OUT SOF handling

Tarun Kumar Agarwal (2):
      samples: net: add put and post methods to coap
      samples: net: coap: Solved the payload issue in coap GET Method

Thiago Silveira (1):
      drivers: serial: Fix race condition in nRF5 UART TX

Tobias Aschenbrenner (1):
      sensors: lis3dh: Fix i2c burst read

Tomasz Bursztyka (137):
      ieee802154: Make AR flag check generic and not tight to L2
      dts/i2c: Fixing copyright headers
      drivers/i2c: Cleanup Kconfig
      drivers/i2c: Indent sources the same way everywhere
      dts: Add yaml descriptor for the DW i2c driver
      drivers/i2c: Rename generic configure option in DW drivers
      dts: Add yaml descriptor for the QMSI i2c driver
      dts: Add yaml descriptor for the QMSI SS i2c driver
      dts/arc: Add the i2c node in Quark SE SS C1000
      drivers/i2c: Disable some QMSI SS option when HAS_DTS_I2C is enabled
      arch/x86: Enable i2c through DTS for quark_se SS
      drivers/i2c: Removing useless configuration attribute in DW driver
      dts/x86: Add the i2c node in quark_x1000
      boards/galileo: Switch to DTS for generating i2c settings
      drivers/i2c: Use standard bitrate settings for DW driver
      dts/x86: Add the i2c node in intel curie
      arch/x86: Enable i2c through DTS for quark_se
      dts/x86: Add the i2c node in quark_d2000
      arch/x86: Enable i2c through DTS for quark_d2000
      drivers/i2c: Use standard bitrate settings for QMSI driver
      drivers/i2c: Use standard bitrate settings for QMSI SS driver
      drivers/i2c: Make QMSI SS driver IRQs set via CONFIG_ options
      net/mgmt: Ensure that event order is kept as FIFO
      net/mgmt: Reenforce pushing events into notification list
      net/mgmt: Remove spurious k_sem_give()
      scripts/dts: Fix Copyright headers
      scripts/dts: Use 4-spaces tabs instead of 2-space tabs in devicetree.py
      scripts/dts: Make extract_dts_includes generating both files by itself
      scripts/dts: De-clutter main function in extract_dts_includes
      script/dts: Remove unnecessary empty return on functions
      drivers/spi: Cleanup the Kconfig files
      api/spi: Disable legacy API by default
      api/spi: Make spi_config parameter constant
      api/spi: Reduce parameter number on transceive function
      api/spi: Add a dedicated Kconfig option for asynchronous mode enablement
      api/spi: Removing eeprom mode in configuration
      api/spi: Add octal MISO lines mode
      api/spi: Make cs attribute in struct spi_config constant
      drivers/ieee802154: Switch CC2520 to new SPI API
      drivers/flash: Switch W25QXXDV driver to new SPI API
      drivers/sensors: Switch bme280 driver to new SPI API
      drivers/sensors: Switch bmi160 driver to new SPI API
      drivers/sensors: Switch adxl362 driver to new SPI API
      drivers/sensors: Switch lis2dh driver to new SPI API
      drivers/adc: Switch ti_adc108s102 driver to new SPI API
      drivers/bluetooth: Switch SPI based HCI driver to new SPI API
      samples/drivers: Switch Fujistu FRAM sample to new SPI API
      drivers/bluetooth: Get rid completely of legacy SPI API in SPI HCI
      drivers/spi: Adapt Kconfig and generic context to enable slave support
      api/spi: Add the possibility to request CS active high logic
      tests/drivers: Removing old SPI test
      api/spi: Precise a bit the documentation
      drivers/spi: Add support for TX or RX only modes on DW driver
      arch/quark_se: Switch to native SPI DW driver
      drivers/spi: Remove legacy DesignWare SPI driver
      drivers/spi: Specify options per-port on DW driver
      drivers/clock_control: Enable ARC core support on quark_se driver
      drivers/spi: Enable port 3 and 4 on DW driver
      drivers/spi: Fix typo on parameters type in DW arc regs definitions
      arch/quark_se_c1000_ss: Switch to SPI DW driver
      arch/quark_d2000: Switch to SPI DW driver
      drivers/spi: Removing QMSI driver as it does not support new API
      tests/spi: Remove excluded boards
      drivers/spi: Switch Intel driver to new SPI API
      drivers/ieee802154: Switch MCR20A driver to new SPI API
      drivers/spi: Remove legacy API support from mcux dspi driver
      drivers/spi: Add slave mode support to the DesignWare driver
      boards/x86: Pinmux SPI port 2 relevantly on quark_se_c1000_devboard
      arch/quark_se: Enable SPI port 2 as a slave only
      drivers/spi: Simplify how error is forwarded from ISR handler in DW
      drivers/spi: spi_context lock makes transceive function reentrant in DW
      drivers/ethernet: No need of semaphore for spi in enc28j60
      drivers/ieee802154: No need of semaphore for spi in mcr20a
      samples/bluetooth: Move hci_spi to new SPI API
      drivers/spi: Remove legacy NRF5 master and slave drivers
      spi: Remove SPI legacy API
      api/spi: Slave transactions will return received frames on success
      drivers/spi: Fix tmod update on DW driver
      net/ethernet: Add capabilities exposed by device drivers
      net/ethernet: No need to expose vlan_setup if vlan is not enabled
      net/ethernet: All types are prefixed with ethernet_
      net/ethernet: Moving ethernet code to dedicated directory
      net/ethernet: Add function driver API to change some hw configuration
      net/ethernet: Add a management interface
      tests/net: Add a test for Ethernet net mgmt interface
      net/ethernet: Fix uninitialized attributes in ethernet mgmt parameters
      samples/telnet: Fix accessing iface ipv4 config
      drivers/ethernet: Fix and clean a bit ENC28J60 driver
      drivers/ethernet: Optimize memory read/write operations in ENC28J60
      drivers/ethernet: Reduce runtime context size in ENC28J60 driver
      net: app: Always set relevant sa_family when starting a TCP server
      net/mgmt: Move NET_EVENT_INFO_MAX_SIZE into net core's private header
      net/wifi: Select dependencies to get wifi mgmt working
      drivers/wifi: Add files skeleton for adding WiFi drivers
      net/mgmt/wifi: Add dedicated net mgmt hooks for WiFi offload devices
      net/wifi: Add a shell module for controlling WiFi devices
      drivers/spi: Fix context lock behavior
      drivers/spi: Slave async calls require recv frames as successful status
      sensors/lsm5dsl: Fix SPI API usage
      drivers/spi: Remove DW spi slave test left over
      samples/net: Fix echo_client for cc2520
      drivers/adc: Uneven buffers will lead to buffer overflow
      ext: Add winc1500 driver from Atmel
      drivers/wifi: Generalize GPIO configuration for the WINC1500 driver
      drivers/wifi: Move configure macros to Kconfig
      drivers/wifi: Let's go away from SPI legacy API in WINC1500
      drivers/wifi: Remove useless gpio configuration call in winc1500 driver
      drivers/wifi: Split case logic into functions in winc1500 driver
      drivers/wifi: Switch info level to debug level in winc1500 driver
      drivers/wifi: WINC1500 driver is not using WAKE pin
      drivers/winc1500: Implement wifi mgmt offloaded API
      drivers/wifi: Move all winc1500 related code to its own directory
      samples/net: Add a simple sample to run wifi shell module
      ext/hal: Add WINC1500 README for non-Apache 2.0 licensed contribution
      ieee802154: Add support for filtering source short/ieee addresses
      ieee802154: Add support for energy detection scan on driver API
      drivers/ieee802154: KW41Z drivers is missing hw ACK caps
      dts/x86: Add Copyright headers to x86 dtsi files
      dts: Adding priority cell to Intel's IOAPIC IRQ controllers descriptor
      dts/x86: Enable generating the IRQ priority on all SoCs
      dts: Add yaml descriptor for the QMSI GPIO driver
      dts/x86: Fix GPIO nodes for intel_curie and quark_d2000
      arch/x86: Use dts to set gpio options for quark_se and quark_d2000
      dts: Add yaml descriptor for the QMSI RTC driver
      dts/arc: Add rtc node to quark_se_c1000_ss
      arch: Use dts to set rtc priorities for Intel quark, x86 and arc
      dts/bindings: Remove useless attribute in QMSI uart node descriptor
      drivers/uart: Use dts to set uart priorities for QMSI driver
      dts/x86: Fix UART nodes for ia32, atom and quark_x1000
      drivers/uart: Use dts to set uart options for ns16550 driver
      dts/arc: Add the GPIO nodes to quark_se_c1000_ss
      dts: Add yaml descriptor for the QMSI SS GPIO driver
      arch/arc: Use dts to set gpio priorities for quark_se_c1000_ss
      drivers/gpio: Removing dts generated options in QMSI Kconfig
      dts/x86: Update i2c nodes with interrupts for quark_se and quark_d2000
      arch: Use dts to set i2c priorities for quark_se/quark_d2000
      drivers/serial: Add port 2 instance in ns16550 driver

Tomasz Gorochowik (3):
      net: Implement VLAN priority to packet priority conversion
      tests/net: Fix ethernet mgmt mac change test
      net/ethernet: Fix mac address setting through ethernet mgmt

Tomasz Jurtsch (2):
      arch: riscv32: fe310: Always-On domain adress definition
      boards: SiFive HiFive1 board

Ulf Magnusson (46):
      scripts: kconfig: Give symbol locations in warnings
      kconfiglib: Update to 7245bad9ebb58
      doc: sphinx: Fix broken import of lexer.DtsLexer
      filter-doc-log.sh: Fix error for empty log file
      kconfig: Remove no-op selects of choice symbols
      doc: genrest: Use Kconfiglib 2 and improve output
      drivers: spi: Format SYS_LOG_SPI_LEVEL help nicer
      scripts: Fix misspelled CMake project name
      kconfig: Do not source ""arch/posix/core/Kconfig""
      kconfiglib: Update to 2259d353426f1
      kconfiglib: Update to 981d24aff7654
      kconfiglib: Update to e8408a06c68d8
      boards/arduino101: Enable UART 0 controller
      kconfiglib: Update to get split_expr() in
      doc: genrest: Simplify select logic with split_expr()
      doc: Improve Kconfig interface description
      doc: Clarify application configuration
      doc: Clarify format for CONF_FILE
      doc: Document Zephyr's Kconfig configuration scheme
      kconfig.cmake: Consistently use ZEPHYR_BASE
      kconfiglib: Update to get choice.direct_dep in
      scripts: kconfig: Add a Python menuconfig implementation
      tests: Fix malformed CONFIG_TEST=y prj.conf entry
      kconfiglib: Update to add warning for malformed .config lines
      scripts: kconfig: Turn malformed .config lines into errors
      kconfiglib: Update to default to UTF-8 for Python 3
      scripts: kconfig: Add incremental search to menuconfig
      scripts: kconfig: Switch 'menuconfig' over to menuconfig.py
      doc: Update for menuconfig.py
      scripts: install windows-curses package on Windows
      kconfig: Remove targets specific to the C implementation
      kconfig: Remove the C Kconfig implementation
      kconfig: Mention that checkconfig.py lacks Kconfiglib 2 support
      kconfig: Make 'source' non-globbing and use 'gsource'
      menuconfig: Increase indent and make Unicode more robust
      menuconfig: Fix rendering of long prefilled edit box string
      doc: Document Kconfig extensions and Zephyr-specific behavior
      menuconfig: Make search more flexible and search prompts
      doc: Mention that dependencies can be checked in menuconfig
      kconfig: Get rid of 'option env' bounce symbols
      kconfiglib: Record which MenuNode has each property
      doc: genrest: Show properties on the correct symbol definition
      menuconfig: Show properties on the correct symbol definition
      doc: genrest: Speed up documentation rebuilding
      menuconfig: Add .config loading dialog
      kconfig: Get rid of leading/trailing whitespace in prompts

Vinayak Kariappa Chettimada (7):
      boards: nRF5x DK: Fix missing pull up for switches
      drivers: gpio: nRF5: Use lowest IRQ priority level as default
      drivers: gpio: nrf5: Add support for port P1 in nRF52840 SoC
      drivers: gpio: nrf5: Use popcount and first_lsb_set functions
      Bluetooth: controller: Fix missing device filter clear
      Bluetooth: controller: Use hal/ticker.h to abstract SoC specifics
      drivers: timer: nRFx: Remove redundant code

Wayne Ren (17):
      arch: arc: bug fixes and optimization in exception handling
      arch: arc: bug fixes in irq_load
      arch: arc: optimize the _SysFatalErrorHandler
      arch: arc: add the support of STACK_SENTINEL
      tests: fix arc related codes
      kernel: add CODE_UNREACHABLE in _StackCheckHandler
      arch: arc: fix the typo of label which caused issue #7249
      drivers: spi: fix the bug of slave selection in spi_dw
      arch: arc: refactor the soc part of em_starterkit
      dts: optimize the dts for em_starterkit
      doc: update the doc of em_starterkit
      dts: fixes in the dts of em_starterkit em9d configuration
      dts: optimize and bug fixes the dts of em_starterkit
      arch: arc: reuse GCC_M_CPU in cmake file and remove unused comments
      boards: em_starterkit: add pmod mux init
      arch: arc: add the missing SPI_DW_SPI_CLOCK in dts.fixup
      arch: arc: explictly list all def config

Yannis Damigos (29):
      boards/arm/olimexino_stm32: Enable SPI2 port
      arch/arm/soc/stm32f4: Add STM32F412CG MCU support
      ext/hal/stm32l0xx: Remove stm32l0xx_ll_usb from CMakeLists
      boards/arm/olimexino_stm32: Don't enable I2C and SPI
      dts: dtc v1.4.6 warnings: Fix warning for leading 0s
      boards/arm/stm32_min_dev: Fix APB2 prescaler value
      arch/arm/soc/st_stm32: Fix typos in soc.h
      arch/arm/soc/st_stm32/stm32f1: Add I2C1 to dts.fixup
      drivers: usb_dc_stm32: Add support for all STM32 families
      drivers: usb_dc_stm32: Add usb disconnect pin support
      boards: olimexino_stm32: Add USB support
      boards: stm32f3_disco: Add USB support
      dts/arm/st: Add USB support for stm32f070/72
      dts/arm/st: Add usbotg_fs node to stm32l4 DT
      drivers/usb/device: Remove USB DISCONNECT gpio options
      dts/bindings/usb: Add disconnect gpio in st,stm32-usb.yaml
      boards/arm/olimexino_stm32: Add disconnect gpio in usb node
      arch/soc/st_stm32: Move STM32Cube HAL core funtions
      dts/arm/st: Add USB support for stm32l072/73
      drivers/usb/usb_dc_stm32: Provide EP_TYPE_* defines for L0
      drivers/usb_dc_stm32: HSI48 requires VREFINT in L0
      drivers/stm32l0x_ll_clock: Enable SYSCFG in clock_control
      drivers/stm32f0x_ll_clock: Enable SYSCFG in clock_control
      drivers/usb_dc_stm32: Check if SYSCFG is enabled
      dts/bindings: Add reset/irq gpios to zephyr,bt-hci-spi yaml
      drivers/bluetooth/hci: Name the choice of BT HCI driver bus
      boards: 96b_carbon: add gpios in bt controller node
      boards/96b_carbon: Update doc with USB support
      dts/st,stm32-usb: Add use-prop-name to disconnect-gpios

Youvedeep Singh (6):
      include: posix: correcting the return type of sleep.
      kernel: posix: reorganize posix internal function.
      kernel: msg_q: Add routine to fetch basic attrs from message queue.
      kernel: POSIX: Compatibility layer for POSIX message queue APIs.
      tests: posix: mqueue: Add test for posix message queue APIs.
      kernel: posix: move sleep and usleep functions into c file.

qianfan Zhao (8):
      arch: arm: soc: stm32f0: add STM32F070XB SOC
      boards: nucleo_f070rb: add new board
      usb: hid: Add macros for REPORT descriptor
      samples: usb: add usb hid mouse sample
      hid: core: truncated wLength if it doesn't match report descriptor size
      gitignore: let git ignore *.patch file only to top tree
      usb: dfu: fix 'this area can not be overwritten'
      usb: usb_device.c: rewrite if condition judgment
```",59771425
1537,False,False,2018-03-09T22:25:05Z,2018-03-09T22:26:45Z,"We are pleased to announce the release of Zephyr kernel version 1.11.0.

Major enhancements with this release include:

* Thread-level memory protection on x86, ARC and Arm, userspace and memory
  domains
* Symmetric Multi Processing (SMP) support on the Xtensa architecture.
* Initial Armv8-M architecture support.
* Native development environment on Microsoft Windows.
* Native build target on POSIX platforms.
* POSIX PSE52 partial support.
* Thread support via integration with OpenThread.
* Firmware over-the-air (FOTA) updates over BLE using MCUmgr.
* Lightweight flash storage layer for constrained devices.
* Additional SoC, platform and driver support for many of the already supported
  platforms.

The following sections provide detailed lists of changes by component.

Kernel
******

* Initial Symmetric Multi Processing (SMP) support added:

  * SMP-aware scheduler
  * SMP timer and idling support
  * Available on the Xtensa architecture
* POSIX PSE52 support:

  * Timer, clock, scheduler and pthread APIs

Architectures
*************

* User space and system call related changes:

  * Added ARC user space implementation
  * Added Arm user space implementation
  * Fixed a few MPU related issues with stack guards
* Armv8-M initial architecture support, including the following cores:

  * Arm Cortex-M23
  * Arm Cortex-M33
* New POSIX architecture for native GNU/Linux and macOS build targets:

  * Targets native executables that can be run on the host operating system

Boards
******

* New native_posix board for the POSIX architecture:

  * Includes a template for hardware models
  * Adds support for console and logging
  * Interrupts and timers are simulated in several different configurations
* Added support for the following Arm boards:

  * adafruit_trinket_m0
  * arduino_zero
  * lpcxpresso54114
  * nrf52_sparkfun
  * nucleo_f429zi
  * stm32f072_eval
  * stm32f072b_disco
* Removed Panther board support, which included boards/x86/panther and
  boards/arc/panther_ss
* Refactored dts.fixup so common SoC-related fixes are in arch/<*>/soc
  and board dts.fixup is only used for board-specific items.

Drivers and Sensors
*******************

* New LED PWM driver for ESP32 SoC
* Fixed ESP32 I2C driver
* Added I2C master, QSPI flash, and GPIO drivers for nios-II
* Added PinMux, GPIO, serial drivers for LPC54114
* Added PinMux, GPIO, serial, SPI, and watchdog drivers for sam0
* Added APA102 and WS2821B led_strip drivers
* Added native entropy driver
* Moved some sensors to dts
* Added AMG88xx, CCS811, and VL53L0x sensor drivers
* Redefined SENSOR_CHAN_HUMIDITY in percent

Networking
**********

* Generic OpenThread support added
* OpenThread support to nRF5 IEEE 802.15.4 driver added
* NXP MCUX ethernet driver IPv6 multicast join/leave enhancements
* Ethernet STM32 fixes
* IEEE 802.15.4 Sub-GHz TI CC1200 chip support added
* IEEE 802.15.4 test driver (upipe) hw filtering support added
* IEEE 802.15.4 radio API enhancements
* Net loopback driver fixes
* Net management API event enhancements
* IPv6 neighbor addition and removal can be monitored
* Static IPv4 and DHCPv4 configuration enhancements
* Bluetooth IPSP disconnect fix
* Network buffer enhancements
* ICMPv4 and ICMPv6 error checking fixes
* Network interface address handling enhancements
* Add routing support between network interfaces
* LWM2M fixes and enhancements
* Old legacy HTTP API removed
* Old legacy ZoAP API removed
* CoAP fixes
* TCP fixes
* HTTP fixes
* RPL fixes
* Net-app API fixes
* Net-shell fixes
* BSD socket API fixes

Bluetooth
*********

* Multiple fixes to the controller
* Fixed potential connection transmission deadlock issue with the help
  of a dedicated fragment pool
* Multiple fixes to Mesh support
* Added test automation for Mesh (for tests/bluetooth/tester)

Build and Infrastructure
************************

* Native development environment on Microsoft Windows:

  * Uses CMake and Kconfiglib to avoid requiring an emulation layer
  * Package management support with Chocolatey for simple setup
  * Build time now comparable to Linux and macOS using Ninja

Libraries / Subsystems
***********************

* New management subsystem based on the cross-RTOS MCUmgr:

  * Secure Firmware Updates over BLE and serial
  * Support for file system access and statistics
  * mcumgr cross-platform command-line tool

* FCB (File Circular Buffer) lightweight storage layer:

  * Wear-leveling support for NOR flashes
  * Suitable for memory constrained devices

HALs
****

* Updated Arm CMSIS from version 4.5.0 to 5.2.0
* Updated stm32cube stm32l4xx from version 1.9.0 to 1.10.0
* Updated stm32cube stm32f4xx from version 1.16.0 to 1.18.0
* Added Atmel SAMD21 HAL
* Added mcux 2.2.1 for LPC54114
* Added HAL for VL53L0x sensor from STM
* Imported and moved to nRFx 0.8.0 on Nordic SoCs
* Added QSPI Controller HAL driver

Documentation
*************

* Added MPU specific stack and userspace documentation
* Improved docs for Native (POSIX) support
* Docs for new samples and supported board
* General documentation clarifications and improvements
* Identify daily-built master-branch docs as ""Latest"" version
* Addressed Sphinx-generated intra-page link issues
* Updated doc generation tools (Doxygen, Sphinx, Breathe, Docutils)

Tests and Samples
*****************

* Added additional tests and test improvements for user space testing

Issue Related Items
*******************

These GitHub issues were addressed since the previous 1.10.0 tagged
release:

.. comment  List derived from GitHub Issue query: ...

* :github:`1082` - build all tests have issues for devices that don't exist on a given board
* :github:`1281` - spi_ll_stm32 driver does not support stm32f1soc
* :github:`1291` - Initial Posix PSE52 Support
* :github:`1460` - 1.10 Release Checklist
* :github:`1462` - rename nano_internal.h to kernel_internal.h
* :github:`1526` - Bluetooth:mesh:prov_start: Invalid authentication
* :github:`1532` - There are no RISC-V boards in the list of supported boards
* :github:`1727` - Support out-of-tree board definitions
* :github:`1793` - I2S device APIs and Drivers
* :github:`1868` - Build System cleanup and Kernel / Application build separation
* :github:`1877` - Provide single point of notification for new data on multiple sockets.
* :github:`1890` - Memory Management
* :github:`1891` - Native Port
* :github:`1892` - NFC Stack
* :github:`1893` - Unified Kernel
* :github:`1921` - Bluetooth LE 4.2 Hardware Support
* :github:`1926` - build system does not re-link if linker script changed
* :github:`1930` - bluetooth tester shall support logging on Arduino101
* :github:`2007` - C++ compiler flags are not managed correctly
* :github:`2072` - create abstraction layer to directly use Altera HAL drivers for Nios II IP blocks
* :github:`2107` - handle configuration changes with more code coverage
* :github:`2239` - sporadic illegal instruction exception on Nios II in test_errno
* :github:`2244` - LE Controller: remove util folder
* :github:`2280` - Move defaults.tc and .known-issue under tests/
* :github:`2347` - Thread Protocol v1.1 Dependencies on the IP Stack
* :github:`2365` - Port IOT Protocols to the new IP Stack
* :github:`2477` - no unit tests exist for CONFIG_DEBUG_INFO
* :github:`2620` - object files created outside of $O directory when obj-XYZ path is relative
* :github:`2722` - QEMU NIOS2 sporadic FAIL in tests/legacy/kernel/test_timer/nanokernel
* :github:`2760` - Implement Virtual USB ethernet Adapter support
* :github:`2819` - legacy/kernel/test_task_priv randomly fails on EMSK ARC
* :github:`2889` - [ARC] legacy/benchmark/latency_measure not measuring RIRQ/FIRQ
* :github:`2891` - implement _tsc_read equivalent for all architectures
* :github:`2912` - Develop Guideline for Handling Configuration Changes with More Code Coverage
* :github:`2937` - Thread-level Memory Protection Support
* :github:`2939` - Add Xtensa Port
* :github:`2943` - Support for the KW22D512 Kinetis MCU based USB Dongle
* :github:`2971` - I2C High-Speed Mode is not implemented
* :github:`2994` - The build system crashes when GCCARMEMB_TOOLCHAIN_PATH has a space in it
* :github:`3069` - XML encoding/decoding library
* :github:`3081` - Concise Binary Object Representation (CBOR)
* :github:`3083` - I2C problem Zephyr OS sensor example on NRF51 and F401re
* :github:`3127` - IP stack does not implement multicasting requirements of IPv6 RFCs and network driver model lacks features to implement it properly
* :github:`3240` - Unnecessary code footprint bloat due to ""static inline""
* :github:`3279` - Reclaiming Memory
* :github:`3283` - Split net_buf parsing context from the actual data
* :github:`3302` - samples/subsys/logging/logger-hook needs to be a test case
* :github:`3308` - [TAHI] No ""ICMPv6 error message"" is received while sending echo request with parameter problem header
* :github:`3316` - [IPv6 TAHI] Section 1: RFC 2460 - IPv6 Specification
* :github:`3317` - [IPv6 TAHI]Section 4: RFC 1981 - Path MTU Discovery for IPv6
* :github:`3318` - [IPv6 TAHI]Section 5: RFC 4443 - ICMPv6
* :github:`3322` - [IPv6 TAHI] Section 3: RFC 4862 - IPv6 Stateless Address Autoconfiguration
* :github:`3323` - [IPv6 TAHI] Section 2: RFC 4861 - Neighbor Discovery for IPv6
* :github:`3329` - Build warnings [-Wpointer-sign] with LLVM/icx (bluetooth_ipsp)
* :github:`3345` - Missing board documentation for riscv32/zedboard_pulpino
* :github:`3346` - Missing board documentation for riscv32/qemu_riscv32
* :github:`3351` - Missing board documentation for arm/bbc_microbit board
* :github:`3352` - Missing board documentation for arm/nrf51_blenano
* :github:`3439` - IP stack: No MTU handling on send()
* :github:`3440` - IP stack: No TCP receive window handling
* :github:`3483` - Unify STM32 configuration files
* :github:`3546` - Enabling networking for targets w/o network hw causes hang on boot
* :github:`3565` - Symmetric multiprocessing (SMP) for Xtensa architecture
* :github:`3597` - Build warnings [-Wpointer-sign] with LLVM/icx (tests/net/ieee802154/crypto)
* :github:`3614` - cdc-acm error when printing one byte at a time
* :github:`3617` - Build warnings [-Wshift-overflow] with LLVM/icx (K_MEM_POOL_DEFINE)
* :github:`3667` - _IsInIsr doesn't work properly on Cortex M0
* :github:`3685` - Test suite cleanup and Test Coverage
* :github:`3704` - Move all X86 boards to device tree
* :github:`3707` - intermittent work_queue test failure
* :github:`3712` - RPL client node version bogus incrementation
* :github:`3718` - Mpu stack guard is not set when reaching main
* :github:`3747` - tests/kernel/mem_slab/test_mslab_threadsafe/testcase.ini#test type:qemu-zephyr-arm
* :github:`3809` - Build warnings [-Wimplicit-function-declaration] with LLVM/icx (tests/drivers/pci_enum)
* :github:`3833` - make device_get_binding() more efficient
* :github:`3834` - CDC_ACM is limited to 4 bytes at a time for Arduino 101
* :github:`3838` - Some  tests end up with  0 platforms due to bad filtering
* :github:`3850` - SPI fails on Nucleo_f334r8
* :github:`3855` - Support board files located in application directory
* :github:`3856` - LwM2M: Support write attributes (section 5.4.4 of spec)
* :github:`3858` - Enable OpenThread support for Zephyr
* :github:`3859` - Create OpenThread platform adaptation for Zephyr
* :github:`3860` - Create OpenThread network interface driver
* :github:`3862` - Verify that the OpenThread requirements are fulfilled by Zephyr 15.4 radio driver
* :github:`3870` - Create a shell to configure OpenThread stack
* :github:`3872` - build on windows failed "" error: unrecognized command line option '-no-pie'""
* :github:`3918` - Build error [use of undeclared identifier]with LLVM/icx (samples/net/nats)
* :github:`4000` - xtensa-vectors.S builds wrong versions of ISRs based on HAL information
* :github:`4010` - [CID: 174928]: Control flow issues in /tests/kernel/mem_slab/mslab/src/slab.c
* :github:`4025` - Upgrade to TinyCrypt 0.2.7 has significant API changes
* :github:`4045` - convert to ztest for files in tests/kernel
* :github:`4105` - Sensors: move all the drivers using SPI bus to new SPI API
* :github:`4106` - Flash: move w25qxxdv driver to new SPI API
* :github:`4216` - samples:net:sockets:echo : communication blocks between client and server after few packets transmission
* :github:`4351` - arduino_101: USB device is not listed after flashing with a Zephyr sample
* :github:`4401` - tests/net/ipv6/test.yaml :--Cannot add multicast IPv6 address
* :github:`4445` - sanitycheck --platform-limit is broken
* :github:`4513` - parsetab.py is getting corrupted when multiple instance of sanitycheck is executed simultaneously
* :github:`4549` - tests/crypto/mbedtls/testcase.yaml#test :Build failed
* :github:`4566` - k_busy_wait( ) gives compilation error when CONFIG_SYS_CLOCK_TICKS_PER_SEC is set to 0
* :github:`4568` - dts generation incorrect
* :github:`4576` - no testcase.yaml for tests/drivers/spi/spi_loopback
* :github:`4578` - tests/net/socket/udp/testcase.yaml#test : Build failed on esp32
* :github:`4596` - tests/net/mgmt/testcase.yaml#test :failed due to un-handled exception
* :github:`4597` - tests/drivers/ipm/testcase.yaml#test :unable to print the Expected output
* :github:`4603` - sanitycheck either conceals information from user or spams it
* :github:`4606` - usb mass storage : config waits for Vendor ID and Product ID from user during building
* :github:`4633` - Implement flash page layout api in the Kinetis flash driver
* :github:`4635` - xtensa-esp32-elf-gcc.exe: error: unrecognized command line option '-no-pie'
* :github:`4653` - net: tcp->recv_max_ack isn't used
* :github:`4666` - x86 device trees need interrupt controller nodes
* :github:`4687` - Windows: Remove all dependencies on MSYS2
* :github:`4699` - PWM LED Driver for ESP32
* :github:`4705` -  tests/net/socket/tcp/ undefined reference to __getreent
* :github:`4709` - tests/kernel/fatal/testcase.yaml#stack-sentinel : Kernel Panic
* :github:`4724` - sanitycheck build_only option can be confusing
* :github:`4772` - doc: add contributing info about shippable failures
* :github:`4777` - need a testcase for version number of the kernel and version.h
* :github:`4779` - net: tcp: FIN isn't sent when performing active close.
* :github:`4826` - Bluetooth IPSP example does not reach main() on qemu_cortex_m3
* :github:`4828` - device tree: Introduce bus objects (i2c-device)
* :github:`4851` - cmake does not show verbose output of build tools
* :github:`4885` - cmake: IS_TEST guessing gets thrown off by symlinks
* :github:`4924` - dumb_http_server pollutes the source directory
* :github:`4934` - net: 15.4 network interfaces use incorrect MTU setting of 127
* :github:`4941` - LwM2M: support discovery other than '/'
* :github:`4983` - ARMv8-M basic support
* :github:`4989` - Bluetooth: PTS fails to connect to Zephyr
* :github:`5010` - changes to included linker scripts are not picked up by the build system
* :github:`5017` - Genuino/Arduino 101 Sensor Sample BMI160: Gyro Device not found
* :github:`5091` - MPU fault at drivers/flash/soc_flash_nrf5.c:493 with NFFS enabled on nrf52840_pca10056
* :github:`5101` - LwM2M: device hang after requesting a firmware update to a loopback device IP
* :github:`5109` - yaml: fix key/value syntax to 'mapping' instead of 'series'
* :github:`5130` - include guards missing in toolchain/gcc.h and toolchain/common.h
* :github:`5136` - ""Distinguishing Features"" section in docs is outdated and needs an update
* :github:`5143` - Cmake ignores setting CONFIG_ETH_MCUX_0=n in prj.conf
* :github:`5148` - Lightweight flash storage layer
* :github:`5162` - Reduce duplication in UUID definitions?
* :github:`5184` - kernel system call handlers missing due to -Wl,--no-whole-archive
* :github:`5221` - Build doesn't fail if total RAM usage is greater than the RAM available on the board
* :github:`5226` - Compiling with -O0 causes the kobject text area to exceed the limit (linker error)
* :github:`5228` - The build fails when building echo_server with nrf52840_pca10056
* :github:`5240` - I2C is enabled by default on ESP32
* :github:`5247` - Object tracing test case fails in NRF boards
* :github:`5256` - _nano_tick_delta, sys_tick_delta, sys_tick_delta_32: not used or tested
* :github:`5270` - Not all IEEE802154_MCR20A_RAW references were removed
* :github:`5282` - net: IPv6 DAD is incorrect, wouldn't work (""always succeed"") on mcast medium like Ethernet
* :github:`5283` - reference to non-existing functions in arch/x86/core/intstub.S
* :github:`5305` - flash: use generated FLASH_WRITE_BLOCK_SIZE in flash_stm32_api
* :github:`5317` - IPSP deadlock during disconnect -> net_if_down
* :github:`5326` - IPSP ping fails
* :github:`5328` - build system should try and create conf if not found for non-zephyr SDK
* :github:`5334` - CMake: Ninja support is broken
* :github:`5345` - Cmake: ext: Header file include error: No such file or directory
* :github:`5348` - rom_report is broken for some environments
* :github:`5351` - Some libraries should automatically be linked with 'app'
* :github:`5355` - qemu_x86/qemu_x86_nommu hangs on big executable files
* :github:`5370` - [Coverity CID: 180699] Error handling issues in /tests/bluetooth/tester/src/gatt.c
* :github:`5374` - merge_config.sh can behave differently from merge_config.py
* :github:`5379` - sample: net/socket/http_get: no printf output
* :github:`5382` - P2P Device Firwmare Update (FOTA) over BLE and Serial
* :github:`5391` - drivers: stm32 clock control: F0 Series with PREDIV1 Support uses wrong PLLSOURCE define for HSI clock
* :github:`5401` - delta_ticks_from_prev become negative and waiting tasks never scheduled
* :github:`5406` - UART1 on STM32F0 Series not working: errors in makro to enable clock
* :github:`5418` - Provide a python based replacement for gperf
* :github:`5419` - Provide a python based kconfig processing script, replacement for conf/mconf..
* :github:`5428` - can not build for esp32
* :github:`5444` - bluetooth controller fails when building with -Wshadow
* :github:`5448` - STM32: Entropy test could not build
* :github:`5449` - STM32: provide default configuration for entropy sample
* :github:`5453` - gitlint should allow tabs in commit messages
* :github:`5458` - [ESP32] Make error
* :github:`5466` - sanitycheck: ""CMake Error: : System Error: File name too long""
* :github:`5467` - NFFS file system does no build when newlib libc is used
* :github:`5471` - cmake errors at -B containing @
* :github:`5476` - Native port (posix) to write own PID into a file
* :github:`5477` - Native port (posix) to support receiving signals
* :github:`5483` - Native port (POSIX) should accept command-line arguments
* :github:`5484` - net: ARP/ND: Possibility for deadlocks and DoS
* :github:`5486` - Bluetooth: Cannot connect to prevoiusly disconnected device when BT_PRIVACY is enabled
* :github:`5488` - target_ld_options will apply flags that should be skipped
* :github:`5493` - NFFS does not work with STM32L4 devices due to flash restrictions
* :github:`5497` - cmake: allow to link external libraries with --whole-archive
* :github:`5499` - config BT_CTLR_DEBUG_PINS
* :github:`5504` - net: Incorrect logic for TCP ""ackerr"" statistics
* :github:`5530` - [Coverity CID: 181848] Null pointer dereferences in /subsys/bluetooth/host/mesh/access.c
* :github:`5531` - [Coverity CID: 181847] Incorrect expression in /samples/drivers/crypto/src/main.c
* :github:`5539` - tests/kernel/fatal/stack-sentinel fails when asserts are enabled
* :github:`5546` - (Stupid) questions about coverage reports
* :github:`5548` - coverage should be collected from code built with -O0
* :github:`5557` - Cloning Zephyr with git's core.autocrlf=true leads to obscure errors
* :github:`5565` - net: Kconfig: NET_BUF_LOG and NET_BUF_SIMPLE_LOG unrightly select STDOUT_CONSOLE
* :github:`5566` - kconfig: STDOUT_CONSOLE unrightly stuffed under subsys/debug
* :github:`5576` - None of the :github:'XYZ' links work in the 1.10 release notes
* :github:`5589` - Issue with using generic gcc cross compile with cmake
* :github:`5601` - docs for cc3220sf_launchxl are out of date/incorrect
* :github:`5608` - Bluetooth LE continous scan weird behaviour
* :github:`5619` - zephyr.git/tests/misc/test_build/testcase.yaml#test_newlib @ esp32:xtensa BUILD failed
* :github:`5626` - Building samples failed
* :github:`5640` - MacOS compile error with -std=gnu89
* :github:`5645` - build failures with asserts enabled/newlib: arch/arm/core/cortex_m/mpu/nxp_mpu.c
* :github:`5646` - userbuffer_validate test fails with double fault if CONFIG_USERSPACE disabled
* :github:`5650` - i2c driver test on ESP32 fails with error
* :github:`5651` - [In Progress] arch: arm: linkder: vt must be linked at address 0x00000000 for Cortex-M0
* :github:`5660` - doc: make: make htmldocs fails in genrest.py/kconfiglib.py
* :github:`5673` - kconfig regression: Existing configuration is overwritten on reconfiguration
* :github:`5687` - docs: Confusing treatment of ""Sensor Drivers"" in Zephyr subsystem docs
* :github:`5692` - sensors: struct sensor_value::val2 is confusingly defined
* :github:`5693` - sensors: SENSOR_CHAN_HUMIDITY confusingly defined in ""milli percent"", SENSOR_CHAN_DISTANCE inconsistently defined in millimeters
* :github:`5696` - net_app: Static vs DHCPv4 behavior appears to be not as described
* :github:`5699` - Zephyr installs a broken pyOCD
* :github:`5717` - CONTRIBUTING instructions are Linux-specific and don't work for Windows
* :github:`5719` - need a zephyr-env.sh equivalent for Windows developers
* :github:`5720` - Add CONFIG_NOOPTIMIZATIONS option
* :github:`5722` - dts board configuration is incompatible with ""build all"" kind of test
* :github:`5724` - [Windows] Instructions for setting up a bash-less environment uses bashisms
* :github:`5726` - CI should use the same generator as the sanitycheck default
* :github:`5737` - [Coverity CID: 182195] Error handling issues in /subsys/fs/fcb/fcb_walk.c
* :github:`5740` - [Coverity CID: 181923] Incorrect expression in /subsys/bluetooth/controller/ll_sw/ctrl.c
* :github:`5741` - [Coverity CID: 181922] Incorrect expression in /subsys/bluetooth/controller/ll_sw/ctrl.c
* :github:`5743` - Windows and Linux are writing .config files with options re-ordered
* :github:`5749` - Exception and Interrupt vector forwarding
* :github:`5753` - Bluetooth: controller: In nRF5 radio. c RATEBOOST event not cleared in ISRs
* :github:`5755` - Support flash in jlink runner
* :github:`5756` - MCUboot-compatible builds in Zephyr
* :github:`5760` - doc: device.h defines device_power_management_api group twice
* :github:`5761` - NRF5 BLE radio driver: PPI18 is cleared unconditionally
* :github:`5762` - Windows 10 WSL does not supports Native POSIX Boards
* :github:`5766` - boards: nucleo_f413zh: Likely outdated OpenOCD info in docs
* :github:`5771` - Linking issues with host cross compile with cmake
* :github:`5772` - sanitycheck crashes if ZEPHYR_BASE has symlinks in its path
* :github:`5778` - Add/fix flash controller nodes for NXP kinetis SoCs
* :github:`5779` - bluetooth test_controller_4_0 fails to build on nrf52840_pca10056
* :github:`5784` - make rom_report fails for qemu_x86 (not finding zephyr.bin)
* :github:`5794` - wiki/Development-Model is out of date
* :github:`5808` - msys2 getting started instructions are missing Ninja install step
* :github:`5817` - socket.h: Using #define for POSIX redefinition of zsock\_ functions has unintended consequences
* :github:`5821` - [MSYS2] Unable to build Zephyr
* :github:`5823` - Bluetooth: Collision during Start Encryption procedure
* :github:`5836` - spi: stm32: convert remaining boards that support SPI to using dts
* :github:`5853` - Using newlibc in a project breaks 'rom_report' and 'ram_report' targets.
* :github:`5866` - ram_report not working for qemu targets
* :github:`5877` - sensors: Cleanup Kconfig for address, driver & bus name
* :github:`5881` - enabling THREAD_MONITOR causes tests to fail
* :github:`5886` - [Coverity CID: 182602] Integer handling issues in /drivers/interrupt_controller/system_apic.c
* :github:`5887` - [Coverity CID: 182597] Control flow issues in /drivers/sensor/vl53l0x/vl53l0x.c
* :github:`5888` - [Coverity CID: 182594] Control flow issues in /drivers/sensor/lsm6ds0/lsm6ds0.c
* :github:`5889` - [Coverity CID: 182593] Control flow issues in /drivers/sensor/vl53l0x/vl53l0x.c
* :github:`5890` - [Coverity CID: 182588] Integer handling issues in /drivers/sensor/hts221/hts221.c
* :github:`5903` - Code coverage reports seem wrong
* :github:`5919` - Remove obsolete FLASH_DRIVER_NAME
* :github:`5938` - Incorrectly reported coverage changes
* :github:`5952` - API k_delayed_work_submit_to_queue() make a delayed_work unusable
* :github:`5958` - ""Ninja flash"" swallows user prompts
* :github:`5968` - datastructure for LIFO
* :github:`5982` - nRF5x  subscribe will cause HardFault while disconnect and reconnect
* :github:`5989` - workstation setup instructions are broken for Fedora
* :github:`5992` - doc: Discrepancy in Zephyr memory domain API documentation
* :github:`5994` - samples/bluetooth/ipsp: build failed for MICRO-BIT & NRF51-PCA10028 HW
* :github:`5996` - Need a ""ps aux"" like command to list all running threads and their attributes
* :github:`6010` - Removal of old HTTP API is causing errors and faults
* :github:`6013` - updated workstations setup breaks FC27
* :github:`6023` - Bluetooth: Invalid behaviour of Transport Layer after Incomplete timer expiration
* :github:`6025` - mbedTLS: Buffer overflow security issue, requires upgrade to 2.7.0
* :github:`6050` - IPSP sample failed: Cannot bind IPv6 mcast (-2)
* :github:`6062` - build failure in tests/boards/altera_max10/i2c_master with sys log enabled
* :github:`6064` - k_is_in_isr() returns false inside ""direct"" interrupts on several arches
* :github:`6081` - echo server crash from corrupt ICMPv4 packet
* :github:`6083` - Bluetooth: Regression in MESH tests
* :github:`6091` - [Coverity CID: 182780] Error handling issues in /samples/net/sockets/http_get/src/http_get.c
* :github:`6092` - [Coverity CID: 182779] Memory - corruptions in /drivers/flash/soc_flash_nios2_qspi.c
* :github:`6102` - [Coverity CID: 182769] Error handling issues in /subsys/bluetooth/host/mesh/beacon.c
* :github:`6121` - doc: unit tests documentation refers to non existing sample code
* :github:`6127` - net: Semantics of CONFIG_NET_BUF_POOL_USAGE changed (incorrectly)
* :github:`6131` - mbedtls: Name of config-mini-tls1_2.h contradicts description
* :github:`6135` - build error with gcc 7.3
* :github:`6164` - timer: cortex_m: Incorrect read of clock cycles counter after idle tickless period
* :github:`6185` - [MSYS2] Unable to build hello_world sample
* :github:`6194` - K64F ethernet regression since f7ec62eb
* :github:`6197` - echo server crash from corrupt ICMPv6 packet
* :github:`6204` - bluetooth controller: crc init is not random
* :github:`6217` - echo server crash from corrupt ICMPv6 NS packet
* :github:`6229` - Bluetooth, nRF51: ticker_success_assert during flash erase
* :github:`6231` - samples/bluetooth/eddystone: failed to connect with central device
* :github:`6232` - samples/bluetooth/central_hr: Run time HARD fault occurs
* :github:`6233` - samples/bluetooth/central: Run time HARD fault occurs
* :github:`6235` - echo server crash from ICMPv6 NS source link layer address anomaly
* :github:`6238` - spi: stm32f0 IRQ priority is invalid
* :github:`6240` - ""Previous execution"" and ""Next execution"" display problem.
* :github:`6257` - test, please ignore
* :github:`6261` - [Coverity CID: 182887] Control flow issues in /drivers/gpio/gpio_esp32.c
* :github:`6263` - ARC: Implement userspace
* :github:`6264` - ARM: Implement Userspace
* :github:`6279` - Add doc to samples/bluetooth/mesh & samples/bluetooth/mesh_demo
* :github:`6284` - docs.zephyrproject.org should be served with HTTPS
* :github:`6309` - Non-blocking BSD sockets not working as expected
* :github:`6312` - The shell sample does not working on k64f board
* :github:`6315` - echo server crash from malformed ICMPv6 NA
* :github:`6322` - shell crashes when enter is pressed
* :github:`6323` - ""SPI master port SPI_1 not found* when porting spi ethernet device enc28j60 on stm32_min_dev board
* :github:`6324` - doc: Project coding standards: page not found
* :github:`6333` - How do I implement GPIO on the f429zi board?
* :github:`6339` - samples/drivers/gpio Sample doesn't work on ESP32 after SMP support was added
* :github:`6346` - ESP-32 preemption regressions with asm2
* :github:`6382` - echo server: crash from unsolicited RA reachable time anomaly
* :github:`6393` - echo server: crash from NS flood
* :github:`6429` - How to add custom driver subdirectory to application project?
* :github:`6432` - daily doc build pages don't indicate their version
* :github:`6439` - ESP32 doesn't compile in master
* :github:`6444` - tests/kernel/mem_protect/obj_validation/ fails to build
* :github:`6455` - k_sleep() fails on ESP32 sometimes
* :github:`6469` - tests/crypto/ecc_dsa results in FATAL EXCEPTION on esp32
* :github:`6470` - tests/crypto/ecc_dh results in FATAL EXCEPTION on esp32
* :github:`6471` - tests/crypto/aes results in Assertion failure on esp32
* :github:`6472` - tests/crypto/sha256 results in Assertion failure on esp32
* :github:`6505` - Userspace support: stack corruption for ARC em7d v2.3
",59771425
1538,False,True,2018-03-08T18:11:29Z,2018-03-08T18:14:28Z,"```
Aapo Vienamo (2):
      sensors: css811: Use HAS_DTS_I2C_DEVICE in Kconfig
      drivers: sensor: ccs811: Fix value conversion

Anas Nashif (9):
      codeowners: add additional owners for riscv32
      CODEOWNERS: minor cleanup
      tests: posix: rwlock: add more tests
      tests: move posix layer tests out of kernel
      tests: posix: fix test names in yaml
      posix: sem_init accepts zero value
      tests: posix: add negative testing for semaphore
      tests: pthread: use posix semaphore
      tests: remove duplicate pthread test

Andrew Boie (1):
      arch: x86: fix integer stub comments

Andrzej Puzdrowski (4):
      test: subsys: storage: flash_map: fix test of get sectors API
      subsys: storage: flash_map: Fix Coverity issues
      subsys: storage: flash_map: enable only if any flash driver is enable
      drivers: flash: move FLASH_HAS_PAGE_LAYOUT Kconfig from arch

Andy Ross (3):
      xtensa/asm2: Fix stack pointer during preemption spills
      xtensa/asm2: Save shift/loop registers on exception entry
      tests/crypto/mbedtls: Disable CONFIG_FORCE_NO_ASSERT

Carles Cufi (3):
      doc: release notes: Add major 1.11 features
      Bluetooth: controller: Generate LE Conn Complete on cancellation
      release: move version to 1.11.0-rc3

David B. Kinder (3):
      doc: add 1.11 links for docs and release notes
      doc: add version info on Latest docs
      doc: release notes: fix spelling and formatting

Erwan Gouriou (6):
      ext/hal: stm32cube: Update STM32F0 README file
      ext/hal: stm32cube: Update STM32F1 README file
      ext/hal: stm32cube: Update STM32F3 README file
      ext/hal: stm32cube: Update STM32F4 README file
      ext/hal: stm32cube: Update STM32F7 README file
      ext/hal: stm32cube: Update STM32L4 README file

Ioannis Glaropoulos (2):
      arch: arm: remove redundant dependence on ARM_CORE_MPU
      arch: arm: fix bug in escalted HF dump

Johan Hedberg (3):
      samples: bluetooth: mesh: Add basic documentation
      Bluetooth: Mesh: Switch to using Linux Foundation Company ID
      doc: release notes: Add Bluetooth changes for 1.11 release

Kumar Gala (7):
      kernel: mem_domain: Fix compile issues
      arch: arm: Add one hardware platform to default testing
      samples: sensor: ccs811: Add dummy dts.fixup so we can always build
      tests: fatal: Fix incorrect filter on kernel.fatal.stack_protection
      doc: release notes: Add board related release notes
      drivers: sensor: lsm6ds0: Fix assert logical error
      doc: release notes: add HAL section related updates

Leandro Pereira (2):
      soc: esp32: Enable building with newer ESP-IDF
      doc: release notes: Add notes for ESP32 SoCs

Luiz Augusto von Dentz (1):
      Bluetooth: GATT: Fix possible crash while resubscribing

Mariusz Skamra (2):
      Bluetooth: Add missing check prior sending LE Set Privacy Mode cmd
      Bluetooth: Fix available LPN groups count

Maureen Helm (2):
      CODEOWNERS: Update entries for nxp soc families, boards, and drivers
      doc: release notes: Add driver and sensor changes for 1.11 release

Niranjhana N (1):
      tests: kernel: posix: stop relying on path for naming

Paul Sokolovsky (3):
      net: sockets: Fix mask application in sock_set_flag()
      net: sockets: zsock_accepted_cb: Init child socket on success only
      net: sockets: Preserve user_data for any net_context send() or recv()

Punit Vara (3):
      kernel: Remove unnecessary old code
      kernel: Add posix API for semaphore
      tests: add semaphore posix API test

Ramakrishna Pallala (2):
      tests: kernel: Add a test to verify early sleep
      drivers: flash: Fix Nios-II QSPI flash Coverity issue

Ravi kumar Veeramally (1):
      net: http: Provide destination address in http replies

Reto Schneider (1):
      boards: olimex stm32-e407: Fix pin number of RESET

Wayne Ren (5):
      scripts: bug fixes in arc.py for make flash
      boards: em_starterkit: fix the mpu regions definition
      boards: em_starterkit: fix the board default config
      arch: arc: bug fixes in arc mpu driver
      arch: arc: fix the bug of context switch in interrupt

Youvedeep Singh (7):
      kernel: POSIX: Compatibility layer for POSIX read-write lock APIs.
      tests: kernel: posix: pthread_rwlock: POSIX rw lock test.
      tests: posix: pthread_rwlock: Added more APIs in test.
      kernel: POSIX: correcting time calculation in timer_gettime.
      tests: posix: timer: Added some APIs in test.
      kernel: pthread: correcting pthread_setschedparam.
      tests: posix: pthread_cancel: Added some APIs in test.
```",59771425
1539,False,True,2018-03-04T19:46:48Z,2018-03-04T19:50:02Z,"```
Aapo Vienamo (1):
      drivers: i2c: nrf5: Make the driver thread-safe

Alberto Escolar Piedras (6):
      native: added more proper command line parameters parsing
      native: added entropy device
      samples: drivers/entropy fixes
      bluetooth: controller: last radio hal changes for simulation
      native: doc: command line related improvements
      bluetooth: controller: nrf5: fix to IC-specific reset function

Anas Nashif (1):
      tests: slab: fix dead code

Andrei Emeltchenko (3):
      net: Exit early on zero length packet append
      usb: msc: Fix USB write check
      usb: msc: Cleanup USB write

Andy Gross (1):
      doc: release notes: Add security notes

Carles Cufi (2):
      bluetooth: controller: nrf5: Add IC-specific reset function
      Bluetooth: controller: Default to the LF Company ID

David B. Kinder (5):
      doc: fix broken link in contributing guidelines
      doc: fix misspellings in XTENSA Kconfig
      doc: fix misspellings in docs
      doc: remove use of sphinx autodoc extension
      doc: release notes: documentation

Holman Greenhand (1):
      timer: cortex_m: Fix the discontinuous readings of the cycle counter.

Ioannis Glaropoulos (2):
      cmake: indicate single precision floating-point for Cortex-M33
      arch: arm: correct fault address logging

Johan Hedberg (2):
      drivers: led_strip: Add driver for software-based WS2812B operation
      samples: led_strip: Extend ws2812 sample with ws2812b_sw support

Johannes Hutter (1):
      Bluetooth: Add HCI error code definitions

Jonas Pfaff (1):
      boards: arm: same70: Add mcuboot flash partitions to dts

Jukka Rissanen (1):
      doc: Add networking information to 1.11 release note

Justin Watson (1):
      codeowners: Add fallrisk as codeowner of SOC SAM4S

Kumar Gala (8):
      cmake: Move SOC_* var defines to cmake/app/boilerplate.cmake
      cmake: dts.cmake: Use SOC_PATH to find soc/dts.fixup
      dts: quark_se_c1000_ss: Refactor dts.fixup into arch/arc/soc
      dts: quark_se: Refactor SoC dts.fixup into arch/x86/soc/intel_quark/<SOC>
      dts: ia32: Refactor SoC dts.fixup into arch/x86/soc/ia32
      dts: x86/atom: Refactor SoC dts.fixup into arch/x86/soc/atom
      dts: arm: Refactor SoC dts.fixup into arch/arm/soc
      cmake: dts: Fix usage of BOARD vs BOARD_FAMILY

Leandro Pereira (13):
      kernel: mem_domain: Check for overlapping regions when considering W^X
      kernel: mem_domain: Use u8_t for number of partitions in struct
      net: 6lo: Do not try compressing IPHC header if not set
      net: ip: dhcpv4: Do not try to write to NULL pointer on failure
      net: ipv6: net_icmpv6_get_na_hdr() may return NULL
      net: ipv6: Remove unused net_ipv6_get_nbr_by_index()
      net: ipv6: net_icmpv6_get_ns_hdr() may return NULL
      net: ipv6: net_icmpv6_get_ra_hdr() may return NULL
      net: ieee802154: net_udp_get_hdr() might return NULL
      net: net_pkt: A net_context might have no interface
      net: route: Do not dereference NULL pointer while getting next hop
      net: net_app: Close packet if couldn't skip TLS header
      net: sockets: Do not reference NULL pointer with empty frags on start

Mariusz Skamra (1):
      Bluetooth: Workaround privacy feature issue

Marti Bolivar (5):
      doc: flash_partitions: rework
      doc: application: re-work DT overlay section
      dts: common.dts: trivial whitespace cleanup
      boards: dts: replace comments with links to documentation
      boards: delete misleading comments in flash partitions

Michael Hope (2):
      slip: fix a bug when in non-TAP mode.
      netusb: drop the extra byte added for multiple-of-64-byte packets.

Michael Scott (6):
      net: http: client: handle empty body for PUT/POST request response
      net: http: honor CONFIG_HTTP_CLIENT_NETWORK_TIMEOUT setting
      net: http: fix flush in http_prepare_and_send()
      net: http: dont add CRLF to protocol in http_client_send_get_req()
      net: http: client: remove payload send_chunk logic
      net: context: fix semaphore for offload in in net_context_put()

Niranjhana N (6):
      tests: kernel: posix: add ztest to POSIX clock
      tests: kernel: posix: add ztest to pthread
      tests: kernel: posix: add ztest to pthread_cancel
      tests: kernel: posix: add ztest to pthread_join
      tests: kernel: posix: add ztest to timer
      tests: kernel: posix: add pthread tests

Paul Sokolovsky (3):
      net: app: Move mbedTLS debug log level config to mbedTLS Kconfig
      samples: sockets: echo: Better error and short write handling
      samples: net: echo_async: Better error and write handling

PhilÃ©mon Jaermann (1):
      drivers: sensors: Enable LSM6DS0 GYRO sampling rate

Ruslan Mstoi (4):
      drivers: console: Fix crash in shell
      net: ipv6: Drop ICMPv6 packet if NA header is NULL
      net: ipv6: Drop ICMPv6 NS if neighbor table is full
      net: ipv6: Ignore reachable time greater than maximum

Savinay Dharmappa (1):
      subsys: kernel_event_logger: change kernel event values

Sebastian BÃ¸e (3):
      cmake: Find out earlier whether ccache is to be used or not
      openthread: Use ccache when enabled
      stm32cube: cmake: Pure refactoring of build script

Spoorthi K (1):
      tests: kernel: Verify the call to abort handler

Tomasz Bursztyka (2):
      net/mgmt: Fix how event_mask is handled on layer and layer code part
      net/mgmt: Protect the event_callback list when manipulating it.

Vinayak Kariappa Chettimada (1):
      Bluetooth: controller: Fix missing advDelay in Low Duty Cycle Directed

Vitor Massaru Iha (2):
      drivers: pwm: Add PWM LED driver for ESP32
      samples: basic: fade_led: Update sample to work with ESP32

Yannis Damigos (1):
      boards/arm/nucleo_l476rg: Fix usart1 node

Youvedeep Singh (1):
      kernel: POSIX: correcting default thread prio & policy in attr.
```",59771425
1540,False,True,2018-02-22T15:36:23Z,2018-02-22T15:52:02Z,"```
Aapo Vienamo (2):
      drivers: i2c: nrf5: Fix SDA pin naming
      drivers: i2c: nrf5: Make pins for Port 1 configurable

Adithya Baglody (15):
      x86: quark_d2000: ISR stack size was no longer sufficient.
      boards: quark_d2000: openocd: Fixed load image command for D2000.
      kernel: userspace: Fixed the issue of handlers getting dropped by linker
      kernel: mem_domain: Add arch specfic destroy for remove thread API.
      kernel: mem_domain: Add an arch interface to configure memory domain
      kernel: mem_domain: Add to current thread should configure immediately.
      tests: kernel: fatal: x86: Fixed the issue with stack alignment.
      ztest: cleanup phase should reset the timeout queue.
      tests: x86_mmu_api: Fixed testcase crash.
      kernel: thread: Repeated thread abort crashes.
      tests: abort: Testcase for repeated thread abort
      ztest: cleanup phase should reset the timeout queue.
      userspace: ARM: Fixed Kconfig for ARM_USERSPACE
      cmake: kobject: Fixed kobject text area overflow for optimization 0
      tests: pipe: pipe_api: Converted pipe test cases to run in usermode.

Alberto Escolar Piedras (56):
      arch: native: Run Zephyr natively in a POSIX OS
      native: test timestamp_serialize for POSIX
      tests: benchmark: fix for too fast archs
      tests: kernel/context posix arch support
      test: kernel/fatal changes for POSIX
      native: test: exit as soon as test is done
      test: sprintf fix for POSIX arch
      test: workq : fix for native arch
      tests: kernel/common : fix for native
      test: kernel/tickless fix for native
      test: sleep: fix for posix arch
      test: timer use k_busy_wait()
      test: kernel/critical fix for posix arch
      tests: kernel/threads/scheduling fix for native arch
      native: blacklisted 3 testcases
      native: Handle gracefully SIGTERM and SIGINT
      tests: bluetooth/bluetooth can also be run in native_posix
      native: Accept command line arguments
      native: native_posix doc improvements
      sanitycheck: Allow pre/postfixes in tests stdout
      tests: driver/ipm blacklist for POSIX arch
      tests: kernel/context support other posix boards
      tests: bluetooth/bluetooth fix for boards with a controller
      native: don't slow down tests
      native: documentation improvements
      native: fixed configuration warning
      native: Corrected board name in config short description
      native: nrf52 changes to HAL to support running on simulated HW
      native: minor consistency rename
      native: doc fix regarding ztest not stopping
      sanitycheck: fix crashes with symlinks in path
      native: arch: added recommended stack size config
      native: added stdin handling for shell
      test: shell: native_posix also supports shell
      shell: Added noprompt command
      native: doc: typo in figure
      build: Added CONFIG_NO_OPTIMIZATIONS
      CI: preprocess coverage with lcov for codecov.io
      native: POSIX arch: Exclude unlikely code from coverage
      native: SOC: exclude unlikely code from coverage
      native test: End tests as soon as they pass fail
      native: exclude from coverage not coverable code
      native: added posix_get_hw_cycle()
      native: native_posix timer + irq fix
      test: sha256 can also be run in native_posix
      test: kernel/common added note about systick period
      test: bugfix kernel/tickless/tickless_concept
      test: run benchmark/boot_time also in native_posix
      tests: run tests/kernel/tickless also in ARCH_POSIX
      native: coverage exclusions
      native: timer bugfix in tickless mode part
      CI: also generate coverage for unit tests
      doc: Sanitycheck command line options fixup
      sanitycheck: better coverage report generation
      native: __ASSERT() to immediately terminate
      CODEOWNERS: added entry for POSIX arch & native_posix board

Anas Nashif (244):
      kconfig: stack_usage: remove extra space
      kconfig: remove deprecated DEBUG_TRACING_KERNEL_OBJECTS
      kernel: sys_clock: remove obsolete and unused functions
      kernel: threads: remove thread groups
      kernel: remove reference to legacy_timer.c in build system
      doc: fix version parsing
      boards: fix board yaml syntax
      tests/samples: fixed yaml syntax
      sanitycheck: refactor data parsing in script
      sanitycheck: flake8 fixes and move closer to pep8
      sanitycheck: use test instead of section
      sanitycheck: reworked Platform/Architecture classes
      sanitycheck: remove platform-level option
      sanitycheck: we do not need to pass ARCH= on command line
      sanitycheck: descriptive variable names
      sanitycheck: remove usage of qemu for generic handlers
      sanitycheck: disable expr parser debug
      sanitycheck: allow placing parsetab.py in a custom dir
      sanitycheck: adapt testcase documentation
      doc: add __init__.py for python2 compatibility
      kconfig: fix help syntax and add spaces
      samples: mesh/onoff-app: fix sample.yaml syntax
      tests/booting/stub: disable banner
      boards: remove panther board
      lib: move crc from drivers to lib/
      lib: move ring_buffer from misc/ to lib/
      gitlint: do not complain about hard tabs in body
      cmake: replace @ in path with _
      kernel: support custom k_busy_wait()
      libc: some architectures do not require baremetal libc
      kconfig: move ARCH_HAS_THREAD_ABORT to arch level
      cmake: add zephyr_link_libraries_ifdef
      arch: architecture defines kernel entry
      kernel: move posix header to posix/
      board: posix: add native_posix board definition
      cmake: support other emulation platforms/runners
      posix: native: support native runner
      cmake: cleanup qemu runner configuration
      native: build zephyr.exe for posix arch
      native: build .exe files for posix arch
      testing: add option to generate coverage reports
      tests: crypto: fix call to memset
      posix: enable benchmarks for other architectures
      sanitycheck: support native build with *.exe extension
      sanitycheck: add native handler
      sanitycheck: work around linking posix port
      ci: generate code coverage report
      tests: move aio sample to tests
      tests: rename AIO api test
      build: remove stray CMakeLists.txt
      tests: dma: use depends_on to whitelist platforms
      tests: remove standalone enc28j60 build test
      tests: add a new harness keyword to schema
      tests: gpio: make test depend on gpio capability
      boards: add supported features
      sanitycheck: harness support
      tests: i2c: make test depend on i2c
      tests: integrate nsim test in build test
      tests: ipm: fix testcase tags
      tests: pci: fix tags
      tests: pinmux: depend on pinmux and support harness
      samples: pwm: depend on boards supporting PWM
      tests: pwm: fix dependencies and use depends_on
      tests: integrate quark clock test in build test
      tests: rtc: fix dependencies
      tests: uart: fixed filtering and make test global
      tests: kernel: move build test out of kernel
      samples: apds9960: remove arc related configs
      samples: apds9960: fix dependencies
      samples: bme280: fix dependencies and test cleanup
      samples: bmg160: fix dependencies and test cleanup
      samples: bmi150: fix dependencies and test cleanup
      samples: fxas21002: fix dependencies and test cleanup
      samples: fxos8700: fix dependencies and test cleanup
      samples: hts221: fix dependencies and test cleanup
      samples: magn_polling: fix dependencies and test cleanup
      samples: bmi160: fix dependencies and test cleanup
      samples: max30101: fix dependencies and test cleanup
      samples: mcp9808: fix dependencies and test cleanup
      samples: sx9500: fix dependencies and test cleanup
      samples: TH02: fix dependencies and test cleanup
      samples: TMP112: fix dependencies and test cleanup
      samples: rtc: fix dependencies and test cleanup
      samples: watchdog: fix dependencies and sample cleanup
      tests: benchmark: rename default .conf file
      tests: move gdb_server to test_build
      samples: bluetooth and net samples need test setup
      samples: entropy: filter based on HW capabilities
      samples: crypto: remove build_only and sample cleanup
      samples: drivers: remove build_only flag
      samples: remove build_only from various samples
      samples: remove more build_only tags
      tests: remove build_only option
      tests: gdb server is build_only
      tests: timer_api: remove build_only, exclude arches
      net: remove zoap library
      sanitycheck: declare command line options global
      sanitycheck: use global command line options variable
      sanitycheck: support ninja builder
      sanitycheck: remove unused map
      sanitycheck: encode logs correctly
      ci: upload coverage data to codecov.io
      ci: add .codecov.yml for codecov.io configuration
      ci: coverage: do not parse boards without coverage
      tests: coverage depends on native applications
      coverage: build with -O0 to get more information
      scripts: python: cleanup script and fix PEP8 issues
      script: remove unused script: gcc-version.sh
      kconfig: rename CONFIG_BSP_SHARED_GDT_RAM_*
      tests: test sys_kernel_version_get()
      kernel: version: parenthesize macro value
      ci: codecov.io: ignore appending adjustments
      sanitycheck: move native_posix to the top
      ci: do coverage reporting only from first matrix job
      doc: remove unsupported doxygen options
      ci: run sanitycheck with ninja
      tests: static_idt: do not include test cmake
      tests: remove empty test header
      tests: minor cleanup of test file headers
      ext: tinycrypt: Update README to reflect latest version
      tests: remove obsolete CONFIG_MDEF
      version: fix version handling without extra_version set
      tests/samples: remove unknown option LOG_CBUFFER/LOGGER_BACKEND
      kconfig: fix help text indentation
      arch: fix typo defafult -> default
      cmake: remove IS_TEST handling
      tests: add CONFIG_TEST for marking tests
      tests: add help text for TEST_EXTRA_STACKSIZE
      kernel: enable boot banner by default
      tests: remove test.config
      samples: fix amg88xx sample.yaml syntax
      Bluetooth: remove unused BT_DEBUG_COLOR
      drivers: ti_adc108s102: remove newline from syslog messages
      ci: run sanitycheck with assertions enabled
      sanitycheck: filter on CONFIG_ASSERT
      kernel: remove empty string in assert statement
      samples: rpl: do not build when assert is enabled
      tests: enable coverage
      gitlint: do not allow title-only commit messages
      gitlint: fix check for line_count
      samples: nfc: update README
      tests: fs: fix README and adapt for cmake
      tests: mem_protect: fix README and adapt for cmake
      tests: mqtt_packet: fix README and adapt for cmake
      boards: arduino_zero: document build using cmake
      ci: update docker image for CI builds
      doc: recent kconfig changes break doc generation
      samples: crypto: increase min_ram for sample
      CODEOWNERS: misc updates
      tests: obj_tracing: disable BT for this test
      cmake: do not error on missing 'config'
      Revert ""ztest: cleanup phase should reset the timeout queue.""
      sanitycheck: do not list discards when loading tests from file
      sanitycheck: reduce verbosity when selecting specifc platforms
      ring_buffer: remove broken object_tracing support
      sanitycheck: support new simulation keyword
      boards: mps2-an385: this platform is supported by qemu
      shell: add a shell banner
      shell: kernel: rename tasks -> threads
      shell: rename sample to be less generic
      shell: rename module sections
      shell: support standalone commands
      shell: rename get_mod_cmd
      samples: shell: add standalone version command
      sanitycheck: support harness_config keyword in schema
      sanitycheck: add harness classes
      sanitycheck: native: write output to run.log
      sample: synchronization: support console harness
      sample: hello_world: support console harness
      sample: external_lib: support console harness
      sample: philosophers: support console harness
      sample: cpp_synchronization: support console harness
      sample: kernel_event_logger: cleanup headers
      samples: philosophers: test more scenarios
      samples: use console harness for some samples
      tests: native: do not kill process when test completes
      samples: event_logger: remove filter and support harness
      tests: mpu_stack_guard: remove filter and support harness
      tests: mem_domain_apis: remove filter and support harness
      tests: nfc_hello: remove filter and support harness
      test: mbedtls: remove while loop
      native: ignore format-truncation warnings (REVERTME)
      samples: exclude some platforms due to bug [REVERTME]
      samples: hello_world: disbale asserts on single thread (REVERTME)
      samples: event_logger: match more lines during sanitycheck
      samples: philosophers: test different configurations
      samples: crypto: remove DEBUG/ASSERT from prj.conf
      native_posix: enable coverage by default
      sanitycheck: use re.search to match output
      scripts: fix ram_reports and generate bin file if missing
      size_report: create a main() function
      drivers: ioapic: remove pre DTS kconfigs
      x86: remove HAS_DTS checking
      tests: add ringbuffer api test and combine original test
      boards: 96b_carbon: add supported features
      boards: make em_starterkit the defaule for ARC
      boards: arc: default board with MPU enabled
      drivers: pci: when enumerating, only print the device info
      soc: atom: support enumerating PCI devices
      boards: move grub script to a common place
      boards: galileo: update documentation, add ref
      boards: add information about flashing/firmware
      doc: update package dependencies for Linux
      doc: install pyocd using pip2
      sanitycheck: fixed function documentation
      sanitycheck: all handlers produce the same log now
      sanitycheck: rename qemu_crash -> handler_crash
      doc: device.h: fix doxygen grouping
      device: cleanup header layout
      gitlint: use custom rule for line length violations
      doc: we do not need gcc-c++.i686 on fedora
      board: zedboard_pulpino: move docs
      doc: add qemu_riscv32 brief documentation
      toolchain: gcc/common: add header guard
      doc: add initial microbit documentation
      sanitycheck: asserts are now enabled by default
      debug: remove option GDB_INFO
      debug: remove DEBUG_INFO option
      build: deprecate ZEPHYR_GCC_VARIANT
      toolchain: organise toolchain/compiler files
      sanitycheck: make schema for toolchains more flexible
      build: support out-of-tree custom boards
      tests: add test for device class/API
      sanitycheck: check for deprecated variant env variable
      tests: do not use comma separated strings
      kconfig: fix more help spacing issues
      tests: common: use consistent test names
      tests: sprintf: move to ztest
      tests: move sprintf test out of kernel
      tests: mem_pool: move proper to ztest
      tests: work_queue: use ztest properly
      tests: boot_page_table cleanup
      tests: kernel: stop relying on path for naming
      tests: crypto: stop relying on path for naming
      tests: crypto: aes: use meaningful test names
      tests: libc: cleanup naming and expand string tests
      tests: move c lib test to lib/
      tests: move bitfields test to common/
      tests: lib: use meaningful test names
      tests: move multilib test to common/
      tests: static_idt: cleanup test
      tests: mslab: cleanup output and use ztest
      tests: sleep: rename function to be consistent
      tests: fatal: rename function to be consistent

Anders Pitman (1):
      samples: button: Fix button sample GPIO for nRF52

Andrei Emeltchenko (28):
      usb: Fix USB Device dependency
      usb: netusb: Remove unneeded debug
      samples: Correct default SYS_LOG_USB and SYS_LOG_USB_DRIVER levels
      usb: Rename SYS_LOG_USB to SYS_LOG_USB_DEVICE
      usb: Use standard SYS_LOG_USB_DEVICE_LEVEL for log level
      usb: Add missing definitions needed for RNDIS
      usb: Add init() callback to network device functions
      usb: rndis: Add RNDIS device descriptors to the table
      usb: rndis: Add Remote NDIS protocol handling
      usb: Set Class Handler buffer size to 256 for RNDIS
      usb: rndis: Select USB_COMPOSITE_DEVICE for RNDIS
      samples: zperf: Add USB RNDIS configuration check
      usb: netusb: Add Networking logging debug level
      usb: Add RNDIS packet boundary check
      usb: rndis: Use offsetof macro to ease offset calculations
      usb: msc: Clean up comment
      usb: netusb: Remove USB custom_handler()
      usb: usbnet: Clean up code
      usb: Clean up code to meet Zephyr standard
      usb: hid: Add Human Interface Device (HID) class
      usb: hid: Use typedef for callbacks
      usb: hid: Add macros for REPORT descriptor
      usb: samples: Add HID sample
      usb: Add sanitycheck configuration
      usb: msc: Remove duplicated class code
      usb: cdc: Remove duplicated class code
      usb: hid: Remove duplicated definitions
      usb: sanitycheck: Clean up sample.yaml

Andrew Boie (4):
      tests: userbuffer_validate: move and rename
      build: warn user about Meltdown vulnerability
      doc: user mode overview documentation
      dma: add system calls for dma_start/dma_stop

Andrzej Głąbek (3):
      ext: nordic: Import relevant files from nrfx 0.8.0
      ext: nordic: Add initial adaptation layer for nrfx
      CODEOWNERS: add @anangl for ADC and counter drivers

Andrzej Puzdrowski (15):
      drivers: flash: Assert implementation of Flash Page Layout
      subsys: storage: Add flash_map abstraction module
      lib: crc: Add crc8-ccitt implementation
      tests: unit: lib: crc: Add test for crc8-ccitt implementation
      subsys: fs: Add Flash Circular Buffer
      tests: subsys: fs: Add tests Flash Circular Buffer module
      subsys: storage: flash_map: devices bindings fetch optimalization
      samples: drivers: soc_flash_nrf5 fix missing flash write access
      dts: bindings: add support for the flash driver name
      tests: subsys: fs: nffs_fs_api: fix nRF5x failures
      tests: subsys: fs: nffs_fs_api: cleanup configuration for nRF5x
      doc: device: dts: Explanation for flash partitions
      subsys: fs: fcb: rework fcb_walk and its callback
      test: subsys: fs: fcb: align to using sectors
      subsys: fs: fcb: remove f_area_id from fcb structure

Andy Gross (19):
      tests: kernel: mem_protect: Fix stack size calc
      tests: kernel: mem_protect: Adjust priv exec tests
      sensor: hts221: Fix assert logical error
      kernel: arm: core: Fix thread monitor wrapping
      makefile: Convert linker function to use names
      arm: Add app data section alignment constraints
      scripts: Add elf_helper.py
      scripts: Covert scripts to use elf_helper.py
      scripts: sanitycheck: Add MPU userspace related sections
      doc: Update security feature information
      arm: mpu: Add user context API placeholder
      arm: userspace: Add ARM userspace infrastructure
      arm: mpu: Enable userspace support for NXP and ARM
      tests: mem_protect: userspace: Adjust kernel stack tests
      arch: arm: Fixup stack end calculations
      doc: kernel: usermode: Add MPU stack and userspace documentation
      arch: arm: Enable stack guard before starting main
      cmake: Add CONFIG_APPLICATION_MEMORY constraint
      arm: mpu: nxp: Set bus master 3 to full access

Andy Ross (54):
      work_q: Correctly clear pending flag in delayed work queue, update docs
      drivers/timer/xtensa_sys_timer: Correctly declare ISR
      xtensa: Move register window exception handlers into a separate file
      xtensa: Make high priority interrupts optional
      xtensa: New asm layer to support SMP
      samples/xtensa-asm2: Unit test for new Xtensa assembly primitives
      kernel: Fix nano_internal.h inclusion
      kernel: Move some macros
      kernel: Add alternative _arch_switch context switch primitive
      xtensa/asm2: Add a _new_thread implementation for asm2/switch
      xtensa: Remove arch-specific (and empty) offsets.h
      xtensa: Remove _xt_set_exception_handler()
      xtensa: Implement _xt_ints_on/off for asm2
      xtensa: Add Kconfig for asm2 layer
      drivers/timer/xtensa_sys_timer: Add init/update hooks for asm2
      xtensa: Interrupt generator script and output for qemu & esp32
      xtensa: Add exception/interrupt vectors in asm2 mode
      kernel, xtensa: Switch-specific thread return value
      xtensa: Fix thread entry point
      xtensa: asm2 needs to honor thread preemption
      xtensa: THREAD_MONITOR hooks for asm2
      xtensa asm2: Fixup stack alignment at runtime
      xtensa: Add hook to do register window spills
      xtensa-asm2: Exception/interrupt handler should check stack sentinel
      xtensa-asm2: Handle alloca/movsp exceptions
      esp-32, qemu_xtensa: Use asm2 by default
      kernel, esp32: Add _arch_start_cpu API
      tests/kernel: Simple test for multiprocessor start API
      kernel, esp32: Add SMP kconfig flag and MP_NUM_CPUS variable
      kernel: Simple spinlock API
      tests/kernel: Add spinlock test
      kernel: Add kswap.h header to unbreak cycles
      kernel: Move per-cpu _kernel_t fields into separate struct
      kernel: Create idle threads and interrupt stacks for SMP processors
      kernel: Make irq_{un}lock() APIs into a global spinlock in SMP mode
      kernel: SMP-aware scheduler
      xtensa: Report CPU number in exceptions
      esp32: Set CPU pointer on app cpu at startup
      kernel: Simplified idle for SMP auxiliary CPUs
      kernel: Enable SMP
      kernel: SMP timer integration
      tests/kernel: SMP test
      kernel/include: Missed nano_internal.h -> kernel_internal.h spots
      nios2: Add include for _check_stack_sentinel()
      xtensa: Fix noreturn attribute on error handlers in asm2
      xtensa/asm2: Don't return into dead threads
      kernel: Allow k_thread_abort(_current) from ISRs
      tests/kernel/fatal: Add xtensa/asm2 to the ""error returns"" family
      misc: Add a FORCE_NO_ASSERT kconfig directive
      kernel/kswap.h: Hook event logger from switch-based _Swap
      mpu_stack_guard_test: Disable on xtensa
      esp32: Move hard firmware function addresses to the linker script
      xtensa/asm2: Don't needlessly build asm2 sources
      xtensa: Make _arch_curr_cpu() work outside SMP

Aska Wu (1):
      subsys: console: Fix the buffer size checking

Carles Cufi (36):
      doc: getting_started: Add note for Windows env vars
      scripts: debug: J-Link script tweaks
      board: arm: nrf: Add support for GDB debugging
      cmake: Require 3.8.2 on all platforms, including MSYS2
      scripts: parse_syscalls: Multiplatform separators
      cmake: Use path-corrected version of ZEPHYR_BASE
      cmake: Use find_program() to locate the toolchain
      scripts: kconfig: Import Kconfiglib
      scripts: kconfig: Add support for wildcards and globbing
      scripts: kconfig: Prefer later defaults
      scripts: kconfig: Replace Kconfig exectuables with Python
      doc: Document the new native Windows dev environment
      doc: getting_started: Require ninja on macOS
      doc: ext: app: Add a new ""host-os"" option and default to ninja
      doc: app: Use unix on qemu builds
      doc: getting_started: Support multi-OS instructions
      doc: guides: app: Rework for multi-OS support
      soc: nrf51: Define flash driver name for nRF51
      config: bootloader: Add support for MCUboot
      doc: Release Notes draft for 1.11
      cmake: dts: Allow multiple overlay files
      kconfig: Rebase to latest Kconfiglib
      arch: arm: Do not enable SW_VECTOR_RELAY with M0+ and VTOR
      scrips: kconfig: Rebase KConfiglib to latest upstream
      dts: Move dts.cmake to cmake/
      dts: mcuboot: Support for common overlays and mcuboot
      tests: build: Test build with MCUboot support
      kconfig: Sort the glob results
      doc: getting_started: Windows build doc fixes
      build: win: Add a new zephyr-env.cmd file
      scripts: nrfjprog: Use built-in pin reset enable
      doc: nordic_segger: Document conflicting console
      doc: nordic_segger: Add link to Python viewer
      arm: cortex_m: Use new ARMV6_M_ARMV8_M_BASELINE in vector relay
      doc: contributing: Make instructions cross-platform
      doc: contributing: Document CI

Christopher Collins (18):
      storage: flash_map - Fix typo
      subsys: storage: flash_map - Remove some code duplication
      storage: flash_map: fix directory name typo
      fs: Convert FCB to use sectors (not areas)
      subsys: storage: flash_map - Use correct macro
      subsys: storage: flash_map: Fix warning
      ext: lib: mgmt: mcumgr management infrastructure.
      ext: lib: mgmt: mcumgr: Build support for mcumgr.
      subsys: dfu: boot: Allow inspection of boot state.
      subsys: dfu: boot: mcuboot: Query current img ver
      subsys: mgmt: SMP protocol for mcumgr.
      subsys: mgmt: Shell transport for SMP (mcumgr).
      subsys: mgmt: UART transport for SMP (mcumgr).
      mgmt: Bluetooth transport for SMP (mcumgr).
      subsys: mgmt: CMake and Kconfig support.
      subsys: stats - Statistics support
      samples: subsys: mgmt: smp_svr: add sample app
      subsys: dfu: boot: Remove unused ver query code.

Chunlin Han (1):
      arm: Generate privileged stacks

Daniel Wagenknecht (20):
      drivers: stm32 clock control: fix HSI PLLSOURCE with PREDIV1 support
      drivers: serial: simplify STM32 UART clock initialization
      drivers: serial: use the right clock busses for STM32F0 series UARTs
      pinmux: stm32f0: add additional defines for I2C2
      boards: arm: add support for STM32F072B-DISCO
      dts: stm32f0: move dts.fixup to soc family level
      dts: stm32f4: move dts.fixup to soc family level
      dts: stm32f1: move dts.fixup to soc family level
      dts: stm32f3: move dts.fixup to soc family level
      dts: stm32l4: move dts.fixup to soc family level
      boards: stm32f072b_disco: add supported features
      tests: spi_loopback: Move to using KConfig
      tests: spi_loopback: add board specific configuration
      tests: spi_loopback: add testcase.yaml
      dts: stm32: fix dts inclusion for stm32f405
      dts: stm32: spi2 is not supported on all F4 SoCs
      dts: stm32: add SPI nodes to dtsi files
      dts: stm32: add SPI nodes and give example for /delete-node/
      dts: spi: add remaining SPI fixup defines for STM32
      boards: arm: STM32 boards use DT to configure SPI

David B. Kinder (18):
      doc: update windows setup git clone instructions
      doc: update doc tools versions
      doc: fix misspellings in Kconfig files
      doc: update jquery version to 3.1.2
      doc: change sensor subsystem doc title
      doc: fix broken links in nucleo board docs
      doc: fix misspellings in Kconfig files
      doc: fix misspellings in doxygen API comments
      doc: fix misspellings in boards and samples docs
      doc: fix ReST heading underlines
      doc: Add shell doc for kernel module
      doc: update Zephyr features list in intro
      doc: fix misspelling in MinnowBoard doc
      doc: fix misspellings in Kconfig files
      doc: tweak Zephyr introduction features list
      doc: update CONTRIBUTING guidelines
      doc: fix duplicate sample doc titles
      doc: Update doc building instructions

Ding Tao (9):
      cmake: Fix missing braces around interface
      arch: arm: Add CPU_CORTEX_M0_HAS_VECTOR_TABLE_REMAP Kconfig flag
      arch: arm: stm32f0: Enable CONFIG_CPU_CORTEX_M0_HAS_VECTOR_TABLE_REMAP
      arch: arm: Add SW_VECTOR_RELAY Kconfig flag
      arch: arm: vector_table: Support vector table soft relay
      native: console: Fix Kconfig ""multiple prompts"" warnings
      fs: Kconfig: Fix warning on undefined choice NO_FILE_SYSTEM
      sensor: vl53l0x: Fix Kconfig warning of non-int value
      sensor: adxl362: Fix typo on Kconfig file

Dong Xiang (1):
      doc: devices: correct devicetree specification path

Erwan Gouriou (32):
      boards: add support for nucleo_f429zi
      script: extract_dts_includes: fix recursive inclusion
      boards: stm32: fix default HSI clock configuration
      dts: bindings: provide generic yaml description for i2c-devices
      dts: bindings: add bindings for 4 sensors
      scripts: extract_dts_include: update to match new bindings path
      dts: add sensors dts support for some sensors
      scripts: extract_dts_inculdes: treat 'parent: bus' attribute
      board: disco_l475_iot1: Use dts for sensor definition
      boards: disco_l475_iot1: add ST reference to doc name
      board: nucleo_f429zi provide eth driver config
      drivers: ethernet: stm32: various small changes
      drivers: entropy: Clock activation is missing on stm32l4
      drivers: entropy: stm32: limit driver to SoC supporting it
      boards: disco_l475_iot1: fix method to configure sensor triggers
      Revert ""sensors: lis3mdl: provide name to Kconfig choice""
      Revert ""sensors: hts221: provide name to Kconfig choice""
      sample: fix configuration for sensor HTS221 sample application
      stm32cube: f3: fix wrong package version
      ext: stm32cube: update stm32f4xx cube version
      ext: stm32cube: update stm32l4xx cube version
      drivers: flash: stm32: get write block size from device tree
      board: disco_l475_iot1: fix POLL dependency
      boards: nucleo_f429zi: Configure I2C1
      flash: remove obsolete FLASH_DRIVER_NAME
      sensors: move lps25hb and lsm6ds0 to dts
      samples: bluetooth/ipsp: Update multicast address
      boards: nucleo_f412zg: Enable flash and debug with openocd
      boards: nucleo_f413zh: Enable flash and debug with openocd
      boards: nucleo_f429zi: Update doc
      board: nucleo_f412zg: Configure I2C and USB
      boards: nucleo_f429zi: fixup space character issue

Erwin Rol (16):
      ext: hal: stm32cube: allow HAL/LL files to be selected via Kconfig
      drivers: clock control: stm32: use Kconfig to select HAL/LL sources
      drivers: ethernet: eth_stm32_hal: use Kconfig to select HAL/LL sources
      drivers: i2c: stm32: use Kconfig to select HAL/LL sources
      drivers: pwm: stm32: use Kconfig to select HAL/LL sources
      drivers: entropy: stm32: use Kconfig to select HAL/LL sources
      drivers: usb: stm32: use Kconfig to select HAL/LL sources
      drivers: spi: stm32: use Kconfig to select HAL/LL sources
      ext: hal: stm32cube: update README
      linker: arm: add stm32 ccm sections
      scripts/dts/extract_dts_includes.py: add ccm support
      kernel: init: initialize stm32 ccm sections
      dts: arm: stm32: Add ccm address and size configurations
      dts: add ccm config to olimex stm32 boards
      samples: olimex_stm32_e407: CCM usage example
      sanitycheck: add ccm_bss, ccm_noinit and ccm_data sections

Florian Vaussard (2):
      i2c: stm32_ll: Fix spurious error while reading using IRQ
      spi: stm32: Correctly apply CPOL and CPHA settings

Gil Pitney (4):
      drivers: i2c: Add support for cc32xx I2C bus
      boards: arm: cc3220sf_launchxl: doc: Fixed links, clarifications.
      net: sockets: Define POSIX function symbols as inline functions
      soc: ti_simplelink: cc32xx: Remove ARMV7_M guard from CMSIS_IRQn_Type

Giuliano Franchetto (1):
      uart: fixing pin range being too tight for the nrf52840

Gustavo Lima Chaves (3):
      cmake: call the right QEMU binary on Jailhouse's make run target
      cmake: jailhouse: fix arguments passed to QEMU on make run target
      cmake: jailhouse: fix check for JAILHOUSE_QEMU_IMG_FILE

Henrik Brix Andersen (2):
      doc: remove spurious console code block from arduino_zero doc.
      sam0: Enable pinmux in arduino_zero_defconfig.

Holman Greenhand (1):
      kernel: Allow late processing of timeouts

Ilya Tagunov (5):
      boards: arm: nucleo_f030r8: add I2C1 and I2C2 pinmux
      boards: arm: nucleo_f030r8: enable i2c1 and i2c2 nodes and add fixups
      boards: arm: nucleo_f030r8: add I2C to documentation
      soc: arm: stm32: fix startup SystemCoreClock values
      arm: core: cortex_m: introduce CPU_CORTEX_M_HAS_VTOR option

Inaky Perez-Gonzalez (2):
      filter-doc-log.sh: don't use tput if TERM is not defined
      doc/scripts/filter-doc-log: protect further against bad TERM env

Ioannis Glaropoulos (13):
      Bluetooth: controller: Refactoring nRF5 radio driver
      Bluetooth: controller: adjust nRF52840 HW radio timings for Coded PHY
      Bluetooth: controller: minor refactoring in nrf5 radio driver
      Bluetooth: controller: remove redundant PPI channel and TIMER CC
      Bluetooth: controller: symbolic name for CC used in ISR profiling
      Bluetooth: controller: conditionally reuse CC for ISR profiling
      Bluetooth: controller: sw-switch with the event timer (prepare commit)
      Bluetooth: controller: implement sw-switch with the event timer
      Bluetooth: controller: inline implementation of radio-enable-on-tIFS
      cmsis: Update ARM CMSIS headers to version 5.2.0
      arch: arm: common Armv8-M support
      arch: arm: define Cortex-M23, Cortex-M33 CPUs
      arch: arm: minor style fixes in dts binding .yaml files

Jan Van Winkel (3):
      fs: nffs: Corrected types in OS specific functions
      arm: stm32l4: include RNG ll header
      timer: Corrected types in nRF system timer functions

Jason Wang (1):
      cmake: Fix console could not work on board frdm_kl25z

Jimmy Huang (1):
      arch: arc: use default optimization flag

Johan Hedberg (40):
      mempool: Add k_mem_pool_free_id API
      mempool: Don't store redundant information for k_malloc/k_free
      mempool: Remove unnecessary call to get_pool()
      Bluetooth: Mesh: Fix ignoring old SeqAuth values
      Bluetooth: Mesh: Take advantage of K_SECONDS macro
      Bluetooth: Mesh: Clear segment rx context when incomplete timer expires
      Bluetooth: Mesh: Fix ack timeout calculation
      Bluetooth: Mesh: Fix segment transmission timeout
      Bluetooth: Remove redundant AD parsing check
      Bluetooth: Mesh: Fix passing CID to model publication messages
      Bluetooth: mesh_shell: Increase L2CAP TX buffer count
      Bluetooth: Mesh: fix BT_MESH_LPN_POLL_TIMEOUT description
      Bluetooth: Mesh: Add support for OOB info and URI in provisioning data
      pwm: nrf5_sw: Fix configuration for nRF51
      net: samples: throughput_server: Decrease buffer count
      net: samples: zperf: Reduce quark_se_c1000_devboard buffer counts
      tests: Remove broken net_buf unit tests
      tests: net: mgmt: Increase mgmt event stack
      net: buf: Redesigned API with split data and meta-data
      net: buf: Introduce variable data length allocators
      tests: net/buf: Update to new API
      net: buf: Make net_buf_simple_init() forward compatible
      net: buf: Remove incorrect dependency for NET_BUF_POOL_USAGE
      Bluetooth: Remove bogus return statements for BR/EDR connections
      Bluetooth: Mesh: Fix coverity warning with unchecked error return
      Bluetooth: Move HCI command buffer user data into separate array
      net: buf: Set default user data size to 4
      Bluetooth: Remove useless BT_L2CAP_TX_USER_DATA_SIZE Kconfig variable
      Bluetooth: Mesh: Convert to new net_buf_simple APIs
      Bluetooth: Introduce dedicated TX fragment pool
      Bluetooth: Mesh: Fix NULL pointer access with GATT Proxy
      Bluetooth: Mesh: Fix NULL pointer access with PB-ADV
      Bluetooth: Mesh: Fix handling of failed transmissions
      Bluetooth: Mesh: Resend Link Acknowledgment when necessary
      Bluetooth: Mesh: Fix sending Provisioning Failed for PB-GATT
      net: buf: Use __noinit where possible
      Bluetooth: Mesh: Split proxy client buffer payload into separate array
      Bluetooth: Mesh: Declare seg_rx_buf_data as __noinit
      Bluetooth: SMP: Send Pairing failed if there's no key space
      Bluetooth: Mesh: Use a single transmission from Friend to LPN

Johann Fischer (3):
      drivers: sensors: add driver for amg88xx sensor
      samples: sensor: add amg88xx sample
      usb: mass_storage: rework and cleanup logging

John Andersen (1):
      net: ip: dhcpv4: Handle DHCPV4_OPTIONS_DNS_SERVER

Jonas Pfaff (1):
      arm: atmel: soc: Soc init can be executed twice

Joshua Domagalski (2):
      tests: userspace: test revoke, user_mode_enter
      tests: userspace: test syscall buffer validation

Juan Manuel Torres Palma (2):
      scripts: fix tags.sh to current source tree
      net: arp: remove shadowing variable

Jukka Rissanen (12):
      drivers: eth: mcux: Use correct Kconfig option for RX bufs
      net: ip: shell: Fix ipv4 echo reply callback to unref packet
      samples: net: perf: Add sample for throughput measurement
      net: http: Remove the old legacy API
      tests: net: ipv6: Increase the multicast address count
      net: ipv6: Add routing support between interfaces
      net: ipv6: Add some extra debug when updating link address length
      net: rpl: Do not do neighbor discovery for RPL network
      net: rpl: Setup DAG prefix into network interface
      net: Set net_buf alloc timeout for IPv4 ARP and IPv6 ND
      drivers: net: loopback: Fix possible double unref
      net: shell: Fix net mem command output

Justin Watson (1):
      serial: sam: add support for interrupt driven serial

Kamil Sroka (6):
      include: net: net_pkt: Use IEEE802154 instead of NET_L2_IEEE802154
      subsys: net: lib: Add OpenThread platform
      include: net: net_l2: Add OpenThread L2
      drivers: 15.4: nrf5: Add OpenThread support to 802.15.4 driver
      subsys: net: ip: l2: Add OpenThread L2
      samples: net: Add config and enable CI for OpenThread on nRF52840

Kristian Klomsten Skordal (1):
      cmake: ld: add application source dir to linker script cpp command

Kumar Gala (41):
      release: Update PATCHLEVEL to 99 post 1.10.0 release
      samples: mesh/onoff-app: fix whitelist typo
      arm: nxp_mpu: Fix build issue when asserts enabled
      drivers: entropy: stm32: Remove STM32F411XE from building
      dts: Update soc-nv-flash nodes
      irq: move shared irq support under drivers/interrupt_controller
      spi: cleanup whitespace in CMakeLists.txt
      spi: sort drivers into legacy or not in CMakeLists.txt
      dts: add support for soc family level fixups
      tests: benchmarks: latency_measure: Fix build issue with abs()
      boards: 96b_nitrogen: Fix building of bluetooth/init/test_controller
      dts: arm: st: Add Flash Controller Nodes for STM32{F0,F3,F4,L4}
      arm: nordic: flash: Use FLASH_DEV_NAME define
      arm: nordic: Refactor dts.fixup files to SoC vs board
      arm: nordic: remove last references to CONFIG_SOC_FLASH_NRF5_DEV_NAME
      drivers: flash: stm32: Convert to use device tree
      dts: add support for application level dts.fixup
      sanitycheck: default to assertions being enabled
      drivers: flash: atmel sam0: Convert to use device tree
      sensor: hts221: Cleanup Kconfig for driver & bus name
      tests: build_all: cleanup unused Kconfig symbols
      tests: build_all: add dts.fixup to deal with compile issues
      scripts: extract_dts_includes: Sanitize interrupt names
      dts: flash: arm: nxp: Add write-block-size properties
      drivers: flash: NXP k6x/kw2xd: Convert to use device tree
      drivers: flash: NXP KL2X/KW4xZ: Add device tree support
      sensors: dts: cleanup usage of HAS_DTS_I2C_DEVICE
      dts: flash: Add support for flash labels
      tests: build_all: Fix building for lps25hb and lsm6ds0
      crypto: mbedtls: Update mbedTLS to 2.7.0
      dma: Fix building when system calls are disabled
      scripts: extract_dts_inculdes: Fix reg prop size/addr cell calculation
      dts: ti: Refactor TI SoC dts.fixup into arch/arm/soc/ti_simplelink
      dts: nxp: Add add addr/size cell to spi nodes
      dts: nxp: Refactor k64 dts.fixup into arch/arm/soc
      dts: nxp: Refactor lpc54xxx dts.fixup into arch/arm/soc
      dts: nxp: Refactor kl2x dts.fixup into arch/arm/soc
      dts: nxp: Refactor kwx dts.fixup into arch/arm/soc
      dts: nxp: Refactor imx/rt dts.fixup into arch/arm/soc
      dts: atmel_sam: Refactor SoC dts.fixup into arch/arm/soc/atmel_sam
      samples: dump_http_server: move generated files into include/generated

Leandro Pereira (12):
      misc: Use braces in infinite for loop
      kernel: mem_domain: Fix assertion in k_mem_domain_add_partition()
      kernel: mem_domain: Break down assertions
      kernel: device: Only compare strings if pointer comparison fails
      drivers: system_apic: Correctly assert interrupt line number
      subsys: fcb: Check for mutex lock failure when walking FCB
      samples: drivers: crypto: Print correct buffer comparison on failure
      drivers: sensor: vl53l0x: Use proper variable type for return code
      subsys: net: http: Send ""Internal Server Error"" on unknown error code
      soc: esp32: Fix compile warnings when redefining BIT() macro
      doc: doxygen: Hide implementation detail symbols
      kernel: mem_domain: Pass proper type to ensure_w_xor_x()

Loic Poulain (1):
      usb: stm32: Introduce transfer method

Luiz Augusto von Dentz (4):
      Bluetooth: UUID: Remove macros defining 16 bit values
      Bluetooth: central_hr: Fix assigning temporary UUID to discovery
      net: Introduce net_if_carrier_down
      net: bt: Call net_if_carrier_down when disconnected

Manivannan Sadhasivam (7):
      subsys: bluetooth: host: mesh: shell: Fix IVIndex parsing
      boards: arm: 96b_neonkey: doc: Remove flash goal
      drivers: i2c: stm32f4: Add check for BTF flag before reading N-2 byte
      drivers: i2c: stm32f4: Fix incorrect buffer assignment
      sensor: Add Co2, VOC, Voltage, Current channels
      drivers: sensor: Add support for CCS811 Digital Gas Sensor
      samples: sensor: Add sample application for CCS811 sensor

Mariusz Skamra (46):
      Bluetooth: btp: Add GATT Get Attributes command
      Bluetooth: tester: Add Get Attributes command implementation
      Bluetooth: btp: Add GATT Get Attribute Value command
      Bluetooth: tester: Add Get Attribute Value command implementation
      Bluetooth: btp: Add events indicating provisioning link state
      Bluetooth: btp: Add Mesh LPN related commands
      Bluetooth: tester: Add initial support for BTP Mesh service
      Bluetooth: BTP: Add BTP MESH IV Update related commands
      Bluetooth: btp: Add BTP Mesh Network Send command
      Bluetooth: btp: Add Mesh Network receive event
      Bluetooth: btp: Introduce Health Generate/Clear Faults commands
      Bluetooth: tester: Add implementation of Mesh LPN related BTP commands
      Bluetooth: tester: Fix attribute uuid type check
      Bluetooth: tester: Fix not checking btp2bt_uuid return value
      Bluetooth: Introduce Bluetooth Testing API
      Bluetooth: tester: Add Mesh IV Update related commands
      Bluetooth: tester: Add Mesh Network Send command
      Bluetooth: Expose Bluetooth Testing API
      Bluetooth: tester: Add Mesh Network Received event
      Bluetooth: tester: Add Mesh Health Model related commands
      Bluetooth: tester: Add Core Unregister Service command
      Bluetooth: doc: Widen column gaps in l2cap-pics.txt
      Bluetooth: doc: Update ICS values for LE profiles
      Bluetooth: tester: Add BTP Mesh Model Send command implementation
      Bluetooth: tester: Do not send BTP error if fault_update failed
      Bluetooth: btp: Add event indicating invalid provisioning BearerOpcode
      Bluetooth: btp: Add LPN Subscribe/Unsubscribe commands
      Bluetooth: btp: Add Mesh Clear Replay Protection List Cache command
      Bluetooth: testing: Move bt_test_mesh_net_recv to internal API
      Bluetooth: btp: Add event indicating expiration of incomp timer
      Bluetooth: tester: Do not start LPN automatically
      Bluetooth: mesh: Fix status returned from mod_unbind
      Revert ""Bluetooth: Mesh: Fix ignoring invalid Transport OpCode as LPN""
      Bluetooth: mesh: Do not set RFU bits in Heartbeat Publication Features
      Bluetooth: tester: Increase Mesh model group count
      Bluetooth: tester: Set BT_MESH_LABEL_COUNT
      Bluetooth: mesh: Fix LPN subsciption groups update on VA deletion
      Bluetooth: mesh: Fix model subscription groups cleanup
      Bluetooth: tester: Add Configuration and Health Client models
      Bluetooth: Fix BT_TESTING option dependency
      Bluetooth: tester: Fix uart-pipe build error on nrf52840 board
      Bluetooth: mesh: Reset Heartbeat Pub timer before sending message
      Bluetooth: mesh: Check Heartbeat Pub count prior scheduling delayed work
      Bluetooth: btp: Fix address in GAP Device Found event
      Bluetooth: tester: Fix device connected and disconnected events
      Bluetooth: Mesh: Ignore segments of cancelled message

Mark Vels (2):
      sensors: tmp112: trivial: Add comment about using this driver for TMP102
      sensors: tmp112: Fix breakage on stm32f4 platform

Marti Bolivar (33):
      doc: application: fix KCONFIG_ROOT example file
      scripts: extract_dts_includes: fix potential undefined read
      dts: bindings: compatible properties are required
      scripts: zephyr_flash_debug: simple improvements
      scripts: runner: pyocd: fix stale comment
      scripts: runner: refactor run() implementation
      cmake: extensions: add assert_not()
      scripts: refactor flash/debug scripts to remove ""shell""
      scripts: runner: generalize commands to ""capabilities""
      scripts: runner: add build-time .conf parser
      cmake: extensions: support list arguments to set_ifndef()
      scripts: runner: use arguments, not environment vars
      scripts: runner: add infrastructure for DT-based flashing
      scripts: runner: dfu-util: support DT-based flashing for DfuSe
      scripts: runner: dfu-util: add --dfuse-modifiers option
      scripts: runner: pyocd: support DT-based flashing
      scripts: runner: pyocd: support pyocd-flashtool options
      scripts: runner: let users copy/paste failed commands
      scripts: zephyr_flash_debug: add 'runners' command
      scripts: runner: add internal DEBUG to core
      cmake: flash: support verbose output toggle
      boards: x86_jailhouse: fix build documentation
      scripts: zephyr_flash_debug.py: swallow exceptions by default
      cmake: add optional app_set_runner_args()
      CODEOWNERS: remove @mbolivar from STM32 SPI
      CODEOWNERS: add @mbolivar for scripts/support/runner
      cmake: fix 'ninja flash' et al with multiple boards plugged in
      dfu: mcuboot: don't use magic when confirming image
      dfu: mcuboot: delete misleading comment
      dfu: mcuboot: add boot_is_img_confirmed()
      dfu: mcuboot: add boot_read_bank_header()
      flash: mcux: implement software write protection (HACK)
      CODEOWNERS: add entries for led_strip drivers

Maureen Helm (18):
      drivers: slip: Remove stale CMakeLists.txt
      boards: Move default pinmux enable to <board>_defconfig
      scripts: jlink: Add flash command support to the jlink runner
      boards: arm: Configure jlink flash runner on nxp boards
      usb_kw24d512: Set jlink speed explicitly
      scripts: jlink: Do not mass erase flash by default
      samples: Build hts221 sensor sample only on supported boards
      dts: sensor: Add dts yaml bindings for the fxos8700 sensor
      dts: sensor: Add dts yaml bindings for the fxas21002 sensor
      dts: sensor: Add dts yaml bindings for the max30101 sensor
      frdm_k64f: Add sensor dts nodes and fixups
      frdm_kw41z: Add sensor dts nodes and fixups
      hexiwear_k64: Add sensor dts nodes and fixups
      tests: build_all: Add missing sensors
      dts: bindings: Introduce flash erase-block-size property
      arm: nxp_kinetis: Define FLASH_DRIVER_NAME macro for kl2x and kwx SoCs
      drivers: flash: Implement flash page layout api in mcux driver
      samples: drivers: Add freedom boards to flash_shell sample

Michael Hope (29):
      fs: only select the disk subsystem if the filesystem needs it.
      ext: Import Atmel SAMD21 header files from ASF library
      arch: add support for the SAMD21G18A used in the Arduino Zero.
      boards: add board and DTS definitions for the Arduino Zero.
      watchdog: add a watchdog driver for the SAM0 family.
      gpio: add a GPIO driver for the SAM0 family.
      serial: add a serial driver for the SAM0 family.
      boards: add documentation for the Arduino Zero.
      libc: add EILSEQ for use in reporting checksum failure.
      serial: sam0: add support for interrupt based transmit.
      flash: add a driver for the internal flash on the SAM0 series.
      boards: arduino_zero: enable and document the flash driver.
      spi: add Kconfig entries for SPI4 and SPI5.
      spi: add a SPI driver for the SAM0 series.
      boards: enable and document the SPI driver on the Arduino Zero.
      net: use UNALIGNED_ACCESS when accessing s_addr on received packets.
      samples: update the blinky sample to work with the Arduino Zero.
      disk: delete the GET_DISK_SIZE IOCTL.
      pinmux: add two more entries to the function enum.
      pinmux: sam0: add a pinmux driver for the SAM0 series.
      spi: sam0: fix txrx, NULL buffers, and add a stub async method.
      tests: spi: add a configuration for the Arduino Zero.
      crc: add test vectors for the ANSI version.
      crc: add a faster, chainable version of CRC16/CCITT.
      crc: add crc16_itu_t which is used in the MMC protocol.
      sam0: move the UART and SPI configuration into pinmux.
      led_strip: add a APA102 driver.
      arch: refactor the SAM0 SoC fixups into a SoC-level file.
      boards: add the Adafruit Trinket M0.

Michael Scott (22):
      net: lwm2m: setup LwM2M build as static library
      net: lwm2m: fix possible dereference in RD client
      net: lwm2m: use correct remote address when DTLS is enabled
      net: lwm2m: add support for DTLS
      samples: lwm2m: add support for DTLS
      samples: lwm2m: update documentation for DTLS support
      net: lwm2m: add support for coap2coap proxy
      crypto: config: config-coap: add CONFIG for setting max content length
      net: lwm2m: cleanup transfer_request error handling
      net: ip: net_pkt: set pkt context, iface and family in net_pkt_get()
      net: net_app: set packet data_len on incoming packets
      net: lib: http: fix CONFIG_HTTPS for client use
      net: lib: app: trigger TLS closure when connection is closed
      Revert ""net: net_app: set packet data_len on incoming packets""
      net: skip TX max send calculation in net_pkt_append() for RX packets
      net: lib: lwm2m: fix coap proxy resource option
      net: lwm2m: correct packet pending process in lwm2m_send_message()
      net: lwm2m: fix retransmit_request() pending process / packet send
      net: lwm2m: return NOT_FOUND for unused multi-value resources
      net: lwm2m: add max device power source config option
      x86: fix build warning
      net: app: client: set remote port after DNS lookup

Michał Kruszewski (1):
      ext: nordic: Replace HAL and MDK with the ones from nrfx

Neil Armstrong (25):
      ARM: stm32f0: switch flash registers to volatile
      dts: stm32f0: add missing flash properties
      ARM: stm32f030x8: fix FLASH_PAGE_SIZE
      flash: stm32: add support for STM32F0 flash controller
      CODEOWNERS: add stm32 related flash drivers owner
      ext: stm32cube: build I2C+RCC LL for STM32F0
      arm: stm32f0: include I2C ll header
      i2c: stm32_ll: add support for STM32F0 with combined irq
      dts: stm32f0: add i2c1 and i2c2 nodes
      pinmux: stm32f0: add I2C1 and I2C2 pinmux
      board: nucleo_f091rc: add I2C1 and I2C2 pinmux
      board: nucleo_f091rc: enable i2c1 and i2c2 nodes and add fixups
      boards: nucleo_f091rc: add i2c to documentation
      ext: hal: stm32cube: build LL SPI code for STM32F0
      arch: arm: soc: stm32f0: include LL spi header
      spi: spi_ll_stm32: Add support for STM32F0
      hal: stm32cube: Fix warning when SPI STM32F0 LL API is compiled
      boards: nucleo_f091rc: add SPI1 and SPI2 pinmux
      tests: spi_loopback: Enable SPI Loopback test on nucleo_f091rc board
      pinmux: stm32f0: Add B3/4/5 SPI1 B13/14/15 SPI2 pinmux
      boards: nucleo_f091rc: add spi to documentation
      arm: cortex_m: linker.ld: fix relocate by moving _vector_start
      arch: arm: soc: provide support for stm32f072
      drivers: clock_control: simplify CLOCK_STM32_PLL_PREDIV1 config
      boards: arm: Add stm32f072-eval board support

Nirmala Devi (1):
      tests: power: Fix compiler definition flag

Patrick Boettcher (2):
      cmake: give an assert a useful message
      cmake: do not set CMAKE_SKIP_INSTALL_RULES to ON

Patrik Flykt (1):
      subsys: usb: Set Zephyr project USB Vendor and Product IDs

Paul Sokolovsky (33):
      net: if: Join solicited-node multicast addr for each unicast addr
      drivers: eth_mcux: Disable promiscuous mode by default
      tests: net: mld: Update after solicited-node mcast refactor.
      drivers: eth_mcux: Implement IPv6 multicast group joining/leaving
      various: Update/fix some textual material and code comments.
      net: ip: Optimize statements for setting packet lengths.
      net: shell: conn: Cross-ref TCP control block to owning context
      scripts: sanitycheck: If error happens accessing YAML data, go on
      net: Kconfig: Don't select STDOUT_CONSOLE
      libc: Kconfig: Move STDOUT_CONSOLE from subsys/debug
      net: tcp: Validate incoming ACK number
      net: tcp: Remove incorrect logging of ""ACK errors""
      net: tcp Remove recv_max_ack field from struct net_tcp
      net: shell: Fix typo in description of ""dns"" command.
      net: lib: dns: dns_resolve_close: Mark context as unused
      net: dns: Allow to initialize DNS servers from struct sockaddr[]
      samples: net: zperf: Fix only IPv4/only IPv6 build, better messages
      net: app: Allow to specify both static IP settings and DHCPv4.
      net: if: Handle new address type of NET_ADDR_OVERRIDABLE
      net: tcp: prepare_segment: Return detailed error codes.
      sensors: Redefine SENSOR_CHAN_HUMIDITY in percents, not milli-percents.
      libc: Kconfig: Enable STDOUT_CONSOLE by default if NEWLIB_LIBC.
      tests: Few test require CONFIG_STDOUT_CONSOLE=n
      sensors: Redefine SENSOR_CHAN_DISTANCE to be in meters
      samples: sensor: vl53l0x: Update for SENSOR_CHAN_DISTANCE refactor
      samples: sockets: http_get: More configurability and logging
      samples: net: sockets: Clean up/improve socket samples
      net: sockets: getaddrinfo() buffer overflow, etc. fixes
      mbedtls: config-mini-tls1_2.h: Update stale comments
      mbedtls: Switch default MBEDTLS_CFG_FILE to config-mini-tls1_2.h
      sensors: sensor_value: Elaborate docs
      samples: sockets: Add big_http_download sample
      samples: sockets: http_get: Include Host: header in request

Pedro Martucci (3):
      net: ip: shell: Fix ipv6 echo reply callback to unref packet
      drivers/ieee802154: Add hw filtering support for upipe driver
      sample: net: RPL mesh sample over QEMU

Punit Vara (25):
      tests: obj_tracing: Convert legacy test to ztest
      tests: logger-hook: convert sample to ztest and move to test/
      drivers: bmg160: Initialise driver with DEVICE_AND_API_INIT
      drivers: ak8975: Initialise driver with DEVICE_AND_API_INIT
      drivers: bma280: Initialise driver with DEVICE_AND_API_INIT
      drivers: dht: Initialise driver with DEVICE_AND_API_INIT
      drivers: hdc1008: Initialise driver with DEVICE_AND_API_INIT
      drivers: hmc5883l: Initialise driver with DEVICE_AND_API_INIT
      drivers: hp206c: Initialise driver with DEVICE_AND_API_INIT
      drivers: hts221: Initialise driver with DEVICE_AND_API_INIT
      drivers: isl29035: Initialise driver with DEVICE_AND_API_INIT
      drivers: lis2dh: Initialise driver with DEVICE_AND_API_INIT
      drivers: lis3dh: Initialise driver with DEVICE_AND_API_INIT
      drivers: lps25hb: Initialise driver with DEVICE_AND_API_INIT
      drivers: lsm6ds0: Initialise driver with DEVICE_AND_API_INIT
      drivers: lsm9ds0_gyro: Initialise driver with DEVICE_AND_API_INIT
      drivers: lsm9ds0_mfd: Initialise driver with DEVICE_AND_API_INIT
      drivers: mcp9808: Initialise driver with DEVICE_AND_API_INIT
      drivers: mpu6050: Initialise driver with DEVICE_AND_API_INIT
      drivers: pms7003: Initialise driver with DEVICE_AND_API_INIT
      drivers: sht3xd: Initialise driver with DEVICE_AND_API_INIT
      drivers: sx9500: Initialise driver with DEVICE_AND_API_INIT
      drivers: th02: Initialise driver with DEVICE_AND_API_INIT
      drivers: tmp007: Initialise driver with DEVICE_AND_API_INIT
      drivers: vl53l0x: Initialise driver with DEVICE_AND_API_INIT

Pushpal Sidhu (1):
      drivers: serial: uart_stm32: fix call to LL_USART_SetBaudRate

Rajavardhan Gundi (1):
      drivers/interrupt_controller: Introduce multi-level interrupt support

Ramakrishna Pallala (23):
      arch: nios2: update nios2 softcpu image
      boards: nios2: fix nios2 flashing issue
      arch: nios2: enable System ID soft IP driver
      tests: boards: add SysID test app for altera_max10 board
      ext: hal: altera: fix PIO build config option
      drivers: gpio: add support for Altera Nios-II PIO controller
      samples: boards: add sample for Altera Nios-II PIO core
      tests: Kconfig: add proper description to config option
      subsys: disk: Kconfig: add prompt messages for config options
      kernel: include: rename nano_internal.h to kernel_internal.h
      ext: hal: altera: Add QSPI Controller HAL driver
      drivers: flash: Add Nios-II QSPI flash driver
      tests: boards: Add QSPI flash test app for altera_max10
      boards: nios2: altera_max10: Add default Kconfig options for Disk
      ext: hal: altera: Add wrapper functions for Altera HAL runtime API's
      drivers: i2c: Add i2c master driver for Nios-II i2c core
      tests: boards: altera_max10: Add test for Nios-II i2c core
      ext: hal: altera: disable altera_avalon_i2c compilation warnings
      drivers: i2c: i2c_nios2: Fix SYS_LOG warnings
      drivers: i2c: i2c_nios2: Fix format specifiers in log messages
      include: logging: clean up of sys_log.h
      kernel: thread: Remove unused _k_thread_single_start()
      kernel: device: Remove the redundant device name check

Ravi kumar Veeramally (29):
      net: tcp: Cancel the fin_timer on FIN message in FIN_WAIT1 state
      net: tcp: Add initial support for TIMEWAIT timer
      net: app: Do not reset net_context information
      net: Fix RPL header update
      net: Fix compilation error
      net: Add neighbor ADD/DEL events
      net: Improve net management event information
      net: ipv6: Remove route information before deleting neighbor
      net: Add IPv6 neighbor add and delete event with info
      net: Add IPv6 route add and delete event with info
      net: rpl: Do not run IPv6 DAD for global addresses
      net: rpl: Change default value for NET_RPL_INIT_LINK_METRIC
      drivers: cc2520: Change debug information
      net: mgmt: Fix mgmt push event
      net: rpl: Fix debug information and alignment issues
      net: rpl: Ignore parents with lower rank
      net: rpl: Fix handling of DAO message
      net: Unlink the neighbor after unref
      net: http: Fix http_prepare_and_send
      net: tests: Fix coap test case
      net: if: Provide a Kconfig to select default network interface
      net: app: Fix get_server_ctx helper function
      net: app: Add a new API to get net pkt based on dst
      net: context: Remove duplicate call
      net: context: Handle failure case of tcp backlog entry
      net: tcp: Do not handle packet re-transmission in TCP ACK
      net: tcp: Provide local address in TCP reset message preparation
      net: app: Fix connection closure issues with net_app_ctx
      net: app: Fix issue while configuring local context

Ricardo Salveti (6):
      boards: arm: nrf51_blenano: add support for make flash
      boards: arm: nrf51_blenano: add on-board LED definition
      boards: arm: nrf51_blenano: add board documentation
      pwm: nrf5_sw: add support for SYS_LOG
      pwm: nrf5_sw: do not use 'inversed' polarity by default
      pwm: nrf5_sw: don't disable timer if another channel is still active

Richard Osterloh (1):
      boards: arm: Add I2C support to nucleo_f411re

Robert Chou (14):
      net: lwm2m: remove unused options variable
      net: lwm2m: correct lwm2m discover operation behavior
      net: lwm2m: discover op does not depend on input format type
      net: lwm2m: reduce code size of coap_options_to_path()
      net: lwm2m: separate write operation from write-attributes op
      net: lwm2m: increase packet reference to avoid packet being freed
      net: lwm2m: add write-attribute WRITE support
      net: lwm2m: report attributes on discover op
      net: lwm2m: get attributes from obj/obj_inst/res for observe_node
      net: lwm2m: update observe_node when attributes are written or cleared
      net: lwm2m: fix reporting attributes with negative fraction
      net: lwm2m: check content-format and respond with error if not support
      net: lwm2m: update internal API select_writer() and select_reader()
      net: coap: retransmission for four times

Ruslan Mstoi (5):
      net: icmpv4: Drop ICMPv4 packet if ICMP header is NULL
      net: icmpv6: Drop ICMPv6 packet if ICMP header is NULL
      net: icmpv6: Drop ICMPv6 packet if NS header is NULL
      net: ipv6: Drop NS packet if LL address is too long
      net: pkt: Fix comment typo in word fragment

Savinay Dharmappa (3):
      dts: x86: Add interrupt controller node
      driver: serial: Get interrupt number from dts
      driver: usb_dw: Move base address and irq num of usb to soc.h

Sean Nyekjaer (2):
      arch: atmel_sam0: rename samd SoC series to samd21
      serial: sam0: add samd20 support

Sebastian Bøe (68):
      cmake: Added assert that will show usage
      cmake: Show usage when an invalid board is given
      cmake: Fail with an error message when empty libraries exist
      samples: Don't read board from cmake -DBOARD=x
      cmake: Reorganize how qemu is found
      cmake: qemu: Allow -kernel to be overridden
      size_report: Use the CMake-discovered toolchain instead of ENV vars
      cmake: Support installing toolchains in ""Program Files""
      runner: nrfjprog: Improve error messages
      nrfjprog_py: Use RuntimeError instead of Exception
      cmake: Don't link with subsys__bluetooth unnecessarily
      ld: Introduce --print-memory-usage
      cmake: boilerplate: Define properties earlier
      cmake: Fix the -Wl,--print-memory-usage compatibility test
      cmake: esp32: Fix check for environment variable ESP_IDF_PATH
      cmake: usage: Added posix to list of arch's with boards
      posix: ld: Don't print memory usage
      cmake: Fix target_ld_options()
      cmake: Fix CMAKE_REQUIRED_FLAGS corruption
      cmake: generate_inc: Change how the target name is constructed
      cmake: qemu: Don't use the '\$' hack with Ninja
      cmake: net: qemu: Don't pass ""-serial none"" to qemu
      cmake: Introduce Zephyr interface libraries
      cmake: Ported mbedTLS to use Zephyr interface libraries
      doc: checkpatch: Fix pre-commit hook
      cmake: ld: Refactor the linker script's cpp command construction
      cmake: Ninja: ld: Use the correct depfile in the second pass
      cmake: ninja: Change how CMake names the kernelspace archives
      cmake: Ninja: Fix the external_lib sample
      cmake: LD: Add comment explaining the -P flag
      cmake: zephyr_get_*: Add support for SKIP_PREFIX
      cmake: ld: Ensure that a linker script change triggers a rebuild
      gen_isr_tables: Minor refactoring
      cmake: gen_isr_tables: Reduce verbosity of non-verbose builds.
      doc: Fix broken links in getting_started
      doc: win: Specify autocrlf=false when cloning
      samples: threads: Rewrite misleading sample
      doc: getting_started: Improve the docs for cloning on Windows
      cmake: external_lib: Specify that the library should be GLOBAL
      cmake: Don't assert that imported zephyr libraries have source files
      cmake: Give descriptive error to user when cloned with core.autocrlf
      cmake: Fix ""make VERBOSE=1""
      cmake: sdk: Improve error message when INSTALL_DIR is wrong
      bluetooth: Fix ""struct bt_gatt_read_params"" declaration
      bluetooth: Fix cast in bt_buf_get_type
      cmake: Execute arch/CMakeLists.txt before subsys/CMakeList.txt
      cmake: kconfig: Run Kconfig on every reconfiguration
      kconfig: Prune kconfig files that don't match the ARCH or BOARD
      cmake: Don't specify a C standard when building Kconfig
      cmake: toolchain: Misc. comment cleanups
      cmake: Re-introduce support for CROSS_COMPILE
      cmake: Improve error messages for detecting libgcc
      Revert ""cmake: kconfig: Run Kconfig on every reconfiguration""
      kconfig: Revert back to old behaviour pre-kconfiglib.py
      cmake: Fix ""make usage"" regression from the ZEPHYR_BASE change
      size_report: Use ""Universal newlines"" to fix ram_report on Windows
      size_report: Don't use colors on Windows
      size_report: Use Universal newlines when calling check_output
      size_report: Ported to native Windows
      bt: Don't rely on 'enum bt_buf_type' being 1 byte
      size_report: Don't assume all paths start with ZEPHYR_BASE
      mbedtls: Kconfig: Re-organize to enable choosing an mbedtls impl.
      mbedtls: Added support for using an externally built mbedtls
      cmake: Fix dependencies between kobject_hash files
      kconfig: Change how optimization level is set
      codeowners: Add anaz and sebo as codeowner to zephyr/CMakeLists.txt
      codeowners: Fix CODEOWNERS for $ZEPHYR_BASE/CMakeLists.txt
      sanitycheck: Default to using Ninja

Shawn Nock (1):
      boards: arm: Adds Sparkfun nRF52832 breakout board support

Shiksha Patel (6):
      lpc: Add device header and driver files for lpc54114 from mcux 2.2.1
      lpc: Add pinmux shim driver for lpcxpresso54114
      lpc: Add usart shim driver for lpcxpresso54114
      lpc: Add gpio mcux driver for lpc
      lpc: Add nxp_lpc soc family to soc directory
      lpc: Add lpcxpresso54114 board based on its architecture

Spoorthi K (1):
      doc: memory_domain: Update memory domain API's documentation

Stephen Smalley (4):
      tests/kernel/mem_protect/userspace: test access to other thread stack
      tests: userspace: fail on unexpected faults
      tests: userspace: fail on unexpected fault reason
      tests: userspace: fix read/write privileged stack tests

Steve Brown (1):
      samples: onoff-app: Add OnOff Model for the Nordic nRF52840-PDK board

Sudarsana Nagineni (1):
      boards: olimex stm32-e407, stm32f407g_disc1: Enable USB OTG Support

Tomasz Bursztyka (22):
      subsys/net/ip: Clear up content in CMakeLists.txt
      subsys/net/lib: Clear up CMakeLists.txt
      net/ieee802154: Split the net mgmt part from the L2 specific header
      net/ieee802154: Do not expose l2 specific context in generic net_l2.h
      drivers/ieee802154: Cleanup Kconfig
      drivers/ieee802154: Cleaning up CMakeLists.txt
      boards/usb_kw24d512: Cleaning up defconfig
      net/ieee802154: Add Sub-Ghz dedicated function on the radio API
      net/ieee802154: Verify in L2 the Sub-Ghz channel value
      net/ieee802154: Do not set the device UP by default
      net/lib: 15.4 interface is set UP after channel is configured
      net/ieee802154: Introduce helpers to call radio api function
      net/ieee802154: Use helpers to call radio API functions
      net/ieee802154: Normalize parameter on radio API helper
      drivers/ieee802154: Add support for Sub-GHz TI CC1200 chip
      boards/quark_se: Add an spi/gpio configuration for TI CC1200 15.4 chip
      drivers/spi: Properly check for rx/tx and buffering on
      net: buf: Support allocation of a net_buf pointing to external buffer
      soc/stm32: Add DTS support for SPI port 2 on stm32f030 series
      drivers/pinmux: Provide common SPI1/SPI2 configuration on stm32f0
      boards/arm: Enabling SPI ports on nucleo_f030r8
      boards/arm: Enabling SPI ports on nucleo_f103rb

Vakul Garg (1):
      eth: mcux: Enable ETH_MCUX_0 conditionally

Vinayak Kariappa Chettimada (54):
      Bluetooth: controller: Fix multiple master role event scheduling
      Bluetooth: Fix build failure with -Wshadow CFLAGS
      Bluetooth: controller: Add tIFS SW switching for Coded PHY
      Bluetooth: controller: Fix S2 coding Rx chain delay timing const
      Bluetooth: controller: Fix missing TIFS_HW cond. compilation
      Bluetooth: controller: Fix BT_CTLR_DEBUG_PINS Kconfig help text
      Bluetooth: controller: Remove redundant clear of NRF_RADIO events
      Bluetooth: shell: Support a non-connectable build
      Bluetooth: controller: Add missing CPR and DLE cond. compilation
      Bluetooth: controller: Conditional compile BT_LL_SW variant
      Bluetooth: controller: Refactor LL up and downstream interface
      Bluetooth: controller: Fix CPR initiation while in Enc. setup
      Bluetooth: controller: Refactor mayfly integration into hal
      Bluetooth: controller: Fix to restrict addr set in active states
      Bluetooth: controller: Fix to restrict addr set in active scan
      Bluetooth: controller: Fix for CPR with/without Feature Exchange
      Bluetooth: controller: Fix to restrict addr set in initiator
      Bluetooth: controller: Fix to use CPR preferred periodicity value
      Bluetooth: controller: Fix redundant length update event
      Bluetooth: controller: Fix HCI LE Set PHY invalid behavior check
      Bluetooth: controller: refactor radio_nrf5* headers
      Bluetooth: controller: Refactor length req/rsp PDU struct
      Bluetooth: controller: Refactor phy req/rsp PDU struct
      Bluetooth: controller: Cleanup radio_pdu_node_rx/tx variables
      Bluetooth: controller: Refactor pdu_adv_payload_* to pdu_adv_*
      Bluetooth: controller: Add missing PDU struct definitions
      Bluetooth: controller: Use anonymous structs and unions in PDUs
      Bluetooth: controller: Use shorter (void *) for typecasts
      Bluetooth: controller: Minor cleanup of macros
      Bluetooth: controller: Fix handling of invalid Ctrl PDU lengths
      Bluetooth: controller: Rename radio_*_is_enabled to ll_*_is_enabled
      Bluetooth: controller: Refactor invalid ctrl PDU handling
      Bluetooth: controller: Improved continuous scanning
      Bluetooth: controller: Fix ticker to use u32_t ticks_slot
      Bluetooth: controller: Remove redundant whitespace
      Bluetooth: controller: Fix missing ticks to us conversion
      Bluetooth: controller: Rename a microsecond variable
      clock_control: nrf5: Return -EBUSY on turning off if still in use
      Bluetooth: controller: Fix disabling of Coded PHY feature
      Bluetooth: controller: Fix nRF52840 radio timings for Coded PHY
      Bluetooth: controller: Fix BT_CTLR_XTAL_ADVANCED cond. compilation
      Bluetooth: controller: Refactor BT_CTLR_ADV_INDICATION feature
      Bluetooth: controller: Fix soft latencies in periodic ticker
      Bluetooth: mesh: Account for scan window delaying adv events
      Bluetooth: controller: Refactor ticker integration into hal
      Bluetooth: controller: Reuse safer bt_rand in thread call path
      Bluetooth: controller: Fix to use random CRC init value
      Bluetooth: controller: Use XON_BITMASK instead of BIT(31)
      Bluetooth: controller: Define HAL_TIMER_SIGN_BIT
      Bluetooth: controller: Fix XTAL_ADVANCED threshold detection
      Bluetooth: controller: Fix incorrect master role scheduling
      Bluetooth: controller: Add missing HCI supp. cmd bits for PHY Update
      drivers: flash: nRF5x: Fix co-operation with Bluetooth controller
      Bluetooth: controller: Use RADIO_TIES_US to define inter event space

Vincent Veron (9):
      include: Add distance channel sensor
      lib: add abs function to minimal libc
      ext: Add official ST library for vl53l0x
      ext: Fix warnings in vl53l0x ST library when compiling on Zephyr
      ext: enable st/lib compilation
      driver: sensor: Add vl53l0x
      drivers: sensor: vl53l0x: ST library customization for Zephyr
      boards: disco_l475_iot1: Enable vl53l0x sensor
      sample: sensor: Add vl53l0x sample application

Vipul Rahane (4):
      ext: lib: tinycbor: Add tinyCBOR as an ext lib
      ext: lib: tinycbor: Apply req patch to 0.5.0-beta1
      ext: lib: tinycbor: half/full-FP support changes
      ext: lib: tinycbor: Add req Zephyr specific files

Vitor Massaru Iha (11):
      drivers: gpio: esp32: Check return value of pinmux_pin_input_enable()
      drivers: i2c: esp32: Fix status address register
      drivers: pinmux: esp32: Fix using gpio as IO at the same time.
      drivers: i2c: esp32: Fix first command on I2C Master
      drivers: i2c: esp32: Fix END opcode on i2c_esp32_write_msg()
      drivers: i2c: esp32: Fix command address on i2c_esp32_write_msg()
      drivers: i2c: esp32: Fix command opcode on i2c_esp32_write_addr()
      drivers: i2c: esp32: Fix increase I2C_ESP32_SPIN_THRESHOLD
      drivers: i2c: esp32: Fix msg.len on i2c_esp32_write_addr()
      drivers: i2c: esp32: Fix to_read value on i2c_esp32_read_msg()
      drivers: gpio: Nios-II: Fix condition on gpio_nios2_config_oput_port()

Wayne Ren (23):
      arch: arc: Add FIRQ option
      arch: arc: Add the support of secure mode for em
      board: arc: em_starterkit: Add em7d support of em_starterkit 2.3
      arch: arc: add the support of MPU version 3
      arch: arc: fix the comments and coding style
      board: em_starterkit: Update the defconfig to em_starter_kit version 2.3
      script: make gen_kobject_list.py compatible with dwarf-2
      arch: arc: Add the intial support of memory domain
      arch: arc: Add _arch_mem_domain_configure
      board: em_starter_kit: add default config for em7d in version 22
      arch: arc: add user space support for arc
      arch: arc: bug fixes and add user space support in secure mode
      arch: arc: modify the kconfig for mpu case
      tests: add the test case for user space support of arc
      arch: arc: enable US bit to check user mode
      arch: arc: scrub regs of kernel context before returning to userspace
      cmake: disable privilege stack generation for arc
      arch: arc: modify the linker template for APPLICAITON Memory
      arch: arc: save user thread's context into privilege stack
      arch: arc: MPUv2 enables MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT
      arch: arc: handle exception in privilege task when USERSPACE enabled
      arch: arc: apply the new thread stack layout
      tests: modify the user space test codes for ARC

Yannis Damigos (37):
      boards: stm32f3_disco: Use pins PA9/PA10 for I2C_2
      drivers: gpio_stm32: Add defines for ports I, J, K
      include: dt-bindings: stm32_pinctrl: Add ports I, J, K
      arch: st_stm32: Add common series configuration file
      boards: stm32f4: Clean up driver generic flags
      boards: stm32l4: Clean up driver generic flags
      boards: stm32f3: Clean up driver generic flags
      boards: stm32f0: Clean up driver generic flags
      boards: stm32f1: Clean up driver generic flags
      samples: bme280: Add testcase filter for SPI_LEGACY_API
      samples: bmi160: Add testcase filter for SPI_LEGACY_API
      dts: bindings: Add yaml files for STM32 SPI support to DT
      dts: arm: st: Add SPI nodes
      drivers: spi_ll_stm32: Get SPI configuration from DT
      boards: arm: STM32 boards use DT to configure SPI
      tests: Clear SPI_*_IRQ_PRI from tests and samples
      boards: efm32wg_stk3800: Fix boards dts file copyright
      dts: bindings: provide generic yaml description for spi-devices
      dts: bindings: add binding for bluetooth modules
      dts: add spi device support for SPI bluetooth modules
      boards: 96b_carbon, disco_l475_iot1 use dts for SPI BT modules
      boards: disco_l475_iot1: Remove POLL dependency
      drivers: spi_ll_stm32: Enable SPI driver for F1 family
      boards: arm: olimexino_stm32: Enable SPI1 port
      drivers: spi_ll_stm32: Protect against null TX/RX buffer
      boards: olimexino_stm32: add supported features
      boards: arm: stm32f3_disco: Enable SPI_1, SPI_2 ports
      boards: arm: stm32f3_disco: add supported features
      board: arm: olimexino_stm32: Add PWM1
      boards: arm: olimexino_stm32: Fix board name in comments
      dts/arm: Move i2c2 node inside stm32fxxx dtsi file
      dts/arm/st: fix dts inclusion for stm32f334
      drivers/pinmux/stm32: Fix 80 characters line warnings
      dts/arm/st: Fix SPI1 interrupt priority for STM32f0
      dts: bindings: Add yaml files for STM32 USB support to DT
      dts: arm: 96b_carbon use DT to configure USB
      drivers: usb_dc_stm32: Get USB configuration from DT

Youvedeep Singh (15):
      kernel: posix: separating posix APIs according to their types.
      kernel: POSIX: Fixing return value of POSIX APIs on error.
      kernel: POSIX: moving POSIX related typedef into sys/types.h file.
      kernel: POSIX: Compatibility layer for pthread APIs.
      kernel: POSIX: Compatibility layer for scheduler APIs.
      kernel: POSIX: Compatibility layer for POSIX sleep APIs.
      kernel: POSIX: Compatibility layer for POSIX clock APIs.
      kernel: POSIX: removing unused elements from POSIX object attribute.
      tests: kernel: posix: pthread_join: Add pthread join test.
      tests: kernel: posix: clock: Add posix clock test.
      tests: kernel: posix: pthread: Add pthread test.
      tests: kernel: posix: pthread_cancel: POSIX thread cancel test.
      kernel: POSIX: Compatibility layer for POSIX timer APIs.
      tests: kernel: posix: timer: POSIX timer test.
      arch: POSIX: Add guard into posix_cheats file.

qianfan Zhao (2):
      samples: webusb: fix array length in Product and SN string descriptors
      usb: stm32: add usb_dc_ep_read_wait/conitinue

ravishankar karkala Mallikarjunayya (1):
      tests/drivers/uart/uart_basic_api : Added build only tag
```",59771425
1541,False,False,2017-12-08T20:26:35Z,2017-12-08T20:34:18Z,"We are pleased to announce the release of Zephyr kernel version 1.10.0.

Major enhancements with this release include:

* Initial alpha-quality thread-level memory protection on x86, userspace and memory
  domains
* Major overhaul to the build system and a switch from Kbuild to CMake.
* Newtron Flash Filesystem (NFFS) Support
* Increased testsuite coverage and migrated majority of testcases to use ztest
* Integration with MCUBOOT Bootloader
* Additional SoC, platform and driver support for many of the already supported
  platforms.

The following sections provide detailed lists of changes by component.

## Kernel

* Remove deprecated k_mem_pool_defrag code
* Initial alpha-quality thread-level memory protection on x86, userspace and memory
  domains:

  * Same kernel & driver APIs for kernel and user mode threads
  * System calls for privilege elevation
  * Stack overflow protection
  * Kernel object and device driver permission tracking
  * Simple app vs. kernel memory separation
  * Memory domain APIs for fine-tuning memory region permissions
  * Stack memory protection from other threads

* Add the following application-facing memory domain APIs:

  * k_mem_domain_init() - to initialize a memory domain
  * k_mem_domain_destroy() - to destroy a memory domain
  * k_mem_domain_add_partition() - to add a partition into a domain
  * k_mem_domain_remove_partition() - to remove a partition from a domain
  * k_mem_domain_add_thread() - to add a thread into a domain
  * k_mem_domain_remove_thread() - to remove a thread from a domain
* add k_calloc() which uses kernel heap to implement traditional calloc()
  semantics.
* Introduce object validation mechanism: All system calls made from userspace,
  which involve pointers to kernel objects (including device drivers), will need
  to have those pointers validated; userspace must never be able to crash the
  kernel by passing it garbage.

## Architectures

* nrf52: Add support for LOW_POWER state and SYSTEM_OFF
* Architecture specific memory domain APIs added
* Tickless Kernel Implementation for Xtensa
* Added support for the following ARM SoCs:

  * NXP i.MX RT1052
  * Silabs EFM32WG
  * STM F0
  * TI MSP432P4xx

## Boards

* Jailhouse port: The port will enable Zephyr to run as a guest OS on x86-64
  systems. It comes with a test on QEMU to validate that, thus this new board
  introduction.
* Power Management for nrf52 series SOC
* Added support for the following ARM boards:

  * 96b_neonkey
  * efm32wg_stk3800
  * mimxrt1050_evk
  * msp_exp432p401r_launchxl
  * nucleo_f030r8
  * nucleo_f091rc
  * stm32f411e_disco
  * stm32f412g_disco
  * stm32l476g_disco
  * usb_kw24d512

## Drivers and Sensors

* timer: Add Support for TICKLESS KERNEL in xtensa_sys_timer
* Rename `random` to `entropy`
* Add Atmel SAM I2S (SSC) driver
* Add Atmel SAM DMA (XDMAC) driver
* Add plantower PMS7003 Driver
* Add Altera shim driver for JTAG UART soft IP
* Add Altera shim driver for timer soft IP
* Introduce mcux ccm driver
* Introduce mcux igpio shim driver

## Networking

* HTTP API changed to use net-app API. Old HTTP API is deprecated.
* Loopback network interface support added. This is used in testing only.
* LWM2M multi-fragment network packet support added.
* New CoAP library implementation, supporting longer network packets.
* Deprecated ZoAP library.
* mDNS (multicast DNS) support added.
* SNTP (Simple Network Time Protocol) client library added.
* Various fixes for: TCP, RPL, ARP, DNS, LWM2M, Ethernet, net-app API, Network
  shell, and BSD socket API
* Network management API fixes.
* Networking sample application fixes.
* 6lo IPv6 header compression fixes.
* IEEE 802.15.4 generic fixes.
* IEEE 802.15.4 mcr20a driver fixes.
* IEEE 802.15.4 kw41z driver fixes.
* IEEE 802.15.4 nrf5 driver fixes.

## Bluetooth

* Multiple qualification-related fixes for Bluetooth Mesh
* Support for Bluetooth Mesh Friend Node role
* Support for Bluetooth Mesh Foundation Client Models
* New Bluetooth Mesh shell module and test application
* Support for PA/LNA amplifiers in the BLE Controller
* Support for additional VS commands in the BLE Controller
* Multiple stability fixes for the BLE Controller

## Build and Infrastructure

* The Zephyr project has migrated to CMake, an important step in a
  larger effort to make Zephyr easier to use for application developers
  working on different platforms with different development environment
  needs.  This change retains Kconfig as-is, and replaces all Makefiles
  with corresponding CMakeLists.txt.  The DSL-like Make language that
  KBuild offers is replaced by a set of CMake extensions that provide
  either simple one-to-one translations of KBuild features or introduce
  new concepts that replace KBuild concepts. Please re-read the Getting
  Started guide
  (http://docs.zephyrproject.org/getting_started/getting_started.html)
  with updated instructions for setting up and developing on your host-OS.
  You *will* need to port your own out-of-tree scripts and Makefiles to
  CMake.

## Libraries / Subsystems

* The implementation for sys_rand32_get() function has been moved to a new
  ""random"" subsystem. There are new implementations for this function, one based
  in the Xoroshift128+ PRNG (using a hardware number generator to seed), and
  another that obtains random numbers directly from a hardware number generator
  driver. Hardware number generator drivers have been moved to a
  ""drivers/entropy"" directory; these drivers only expose the interface provided
  by include/entropy.h.
* TinyCrypt updated to version 0.2.8

## HALs

* Add Altera HAL for support NIOS-II boards
* Add mcux 2.3.0 for mimxrt1051 and mimxrt1052
* stm32cube: HAL/LL static library for stm32f0xx v.1.9.
* Add support for STM32 family USB driver
* Add Silabs Gecko SDK for EFM32WG SoCs
* Simplelink: Update cc32xx SDK to version 1.50.00.06

## Documentation

* Missing API documentation caused by doxygen subgroups and missing
  Sphinx directives now included.
* Note added to all released doc pages mentioning more current content could
  be available from the master branch version of the documentation.
* Documentation updated to use CMake (vs. Make) in all examples, and
  using a new Sphinx extension to keep examples consistent.
* Getting Started Guide material updated to include CMake dependencies
  and build instructions required for version 1.10.
* Instead of hiding all expected warnings from the document build
  process (there are some known doxygen/sphinx issues), the build
  now outputs all warnings, and then reports
  if any new/unexpected warnings or errors were detected.
* Obsolete V1 to V2 porting material removed.
* Continued updates to documentation for new board support, new samples,
  and new features.
* Integration of documentation with new zephyrproject.org website.
* Documentation moved to docs.zephyrproject.org site (with redirection
  from zephyrproject.org/doc)

## Tests and Samples

* Benchmarking: cleanup of the benchmarking code
* Add userspace protection tests
* Move all tests to ztest and cleanup coding style and formatting

## Issue Related Items

These GitHub issues were addressed since the previous 1.9.0 tagged
release:

* #779 - CI: shippable - provide some means to allow users to rebuild
* #1166 - Keeping reusable components under samples/ leads to build issues
* #1236 - Cleanup CONFIG_EXECUTION_BENCHMARKING
* #1241 - tests/net/ipv6/ FAILED on qc1000:x86
* #1242 - tests/kernel/mutex/mutex/ FAILED @ esp32
* #1256 - [cmake] A board should support multiple configurations (variants)
* #1270 - Issue : Information CC3220SF LaunchXL
* #1280 - shell on Arduino Due prints ""shell>"" before the delayed boot banner
* #1289 - C++ 11 support!
* #1332 - sanitycheck builds too many duplicates in CI, make it smarter
* #1392 - No module named 'elftools'
* #1397 - no serialport output
* #1415 - Problem with forcing new line in generated documentation.
* #1416 - Regression added by commit cd35742a (net/ethernet/arp: Let ethernet L2 managing pkt's reference while sending)
* #1419 - test, please ignore
* #1425 - spi.h and spi_legacy.h documentation conflicts
* #1428 - networking defines being used but not defined anywhere
* #1435 - Could not connect to Eclipse Leshan Demo Server
* #1445 - doc: groups of items in API documentation not displaying
* #1450 - make kconfig help is difficult to understand
* #1474 - tests/net/ipv6_fragment build failure, missing testcase.yaml
* #1487 - net/lib/dns doesn't respect CONFIG_NET_IPV6=n
* #1488 - Replacing Make/Kbuild with CMake
* #1499 - doc: replace Mac OS with macOS
* #1501 - doc: Fix link title
* #1510 - ""make debugserver"" broken for qemu_xtensa
* #1522 - ""make qemu"" may not regenerate .config after changes to prj.conf
* #1524 - doc: Remove ""Changes from Version 1 Kernel"" document
* #1527 - make htmldocs failed
* #1538 - esp32: is broken for the latest esp-idf version
* #1542 - filter-known-issues.py fails if input file is empty
* #1543 - doc: add process documentation for importing non-Apache2.0 licensed code
* #1544 - regression: net: K64F: DHCP seems to fail a lot after 91041f9e
* #1558 - Master reports itself as if it was 1.9.0 release
* #1571 - Update to latest tinycrypt: v0.2.8
* #1573 - tests/net/lib/http_header_fields/ fails with CONFIG_HTTP_PARSER_STRICT enabled
* #1580 - checkpatch output in shippable log displays without line breaks
* #1581 - two tests fail in qemu_cortex_m3 with new SDK
* #1597 - remove deprecated k_mem_pool_defrag()
* #1626 - Bluetooth LE dual mode topology
* #1628 - Bluetooth LE data length extension
* #1629 - LE privacy 1.2
* #1630 - E2E tests for connection
* #1632 - Implement Environmental Sensing Profile sample app
* #1653 - enable stack canaries on ARC so we can run test_stackprot
* #1670 - Add Reject command handling
* #1853 - Review all Kconfig variables used and Simplify
* #1880 - Zephyr Build Management
* #1883 - Audio Codec
* #1885 - Display Interface
* #1902 - uWeave
* #2011 - tcf: add support for running altera_max10 binaries
* #2035 - doc: remove workaround for sphinx issue once 1.5 is released
* #2202 - sporadic bad RAM pointer error under qemu_nios2
* #2277 - Update to a more recent version of micro-ecc in Zephyr
* #2281 - purge usage of platform_whitelist
* #2411 - Look into supporting additional file systems under Zephyr FS API
* #2580 - Failure in test_nano_work
* #2723 - QEMU NIOS2 sporadic FAIL in tests/legacy/kernel/test_context
* #2775 - Ability to make Security / Vulnerability bugs non-public
* #2793 - entropy subsystem
* #2818 - Add disk access based on flash on freedom board to interface with file system
* #2853 - Customer: Zephyr Tutorial
* #2855 - Customer: Sample code
* #2858 - Customer: Training / Webinar / Video
* #2942 - Support for NXP KW2xD MCU
* #3039 - Simple Network Time Protocol support
* #3058 - no good way to include library code outside of $(PROJECT_BASE)
* #3064 - Symmetric multiprocessing (SMP)
* #3070 - Add Atmel SAM family DMA (XDMAC) driver
* #3139 - Zephyr Tutorials and Training
* #3142 - [PTS] GAP/TC_SEC_AUT_BV_12_C fails
* #3143 - [PTS] GAP/TC_SEC_AUT_BV_14_C fails
* #3144 - [PTS] GAP/TC_PRIV_CONN_BV_11_C fails
* #3146 - [PTS] SM/SLA/PROT/BV-02-C fails
* #3147 - [PTS] SM/SLA/SIE/BV-01-C fails
* #3158 - Add support for Panther board based on Quark SE C1000
* #3184 - xtensa: Zephyr SDK build and emulation support
* #3201 - Add Device Tree Documentation
* #3268 - Add tickless kernel support in xtensa_sys_timer timer
* #3274 - Lauterbach Debug Tools Support
* #3275 - Tickless Kernel and Frequency Scaling
* #3290 - introduce shared metadata for boards, samples and tests
* #3294 - Application Development
* #3297 - ROM-able
* #3313 - [RESEARCH] Memory Protection Unit support
* #3353 - Missing board documentation for arm/quark_se_c1000_ble
* #3355 - Missing board documentation for arm/nucleo_f103rb
* #3357 - Missing board documentation for arm/stm32_mini_a15
* #3360 - Missing board documentation for x86/panther
* #3364 - Missing board documentation for arc/panther_ss
* #3368 - Can Zephyr support SNMP (Simple Network Management Protocol)?
* #3378 - Zephyr will not build with icecream
* #3383 - Work up linker-based system call prototype for MPU enabling
* #3412 - Provide a sample application for kernel_event_logger
* #3415 - Building FS for Arduino 101
* #3432 - Port Zephyr to Silabs EFM32WG-STK3800
* #3484 - Provide stm32cube LL based UART driver
* #3485 - Provide stm32cube LL based I2C driver
* #3486 - Provide stm32cube LL based SPI driver
* #3587 - Move board related device tree files where the board is defined
* #3588 - Move all X86 boards and related SoCs to device tree
* #3600 -  Build warnings [-Wpointer-sign] with LLVM/icx (tests/unit/bluetooth/at)
* #3601 - Use QMSI mailbox driver for Quark SE
* #3604 - the http_client sample app cannot send GET request on Qemu x86
* #3608 - Add functionality of Gesture Sensor
* #3621 - Design system call interface for drivers
* #3625 - Validation mechanism for user-supplied kernel object pointers
* #3627 - x86: implement system calls
* #3628 - implement APIs for dropping threads to unprivileged mode
* #3630 - use API to validate user-supplied kernel buffers
* #3632 - define set of architecture-specific memory protection APIs
* #3635 - Device Driver Access Control
* #3641 - define kernel system calls
* #3643 - [PTS] PTS server stops working while executing  TC_SEC_CSIGN_BV_01_C test case
* #3646 - Zoap message to use more than one fragment
* #3682 - incremental builds do not work properly in Windows
* #3683 - unable to follow directions to install Crosstool-NG on OS X
* #3688 - OS X Setup Instructions Not Working on macOS Sierra
* #3690 - Move to CMake or similar instead of Kbuild
* #3697 - Use CMSIS __NVIC_PRIO_BITS consistently
* #3716 - define / implement application-facing memory domain APIs
* #3728 - ESP32 i2c Driver Support
* #3772 - test_mem_pool_api crashes qemu_x86 if CONFIG_DEBUG=y
* #3781 - iwdg: provide independent watchdog driver compliant with STM32Cube LL API
* #3783 - Add mbedtls Crypto API shim driver
* #3829 - PTS test case GATT/SR/GPA/BV-02-C crashes tester in QEMU
* #3832 - ARM: implement API to validate user buffer
* #3844 - Fix LWM2M header calculation in lwm2m_engine.c
* #3851 - Port SPI HCI driver on new SPI API
* #3852 - x86: implement memory domain interface
* #3892 - Add support for STM32F429I_DISC1 board
* #3897 - Static code scan (coverity) issues seen
* #3922 - [PTS] GATT/SR/GAT/BV-01-C INCONC
* #3923 - boards: provide support for Nucleo-64 F030R8
* #3939 - Add Atmel SAM family I2S (Inter-IC Sound) driver based on SSC module
* #3941 - x86: implement option for PAE-formatted page tables with NX bit
* #3942 - x86: scope SMEP support in Zephyr
* #3984 - Build warning: [-Wpointer-bool-conversion] with LLVM/icx (samples/bluetooth/mesh_demo)
* #3985 - Build warning:  [-Wpointer-bool-conversion] with LLVM/icx (samples/bluetooth/mesh)
* #4001 - GENERATED_KERNEL_OBJECT_FILES end up in application memory
* #4004 - integrate printk() with console subsystem
* #4009 - I2C API is mixing two incompatible definitions of bit-fields
* #4014 - memory protection: implicit kernel object permissions
* #4016 - bluetooth linker not connected
* #4022 - net: ""queue: Use k_poll if enabled"" commit regressed BSD Sockets performance
* #4026 - CC3220 WiFi Host Driver support
* #4027 - extra unref happening on net_context
* #4029 - TinyTILE bluetooth app flash
* #4030 - Coverity issue seen with CID: 175366 , in file: /subsys/bluetooth/host/smp.c
* #4031 - Coverity issue seen with CID: 175365 , in file: /subsys/bluetooth/controller/hci/hci.c
* #4032 - Coverity issue seen with CID: 175364 , in file: /subsys/bluetooth/host/mesh/proxy.c
* #4033 - Coverity issue seen with CID: 175363 , in file: /subsys/bluetooth/host/smp.c
* #4034 - Coverity issue seen with CID: 175362 , in file: /subsys/bluetooth/host/smp.c
* #4035 - Coverity issue seen with CID: 175361 , in file: /samples/bluetooth/eddystone/src/main.c
* #4036 - Coverity issue seen with CID: 175360 , in file: /subsys/bluetooth/host/mesh/prov.c
* #4037 - Coverity issue seen with CID: 175359 , in file: /subsys/bluetooth/host/hci_core.c
* #4038 - Coverity issue seen with CID: 175358 , in file: /subsys/bluetooth/host/hci_core.c
* #4041 - flashing tinytile and use of minicom
* #4043 - Add new user CONFIG to project
* #4044 - Livelock in SMP pairing failed scenario
* #4046 - BLE Central and BLE Peripheral roles at a moment on nRF52832
* #4048 - HTTP Request Timeout Not Working
* #4049 - AMP - Multi-core
* #4050 - zephyr.git/tests/kernel/obj_validation/testcase.yaml#test :Evaluation failure
* #4051 - Coverity issue seen with CID: 177219 , in file: /drivers/flash/flash_stm32f4x.c
* #4054 - [CID: 177215 ], in file: /tests/subsys/dfu/mcuboot/src/main.c
* #4055 - Coverity issue seen with CID: 177214 , in file: /samples/boards/microbit/pong/src/ble.c
* #4056 - Coverity issue seen with CID: 177213 , in file: /tests/net/ipv6_fragment/src/main.c
* #4057 - Coverity issue seen with CID: 170744, in file: /samples/boards/microbit/pong/src/ble.c
* #4058 - samples/net/http_client: The HTTP client failed to  send the GET request
* #4059 -  zephyr.git/tests/net/ipv6/testcase.yaml#test  :evaluation failed
* #4068 - [BLE, nRF51822] Error -ENOMEM when use  bt_gatt_write_without_response function
* #4099 - Add some docs to samples/net/ieee802154/hw
* #4131 - gen_syscalls.py may choke on non-ascii chars
* #4135 - checkpatch.pl generates warning messages when run w/ perl-5.26
* #4149 - Transition message on jira.zephyrproject.org needed
* #4162 - build error in http_get sample
* #4165 - ieee802154_uart_pipe.c: warning: return from incompatible pointer type
* #4182 - NET_APP_SETTINGS for 15.4 doesn't seem to work (if to trust 15.4 shell)
* #4186 - tcf.git/examples/test_network_linux_zephyr.py#_test  :Compilation failure
* #4188 - samples /net/echo_server:failed to send packets to client
* #4189 - ieee802154_settings.c is duplicated in the codebase
* #4190 - samples/net/echo_client :failed to send data
* #4193 - Zephyr libc(snprintf) is not comply with ISO standard.
* #4195 - tests/net/udp/test_udp.py#_ipv4_udp : evaluation failed
* #4239 - unit tests broken in sanitycheck
* #4249 - where is auto-pts py script of zephyr?
* #4258 - samples/net/zoap_server : unable to communicate between zoap client and server
* #4264 - Getting started guide for windows: small error
* #4289 - samples/mpu/mem_domain_apis_test is broken
* #4292 - net: tcp.c: prepare_segment() may unrightly unref packet in case of error
* #4295 - Error flashing board STM32373C-EVAL
* #4301 - checkpatch.pl false positives block PR merge
* #4310 - unable to flash quark_se_c1000_devboard
* #4312 - GDB: Ubuntu's default GDB package does not support arm
* #4323 - net: tcp.c: prepare_segment() may leak fragments in case of error
* #4325 - samples/net/http_client:  unable to send the proper http request to Apache server
* #4327 - NET_PKT_TX_SLAB_DEFINE, NET_PKT_DATA_POOL_DEFINE description and usage are confusing
* #4347 - net: BSD Sockets UDP sendto() impl broke tests/net/socket/udp/
* #4353 - VM-VM qemu networking example crashes often
* #4358 - k_queue_poll returns NULL with K_FOREVER
* #4366 - memory corruption in test_pipe_api
* #4377 - Sniffing traffic in a VM-VM qemu setup crashes with a segfault in the monitor application
* #4392 - zephyr/tests/benchmarks/footprint :build Failed
* #4394 - Coverity issue seen with CID: 178058
* #4395 - Coverity issue seen with CID: 178059
* #4396 - Coverity issue seen with CID: 178060
* #4397 - Coverity issue seen with CID: 178064
* #4398 - zephyr/tests/crypto/ccm_mode :-Evaluation failed due to esp32
* #4419 - 6LoWPAN - source address uncompress corner case
* #4421 - net: Duplicated functionality between net_pkt_get_src_addr() and net_context.c:create_sockaddr()
* #4424 - Turning on network debug message w/ LwM2M sample client will result in stack check failure
* #4429 - I2C: stm32-i2c-v2 Driver (F0/F3/F7) gets stuck in endless loop when handling restart conditions
* #4442 - samples: net: ieee802154: Sample is not working on nRF52840 platform
* #4459 - i2c: stm32-i2c-(v1/v2) don't handle i2c_burst_write like expected
* #4463 - Some tests and samples are missing a .yaml file
* #4466 - warnings building echo_client with nrf5
* #4469 - CI problem with check-compliance.py
* #4476 - Multiple build failures with i2c_ll_stm32.c driver
* #4480 - Compilation failure for qemu_x86 with CONFIG_DEBUG_INFO=y
* #4481 - Build failure with CONFIG_NET_DEBUG_APP=y
* #4503 - CONFIG_STACK_SENTINEL inconsistencies
* #4538 - Coverity issue seen with CID:174928
* #4539 - Coverity issue seen with CID:173658
* #4540 - Coverity issue seen with CID: 173657
* #4541 - Coverity issue seen with CID: 173653
* #4544 - [BLE Mesh] Error: Failed to advertise using Node ID
* #4563 - [BLE Mesh]: How to handle the 'Set"" and 'Get' callbacks
* #4565 - net_context_recv always fails with timeout=K_FOREVER
* #4567 - [BLE Mesh]: Multiple elements in a node
* #4569 - LoRa:  support LoRa
* #4579 - [CID: 178249] Parse warnings in samples/mpu/mem_domain_apis_test/src/main.c
* #4580 - Coverity issue seen with CID: 178248
* #4581 - Coverity issue seen with CID: 178247
* #4582 - Coverity issue seen with CID: 178246
* #4583 - [CID: 178245] Parse warnings in samples/mpu/mem_domain_apis_test/src/main.c
* #4584 - Coverity issue seen with CID: 178244
* #4585 - Coverity issue seen with CID: 178243
* #4586 - [CID: 178242]: Parse warnings samples/mpu/mem_domain_apis_test/src/main.c
* #4587 - Coverity issue seen with CID: 178241
* #4588 - Coverity issue seen with CID: 178240
* #4589 - [coverity] Null pointer dereferences in tests/net/app/src/main.c
* #4591 - [CID: 178237] memory corruption in drivers/ieee802154/ieee802154_mcr20a.c
* #4592 - Coverity issue seen with CID: 178236
* #4593 - Coverity issue seen with CID: 178235
* #4594 - Coverity issue seen with CID: 178234
* #4595 - Coverity issue seen with CID: 178233
* #4600 - drivers:i2c_ll_stm32_v2: Interrupt mode uses while loops
* #4607 - tests/net/socket/udp/ is broken, again
* #4630 - Sample app 'coaps_server' fails to parse coap pkt
* #4637 - [Coverity CID: 178334] Null pointer dereferences in /subsys/usb/class/netusb/function_ecm.c
* #4638 - build is failing when newlib  is enabled
* #4644 - Kconfig warnings when building any sample for nRF5x
* #4652 - Document ""make flash"" in the ""application development primer""
* #4654 - Wrong file name for drivers/aio/aio_comparator_handlers.o
* #4667 - x86 boards need device trees
* #4668 - drivers/random/random_handlers.c is built when no random driver has been kconfig'ed into the build
* #4683 - net: tcp  tcp_retry_expired cause assert
* #4695 - samples/net/ieee802154 needs documentation
* #4697 - [regression] net: echo_server doesn't accept IPv4 connections
* #4738 - ble-mesh: proxy.c : Is clients-> conn a clerical error? it should be client-> conn?
* #4744 - tests/net/ieee802154/l2/testcase.yaml#test : unable to acknowledge data from receiver
* #4757 - kw41z-frdm: assertion failure while setting IRQ priority
* #4759 - [PTS] GATT/CL/GAW/BV-02-C fails with INCONC
* #4760 - stm32f4_disco and frdm_k64f  samples/basic/blink_led ,Choose supported PWM driver
* #4766 - tests: mem_pool: Fixed memory pool test case failure on quark d2000
* #4780 - [Coverity CID: 178794] Error handling issues in /tests/subsys/dfu/mcuboot/src/main.c
* #4781 - [Coverity CID: 178793] Incorrect expression in /tests/kernel/static_idt/src/static_idt.c
* #4782 - [Coverity CID: 178792] Memory - illegal accesses in /subsys/net/lib/http/http_app_server.c
* #4783 - [Coverity CID: 178791] Incorrect expression in /tests/kernel/static_idt/src/static_idt.c
* #4784 - [Coverity CID: 178790] Memory - corruptions in /samples/net/http_server/src/main.c
* #4785 - [Coverity CID: 178789] Null pointer dereferences in /samples/net/http_server/src/main.c
* #4786 - [Coverity CID: 178788] Control flow issues in /tests/net/context/src/main.c
* #4787 - [Coverity CID: 178787] Null pointer dereferences in /subsys/net/ip/net_context.c
* #4788 - [Coverity CID:178786] Memory - corruptions in /samples/net/http_server/src/main.c
* #4789 - [Coverity CID: 178785] Incorrect expression in /tests/kernel/static_idt/src/static_idt.c
* #4791 - rpl-node uses testcase.ini instead of sample.yaml format
* #4825 - Bluetooth IPSP error with qemu_x86
* #4827 - Ping command crashes kernel over qemu_x86
* #4841 - fix doc/devices/dts/device_tree.rst path and Make references
* #4844 - cmake: can't flash stm32 with openocd
* #4847 - custom 404 error page not being shown on docs.zephyrproject.org
* #4853 - cmake: building unit test cases ignore EXTRA_* settings
* #4864 - cmake: hts221 sensor sample not working anymore
* #4881 - device_get_binding() returns failure in sample/drivers/crypto
* #4889 - Flashing EM Starterkit with EM7D fails on master
* #4899 - Convert opensda doc to CMake
* #4901 - net: tcp: RST is sent after last ack is received
* #4904 - cmake: BOOT_BANNER disappeared
* #4905 - cmake: flashing for quark_se_devboard is broken
* #4910 - BT host CMakeLists.txt code should be agnostic to the FS implementation
* #4912 - Not using the Zephyr SDK is broken
* #4925 - application_development test pollutes source directory
* #4936 - net: 15.4 MAC addresses are shown differently between shell ""net iface"" and ""ieee15_4 get_ext_addr""
* #4937 - ESP32 can't boot
* #4975 - Getting started documentation for Mac OS X inconsistent
* #5004 - Normalize IEEE802514 driver ""raw"" mode.
* #5008 - system call headers are not properly regenerated in CMake on incremental builds
* #5009 - cmake creates too many build artifacts
* #5014 - samples/drivers/crypto :Unable to find crypto device
* #5019 - tests/kernel/mem_protect/stackprot : input string is long stack overflow
* #5025 - arduino_due not generating proper config with cmake (crash)
* #5026 - k_poll() documentation is wrong
* #5040 - Bluetooth mesh API documentation incomplete
* #5047 - document error: getting_started.rst
* #5051 - Verify doxygen documented APIs are in the generated docs
* #5055 - [Coverity CID: 179254] Possible Control flow issues in /samples/net/zperf/src/zperf_udp_receiver.c
* #5056 - [Coverity CID: 179253] Control flow issues in /samples/net/zperf/src/zperf_tcp_receiver.c
* #5057 - [Coverity CID: 179252] Null pointer dereferences in /samples/net/zperf/src/zperf_udp_receiver.c
* #5058 - [Coverity CID: 179251] Control flow issues in /samples/net/zperf/src/zperf_udp_receiver.c
* #5059 - [Coverity CID: 179250] Null pointer dereferences in /samples/net/zperf/src/zperf_udp_uploader.c
* #5060 - [Coverity CID: 179249] Incorrect expression in /tests/kernel/fatal/src/main.c
* #5061 - [Coverity CID: 179248] Control flow issues in /samples/net/zperf/src/zperf_tcp_receiver.c
* #5062 - [Coverity CID: 179247] Incorrect expression in /tests/kernel/fatal/src/main.c
* #5063 - samples/bluetooth: central_hr sample app is not connecting with peripheral sample app on arduino_101.
* #5085 - bug: dts: stm32f1: wrong pinctrl base address
* #5087 - Samples/bluetooth: Failed to connect with eddystone sample app on arduino_101.
* #5090 - no makefile in zephyr/samples/bluetooth/mesh examples
* #5097 - zephyr_library_*() configuration has lower precedence than global zephyr_*()  configuration
* #5107 - Default partition addressing for nrf52_pca10040 is incompatible
* #5116 - [Coverity CID: 179986] Null pointer dereferences in /subsys/bluetooth/host/mesh/access.c
* #5117 - [Coverity CID: 179985] Error handling issues in /subsys/bluetooth/host/mesh/cfg_srv.c
* #5118 - [Coverity CID: 179984] Memory - corruptions in /drivers/ethernet/eth_mcux.c
* #5119 - [Coverity CID: 179983] Error handling issues in /subsys/bluetooth/host/mesh/cfg_srv.c
* #5120 - [Coverity CID: 179982] Error handling issues in /subsys/bluetooth/host/mesh/cfg_srv.c
* #5121 - [Coverity CID: 179981] Incorrect expression in /drivers/ieee802154/ieee802154_kw41z.c
* #5122 - [Coverity CID: 179980] Integer handling issues in /subsys/bluetooth/host/mesh/friend.c
* #5123 - [Coverity CID: 179979] Error handling issues in /subsys/bluetooth/host/mesh/cfg_srv.c
* #5124 - [Coverity CID: 179978] Error handling issues in /subsys/bluetooth/host/mesh/health_srv.c
* #5125 - [Coverity CID: 179976] Error handling issues in /subsys/bluetooth/host/mesh/cfg_srv.c
* #5126 - [Coverity CID: 179975] Error handling issues in /subsys/bluetooth/host/mesh/health_srv.c
* #5127 - [Coverity CID: 179974] Error handling issues in /subsys/bluetooth/host/mesh/cfg_srv.c
* #5128 - [Coverity CID: 179973] Error handling issues in /subsys/bluetooth/host/mesh/cfg_srv.c
* #5140 - CMake migration regressed (changed behavior) of QEMU_PTY=1
* #5144 - BUG: cmake: make doesn't update zephyr.hex file
* #5145 - samples/bluetooth: Connection failure on peripheral CSC with Arduino 101
* #5152 - CONFIG_CPLUSPLUS is incompatible with the zephyr_get_* API
* #5159 - [nrf] Button example for nrf5x boards latches GPIO after 1 button press
* #5176 - zephyr-v1.9.2 tag missing
* #5177 - hci_usb: Linking error
* #5184 - kernel system call handlers missing due to -Wl,--no-whole-archive
* #5186 - gen_syscall_header_py is being run at the wrong time
* #5189 - tests/subsys/fs/nffs_fs_api:-Evaluation failed
* #5207 - Bluetooth subsystem uses acl_in_pool even for controllers not supporting flow control
* #5211 - Kconfig: CPU_HAS_FPU dependencies problem
* #5223 - CMake: Recent changes broke 3rd-party build system integration again
* #5265 - ROM size increase due Zephyr compile options not stripping unused functions
* #5266 - Ensure the Licensing page is up-to-date for the release
* #5286 - NET_L2: Symbols from the L2 implementation layer are exposed to users of L2
* #5298 - Endless loop in uart pipe
",59771425
1542,False,True,2017-12-05T22:34:06Z,2017-12-05T22:36:55Z,"```
Akhilesh Kumar Upadhyay (2):
      x86: mmu: kernel: Validate existing APIs
      tests: kernel: x86 : App to validate x86 specific boot time page table

Anas Nashif (7):
      cmake: add zephyr_cc_option_nocheck
      kernel: stack: add -fstack-protector-all without checks
      kconfig: fix CPU_HAS_FPU dependencies
      cmake: add missing config for *.lst files
      doc: update release notes for 1.10
      tests: remove unused and obsolete test header
      cleanup: remove nanokernel/nano leftovers

Andrew Boie (1):
      gen_syscall_header: create dummy handler refs

David B. Kinder (10):
      doc: update 1.10 release notes
      doc: add missing API content
      doc: fix handling of OPTION directive in genrest
      doc: fix broken notes directives
      doc: fix doxygen commment in x86/arch.h
      doc: fix doxygen API comments for http_app.h
      doc: fix doc Makefile dependency on python
      doc: fix broken footnote reference in esp32 doc
      doc: environment setup needs zephyr clone first
      doc: add links to 1.10 docs and release notes

Gil Pitney (1):
      boards: arm: cc3220sf_launchxl: doc: clarify external flash size

Gustavo Lima Chaves (1):
      cmake: honor again CONFIG_KERNEL_ENTRY

Ioannis Glaropoulos (1):
      drivers: serial: Fix nRF5x UART IRQ Mask values

Johan Hedberg (29):
      Bluetooth: Mesh: Remove unnecessary variable
      Bluetooth: Mesh: Deliver TTL=1 PDUs only to the local net interface
      Bluetooth: Mesh: Fix GATT Proxy & Node Identity state binding
      Bluetooth: Mesh: Fix GATT Proxy Service CCC read permissions
      Bluetooth: Mesh: Fix initializing Node ID start time
      Bluetooth: Mesh: Fix disconnecting clients when disabling GATT Proxy
      Bluetooth: Mesh: Fix Replay Protection List checking
      Bluetooth: Mesh: Introduce API for clearing the RPL
      doc: Add Bluetooth changes to 1.10 release notes
      Bluetooth: Mesh: Clearly document the magic 18 byte minimum length
      Bluetooth: Mesh: Fix logging mesh addresses
      Bluetooth: Mesh: Fix sending beacons to Friend Queue & GATT clients
      Bluetooth: Mesh: Fix setting an upper limit on beacon interval
      Bluetooth: Mesh: Fix beacon cache handling
      Bluetooth: Mesh: Fix changing Relay state from Not Supported (0x02)
      Bluetooth: Mesh: Fix relaying conditions for Adv & GATT bearers
      Bluetooth: Mesh: Fix using the correct transmit state
      Bluetooth: Mesh: Fix format specifier for s32_t
      Bluetooth: Mesh: shell: Fix AppKey Add command handler
      Bluetooth: Mesh: Fix copy-paste mistake in log message
      Bluetooth: Mesh: Fix relaying from GATT to Advertising
      Bluetooth: Mesh: Coding-style: Remove redundant whitespace
      Bluetooth: Mesh: Add support for sending NetKey Add message
      Bluetooth: Mesh: Add Proxy advertising support for multiple subnets
      Bluetooth: Mesh: Add helpers for starting/stopping Node ID
      Bluetooth: Mesh: Prioritize subnets with Node ID
      Bluetooth: Mesh: Suppport multiple subnets for app-triggered Node ID
      Bluetooth: Mesh: Proxy: Fine-tune subnet advertising rotation
      Bluetooth: Mesh: Proxy: Don't try to advertise when it's not possible

Kumar Gala (5):
      doc/dts: Update to reflect new path locations
      Add missing license and copyright headers
      doc: update whitespace in release-notes-1.10.rst
      doc: Update release notes for ARM SoC & Board additions
      release: move version to 1.10.0-rc3

Marti Bolivar (1):
      arch: x86: fix jailhouse build

Michael Scott (1):
      net: if: fix ND reachable calculation

Neil Armstrong (2):
      boards: nucleo_f091rc: fix cmake build
      flash: stm32l4x: fix build

Piotr Mienkowski (4):
      drivers: Add Atmel SAM DMA (XDMAC) driver
      drivers: add missing i2s directory to CMakeLists.txt
      drivers: Add Atmel SAM I2S (SSC) driver
      tests: Add i2s driver test

Sebastian Bøe (7):
      Revert ""cmake: add zephyr_cc_option_nocheck""
      Revert ""kernel: stack: add -fstack-protector-all without checks""
      kernel: stack: add -fstack-protector-all without checks
      cmake: Move syscall_macros.h generation into the build stage
      cmake: Re-organize syscall generation wrt. the build system
      cmake: Fix EXTRA_LDFLAGS feature
      cmake: Change the zephyr_get_* API to be LANG-aware

Stefan Smarzly (1):
      boards: arm: compatible scratch slot size for mcuboot on NRF52 PCA10040

```",59771425
1543,False,True,2017-11-28T21:25:58Z,2017-11-28T21:28:56Z,"```
Adithya Baglody (1):
      x86: swap: save the scratch pad registers.

Anas Nashif (20):
      fs: api: add doxygen group for filesystem
      doc: update index with latest previous releases
      doc: update doxygen configuration file
      doc: strip zephyr root from generated docs
      doc: fix indentation of yaml samples
      doc: crc16: add to doxygen group
      doc: json: add to doxygen group
      kconfig: fix type of config for nrf5 15.4
      build: use kconfig to select generated artifacts
      ci: verify author identity
      kconfig: move GDB_INFO kconfig to subsys/debug
      kconfig: update BOOT_BANNER help message
      kconfig: move IRQ_OFFLOAD to a more generic place
      kconfig: clean CPU features and define only once
      samples: logger-hook: remove unused configs
      boards: galileo and minnowboard require zephyr.strip
      sanitycheck: use glob to find board yaml file
      sanitycheck: rename qemu_time to handler time
      sanitycheck: fix documentation and remove mention of kbuild
      sanitycheck: remove obsolete DISABLE_TRYRUN

Aska Wu (4):
      net: tcp: Fix tcp passive close
      net: sockets: Support ipv6 wildcard and loopback address
      net: tcp: First check sequence number
      net: context: Make sure contexts lock is released when error

Daniel Wagenknecht (2):
      drivers: i2c_ll_stm32_v2: reorder to remove duplication
      drivers: i2c_ll_stm32_v2: don't use while loops in interrupt mode

Ding Tao (1):
      net: pkt: Fix possible division by zero

Erwan Gouriou (1):
      yaml: fix properties syntax to 'mapping' instead of 'series'

Johan Hedberg (75):
      Bluetooth: Mesh: Move per-buffer mesh meta-data to external struct
      Bluetooth: Mesh: Introduce user data for the advertising callback
      Bluetooth: Mesh: Introduce a second advertising callback
      Bluetooth: Mesh: Fix notifying message send completion for GATT proxy
      Bluetooth: Mesh: Use a unified send callback also for public API
      Bluetooth: Mesh: Fix encoding/decoding Publish Retransmit value
      Bluetooth: Mesh: Fix model publication
      Bluetooth: Mesh: Fix calling send start for multi-segmented messages
      Bluetooth: tests: Add new mesh_shell app
      Bluetooth: tests/shell: Move mesh into its own configuration
      Bluetooth: Mesh: Fix ignoring all messages in LPN mode
      Bluetooth: Mesh: Add Model Subscription Del & Overwrite support
      Bluetooth: Mesh: shell: Add mod-sub-del command
      Bluetooth: Mesh: Update TODO file
      Bluetooth: Mesh: shell: Declare mandatory dependency on BT_MESH_CFG_CLI
      Bluetooth: Mesh: Fix node reset
      Bluetooth: Mesh: Proxy: Downgrade advertising errors to warnings
      Bluetooth: Mesh: Fix non-periodic Model Publication
      Bluetooth: samples/mesh_demo: Remove unused model publication
      Bluetooth: tests/mesh: Fix model publication
      Bluetooth: Mesh: Provide documentation for the publication API
      Bluetooth: Mesh: Fix accuracy of Publish Period
      Bluetooth: tests/mesh_shell: Fix main stack size for qemu
      Bluetooth: Mesh: remove redundant 32-bit wrap-around code
      Bluetooth: Mesh: Improve model publication documentation
      Bluetooth: Mesh: Fix dereferencing mod->pub too early
      Bluetooth: Mesh: Fix coverity warning of unchecked return
      Bluetooth: Mesh: Friend: Fix poll timeout type
      Bluetooth: samples/mesh_demo: Fix address handling
      Bluetooth: tests/mesh_shell: Tweak configuration a little bit
      Bluetooth: Fix compiler warning when VS HCI is unset
      Bluetooth: Mesh: shell: Add appidx command for setting the AppIndex
      Bluetooth: Mesh: Add skeleton for Health Client model
      Bluetooth: Mesh: Add support for sending Health Fault Get message
      Bluetooth: Mesh: Add support for receiving Health Current Status
      Bluetooth: Mesh: shell: Use a valid Company ID
      Bluetooth: Mesh: shell: Add Health Fault support to the server
      Bluetooth: Mesh: Add support for Health Fault Clear messages
      Bluetooth: Mesh: Add support for Health Fault Test messages
      Bluetooth: Mesh: Add support for Health Period messages
      Bluetooth: Mesh: Introduce helpers to wait for a status message
      Bluetooth: Mesh: Add support for Health Attention messages
      Bluetooth: Mesh: Health: Fix requiring specific Company ID
      Bluetooth: Mesh: Introduce public LPN APIs for better control
      Bluetooth: Mesh: Increase initial poll timeout
      Bluetooth: Mesh: LPN: Fix clearing pending request
      Bluetooth: Mesh: LPN: Fix clearing group status
      Bluetooth: Mesh: shell: Fix decoding vendor model IDs
      Bluetooth: Mesh: shell: Add support for decoding hex strings
      Bluetooth: Mesh: shell: Add raw network PDU sending support
      Bluetooth: Mesh: Improve logging related to Label UUID lookups
      Bluetooth: Mesh: Add support for manipulating Label UUIDs
      Bluetooth: Mesh: shell: Fix & clean up command help
      Bluetooth: Mesh: Fix creating initial beacon data
      Bluetooth: Mesh: shell: Add iv-update command
      Bluetooth: Mesh: Add IV Update test mode API
      Bluetooth: Mesh: Fix NetKey Update behavior in Phase 1
      Bluetooth: Mesh: shell: Fix health publication message size
      Bluetooth: Mesh: Improve documentation for model publication
      Bluetooth: Mesh: shell: Fix sending health publication
      Bluetooth: Mesh: Restrict scope of variables in health_get_registered()
      Bluetooth: Mesh: shell: Make Static OOB optional
      Bluetooth: Mesh: shell: Add command for setting the UUID
      Bluetooth: Mesh: shell: Fix parsing ""boolean"" parameters
      Bluetooth: Mesh: Introduce option for Node ID timeout
      Bluetooth: Mesh: Use 32-bit math for Node ID duration
      Bluetooth: Mesh: Fix proxy advertising handling
      Bluetooth: Mesh: Fix clearing network message cache
      Bluetooth: Mesh: Remove unnecessary logic for key selection
      Bluetooth: Mesh: Fix & clean up Friendship Credential handling
      Bluetooth: Mesh: Fix clearing Friend state upon reset
      Bluetooth: Mesh: Fix looking up existing friendship contexts
      Bluetooth: Mesh: Reduce logging clutter for LPN lookups
      Bluetooth: Mesh: Log information about the on-behalf-of flag
      Bluetooth: Mesh: Fix Friend messaging state tracking

Jukka Rissanen (10):
      samples: net: echo-client: Fix compilation with mbedtls
      samples: net: echo_client: Only send allowable number of bytes
      doc: Add networking information to 1.10 release note
      samples: net: zperf: Remove deadcode
      samples: net: zperf: Check pkt before accessing it
      samples: net: zperf: Check UDP pkt before accessing it
      tests: net: context: Fix timeout test
      net: app: Honor MTU when sending TLS/DTLS data
      samples: net: zperf: Ignore error when creating TCP sample pkt
      samples: net: echo-server: Fix compilation with mbedtls

Kumar Gala (2):
      kernel: Remove deprecated k_mem_pool_defrag code
      release: move version to 1.10.0-rc2

Leandro Pereira (1):
      drivers: i2c_gpio:  Use quoted #include directive for i2c_bitbang

Luiz Augusto von Dentz (2):
      poll: Update code comments to reflect latest changes
      poll: k_poll: Document -EINTR return

Maureen Helm (1):
      mimxrt1050_evk: Fix kernel timer frequency

Michael Hope (1):
      flash: minor documentation improvements.

Patrik Flykt (1):
      net: pkt: Compute TX payload data length

Paul Sokolovsky (4):
      tests: socket: Make runnable with sanitycheck
      net: sockets: Handle EINTR return from k_poll()
      cmake: qemu: Restore QEMU_INSTANCE option handling.
      cmake: qemu: Restore QEMU_PTY/QEMU_PIPE option handling.

Robert Chou (1):
      net: lwm2m: POST with <obj>/<obj instance> is a WRITE op

Savinay Dharmappa (6):
      dts: arduino_101_sss: Add dts support
      dts: arc: Get flash address from dts file
      dts: x86: Add device tree support for atom based devices
      dts: x86: minnowboard: Add dts support for minnowboard
      dts: x86: Add device tree support for QUARK_X1000 soc based devices
      dts: x86: galileo: Add device tree support for galileo board

Sebastian Bøe (4):
      cmake: Generate POST_BUILD items based on KConfig
      cmake: Give zephyr_library_* flags precedence over zephyr_* flags
      cmake: extensions: Add check_compiler_flag function
      cmake: Extend cc-option support to C++

Stephen Smalley (4):
      tests/kernel/mem_protect/protection: fix test_main arguments
      tests/kernel/mem_protect/userspace: Add userspace protection tests
      arm: define _image_rodata_start/end
      tests/kernel/mem_protect/userspace: test that _k_neg_eagain is in rodata

Sven Dowideit (1):
      doc: make the CMake instructions a little more active

Tomasz Bursztyka (1):
      net/ieee802154: Make RAW mode generic

Vakul Garg (3):
      Bluetooth: Added missing checks for whether CONFIG_BT_PRIVACY is enabled
      net: pkt: Account for IP header length for allowable payload data
      net: pkt: Corrected data length appended in net_pkt_append()

Vinayak Kariappa Chettimada (8):
      Bluetooth: controller: Fix memq_dequeue function
      Bluetooth: controller: Optimise memq interface
      Bluetooth: controller: Replace void * with memq_link_t
      Bluetooth: controller: Use PPI indices 14/15 for PA/LNA
      drivers: pwm: nRF5x: Use TIMER2 and PPI indices 14-19
      Bluetooth: controller: Fix compile error when LE_ENC is disabled
      Bluetooth: tests: Fix config option dependencies
      Bluetooth: shell: Fix compile error due to missing memq.h include

Vitor Massaru Iha (1):
      pinmux: esp32: Unnecessary iteration in ""for"" loop

Yannis Damigos (1):
      dts: stm32f1: Fix pinctrl node base address

Yongfa Zhou (3):
      drivers: sensor: Introduce particulate matter sensor channels
      drivers: sensor: Add plantower PMS7003 Driver
      drivers: sensor: Fix some code style issues

```",59771425
1544,False,True,2017-11-20T04:17:02Z,2017-11-20T04:19:34Z,"```
Adam Podogrocki (2):
      iwdg: make independent watchdog driver compliant with STM32Cube LL API
      iwdg: the sample of the use of STM32 Independent Watchdog

Adithya Baglody (25):
      x86: MMU: Miscellaneous macros related to MMU.
      x86: MMU: Updated MMU code to use the new macros.
      kernel: arch interface for memory domain
      ARM: MPU: Arch specific memory domain APIs
      x86: MMU: Memory domain implementation for x86
      x86: MMU: Configure page tables entries for memory domain in swap.
      kernel: Arch specific memory domain APIs added
      samples: MPU: updated the memory domain test for x86.
      x86: MMU: Kconfig option to enable the PAE tables.
      x86: MMU: Generation of PAE tables
      x86: MMU: Create PAE page structures and unions.
      x86: MMU: Enable boot time PAE page tables.
      qemu: x86: Enable the 'Execute Disable' capability of the PAE pages.
      x86: MMU: Set PAE page tables for QEMU as default.
      tests: protection: Enable the complete test suit for qemu_x86.
      x86: MMU: Set PAE page tables for QEMU as default.
      tests: benchmarking: cleanup of the benchmarking code.
      kernel: arch interface for memory domain
      ARM: MPU: Arch specific memory domain APIs
      x86: MMU: Memory domain implementation for x86
      x86: MMU: Configure page tables entries for memory domain in swap.
      kernel: Arch specific memory domain APIs added
      samples: MPU: updated the memory domain test for x86.
      kernel: init: mem_domain structure is initialized for dummy thread.
      dts: x86: RAM start address needs to be page aligned for arduino 101.

Alberto Escolar Piedras (1):
      kernel: Preprocessor Undef warning fix in kernel.h

Anas Nashif (129):
      misc: remove MAINTAINERS file
      scripts: move GRUB script to galileo
      sanitycheck: move all related files to sanity_chk
      scripts: move dts related scripts to scripts/dts/
      scripts: move footprint scripts to footprint/
      scripts: move checkpatch scripts to checkpatch/
      scripts: move kconfig related scripts to scripts/kconfig
      cleanup: Move #include directives
      cleanup: remove the whitespaces before the # character
      cleanup: remove commented #include
      kconfig: remove exta menu for x86 core options
      kconfig: remove unused config DEBUG_IRQS
      kconfig: generalised stack protection options
      kconfig: move interrupt options into arch menu
      kconfig: move fatal error handler to arch options
      boards: esp32: make board depend on SOC
      boards: xt-sim: make board depend on SIMULATOR_XTENSA
      boards: qemu_xtensa: add CONFIG_SIMULATOR_XTENS=y to defconfig
      cleanup: remove obsolete nano_work.h
      cleanup: remove lots of references to unified kernel
      doc: update release notes index with 1.9
      doc: update release notes with ARC details
      ci: remove obsolete COVERAGE variable
      ci: remove obsolete PLATFORM variable
      sanitycheck: rename arch_root -> board_root
      sanitycheck: save/load lists of filterd tests
      ci: avoid duplicates when running sanitycheck
      ci: remove installation of python sh module
      ci: use docker image v0.1
      ci: compliance script should use python3
      samples: add missing sample.yaml and fix build
      ci: fix --only-failed mode of sanitycheck
      build: remove leftover qemu target
      dfu: img_util: move flash defines to SoC
      qemu: cleanup qemu configurations
      release: Update version to 1.9.99 for pre-release of 1.10
      scripts: Update checkpatch to latest from the linux kernel
      arm: atmel: define soc family in correct Kconfig
      arch: riscv32: define soc family in correct Kconfig
      kconfig: cleanup file system kconfig
      subsys: fs: consolidate nffs kconfig options
      subsys: fs: consolidate elm FAT kconfig options
      tests: add fs tag to filesystem tests
      samples: net: use 'run' target in common Makefile.ipstack
      doc: reference github issues instead of jira
      usb: fix header by adding subsystem prefix
      usb: fix local includes and add usb namespace
      json: fix doxygen description
      usb: move headers to include/usb/class
      spi: fix including spi_ll_stm32.h
      i2c: fix include for i2c_bitbang in some drivers
      tests: nffs: fix include
      dfu: fix includes
      lib: json: move json.h to include/
      ci: support building on master commits
      doc: add ci build status of master
      checkpatch: define typedefsfile to deal with a few false positives
      sanitycheck: inifile -> yamlfile
      ztest: add missing includes
      sanitycheck: fix support for unit tests
      ci: compliance: decode output to utf8
      doc: fix location of grub script
      doc: run oldconfig on xtools config
      toolchains: fix xtools configurations
      tests: samples: fix yaml syntax
      boards: add supported features
      sanitycheck: add extra_configs for testing with multiple values
      tests: adc_api: use new testcase scheme and cleanup
      tests: adc_simple: use depends_on for testcase
      tests: aio: use depends on
      tests: errno: using new extra_configs
      tests: timer: remove obsolete CONFIG_NANO_TIMEOUTS
      tests: Bluetooth: simplify BT init test
      tests: nffs: cleanup configs
      doc: document extra_configs option for testcases
      sanitycheck: fix extra_configs with multiple values
      samples: echo_server: remove unrelated CONFIG_ARC_INIT
      samples: echo client/server: test more configurations
      ci: fix encoding of documentation warning file
      ci: do not treat message parts as xml
      ci: build pull requests on 4 minions
      ci: Use latest docker image with SDK 0.9.2
      cleanup: rename fiber/task -> thread
      samples: bluetooth: add nrf52_pca10040 to beacon sample
      tests: gen_inc_file: fix include syntax
      soc: ti_simplelink: rename header directory for registers
      linker: use quotes with OUTPUT_ARCH macro
      headers: fix global includes for various source files
      scripts: require python module wheel
      drivers: pinmux: PINMUX_CC2650 depends on GPIO
      boards: move pinmux driver to board/soc dir
      tests: minor cleanup for fp_sharing test
      tests: removed stray bitfield.c file
      tests: add testcase.yaml to multicore power
      samples: remove ieee802154 sample, we have echo server/client
      checkpatch: add NANO_ESF as a typedef to avoid spacing errors
      gitignore: add build directory to ignore list
      ci: support cmake in shippable
      CODEOWNERS: add cmake owners
      sanitycheck: adapt for cmake
      sampels: remove obsoleted static_lib sample
      doxygen: ignore misc/util.h
      doc: update with CMake instructions
      linker: use UTIL_LISTIFY macro for dealing with .a files
      kconfig: fix Qt header for building Qt based kconfig
      tests: use cmake to build object benchmarks
      ci: update shippable for new SDK
      doc: fix doxygen EXCLUDE
      cmake: fixed version handling
      doc: fixed version parsing for docs
      build: add top-level Makefile for docs
      ci: call 'make htmldocs' from root
      cmake: use zephyr_library_* for all boards
      ci: reduce number of minions to 4
      cmake: Support disjoint toolchain and SDK locations
      doc: redirect doc generation output using tee
      boards: em_starterkit: add EM11D and EM7D configurations
      arch: arm: fix EM7D makefile
      flash: fix arc flasher script
      flasher: remove obsolete KBUILD_VERBOSE
      doc: em_starterkit: adapt with new configurations
      flash: support flashing multiple configurations of a single board
      doc: make sure we use gdb from SDK
      doc: fix location of non APL code README
      doc: report which warnings/errors are new
      doc: fix reference to CTNG supported toolchains
      ci: move doc.warnings up to be evaluated
      drivers: crypto: add missing CMakeLists.txt file
      sample: crypto: also test mbedTLS config

Andrei Emeltchenko (42):
      net: icmpv4: Fix ICMPv4 checksum calculation
      net: icmpv4: Fix ICMPv4 packet size calculation
      net: l2: Correct debug message and avoid unneeded assignment
      net: arp: Exit early on zero gateway provided
      net: arp: Always report error for missing gateway
      usb: Correct length print modifier
      usb: Handle SET_INTERFACE request
      usb: Add Ethernet Control Mode (ECM) subclass definition
      usb: trivial: Clean up tabulation
      usb: cdc: Add Ethernet Networking Descriptor definitions
      usb: Update USB common definitions
      usb: Add Custom subclass definition
      usb: Add DEVICE_QUAL descriptor definitions
      usb: Add USB definitions for RNDIS Ethernet device
      usb: Add CDC Class specific request definitions
      usb: Allow to select configuration for composite devices
      usb: webusb: Move USB version definition to right place
      usb: Remove default Vendor and Product ID
      usb: Add missing tag to sanity check configuration
      boards: tinytile: Set original firmware Vendor and Product IDs
      usb: Add extra debug information
      usb: Add CDC ECM composite configuration
      usb: netusb: Add ethernet emulation device
      usb: netusb: Add composite device with ECM function
      usb: Add sanity_check configuration for netusb
      net: sample: Add USB Ethernet stick configuration
      usb: Use RFC 7042 Documentation values for MAC strings
      usb: dw: Fix debug log specifier for FIFO not empty
      usb: dw: Add sleep before FIFO flash
      quark_se: Enable GPIO needed for USB DW driver
      samples: echo_server: GPIO should be selected in the board configs
      usb: netusb: Select NET_L2_ETHERNET when choosing Device Networking
      samples: http_server: Add netusb configuration
      net: Add initial retransmission timeout config option
      net: tcp: Print retry count in retransmission attempts
      usb: netusb: Fix handling no data case
      usb: netusb: Allow to select Endpoint numbers
      net: Fix zperf TCP build
      net: samples: Add netusb configuration to zperf
      usb: Allow to select Endpoint addresses for CDC ACM
      usb: samples: Support build for 96b_carbon board
      cmake: Fixes quark_se_c1000_devboard flashing

Andrew Boie (178):
      arm_irq_vector_table: don't change optimization
      tests: gen_isr_table: set default BOARD properly
      tests: gen_isr_table: don't set compiler opt
      doc: add gperf to workstation setup packages
      shippable: use new build slave configuration
      sanitycheck: fix rw_sections whitespace
      kernel: introduce object validation mechanism
      tests: add object validation test case
      x86: cleanup _new_thread()
      init: initialize dummy thread stack info
      kernel: version: no need to store version in RAM
      k_thread_create(): allow K_FOREVER delay
      k_thread_abort(): assert if abort essential thread
      x86: add printk for protection faults
      kernel: fix K_THREAD_DEFINE wrt application memory
      gen_mmu.py: Ignore 0-sized regions
      x86: segmentation.h: fix C++ build error
      x86: arm: don't force stacks into kernel memory
      kernel: remove k_thread_spawn()
      zephyr: use k_thread_entry_t everywhere
      qemu_x86: enable HW stack protection properly
      x86: don't set FS/GS segment selectors
      kernel: declare interface for checking buffers
      x86: revise _x86_mmu_buffer_validate
      _thread_entry: don't use _current
      stack_sentinel: remove check in _new_thread
      kernel: reorganize CONFIG_USERSPACE
      kernel: specify arch functions for userspace
      kernel: add _k_syscall_entry stub
      kernel: add K_USER flag and _is_thread_user()
      userspace: add thread-level permission tracking
      kernel: add common functions for user mode
      x86: implement userspace APIs
      tests: schedule_api: add extra stack size
      qemu_xtensa: enable stack sentinel
      kernel: define arch interface for memory domains
      userspace: flesh out internal syscall interface
      kernel: allow up to 6 arguments for system calls
      gen_mmu.py: load directly
      tests: consolidate memory protection tests
      arm: fix __kernel
      tests: add CONFIG_APPLICATION_MEMORY test
      gen_syscall_header.py: script to generate macros
      syscalls: reorganize headers
      kernel: convert k_sem APIs to system calls
      syscall_handler.h: fix a typo
      syscalls: greatly simplify system call declaration
      gen_kobject_list.py: device driver support
      x86: fix _arch_syscall_invoke6()
      kernel: make 'static inline' implicit to __syscall
      syscalls: implicit cast for _SYSCALL_MEMORY
      syscalls: fix C++ issue
      Makefile: put tests/ under libs-y
      mem_domain: fix warning when assertions enabled
      kernel: abolish __syscall_inline
      kernel: expose API when userspace not enabled
      kernel: rename k_object_grant_access()
      kernel: add k_object_access_all_grant() API
      kernel: add syscalls for k_object_access APIs
      x86: fix stack zeroing when dropping to user mode
      kernel: convert alert APIs to system calls
      kernel: convert mutex APIs to system calls
      sensors: implement system calls
      kernel: implement some more system calls
      kernel: convert most thread APIs to system calls
      kernel: convert pipe APIs to system calls
      kernel: convert timer APIs to system calls
      kernel: convert stack APIs to system calls
      kernel: convert k_msgq APIs to system calls
      kernel: remove some kernel objects from tracking
      xtools: fix some build issues
      kernel: sem: fix k_sem_take return value
      kernel: provide more info on object perm checks
      x86: fix syscall optimization issue
      kernel: policy change for uninitailized objects
      syscalls: rename __ZEPHYR_KERNEL__
      misc: userspace support for printk()
      tests: obj_validation: only run if HW supported
      gen_kobject_list: fix on ARM targets
      kernel: USERSPACE implies HW_STACK_PROTECTION
      userspace: move _k_object_validate() definition
      syscalls: add _SYSCALL_VERIFY_MSG()
      syscall_handler: introduce new macros
      kernel: system call handler cleanup
      syscall_handler: handle multiplication overflow
      kernel: userspace.c code cleanup
      tests: obj_validation: cleanup
      kernel: greatly simplify syscall handlers
      k_stack_init: num_entries should be unsigned
      kernel: restrict user threads to worsen priority
      kernel: allow system call with 64-bit return val
      kernel: add k_uptime_get() as a system call
      kernel: add K_INHERIT_PERMS flag
      ztest: add user thread support
      printk: only do buffering in user mode
      sensors: fix build error if userspace enabled
      x86: disable the MMU on 'reg' and 'min' footprint
      qemu_x86: enable userspace and app memory
      philosophers: run with threads in user mode
      Kconfig: CONFIG_USERSPACE is experimental
      kernel: add k_object_access_revoke() system call
      sanitycheck: add last_sanity.xml to gitignore
      userspace: use unsigned types for k_object fields
      x86: fix stack overflow in double fault handler
      userspace: add _k_object_uninit()
      userspace: de-initialize aborted threads
      userspace: don't adjust perms on object init
      userspace: allow thread IDs to be re-used
      userspace: restrict k_object_access_all_grant()
      userspace: simplify thread_id checks
      gen_syscall_header: use compiler barrier
      userspace handlers: finer control of init state
      userspace: treat thread stacks as kernel objects
      kernel: implement k_thread_create() as a syscall
      x86: fix crash in _x86_mmu_get_flags
      kernel: fix k_thread_stack_t definition
      userspace: add K_THREAD_ACCCESS_GRANT()
      kernel: add k_thread_access_grant()
      x86: fix _arch_syscall_invoke6
      tests: obj_validation: add to userspace tests
      tests: mutex: run in user mode
      tests: alert_api: run in user mode
      tests: semaphore: run some threads in user mode
      tests: msgq: run in user mode when possible
      tests: stack_api: run in user mode when possible
      tests: custom_data: run in user mode
      tests: lifecycle_api: run in user mode
      tests: thread_init: run in user mode
      x86: add qemu_x86_nommu board target
      x86: set default CI targets
      Revert ""samples: MPU: updated the memory domain test for x86.""
      Revert ""kernel: Arch specific memory domain APIs added""
      Revert ""x86: MMU: Configure page tables entries for memory domain in swap.""
      Revert ""x86: MMU: Memory domain implementation for x86""
      Revert ""ARM: MPU: Arch specific memory domain APIs""
      Revert ""kernel: arch interface for memory domain""
      Revert ""x86: MMU: Set PAE page tables...""
      x86: fix CONFIG_DEBUG_INFO build error
      sanitycheck: tone down verbose output
      sw_isr_table.h: fix includes
      sensors: move userspace handlers location
      drivers: i2c: add system call handlers
      drivers: adc: add system call handlers
      drivers: pwm: add system call handlers
      drivers: aio_comparator: add system calls
      drivers: counter: add syscall handlers
      drivers: flash: add system calls
      drivers: ipm: add system calls
      drivers: rtc: add system calls
      drivers: pinmux: add system call handlers
      drivers: gpio: add system call handlers
      drivers: random: add random_get_entropy sys call
      drivers: spi: add system call handlers
      tests: schedule_api: slightly increase stack size
      drivers: uart: add system call handlers
      userspace: remove some driver object types
      drivers: fix handler filenames
      arm_core_mpu_dev.h: include proper headers
      x86: arch.h: remove reverse dependency
      x86: apic: don't include headers we don't need
      nios2: asm_inline_gcc: fix includes
      kernel.h: move includes to the top
      sys_io.h: don't pull in kernel.h
      userspace: assign thread IDs at build time
      docs: initial user mode documentation
      gen_gdt: add debug statements and simplify logic
      gen_mmu_x86.py: decrease verbosity
      x86: de-couple user mode and HW stack protection
      doc: move memory domain docs under user mode
      mem_domain: inherit from parent thread
      mem_domain_apis_test: fix sample.yaml
      doc: usermode: iterative refinements
      mempool: add k_calloc()
      _setup_new_thread: fix crash on ARM
      stack_unused_space_get: account for sentinel
      mempool: add assertion for calloc bounds overflow
      tests: mheap_api_concept: test k_calloc()
      doc: expand system call documentation

Andrzej Kaczmarek (5):
      ext: nffs: Pull in Apache Mynewt NFFS implementation
      dts: nrf5x: Setup partitions for NFFS
      fs: nffs: Add NFFS filesystem support
      fs: shell: Extract common path handling code to helper
      fs: shell: Add more shell functions

Andrzej Puzdrowski (15):
      dts: nrf: Add flash controller and alignment description for nRF52840
      DFU: add module for interact with mcuboot
      DFU: add module for store the image
      tests: subsys: Add tests for new DFU modules
      Drivers: flash: New API to obtain the flash layout
      Drivers: flash: nrf5: Implement flash layout APIs
      samples: drivers: soc_flash_nrf5: Get flash page layout sample
      dts: nrf: Add flash controller and alignment description for nRF52832
      dts: nrf: Add flash controller and alignment description for nRF51822
      drivers: flash: Add API for retrieving a supported write-block-size
      drivers: flash: Add write-block-size values for SoCs
      sample: drivers: soc_flash_nrf5: Test of write-block-size get API
      dts: arm: nrf52840_pca10056: Increase mcuboot partition size
      dts: arm: nrf52_pca10040: Increase mcuboot partition size
      tests: subsys: dfu: mcuboot: fix return value not handling issue

Andy Gross (2):
      doc: Add security issue tracking information
      doc: Update security vulnerabilities email address

Andy Ross (8):
      esp32: More JTAG docs
      usb_dw_dc: Fix locking correctness
      Revert ""cdc_acm : Restrict writing more than 4 bytes into TX USB Endpoint.""
      usb_dc_dw: Correctly assign endpoint FIFOs
      usb_dc_dw: Correctness: use bytewise I/O in FIFO fill
      usb_dw_dc: Cleanup: write DIEPCTL register just once
      tests/kernel/pipe: fix uninitialized semaphore
      kernel/mem_pool: Correct n_levels computation for small blocks

Arthur SFEZ (2):
      boards: add openocd support for nucleo_l476rg and stm32l496g_disco
      doc: fix grammar/punctuation in stm32l476g_disco/nucleo_l476rg

Aska Wu (19):
      scripts/dts/extract_dts_includes.py: Fix tab calculation
      net: pkt: Add net_pkt_get_src_addr()
      net: context: Bind default address for UDP
      net: sockets: Implement sendto() and recvfrom()
      tests: sockets: Add tests of sendto() and recvfrom()
      net: sntp: Implement SNTP client library
      net: sample: Add sntp client sample
      net: sockets: Fix the error zsock_send() failed on the datagram socket
      net: udp: Remove subsys/net/ip/udp.h
      net: pkt: Fix net_pkt_get_src_addr()
      net: context: Fix find_available_port()
      tests: sockets: Make udp test cases self-contained
      tests: sockets: Add TCP test cases
      net: pkt: Add net_pkt_get_dst_addr()
      net: context: Replace net pkt parsing by helper functions
      net: tests: Add tests for net pkt address parsing
      net: socket: Handle the value-result argument
      tests: sockets: Check the value-result argument
      net: sockets: Fix net pkt leak

Bobby Noelte (5):
      arch: arm: core: fix vector table relocate write to flash
      boards: nucleo_f030r8: reduce kernel memory usage
      arch: arm: soc: provide support for stm32f091
      drivers: serial: provide support for stm32f091
      boards: arm: add support for NUCLEO-F091RC

Carles Cufi (32):
      Bluetooth: controller: Issue Data Buffer Overflow event
      samples: bluetooth: hci: Fix TX memory leak
      Bluetooth: controller: Fix handling of Read Static Addrs cmd
      Bluetooth: controller: Implement Write BD_ADDR VS cmd
      Bluetooth: controller: Implement Read Build Info cmd
      Bluetooth: controller: Add PA/LNA GPIO Kconfig option
      Bluetooth: controller: Disable PA/LNA for nRF51x
      Bluetooth: controller: Common config for VS extensions
      doc: getting_started: Clarify MSYS2 instructions
      Bluetooth: controller: Fix Controller to Host flow control leak
      Bluetooth: controller: Fix flow control packet drop
      doc: getting_started: Fix layout issue with code block
      doc: 1.9.x release notes
      arch: arm: kinetis: Remove duplicate CLOCK_CONTROL config option
      doc: getting_started: Windows MSYS2 with CMake
      doc: cmake: Update macOS build instruction
      doc: cmake: Update the Linux CMake instructions
      doc: cmake: Unify getting started guides
      doc: ext: Fix application extension CMake params
      doc: getting_started: Convert to using app extension
      doc: ext: Extend zephyr-app-commands with new args
      doc: ext: Add compact option to zephyr-app-commands
      doc: ext: Add a run goal to the zephyr-app-commands
      doc: Convert bits and pieces to CMake
      samples: mmu: Convert doc to CMake
      samples: misc: Convert doc to CMake
      samples: basic: Convert doc to CMake
      samples: boards: Convert doc to CMake
      samples: drivers: Convert doc to CMake
      samples: sensor: Convert doc to CMake
      samples: subsys: Convert doc to CMake
      samples: grove: Convert doc to CMake.

Christian Taedcke (6):
      ext: gecko: Add Silabs Gecko SDK for EFM32WG SoCs
      ext: Integrate Silabs Gecko SDK into Zephyr
      arm: exx32: Add Silabs EFM32WG soc files
      drivers: gpio_gecko: Add gpio driver for Silabs EXX32 MCUs
      drivers: serial: Add uart driver for Silabs EXX32 MCUs
      boards: arm: Add support for Silabs EFM32WG-STK3800

Christoph Sax (2):
      doc: fix typos in a few docs
      doc: fix link to DCO in contribution guidelines

Chunlin Han (5):
      arch: arm: add initial support for CONFIG_USERSPACE
      kernel: add memory domain APIs
      sample: demonstrate the usage of memory domain APIs
      arch: arm: add new memory partition attributes
      samples: fix mem_domain_apis_test doesn't be built during sanitycheck

Daniel Wagenknecht (3):
      i2c: fix issue of stm32-i2c-v2 (F0/F3/F7) driver hanging in endless loop
      doc: boards: stm32f3_disco: group default peripheral mapping
      doc: boards: stm32f3_disco: update Documentation to match pinmux.c

David B. Kinder (35):
      doc: add 1.9.0 docs link to index page
      doc: exclude spi_legacy.h from API docs
      doc: improve spi.h doxygen comments layout
      doc: improve API docs with sections
      doc: tweak API doc CSS for RTD theme
      doc: fix link title in linux installation guide
      scripts: allow ""title"" in commit titles
      doc: update to use macOS throughout docs
      doc: fix misspellings and hyphen use
      doc: filter-known-issues.py and empty files
      doc: fix misspelling in kernel.h API doc
      doc: move docgen filter out of shippable script
      doc: add contributing non-Apache2.0 docs
      doc: update doc generation info
      doc: add sphinx/breathe conf to eliminate warnings
      doc: more attribute ids to eliminate warnings
      doc: remove obsolete v1 changes/porting docs
      doc: replace UTF-8 chars
      doc: fix doc misspellings
      doc: spelling and clarity edits to sanitycheck doc
      doc: Fix misspellings in header/doxygen comments
      doc: update linux installation guide for 0.9.2 SDK
      doc: fix doxygen handling of  __attribute__(x)
      doc: eliminate many ""expected"" doc gen warnings
      doc: update links to new zephyrproject.org site
      doc: fix Kconfig misspellings
      doc: fix misspellings in doxygen API comments
      doc: fix misspellings in porting/arch.rst
      doc: fix incorrect file reference in API doc
      doc: fix misspelling in docs
      doc: cleanup .known-issues filters
      doc: fix doxygen defgroup title error
      doc: warnings from doxygen not being reported
      doc: fix misspellings in boards and samples docs
      doc: add starter for 1.10 release notes

David Brown (1):
      arm: Add partition table to hexiwear

David Leach (6):
      doc: Adding ccache to Linux environment setup.
      cmake: Fix build of entropy driver for MCUX TRNG
      subsys/random: Add _ASSERT() test on returned device_get_binding
      drivers/ieee802154_kw41z: Stabilize the KW41Z IEEE802.15.4 driver
      drivers/ieee802154_kw41z: Modified RX handling of filter failures
      drivers/ieee802154_kw41z: Reduce debug logging due to false positives

Ding Tao (2):
      net: lib: http: Fix invalid pointer body_start
      CMake: Fix wrong file name of entropy_stm32.c

Erwan Gouriou (22):
      pinmux: stm32: add SPI3 pin definitions for stm32l4
      disco_l475_iot1: Enable bt chip
      stm32f3_disco: Switch USART1(Console) to PC4/PC5
      dts: stm32f4-pinctrl remove wrong pinmux configurations
      arch: arm: stm32: factorize stm32f417xy socs defconfig files
      ext: hal: stm32cube: Update README with former fixups
      ext: stm32cube: update stm32f1xx cube version
      ext: stm32cube: update stm32f3xx cube version
      ext: stm32cube: update stm32f4xx cube version
      ext: stm32cube: update stm32f7xx cube version
      ext: stm32cube: update stm32l4xx cube version
      stm32cube: Add impacted files in README Patch List
      dts: stm32: fix dependency between stm32f405 and stm32f407
      driver: serial: Move STM32 UART driver to LL API
      stm32cube: clean kbuild after removing usage of HAL in serial driver
      boards: update STM32 disco boards name yaml property
      sensors: lis3mdl: provide name to Kconfig choice
      sensors: hts221: provide name to Kconfig choice
      board: disco_l475_iot1: Provide sensor configuration settings
      dts: add i2c2 to disco_l475_iot1
      board: rename doc file for nucleo_f030r8
      boards: add documentation for nucleo_f103rb

Gil Pitney (7):
      ext: simplelink: Update cc32xx SDK to version 1.50.00.06
      ext: simplelink: Fix file modes of SimpleLink SDK files
      ext: simplelink: dos2unix EOL conversion on wifi/porting files
      ext: simplelink: Add SimpleLink DPL porting layer to Zephyr
      ext: simplelink: Build files for the SimpleLink host driver and DPL.
      cmake: Fix drivers/serial/CMakeLists.txt to build uart_cc32xx.c
      cmake: Fix ext/hal/ti/simplelink/CMakeLists.txt

Grzegorz Kolodziejczyk (3):
      tests: nffs_fs_api: Add ported NFFS test suite
      tests: nffs_fs_api: Add performance test for nffs
      Bluetooth: Mesh: Add read callback for ccc in provisioning service

Gustavo Lima Chaves (6):
      build: Only have MMU_BOOT_REGION decl. for HPET if the latter is on
      build: make kernel entry symbol a config option
      loapic_intr: factor (out) APIC accesses in static functions
      x86: add new board to accomodate Jailhouse port
      x86: Jailhouse port, tested for UART (# 0, polling) and LOAPIC timer
      jailhouse: add support for x2APIC mode for all LOAPIC accesses

Harry Jiang (1):
      samples: environmental_sensing: fix the data type for read_u32()

Inaky Perez-Gonzalez (4):
      boot: move boot banner and delay before SYS_INIT_LEVEL_APPLICATION
      scrips/merge_config.sh: fix corner case \n-less last line
      kconfig: sort fragment inclusion
      syscalls: REVERTME: clean up warnings when building unit tests

Jan Kiszka (3):
      x86: MMU: Fix PAE page directory permissions
      x86: MMU: Remove dead code from gen_mmu.py
      x86: MMU: Rename gen_mmu script

Johan Hedberg (189):
      Bluetooth: SMP: Fix responding to Pairing Failed PDUs
      samples: microbit/pong: Fix incorrect placement of parenthesis
      Bluetooth: Mesh: Fix string signedness issue
      Bluetooth: Mesh: Fix SDU length check
      tests: bluetooth/at: Fix string signedness issues
      Bluetooth: Mesh: Drop invalid destination addresses
      Bluetooth: Mesh: Fix copy-paste mistake when assigning to cfg->frnd
      Bluetooth: Mesh: Fix encoding health status when app has no callback
      Bluetooth: Mesh: Set timer for periodic publish before publishing
      Bluetooth: Mesh: Always set company ID in health status message
      Bluetooth: Mesh: Send ack for every message with matching FCS
      Bluetooth: Mesh: Allow TTL <= 1 for the local net interface
      Bluetooth: Mesh: Remove local network interface Kconfig option
      Bluetooth: Mesh: Fix Health Period Set OpCode
      Bluetooth: Mesh: Fix encoding fault count to Health Current Status
      Bluetooth: Mesh: Fix spelling of ""heartbeat""
      Bluetooth: Mesh: Fix zeroing heartbeat state
      Bluetooth: Mesh: Fix resetting heartbeat subscription expiry properly
      Bluetooth: Mesh: Fix Set LPNTimeout message handling
      Bluetooth: Mesh: Fix setting health period divider
      Bluetooth: Mesh: Don't send health status messages if a test fails
      Bluetooth: Mesh: Fix dropping valid proxy configration messages
      Bluetooth: Add command opcode to warning about unusual pool id
      Bluetooth: Clean up address-to-string usage & implementation
      Bluetooth: Add support for decoding new address types
      Bluetooth: Add helper to iterate all key objects
      Bluetooth: Mesh: Fix revoking app keys
      Bluetooth: Mesh: Fix missing initialization of bt_mesh.local_queue
      Bluetooth: Fix reporting packets for disconnected connections
      Bluetooth: Fix freeing up conn->tx_notify upon disconnect
      Bluetooth: Mesh: Fix potential access to uninitialized variable
      Bluetooth: Mesh: Fix mod sub status parameters upon failure
      Bluetooth: Mesh: Fix missing feature bits
      Bluetooth: Add basic host-side support for HCI vendor extensions
      Bluetooth: Fix memory leak of command response buffer
      samples: mesh_demo: Use second button to change target address
      Bluetooth: Mesh: Update TODO with current status
      samples: mesh_demo: Enable relay by default for the micro:bit
      Bluetooth: Mesh: Improve Network Message Cache behavior
      net: buf: Add sys_snode_t member for convenience
      net: buf: Add net_buf_id() API
      Bluetooth: Add option to use heuristics for VS HCI detection
      Bluetooth: Mesh: Keep received buffer intact until transport layer
      Bluetooth: Mesh: Take advantage of BT_MESH_NET_HDR_LEN define
      Bluetooth: Mesh: Fix TX segment context lookups
      Bluetooth: Mesh: Add bt_mesh_net_flags() helper function
      Bluetooth: Mesh: Export some transport layer helpers
      Bluetooth: Mesh: Cfg: Only update friend state if supported
      Bluetooth: Mesh: Remove redundant assignment
      Bluetooth: Mesh: Export bt_mesh_friend_cred_get() for Friend usage
      Bluetooth: Mesh: Return change information from bt_mesh_iv_update()
      Bluetooth: Mesh: Fix and clean up IV Update procedure
      Bluetooth: Mesh: Extend advertising API with helpers for Friend support
      Bluetooth: Mesh: Fix ignoring all prohibited sub_dst in HB Sub Set
      Bluetooth: Mesh: Fix HB Pub Count Log calculation routine
      Bluetooth: Mesh: Fix sending heartbeat only when relay state changes
      Bluetooth: Mesh: Fix clearing HB state when disabling HB sub
      Bluetooth: Mesh: Fix HB Sub Status when disabling subscription
      Bluetooth: Simplify and clean up LE scan handling
      Bluetooth: Add missing HCI defines for LL privacy
      Bluetooth: Add support for Link Layer Privacy
      Bluetooth: Defer RL update if there's an ongoing connection
      net: buf: Add slist helpers
      Revert ""tests: mesh: Convert legacy test to use ztest""
      Bluetooth: Kconfig: Introduce new BT_SCAN_WITH_IDENTITY option
      Bluetooth: Mesh: Add complete Friend support
      samples: bluetooth/mesh: Add Friend support
      Bluetooth: Mesh: Fix not including RSSI into network RX context
      Bluetooth: Mesh: Cfg: Implement Low Power Node PollTimeout Get fully
      Bluetooth: Mesh: Fix transport layer heartbeat subscription matching
      Bluetooth: Mesh: Fix message replay protection
      Bluetooth: Mesh: Improve acknowledgement timer calculation
      Bluetooth: Mesh: Fix provisioning with Key Refresh flag set
      Bluetooth: Mesh: Improve debug logs for provisioning
      Bluetooth: Mesh: Fix retries when establishing Friendship as LPN
      Bluetooth: Mesh: Fix ignoring invalid Transport OpCode as LPN
      Bluetooth: Mesh: Fix friendship credential usage for segmented messages
      Bluetooth: Mesh: Remove unnecessary per-buffer segment context
      Bluetooth: Mesh: Simplify & fix net credentials selection
      Bluetooth: Mesh: Fix network decryption in case of multiple LPNs
      tests: bluetooth/mesh: Enable beacon by default
      Bluetooth: samples: Remove references to Kbuild-style building
      Bluetooth: Fix deadlock-risky HCI command buffer allocation
      Bluetooth: Mesh: Avoid using 64-bit storage & math for beacons
      Bluetooth: Mesh: Fix net_find_and_decrypt() function
      Bluetooth: Mesh: Fix Mesh feature description in Kconfig
      Bluetooth: Mesh: Fix typo when iterating GATT clients
      Bluetooth: Mesh: Fix ignoring prohibited ReceiveWindow value
      Bluetooth: Mesh: Improve Low Power establishment procedure
      Bluetooth: tests/mesh: Remove manual LPN enabling
      Bluetooth: Mesh: Fix sending Friend Clear messages indefinitely
      Bluetooth: Mesh: Fix clearing friendship
      Bluetooth: Mesh: Use more accurate timing for LPN functions
      Bluetooth: Mesh: Allow passing adv transmit info in net_tx
      Bluetooth: Mesh: Introduce LPN-specific adv transmit properties
      Bluetooth: Mesh: Fix network credential selection
      Bluetooth: Mesh: Implement the Friend Clear procedure
      Bluetooth: Mesh: Use network transmit count and interval for Friend
      Bluetooth: Mesh: Kconfig: Set PTS-friendly Friendship values
      Bluetooth: Mesh: Implement handling of Friend Clear messages
      Bluetooth: Mesh: Kconfig: Use a saner default ReceiveDelay
      Bluetooth: tests/mesh: Update lpn.conf with saner defaults
      Bluetooth: doc: Update references to qemu usage
      Bluetooth: tests: Remove explicit setting of QEMU_EXTRA_FLAGS
      Bluetooth: tests: Update tester documentation for cmake
      Bluetooth: Fix clearing advertising & scanning parameters
      Bluetooth: Mesh: Provisioning: Fix OOB string output
      Bluetooth: Mesh: Provisioning: Fix coding style (too long line)
      Bluetooth: Mesh: Provisioning: Fix input OOB support
      Bluetooth: Mesh: Provisioning: Fix encoding of OOB values into link.auth
      Bluetooth: Mesh: Provisioning: Make static OOB value const
      Bluetooth: Mesh: Provisioning: Introduce link open/close callbacks
      Bluetooth: Mesh: Remove reference to non-existing Kconfig option
      Bluetooth: Mesh: Clarify API for empty model arrays
      Bluetooth: Mesh: Change local_queue from k_fifo to sys_slist_t
      Bluetooth: Mesh: Fix sending messages when not provisioned
      Bluetooth: Mesh: Export key packing helpers internally
      Bluetooth: Mesh: Take advantage of BT_MESH_TTL_MAX macro
      Bluetooth: Mesh: Fix missing tracking of segment callback
      Bluetooth: Mesh: Fix relaying packets
      Bluetooth: tests/shell: Rename Arduino 101 conf file for cmake
      Bluetooth: Mesh: shell: Add basic skeleton
      Bluetooth: Mesh: shell: Add LPN toggling command
      Bluetooth: Mesh: shell: Take advantage of link open/close callbacks
      Bluetooth: Mesh: shell: Add command for Node Identity
      Bluetooth: Mesh: Refactor public headers into dedicated subdirectory
      Bluetooth: Mesh: Make TRANSMIT_COUNT & TRANSMIT_INT macros public
      Bluetooth: Mesh: Add skeleton for Configuration Client Model
      Bluetooth: Mesh: Add primary address to provisioning complete callback
      Bluetooth: Mesh: Add support for sending Get Composition Data
      Bluetooth: Mesh: Add support for sending Beacon Get & Set
      Bluetooth: Mesh: Add support for Relay and 1-byte state Get/Set
      Bluetooth: Mesh: Add support for sending AppKeyAdd message
      Bluetooth: Mesh: Add support for sending Model App Bind message
      Bluetooth: Mesh: Add support for sending Model Subscription Add
      Bluetooth: Mesh: Add support for sending Heartbeat Subscription Set
      Bluetooth: Mesh: shell: Add support for getting composition data
      Bluetooth: Mesh: shell: Add ""dst"" & ""netidx"" commands
      Bluetooth: Mesh: shell: Add support for Beacon Get/Set
      Bluetooth: Mesh: shell: Add for relay and 1-byte state commands
      Bluetooth: Mesh: shell: Add app-key-add command
      Bluetooth: Mesh: shell: Add app-key-bind command
      Bluetooth: Mesh: shell: Add mod-sub-add command
      Bluetooth: Mesh: shell: Add hb-sub-set command
      Bluetooth: samples/mesh_demo: Convert to using Configuration Client API
      printk: Add padding support to string format specifiers
      shell: Include the command help when listing all commands
      shell: Add optional command description
      Bluetooth: Mesh: Use proper _t suffix for typedefs
      Bluetooth: Mesh: Add more flexible APIs for provisioning bearers
      Bluetooth: samples/mesh_demo: Add dummy provisioning
      Bluetooth: Mesh: Rename configuration server code from cfg to cfg_srv
      Bluetooth: Mesh: Rename health server code from health to health_srv
      Bluetooth: Mesh: Provide documentation for provisioning APIs
      Bluetooth: Mesh: shell: Group global variables in a dedicated struct
      Bluetooth: Mesh: Provisioning: Add NetKeyIndex to complete callback
      Bluetooth: Mesh: Fix calling complete callback for bt_mesh_provision()
      Bluetooth: Mesh: Add documentation for public provisioning APIs
      Bluetooth: Mesh: Add support for sending Heartbeat Publication Set
      Bluetooth: Mesh: shell: Add hb-pub-set command
      Bluetooth: samples/mesh_demo: Add heartbeat publication support
      Bluetooth: Mesh: shell: Add provision command for self-provisioning
      Bluetooth: Mesh: shell: Implicitly initialize Bluetooth support
      Bluetooth: Mesh: Add support for sending Heartbeat Publication Get
      Bluetooth: Mesh: shell: Convert hb-pub-set command to hb-pub
      Bluetooth: Mesh: Add support for sending Heartbeat Subscription Get
      Bluetooth: Mesh: shell: Convert hb-sub-set command to hb-sub
      Bluetooth: Mesh: Allow changing cfg client message timeout
      Bluetooth: Mesh: shell: Fix newline in incorrect place
      Bluetooth: Mesh: Fix documentation of bt_mesh_input_string()
      shell: Remove unnecessary initialization of err
      shell: Remove redundant checking for first parameter
      shell: Remove unnecessary first_string variable
      shell: Fix unnecessary passing by reference of argc
      shell: Remove redundant checking for argv[0]
      shell: Fix command lookup for non-default modules
      shell: Remove unnecessary function
      shell: Redesign internal command handling
      shell: Use struct shell_module instead of integer to refer to modules
      shell: Fix looking up help for the current module
      Bluetooth: Mesh: Fix enabling scanning after provisioning
      Bluetooth: Mesh: Use invalid CID instead of bool for non-vendor models
      Bluetooth: Mesh: Add support for sending Model Publication messages
      Bluetooth: Mesh: shell: Add mod-pub command
      Bluetooth: Mesh: Use dedicated struct for heartbeat publication
      Bluetooth: Mesh: Use dedicated struct for heartbeat subscription
      Bluetooth: Mesh: Use u8_t instead of bitfields for 8-bit wide values
      Bluetooth: Mesh: Friend: Fix setting pending_buf variable
      Bluetooth: Mesh: Make AppKey binding implicit for Model Publication

Johann Fischer (24):
      dts: nxp_k6x: fix interrupt number for pwm2
      samples: usb: set default log levels in mass sample to error
      ext: mcux: import mcux device headers for MKW22D5 and MKW24D5 SiP
      arch: nxp_kinetis: initial import KW2XD SiP
      boards: add USB-KW24D512 support
      include: usb: add usb_cdc.h header for CDC ACM/ECM devices
      include: usb: add usb_msc.h header for MSC devices
      include: usb: fix style and add standard descriptors to usb_common.h
      subsys: usb: add endpoint configuration for CDC ACM driver
      subsys: usb: add endpoint configuration for USB MSC
      subsys: usb: add common device descriptor
      subsys: cdc_acm: rework to use CDC header and common descriptor
      subsys: mass_storage: rework to use MSC header and common descriptor
      include: usb: remove mass_storage header
      subsys: usb: add composite device support
      subsys: cdc_acm: add composite device configuration
      subsys: mass_storage: add composite device configuration
      samples: cdc_acm: add composite configuration
      drivers: mcr20a: small improvements
      drivers: mcr20a: check AR bit and use appropriate TX sequence
      subsys: netusb: use usb_cdc.h header
      samples: webusb: rework usb descriptor
      include: usb: remove cdc_acm.h
      cmake: fix build of the entropy drivers

John Andersen (1):
      net: Added Ipv4 missing debugging

Jonas Pfaff (1):
      drivers: adc: Add SAM ADC driver

Jose F. Fernandez (1):
      boards: arm: Add support for STM32F411E-DISCO

Jukka Rissanen (108):
      net: shell: Fix TCP state printing
      net: tcp: Set the TCP context properly when accepting
      net: conn: Print received IPv4 or IPv6 data size
      net: Wrong networking defines used in the code
      net: app: Init static IPv6 address properly
      net: shell: Add ARP cache printing
      net: ethernet: Do not unref pending ARP request
      net: Introduce multicast group join/leave monitor
      drivers/eth/mcux: Catch IPv6 multicast group join/leave information
      tests: net: ipv6: Make sure test case compiles and runs
      net: Do not try to parse empty IP address string
      net: mdns: Add multicast DNS client support
      samples: net: dns: Add mDNS client support to DNS resolver sample
      net: ethernet: Fix the multicast IPv4 to MAC address mapping
      build: Add rules in Makefile.gen to generate a hex file
      tests: Add testing for embedding a hex file
      net: pkt: Allow cloning just the net_pkt without any data
      net: dns: Do not resolve IPv6 address if IPv6 is disabled
      net: ethernet: Set dest MAC address for IPv4 mcast
      net: rpl: Neighbor data corrupted when receiving DAO message
      net: nbr: Print network interface pointer when adding neighbor
      net: http: HTTP client was not honoring timeout parameter
      net: Allow user to tweak IPv4 TTL per packet
      net: pkt: Allow inserting NULL data
      net: shell: Do not print IPv4 information in some cases
      net: ip: Check IPv4 multicast address using big-endian
      net: context: Bind did not check IPv4 multicast address
      net: if: Add IPv4 multicast add, remove and lookup functions
      tests: net: Add IPv4 multicast address tests
      net: shell: Fix command outputs
      net: ipv6: Return neighbors in foreach function by interface order
      net: ipv6: Fix IPv6 address parameters when sending NA
      drivers: eth: mcux: Fix buffer overflow
      net: shell: Use correct network interface instead of default one
      doc: Fix regexp in .known-issues networking.conf file
      net: tcp: Use real MTU size for MSS for IPv6
      net: tcp: Do not unref caller allocated net_pkt
      samples: net: echo_client: Connect both IPv4 and IPv6 before sending
      samples: net: echo_client: Print the used protocol when sending
      net: shell: Add command to flush ARP cache
      net: Add hostname setting to Kconfig
      net: shell: Print hostname information
      net: mdns: Initial mDNS responder support
      sample: net: mdns: Add mDNS responder application
      net: dns: Fix dns_pack.h documentation of packing routines
      net: ipv4: Accept multicast packets for processing
      net: ethernet: Check multicast IPv4 MAC address
      samples: net: http_client: Disable OPTIONS method
      net: app: Bind to correct address family
      net: app: Close context even if there is no connection
      tests: net: app: Simple testcases for net-app testing
      net: 6lo: Drop pkt if it is too short
      net: app: Add support for multiple listening connections
      net: app: Close a specific network context
      net: app: Close TLS connection properly
      net: app: Print more info which interface we are using for pkt
      net: app: Select proper net_ctx when sending msg
      net: app: Add more debugging when selecting net_ctx
      net: app: Print more info for TLS MAC verification errors
      net: app: Print info if address family is not set properly
      net: shell: Add multi connection net-app monitoring support
      net: shell: Print system workqueue information
      net: app: Fix compilation if TCP is not enabled
      samples: net: ieee802154: Update config to sane values
      net: ieee802154: Add more information when hexdumping the pkt
      net: Clarify UDP and TCP header getter and setter documentation
      net: ieee802154: Check reassembly return value properly
      net: ipv6: Remove invalid assert when receiving NS
      tests: net: coap: Use proper array for payload
      net: app: Fix compilation error if debugging is enabled
      samples: net: echo-client: Fix DTLS compilation
      samples: net: echo-client: Fix compile warning
      net: app: Calculate TLS application data pointer correctly
      drivers: ieee802154: uart: Do not send FCS bytes to peer
      net: mdns: Check net_pkt before accessing it
      net: http: Check that we could install recv_cb in accept
      net: app: Check that we could install recv_cb after connected
      net: context: Make sure we honor timeout when waiting data
      net: app: client: Allow net_context re-connect
      net: app: Clarify the debug print in TX and RX
      net: app: TLS handshake must be done before sending data
      net: app: TLS client handling issue when server closes connection
      net: app: Check if underlying net_context is freed
      net: app: Allow TLS thread to run to handle the received data
      samples: net: coaps_server: Fix coap packet parsing
      net: app: server: Allow IPv4 connections if IPv6 is enabled
      samples: net: echo-client: Fix compile warning
      net: http: Create HTTP library that uses net-app
      net: http: Deprecate old HTTP library
      samples: net: http: Remove deprecated HTTP client/server samples
      samples: net: HTTP server sample using net-app
      samples: net: HTTP client sample using net-app
      net: https: mbedtls buffer length needs to be bigger for https
      net: tcp: Do not run expire function in ISR context
      net: pkt: Remove unnecessary error print in adjust_offset
      samples: net: rpl: Fix compile error in rpl-node application
      samples: net: rpl: RPL node application was missing sample.yaml
      cmake: Set proper QEMU options for networking applications
      samples: net: Remove QEMU_NET_STACK setting from CMakeLists.txt
      samples: net: Update compilation instructions for cmake
      net: shell: Ping command needs target host set
      net: http: Add error status string to HTTP server error
      samples: net: http: Do not overrun url array
      samples: net: http: Possible null memory access in client & server
      net: context: Check if TCP header is found
      net: Let loopback driver handle lo if it is enabled
      drivers: net: loopback: Simulate real hw device
      net: loopback: Skip neighbor checks for local packets

KaSroka (3):
      net: app: Don't wait for DAD to finish when DAD is disabled
      net: Log drop reason when UDP or TCP checksum mismatch occurs
      drivers: 15.4: nrf5: Add timeout when waiting for tx to complete

Kamil Sroka (3):
      drivers: ieee802154: nrf5: Fix typo
      ext: hal: nordic: drivers: Remove unnecessary linker section
      drivers: 15.4: nrf5: Fix warning during compilation

Kumar Gala (33):
      pinmux: Move stm32 board pinmux files into board dirs
      sensor: bmi160: Update Kconfig dependancy for SPI
      scripts/dts/extract_dts_includes.py: allow multiple fixup files
      drivers: i2c: remove usage of bitfield access for cfg
      build: Makefile.gen: reorder make rules to deal with greedy rule match
      dts: Cleanup 16550 device tree support
      i2c: deprecate use of union dev_config
      tests: net: lib: dns_resolve: bump min memory to over 20k
      libc: minimal: Add typedefs for fast types
      ext: hal: ti: Add MSP432P4XX SDK
      ext: hal: ti: msp432p4xx: Tweak SDK to build with Zephyr
      i2c: stm32f3: Cleanup how we enable the specific I2C driver
      boards: arm: stm32_mini_a15: Mark board as deprecated
      scripts/dts/extract_dts_includes.py: Cleanup yaml file finding
      dts: yaml: rework yaml file layout
      dts: Limit search of device tree bindings to dts/bindings dir
      boards: stm32_mini_a15: fix how we deprecate the board
      bossa: add support for specifying the port
      samples: net: wpanusb: Fix build error due to missing USB device vid/pid
      serial: atmel_sam3: remove driver as it was deprecated
      arm: nxp_kinetis: cleanup soc.h - remove unused defines
      cmake: dts: rename dts fixup file related variables
      cmake: dts: Allow DTS_BOARD_FIXUP_FILE to be defined anywhere
      cmake: dts: Allow DTS_SOURCE to be defined anywhere
      dts: Move fixup files into board dirs
      dts: Move dts files into board dirs
      crypto: Update TinyCrypt to 0.2.8
      cmake: flash: Remove fake path to zephyr_flash_debug.py
      scripts: zephyr_flash_debug: Cleanup the script argument usage
      tests: protection: Fix building on ARC
      drivers/ieee802154_kw41z: Update kw41z to support event trace buffer
      drivers/ieee802154_kw41z: Fix interrupt priority
      boards: olimexino_stm32: Use standard openocd.board.cmake

Leandro Pereira (24):
      drivers: i2c: sbcon: Only show SBCon when building for ARM
      boards: esp32: Add note about fetching an older version of ESP-IDF
      docs: drivers: Fix syntax errors in ""Single Driver, Multiple Instances""
      drivers: gpio: esp32: Use PIN_FUNC_GPIO definition from ESP-IDF
      drivers: gpio: esp32: Configure GPIO drive strength
      esp32: Prefix ROM routines with `esp32_rom_`
      drivers: esp32: I2C driver implementation
      kernel: Provide only one _SYSCALL_HANDLER() macro
      scripts: Fix ESP_TOOL detection in zephyr_flash_debug.py
      kernel: Compare pointers before strings when getting device binding
      drivers: i2c: esp32: Fix crash when enabling second I2C device
      drivers: flash: stm32f4x: `rc` should be declared as `int`
      drivers: gpio: gecko: GPIO driver ignores pull-up/pull-down settings
      drivers: eth_enc28j60: Check return value of spi_transceive()
      tests: dns_resolve: Fix NULL pointer derefence if iface is NULL
      tests: icmpv6: Assert that net_pkt and net_buf could be allocated
      tests: mcuboot: Check results from flash write/read functions
      subsys: Add random subsystem
      drivers: Rename `random` to `entropy`
      subsys/random: sys_rand32_get() implementation that uses entropy API
      drivers: entropy: Only show STM32 entropy driver on if applicable
      subsys/random: Add Xoroshiro128+ PRNG
      kernel: Add option to ensure writable pages are not executable
      cmake: Support disjoint toolchain and SDK locations

Loic Poulain (19):
      usb: Add USB definitions for EEM device
      pinmux: stm32: stm32f4: Add USB FS pinmux
      usb: Add support for STM32 family USB driver
      CODEOWNERS: add entry for STM32 USB device controller driver
      pinmux: stm32: Fix coding-style errors
      usb: netusb: Remove eth_emu
      usb: netusb: Add netusb_recv method
      usb: netusb: Remove multi-function array
      usb: netusb: Abstract netusb function specific methods
      usb: netusb: Move endpoint specific config to function interface
      usb: netusb: Remove ecm_register_function
      usb: netusb: remove ecm struct
      usb: netusb: ecm: Make in_pkt static
      usb: netusb: Change 'conf' to 'configured'
      usb: stm32: Fix TX FIFO overwrite
      usb: stm32: Fix null dereference in ep_write
      usb: dc_dw: Improve TX perf and reliability
      usb: netusb: Fix CMakeLists
      usb: netusb: Use lower addresses for default endpoint config

Luiz Augusto von Dentz (14):
      Bluetooth: ipsp: Remov ipss.c
      Bluetooth: ipsp: Add CONFIG_NET_APP_BT_NODE=y to prj_dbg.conf
      Bluetooth: ipsp: Add note about the Linux 4.12 kernel release
      Bluetooth: ipsp: Add dedicated conf file for CONFIG_NET_L2_BT_ZEP1656
      net: nbr: Add NET_IPV6_NBR_STATE_STATIC
      Bluetooth: L2CAP: Fix sending MPS that cannot be fully used
      Bluetooth: L2CAP: Increase disconnect timeout to 2 seconds
      queue: k_queue_get: Fix NULL return
      poll: k_poll: Return -EINTR if not ready
      queue: k_queue_cancel_wait: Fix not interrupting other threads
      tests: fifo: Add prj_poll.conf
      net: Only enable QEMU_NET_STACK with CONFIG_NET_SLIP_TAP
      net: samples: Remove CONFIG_NET_L2_BT_ZEP1656
      net: http_client: Fix having IPv4 options in prj_bt.conf

Maciej Debski (10):
      ext: hal: stm32cube: HAL/LL static library for stm32f0xx v.1.9.
      ext: hal: stm32cube: provide build method for stm32f0 HAL/LL lib.
      arch: arm: soc: provide support for stm32f0.
      dts: arm: provide support for nucleo f030r8.
      boards: arm: provide support for nucleo f030r8.
      drivers: clock_control: provide support for stm32f0.
      drivers: gpio: provide support for stm32f0.
      drivers: interrupt_controller: provide support for stm32f0.
      drivers: pinmux: provide support for stm32f0 and nucleo f030r8 board.
      drivers: serial: provide support for stm32f0.

Manivannan Sadhasivam (6):
      dts: arm: 96b_carbon: add I2C_2 interface
      boards: arm: Add support for 96Boards Neonkey Board
      ext: hal: Add MSP432P4XX SDK Kconfig/Build support
      arch: arm: soc: ti_simplelink: Add MSP432P401R SoC
      drivers: serial: Add MSP-EXP432P401R UART
      boards: arm: Add support for TI MSP-EXP432P401R-LAUNCHXL

Mariusz Skamra (3):
      Bluetooth: tester: Fix include service attribute user data
      Bluetooth: btp: Add new event to indicate GATT attribute value change
      Bluetooth: tester: Add Attribute Value Changed event implementation

Marti Bolivar (97):
      flash: stm32: clean up L4/F4 internal API
      flash: stm32: stm32f4: add page layout support
      flash: stm32: stm32l4: add page layout support
      samples: drivers: add flash_shell
      dts: nxp_k6x: add flash write-block-size
      dts: stm32f4: add flash write-block-size
      dts: stm32l4: add flash write-block-size
      arm: soc: nxp: k6x: add flash driver for IMG_MANAGER
      arm: soc: stm32f4: add flash driver for IMG_MANAGER
      arm: soc: stm32l4: add flash driver for IMG_MANAGER
      drivers: flash: add flash_page_foreach()
      samples: flash_shell: update to keep up with flash driver changes
      dfu: replace FLASH_ALIGN with FLASH_WRITE_BLOCK_SIZE
      build: interpose zephyr_flash_debug.py in flash target
      scripts: zephyr_flash_debug: flash like dfuutil.sh
      scripts: zephyr_flash_debug: flash like pyocd.sh
      scripts: zephyr_flash_debug: flash like bossa-flash.sh
      scripts: zephyr_flash_debug: flash like esp32.sh
      scripts: zephyr_flash_debug: flash like nrf_flash.sh
      scripts: zephyr_flash_debug: flash like openocd.sh
      scripts: zephyr_flash_debug: flash like nios2.sh
      scripts: zephyr_flash_debug: flash like arc_debugger.sh
      fix ""scripts: zephyr_flash_debug: flash like openocd.sh""
      fix ""scripts: zephyr_flash_debug: flash like dfuutil.sh""
      boards: arm: disco_l475_iot1: add openocd support
      spi: stm32: fix clock prescaler calculation
      drivers: spi: fix SPI_QMSI_SS typo
      scripts: zephyr_flash_debug: fix PYOCD_DAPARG
      drivers: led_strip: add public API for addressable LED strips
      drivers: led_strip: add LPD880x driver
      drivers: led_strip: add WS2812-ish driver
      samples: drivers: add LPD8806 sample application
      samples: drivers: add WS2812 sample application
      scripts: zephyr_flash_debug: generalize to support debugging
      build: don't try debugserver if there's no DEBUG_SCRIPT
      build: interpose zephyr_flash_debug.py in debug/debugserver targets
      scripts: zephyr_flash_debug: add missing nrfjprog line
      scripts: zephyr_flash_debug: debug like arc_debugger.sh
      scripts: zephyr_flash_debug: teach runners a client/server abstraction
      scripts: zephyr_flash_debug: make ARC runner portable
      scripts: zephyr_flash_debug: fix ARC OPENOCD_EXTRA_INIT
      scripts: zephyr_flash_debug: refactor openocd runner
      scripts: zephyr_flash_debug: add debug support to openocd
      scripts: zephyr_flash_debug: refactor pyocd runner
      scripts: zephyr_flash_debug: add debug support to pyocd
      scripts: zephyr_flash_debug: refactor Nios II runner
      scripts: zephyr_flash_debug: fix Nios II comment
      scripts: zephyr_flash_debug: get bossac port from environment
      scripts: zephyr_flash_debug: improve debug logging
      scripts: zephyr_flash_debug: refactor into new ""runner"" package
      scripts: runner: add network port helper class
      scripts: runner: add debug support to nios.py
      scripts: runner: add jlink.py, with debug and debugserver support
      scripts: runner: add xtensa.py, with debug support
      scripts: runner: add qemu.py, a stand-in for QEMU
      build: remove flash/debug shell scripts
      docs: application: document ""make flash"" conventions
      scripts: runner: use ss on linux, not netstat
      scripts: runner: core: fix comment typo
      scripts: runner: core: fix stale comments
      doc: application: fix stale sentence about Kbuild
      doc: getting_started: add ref target for running hello world
      doc: application: CMake updates for overview and creation docs
      doc: application: touch up cmake overview
      doc: application: re-work CMakeLists.txt / configuration division
      doc: application: improve Kconfig setting documentation
      doc: application: improvements to ""Overriding Default Configuration""
      doc: application: trivial fixups to ""Rebuild an Application""
      doc: application: move build/run/debug docs after overview
      doc: application: trivial whitespace fix
      doc: application: fix up ""running an application""
      doc: application: fix up alternate CONF_FILE
      doc: application: debugging fixes
      doc: application: define ELF
      doc: application: fix QEMU capitalization
      doc: application: fix typo
      doc: application: provide ddd install instructions
      doc: application: clarify a pronoun antecedent
      doc: application: fix ""behavior"" british spelling
      doc: application: revise app/zephyr link documentation
      doc: application: clarify KCONFIG_ROOT section
      doc: application: add rest formatting to CMakeLists.txt
      doc: application: fixup for app versus zephyr config
      doc: application: merge configuration paragraphs
      doc: application: fix britishism regarding parentheses
      doc: add zephyr-app-commands directive
      boards: x86: convert make to cmake
      doc: extensions: cosmetic whitespace fixes
      doc: extensions: allow arbitrary goals
      doc: boards: efm32wg_stk3800: fix note
      doc: boards: olimex: fix ""resetting"" typos
      doc: boards: arm: convert make to cmake
      doc: boards: arc: convert make to cmake
      doc: boards: nios2: convert make to cmake
      doc: boards: xtensa: convert make to cmake
      CONTRIBUTING.rst: add note about idling on IRC
      drivers: flash: fix doxygen use of ""sector""

Massimiliano Cialdi (3):
      boards: arm: Add support for STM32F412G-DISCO
      doc: fix instruction in Adding Directories section
      stm32f412g_disco: fix sys clock according to actual resulting frequency

Maureen Helm (24):
      dts: Fix uart irq info for frdm_k64f and hexiwear_k64
      mcux: nxp_kinetis: Move HAS_LPUART config to ext
      mcux: nxp_kinetis: Move HAS_LPSCI config to ext
      mcux: nxp_kinetis: Move HAS_ADC16 config to ext
      mcux: nxp_kinetis: Move HAS_FTM config to ext
      mcux: nxp_kinetis: Move HAS_RNGA config to ext
      mcux: nxp_kinetis: Move HAS_TRNG config to ext
      tests: adc: Remove custom hexiwear_k64 configuration
      scripts: Add support for passing daparg argument to pyocd commands
      dts: Add Kinetis SIM clock bindings
      clock_control: Introduce mcux sim driver
      arm: Enable the mcux sim clock control driver on Kinetis SoCs
      serial: Refactor mcux uart shim driver to use clock control interface
      serial: Refactor mcux lpuart shim driver to use clock control interface
      serial: Refactor mcux lpsci shim driver to use clock control interface
      serial: Add another instance to the mcux lpuart driver
      ext: mcux: Add mcux 2.3.0 for mimxrt1051 and mimxrt1052
      clock_control: Introduce mcux ccm driver
      gpio: Introduce mcux igpio shim driver
      arm: Introduce NXP i.MX family, RT series, and mimxrt1052 SoC
      boards: arm: Add NXP mimxrt1050_evk
      scripts: jlink: Don't reset after load
      arm: Enable the ARM MPU on the NXP i.MX RT SoC and board
      mimxrt1050_evk: Fix setting of JLINK_DEVICE

Michael Hope (1):
      net: fix the build rules for drivers/net.

Michael Scott (87):
      net: lwm2m: select NET_APP_CLIENT automatically
      samples: lwm2m: remove extra .conf settings
      samples: lwm2m: remove unused NET_L2_BT settings
      net: lwm2m: introduce lwm2m context structure
      samples: lwm2m: initialize lwm2m_ctx prior to use
      net: lwm2m: move retransmit_work to lwm2m_ctx
      net: lwm2m: add ZoAP pendings/replies to lwm2m_ctx
      net: lwm2m: remove net_context parameter from lwm2m_udp_receive()
      net: lwm2m: add net_context parameters to functions
      net: lwm2m: move library internals to net_app APIs
      net: lwm2m: remove registration client ""registered"" field
      net: lwm2m: remove extra sockaddr values
      net: lwm2m: save lwm2m_ctx instead of net_app_ctx in observer
      ext: mbedtls: change MBEDTLS_DEBUG config from string to bool
      net: lib: net app: restore IP header length when DTLS is used.
      net: lwm2m: Fix up lwm2m.h for doc generation
      net: lwm2m: cleanup token / token length handling
      net: lwm2m: refactor engine to use lwm2m_message structure
      net: lwm2m: add timeout callbacks to registration client
      net: lwm2m: set range for client lifetime config
      samples: net: irc-bot: migrate to net_app API
      samples: net: irc-bot: migrate from NET_LOG to SYS_LOG
      samples: net: irc-bot: add support for CONFIG_NET_CONTEXT_NET_PKT_POOL
      samples: net: irc-bot: clean up prj.conf
      samples: net: irc-bot: fix cmd parsing across multiple buffers
      samples: net: irc-bot: declare banner text at the top
      samples: net: irc-bot: move initialite_hardware() code to main()
      samples: net: irc-bot: remove use of zirc and zirc_chan
      samples: net: irc-bot: establish a static global for nickname
      samples: net: irc-bot: handle private messages in some commands
      samples: net: irc-bot: fix help text buffer size
      net: app: fix MBEDTLS-related build break in net_app
      net: lib: http: split out URL parsing as a separate CONFIG
      net: lib: lwm2m: use stand-alone URL parser
      net: lwm2m: fix compile w/o CONFIG_LWM2M_FIRMWARE_UPDATE_PULL_SUPPORT
      net: lwm2m: RD client start message should be INFO not DEBUG
      net: lwm2m: change registraion update messages to INFO
      net: lwm2m: fix message release for separate reply
      net: lwm2m: split out lwm2m context initialization
      net: lwm2m: setup lwm2m ctx for firmware download
      net: lwm2m: fix packet leak in timeout work
      net: lwm2m: add full block-wise retries for firmware download
      net: lwm2m: ignore duplicate/older block transfers
      net: lwm2m: add RD client callbacks for app
      net: coap: fix coap packet length calculation
      net: lwm2m: cleanup TODOs in firmware obj.
      net: lwm2m: cleanup function parameter naming
      net: lwm2m: remove unused JSON parser types
      net: lwm2m: move non-public data out of shared JSON include
      net: lwm2m: move non-public data out of shared TLV include
      net: lwm2m: use isdigit in JSON formatter
      net: lwm2m: remove unused last_value_len from lwm2m_input_context
      net: lwm2m: move to using the new multi-packet CoAP API
      net: lwm2m: make release in lwm2m_release_message() optional
      net: lwm2m: fix error handling in handle_request()
      net: lwm2m: fix CREATED response code
      net: lwm2m: fix Leshan discover OP
      net: lwm2m: replace instances of s*printf with snprintk
      net: lwm2m: reduce LwM2M footprint via lower defaults in Kconfig
      samples: lwm2m: combine prj_*.conf files
      samples: lwm2m: reduce footprint of lwm2m conf
      net: lwm2m: add periodic service registration to engine
      net: lwm2m: register device periodic service with engine
      net: lwm2m: register the RD client with the engine periodic service
      net: coap: Fix error handling for coap option length
      net: lwm2m: remove auto select of COAP_EXTENDED_OPTIONS_LEN config
      net: lib: http: fix check for invalid body_start pointer
      net: lwm2m: share BUF_ALLOC_TIMEOUT setting w/ other lwm2m components
      net: lwm2m: add multi fragment support to LwM2M library
      samples: lwm2m: remove large buffer size requirement
      net: lwm2m: introduce getter/setter for OPAQUE data
      net: lwm2m: consolidate URI_LEN define in firmware pull source
      net: lwm2m: remove unused len var from lwm2m_engine_get()
      net: lwm2m: expose lwm2m_engine_get_resource() for lwm2m subsys
      net: lwm2m: fix OPAQUE handling in LwM2M engine
      net: lwm2m: remove predefined firmware buffer from firmware_pull
      net: lwm2m: fix all return values from resource callbacks
      net: lwm2m: propagate errors from post_write callbacks
      net: lwm2m: simplify oma_tlv get_bool()
      net: lwm2m: oma_tlv: fix typo in TLV length processing
      samples: net: lwm2m_client: update README
      net: http: dont add CRLF to protocol
      net: http: honor CONFIG_HTTP_CLIENT_NETWORK_TIMEOUT setting
      net: http: client: remove payload send_chunk logic
      net: lwm2m: refactor min / max measurement update code
      net: lwm2m: temp_sensor: fix min/max measurement values
      net: lwm2m: fix max measurement checks

Michał Kruszewski (6):
      spi: Allow updating TX and RX of spi context by multiple words.
      kconfig: adc: Extract platform specific configs to separate files.
      api: counter: Improve documentation of counter_set_alarm().
      samples: net: Fix wrong error logging information in echo client.
      samples: net: Add documentation to prj_qemu_cortex_m3.conf file.
      net: Improve documentation about accessing Internet from qemu.

Nirmala Devi (2):
      tests/object_footprint: fix path to Kconfig specification
      Uart: Added testcase support for drivers using only poll mode

Paul Sokolovsky (44):
      net: if: Lack of default interface is an error, not warning.
      net: arp: Log error if no gateway is set
      net: Enable logging in more modules if CONFIG_NET_LOG_GLOBAL defined
      drivers: eth: mcux: Fix error status logging
      net: sockets: Implement getaddrinfo()
      samples: net: sockets: Add HTTP GET example
      samples: sockets: Add a dumb HTTP server example
      scripts: gen_syscalls: Use explicit encoding when reading headers
      net: sockets: Simplify if logic in sendto(), fix warning
      samples: net: echo_client: Consistently enable net_app for all configs
      net: lib: app: If NET_LOG_GLOBAL is enabled, enable NET_DEBUG_APP
      net: l2: ieee802154: Automatically select CONFIG_NET_6LO
      arm: nxp: kw41z: Select IEEE802154_KW41Z driver for networking
      drivers: slip: Consistently log pkt/buf allocation failures
      net: shell: mem: Use better config define and terminology
      samples: net: sockets: Print incoming connection number
      drivers: slip: Rework logging to follow conventions
      kernel: queue: k_queue_poll: Fix slist access race condition
      sys: slist, dlist: Document APIs as not threadsafe
      sys: slist, dlist: Improve ""not thread safe"" docstrings
      samples: sockets: dumb_http_server: Use big payload by default
      net: pkt: net_pkt_tcp/udp_data: Better document caveats
      net: pkt: Use standard macros to define system pkt slabs/pools
      drivers: slip: Consolidate under drivers/net/
      drivers: net: loopback: Network loopback interface driver
      net: shell: stacks: Print config option needed for full info
      net: tcp: Avoid spurious seqno decrements
      tests: net: tcp: Update for clean up in seqno handling
      net: ieee802154_shell: get_pan_id: Print ID in hex too
      samples: echo_server: Clean up frdm_k64f config
      net: context: net_context_setup_pools: Elaborate docs
      Bluetooth: ipsp: Add detailed instructions
      net: sockets: Fix Coverity false positive
      net: pkt: net_frag_read: Typo fix in comment
      net: pkt: adjust_offset: Simplify and optimize code
      board: frdm_k64f, frdm_kw41z, frdm_kl25z: Define LED1
      net: tcp: Handle storage of TCP send MSS
      net: tcp: Add NET_TCP_HDR_LEN(hdr) macro for reuse
      net: tcp: Add support for TCP options parsing
      net: tcp: net_tcp_parse_opts: Convert MSS value to host byte order
      net: net_pkt_append: Take into account MTU when adding data to a packet
      net: sockets: sendto: Remove adhoc handling of max pkt payload size
      samples: net: sockets: Reinstate POSIX Makefiles.
      sanitycheck: Flush stdout in info()

Piotr Mienkowski (13):
      drivers: i2c: hide I2C_x_DEFAULT_CFG for DTS drivers
      drivers: sensor: clean up Kconfig files
      drivers: dma: remove deprecated API functions
      tests: tickless: Add support for Atmel SAM family
      dts: sam3x: fix incorrect usart2 IRQ number
      dts: Add Peripheral ID field to Atmel SAM drivers
      drivers: Add Atmel SAM family I2C (TWI) driver
      drivers: i2c: deprecate usage of i2c_atmel_sam3 driver
      drivers: gpio: deprecate GPIO_PIN_ENABLE, GPIO_PIN_DISABLE
      drivers: serial: fix CMakeLists for Atmel SoCs
      drivers: i2c: Refactor Atmel SAM (TWIHS) driver
      drivers: i2c: rename twihs_sam to i2c_sam_twihs
      drivers: i2c: Add DTS support for i2c_sam_twihs driver

Punit Vara (27):
      tests: ztest: add system logging header file
      tests: irq_offload: Use SYS_LOG_INF instead of TC_PRINT
      tests: xip: Remove unnecessary prints
      tests: init: use ztest APIs
      tests: bluetooth: Use ztest apis
      tests: mesh: Convert legacy test to use ztest
      driver: bmc150_magn: Use SYS_LOG_ERR instead of SYS_LOG_DBG for errors
      drivers: bmc150_magn: Initialise driver with DEVICE_AND_API_INIT
      tests: route: Convert legacy test to use ztest framework
      tests: context: Make legacy test to use ztest API
      tests: ztest: Add formatting in assert APIs
      tests: trickle: convert legacy test to ztest
      tests: 6lo: convert legacy test to ztest with cleanup
      tests: mem_pool: convert legacy test in ztest
      tests: rpl: convert legacy test in ztest
      tests: mslab: convert legacy test to ztest
      tests: bitfield: Convert legacy test case to ztest
      tests: static_idt: convert legacy test to ztest
      tests: fatal: convert legacy test to ztest
      kernel: sched.c: Fix datatype mismatch in comparision
      tests: timer_monotonic: Migrate legacy test to ztest
      tests: work_queue: Convert legacy test to ztest
      tests: context: convert legacy test to ztest
      tests: mutex: convert legacy test to ztest
      tests: pending: Make use of ztest framework
      tests: tickless: Make use of ztest framework
      tests: sleep: convert legacy test to ztest

Pushpal Sidhu (2):
      arch: stm32f4: Add CONFIG_GPIO_STM32_PORTD=y
      boards: stm32f4: cleanup gpio defines

Rajavardhan Gundi (2):
      i2c/i2c_dw: correct the bitfield for ic_tar and ic_sar
      i2c/i2c_dw: configure ic_tar based on ic_10bitaddr_master

Ramakrishna Pallala (11):
      kernel: Remove dead or commented code from k_mutex_lock()
      kernel: Fix comment section of semaphore object
      kernel: fix bit clearing logic in _k_thread_group_leave
      tests: kernel: timer: Fix TC_PRINT format specifiers
      ext: lib: crypto: tinycrypt: Fix Kconfig prompt message
      drivers: crypto: Fix TinyCrypt Kconfig dependencies
      ext: lib: crypto: mbedtls: Set default MBEDTLS_HEAP_SIZE to 512
      drivers: crypto: Fix mbedtls Kconfig dependencies
      drivers: crypto: Fix the scope of ataes132a crypto_driver_api functions
      lib: remove TinyCrypt Kconfig menu
      subsys: random: Fix semaphore initial count of xoroshiro128

Ravi kumar Veeramally (15):
      net: coap: Rename ZOAP library
      net: coap: Add multi fragment support to CoAP library
      net: tests: Update CoAP tests to use new API
      net: samples: Modify leds_demo to use new CoAP api's
      net: samples: Modify zoap_server to new CoAP api's
      net: samples: Modify zoap_client to new CoAP api's
      net: samples: Modify coaps_server to new CoAP api's
      net: samples: Modify coaps_client to new CoAP api's
      net: samples: Add leds demo app over RPL and CoAP
      net: Deprecate ZOAP library
      net: 6lo: Fix 6lo uncompression issue
      net: tests: Add more testcases to 6lo tests
      i2c: twihs_sam: fix mode config variable usage
      net: coap: Improve options parsing helper functions
      net: tests: Add more CoAP test cases

Ricardo Salveti (7):
      tests: kernel: threads: add specific test tags
      pwm: stm32: Add PWM 3 (TIM3)
      pinmux: stm32: stm32f4: Add PWM3 channels on PC 6, 7, 8 and 9
      pwm: stm32: Fix check for APB prescale
      net: net_pkt: clone pkt from the same slab
      net: lwm2m: firmware: add support for firmware pull over CoAP proxy
      net: increase retransmission timeout (RTO) config range

Robert Chou (26):
      net: lwm2m: reset obj_inst/res_inst data structure when delete
      net: lwm2m: fix obj/obj_inst/observer sys_slist_t corrupted when remove
      net: lwm2m: clean up observer when object/object instance is removed
      net: lwm2m: return 4.04 (not found) when obj/obj_inst/res not exist
      net: lwm2m: propogate errors to the caller when using TLV writer
      net: sample: correct coap-server ETSI TD_COAP_BLOCK_03/04 testcases
      net: samples: fix coap_client early unref packet issue
      net: samples: fix malformed payload when coap_client/server retransmit
      net: samples: fix early unref issue for coap_client/server
      net: lwm2m: add state machine for firmware pull update
      net: lwm2m: setup data_ptr/len for OPAQUE resource when none given
      net: lwm2m: add firmware push support
      net: lwm2m: response nicely when obj not found or OP not handled
      net: lwm2m: fix empty path being treated as 0/0/0 issue
      net: lwm2m: return 4.04 when URI is not composed by digits
      net: lwm2m: only method GET is allowed for .well-known/core
      net: lwm2m: increase rd client stack size when NET_LOG_GLOBAL=y
      net: coap: empty payload with payload marker is malformed
      net: coap: check null pointer before assign value
      net: lwm2m: handle format application/octet-stream w/ plain_text
      net: lwm2m: break the opaque write loop early when fail
      net: lwm2m: replace coap_next_block() w/ coap_update_from_block()
      net: lwm2m: check engine context before accessing it
      net: lwm2m: response to peer with correct error code when write fail
      net: samples: replace tag zoap with coap
      net: lwm2m: fix sending packet w/o token setup when error

Rouan van der Ende (1):
      Fix a typo on Nucleo F411RE doc page

Sahaj Sarup (1):
      samples: Basic Thread Demo

Savinay Dharmappa (8):
      tests: driver: adc: change the sampling delay
      dts: x86: Add device tree support for qemu_x86
      dts: x86: qemu_x86: Add device support for uart ns16550
      subsys: logging: event_logger: Fix CPU fault
      sample: subsys: logging: kernel_event_logger: Add sample application
      dts: arc: Add dts support for arc
      dts: quark_se_c1000_ss_devboard: Add dts support
      dts: x86: remove mem.h

Sebastian Bøe (37):
      doc: Add RISC-V to a list of SDK-supported ISA's
      cleanup: Use quote include instead of system include
      Introduce cmake-based rewrite of KBuild
      dts: Break all dependencies of DTS on ext
      cmake: ci: Add more minions
      kbuild: Removed KBuild
      cmake: Fixed subsys/net/lib/http
      cmake: Introduce a default VID and PID
      cmake: Fixed NODE_ADDR
      cmake: ext/hal/st/stm32cube: Fixed formatting and removed hal_uart
      cmake: Use Make for examples instead of Ninja
      cmake: Pass GDB env var to flasher script
      cmake: Use -serial bt-server when CONFIG_BT
      cmake: Fixed openocd
      cmake: Ported samples/net/rpl-node
      cmake: Fixed samples/net/rpl-node
      cmake: Fixed flashing of nrf52840_pca10056
      ci: Don't define the deprecated ENV var USE_CCACHE
      sanitycheck: Remove the --ccache option from sanitycheck
      doc: Remove all mentions of --ccache
      sanitycheck: Minor internal documentation fixes
      sanitycheck: Fixed documentation for --extra-args and extra_args
      flash: Pass env var OPENOCD_DEFAULT_PATH to flasher
      flash: Change type of FLASH_SCRIPT_ENV_VARS
      cmake: Fixed drivers/sensor/CMakeLists.txt
      drivers: sensor: Fixed include paths s/</""/
      cmake: Fail when zephyr_sources() is called on a directory
      Bluetooth: storage: Fix linking with subsys__fs
      samples: dump_http_server: Change where the .inc file is written
      cmake: Fix SDK-less builds
      cmake: Added missing zephyr_sources() calls for esp32 drivers
      cmake: s/CONFIG_I2C_STM32_V1x/CONFIG_I2C_STM32_V1/
      samples: external_lib: Build binaries in the build directory
      cmake: Refactored EXTRA_FLAGS code into a dedicated script
      unittest: Support EXTRA_*_FLAGS
      cmake: set IS_TEST in the hello_world sample
      cmake: set IS_TEST in the samples that were including Makefile.test

Steve Brown (1):
      Bluetooth: Mesh: heartbeat fixes for message count

Szymon Janc (2):
      Bluetooth: Mesh: Fail init on keys generation error
      Bluetooth: btp: Add initial commands for Mesh service

Thiago Macieira (2):
      libc: Make no-debug assert() conform to C requirements
      libc: Add support for static_assert

Thiago Silveira (3):
      arm: soc: nRF52: Add workaround for incorrect RESETREAS bits, errata 136
      clock_control: nrf5_power: Let the LF clock be configured at least once
      drivers: entropy: Add nRF5 entropy generator driver

Timo Teräs (3):
      arm: corex_m: add byte/half-word sized memory accessors
      serial/uart_ns16550: keep LCR settings when programming DLAB
      serial/uart_ns16500: poll THRE to determine when data can be written

Tomasz Bursztyka (45):
      net/ethernet/arp: Let ethernet L2 managing pkt's reference while sending
      net/mgmt/event: Commands must be > 0 so masking them works
      net/arp: Fixing a leak when there is no pending entries left
      drivers/spi: Use sync_status relevantly in DW driver
      drivers/ieee802154: Fix regression in uart pipe driver
      net/ieee802154: Fixing a typo in ieee15_4 shell module
      samples/net: Getting rid of common ieee802154 settings altogether.
      samples/net: Removing config support for arduino_101 with CC2520
      samples/net: Let's merge ieee802154 qemu and hw tests into one
      net/samples: Build cc2520 frdm's common code only when relevant
      net/ieee802154: Always set ACK flag to 0 on data broadcast
      net/mgmt: Make event notifiers able to pass info to listeners
      net/mgmt: Cleanup a bit Kconfig
      tests/net: Fixing parameters alignment in mgmt test
      tests/net: Add a test for net_mgmt_event_notify_with_info()
      drivers/spi/stm32_ll: Configure NSS behavior according to cs pointer
      drivers/bluetooth/spi: Do not initialize vendor attribute
      Revert ""spi/api: extend with vendor specific configs""
      drivers/spi: Run CS/GPIO logic only when relevant
      net/pkt: Add 802.15.4 lqi and rssi into net_pkt metadata structure
      net/ieee802154: Use lqi from net_pkt relevantly
      drivers/ieee802154: Set lqi/rssi to net_pkt, stop exposing get_lqi
      net/ieee802154: Remove get_lqi from radio API
      net/ieee802154: Add a way to retrieve hw capabilities from the devices
      drivers/ieee802154: Implement get_capabilities in existing drivers
      net/ieee802154: Add support for hw driven CSMA
      net/ieee802154: Add a filter function to radio API
      net/ieee802154: Apply hw filters when applicable
      drivers/ieee802154: Implement radio API's set_filter() relevantly
      net/ieee802154: Stop using old radio API's functions
      samples/wpan: Use set_filter() instead of former API function
      drivers/ieee802154: Stop exposing old radio API functions
      net/ieee802154: Removing now useless functions from radio API
      net/ieee802154: Expose a function to test for AR flag in net_pkt
      net/ieee802154: Add a hw capability for handling ACK request on TX
      net/utils: Make net_hexdump_frags being able to print ll reserve
      net/ieee802154: Use common net_hexdump_frags instead of local function
      ieee802154: Make packet display enablement via a Kconfig option
      net/6lo: Enable it by default if IEEE 802.15.4 is enabled
      samples/net: Reducing prj*.conf files by relevantly removing 6Lo option
      net/ieee802154: Isolate packet display debugging option
      net/ieee802154: Add a choice on which packet to print-out
      net/ieee802154: Make FC/Seq validation function public
      net/ieee802154: Properly check the sequence when handling ACK frames
      net/ieee802154: Shell handles extended address in EUI-64 format

Vikram Singh Shekhawat (1):
      tests: entropy: Add Entropy driver test case

Vinayak Kariappa Chettimada (32):
      Bluetooth: controller: Fix hang on directed adv timeout
      Bluetooth: controller: Fix conn param req procedure timeout
      Bluetooth: controller: Remove unreachable workaround code
      Bluetooth: controller: Use correct NRF_AAR enable define
      Bluetooth: controller: Fix NRF_CCM config for 2M PHY
      Bluetooth: controller: Add radio setup HAL interface
      Bluetooth: controller: Map debug pins to P3 pin head on nRF5x DK
      Bluetooth: controller: Minor refactor radio_tmr_start
      Bluetooth: controller: Internal document purpose of end capture
      Bluetooth: controller: Use single PPI channel for AA capture
      Bluetooth: controller: Move tIFS s/w switch PPI index up by one
      Bluetooth: controller: GPIO PA/LNA feature
      Bluetooth: controller: Fix HCI Reset hang
      Bluetooth: shell: Add controller DTM commands
      Bluetooth: controller: Fix slave from initiating conn upd ind
      Bluetooth: controller: Fix Conn Param Req response timeout
      Bluetooth: controller: Fix CPR procedure's Conn Upd initiation
      Bluetooth: controller: Fix PHY Update response state transition
      Bluetooth: controller: Fix NRF_AAR use
      Bluetooth: controller: Fix missing PHY update procedure reset
      Bluetooth: controller: Fix missing reset of FC feature
      Bluetooth: controller: Fix connection update supervision timeout
      Bluetooth: controller: Fix Coded PHY supervision timeout
      Bluetooth: controller: Fix tIFS calc for Coded PHY
      Bluetooth: controller: Fix PA/LNA for Coded PHY
      Bluetooth: controller: Add encrypted Coded PHY support
      Bluetooth: controller: Add Coded PHY packet tx time restrictions
      Bluetooth: controller: Remove assert on invalid LL id
      Bluetooth: controller: Fix Ctrl PDU Tx starvation assert
      Bluetooth: controller: Fix to enable Asym PHY on nRF52 Series
      Bluetooth: controller: Fix MIC error due to parallel Enc Proc
      Bluetooth: controller: Fix diff proc collision with enc proc

Vincent Veron (1):
      drivers: spi: add 16 bits word size support for stm32

Yannis Damigos (10):
      arch: soc: st_stm32: Remove unused enumeration from F4, F3 SoCs
      arch: stm32f4: Select USB_DC_STM32 driver if USB is enabled
      boards: 96b_carbon: Add USB OTG to the pinmux table
      ext: hal: stm32cube: Fix LSI_VALUE for F1, F3 families
      ext: stm32cube: Define USE_FULL_LL_DRIVER
      drivers: i2c_ll_stm32: STM32F0/3 set I2C clock source
      boards: stm32f3_disco: Add I2C support
      boards: disco_l475_iot1: Enable I2C_1 in default config
      drivers: i2c_ll_stm32: Use I2C API flags
      drivers: i2c_ll_stm32_v2: Use the correct flags in event ISR

Youvedeep Singh (8):
      tests: benchmark: Fixing some of missing KPIs stats for ARM based SOC
      tests: benchmark: Configure External timer to 32 bit mode for nrf SOCs
      kernel: boot_delay: change to busy wait instaed of wait
      gpio: Add support for SENSE configuration for nrf SOC GPIO.
      gpio: Add APIs for enabling/Disabling GPIOTE interrupts for nrf52 SOC.
      ARM: nrf52: Power Management for nrf52 series SOC
      samples: boards: nrf52: test demo for nrf52 power management
      timer: xtensa_sys_timer: Tickless Kernel Implementation for Xtensa

Zhang WenChao (2):
      board: Add PWM2 on stm32f4_disco
      sample: blink_led: Add support for stm32f4_disco

flavio (1):
      ext: hal: nordic: Add missing nordic header file needed by nrf_power.h

june li (2):
      net: tcp: Add the frag back to caller allocated net_pkt
      net: dhcpv4: Unref net_pkt if message sending fails


```",59771425
1545,False,False,2017-11-19T13:20:47Z,2017-11-19T13:22:22Z,"Changes since v1.9.2:

## Kernel
* Generic queue item acquisition fixed to always return a valid item when
  using K_FOREVER

## Bluetooth
* Multiple stability fixes for BLE Mesh
* Multiple stability fixes for the BLE Controller


Details:

```
Anas Nashif (2):
      ci: compliance: decode output to utf8
      release: Zephyr 1.9.2

Carles Cufi (3):
      Bluetooth: controller: Fix Controller to Host flow control leak
      Bluetooth: controller: Fix flow control packet drop
      doc: 1.9.x release notes

Johan Hedberg (24):
      Bluetooth: Mesh: Fix string signedness issue
      Bluetooth: Mesh: Fix SDU length check
      Bluetooth: Mesh: Drop invalid destination addresses
      Bluetooth: Mesh: Fix copy-paste mistake when assigning to cfg->frnd
      Bluetooth: Mesh: Fix encoding health status when app has no callback
      Bluetooth: Mesh: Set timer for periodic publish before publishing
      Bluetooth: Mesh: Always set company ID in health status message
      Bluetooth: Mesh: Send ack for every message with matching FCS
      Bluetooth: Mesh: Allow TTL <= 1 for the local net interface
      Bluetooth: Mesh: Remove local network interface Kconfig option
      Bluetooth: Mesh: Fix Health Period Set OpCode
      Bluetooth: Mesh: Fix encoding fault count to Health Current Status
      Bluetooth: Mesh: Fix spelling of ""heartbeat""
      Bluetooth: Mesh: Fix zeroing heartbeat state
      Bluetooth: Mesh: Fix resetting heartbeat subscription expiry properly
      Bluetooth: Mesh: Fix Set LPNTimeout message handling
      Bluetooth: Mesh: Fix setting health period divider
      Bluetooth: Mesh: Don't send health status messages if a test fails
      Bluetooth: Mesh: Fix dropping valid proxy configration messages
      Bluetooth: Mesh: Fix revoking app keys
      Bluetooth: Mesh: Fix missing initialization of bt_mesh.local_queue
      Bluetooth: Mesh: Fix potential access to uninitialized variable
      Bluetooth: Mesh: Fix mod sub status parameters upon failure
      Bluetooth: Mesh: Fix missing feature bits

Luiz Augusto von Dentz (4):
      queue: k_queue_get: Fix NULL return
      poll: k_poll: Return -EINTR if not ready
      queue: k_queue_cancel_wait: Fix not interrupting other threads
      tests: fifo: Add prj_poll.conf

Paul Sokolovsky (1):
      kernel: queue: k_queue_poll: Fix slist access race condition

Steve Brown (1):
      Bluetooth: Mesh: heartbeat fixes for message count
Vinayak Kariappa Chettimada (18):
      Bluetooth: controller: Fix slave from initiating conn upd ind
      Bluetooth: controller: Fix Conn Param Req response timeout
      Bluetooth: controller: Fix CPR procedure's Conn Upd initiation
      Bluetooth: controller: Fix PHY Update response state transition
      Bluetooth: controller: Fix NRF_AAR use
      Bluetooth: controller: Fix missing PHY update procedure reset
      Bluetooth: controller: Fix missing reset of FC feature
      Bluetooth: controller: Fix connection update supervision timeout
      Bluetooth: controller: Fix Coded PHY supervision timeout
      Bluetooth: controller: Fix tIFS calc for Coded PHY
      Bluetooth: controller: Fix PA/LNA for Coded PHY
      Bluetooth: controller: Add encrypted Coded PHY support
      Bluetooth: controller: Add Coded PHY packet tx time restrictions
      Bluetooth: controller: Remove assert on invalid LL id
      Bluetooth: controller: Fix Ctrl PDU Tx starvation assert
      Bluetooth: controller: Fix to enable Asym PHY on nRF52 Series
      Bluetooth: controller: Fix MIC error due to parallel Enc Proc
      Bluetooth: controller: Fix diff proc collision with enc proc
```",59771425
1546,False,False,2017-10-12T02:37:44Z,2017-10-13T02:34:26Z,"This is a bug fix release with the following bug fixes:

```
Anas Nashif (5):
      doc: update release notes index with 1.9
      doc: update release notes with ARC details
      ci: build commits, not only PR
      ci: compliance script should use python3
      Zephyr 1.9.1

Carles Cufi (8):
      Bluetooth: controller: Issue Data Buffer Overflow event
      samples: bluetooth: hci: Fix TX memory leak
      Bluetooth: controller: Fix handling of Read Static Addrs cmd
      Bluetooth: controller: Implement Write BD_ADDR VS cmd
      Bluetooth: controller: Implement Read Build Info cmd
      Bluetooth: controller: Add PA/LNA GPIO Kconfig option
      Bluetooth: controller: Disable PA/LNA for nRF51x
      Bluetooth: controller: Common config for VS extensions

Jukka Rissanen (1):
      net: dns: Do not resolve IPv6 address if IPv6 is disabled

Ricardo Salveti (1):
      pwm: stm32: Fix check for APB prescale

Vinayak Kariappa Chettimada (13):
      Bluetooth: controller: Fix hang on directed adv timeout
      Bluetooth: controller: Fix conn param req procedure timeout
      Bluetooth: controller: Remove unreachable workaround code
      Bluetooth: controller: Use correct NRF_AAR enable define
      Bluetooth: controller: Fix NRF_CCM config for 2M PHY
      Bluetooth: controller: Add radio setup HAL interface
      Bluetooth: controller: Map debug pins to P3 pin head on nRF5x DK
      Bluetooth: controller: Minor refactor radio_tmr_start
      Bluetooth: controller: Internal document purpose of end capture
      Bluetooth: controller: Use single PPI channel for AA capture
      Bluetooth: controller: Move tIFS s/w switch PPI index up by one
      Bluetooth: controller: GPIO PA/LNA feature
      Bluetooth: controller: Fix HCI Reset hang
```",59771425
1547,False,False,2017-09-07T23:19:39Z,2017-09-07T23:22:46Z,"We are pleased to announce the release of Zephyr kernel version 1.9.0

Major enhancements planned with this release include:

* Bluetooth 5.0 Support (all features except Advertising Extensions)
* Bluetooth Qualification-ready BLE Controller
* BLE Mesh
* Lightweight Machine to Machine (LwM2M) support
* Pthreads compatible API
* BSD Sockets compatible API
* MMU/MPU (Cont.): Thread Isolation, Paging
* Expand Device Tree support to more architectures
* Revamp Testsuite, Increase Coverage
* Stack Sentinel support (See details below)

The following sections provide detailed lists of changes by component.

## Kernel


* Added POSIX thread IPC support for Kernel
* kernel: introduce opaque data type for stacks
* Timeslicing and tickless kernel improvements

## Architectures

* arm: Added STM32F405, STM32F417, STM32F103x8 SoCs
* arm: Added TI CC2650 SoC
* arm: Removed TI CC3200 SoC
* arm: Added MPU support to nRF52, STM32L4, and STM32F3
* xtensa: Added ESP32 support
* Stack sentinel: This places a sentinel value at the lowest 4 bytes of a stack
  memory region and checks it at various intervals, including when servicing
  interrupts or context switching.  
* x86: enable MMU for application memory
* ARC: added initial MPU support, including stack sentinel checking for ARC configurations not featuring hardware stack bounds checking
* ARC: nested interrupt support for normal, non-FIRQ interrupts


## Boards


* Added device tree support for Intel Quark based microcontroller boards
  such as Arduino_101, tinytile, and Quark_d2000_crb.
* arm: Added Atmel SAM4S Xplained board
* arm: Added Olimex STM32-E407 and STM32-P405 boards
* arm: Added STM32F412 Nucleo and STM32F429I-DISC1 boards
* arm: Added TI SensorTag board
* arm: Removed TI CC3200 LaunchXL board
* arm: Added VBLUno51 and VBLUno52 boards
* xtensa: Added ESP32 board support
* ARC: added support for EMSK EM7D v2.2 version (incl. MPU)
* ARC: board configuration restructuring, peripheral configs moved from soc to board level


## Drivers and Sensors


* KW40Z IEEE 802.15.4 radio driver support added
* APDS9960 sensor driver added
* Added TICKLESS KERNEL support for nrf RTC Timer
* Added Kinetis adc and pwm drivers
* Removed deprecated PWM driver APIs
* Added ESP32 drivers for GPIO, pin mux, watchdog, random number generator,
  and UART
* sensor: Add BMM150 Geomagnetic sensor driver

## Networking


* LWM2M support added
* net-app API support added. This is higher level API that can be used
  by applications to create client/server applications with transparent
  TLS (for TCP) or DTLS (for UDP) support.
* MQTT TLS support added
* Add support to automatically setup IEEE 802.15.4 and Bluetooth IPSP networks
* TCP receive window support added
* Network sample application configuration file unification, where most of the
  similar configuration files were merged together
* Added Bluetooth support to HTTP(S) server sample application
* BSD Socket compatible API layer, allowing to write and/or port simple
  networking applications using a well-known, cross-platform API
* Networking API documentation fixes
* Network shell enhancements
* Trickle algorithm fixes
* Improvements to HTTP server and client libraries
* CoAP API fixes
* IPv6 fixes
* RPL fixes

## Bluetooth


* Bluetooth Mesh support (all mandatory features and most optional ones)
* GATT Service Changed Characteristic support
* IPSP net-app support: a simplified networking API reducing duplication
  of common tasks an application writer has to go through to connect
  to the network.
* BLE controller qualification-ready, with all required tests passing
* Controller-based privacy (including all optional features)
* Extended Scanner Filter Policies support in the controller
* Controller roles (Advertiser, Scanner, Master and Slave) separation in
  source code, conditionally includable
* Flash access cooperation with BLE radio activity
* Bluetooth Kconfig options have been renamed have the same (consistent)
  prefix as the Bluetooth APIs, namely BT_* instead of BLUETOOTH_*.
  Controller Kconfig options have been shortened to use CTLR instead of
  CONTROLLER.
* Removed deprecated NBLE support

## Libraries

* mbedTLS updated to 2.6.0
* TinyCrypt updated to 0.2.7

## HALs


* Added support for stm32f417 SOC
* Added support for stm32f405 SOC
* pinmux: stm32: 96b_carbon: Add support for SPI
* Added rcc node on stm32 socs
* Added pin config for USART1 on PB6/PB7 for stm32l4
* Removed TI cc3200 SOC and LaunchXL board support

## Documentation


* CONTRIBUTING.rst and Contribution Guide material added
* Configuration options doc reorganized for easier access
* Navigation sidebar issues fixed for supported boards section
* Fixed link targets hidden behind header
* Completed migration of wiki.zephyrproject.org content into docs and
  GitHub wiki. All links to old wiki updated.
* Broken link and spelling check scans through .rst, Kconfig (used for
  auto-generated configuration docs), and source code doxygen comments
  (used for API documentation).
* API documentation added for new interfaces and improved for existing
  ones.
* Documentation added for new boards supported with this release.
* Python packages needed for document generation added to new python
  pip requirements.txt


## Build System and Tools

* Convert post-processing host tools to python, this includes the following
  tools: gen_offset_header.py gen_idt.py gen_gdt.py gen_mmu.py


## Tests and Samples


* Added test Case to stress test round robin scheduling in schedule_api test.
* Added test case to stress test priority scheduling in scheduling_api_test.",59771425
1548,False,True,2017-09-07T20:35:55Z,2017-09-07T20:38:01Z,"Changes since 1.9.0-rc3:

```
Anas Nashif (3):
      doc: update 1.9.0 release notes
      release: sanitycheck: update footprint data
      release: Zephyr 1.9.0-rc4

Andy Ross (1):
      tests/kernel/mem_pool/mem_pool_api: Fix stack sizes

Carles Cufi (2):
      doc: release notes: Add BLE controller to the highlights
      Bluetooth: controller: Require nRF52 for privacy

David B. Kinder (3):
      doc: fix broken wiki reference
      doc: genrest writing files without final newline
      doc: update release notes

Leandro Pereira (5):
      lib: json: Fix off-by-one error when encoding objects
      lib: json: Fix compilation warnings
      lib: json: Alignment should be considered when calculating struct size
      lib: json: Silence warning about unused parameter
      tests: lib: json: Enable test case

Punit Vara (2):
      driver: sensor: Add BMM150 Geomagnetic sensor driver
      samples: bmm150: Add sample application for BMM150 sensor

Ruslan Mstoi (5):
      Bluetooth: doc: update GAP PICs file
      Bluetooth: doc: update L2CAP PICs file
      Bluetooth: doc: update SM PICs file
      Bluetooth: doc: update GATT PICS file
      Bluetooth: tester: Fix bt-stack-tester to unix domain socket

Sebastian Bøe (1):
      samples: Add bbc_microbit to hci_uart's whitelist

Shilpashree L C (1):
      doc: update release notes for v1.9

Steve Brown (1):
      Bluetooth: Mesh: Avoid spurious ""No matching AppKey"" warning

Vinayak Kariappa Chettimada (9):
      Bluetooth: controller: Fix a bug in ctrl and data management
      Bluetooth: controller: Fix assert on peer unknown rsp
      Bluetooth: controller: Disable DLE and PHY upd proc for nRF51
      Bluetooth: controller: Fast enc setup with ccflags -Ofast
      Bluetooth: controller: Remove redundant use of auto variable
      Bluetooth: controller: Inline the packet_rx_reserve_get() func
      Bluetooth: controller: Move RSSI sampling after pkt processing
      Bluetooth: controller: Optimize the loop in nRF5 hal rand get()
      Bluetooth: controller: Add checks to detect radio ISR latency

Youvedeep Singh (1):
      timer: k_timer_start should accept 0 as duration parameter.

Łukasz Rymanowski (2):
      Bluetooth: mesh: Fix failed provisioning response
      Bluetooth: mesh: Clear link TX when ACK arrived on it

```",59771425
1549,False,True,2017-09-04T18:47:17Z,2017-09-04T18:49:48Z,"Changes since 1.9.0-rc2
```
Adithya Baglody (1):
      doc: update release notes for v1.9

Anas Nashif (4):
      license: fix license identifiers
      samples: grove: set min_flash filter
      doc: cleanup release notes
      release: Zephyr 1.9.0-rc3

Andy Gross (2):
      arch: arm: Remove redundant check and fix rounding
      arm: mpu: Account for stack guard size correctly

Carles Cufi (5):
      Bluetooth: controller: Add Read Static Addresses VS command
      Bluetooth: Controller: Add Read Key Hier. Roots VS cmd
      Bluetooth: controller: Fix Coverity unreachable code
      Bluetooth: controller: Add DTM HCI commands
      Bluetooth: controller: Fix Read Version Info VS cmd

David B. Kinder (2):
      doc: fix Kconfig misspellings
      doc: scan/fix .rst file misspellings

Gil Pitney (1):
      boards: arm: cc3220sf_launchxl: doc: minor clarifications

Harm Berntsen (1):
      doc: fix Zephyr SDK archive URL

Inaky Perez-Gonzalez (1):
      tests/object_footprint: fix build error due to bad Kconfig specification

Johan Hedberg (2):
      Bluetooth: Mesh: Fix setting the right value for Static OOB type
      release-notes: Make a clear note about the Kconfig prefix change

Jukka Rissanen (19):
      tests: net: mld: Ignore already joined error when sending report
      samples: net: zoap: Increase IPv6 multicast addresses
      net: app: Add IP header to packets received by TLS/DTLS tunnel
      net: pkt: Add function to clone net_pkt fragment chain
      net: tcp: Use packet clone function to copy the frags
      net: pkt: Print info if IP header is too short
      net: tcp: Recover a situation if the first net_buf is too short
      net: context: Do not call send callback if context is not set
      net: ipv6: Fix fragmented IPv6 packet sending
      net: tcp: Print more info if net_pkt was not sent
      net: shell: Do not crash if DTLS is disabled in net app command
      net: app: Allow TLS and DTLS to be enabled separately
      drivers: ieee802154: cc2520: Fix compiler warning
      net: tcp: Queue FIN instead of sending it immediately
      net: Add function to parse IP address string
      net: tests: Add tests for IP address parsing
      net: dns: Use IP address parsing function in init
      net: dns: Do not resolve numeric IP address
      Revert ""net: tcp: Queue FIN instead of sending it immediately""

LC Shiplashree (1):
      doc: update release notes for v1.9

Leandro Pereira (3):
      crypto: mbedtls: Update mbedTLS to 2.6.0
      doc: release_notes: Add note about ESP32 support
      doc: release_notes: Add note about mbedTLS and TinyCrypt updates

Luiz Augusto von Dentz (1):
      Bluetooth: tester: Fix using invalid elements with k_fifo

Paul Sokolovsky (2):
      net: sockets: Be sure to initialize socket's queue on accept
      net: sock: zsock_close: Explicitly cast few calls to (void).

Ramakrishna Pallala (2):
      tinycrypt/hmac: Array compared to NULL has no effect
      tinycrypt/sha256: Array compared to NULL has no effect

Ravi kumar Veeramally (1):
      net: samples: Fix unchecked return value in zoap_server

Savinay Dharmappa (2):
      dts: x86: Add serial over usb support.
      tests: bluetooth: tester: Make UART usage consistent

Tomasz Bursztyka (2):
      drivers/ethernet: Fix a packet reception regression in ENC28J60 driver
      tests/ieee802154: Fix a coverity warning

Vinayak Kariappa Chettimada (3):
      Bluetooth: controller: Fix assert on connection establishment
      Bluetooth: controller: Fix pointless expression
      Bluetooth: controller: Add Direct Test Mode support

Youvedeep Singh (3):
      tests: benchmark: timing_info: Change API/variable Name.
      tests: benchmark: timing_info: Add support for nrf series processors
      arch: arm: store/restore regs r0-r3 while making function call.

Łukasz Rymanowski (1):
      Bluetooth: mesh: Fix for key size
```",59771425
1550,False,True,2017-08-25T20:48:47Z,2017-08-25T20:50:50Z,"Changes since [v1.9.0-rc1](https://github.com/zephyrproject-rtos/zephyr/releases/tag/v1.9.0-rc1)

```
Anas Nashif (14):
      doc: move device drivers, model and tree in one section
      doc: add Xtensa as supported architecture
      doc: move application development and reference into one section
      doc: simplify top level TOC
      doc: put licensing and release notes in the index page
      doc: move security section up
      doc: move API under Developer Guides
      tests: footprint: add testcase.yaml to object tests
      kernel: init: print boot banner before static threads
      tests: benchmarks: use main thread for benchmark
      tests: ztest: call test_main() without arguments
      tests: mslab: use main thread
      tests: kernel: mutex: minor rework
      release: Zephyr 1.9.0-rc2

Andrew Boie (1):
      object_footprint: don't adjust IDT size

Andy Gross (1):
      scripts/extract_dts_includes.py: Allow for includes in common yaml files

Aska Wu (1):
      net: ip: Prevent unaligned exception

Carles Cufi (7):
      Bluetooth: controller: Enable Read Remote Ver Info bit
      Bluetooth: controller: Fix RL index check
      Bluetooth: controller: Fix Read Peer RPA Command
      Bluetooth: controller: Implement Read RSSI command
      Bluetooth: controller: Add Read TX Power commands
      Bluetooth: controller: Add LE Read Chan Map command
      Bluetooth: controller: Fix broken switch statement

David B. Kinder (5):
      doc: add custom 404 page
      doc: fix typos and licensing text
      doc: remove use of :download: directive
      doc: fix sphinx 1.5 broken search box
      doc: Add security doc mention in GitHub README

Jukka Rissanen (6):
      net: app: Do not bind IPv4 if user wants IPv6 only
      net: app: Use port when init server with both IPv4 and IPv6
      net: app: Introduce missing enable/disable functions for server
      samples: net: mqtt: Define the stack properly
      net: http: HTTP header field state was not reset
      samples: net: Fix compile error in echo-server when using TLS

Kumar Gala (4):
      arch: arm: stm32f1: Fix how we determine pull-up/pull-down for gpio
      eth_enc28j60: Update Kconfig dependancy for SPI
      boards: zedboard_pulpino: Update yaml for amount of flash
      tests: crypto: mbedtls: set a code size constraint

Leandro Pereira (15):
      tinycrypt: ecc_dh: Properly clear out temporary secret buffers
      tests: crypto: Do not use unitialized variable
      esp32: Fix redefinition of BIT() macro
      samples: nats: Fix NULL pointer dereference when publishing
      net: Fix out-of-bounds access when registering connections
      net: connection: Zero out connection struct when unregistering
      samples: leds_demo: Fix null pointer dereference when adding IP address
      drivers: serial: esp32: Return transmitted character on success
      tests: gpio: Add support for ESP32
      drivers: gpio: esp32: Declare data struct only for enabled ports
      drivers: gpio: esp32: Properly convert interrupt triggering mode
      drivers: watchdog: esp32: Always use Timer Group 1 for WDT
      drivers: watchdog: esp32: Reduce number of seals/unseals
      drivers: watchdog: esp32: Acknowledge watchdog interrupt
      arch: xtensa: Use the alternate _Level4Vector routine on ESP32

Luiz Augusto von Dentz (5):
      poll: Enable multiple threads to use k_poll in the same object
      test: queue: Add test for multiple threads using k_queue_get
      kernel: Use SYS_DLIST_FOR_EACH_CONTAINER whenever possible
      Bluetooth: shell: Enable CONFIG_BT_SHELL for arduino_101
      net: Remove check for k_delayed_work_cancel

Maureen Helm (2):
      doc: Add Kinetis adc and pwm drivers to 1.9 release notes
      doc: Update 1.9 release notes for arm

Michael Scott (6):
      doc: Move LwM2M support to Major enhancements section of 1.9 rel notes
      samples: net: add sample documentation for lwm2m-client
      net: lwm2m: fix resource not found error code in format writers
      net: lwm2m: define a CREATE operation
      net: lwm2m: return BAD_REQUEST when object create fails
      net: http: fix avoiding timeout on HTTP requests w/o body

Paul Sokolovsky (8):
      net: Define struct sockaddr_storage
      net: struct sockaddr should have field ""sa_family""
      net: app: Allow to set static IPv4 netmask and gateway
      samples: net: echo_async: Add IPv6 support
      doc: 1.9: Elaborate on BSD Sockets and some other factual fixes
      net: app: init: Bail out early if no network interface available
      net: shell: Fix build when NET_DEBUG_APP defined, but client/server not
      boards: 96b_carbon: Enable NET_L2_BT by default

Ricardo Salveti (4):
      net: 6lo: always check for net_pkt_get_frag returned frag
      net: lwm2m: add IPSO light control object
      samples: lwm2m: add IPSO light object to LWM2M client
      net: udp: replace net_udp_get/set_hdr macros with static inline

Robert Chou (1):
      net: lwm2m: ignore optional resource when not implmeneted

Savinay Dharmappa (2):
      dts: x86: quark_se_c1000_devboard: Add device tree support
      doc: updated doc for Zephyr release 1.9.

Vinayak Chettimada (1):
      Bluetooth: controller: Refactor Conn Param Req implementation

Vinayak Kariappa Chettimada (3):
      Bluetooth: controller: Fix controller assert at clock rollover
      Bluetooth: controller: Add Minimum Number of Used Channels Proc
      Bluetooth: controller: Fix first connection interval timing

Yannis Damigos (1):
      drivers: i2c_ll_stm32: Fix building for interrupt mode

Youvedeep Singh (1):
      doc: updated doc for Zephyr release 1.9.",59771425
1551,False,True,2017-08-18T03:43:53Z,2017-08-18T03:45:19Z,"```
Adam Podogrocki (3):
      boards: provide Nucleo-64 F334R8 development board's documentation
      boards: provide STM3210C-EVAL development board's documentation
      boards: provide STM32373C-EVAL development board's documentation

Adithya Baglody (17):
      tests: benchmark: app_kernel: Return values from kernel APIs are read.
      tests: benchmark: Fixed build error from icx toolchain.
      pinmux: Galileo: Updated the pinmux to use new PWM API's.
      kernel: MMU: kconfig definition to enable the MMU on x86.
      kernel: x86: MMU: Macros & Linker scripts for Boot time table creation
      kernel: x86: MMU: Build system support for x86 MMU
      qemu: MMU: Memory regions for qemu_x86
      scripts: x86: MMU: Script to generate page tables
      kernel: x86: MMU: Enable MMU at boot time.
      quark_se: MMU: Memory regions for arduino 101(quark_se)
      quark_se: MMU: Add linker support for MMU page table generation.
      tests: benchmark: boot_time: Reading time stamps made arch agnostic
      scripts: gen_mmu: Rectified MMU page table generation.
      scripts: gen_mmu: Better verbose reporting and updated execution logic
      x86: MMU: Validate user Buffer
      x86: MMU: Bug in _x86_mmu_buffer_validate
      drivers: pwm: Remove all deprecated APIs.

Anas Nashif (217):
      boards: microbit: enable flashing with pyocd
      Revert ""xtools: get rid of warnings about wrong path""
      doc: remove links to wiki
      xtools: add new configurations for xtools 1.23
      doc: update macOS getting started documentation
      doc: also require dtc to be installed for linux
      doc: emphasize usage of MSYS2 MSYS Shell
      dts: make extract script take options
      dts: generate definitions for build system
      Revert ""x86: call gen_idt with $ZEPHYR_BASE too""
      quark_d2000_crb: increase default stack size
      gitlint: Ignore signed-off-by line
      release: Update version of master to 1.8.99
      license: add missing licenses and copyright
      tests: remove obsolete usage of defrag
      samples: ipm: fix macro name
      ci: compliance: add missing classname and enhanced description
      ci: merge xml reports into one single file
      scripts: make check_compliance scripts take arguments
      doc: add 1.8 release notes
      sam4x: report correct number of IRQ priority bits
      tests: rename test directory test_aes -> aes
      tests: rename test directory test_cbc_mode -> cbc_mode
      tests: rename test directory test_ccm_mode -> ccm_mode
      tests: rename test directory test_cmac_mode -> cmac_mode
      tests: rename test directory test_ctr_mode -> ctr_mode
      tests: rename test directory test_ctr_prng -> ctr_prng
      tests: rename test directory test_ecc_dsa -> ecc_dsa
      tests: rename test directory test_ecc_dh -> ecc_dh
      tests: rename test directory test_hmac -> hmac
      tests: rename test directory test_hmac_prng -> hmac_prng
      tests: rename test directory test_mbedtls -> mbedtls
      tests: rename test directory test_sha256 -> sha256
      tests: rename test directory test_chan_blen_transfer
      tests: rename test directory test_loop_transfer -> loop_transfer
      tests: rename test directory test_bluetooth -> bluetooth
      drivers: remove unused headers for nsim serial
      linker: move all linker headers to include/linker
      tests: rename test directory for alert
      tests: rename test directory for lifo
      tests: rename test directory for fifo
      tests: rename test directory for mem_slab
      tests: rename test directory for mem_pool
      tests: mslab_api: fix style
      tests: mslab_concept: fix code style
      tests: mslab_threadsafe: fix code style
      tests: mem_pool: fix code style
      tests: mem_pool_api: fix code style
      tests: mem_pool_threadsafe: fix code style
      tests: mem_heap: fix code style
      tests: workq_api: fix code style
      tests: work_queue: fix code style
      tests: workq_api: rename test directory
      tests: put tickless tests together
      tests: sleep: rename test directory
      tests: alert_api: fix code style
      tests: arm_irq_vector_table: fix code style
      tests: arm_runtime_nmi: fix code style
      tests: bitfield: fix code style
      tests: common: fix code style
      tests: critical: fix code style
      tests: fifo: fix code style
      tests: fp_sharing: fix code style
      tests: ipm: fix code style
      tests: move ipm test to drivers
      tests: mbox: fix code style
      tests: mutex: fix code style
      tests: mutex_api: fix code style
      tests: obj_tracing: fix code style
      tests: pending: fix code style
      tests: poll: fix code style
      tests: profiling_api: fix code style
      tests: queue: fix code style
      tests: threads_customdata/ -> threads/customdata
      tests: threads_lifecycle/ -> threads/lifecycle
      tests: threads_scheduling ->  threads/scheduling
      tests: rename cdata -> custom_data
      tests: thread_init: fix style
      tests: schedule_api: fix style
      tests: timer_api: fix style
      tests: timer_monotonic: fix style
      tests: pipe: rename test directory
      tests: pipe: fix style
      samples: move environment sensing to boards
      samples: move quark se power samples to boards/
      samples: move all MPU samples into one directory
      samples: move app developemnt samples samples/appdev
      samples: demonstrate the use of KBUILD_ZEPHYR_APP
      ci: if script fails, report error
      Revert ""Kconfig: Source Kconfig from Zephyr application directory.""
      doc: add MPU samples to index
      tests: samples: convert testcase files to yaml
      boards: add board meta-data
      sanitycheck: support testcases in yaml instead of ini
      tests: remove testcase.ini files
      ztest: update documentation for yaml
      update: board names
      doc: add documentation about sanitycheck
      tests: dns: do not set as slow test
      tests: protection: convert to testcase.yaml
      sanitycheck: enhance toolchain filtering
      samples: environmental_sensing: update filtering
      samples: hci_uart: optimize testcase definition
      sanitycheck: fix platform filtering
      toolchains: add DTC to environment
      dts: fixed typo in yaml file name
      tests: samples: remove duplicate filtering
      tests: do not exclude quark_d2000_crb
      tests: convert testcase.ini to new format
      sanitycheck: add toolchain keyword to testcases
      tests: replace filters in testcase files
      tests: fix PCI test using 'supported' keyword
      doc: update qemu_x86 instructions
      doc: update qemu_cortex_m3 instructions
      doc: add qemu_xtensa board instructions
      samples: ipm_mailbox: fix thread creation
      samples: mqtt_publisher: fixed typo
      net: fix wrong Kconfig
      net: kconfig: fix help message for SLIP
      ethernet: fix Kconfig option for ETHERNET
      kconfig: fix typo in Kconfig name: NET_RPL_MC_EXT
      drivers: ataes132a: Fix Kconfig name
      drivers: slip: move doxygen header
      benchmark: footprint: fixed testcase
      boards: qemu: enable test random generator
      sanitycheck: fix supported/depends_on usage
      boards: frdm_k64f: enable ethernet for networking
      samples: remove reference to nimble
      tests: move spi test under tests/
      tests: remove build_only tag
      tests: crypto: do not build when DEBUG is enabled
      tests: mbedtls: cleanup prj.conf
      subsystem: cleanup misc and make cpp a subsystem
      boards: mark boards with built-in networking support
      samples: wpanusb: add testcases
      kconfig: fixed stray Kconfig variables
      tests: crypto: fix coding style
      scripts: updated spelling.txt file
      ci: rebase branch to only get relevant commits
      ci: enhance performance using 3 minions
      ci: install pyelftools
      ci: use new docker image
      maintainers: set correct path for many of the components
      maintainers: update CODEOWNERS from MAINTAINERS file
      CODEOWNERS: use github handles
      CODEOWNERS: more github handles
      CODEOWNERS: more tweaks
      doc: add python pip requirements.txt
      tests: trickle: exclude qemu_cortex_m3
      samples: mesh: build only on BLE platforms
      boards: mark qemu targets with a unified Kconfig
      net: enable SLIP only on QEMU targets
      tests: mqtt_publisher: unify prj.conf
      tests: mqtt_subscriber: unify prj.conf
      boards: zedboard_pulpino: disable networking and bluetooth tests
      tests: net: limit builds in a catch all test
      samples: mesh: build sample where they fit
      tests: disable building of FXOS8700 sensor for all boards
      tests: run modified tests with full coverage
      shippable: remove comment before get_modified_tests.py call
      build: debugserver: support multi config boards
      scripts: fix offset.h header guard
      doc: contribute: fix code block for git hook
      sanitycheck: support feature classes for boards
      boards: support feature classes in yaml
      samples: dhcpv4_client: unify prj.conf
      samples: mbedtls_dtlsclient: unify prj.conf
      samples: irc_bot: unify prj.conf
      samples: nats: unify prj.conf and add sample.yaml
      samples: http_client: unify prj.conf
      samples: coaps_server: unify prj.conf and cleanup docs
      samples: https_client: unify prj.conf
      samples: dns_resolve: unify prj.conf
      samples: coaps_client: unify prj.conf and cleanup docs
      samples: telnet_server: unify prj.conf
      samples: http_server: unify prj.conf
      samples: socket: echo: unify prj.conf
      samples: socket: echo_async unify prj.conf
      samples: mbedTLS server: unify prj.conf
      Revert ""dts: x86: quark_se_c1000_devboard: Add device tree support""
      ci: post results on failure
      build: remove unused TASKGROUP_SSE variable
      build: remove unused Kconfig variables
      kconfig: remove empty and unused kernel.config
      kconfig: move dts Kconfigs to dts/
      config: we do not use gerrit anymore
      build: if some hal is not in the tree, do not complain
      doc: require license information for external code
      doc: qemu target was deprecated, use 'run'
      build: remove deprecated qemu/qemugdb targets
      crypto: Update to mbedTLS 2.5.1
      Kconfig: make all syslog variables depend on SYS_LOG
      doc: enable building HTML doxygen
      ci: copy sanitycheck.xml file per matrix build
      ci: post built html docs to S3 storage
      doc: net_app: use definition list instead of bullets
      samples: fixed tc syntax
      gitlint: tolerate long lines with URLs
      gitlint: ignore titles prefixed with Revert
      debug: openocd: build openocd symbols using obj-
      boards: fix dropped HAS_DTS
      ci: retry sanitycheck without --subset arg
      ci: fix call for sanitycheck
      ci: run more tests on boards that have changed
      sanitycheck: fix RAM check
      tests: benchmarks: reduce message size
      tests: json: reduce ztest stack size
      tests: kernel: reduce thread stack size for pend
      tests: update min ram requirements and filters
      sanitycheck: add espressif as a supported toolchain
      boards: esp32: add board definition file
      ci: boards: retry sanitycheck without --subset arg
      kconfig: build code conditionally when possible
      boards: xt-sim: add definition for supported configurations
      boards: qemu_xtensa: this is not supported by xcc
      board: xt-sim: add as a default test platform
      release: Zephyr 1.9.0-rc1

Andreas Kölbl (1):
      arm: board: Fix stm32f4_disco defconfig

Andrei Emeltchenko (4):
      bluetooth: Allow to specify Logging Domain
      drivers: IPM: Fix loosing interrupts
      drivers: IPM: Access 32-bit IPM registers right way
      drivers: IPM: Refactor IPM driver using u32_t registers

Andrew Boie (111):
      gccarmemb: don't assume 'dtc' is in /usr/bin
      printk: fix printing of long long types
      bbc_microbit: fix 'make debugserver'
      arm: implement __svc on Cortex M0
      arm: fix k_oops on armv6 with interrupts locked
      kernel: fix short time-slice reset
      schedule_api: don't exclude Nios II
      nios2: reset timeslice on interrupt-induced swap
      riscv32: update time slice before swap
      x86: don't shift data addresses between builds
      Makefile.toolchain.zephyr: fix C++ on Xtensa
      samples: restore cpp_synchronization test
      doc: add interrupt implementation details
      tests: context: make some failures less ambiguous
      tests: context: allow 2 ticks of slop
      sam3x: report correct number of IRQ priority bits
      frdm_k64f: default to pyocd.sh for flashing/debug
      stack_sentinel: change cooperative check
      arches: declare _SysFatalErrorHandler __weak
      k_oops: force unlock IRQs on ARMv7M
      tests: fatal: increase coverage
      stack_sentinel: hang system on failure
      tests: context: move idle test to the end
      toolchain: gcc: add __DEPRECATED_MACRO
      tests: net: use main thread for test
      kernel: introduce stack definition macros
      tests: use K_THREAD_STACK_DEFINE macros
      drivers: use K_THREAD_STACK_DEFINE macros
      samples: use K_THREAD_STACK_DEFINE macros
      misc: use K_THREAD_STACK_DEFINE macros
      toolchain/common.h: deprecate __stack
      xtensa: fix 'make debug' for xt-sim targets
      mpu_stack_guard_test: use k_thread_create()
      doc: update for new stack macros
      kernel: remove gdb_server
      build: place app objects in libapplication.a
      linker-defs.h: add some comments
      sections.h: define application-level sections
      kernel: add config for app/kernel split
      linker-defs: add output section routing macros
      kernel: add early init routines for app RAM
      x86: implement bss zero and data copy for application
      check_link_map: fix check for app memory
      qemu_x86: ia32: fix ROM size with XIP enabled
      x86: place application data in its own sections
      kernel: make K_.*_INITIALIZER private to kernel
      linker/common-ram.ld: force input section align
      drivers: timer: init earlier in boot sequence
      tests: net: route: fix semaphore usage
      qemu_x86: increase to 8MB of RAM
      tests: net: remove overriden RAM size
      tests: protection: don't do exec tests on x86
      mmustructs: don't use addr to name structures
      gen_mmu.py: verbose mode dump MMU_LIST
      qemu: enable MMU by default
      linker-defs: add some new _image_* defines
      x86: linker.ld: implement linker-defs.h changes
      x86: add MMU page alignment where necessary
      x86: ia32: set access based on linker regions
      toolchain.h: fix __in_section_unique()
      toolchain.h: intoduce __kernel macros
      x86: linker.ld: support __kernel sections
      arches: move _NanoFatalErrorHandler defintion
      riscv32: pulpino: add some missing linker symbols
      x86: add missing rule for __kernel objects
      qemu_x86: terminate emulator on fatal system error
      x86: add CONFIG_X86_STACK_PROTECTION
      x86: convert gen_idt to Python
      x86: allow IDT vectors to be task gates
      x86: generate RAM-based GDT dynamically
      x86: implement improved double-fault handler
      x86: add API for modifying page tables
      tests: fatal: fix stack size to k_thread_create
      sys_kernel: fix stack declaration
      kernel.h: add note about K_THREAD_STACK_SIZEOF()
      x86: page-aligned stacks with guard page
      x86: set stack guard page non-writable
      qemu_x86: enable MMU stack protection by default
      tests: fatal: enable x86 MMU stack protection
      scripts: add version check for pyelftools
      net: fix references to stack buffers
      samples: net: fix stack definitions
      mpu_stack_guard_test: fix stack declaration
      timing_info: fix how stacks are referenced
      x86: install guard page for interrupt stack
      gen_gdt: properly set descriptor privilege level
      kernel: introduce opaque data type for stacks
      samples: ipm_mailbox: fix build error
      x86: additional debug output for page faults
      linker-defs: fix APP_INPUT_SECTION
      x86: place application data before kernel data
      linker-defs: add size values for kernel/app memory
      x86: mmu: add runtime modification indicator
      x86: implement new linker variables
      x86: enable MMU for application memory
      arm: move app data before kernel data
      x86: stack overflow improvements
      quark_d2000: fix IDT_LIST definition
      esp32: fix linker script issues
      irq.h: include generic toolchain header
      xcc: fix __in_section_unique() and __COUNTER__
      tcp.h: fix definition of tcp_init_isn()
      net: fix net_tcp_state_str() declaration
      net: tcp.h: fix some function declarations
      net: rpl: fix inline function declaration
      cpp_synchronization: fix main() definition
      xtensa: soc: fix IRQ table
      net_context: work around missing errno codes
      object_tracing: fix definition
      tests: schedule_api: fix variable shadowing
      schedule_api: fix stack overflow on xt-sim

Andrzej Kaczmarek (4):
      drivers: flash: Fix checking for radio idle state
      Bluetooth: Fix formatting string for storage directory name
      drivers: flash: Fix write_op unaligned access
      drivers: crc: Add 'pad' parameter to crc16()

Andrzej Puzdrowski (3):
      Bluetooth: controller: support for code exe. in co-operation with radio
      Drivers: flash: NRF5x: synchronous mode for co-operation with BLE radio
      bluetooth: shell: add module for testing NRF5x flash driver

Andy Gross (21):
      scripts: Makefile.lib: Add dependency for DTS overlay
      Makefile: Add dts config include file
      doc: Add Device Tree documentation
      dts: yaml: Add YAML template file
      dts/extract_dts_includes.py: Add partition support
      dts: common: yaml: Add partition file
      kconfig: misc: Conditionally remove FLASH_LOAD options
      scripts: extract_dts_includes.py: Correct LOAD_OFFSET
      Makefile: Add config-sanitycheck target
      bluetooth: hci: Kconfig: Fix dependency
      rts: Kconfig: Add QMSI dependency on RTC options
      scripts: sanitycheck: Switch config target
      scripts: extract_dts_includes.py: Correct LOAD_OFFSET
      arm: nxp: k6x: Fix typo in partition offset
      scripts: extract_dts_includes.py: Fix names generation
      scripts: extract_dts_includes.py: Adhere to PEP8
      linker: arm: Split out application from kernel
      build: Fix distclean for gen_idt
      arch: arm: Always define ARCH stack definitions
      arm: mpu: Adjust to use opaque kernel data types
      dts: i2c: Fix size and address cells

Andy Ross (4):
      mem_pool: Don't check level_empty() before breaking a block
      esp32: Fix board cycle frequency
      kernel: POSIX thread IPC support
      tests/kernel: Add pthread API test

Aska Wu (7):
      net/mqtt: Convert mqtt lib to use net app API
      net/mqtt: Enable TLS support
      ext: lib: mbedtls: Increase max content len if MQTT TLS is enabled
      tests: mqtt: Add a mqtt tls test case
      net: sockets: Fix a link error if CONFIG_NET_TCP is not enabled
      newlib: xtensa: Fix a newlib link error
      net: sockets: inet_pton() should return 1 on success

Aska.Wu (1):
      samples: coaps_server: add prj_frdm_k64f.conf

Bogdan Davidoaia (12):
      doc: update network buffers push/pull examples
      drivers: ieee802154: kw41z: remove unnecessary cast for PKT_BUFFER_RX
      samples: net: ieee802154: kw41z: reduce log level
      drivers: ieee802154: kw41z: fix issue in RX sequence
      ext: mcux: import XCVR driver for KW40Z
      ext: mcux: import additional KW40Z header files
      ext: mcux: update KW40Z files for building XCVR driver
      ext: mcux: add makefiles for building KW40Z XCVR driver
      ext: mcux: add minimal v2.2 interface for KW40Z XCVR driver
      drivers: ieee802154: kw41z: add support for KW40Z
      samples: net: ieee802154: add KW40Z prj conf file
      MAINTAINERS: update sensor drivers section

Carles Cufi (76):
      Bluetooth: controller: Increase RX prio stack size
      Bluetooth: controller: Conditionally include conn-related options
      Bluetooth: Consolidate all role configuration
      build: Fix DTC overlay file paths on MSYS2
      doc: getting_started: Add WSL instructions
      Bluetooth: controller: Refactor whitelisting
      Bluetooth: controller: Handle reset atomic properly
      Bluetooth: Enforce cooperative priorities in Bluetooth threads
      Bluetooth: controller: Rename mem function that checks all-zero mem
      Bluetooth: Correctly select RPA and TINYCRYPT options
      Bluetooth: controller: Add inital support for Controller-based privacy
      Bluetooth: controller: Refactor whitelist handling (v2)
      Bluetooth: controller: Fix OCF data size
      Bluetooth: Set hci_uart RAM config to fit privacy
      Bluetooth: controller: Correct adv, scan and init state checks
      Bluetooth: Fortify role dependency
      Bluetooth: controller: Fix supported cmds and states
      Bluetooth: controller: Add whitelist population with privacy
      Bluetooth: controller: Properly remove peer IRKs from RL
      Bluetooth: controller: Add RL filter
      Bluetooth: controller: Handle Privacy Modes
      Bluetooth: controller: Optimize RL addition
      Bluetooth: controller: Generate RPAs for scanning and initating
      Bluetooth: controller: Add device match ID radio API
      Bluetooth: controller: Add wl bit in resolving list
      Bluetooth: controller: Keep track of IRK to RL indices
      Bluetooth: controller: Privacy filtering in advertiser
      Bluetooth: controller: Reset filters correctly
      Bluetooth: controller: Add support for Event Mask Page 2
      Bluetooth: controller: Filter Auth Payload timeout exp
      Bluetooth: controller: Fix Event Mask Page 2 handling
      Bluetooth: controller: Use RL indices in adv ISR
      Bluetooth: controller: Fix HCI remote version structure
      Bluetooth: hci_uart: Set the UART TX size correctly
      Bluetooth: controller: Fix resolving list error handling
      Bluetooth: controller: Rename whitelist arrays
      Bluetooth: controller: Fix AdvA checks in advertiser
      Bluetooth: controller: Fix directed adv filtering
      Bluetooth: controller: Fix RL permission check
      Bluetooth: controller: Check AdvA in scan requests
      Bluetooth: controller: Fix regression in WL filter population
      Bluetooth: controller: Allow devices not in resolving list
      Bluetooth: controller: Fix privacy whitelist allocation
      Bluetooth: controller: Avoid warning with privacy disabled
      Bluetooth: controller: Only add active slots to hw filter
      env: Remove usage of -P in grep
      Bluetooth: controller: Privacy filtering in scanner and initiator
      Bluetooth: controller: Resolve TargetA in software
      Bluetooth: controller: Thread-safe local RPA access
      doc: Switch to MSYS2's dtc package
      Bluetooth: controller: nrf5: Fix AAR scratch pointer
      Bluetooth: controller: Fix IRK endianness
      Bluetooth: controller: nrf5: Fix AAR packet pointer
      Bluetooth: controller: Increase conn count only on success
      Bluetooth: controller: LE Enhanced Connection Complete
      Bluetooth: controller: Use little-endian peer IRKs for generation
      Bluetooth: controller: Fix Set Privacy Mode command
      Bluetooth: controller: Use RPA in scanner only if available
      Bluetooth: controller: Fix typo in scan request address population
      Bluetooth: controller: Translate addresses in adv reports
      Bluetooth: controller: Fix warning due to unused variable
      Bluetooth: controller: Avoid assignments in if statement
      Bluetooth: controller: Fix whitelist filter logic
      Bluetooth: controller: Enable AAR for Scan Responses
      Bluetooth: controller: Fix TargetA check as initiator
      Bluetooth: controller: Check AdvA in Scan Response
      Bluetooth: controller: LE Directed Advertising Report
      Bluetooth: controller: Rename Kconfig prefix
      Bluetooth: controller: Enable Extended Scan Filter Policies bit
      doc: Add BLE controller changes to 1.9 release notes
      doc: Clarify the Bluetooth 5.0 support in 1.9
      Bluetooth: controller: Split Ext Scan Filter Policies out
      Bluetooth: VS: Fill the Vendor-Specific header with the spec
      Bluetooth: controller: Fix RSSI sign
      Bluetooth: VS: Add RSSI to Scan Req Received Event
      Bluetooth: VS: Replace IRK with IR

David B. Kinder (34):
      doc: fix linenum references in api example
      doc: fix reference to nios2-configure-sof tool
      doc: spelling fixes in samples/ and boards/
      doc: spelling fixes in Kconfig files
      doc: fix misspellings in docs
      doc: fix board/sample broken links
      doc: fix doxygen errors in bt include files
      doc: Add link to v1.8 documentation
      doc: change UTF-8 chars to sphinx inline replaces
      scripts: sanitycheck: more spelliing fixes
      doc: update release-notes index page
      eoc: move non-board docs from boards TOC list
      test: fix misspellings
      doc: fix headings in device tree doc
      doc: fix references to moved files
      doc: fix doc errors in stm32_min_dev.rst (take 2)
      doc: fix sidebar nav issues with board docs
      doc: add placeholder for 1.9 release notes
      doc: fix wiki board references in non .rst files
      doc: update source tree structure documentation
      doc: output alphabetic Kconfig options index
      doc: add CONTRIBUTING.rst to project repo and docs
      net/mqtt: tweak doxygen comment for return value
      doc: linux installation for python3-pip incorrect
      doc: spelling fixes in docs
      doc: add GitHub mention on doc home page
      doc: fix uses of back quotes in documentation
      doc: fix misspellings in include (API docs)
      doc: add CII badge, include README in intro
      doc: fix misspellings in board docs
      doc: fix misspellings in Kconfig files
      doc: fix misspellings and missing EOF newlines
      doc: update 1.9 release notes with doc changes
      doc: add project security docs

David Brown (2):
      dts: Allow override of dts overlay directory
      arm: nxp: k6x: Add default partition table.

Erwan Gouriou (32):
      drivers: clock_control: provide LL based driver to stm32f1xx series
      drivers: gpio stm32: set the ground for stm32f1x ll clock driver
      boards: move stm32f1xx based boards to LL based Clock control driver
      stm32f1xx: remove references to native driver
      stm32: clean up after completion of transition to ll Clock control
      stm32cube: Fix warning when SPI LL API is compiled
      pinmux: stm32: nucleo_f334r8: add support for SPI
      arch: arm: stm32l4: Add pin config for USART1 on PB6/PB7
      scripts: extract_dts_includes.py: nodes without address def generation
      scripts: extract_dts_includes.py: allow @ in node names
      scripts: extract_dts_includes.py: Fixup for pinmux nodes
      dts: common: yaml: Update uart yaml with new properties
      dts: arm: stm32: Add rcc node yaml descritpion
      dts: stm32: Add rcc node on stm32 socs
      dts: arm: Add clocks u(s)art on stm32 family
      dts: arm: st: Factorize STM32F1 series soc dtsi files
      dts: arm: st: Factorize STM32F3 series soc dtsi files
      dts: arm: st: Factorize STM32L4 series soc dtsi files
      script: extract_dts_includes: Add cell prefix to interrupt-names
      arch: stm32: l4: factorize HAS_STM32CUBE
      CODEOWNERS: update for stm32 arch, drivers, dts and disco_l475_iot1
      dts: arm: stm32: Add pinmux bindings and yaml
      arch: arm: stm32l4: Rework pinmux driver
      dts: arm: stm32l4: add pinctrl node and pins configurations
      arch: stm32f1: rework pinmux driver
      arch: arm: stm32f4: Rework pinmux handler
      arch: arm: stm32f3: Rework pinmux handler
      dts: arm: stm32f4: Add pinctrl node and uart pin information
      dts: arm: stm32f3: Add pinctrl node and uart pin configurations
      dts: arm: stm32f1: Add pinctrl node and uart pin information
      drivers: pinmux: stm32: Clean up after rework
      dt-bindings: pinctrl: fix stm32 pin configuration comments

Erwin Rol (24):
      boards: arm: olimex_stm32_e407: Initial Olimex STM32-E407 BSP
      net: ipv4: fix icmp checksum calculation
      net: app: fix typo
      net: app: prevent setting semaphore limit to 0
      drivers: stm32: random: Initial STM32 random number generator driver
      samples: random: Add sentinel to check for buffer overflows
      driver: eth_stm32_hal: Initial STM32 HAL based Ethernet driver
      pinmux: stm32: directly return error if stm32_get_pin_config fails.
      pinmux: stm32: add ethernet controller pins
      board: olimex_stm32_e407: update pinmux config for ethernet interface
      driver: eth_stm32_hal: disable hardware multicast filtering
      driver: eth_stm32_hal: make phy address configurable
      samples: net: http_server: Add olimex_stm32_e407 project config file
      arch: arm: stm32: f3/f4/l4: write output speed to hardware register
      drivers: pinmux: stm32: make sure macro argument is used correctly
      dts: olimex_stm32_e407 update uart pinmux configuration
      board: olimex_stm32_e407: set default gpio ports
      board: olimex_stm32_e407: fix compile bug due to pinmux rework
      drivers: pinmux: stm32f4: fix ethernet pin configs
      board: olimex_stm32_e407: fix default 48MHz clock divisor
      arm: support for stm32f405 SOC
      boards: arm: olimex_stm32_p405: Initial Olimex STM32-P405 BSP
      boards: arm: olimex_stm32_e407: small documentation updates
      arm: support for stm32f417 SOC

Florian Vaussard (10):
      nucleo_f413zh: Remove imaginary config from defconfig
      stm32f4: mpu: Add support for 1.5MB Flash / 320kB SRAM variants
      nucleo_f413zh: Enable MPU
      nucleo_f413zh: Add pinmux for PWM2_CH1
      samples: blink_led: Add support for STM32F413
      arm: stm32f4: Add basic support for STM32F412
      stm32f4: Add STM32F412 Nucleo board
      samples: blink_led: Add support for STM32F412
      spim_nrf52: Fix fall-through in switch statement
      spim_nrf52: Prevent glitch on CS line in spim_nrf52_init()

Geoff Gustafson (2):
      net: context: Use K_NO_WAIT instead of 0 for timeout
      ext qmsi: Fix underflow in adc sample delay

Geoffrey Le Gourriérec (9):
      arm: Modify linker script to accomodate need for flash footer.
      drivers: serial: uart_stellaris: Remove UART_IRQ_FLAGS
      uart: Use DTS labels for Stellaris driver.
      arm: Add support for TI's CC2650 SoC.
      sensortag: Add TI's SensorTag board.
      cc2650: Add GPIO driver.
      cc2650: Add pinmux driver.
      samples: gpio: Add support for SensorTag board.
      boards: sensortag: Add documentation.

Gil Pitney (8):
      ext: simplelink: Update HAL for CC3220sf to version 1.40.00.03
      ext: simplelink: Import TI SimpleLink SDK host driver for CC3220SF
      ext: simplelink: Enable build of the SimpleLink host driver.
      cc32xx: Redefine CMSIS IRQn_Type enum to unsigned int
      ext: simplelink: Add SimpleLink DPL porting layer to Zephyr
      ext: simplelink: Enable SimpleLink to use Zephyr __errno
      cc3200: Remove TI cc3200 SOC and LaunchXL board support
      Revert ""ext: simplelink: Import TI SimpleLink SDK host driver for CC3220SF""

Harry Jiang (2):
      dts: 96b_carbon: Fix the model name and compatible
      sensor: lps22hb: fix the pressure sensor fractional value

Huaqi Fang (11):
      arc: Remove unused backslash in makefile of arc em9d
      boards: em_starterkit: Add board firmware version config option
      arc: em7d: Add support for em starterkit 2.2 EM7D
      arc: em7d: Clean up arch/arc/soc/em7d/soc.h
      arc: em9d/em11d: Modify and cleanup soc.h
      arc: em9d/em11d: Update default configurations
      arc: em7d: Report error when build for 2.3's em7d
      boards: em_starterkit: Move peripheral configs from soc to board level
      doc: em_starterkit: add EM Starter Kit 2.2 support
      doc: em_starterkit: updated according to pull request #1017
      doc: em_starterkit: Fix doc issue reported by shippable

Inaky Perez-Gonzalez (7):
      tc: remove */defaults.tc
      uart_esp32: alter the uart.h include order to avoid warning
      boot: add CONFIG_BOOT_DELAY option
      doc/linux: recommend install pip3 from distro packaging
      doc/linux: pip installs in user area vs system wide
      build: workaround build bug in tests
      sanitycheck: validate YAML files w/ schemas files

Ivan Grokhotkov (2):
      xtensa: esp32: place .rodata into DRAM
      xtensa: esp32: configure default UART using ROM functions

Jaganath Kanakkassery (2):
      Bluetooth: SDP: Fix possible out of bound memory access
      Bluetooth: L2CAP: Fix bt_l2cap_chan_send() API doc

Jean-Paul Etienne (2):
      riscv32: fixed context restore upon exiting ISR
      tests: crypto: include back riscv32 arch for ecc_dh, ecc_dsa and mbedtls

Jens Peter Schroer (1):
      drivers: serial: uart_fe310: fix function definiton name for UART1 IRQ

Johan Hedberg (53):
      samples: microbit/pong: Add initial draft of a pong game
      samples: microbit/pong: Add BLE-based multiplayer support
      samples: microbit/pong: Add basic sound support
      Bluetooth: Remove support for NBLE
      Bluetooth: AVDTP: Remove dead code
      Bluetooth: Fix missing test for BLUETOOTH_CONN with DLE
      Bluetooth: Add kernel call stack analysis upon disconnection
      samples: microbit/pong: Analyze kernel stacks periodically
      samples: microbit/pong: Increase ISR stack size
      samples: microbit/pong: Filter out spurious button presses
      samples: microbit/pong: Fix refreshing display upon disconnect
      Bluetooth: ATT: Improve response logging
      Bluetooth: ATT: Fix canceling ATT timeout upon response
      samples: microbit/pong: Fix disabling sound when ending game
      samples: microbit/pong: Disable advertising when connected
      drivers/display: mb_display: Use 4 ms refresh timer
      samples: boards/microbit: Use 250 ticks per second for smooth display
      Bluetooth: L2CAP: Remove redundant checks for chan->ops
      net: buf: Move net_buf_pool objects to dedicated linker area
      Bluetooth: conn: Add pending tx before calling bt_send()
      Bluetooth: Move PRNG initialization a bit later in HCI init
      Bluetooth: tests: Fix left-over issues from bt_gatt_service() removal
      Bluetooth: shell: Fix incorrect #define
      Bluetooth: Fix KEEP_ADVERTISING flag treatment in bt_le_adv_stop()
      Bluetooth: Introduce new BT_LE_ADV_OPT_ONE_TIME advertising option
      Bluetooth: hci_ecc: Use ATOMIC_DEFINE() for the flags
      Bluetooth: monitor: Remove interrupt locking from monitor_console_out()
      Bluetooth: tests: Remove unused prj_nimble.conf files
      Bluetooth: Kconfig: let MAX_PAIRED be 0 if SMP is not supported
      Bluetooth: GATT: Reorder bt_gatt_ccc_cfg to eliminate padding
      Bluetooth: GATT Introduce BT_GATT_CCC_MAX helper define
      Bluetooth: Clean up struct bt_conn
      Bluetooth: conn: Switch order of tx_notify & tx_queue
      Bluetooth: Fix bogus decoding of 8-bit num_handles as 16-bit
      Bluetooth: conn: Fix notifying all pending tx packets in send_frag()
      Bluetooth: drivers: Make RX thread priority consistent
      Bluetooth: Mesh: Add initial implementation
      Bluetooth: Mesh: Fix advertising thread initialization
      Bluetooth: samples/mesh: Disable unnecessary debug logs
      Bluetooth: samples/mesh: Update generic nRF51 16k configuration
      Bluetooth: hci_ecc: Convert to new uECC API
      Bluetooth: hci_ecc: Fine-tune thread stack size
      Bluetooth: samples/mesh: Increase GATT TX buffer count
      Bluetooth: Mesh: Provisioning: Always allow Failed PDU
      Bluetooth: Mesh: Health: Fix Current Status encoding
      Bluetooth: Mesh: Fix pointer signedness compiler warnings
      Bluetooth: Mesh: Fix duplicate const declarations
      Bluetooth: samples/mesh_demo: Fix tune generation with sharp notes
      Bluetooth: Kconfig: Rename CONFIG_BLUETOOTH_* to CONFIG_BT_*
      Bluetooth: Mesh: Fix alignment issue resulting from Kconfig change
      drivers/display: mb_display: Fix struct member alignment
      Bluetooth: Clean up address related definitions
      Bluetooth: Use higher RX_BUF_LEN when Mesh Proxy protocol is used

Johann Fischer (12):
      samples: wpanusb: remove unnecessary condition for ccflags
      tests: dma: fix chan_blen_transfer
      drivers: usb: use generic option name for log level
      arch: intel_quark: use DW device driver when USB is selected
      samples: dfu: fix usb configuration descriptor length
      samples: cdc_acm: use Arduino 101 as default board
      samples: usb: add usb.rst and README.rst for CDC ACM sample
      drivers: mcr20a: minor fixes and correction of the copyright header
      drivers: mcr20a: allow use the driver with KW2xD devices
      drivers: dma: restructure dma drivers Kconfig
      drivers: dma: add Log level option to Kconfig
      tests: dma: cleanup and add loglevel configuration

John Andersen (3):
      samples: net: mqtt_publisher: fixed formatting
      samples: net: Multiple instances of QEMU
      samples: net Documented QEMU_INSTANCE usage

Jorge Ramirez-Ortiz (8):
      ext: hal: stm32f1x and stm32f4x: disable i2c HAL
      drivers: i2c: stm32 LL F1/F4 (v1) STM32 F3/L4X (v2)
      boards: arm: carbon/l475/f401re/olimexino: enable I2C
      stm32cube: build stm32xxx_ll_spi if CONFIG_SPI
      pinmux: stm32f4: Add SPI1 pins on PA4, PA5, PA6 & PA7
      pinmux: stm32f4: Add SPI2 pins on PB12, PB13, PB14 & PB15
      spi/api: extend with vendor specific configs
      pinmux: stm32: nucleo_f401re: Add support for SPI

Jukka Rissanen (174):
      net: http: Add timeout to HTTP server response
      sample: net: http: Add Basic auth support to server sample
      net: zoap: Fix NULL pointer access
      tests: net: zoap: Add path uri matching tests
      net: zoap: Remove extra null checks
      net: Print characters in hexdump
      net: pkt: Handle out-of-mem case properly
      net: ipv6: Skip unknown options in NS message
      net: http: Handle HTTPS connection closing gracefully
      samples: net: mbedtls_dtlsclient: Fix compile issues
      samples: net: mbedtls_dtlsclient: Fix testcase.ini
      samples: net: coaps_client: Fix compile issues
      samples: net: coaps_client: Fix testcase.ini
      net: ipv6: Default reassembly timeout set to 5 sec
      net: ipv6: Memory leak during fragment reassembly
      net: ipv6: Fix the IPv6 packet fragmentation sending
      net: ipv6: Fix fragmentation cancellation
      net: ipv6: Make max number of fragmented pkt configurable
      tests: net: ipv6: Test IPv6 fragmentation sending
      net: shell: Enhance IPv6 fragmentation debugging prints
      net: http: Parsing state was not cleared
      samples: net: zperf: Fix llvm compiler warnings
      samples: net: dtls_client: Fix Coverity warning
      samples: net: http_client: Increase the number of buffers
      net: http: Use random source port when connecting
      net: http: Avoid unnecessary net_pkt error print
      net: tcp: Timeout memory allocations
      net: https: Allow mbedtls debugging for https-server
      samples: net: Fix README.rst file documentation
      net: http: Move heap init into net/lib/http/http.c
      net: http: Add HTTPS client support
      sample: net: Add https-client sample application
      net: context: Add debug print when context is freed
      net: context: Print error code if sending fails
      net: http: Collect HTTP server connection information
      net: shell: Show HTTP connection information
      net: shell: Add HTTP server connection monitoring
      net: tcp: Check pkt before sending RESET
      net: http: Connection close fix if old connection is active
      net: context: Init context state after unref
      samples: net: echo-client: Fix compile error
      tests: net: ipv6_fragment: Fix llvm compiler warning
      net: pkt: Fix net_pkt_split()
      net: context: Close connection fast if TIME_WAIT support is off
      tests: net: buf: Run the net_buf tests automatically
      tests: net: ipv6: Fix tests and run them automatically
      tests: net: mld: Fix tests and run them automatically
      tests: net: tcp: Fix tests and run them automatically
      tests: net: context: Do not print error for passed test
      ext: lib: mbedtls: Enable and set heap size at device startup
      net: http: Remove mbedtls heap setting from http library
      samples: net: mbedtls: Fix server compilation
      net: app: Create support for network application API
      net: samples: Convert echo-server to use network app API
      net: samples: Convert echo-client to use network app API
      samples: net: wpan: No need to define IP addresses
      samples: net: http: Remove net_app_init() calls
      samples: net: https: Increase the RAM for client and server
      ext: lib: mbedtls: Add Kconfig option to enable mbedtls debugging
      ext: lib: mbedtls: Optimize example config for Zephyr
      net: context: Remove useless asserts when setting net_buf pools
      net: app: Fix dual IPv4 and IPv6 support
      tests: net: ip-addr: Fix null pointer access in the test
      net: route: Do not try to del null route
      net: route: Do not try to access null link layer address
      net: utils: Rework the IP packet checksum calculation
      net: utils: Helper to check if protocol header fits in fragment
      net: ipv6: Handle PAD1 extension header properly
      net: icmp: Remove NET_ICMP_HDR() macro and direct access to net_buf
      net: udp: Remove NET_UDP_HDR() macro and direct access to net_buf
      net: tcp: Remove NET_TCP_HDR() macro and direct access to net_buf
      net: Avoid printing non-error cases when parsing packet
      samples: net: zperf: Add net tag
      net: Fix NULL pointer access
      net: tcp: Fix passive close ACK timer
      net: tcp: Add FIN timer when doing active close
      tests: net: 6lo: Remove CONFIG_MAIN_STACK_SIZE setting
      net: ipv6: Increase default multicast address count to 3
      net: tcp: Fix sequence number validator
      net: Comment false positives reported by Coverity
      net: arp: Do not try to access NULL pointer
      net: ipv6: Fragmentation was accessing NULL pointer
      net: Fix connectivity issues if only UDP or TCP is enabled
      net: context: Clarify the callback API documentation
      samples: net: coaps_server: Increase mcast addresses
      net: if: Check in delete addr if delayed work needs cancelling
      net: app: Setup IEEE 802.15.4 during init
      tests: net: LLVM build warning from tests/net/udp
      tests: net: LLVM build warning from tests/net/dhcpv4
      net: Add missing __cplusplus checks to includes
      net: tests: Enable net tests for all suitable platforms
      net: route: Check null pointer for neighbors and routes
      tests: net: trickle: Fix the Trickle parameters
      net: trickle: Misc changes
      net: shell: Do not access NULL pointer if interface is down
      net: if: Delay IPv6 DAD if network interface is down
      net: slip: Clarify slip settings in Kconfig
      net: http: Add context net_buf pool support to HTTP server
      net: tcp: Do not try to print TCP error for 6lo packet
      samples: net: http_server: Use net_buf context pool for TX
      samples: net: http_server: Remove QEMU memory setting
      samples: net: http_server: Set QEMU flags for Bluetooth connection
      net: http: Add context net_buf pool support to HTTP client
      samples: net: http: client: Use net_buf context pool for TX
      samples: net: http: client: Set QEMU flags for Bluetooth connection
      samples: net: http: client: Enable Bluetooth if configured
      samples: net: http: Enable compile tests with Bluetooth config
      samples: net: Remove extra startup thread
      samples: net: irc-bot: Fix Kconfig warning
      net: doc: Add missing defgroups to network header files
      net: shell: Remove net_shell_init() as it is not needed
      ext: lib: mbedtls: Add example config for DTLS support
      doc: net: Add information about net-app API
      net: app: Add DTLS support
      samples: net: echo-server: Add DTLS support
      samples: net: echo-client: Add DTLS support
      net: app: Add debugging support to get net_app instances
      net: shell: Add command to get info about net-apps
      net: rpl: Status code was incorrectly checked in MRHOF link cb
      net: rpl: RPL route entry was fetched too late
      net: dns: Check address family when initializing
      net: if: Check return value of k_poll() when sending data
      net: rpl: Comment Coverity false positive when forwarding DAO
      net: sockets: Comment Coverity warning about unchecked values
      net: rpl: Remove dead code when updating IPv6 HBHO
      net: trickle: Do clock wrap check properly
      net: rpl: Do not access NULL parent
      net: rpl: Make sure parent is found when processing DIO msg
      net: rpl: Do not probe parent that is not our neighbor
      net: icmpv4: Calculate start of ICMPv4 echo-req properly
      samples: net: Some apps were missing IPv6 address settings
      samples: net: Remove IEEE 802.15.4 sample setup
      new: app: Fix compile error if using newlib
      net: Fix compile warnings
      http: server: Add function to send a chunk of data
      samples: net: zoap_server: Check IPv6 address add return value
      net: if: Add helper to return interface of given type
      net: if: Helper to return first IEEE 802.15.4 interface
      net: rpl: DAO message was discarded too early
      net: rpl: Repair root functions are made global
      net: rpl: Fix unused variable warnings
      net: rpl: Send DAO-ACK if we are the root node
      net: rpl: Add helper to return parent information
      net: shell: Add command to return RPL information
      net: shell: Fix the output of route command
      net: shell: Fix neighbor printing for IEEE 802.15.4 networks
      net: ieee802154: Use proper network interface in shell
      samples: net: ieee802154: Fix compile error
      net: Fix indentation issues
      doc: net: Add networking changes to 1.9 release note
      net: Fix LLVM compiler warnings
      net: app: Fix for net_app_get_net_buf()
      net: app: Do not try to set ANY address to interface
      net: l2: Declare Bluetooth and Offload L2 drivers public
      net: shell: Print network interface type
      net: shell: Fix RPL parent list output print
      net: rpl: Add more debug prints when sending messages
      net: rpl: Add default interface type setting to Kconfig.rpl
      net: rpl: Add Kconfig option for specifying used IPv6 prefix
      net: nbr: Use the real size of the neighbor pool
      net: rpl: Allow fine tuning of parent count
      net: pkt: Fix the log domain
      net: tcp: Make do_ref_if_needed() a macro
      net: http: Yield after sending response in server
      net: tcp: Cleanup TCP backlog when releasing context
      net: tcp: Set the TCP sent flag after really sending pkt
      net: tcp: Add more debugging to TCP code
      net: tcp: Only do ref when resending if we could send the packet
      net: tcp: Remove unused variable
      net: tcp: Do not re-send already sent packets
      net: tcp: Send data only in established state
      net: shell: Print more TCP pending packet information
      net: shell: Fix column alignment in net mem command
      net: pkt: Add CONFIG_NET_DEBUG_NET_PKT_ALL option

Jun Li (1):
      stm32f4: Add STM32F429I-DISC1 board

Justin Watson (5):
      arch: arm: Fix SoC issues with Atmel SAM4S series.
      boards: arm: arduino_due: Added doc. image for the Arduino Due.
      boards: arm: Added doc. image for the SAM E70 Xplained.
      arm: dts: Modified Atmel SAM family processor's UART to DTS.
      arch: arm: Fixed SAM E70 UART DTS.

Kumar Gala (70):
      toolchain.gccarmemb: Fix support for where to find newlib
      boards: stm32373c_eval: fix trailing whitespace in docs
      tests: benchmarks: footprint: fix tag typo
      tests: benchmarks: footprint: build on ARM
      tests: benchmarks: footprint: really enable floating point on arm
      arm: Add build time consistency check for irq priority defines
      doc: update sanitycheck doc to clarify some details
      Bluetooth: Fix use of uint32_t in nRF5 radio timings abstractions
      spi: Cleanup use of C99 types
      Bluetooth: Cleanup use of C99 types
      flash: stm32l4x: Cleanup use of C99 types
      timer: xtensa_sys: Cleanup use of C99 types
      clock: stm32: Cleanup use of C99 types
      samples: coaps_server: Fix platforms to build coap_server test on
      boards: 96b_nitrogen: Add support for flash/debug with pyOCD
      scripts: bossa-flash.sh: fix variable usage
      scripts: pyocd.sh: Add support for passing board_id to pyocd commands
      board: frdm_k64f: allow overriding default debug/flash scripts
      boards; cc2650_sensortag: Get building with sanitycheck
      scripts/sanitycheck: split out log from config-sanitycheck
      serial: introduce SERIAL_SUPPORT_INTERRUPT Kconfig option
      samples: Fix filtering on UART_CONSOLE
      serial: nsim: Add missing SERIAL_HAS_DRIVER in Kconfig
      tests: shell: Filter on UART_CONSOLE support to enable more boards
      tests: boot_time: cleanup boot_time test to work on ARM
      samples: hello_world: remove min_ram requirement
      tests: tickless: fix building of test
      samples: nfc_hello: limit to uarts that support interrupts
      i2c: stm32: Cleanup how we enable the specific I2C driver
      i2c: stm32: fix build issue
      boards: arm: stm32f3_disco: update yaml to spec ram
      tests: crypto: sha256: limit to systems with >48k of memory
      sanitycheck: fix depends_on when multiple dependencies
      boards: introduce usb_device support tag
      samples: mark samples that require usb_device support
      Introduce a CODEOWNERS file for auto-assign of review by GitHub
      i2c: remove I2C Slave Read config
      board: cc2650_sensortag: Add zephyr,console reference to device tree
      devicetree: Generate CONFIG_UART_CONSOLE_ON_DEV_NAME from dt
      ci: compliance: increase verbosity on gitlint
      scripts/extract_dts_includes: extract_reg_prop handle cells being 0
      dts: i2c: Add missing #address-cell & #size-cell properties
      i2c: Fix missing Kconfig !HAS_I2C_DTS dependencies
      i2c: mcux: Convert to supporting device tree
      dts: cleanup usage of ""flash"" and ""sram"" compatible
      dts: Add missing compatible ""mmio-sram""
      board: arduino_101: remove unused !HAS_DTS bits
      dts: fix Kconfig enablment of BLUETOOTH_MONITOR_ON_DEV_NAME
      arm: dts: cleanup uart related Kconfig options
      tests: net: limit tests to boards with enough memory to build them
      board: hexiwear_kw40z: Fix I2C dts info
      tests: net: second pass at cleanup tests to build on all platforms
      scripts/extract_dts_includes.py: Reduce code for handling chosen names
      scripts/extract_dts_includes.py: Fix typo in device name list
      arm: nxp: mcux uart: Get IRQ info from DTS
      dts: arm: nxp: cleanup formatting
      arm: nxp: mcux lpuart: Get IRQ info from DTS
      dts: stm: stm32f469: Remove duplicated setting of pin-controller reg
      dts: Make Kconfig options invisible to user
      ztest: reduce MAIN_STACK_SIZE stack to 512 bytes
      ext: simplelink: host driver: depend on multithreading
      tests: json: only build if newlib isn't configured
      i2c: Add define for bit position/shift of I2C SPEED settings in config
      i2c: Cleanup dts clock-frequency property usage
      i2c: Add helper function to map from bitrate values to zephyr cfg
      dts: nxp: Fix formatting of fixup files
      i2c: mcux: Remove usage of CONFIG_I2C_x_DEFAULT_CFG
      i2c: stm32: Remove usage of CONFIG_I2C_x_DEFAULT_CFG
      arm: nrf: Fix I2C_0_DEFAULT_CFG settings
      x86: dts: use BOARD Kconfig symbol not SOC for arduino_101

Leandro Pereira (36):
      drivers: spi_mcux_dspi: Fix unlikely but possible division by zero
      tests: clock: Initialize d64 value
      ieee802154_shell: Only accept channels within expected range
      samples: mqtt_publisher: Try connecting a few times before giving up
      net: tcp: Limit number of segment retransmissions
      samples: dns_resolve: Clarify documentation about DNS configuration
      lib/json: Fix build warnings (-Wpointer-sign) with LLVM/icx
      net: lib: dns: Check return value of net_context_recv()
      net: tcp: Remove fin_queued flag from struct net_tcp
      samples: net: Do not assume TCP connection was successful
      Support for Espressif SDK (ESP32, etc)
      arch: xtensa: Add ESP32 SoC
      boards: xtensa: Add ESP32 board
      drivers: esp32: Add minimal UART driver based on ROM routines
      libc: minimal: Add empty sys/cdefs.h
      arch: xtensa: Use Zephyr configuration options
      soc: esp32: Define __start as a C function
      esp32: Use esptool.py to flash with 'make flash'
      boards: esp32: Do not use undefined CONFIG_BOARD_XTENSA
      arch: xtensa: Use CONFIG_SIMULATOR_XTENSA to set XT_{BOARD,SIMULATOR}
      scripts: Convert gen_offset_header to Python
      drivers, net: Clean up semaphore initialization
      boards: doc: Add ESP32 documentation
      crypto: Update TinyCrypt to 0.2.7
      tests: crypto: Fix ccm_mode test after updating TinyCrypt to 0.2.7
      tests: crypto: Update ECC Diffie-Hellman and DSA tests
      drivers: crypto: Fix TinyCrypt shim
      pinmux: Allow up to 6 functions
      drivers: pinmux: Add pin multiplexer driver for ESP32
      drivers: gpio: esp32: Add ESP32 GPIO driver
      drivers: watchdog: Implement ESP32 watchdog driver
      drivers: random: Add ESP32 random number generator driver
      samples: drivers: gpio: Make the sample work with ESP32
      arch: xtensa: Remove mentions of dynamic interrupt settings
      arch: xtensa: Convert Xtensa port to use gen_isr_table
      arch: xtensa: Move exception table to xtensa_intr.c

Loic Poulain (1):
      boards: arm: nrf52_blenano2: Add embedded LED definition

Luiz Augusto von Dentz (70):
      Shell: Add initial code for bt shell module
      Shell: bt: Add command supported by btshell
      Bluetooth: shell: Use CONFIG_BLUETOOTH_SHELL
      Shell: bt: Fix build without CONFIG_BLUETOOTH_GATT_CLIENT
      Bluetooth: ipsp: Enable CONFIG_BLUETOOTH_SHELL
      Shell: Add SHELL_REGISTER_WITH_PROMPT
      Shell: bt: Use SHELL_REGISTER_WITH_PROMPT
      net: shell: Move SHELL_REGISTER out of net_shell_init
      net: shell: Remove extra help command
      Bluetooth: GATT: Add proper documentation for bt_gatt_notify attribute
      Bluetooth: GATT: Fix not queuing writes to CCC
      Bluetooth: Shell: Add shell subdir if CONFIG_BLUETOOTH_SHELL=y
      Bluetooth: Shell: Split GATT command to its own file
      Bluetooth: Shell: Fix help of gatt-write-without-response
      Bluetooth: Shell: Remove gatt-write-without-response-repeated
      Bluetooth: Shell: Fix help of gatt-write-signed
      Bluetooth: Shell: Rework gatt-write-signed
      shell: Add shell_exec
      shell: Add define to _SHELL_H_
      shell: Return proper errors if the command fails
      shell: Adjust arguments when executing a command of different module
      net: shell: Remove code adjust arguments
      tests: Add shell tests
      Bluetooth: ATT: Fix adding timeout for NULL request
      slist: Make sys_slist_find_and_remove return bool
      Bluetooth: Remove CONFIG_BLUETOOTH_GATT_DYNAMIC_DB
      Bluetooth: Kconfig: Add CONFIG_BLUETOOTH_DEVICE_APPEARANCE
      Bluetooth: GATT: Add GAP service by default
      Bluetooth: GATT: Add GATT service by default
      Bluetooth: GATT: Indicate Service Changed when a service is added
      Bluetooth: GATT: Add bt_gatt_register_service
      Bluetooth: GATT: Add bt_gatt_unregister_service
      Bluetooth: Shell: Add gatt-unregister-service command
      Bluetooth: Shell: Add gatt-show-db command
      Bluetooth: GATT: Rename bt_gatt_unregister_service
      Bluetooth: GATT: Fix aligment of bt_gatt_ccc_cfg and _bt_gatt_ccc
      net: bt: Check return of bt_conn_get_info
      Bluetooth: GATT: Rework Service Changed indications
      Bluetooth: Shell: Implement support for gatt-metrics off
      Bluetooth: Shell: Add second vendor service
      Bluetooth: ipsp: Disable debug options
      Bluetooth: L2CAP: Don't reuse RX buffers to respond
      Bluetooth: ipsp: Remove requirements section
      net: Don't enable SLIP driver if Bluetooth is enabled
      Bluetooth: L2CAP: Store sent data in the correct buffer
      Bluetooth: GATT: Improve notification code
      Bluetooth: GATT: Fix not setting SC_INDICATE_PENDING
      Bluetooth: GATT: Indicate service changes when reconnecting
      net: bt: Add advertise management command
      net: bt: app: Add NET_APP_BLUETOOTH_NODE option
      net: echo_server: Use CONFIG_NET_APP_BLUETOOTH_NODE
      net: http_server: Use CONFIG_NET_APP_BLUETOOTH_NODE
      net: echo_client: Remove dependency on ipss sample service
      net: http_client: Remove dependency on ipss sample service
      net: http_clients: Remove dependency on ipss sample service
      net: mqtt_publisher: Use CONFIG_NET_APP_BLUETOOTH_NODE
      net: zoap_client: Remove dependency on ipss sample service
      net: zperf: Remove dependency on ipss sample service
      net: zoap_server: Use CONFIG_NET_APP_BLUETOOTH_NODE
      net: led_demo: Remove dependency on ipss sample service
      Bluetooth: ipsp: Use CONFIG_NET_APP_BLUETOOTH_NODE
      tests: shell: Fix string not null-terminated
      queue: Add k_queue_remove
      tests: queue: Add tests for k_queue_remove
      queue: Use k_poll if enabled
      work: Convert usage of k_fifo to k_queue
      work_q: Make k_delayed_work_cancel cancel work already pending
      tests: work_q: Add test for k_delayed_work_cancel
      doc: Add Bluetooth host changes to 1.9 release note
      net: common: Don't build ipss.c

Marcel Holtmann (3):
      doc: Add Bluetooth HCI vendor specification
      Bluetooth: controller: Add skeleton for vendor HCI commands
      boards: arm: Add flash target for BLE Nano 2

Marti Bolivar (48):
      stack.h: add missing include guard
      lib: json: fix JSON_OBJ_DESCR_ARRAY Doxygen example
      tests: json: fix sense of test result string
      lib: json: add JSON_OBJ_DESCR_*_NAMED variants
      tests: json: test JSON_OBJ_DESCR_*_NAMED
      lib: json: clarify JSON_OBJ_DESCR_ARRAY usage
      lib: json: fix arr_encode()
      lib: json: fix arr_parse()
      lib: json: add helper macros for arrays of objects
      tests: json: add tests for arrays of objects
      dts: i2c: fix build issue by defaulting HAS_DTS_I2C to n
      dts: move frdm_k64f flash partitions from SoC dtsi
      dts: frdm_k64f: make application state partition a reserved area
      dts: nrf52840_pca10056: add flash partitions
      dts: 96b_nitrogen: add flash partitions
      dts: 96b_carbon: add flash partitions
      spi: stm32: fix spi_stm32_init()
      spi: dw: fix spi_dw_init()
      dts: flash: remove explicit app state partitions
      build: export flashing and debugging info, when present
      build: export generated DTS configuration
      drivers: ethernet: mcux: fix build warning
      build: allow user to specify DTC_OVERLAY_FILE directly
      pinmux: stm32: 96b_carbon: Add support for SPI
      tests: spi_loopback: fix typos
      tests: spi_loopback: add 96b_carbon support
      tests: spi_loopback: log start/end of test at INF level
      tests: spi_loopback: improve error logging
      drivers: spi: fix typo
      drivers: spi: add SPI_OP_MODE_GET()
      drivers: spi: avoid undefined behavior
      drivers: spi: report synchronous completion status
      drivers: spi: stm32: add error checking to IRQ mode
      drivers: spi: stm32: fix hardware NSS management
      drivers: spi: stm32: fix bugs in polled mode
      drivers: spi: stm32: factor out completion routine
      drivers: spi: stm32: fix SPI being left on in slave mode
      drivers: spi: stm32: remove extraneous unaligned macros
      drivers: spi: stm32: add error checking to polled mode
      drivers: spi: stm32: fix transmit/receive procedure
      CODEOWNERS: update drivers/spi/spi_ll_stm32.*
      Bluetooth: Kconfig: delete stray double quote
      Bluetooth: hci: spi: abstract out legacy SPI API
      Bluetooth: hci: spi: add support for new SPI API
      boards: 96b_carbon: provide BT SPI master configuration
      boards: 96b_carbon_nrf51: provide BT SPI slave configuration
      Bluetooth: ipsp: use sys_log
      doc: 96Boards Carbon: add Bluetooth setup docs

Maureen Helm (40):
      arm: nxp: mpu: Return constant number of mpu regions
      arm: nxp: mpu: Rework handling of region descriptor 0
      arm: nxp: mpu: Fix off-by-1 error in region index calculation
      arm: nxp: mpu: Fix region descriptor 0 attributes
      dts: Rename k64f-uart to kinetis-uart
      dts: Rename kw41z-lpuart to kinetis-lpuart
      dts: Rename k64f-pinmux to kinetis-pinmux
      dts: Rename k64f-gpio to kinetis-gpio
      dts: Rename k64sim to nxp,k64f-sim
      adc: Simplify Kconfig dependencies
      adc: Introduce multiple instance configs
      dts: Generate Kinetis adc settings from device tree
      adc: Introduce new mcux adc16 driver
      arm: nxp_kinetis: Enable the mcux adc16 driver for all Kinetis SoCs
      frdm_kw41z: Enable adc driver instance and pins
      frdm_kl25z: Enable adc driver instance and pins
      frdm_k64f: Enable adc driver instance and pins
      hexiwear_kw40z: Enable adc driver instance and pins
      hexiwear_k64: Enable adc driver instance
      hexiwear_k64: Enable the battery sense circuit
      tests: adc: Add support for freedom and hexiwear boards
      frdm_kw41z: Add pyocd target
      frdm_kw41z: Select flash/debug scripts based on OpenSDA firmware
      frdm_k64f: Select flash/debug scripts based on OpenSDA firmware
      frdm_kl25z: Select flash/debug scripts based on OpenSDA firmware
      hexiwear_k64: Select flash/debug scripts based on OpenSDA firmware
      hexiwear_kw40z: Select flash/debug scripts based on OpenSDA firmware
      doc: Update OpenSDA doc to reflect new OPENSDA_FW variable
      boards: Fix QEMU_TARGET config prompt and default
      dts: Generate Kinetis pwm settings from device tree
      pwm: Add shared configs for log level and instances
      pwm: Introduce new mcux ftm shim driver
      hexiwear_k64: Enable ftm driver instance and pins
      frdm_k64f: Enable ftm driver instance and pins
      nxp_kinetis: Switch default pwm driver to mcux
      pwm: Remove k64-specific driver and k20_sim.h
      samples: blink_led: Add support for hexiwear_k64
      samples: fade_led: Add support for hexiwear_k64
      samples: rgb_led: Add support for hexiwear_k64
      scripts: Run JLinkGDBServer in silent mode

Michael R Rosen (1):
      arc: fix balign position to properly 4byte align global vars

Michael Scott (18):
      arm: soc: nordic nRF52: Add MPU support
      arm: soc: nxp k6x: mpu: clarify magic numbers for UM/SM defines
      arm: soc: nxp k6x: mpu: add Bus Master 3 User Mode access bits
      samples: net: irc_bot: fix stack declarations
      net: app: allow IPv6 interface init to work with late IP assigment
      net: app: fix IPv6 init for late IP assigment
      misc/byteorder: add support for __bswap_64
      net: zoap: use message id for reply matching
      net: lwm2m: initial library support for LWM2M
      samples: lwm2m: initial sample for LWM2M client
      net: lwm2m: add IPSO support w/ temperature sensor object
      samples: lwm2m: add IPSO temperature object to LWM2M client
      net: lwm2m: add SPX Apache-2.0 license tag w/ Linaro copyright
      MAINTAINERS: add maintainer for LwM2M library / samples
      CODEOWNERS: add entries for LwM2M library / samples
      net: http: fix http client request ""Host"" header
      net: http: dont timeout on HTTP requests w/o body
      net: http: allow HTTP_NETWORK_TIMEOUT to be configured

Michał Kruszewski (6):
      Kconfig: Source Kconfig from Zephyr application directory.
      nrf5: uart: Add support for 300 and 600 baud rates.
      nrf5: spi: Mark SPI drivers as conforming to legacy SPI API
      test: spi: Use k_thread_abort to end asynchronous thread.
      spi context: Add function for getting single transfer buffers length.
      test: spi: Define asynchronous stack with K_THREAD_STACK_DEFINE.

Michel Jaouen (12):
      flash: stm32: fix for l4 writing wrong data
      flash: stm32: distinguish read/write for flash range valid
      arm: soc: stm32: make mpu f4 config useable for other family
      arm: soc: stm32: l4: add MPU capability for series
      boards: nucleo_l476rg: enable MPU
      boards: disco_l475_iot1: enable MPU
      arm: soc: stm32: f3: add MPU capability
      dts: disco_l475_iot1: add flash partition
      dts: nucleo_f401re: add partition support for bootloader
      arm: mpu: fix: align stack for mpu stack guard
      mpu_stack_guard_test: add more thread for test
      mpu_stack_guard_test: update log in README.rst

Nam Do (3):
      boards: arm: Add support for the VBLUno51 board
      boards: arm: Add support for the VBLUno52 board
      boards: arm: doc: Fix problems in nrf52_vbluno52 document

Nathan Loretan (1):
      drivers: spi: nRF5x: Fix clock polarity and phase config

Neil Armstrong (7):
      spi: add SPI driver for STM32 family
      boards: nucleo_l476rg: Document default SPI pinmux
      pinmux: stm32: nucleo_l476rg: Fix SPI Pinmux
      pinmux: stm32: nucleo_l432kc: Add SPI pins
      samples/spi: Make async test optional
      samples/spi: Permit specifying low test frequency
      samples/spi: Enable test on STM32 SoCs

Niranjhana N (25):
      tests: arm_irq_vector_table: convert to ztest
      tests: arm_runtime_nmi: convert to ztest
      tests: libs: convert to ztest
      tests: multilib: convert to ztest
      tests: xip: convert to ztest
      tests: aes: convert to ztest
      tests: cbc_mode: convert to ztest
      tests: ccm_mode: convert to ztest
      tests: cmac_mode: convert to ztest
      tests: ctr_mode: convert to ztest
      tests: ctr_prng: convert to ztest
      tests: ecc_dh: convert to ztest
      tests: ecc_dsa: convert to ztest
      tests: hmac: convert to ztest
      tests: hmac_prng: convert to ztest
      tests: mbedtls: convert to ztest
      tests: sha256: convert to ztest
      tests: icmpv6: convert to ztest
      tests: ip-addr: convert to ztest
      tests: arp: convert to ztest
      tests: mgmt: convert to ztest
      tests: mqtt_packet: convert to ztest
      tests: http_header_fields: convert to ztest
      tests: udp: convert to ztest
      tests: utils: convert to ztest

Patrik Flykt (6):
      zoap: Include net/net_ip.h when sockaddr is used
      net: context: Go back to LISTEN state when receiving RST
      net: tcp: Make initial sequence number calculation public
      net: tcp: Implement TCP backlog for incoming connections
      net: context: Add TCP SYN-ACK timer handling
      net: context: Remove tcp struct SYN-ACK timer handling

Paul Sokolovsky (46):
      subsys: console: Fix signed vs unsigned char issues.
      drivers/ethernet/eth_mcux: Fix extra PHY debug Kconfig name.
      tests: net: ipv6: Fix possible NULL pointer dereference behind a macro
      drivers/ethernet/eth_mcux: Fix selection of promisc mode IPv6 workaround
      drivers: serial: Clarification for uart_fifo_fill()/read() calls
      net: context: Operations on unused context should lead to EBADF.
      net: ip: Make struct in_addr::s_addr compatible with POSIX definition
      scripts: sanitycheck: Clean up help text.
      net: sockets: Bootstrap Sockets API implementation
      net: context, pkt: Changes for Sockets API
      net: sockets: Add configurable option to provide raw POSIX API names
      net: context: Allow to put context into FIFO at expense of user_data
      kernel: queue, fifo: Add peek_head/peek_tail accessors
      net: sockets: Implement bind(), connect(), listen(), accept()
      net: sockets: Add POSIX compat defines for inet_ntop, inet_pton
      net: sockets: Implement send()
      net: sockets: Implement recv() for STREAM sockets
      net: sockets: Implement recv() for DGRAM sockets
      net: sockets: Explicitly flush conn/pkt queue on close()
      samples: net: Add socket-based echo server example
      tests: net: Add test for Sockets API UDP socket/bind/connect/send/recv
      doc: boards: qemu: Mention support for SLIP networking
      samples: net: socket_echo: Add sample.yaml, update for net_app refactor
      net: context: Fix use of k_delayed_work_cancel with SYN backlog
      net: sockets: Implement non-blocking mode.
      net: context: connect: Make sure local end is bound before connecting
      net: http_server: Properly close network contexts.
      net: sockets: Implement poll() operation.
      samples: sockets: Add async echo server example
      samples: net: sockets: Move socket sample(s) under a subdir
      kernel: boot: Fix double prompt definition for CONFIG_BOOT_DELAY
      include: kernel: Fix use of K_POLL_MODE_INFORM_ONLY in docstring
      samples: bluetooth: ipsp: Bump max number of contexts
      net: sockets: Add docs for BSD Sockets compatible API.
      net: sockets: poll: Use prefixed POLL* constants.
      net: tcp: Allow to explicitly manage TCP receive window
      net: sockets: Manage TCP receive window
      samples: net: sockets: Switch to net_app auto-init
      net: sockets: Fix race condition with accept() call
      net: sockets: Check return value of k_poll()
      net: sockets: Move under ""Network Application Support"" heading
      Bluetooth: shell: gatt_read: Reset offset to 0
      Bluetooth: Increase CONFIG_BT_HCI_TX_STACK_SIZE for BT_SPI
      samples: net: sockets: Add READMEs for echo/echo_async samples
      Bluetooth: samples: ipsp: Fix crash on TCP connection closure
      net: sockets: Consistently use ""BSD Sockets compatible API"" moniker

Piotr Mienkowski (7):
      watchdog: atmel_sam: enable build for all SAM family
      drivers: serial: deprecate usage of atmel_sam3 driver
      arch: sam3x: Fix TWI pin naming
      arch: same70: Fix ERASE pin configuration
      boards: sam_e70_xplained: allow flashing via JTAG header
      drivers: Add I2S (Inter-IC Sound) driver API
      drivers: Add I2S (Inter-IC Sound) driver infrastructure

Punit Vara (13):
      scripts: convert helper scripts to python3
      tests: Remove camel case and fix coding style
      scripts: Fix string pattern on byte like objects error
      tests: critical: Convert testcase into ztest
      tests: errno: convert test case to use ztest
      tests: irq_offload: Convert test case to use ztest
      include: Add new sensor channel blue
      drivers: Add apds9960 sensor in polling mode
      samples: Add sample for APDS9960 sensor
      tests: dhcpv4: convert normal test to use ztest
      tests: neighbor: convert normal test to use ztest
      tests: ztest: remove confusing tc_start() in ztest framework
      doc: Add APDS9960 sensor driver in release note v1.9

Ravi kumar Veeramally (7):
      net: rpl: Update RPL header
      net: 6lo: Fix source address uncompression
      net: rpl: Fix byte order conversion of sender rank
      net: rpl: Fix byte order conversion while preparing message
      net: rpl: Fix invalid access of IPv6 nbr link metric
      net: rpl: Ignore consistent DIO messages
      net: rpl: Fix invalid config name

Ricardo Salveti (10):
      net: app: fix build when NET_DEBUG_APP is used with SYS_LOG_NET_LEVEL=1
      net: lwm2m: firmware: add Kconfig option for CoAP block size
      net: lwm2m: rd_client: handle forbidden errors
      net: lwm2m: engine: fix typo
      net: lwm2m: create common wrapper for net_context_sendto
      net: lwm2m: engine: add flag for separate response
      net: lwm2m: build sprint_token only when debug is enabled
      samples: Bluetooth: add HCI SPI raw handler sample
      Bluetooth: samples/hci_spi: increase BT_RX_BUF_COUNT to 10
      Bluetooth: Kconfig: fix default value and range for BT_RX_STACK_SIZE

Robert Chou (11):
      net: zoap: correct description of zoap_response_received()
      net: zoap: add missing response code for zoap_header_get_code()
      net: net_app: fix syntax error when accessing remote from default_ctx
      net: zoap: advance block context by checking M bit from block option
      net: lwm2m: rename CONFIG_NET_L2_BLUETOOTH to CONFIG_NET_L2_BT
      net: lwm2m: fix erroneous TLV write
      net: lwm2m: save accept format in observe_node_data
      net: lwm2m: fix registration content format and use plain/text
      net: lwm2m: do not expose security object
      net: lwm2m: do not report object when object instances available
      net: lwm2m: report resource type / content type at registration

Ruslan Mstoi (1):
      net: ipv6: Skip unknown options in NA message

Savinay Dharmappa (17):
      dts: x86: Add dts support for x86
      drivers: serial: Add device support for serial driver
      dts: arduino101: Add device tree support for arduino101 board
      samples: drivers/net: apps: Resolve Kconfig dependency
      tests: kernel: sprintf: Fix build warning.
      dts: x86: Add device tree support for quark_d2000 microcontroller
      dts: quark_d2000_crb: Add device tree support to mint valley
      devicetree: Generate BLUETOOTH_UART,UART_PIPE etc config from dt
      dts: arduino_101: Add zephyr,bt-uart, zephyr,uart-pipe to dt
      dts: frdmk_64f: Generate UART_PIPE config from device tree
      arch: quark_se: select config UART_QMSI_0 by default
      drivers: gpio: Fix Coverity static scan issues
      dts: tinytile: Add device tree support for tinytile board
      dts: quark_d2000: uart0 instance to be used for console
      dts: quark_d2000: fix build warning
      dts: x86: quark_se_c1000_devboard: Add device tree support
      drivers: gpio: Fix Coverity static scan issues

Sebastian Bøe (5):
      kconfig: serial: esp32: Make driver depend on SOC_ESP32
      doc: scripts: sanitycheck: s/ini/yaml/
      Kconfig: Move BLUETOOTH_HCI_RESERVE into subsys/bluetooth/host
      Kconfig: Move BT_WAIT_NOP into subsys/bluetooth/host
      Kconfig: Hide the ""Bluetooth Drivers"" menu entry when BT_CONTROLLER

Sharron LIU (5):
      tests: kernel: added tests for timeslice reset
      tests: kernel: added tests for k_mem_pool_alloc from isr
      samples: fixed typo in README.rst
      samples: static_lib: conditional assign BOARD (?=)
      samples: appdev: static_lib: added ""make flash""

Shiksha Patel (1):
      pinmux: pinmux_dev_k64 driver and related references are removed.

Siddharth Chandrasekaran (3):
      shell: Add 'exit' command to leave a module
      arm: stm32f1: Add support for STM32F103x8 SoC
      boards: arm: Add support for STM32 Minimum Development Board

Stephen Smalley (3):
      tests/ztest: Add ztest_test_pass()
      tests: Add a self-protection test suite
      tests: protection: add testcase.yaml

Timo Teräs (1):
      Makefile: explicitly disable PIE

Tomasz Bursztyka (12):
      api/spi: Change transceive functions signature
      ieee802154: Realign structure bitfields
      tests/ieee802154: Fix how is initialized the driver lock in l2 test
      tests/ieee802154: Fix a null pointer deferencing
      tests/ieee802154: Fix accessing unmapped memory area
      drivers/ieee802154: Fix licence headers in Kconfig files
      tests/zoap: Fix possible NULL pointer dereference
      tests/dns_resolve: Fix possible NULL dereference
      samples/zoap_server: Fix unchecked return value
      samples/crypto: Check error code everytime and improve logging
      drivers/crypto: Add mbedTLS shim crypto driver
      samples/crypto: Add mbedtls shim driver support

Tyler Baker (1):
      dts: arm: nrf52_blenano2: add flash partitions

Vinayak Kariappa Chettimada (88):
      Bluetooth: controller: Add HCI Tx buffer overflow return code
      Bluetooth: controller: Fix DLE crossover assert
      Bluetooth: controller: Handle Rej Ext Ind for Length Req PDU
      Bluetooth: Auto-update LE data length to max. supported
      Bluetooth: controller: Fix CSA#2 assert
      Bluetooth: controller: Fix failing fast encryption setup feature
      Bluetooth: shell: Fix scan on to use active scanning
      Bluetooth: controller: Add extra assert checks
      Bluetooth: controller: Explicitly compare radio event registers
      Bluetooth: shell: Add controller's ticker shell module
      arch: arm: Fix compile error on ARMv6-M SoCs with TICKLESS_KERNEL
      drivers: timer: Fix nRF RTC timer _timer_cycle_get_32
      Bluetooth: shell: gatt-write-without-response with repeat
      Bluetooth: controller: Cond. compile LE Encryption
      Bluetooth: controller: Restrict enc to 1M 27 bytes PDU on nRF51
      Bluetooth: controller: Fix non-scannable advertising mode
      Bluetooth: controller: Use the term scanner in place of observer
      Bluetooth: controller: Fix scanner context corruption
      Bluetooth: controller: Fix advertiser context corruption
      Bluetooth: controller: Remove scan_ prefixes in scanner struct
      Bluetooth: controller: Reduce ll_adv struct size
      Bluetooth: controller: Add functions to get active filter policy
      Bluetooth: controller: LE Advertising Extensions PDU structs
      Bluetooth: controller: LE Adv. Ext. non-conn non-scan w/o aux
      Bluetooth: shell: Add LE Adv. Ext. advx command
      Bluetooth: controller: Extended scan for nconn nscan w/o aux
      Bluetooth: shell: Add Extended Scan command
      Bluetooth: controller: Fix missing reset of direct adv state
      Bluetooth: controller: Add ll_adv_scan_state_cb callback
      Bluetooth: shell: Fix compile error with LL cmds included
      Bluetooth: controller: Fix ChSel bit be not used in ADV_EXT_IND
      Bluetooth: controller: Avoid adv data set on ADV_EXT_IND PDU
      Bluetooth: controller: Move scan response data swap outside tIFS
      Bluetooth: controller: Use find_lsb_set instead of custom ffs
      Bluetooth: controller: Fix conn context leak under directed adv
      Bluetooth: controller: Add connect ind PDU address fields check
      Bluetooth: controller: Fix directed adv timeout and disable
      Bluetooth: controller: nRF5 radio timings abstractions
      Bluetooth: controller: Add radio fast ramp feature
      Bluetooth: controller: Fix assert due to stale tick count
      Bluetooth: controller: Coding style and refactoring
      Bluetooth: controller: Do not skip one-shot tickers with slot
      Bluetooth: controller: Be fair when pre-empting a ticker
      Bluetooth: controller: Temporarily disable scan req notification
      Bluetooth: shell: Fix compile warnings when CONFIG_DEBUG=y
      Bluetooth: controller: Fix hardfault, out-of-range ticker access
      Bluetooth: samples: scan_adv: Select BROADCASTER and OBSERVER
      Bluetooth: controller: Fix scanner to use correct slot ticks
      Bluetooth: controller: Fix for scanner Rx window hang
      Bluetooth: controller: Fix missing re-initialization of ret_cb
      Bluetooth: controller: Increase ticker operations in thread mode
      Bluetooth: controller: Rename chl_* to chan_*
      Bluetooth: controller: Fix advertisement event lengths
      Bluetooth: controller: Fix first interval to be within +/-16us
      Bluetooth: Decrease Rx processing priority
      clock_control: nRF5x: Select 251-500ppm as default for 32kHz RCOSC
      Bluetooth: Add BUILD_ASSERT to check Tx and Rx thread priorities
      Bluetooth: controller: Fix slave conn. failed to be established
      Bluetooth: controller: Fix supervision timeout countdown
      Bluetooth: controller: Fix T_Terminate and other timeout calc.
      scripts: Fix size_report to use correct objdump and nm
      Bluetooth: controller: Revert fix for scanner Rx window hang
      Bluetooth: controller: Revert fix for assert due to stale tick
      Bluetooth: controller: Fix to use correct anchor for scanner
      Bluetooth: controller: Fix cond. mayfly priority check
      Bluetooth: controller: Fix slave latency enable at conn setup
      Bluetooth: controller: Fix master terminate procedure
      Bluetooth: controller: Implement Read/Write Auth Payload timeout
      Bluetooth: controller: Fix assert, reset ticker_id_prepare
      Bluetooth: controller: Fix assert on create connection
      Bluetooth: controller: Minor cleanup of enc pause impl.
      Bluetooth: controller: Fix access address generation
      Bluetooth: controller: Fix handling invalid control PDUs
      Bluetooth: controller: Fix for unexpected PDU during Enc setup
      Bluetooth: controller: Fix master rx-ing reject_ext_ind enc_req
      Bluetooth: controller: Fix slave sending reject_ext_ind
      Bluetooth: controller: Fix terminate procedure timeout
      Bluetooth: controller: Fix slave drift compensation
      Bluetooth: controller: Fix header complete timeout calculation
      Bluetooth: controller: Fix asymmetric PHY by using correct tIFS
      Bluetooth: controller: Fix PHY update with no change in PHY
      Bluetooth: controller: Fix a missing PHY Update event
      Bluetooth: controller: Fix missing procedure timeout on PHY_RSP
      Bluetooth: controller: Fix handling PHY upd diff proc collision
      Bluetooth: controller: Fix control and data Tx queue management
      Bluetooth: controller: Use random numbers in adv and enc setup
      Bluetooth: controller: Fix return type in hal/rand.c
      Bluetooth: controller: Add packet transmit time restrictions

Vincenzo Frascino (4):
      arm: core: mpu: Add core support to NXP MPU
      arm: soc: nxp k6x: Add Allow write on Flash
      arm: core: mpu: Add Allow write on Flash
      samples: mpu_test: Add Allow Flash Write config

Wayne Ren (3):
      arch: arc: add nested interrupt support
      arch: arc: Add mpu support
      arch: arc: apply STACK_GUARD_SIZE and optimize the mpu driver

Wojciech Bober (2):
      gitignore: Add .envrc file used by direnv to .gitignore
      net: http_server: Enable Bluetooth stack if configured

Xiaorui Hu (1):
      arm: armv6-m: Support relocating vector table

Yannis Damigos (24):
      pinmux: stm32 F1X/F3X/F4X: add I2C
      pinmux: boards: add I2C to carbon/lf33fr8/f401re/olimexino
      interrupt_controller: add STM32F303XC EXTI lines number
      boards: arm: Add STM32F3DISCOVERY board
      arch: stm32f1: Fix typo in soc_config
      soc: stm32: F1/F3/F4/L4: enable I2C LL
      dts: yaml: Add yaml files for STM32 I2C support to DT
      dts: arm: STM32 boards use DT to configure I2C
      boards: arm: doc: Add I2C feature and serial port section
      dts: Add cpus and cpu nodes missing properties
      i2c: stm32: Update driver to get I2C port base address from DT
      dts: arm: Add unit-address component to memory and flash nodes
      dts: Remove memory node from skeleton dtsi file
      dts: intel_quark_d2000: Add device_type and reg in cpu node
      doc: system_log: Fix global Kconfig options path
      dts: arm: Update I2C defines in fixup files
      CODEOWNERS: update i2c_ll_stm32 olimexino_stm32 stm32f3_disco
      dts: arm: olimexino_stm32: Fix typo on USART3 node
      arch: arm: stm32f1: Shift GPIO pin configuration values only once
      arch: arm: stm32f1: Add missing input port configuration
      drivers: i2c_ll_stm32_v1: Disable/enable only Buffer interrupts
      drivers: i2c_ll_stm32_v1: Fix TX if flag I2C_MSG_RESTART is set
      drivers: i2c_ll_stm32_v1: Fix RX for all receptions
      dts: arm: st: Correct pin assignment of node usart1@0

Youvedeep Singh (6):
      Timer Systick : Handle Systick timer rollback in tickless kernel Case
      Scheduler: Same priority Preemptive threads should get equal time slice
      arm: handle time slicing before context switch on exception.
      tests: kernel: Stress test for round robin scheduling.
      tests: kernel: Stress test for preemptive scheduling.
      Timer: Add TICKLESS_KERNEL support for nrf_rtc_timer.

chunlin (1):
      arm: core: mpu: Prevent updating unexpected region

fallrisk (1):
      arm: board: Add support for board Atmel SAM4S Xplained.

june li (2):
      net: tcp: Reset context->tcp to NULL after net_tcp_release.
      net: tcp: Recalculate the tcp checksum when changing tcp header.

```",59771425
1552,False,False,2017-06-16T02:47:33Z,2017-06-16T02:51:35Z,"We are pleased to announce the release of Zephyr kernel version 1.8.0.

Major enhancements with this release include:

* Tickless kernel
* IP Stack improvements
* Bluetooth 5.0 features
* Ecosystem: Tracing, debugging support through third-party tools (openocd,
  Segger Systemview)
* Improved build support on Mac and Windows development environments
* Xtensa GCC support
* Initial implementation of MMU/MPU support
* Expanded device support

The following sections provide detailed lists of changes by component.

## Kernel

* Use k_cycle_get_32 instead of sys_cycle_get_32 for Kernel
* Added k_panic() and k_oops() APIs for Kernel
* Added k_thread_create() API for Kernel
* Added k_queue API for Kernel
* Add tickless kernel support

## Architectures

* arm: Update core to use struct k_thread
* arm: Added ARM MPU support
* dts: Added ARM CMSDK support
* arm: Added Initial support for NXP MPU
* arm: Added Device Tree Support for nRF52832 SoC based boards
* arm: Fixed nRF52840-QIAA SoC support for device tree
* arm: Added Device Tree Support for nRF52840 SoC & boards
* arm: Added Device Tree Support for nRF51822 SoC & boards
* dts: Introduced st/mem.h for FLASH & SRAM sizes
* dts: Put IRQ priority into the interrupt property
* arm: Support for MKL25Z soc
* arm: Added FPU support
* x86: defined MMU data structures
* Support for ARC EM Starter Kit version 2.3 added

## Boards

* Added qemu_xtensa board definition
* Added a more informative page fault handler x86 board
* xtensa: build similar to other Zephyr arches
* Define MMU data structures for x86 board
* Added support for board disco_l475_iot1
* Added STM32F413 Nucleo board
* Added support for the CC3220SF_LAUNCHXL board
* Support for new ARM board FRDM-KL25Z
* arduino_101 board enable GPIO by default
* boards: convert to using newly introduced integer sized types
* arm: Added support for Nucleo L432KC board
* arm: Added support for STM32L496G Discovery board
* arm: Added support for STM32F469I-DISCO board
* BBC micro:bit: Added driver & API for the 5x5 LED display

## Drivers and Sensors

* UART interrupt-driver API is better defined
* Support for pull-style console API
* nRF5 IEEE 802.15.4 radio driver added
* KW41Z IEEE 802.15.4 radio driver added
* Added MCUX TRNG driver
* Added support for the SiFive Freedom E310 pinmux driver
* drivers/sensor: Convert formatter strings to use PRI defines
* Added lps22hb sensor driver
* Added lsm6dsl sensor driver
* Added heart rate sensor driver
* Added support for max30101 heart rate sensor
* Added support for lis2dh accelerometer

## Networking

* HTTPS server support added
* HTTP Basic-Auth support added
* IPv6 fragmentation support added
* Add block wise support to CoAP for well-known response
* Big refactoring of network buffer handling
* Start to collect TCP statistics if enabled in config
* IEEE 802.15.4 security support added
* DNS resolver sample application added
* IPv6 multicast listener (MLDv2) support added
* NATS protocol sample application added
* HTTP client and server connectivity fixes
* Network samples Coverity fixes
* Network samples llvm compiler warning fixes
* MQTT publisher connectivity fixes
* 6lo IPv6 header compression fixes
* CoAP connectivity fixes
* DHCPv4 connectivity fixes
* TCP connectivity fixes
* DNS documentation and connectivity fixes
* IPv6 connectivity fixes
* IPv4 ARP fixes
* IEEE 802.15.4 configuration tweaking fixes
* Remove ORFD (Overly Reduced Function Device) 802.15.4 support
* Network offloading driver fixes
* Fix various memory leaks
* Properly check TCP and UDP checksum before accepting packet
* Start RX and TX network threads in proper order
* Network samples documentation fixes and clarifications
* RPL mesh routing fixes
* Network link (MAC) address fixes

## Bluetooth

* Host: Added ATT and SMP packet tracking for flow control enforcement
* Host: GATT database changed to a linked list in preparation for dynamic allocation
* Bluetooth 5.0: The Controller reports itself as 5.0-capable
* Bluetooth 5.0: Introduced Channel Selection Algorithm #2 support
* Bluetooth 5.0: Added Multiple PHY support, both 2Mbit/s and long-range coded
* Bluetooth 5.0: Integrated Scan Request notifications
* Controller: Added Low Duty Cycle Directed Advertising support
* Controller: Added Scan duplicate filtering support
* Controller: Enforced complete role separation in the controller for smaller builds
* Controller: Introduced Advanced Controller configuration with several new Kconfig options
* Controller: Changed the radio interrupts to direct ISRs to reduce interrupt latency
* Added HCI Controller to Host flow control support in both Host and Controller
* BR/EDR: Added HFP (e)SCO audio channel establishment support
* BR/EDR: Added support for a functional SDP server

## Build and Infrastructure

* Support building host tools
* Added separate DTS target
* Added support for MSYS2
* Use -O2 instead of -Os for ARC with SDK 0.9

## Libraries

* Added library for software driven I2C
* Created a HTTP library
* Added HTTP server library support
* Added minimal JSON library
* Update TinyCrypt to version 0.2.6
* Added minimal JSON library

## HALs

* Added Atmel SAM family I2C (TWIHS) driver
* Added Atmel SAM serial (UART) driver
* Added WDT driver for Atmel SAM SoCs
* Added Atmel SAM4S SoC support
* Imported Nordic 802.15.4 radio driver
* Added Initial support for NXP MPU
* Updated QMSI to 1.4 RC4
* Added FPU support
* Added basic support for STM32F413
* Introduced STM32F4x DMA driver
* pinmux: stm32: Added support for Nucleo L432KC
* Added support for STM32L496G Discovery board
* Added dts for STM32F407
* Added support for STM32F4DISCOVERY Board
* Added support for STM32F469XI
* Added support for STM32F469I-DISCO

## Documentation

* Board documentation added for new board ports
* Added a board porting guide
* Added security sections to porting and user guides
* Continued migration of wiki.zephyrproject.org material to website and github wiki
* Improved CSS formatting and appearance of generated documents
* Added breadcrumb navigation header with kernel version number
* Updated getting started setup guides for Linux, Windows, and macOS
* Updates and additions to follow new and updated kernel features
* Broken link and spelling check scans
* Removed deprecated kernel documentation (pre 1.6 release) from website (still available in git repo if needed)


## Tests and Samples

* Added test to verify same tick timeout expiry order
* Added clock_test for kernel
* Added tickless tests
* Added a simple CC2520 crypto dev test
* Added combined observer & broadcaster app for Bluetooth samples
* Added support to wait both IPv4 and IPv6
* Enabled tickless kernel option in some apps",59771425
1553,False,True,2017-06-14T01:44:49Z,2017-06-14T01:58:21Z,,59771425
1554,False,True,2017-06-07T13:44:05Z,2017-06-14T01:57:45Z,,59771425
1555,False,True,2017-06-09T00:30:22Z,2017-06-14T01:57:32Z,,59771425
1556,False,True,2017-06-01T00:04:34Z,2017-06-01T01:01:18Z,,59771425
1557,False,True,2017-05-21T23:14:36Z,2017-05-21T23:39:28Z,,59771425
1558,False,True,2017-04-27T17:00:08Z,2017-05-15T13:03:58Z,,59771425
1559,False,True,2017-04-27T17:00:53Z,2017-05-15T13:03:42Z,,59771425
1560,False,False,2017-05-15T12:59:35Z,2017-05-15T13:03:01Z,"Zephyr 1.6.1 fixes the following issues:

* Makefile (arc/soc/quark_se): New compiler options
* Makefile (arc/soc/em*): New compiler options
* arc: add -fno-delete-null-pointer-checks
* Makefile.toolchain.zephyr: Modifications for SDK 0.9
* Bluetooth: ATT: Fix using k_fifo API with net_buf
* Bluetooth: fix write cmd handling
* Bluetooth: GATT: Fix missing connection address comparison
* arm: Cortex-M0: Adapt core register code to M0
* arm: nvic: Fix exception priority access on Cortex-M0(+)
* arm: nvic: Use uint8_t for priority level
* Update to tinycrypt 0.2.6
* Update to mbedTLS 2.4.2",59771425
1561,False,False,2017-05-15T13:00:23Z,2017-05-15T13:02:02Z,"
* [ZEP-1800] Updated TinyCrypt to latest version: 0.2.6
* [ZEP-749] Updated mbedTLS to 2.4.2
* [ZEP-1470] ARM: Increase idle stack size to fix corruption by FP_SHARING",59771425
1562,False,False,2016-08-26T21:40:50Z,2017-04-20T14:37:47Z,"The Zephyr Engineering team is glad to announce the release of Zephyr
Kernel 1.5.0. This is the first release to follow the 3-month release
cadence. This release includes numerous fixes and support for major
features. Additional changes include support for new drivers, sensors,
and boards.

Major enhancements included with the release:

-   TCP Support
-   Integration of the Paho MQTT Library support with QoS
-   Flash Filesystem Support
-   Integration of the mbedTLS library for encryption
-   Improved BR/EDR support (for L2CAP, in particular).
-   Support for the Altera Nios II/f soft CPU architecture

A detailed list of changes since v1.4.0 by component follows:

Kernel
------

-   Added nano\_fifo\_put\_list() APIs, which allows queuing a list of
    elements on a nanokernel FIFO.
-   Removed unused memory pool structure field.
-   Enhanced memory pool code.

Architectures
-------------

-   ARM: Updated to include floating point registers.
-

    Altera Nios II/f soft CPU architecture support

    :   -   Internal Interrupt Controller
        -   Avalon Timer
        -   Avalon JTAG UART (polling mode) as default for
            qemu-system-nios2, and 16550 UART as default for
            Altera MAX10.

Boards
------

-   Added Nios II QEMU board.
-   Added configuration for Altera MAX10 FPGA.

Drivers and Sensors
-------------------

-   Sensors: Added driver for I2C HMC5883L magnetometer.
-   Sensors: Added driver for I2C TMP112 temperature sensor.
-   Sensors: Added driver for MAX44009 light sensor.
-   Sensors: Added driver for LPS25HB.
-   HAL: Updated QMSI drivers to 1.1
-   Added DMA QMSI shim driver.
-   Added Quark SE USB device controller driver.
-   Added suspend/resume to QMSI drivers.
-   Added Guard for critical sections of the QMSI drivers.
-   Added Zephyr File System API.
-   Added driver for ENC28J60 Ethernet SPI module.

Networking
----------

-   TCP Support
-   Connection handling fixes in IP stack.
-   Allow sending zero length user data IP packet.

Network Buffers

-   New net\_buf\_simple API for light-weight on-stack (or static)
    buffers where a net\_buf (and its associated pool) is overkill. The
    net\_buf API now uses as an internal implementation
    detail net\_buf\_simple.
-   Add support for network buffer fragmentation.
-   Add more net\_buf big endian helpers.

Bluetooth
---------

-   Multiple fixes & improvements to the nble driver.
-   New API for dealing with Out of Band data (like the local address).
-   Various smaller fixes & improvements in many places.

Build and Infrastructure
------------------------

-   Added “qemugdb” target to start a local GDB on port 1234.
-   Added script to filter known issues in the build output.
-   Sanity: Added “-R” option to build all test with assertions.

Libraries
---------

-   File system: Imported Open Source FAT FS 0.12a code.
-   Encryption: Imported mbedTLS library.
-   Encryption: Updated tinycrypt library to 2.0.

Documentation
-------------

-   Fixed all the documentations warnings during build.
-   Fixed several typos, trademarks and grammar.
-   Moved all the boards documentation to the wiki.
-   Moved Code Contribution documentation to the wiki.
-   Added package “ncurses” to the list of requirements.
-   Updated Mac OS X instructions.

Test and Samples
----------------

-   Samples: Replaced old debug macro to use new SYS\_LOG macro.
-   Added TMP112 sensor application.
-   Added Quark SE power management sample application.
-   Added DMA memory to memory transfer sample.
-   Added sample for MAX44009 light sensor.
-   Added MQTT publisher and subscriber samples.
-   Added mbedTLS sample client.

JIRA Related Items
------------------

### Stories

-   ZEP-49 - x86: unify separate SysV and IAMCU code
-   ZEP-55 - enable nanokernel test\_context on ARC
-   ZEP-58 - investigate use of -fomit-frame-pointer
-   ZEP-60 - irq priorities should be rebased to safe values
-   ZEP-69 - Extend PWM API to use arbitrary unit of time
-   ZEP-203 - clean up APIs for static exceptions
-   ZEP-225 - Add kernel API to put SoC to Deep Sleep (DS) State
-   ZEP-226 - Update sample PMA to support device suspend/resume
-   ZEP-227 - Add kernel API to put SoC to Low Power State (LPS)
-   ZEP-228 - File system interface designed after POSIX
-   ZEP-232 - Support for USB communications device class ACM
-   ZEP-234 - provide a direct memory access (DMA) interface
-   ZEP-243 - Create Wiki Structure for Boards
-   ZEP-249 - nios2: Enable altera\_max10 board in sanitycheck runs for
    nanokernel
-   ZEP-254 - nios2: define NANO\_ESF struct and populate \_default\_esf
-   ZEP-270 - nios2: determine optimal value for PERFOPT\_ALIGN
-   ZEP-271 - nios2: enable microkernel & test cases
-   ZEP-272 - nios2: add global pointer support
-   ZEP-273 - nios2: implement flashing scripts
-   ZEP-274 - nios2: document GDB debugging procedure
-   ZEP-275 - nios2: scope support for instruction/data caches
-   ZEP-279 - nios2: demonstrate nanokernel hello world
-   ZEP-285 - FAT filesystem support on top of SPI Flash
-   ZEP-289 - nios2: implement kernel\_event\_logger
-   ZEP-291 - Driver for the ENC28J60 ethernet device
-   ZEP-304 - Investigate QEMU support for Nios II
-   ZEP-327 - Encryption Libraries needed for Thread support
-   ZEP-340 - TLS/SSL
-   ZEP-354 - Provide a DMA driver for Quark SE core
-   ZEP-356 - DMA device support
-   ZEP-357 - Support for the MAX44009 sensor
-   ZEP-358 - Add support for TMP112 sensor
-   ZEP-412 - Add driver API reentrancy support to RTC driver for LMT
-   ZEP-414 - Add driver API reentrancy support to flash driver
-   ZEP-415 - aaU, I want to use the NATS messaging protocol to send
    sensor data to the cloud
-   ZEP-416 - MQTT client capability: QoS1, QoS2
-   ZEP-424 - AON counter driver needs to add driver API reentrancy
    support
-   ZEP-430 - Add driver API reentrancy support to PWM shim driver
-   ZEP-434 - Driver for HMC5883L magnetometer
-   ZEP-440 - Add driver API reentrancy support to WDT shim driver
-   ZEP-441 - Add driver API reentrancy support to GPIO shim drivers
-   ZEP-489 - nios2: handle unimplemented multiply/divide instructions
-   ZEP-500 - Domain Name System client library
-   ZEP-506 - nios2: support baremetal boot and XIP on Altera MAX10
-   ZEP-511 - Add Deep Sleep support in PMA
-   ZEP-512 - Add suspend/resume support for some core devices to enable
    Deep Sleep support in PMA
-   ZEP-541 - Integrate QMSI releases to Zephyr
-   ZEP-567 - netz sample code
-   ZEP-568 - MQTT QoS sample app
-   ZEP-573 - IoT applications must use netz API
-   ZEP-590 - Update Zephyr's tinycrypt to version 2.0
-   ZEP-643 - Add file system API documentation
-   ZEP-650 - Quark SE: Implement PM reference application
-   ZEP-652 - QMSI shim driver: RTC: Implement suspend and resume
    callbacks
-   ZEP-655 - QMSI shim driver: PWM: Implement suspend and resume
    callbacks
-   ZEP-658 - QMSI shim driver: GPIO: Implement suspend and resume
    callbacks
-   ZEP-659 - QMSI shim driver: UART: Implement suspend and resume
    callbacks
-   ZEP-662 - QMSI shim driver: Pinmux: Implement suspend and resume
    callbacks

### Epic

-   ZEP-278 - Enable Nios II CPU on Altera Max10
-   ZEP-284 - Flash Filesystem Support
-   ZEP-305 - Device Suspend / Resume infrastructure
-   ZEP-306 - PWM Enabling
-   ZEP-406 - Drivers shall be re-entrant

### Bug

-   ZEP-68 - Final image contains duplicates of some routines
-   ZEP-156 - PWM Set Value API behaves incorrectly
-   ZEP-158 - PWM Set Duty Cycle API does not work
-   ZEP-180 - make menuconfig user provided options are ignored at
    building time
-   ZEP-187 - BLE APIs are not documented
-   ZEP-218 - \[drivers/nble\]\[PTS\_TEST\] Fix responding with the
    wrong error codes to the Prepare Write Request
-   ZEP-221 - \[drivers/nble\]\[PTS\_TEST\] Implement Execute Write
    Request handler
-   ZEP-369 - When building out of the tree, application object files
    are not placed into outdir
-   ZEP-379 - \_k\_command\_stack may be improperly initialized when
    debugging
-   ZEP-384 - D2000 hangs after I2C communication with BMC150 sensor
-   ZEP-401 - PWM driver turns off pin if off time is 0 in set\_values
-   ZEP-423 - Quark D2000 CRB documentation should include instructions
    to flash bootloader
-   ZEP-435 - Ethernet/IPv4/TCP: ip\_buf\_appdatalen returns wrong
    values
-   ZEP-456 - doc: IDT security section dissapeared
-   ZEP-457 - doc: contribute/doxygen/typedefs.rst: examples files are
    broken
-   ZEP-459 - doc: kconfig reference entries in HTML are lacking a title
-   ZEP-460 - doc: document parameters of DEVICE\* macros
-   ZEP-461 - Release 1.4.0 has broken the BMI160 sample as well as an
    application based on it
-   ZEP-463 - Getting started guide ""next"" link doesn't take you to
    ""Checking Out the Source Code Anonymously"" section
-   ZEP-469 - Ethernet/IPv4/TCP: net\_receive & net\_reply in server
    mode
-   ZEP-474 - ND: Neighbor cache is not getting cleared
-   ZEP-475 - Issue with timer callback routine: Condition checked is
    incorrect
-   ZEP-478 - Linux setup docs missing step to install curses
    development package for Fedora
-   ZEP-497 - Ethernet/IPv4/TCP: failed to get free buffer
-   ZEP-499 - TMP007 driver returns invalid values for negative
    temperature
-   ZEP-514 - memory corruption in microkernel memory pool defrag()
-   ZEP-516 - Ubuntu setup instructions missing 'upgrade' step
-   ZEP-518 - SPI not working on Arduino101
-   ZEP-522 - TCP/client-mode: disconnect
-   ZEP-523 - FIFOs defined by DEFINE\_FIFO macro use the same memory
    buffer
-   ZEP-525 - srctree changes are breaking applications
-   ZEP-526 - build ""kernel event logger"" sample app failed for
    BOARD=quark\_d2000\_crb
-   ZEP-534 - Scan for consistent use of ""platform/board/SoC"" in
    documentation
-   ZEP-537 - doc: create external wiki page ""Maintainers""
-   ZEP-545 - Wrong default value of CONFIG\_ADC\_QMSI\_SAMPLE\_WIDTH
    for x86 QMSI ADC
-   ZEP-547 - \[nble\] Failed to start encryption after reconnection
-   ZEP-554 - samples/drivers/aon\_counter check readme file
-   ZEP-555 - correct libgcc not getting linked for CONFIG\_FLOAT=y on
    ARM
-   ZEP-556 - System hangs during I2C transfer
-   ZEP-565 - Ethernet/IPv4/TCP: last commits are breaking network
    support
-   ZEP-571 - ARC kernel BAT failed due to race in nested interrupts
-   ZEP-572 - X86 kernel BAT failed: Kernel Allocation Failure!
-   ZEP-575 - Ethernet/IPv4/UDP: ip\_buf\_appdatalen returns wrong
    values
-   ZEP-595 - UART: usb simulated uart doesn't work in poll mode
-   ZEP-598 - CoAP Link format filtering is not supported
-   ZEP-611 - Links on downloads page are not named consistently
-   ZEP-616 - OS X setup instructions not working on El Capitan
-   ZEP-617 - MQTT samples build fail because netz.h file missing.
-   ZEP-621 - samples/static\_lib: fatal error: stdio.h: No such file or
    directory
-   ZEP-623 - MQTT sample mqtt.h missing ""mqtt\_unsubscribe"" function
-   ZEP-632 - MQTT fail to re-connect to the broker.
-   ZEP-633 - samples/usb/cdc\_acm: undefined reference to
    'uart\_qmsi\_pm\_save\_config'
-   ZEP-642 - Inconsistent interpretation of pwm\_pin\_set\_values
    arguments among drivers
-   ZEP-645 - ARC QMSI ADC shim driver fails to read sample data
-   ZEP-646 - I2C fail to read GY2561 sensor when GY2561 & GY271 sensor
    are attached to I2C bus.
-   ZEP-647 - Power management state storage should use GPS1 instead of
    GPS0
-   ZEP-669 - MQTT fail to pingreq if broker deliver topic to client but
    client doesn't read it.
-   ZEP-673 - Sanity crashes and doesn't kill qemu upon timeout
-   ZEP-679 - HMC5883L I2C Register Read Order
-   ZEP-681 - MQTT client sample throws too many warnings when build.
-   ZEP-687 - docs: Subsystems/Networking section is almost empty
-   ZEP-689 - Builds on em\_starterkit fail
-   ZEP-695 - FatFs doesn't compile using Newlib
-   ZEP-697 - samples/net/test\_15\_4 cannot be built by sanitycheck
-   ZEP-703 - USB sample apps are broken after QMSI update
-   ZEP-704 - test\_atomic does not complete on ARC
-   ZEP-708 - tests/kernel/test\_ipm fails on Arduino 101
-   ZEP-739 - warnings when building samples for quark\_se devboard",59771425
1563,False,True,2016-11-29T04:03:55Z,2017-03-12T09:19:10Z,,59771425
1564,False,True,2016-12-02T02:30:50Z,2017-03-12T09:18:44Z,,59771425
1565,False,False,2016-12-03T13:32:39Z,2017-03-12T09:18:21Z,"We are pleased to announce the release of Zephyr kernel version 1.6.0.
This release introduces the unified Kernel replacing the separate nano-
and micro-kernels and simplifying the overall Zephyr architecture and
programming interfaces. Support for the ARM Cortex-M0/M0+ family was
added and board support for Cortex-M was expanded. Additionally, this
release adds many improvements for documentation, build infrastructure,
and testing.

Major enhancements included with the release:

-   Introduced the Unified Kernel; the nano and micro kernel
    were removed.
-   The legacy API is still supported but deprecated.
-   Legacy tests and samples were moved to tests/legacy
    and samples/legacy.
-   Unified kernel documentation was added and legacy
    nanokernel/microkernel documentation was removed.
-   Added support for several ARM Cortex-M boards
-   Added support for USB mass storage and access to the filesystem.
-   Added native Bluetooth Controller support. Currently nRF51 & nRF52
    are supported.

A detailed list of changes since v1.5.0 by component follows:

Kernel
------

-   Introduced the unified kernel.
-   Removed deprecated Tasks IRQs.
-   Removed deprecated dynamic interrupt API.
-   Added DLIST to operate in all elements of a doubly-linked list.
-   SLIST: Added sys\_slist\_get() to fetch and remove the head, also
    Added append\_list and merge\_slist.
-   Added nano\_work\_pending to check if it is pending execution.
-   Unified: Added support for k\_malloc and k\_free.
-   Renamed kernel objects event to alert and memory map to memory slab.
-   Changed memory pool, memory maps, message queues and event
    handling APIs.

Architectures
-------------

-   ARC: Removed CONFIG\_TIMER0\_CLOCK\_FREQ.
-   ARC: Unified linker scripts.
-   ARC: Removed dynamic interrupts.
-   ARM: Added choice to use floating point ABI.
-   ARM: Added NXP Kinetis kconfig options to configure clocks.
-   ARM: Removed dynamic interrupts and exceptions.
-   ARM: Atmel: Added constants and structures for watchdog registers.
-   ARM: Added support for ARM Cortex-M0/M0+.
-   x86: Removed dynamic interrupts and exceptions.
-   x86: Declared internal API for interrupt controllers.
-   x86: Changed IRQ controller to return -1 if cannot determine
    source vector.
-   x86: Grouped Quark SoC's under intel\_quark family.
-   x86: Optimized and simplified IRQ and exception stubs.

Boards
------

-   Renamed board Quark SE devboard to Quark SE C1000 devboard.
-   Renamed board Quark SE SSS devboard to Quark SE C1000 SS devboard.
-   Quark SE C1000: Disabled IPM and enabled UART0 on the
    Sensor Subsystem.
-   Removed basic\_cortex\_m3 and basic\_minuteia boards.
-   Arduino 101: Removed backup/restore scripts. To restore original
    bootloader use flashpack utility instead.
-   Renamed nRF52 Nitrogen to 96Boards Nitrogen.
-   Added ARM LTD Beetle SoC and V2M Beetle board.
-   Added Texas Instruments CC3200 LaunchXL support.
-   Added support for Nordic Semiconductor nRF51822.
-   Added support for NXP Hexiwear board.

Drivers and Sensors
-------------------

-   SPI: Fixed typos in SPI port numbers.
-   Pinmux: Removed Quark dev unused file.
-   I2C: Added KSDK shim driver.
-   Ethernet: Added KSDK shim driver.
-   Flash: Added KSDK shim driver
-   I2C: Changed config parameters to SoC specific.
-   QMSI: Implemented suspend and resume functions QMSI shim drivers
-   Added HP206C sensor.
-   Changed config\_info pointers to const.
-   Added support for SoCWatch driver.
-   Added FXOS8700 accelerometer / magnetometer sensor driver.

Networking
----------

-   Minor fixes to uIP networking stack (This will be deprecated in 1.7)

Bluetooth
---------

-   Added native Bluetooth Controller support. Currently nRF51 & nRF52
    are supported.
-   New location for Controller & Host implementations:
    subsys/bluetooth/
-   Added raw HCI API to enable physical HCI transport for a
    Controller-only build.
-   Added sample raw HCI apps for USB and UART.
-   Added cross-transport pairing support for the Security
    Manager Protocol.
-   Added RFCOMM support (for Bluetooth Classic)
-   Added basic persistent storage support (filesystem-backed)
-   Renamed bt\_driver API to bt\_hci\_driver, in anticipation of
    Bluetooth radio drivers.

Build Infrastructure
--------------------

-   Makefile: Changed outdir into board-specific directory to avoid
    build collisions.
-   Makefile: Changed to use HOST\_OS environment variable.
-   Makefile: Added support for third party build systems.
-   Sanity: Added support to filter using environment variables.
-   Sanity: Added support for multiple toolchains.
-   Sanity: Added ISSM and ARM GCC embedded toolchains to the
    supported toolchains.
-   Sanity: Added extra arguments to be passed to the build.
-   Sanity: Removed linker VMA/LMA offset check.
-   Sysgen: Added --kernel\_type argument.
-   Modified build infrastructure to support unified kernel.
-   SDK: Zephyr: Added check for minimum required version.
-   Imported get\_maintainer.pl from Linux kernel.

Libraries
---------

-   libc: Added subset of standard types in inttypes.h.
-   libc: Added support for 'z' length specifier.
-   libc: Removed stddef.h which is provided by the compiler.
-   libc: printf: Improved code for printing.
-   printk: Added support for modifiers.
-   Added CoAP implementation for Zephyr.
-   File system: Added API to grow or shrink a file.
-   File system: Added API to get volume statistics.
-   File system: Added API to flush cache of an opened file.

HALs
----

-   QMSI: Updated to version 1.3.1.
-   HAL: Imported CC3200 SDK.
-   Imported Nordic MDK nRF51 files.
-   Imported Kinetis SDK Ethernet phy driver.
-   Imported SDK RNGA driver.

Documentation
-------------

-   Drivers: Improved Zephyr Driver model.
-   Updated device power management API.
-   Unified Kernel primer.
-   Moved supported board information to the
    wiki.zephyrproject.org site.
-   Revised documentation for Kernel Event logger and Timing.

Test and Samples
----------------

-   Fixed incorrect printk usage.
-   Removed test for dynamic exceptions.
-   Added USB sample.
-   Added tests and samples for CoAP client and server.
-   Added philosophers unified sample.
-   Removed printf/printk wrappers.
-   Added Unified kernel API samples.
-   Imported tinycrypt test cases for CTR, ECC DSA and ECC DH algorithm.

Deprecations
------------

-   Deprecated microkernel and nanokernel APIs.
-   Removed dynamic IRQs and exceptions.
-   Removed Tasks IRQs.

JIRA Related Items
------------------

-   ZEP-308 - Build System cleanup and Kernel / Application build
    separation
-   ZEP-334 - Unified Kernel
-   ZEP-766 - USB Mass Storage access to internal filesystem
-   ZEP-1090 - CPU x86 save/restore using new QMSI bootloader flow
-   ZEP-1173 - Add support for bonding remove
-   ZEP-48 - define API for interrupt controllers
-   ZEP-181 - Persistent storage APIs
-   ZEP-233 - Support USB mass storage device class
-   ZEP-237 - Support pre-built host tools
-   ZEP-240 - printk/printf usage in samples
-   ZEP-248 - Add a BOARD/SOC porting guide
-   ZEP-342 - USB DFU
-   ZEP-451 - Quark SE output by default redirected to IPM
-   ZEP-521 - ARM - add choice to floating point ABI selection
-   ZEP-546 - UART interrupts not triggered on ARC
-   ZEP-584 - warn user if SDK is out of date
-   ZEP-592 - Sanitycheck support for multiple toolchains
-   ZEP-605 - SMP over BR/EDR
-   ZEP-614 - Port tinycrypt 2.0 test cases to Zephyr
-   ZEP-622 - Add FS API to truncate/shrink a file
-   ZEP-627 - Port Trickle support from Contiki into current stack
-   ZEP-635 - Add FS API to grow a file
-   ZEP-636 - Add FS API to get volume total and free space
-   ZEP-640 - Remove dynamic IRQs/exceptions from Zephyr
-   ZEP-653 - QMSI shim driver: Watchdog: Implement suspend and resume
    callbacks
-   ZEP-654 - QMSI shim driver: I2C: Implement suspend and resume
    callbacks
-   ZEP-657 - QMSI shim driver: AONPT: Implement suspend and resume
    callbacks
-   ZEP-661 - QMSI shim driver: SPI: Implement suspend and resume
    callbacks
-   ZEP-688 - unify duplicated sections of arch linker scripts
-   ZEP-715 - Add K64F clock configurations
-   ZEP-716 - Add Hexiwear board support
-   ZEP-717 - Add ksdk I2C shim driver
-   ZEP-718 - Add ksdk ethernet shim driver
-   ZEP-721 - Add FXOS8700 accelerometer/magnetometer sensor driver
-   ZEP-737 - Update host tools from upstream: fixdep.c
-   ZEP-740 - PWM API: Check if 'flags' argument is really required
-   ZEP-745 - Revisit design of PWM Driver API
-   ZEP-750 - Arduino 101 board should support one configuration using
    original bootloader
-   ZEP-758 - Rename Quark SE Devboard to its official name: Quark SE
    C1000
-   ZEP-767 - Add FS API to flush cache of an open file
-   ZEP-775 - Enable USB CDC by default on Arduino 101 and redirect
    serial to USB
-   ZEP-783 - ARM Cortex-M0/M0+ support
-   ZEP-784 - Add support for Nordic Semiconductor nRF51822 SoC
-   ZEP-850 - remove obsolete boards basic\_minuteia and
    basic\_cortex\_m3
-   ZEP-906 - \[unified\] Add scheduler time slicing support
-   ZEP-907 - Test memory pool support (with mailboxes)
-   ZEP-908 - Add task offload to fiber support
-   ZEP-909 - Adapt tickless idle + power management for ARM
-   ZEP-910 - Adapt tickless idle for x86
-   ZEP-912 - Finish renaming kernel object types
-   ZEP-916 - Eliminate kernel object API anomalies
-   ZEP-920 - Investigate malloc/free support
-   ZEP-921 - Miscellaneous documentation work
-   ZEP-922 - Revise documentation for Kernel Event Logger
-   ZEP-923 - Revise documentation for Timing
-   ZEP-924 - Revise documentation for Interrupts
-   ZEP-925 - API changes to message queues
-   ZEP-926 - API changes to memory pools
-   ZEP-927 - API changes to memory maps
-   ZEP-928 - API changes to event handling
-   ZEP-930 - Cut over to unified kernel
-   ZEP-933 - Unified kernel ARC port
-   ZEP-934 - NIOS\_II port
-   ZEP-935 - Kernel logger support (validation)
-   ZEP-954 - Update device PM API to allow setting additional power
    states
-   ZEP-957 - Create example sample for new unified kernel API usage
-   ZEP-959 - sync checkpatch.pl with upstream Linux
-   ZEP-966 - need support for EM7D SOC on em\_starterkit
-   ZEP-975 - DNS client port to new IP stack
-   ZEP-981 - Add doxygen documentation to both include/kernel.h and
    include/legacy.h
-   ZEP-989 - Cache next ready thread instead of finding out the long
    way
-   ZEP-993 - Quark SE (x86): Refactor save/restore execution context
    feature
-   ZEP-994 - Quark SE (ARC): Add PMA sample
-   ZEP-996 - Refactor save/restore feature from i2c\_qmsi driver
-   ZEP-997 - Refactor save/restore feature from spi\_qmsi driver
-   ZEP-998 - Refactor save/restore feature from uart\_qmsi driver
-   ZEP-999 - Refactor save/restore feature from gpio\_qmsi driver
-   ZEP-1000 - Refactor save/restore feature from rtc\_qmsi driver
-   ZEP-1001 - Refactor save/restore feature from wdt\_qmsi driver
-   ZEP-1002 - Refactor save/restore feature from counter\_qmsi\_aonpt
    driver
-   ZEP-1004 - Extend counter\_qmsi\_aon driver to support save/restore
    peripheral context
-   ZEP-1005 - Extend dma\_qmsi driver to support save/restore
    peripheral context
-   ZEP-1006 - Extend soc\_flash\_qmsi driver to support save/restore
    peripheral context
-   ZEP-1008 - Extend pwm\_qmsi driver to support save/restore
    peripheral context
-   ZEP-1023 - workq in Kernel primer for unified kernel
-   ZEP-1030 - Enable QMSI shim drivers of SoC peripherals on the sensor
    subsystem
-   ZEP-1043 - Update QMSI to 1.2
-   ZEP-1045 - Add/Enhance shim layer to wrap SOC specific PM
    implementations
-   ZEP-1046 - Implement RAM sharing between bootloader and Zephyr
-   ZEP-1047 - Adapt to new PM related boot flow changes in QMSI boot
    loader
-   ZEP-1106 - Fix all test failures from TCF
-   ZEP-1107 - Update QMSI to 1.3
-   ZEP-1109 - Texas Instruments CC3200 LaunchXL Support
-   ZEP-1119 - move top level usb/ to sys/usb
-   ZEP-1120 - move top level fs/ to sys/fs
-   ZEP-1121 - Add config support for enabling SoCWatch in Zephyr
-   ZEP-1140 - Add a unified kernel version of power\_mgr sample app for
    testing PM code with the new kernel
-   ZEP-1188 - Add an API to retrieve pending interrupts for wake events
-   ZEP-1191 - Create wiki page for Hexiwear board
-   ZEP-1235 - Basic shell support for file system browsing
-   ZEP-1245 - ARM LTD V2M Beetle Support
-   ZEP-1313 - porting and user guides must include a security section
-   ZEP-1386 - Revise power management document to reflect latest
    changes
-   ZEP-199 - Zephyr driver model is undocumented
-   ZEP-436 - Test case tests/kernel/test\_mem\_safe fails on ARM
    hardware
-   ZEP-471 - Ethernet packet with multicast address is not working
-   ZEP-472 - Ethernet packets are getting missed if sent in
    quick succession.
-   ZEP-517 - build on windows failed ""zephyr/Makefile:869: \*\*\*
    multiple target patterns""
-   ZEP-528 - ARC has 2 almost identical copies of the linker script
-   ZEP-577 - Sample application source does not compile on Windows
-   ZEP-601 - enable CONFIG\_DEBUG\_INFO
-   ZEP-602 - unhandled CPU exceptions/interrupts report wrong faulting
    vector if triggered by CPU
-   ZEP-615 - Un-supported flash erase size listed in SPI flash w25qxxdv
    driver header file
-   ZEP-639 - device\_pm\_ops structure should be defined as static
-   ZEP-686 - docs: Info in ""Application Development Primer"" and
    ""Developing an Application and the Build System"" is largely
    duplicated
-   ZEP-698 - samples/task\_profiler issues
-   ZEP-707 - mem\_safe test stomps on top of .data and bottom of
    .noinit
-   ZEP-724 - build on windows failed: 'make: execvp: uname: File or
    path name too long'
-   ZEP-733 - Minimal libc shouldn't be providing stddef.h
-   ZEP-762 - unexpected ""abspath"" and ""notdir"" from mingw make system
-   ZEP-777 - samples/driver/i2c\_stts751: kconfig build warning from
    ""select DMA\_QMSI""
-   ZEP-778 - Samples/drivers/i2c\_lsm9ds0: kconfig build warning from
    ""select DMA\_QMSI""
-   ZEP-779 - Using current MinGW gcc version 5.3.0 breaks Zephyr build
    on Windows
-   ZEP-845 - UART for ARC on Arduino 101 behaves unexpectedly
-   ZEP-905 - hello\_world compilation for arduino\_due target fails
    when using CROSS\_COMPILE
-   ZEP-940 - Fail to get ATT response
-   ZEP-950 - USB: Device is not listed by USB20CV test suite
-   ZEP-961 - samples: other cases cannot execute after run aon\_counter
    case
-   ZEP-967 - Sanity doesn't build 'samples/usb/dfu' with
    assertions (-R)
-   ZEP-970 - Sanity doesn't build 'tests/kernel/test\_build' with
    assertions (-R)
-   ZEP-982 - Minimal libc has EWOULDBLOCK != EAGAIN
-   ZEP-1014 - \[TCF\] tests/bluetooth/init build fail
-   ZEP-1025 - Unified kernel build sometimes breaks on a missing .d
    dependency file.
-   ZEP-1027 - Documentation for GCC ARM is not accurate
-   ZEP-1031 - qmsi: dma: driver test fails with LLVM
-   ZEP-1048 - grove\_lcd sample: sample does not work if you disable
    serial
-   ZEP-1051 - mpool allocation failed after defrag twice...
-   ZEP-1062 - Unified kernel isn't compatible with CONFIG\_NEWLIB\_LIBC
-   ZEP-1074 - ATT retrying misbehaves when ATT insufficient
    Authentication is received
-   ZEP-1076 - ""samples/philosophers/unified"" build failed with dynamic
    stack
-   ZEP-1077 - ""samples/philosophers/unified"" build warnings with
    NUM\_PHIL&lt;6
-   ZEP-1079 - Licensing not clear for imported components
-   ZEP-1097 - ENC28J60 driver fails on concurrent tx and rx
-   ZEP-1098 - ENC28J60 fails to receive big data frames
-   ZEP-1100 - Current master still identifies itself as 1.5.0
-   ZEP-1101 - SYS\_KERNEL\_VER\_PATCHLEVEL() and friends artificially
    limit version numbers to 4 bits
-   ZEP-1124 - tests/kernel/test\_sprintf/microkernel/testcase.ini\#test
    failure on frdm\_k64f
-   ZEP-1130 - region 'RAM' overflowed occurs while building
    test\_hmac\_prng
-   ZEP-1138 - Received packets not being passed to upper layer from IP
    stack when using ENC28J60 driver
-   ZEP-1139 - Fix build error when power management is built with
    unified kernel
-   ZEP-1141 - Tinycrypt SHA256 test fails with system crash using
    unified kernel type
-   ZEP-1144 - Tinycrypt AES128 fixed-key with variable-text test fails
    using unified kernel type
-   ZEP-1145 - system hang after tinycrypt HMAC test
-   ZEP-1146 - zephyrproject.org home page needs technical scrub for 1.6
    release
-   ZEP-1149 - port ztest framework to unified kernel
-   ZEP-1154 - tests/samples failing with unified kernel
-   ZEP-1155 - Fix filesystem API namespace
-   ZEP-1163 - LIB\_INCLUDE\_DIR is clobbered in Makefile second pass
-   ZEP-1164 - ztest skip waiting the test case to finish its execution
-   ZEP-1179 - Build issues when compiling with LLVM from ISSM (icx)
-   ZEP-1182 - kernel.h doxygen show unexpected ""asm"" blocks
-   ZEP-1183 - btshell return ""panic: errcode -1"" when init bt
-   ZEP-1195 - Wrong ATT error code passed to the application
-   ZEP-1199 - \[L2CAP\] No credits to receive packet
-   ZEP-1219 - \[L2CAP\] Data sent exceeds maximum PDU size
-   ZEP-1221 - Connection Timeout during pairing
-   ZEP-1226 - cortex M7 port assembler error
-   ZEP-1227 - ztest native testing not working in unified kernel
-   ZEP-1232 - Daily build is failing asserts
-   ZEP-1234 - Removal of fiber\* APIs due to unified migration breaks
    USB mass storage patchset
-   ZEP-1247 - Test tests/legacy/benchmark/latency\_measure is broken
    for daily sanitycheck
-   ZEP-1252 - Test test\_chan\_blen\_transfer does not build for
    quark\_d2000\_crb
-   ZEP-1277 - Flash driver (w25qxxdv) erase function is not checking
    for offset alignment
-   ZEP-1278 - Incorrect boundary check in flash driver (w25qxxdv) for
    erase offset
-   ZEP-1287 - ARC SPI 1 Port is not working
-   ZEP-1289 - Race condition with k\_sem\_take
-   ZEP-1291 - libzephyr.a dependency on phony ""gcc"" target
-   ZEP-1293 - ENC28J60 driver doesn't work on Arduino 101
-   ZEP-1295 - incorrect doxygen comment in kernel.h:k\_work\_pending()
-   ZEP-1297 - test/legacy/kernel/test\_mail: failure on ARC platforms
-   ZEP-1299 - System can't resume completely with DMA suspend and
    resume operation
-   ZEP-1302 - ENC28J60 fails with rx/tx of long frames
-   ZEP-1303 - Configuration talks about &gt;32 thread prios, but the
    kernel does not support it
-   ZEP-1309 - ARM uses the end of memory for its init stack
-   ZEP-1310 - ARC uses the end of memory for its init stack
-   ZEP-1312 - ARC: software crashed at k\_mbox\_get() with async
    sending a message
-   ZEP-1319 - Zephyr is unable to compile when CONFIG\_RUNTIME\_NMI is
    enabled on ARM platforms
-   ZEP-1341 - power\_states test app passes wrong value as power state
    to post\_ops functions
-   ZEP-1343 - tests/drivers/pci\_enum: failing on QEMU ARM and X86 due
    to missing commit
-   ZEP-1345 - cpu context save and restore could corrupt stack
-   ZEP-1349 - ARC sleep needs to pass interrupt priority threshold when
    interrupts are enabled
-   ZEP-1353 - FDRM k64f Console output broken on normal flash mode

Known Issues
------------

-   ZEP-1405 - function l2cap\_br\_conn\_req in
    /subsys/bluetooth/host/l2cap\_br.c references uninitialized pointer",59771425
1566,False,True,2017-01-17T16:33:42Z,2017-03-12T09:17:59Z,,59771425
1567,False,True,2017-02-15T13:52:11Z,2017-03-12T09:17:45Z,,59771425
1568,False,True,2017-02-15T13:52:54Z,2017-03-12T09:17:32Z,,59771425
1569,False,True,2017-02-23T16:21:07Z,2017-03-12T09:17:17Z,,59771425
1570,False,True,2017-03-02T03:47:12Z,2017-03-12T09:17:05Z,,59771425
1571,False,True,2017-03-08T15:56:42Z,2017-03-12T09:16:49Z,,59771425
1572,False,False,2017-03-11T16:25:22Z,2017-03-12T07:08:55Z,"We are pleased to announce the release of Zephyr kernel version 1.7.0.
This release continues refinement of the unified kernel introduced with
the 1.6.0 kernel release, simplifying the overall Zephyr architecture
and programming interfaces. This is the last release that will support
the deprecated legacy nano- and micro-kernel APIs found in the 1.5.0
release and earlier.

This release introduces a new native IP stack, replacing the legacy uIP
stack, maintaining the legacy functionality, adding additional
capabilities, and allowing future improvements.

We have introduced support for the RISC V and Xtensa architectures and
now support 6 architectures in total.

Device tree support for ARM based boards added. The initial device tree
support includes flash/sram base address and UART devices. Board support
includes NXP Kinetis based SoCs, ARM Beetle, TI CC3200 LaunchXL, and
STML32L476 based SoCs. Plan is to add support for other architectures
and expand device support in upcoming Zephyr releases.

The following sections provide a detailed list of changes, by component,
since kernel version 1.6.0.

Kernel
------

-   Introduction of k\_poll API: k\_poll() is similar to the
    POSIX poll() API in spirit in that it allows a single thread to
    monitor multiple events without actively polling them, but rather
    pending for one or more to become ready.
-   Optimized memory use of some thread fields
-   Remove usage of micro/nano kernel terminology from kernel code and
    introduced a legacy option to enable/disable legacy APIs.
    (using legacy.h)

Architectures
-------------

-   ARM: Added support for device tree
-   ARM: Fixed exception priority access on Cortex M0(+)
-   ARM: Refactored to use CMSIS

Boards
------

-   Added ARM MPS2\_AN385 board
-   Added Atmel SAM E70 Xplained board
-   Added Nordic pca10056 PDK board
-   Added NXP FRDM-KW41Z board
-   Added ST Nucleo-F334R8, Nucleo-L476G, STM3210C-EVAL, and
    STM32373C-EVAL boards
-   Added Panther and tinyTILE boards, based on Quark SE C1000 and Intel
    Curie
-   Added support for Zedboard Pulpino, a RISC V based board
-   Added Qemu target for RISC V and a simulator target for the
    Xtensa architecture.

Drivers and Sensors
-------------------

-   Added Atmel SAM pmc, gpio, uart, and ethernet drivers
-   Added STM32F3x clock, flash, gpio, pinmux drivers
-   Added stm32cube pwm and clock drivers
-   Added cc3200 gpio driver
-   Added mcr20a ieee802154 driver
-   Added mcux pinmux, gpio, uart, and spi drivers
-   Added Beetle clock control and watchdog drivers

Networking
----------

This version removes the legacy uIP stack and introduces a new native IP
stack. Because of this there is lot of changes in the code base. The
native IP stack will support the same functionality as the legacy IP
stack found in 1.6, and add new networking features which are described
below.

-   IP stack code is moved to subsys/net/ip directory.
-   IP stack supports both IPv6 and IPv4, and they can be
    enabled simultaneously.
-   Multiple network technologies like Bluetooth IPSP and IEEE 802.15.4
    can be enabled simultaneously. No routing functionality is provided
    by IP stack between enabled network technologies, applications need
    to decide where to send the network packets.
-   Network technologies are abstracted in IP layer 2 (L2) and presented
    to rest of the system as network interfaces. There exists L2 driver
    for Ethernet, Bluetooth and IEEE 802.15.4.
-   Created Bluetooth Internet Protocol Support Profile (IPSP) support.
    It will provide IPv6 connection over Bluetooth connection oriented
    channel (L2CAP).
-   Created DHCPv4 support.
-   Created CoAP implementation called ZoAP which replaces uIP
    based one.
-   Updated 6Lo implementation to support both Bluetooth and IEEE
    802.15.4
-   Created application API (net\_context) for creating connections and
    transferring data to external systems.
-   Added sample application (wpanusb) for exporting IEEE 802.15.4 radio
    over USB to external operating systems like Linux.
-   Added DNS client library.
-   Updated TCP implementation.
-   Created MQTT publisher support.
-   Created network test generator (zperf).
-   Created telnet console support.
-   Created IRC client sample application.
-   Created HTTP server and client sample applications.
-   Created net-shell module for interacting with network sub-system.
-   Created ieee15\_4 shell module for dedicated interaction with IEEE
    802.15.4 Soft MAC.
-   Created network management API for generic network settings request
    as well as a network event notification system (sender/listener).
-   Redesigned buffer & pool allocation API.

Bluetooth
---------

-   Redesigned buffer pools for smaller memory consumption
-   Redesigned thread model for smaller memory consumption
-   Utilized new k\_poll API to consolidate all TX threads into a single
    one
-   Added more SDP functionality
-   Improved RFCOMM support
-   Reduced latencies in the Controller
-   Added SPI HCI driver

Libraries
---------

-   Updated mbedTLS library
-   Updated TinyCrypt to version 0.2.5

HALs
----

-   Updated FAT FS to rev 0.12b
-   Updated Nordic MDK header files
-   Updated QMSI to 1.4 RC3
-   Imported Atmel SDK (ASF) for SAM E70 and SAM3X
-   Imported Nordic SDK HAL and 802.15.4 radio driver
-   Renamed NXP KSDK to MCUX
-   Imported NXP MCUX for KW41Z
-   Imported Segger J-Link RTT library
-   Imported stm32cube for F4 and L4

Documentation
-------------

-   General improvements and additions to kernel component docs
-   Moved supported board information back to the website site.
-   New website documentation theme to go with the new
    zephyrproject.org site.
-   New local-content generation theme (read-the-docs)
-   General spelling checks and organizational improvements.
-   Site-wide glossary added.
-   Porting guides added.
-   Sample README files converted to documents included in the website.
-   Improved consistency of boards and [samples
    documentation](https:/zephyrproject.org/doc/samples/samples.html).

JIRA Related Items
------------------

-   ZEP-19 - IPSP node support
-   ZEP-145 - no 'make flash' for Arduino Due
-   ZEP-328 - HW Encryption Abstraction
-   ZEP-359 - Move QEMU handling to a central location
-   ZEP-365 - Zephyr's MQTT library
-   ZEP-437 - TCP/IP API
-   ZEP-513 - extern declarations of small microkernel objects in
    designated sections require \_\_attribute\_\_((section)) in
    gp-enabled systems
-   ZEP-591 - MQTT Port to New IP Stack
-   ZEP-604 - In coap\_server sample app, CoAP resource separate is not
    able to send separate response
-   ZEP-613 - TCP/UDP client and server mode functionality
-   ZEP-641 - Bluetooth Eddystone sample does not correctly implement
    Eddystone beacon
-   ZEP-648 - New CoAP Implementation
-   ZEP-664 - Extend spi\_qmsi\_ss driver to support save/restore
    peripheral context
-   ZEP-665 - Extend gpio\_qmsi\_ss driver to support save/restore
    peripheral context
-   ZEP-666 - Extend i2c\_qmsi\_ss driver to support save/restore
    peripheral context
-   ZEP-667 - Extend adc\_qmsi\_ss driver to support save/restore
    peripheral context
-   ZEP-686 - docs: Info in Application Development Primer and
    Developing an Application and the Build System is largely duplicated
-   ZEP-706 - cannot set debug breakpoints on ARC side of Arduino 101
-   ZEP-719 - Add ksdk uart shim driver
-   ZEP-734 - Port AES-CMAC-PRF-128 \[RFC 4615\] encryption library for
    Thread support
-   ZEP-742 - nRF5x Series: System Clock driver using NRF\_RTC
-   ZEP-744 - USB WebUSB
-   ZEP-748 - Enable mbedtls\_sslclient sample to run on quark se board
-   ZEP-759 - Add preliminary support for Atmel SAM E70 (Cortex-M7)
    chipset family and SAM E70 Xplained board
-   ZEP-788 - UDP
-   ZEP-789 - IPv4
-   ZEP-790 - ICMPv4
-   ZEP-791 - TCP
-   ZEP-792 - ARP
-   ZEP-793 - DNS Resolver
-   ZEP-794 - Requirements for Internet Hosts - Communication Layers
-   ZEP-796 - DHCPv4
-   ZEP-798 - IPv6
-   ZEP-799 - HTTP over TLS
-   ZEP-801 - DNS Extensions to support IPv6
-   ZEP-804 - IPv6 Addressing Architecture
-   ZEP-805 - Internet Control Message Protocol (ICMP) v6
-   ZEP-807 - Neighbor Discovery for IPv6
-   ZEP-808 - IPv6 Stateless Autoconfiguration (SLAAC)
-   ZEP-809 - IPv6 over 802.15.4
-   ZEP-811 - The Trickle Algorithm
-   ZEP-812 - Compression Format for IPv6 over 802.15.4
-   ZEP-813 - RPL: IPv6 Routing Protocol
-   ZEP-814 - Routing Metrics used in Path Selection
-   ZEP-815 - Objective Function Zero for RPL
-   ZEP-816 - Minimum Rank with Hysteresis (RPL)
-   ZEP-818 - CoAP working over the new IP stack
-   ZEP-820 - HTTP v1.1 Server Sample
-   ZEP-823 - New IP Stack - Documentation
-   ZEP-824 - Network Device Driver Porting Guide
-   ZEP-825 - Porting guide for old-to-new IP Stack APIs
-   ZEP-827 - HTTP Client sample application
-   ZEP-830 - ICMPv6 Parameter Problem Support
-   ZEP-832 - Hop-by-Hop option handling
-   ZEP-847 - Network protocols must be moved to subsys/net/lib
-   ZEP-854 - CoAP with DTLS sample
-   ZEP-859 - Migrate ENC28J60 driver to YAIP IP stack
-   ZEP-865 - convert filesystem sample to a runnable test
-   ZEP-872 - Unable to flash Zephyr on Arduino 101 using Ubuntu and
    following wiki instructions
-   ZEP-873 - DMA API Update
-   ZEP-875 - 6LoWPAN - Context based compression support
-   ZEP-876 - 6LoWPAN - Offset based Reassembly of 802.15.4 packets
-   ZEP-879 - 6LoWPAN - Stateless Address Autoconfiguration
-   ZEP-882 - 6LoWPAN - IPv6 Next Header Compression
-   ZEP-883 - IP Stack L2 Interface Management API
-   ZEP-884 - 802.15.4 - CSMA-CA Radio protocol support
-   ZEP-885 - 802.15.4 - Beacon frame support
-   ZEP-886 - 802.15.4 - MAC command frame support
-   ZEP-887 - 802.15.4 - Management service: RFD level support
-   ZEP-911 - Refine thread priorities & locking
-   ZEP-919 - Purge obsolete microkernel & nanokernel code
-   ZEP-929 - Verify the preempt-thread-only and coop-thread-only
    configurations
-   ZEP-931 - Finalize kernel file naming & locations
-   ZEP-936 - Adapt drivers to unified kernel
-   ZEP-937 - Adapt networking to unified kernel
-   ZEP-946 - Galileo Gen1 board support dropped?
-   ZEP-951 - CONFIG\_GDB\_INFO build not working on ARM
-   ZEP-953 - CONFIG\_HPET\_TIMER\_DEBUG build warning
-   ZEP-958 - simplify pinmux interface and merge the pinmux\_dev into
    one single API
-   ZEP-964 - Add a (hidden?) Kconfig option for disabling legacy API
-   ZEP-975 - DNS client port to new IP stack
-   ZEP-1012 - NATS client port to new IP stack
-   ZEP-1038 - Hard real-time interrupt support
-   ZEP-1060 - Contributor guide for documentation missing
-   ZEP-1103 - Propose and implement synchronization flow for multicore
    power management
-   ZEP-1165 - support enums as IRQ line argument in IRQ\_CONNECT()
-   ZEP-1172 - Update logger Api to allow using a hook for
    SYS\_LOG\_BACKEND\_FN function
-   ZEP-1177 - Reduce Zephyr's Dependency on Host Tools
-   ZEP-1179 - Build issues when compiling with LLVM from ISSM (icx)
-   ZEP-1189 - SoC I2C peripheral of the Quark SE cannot be used from
    the ARC core
-   ZEP-1190 - SoC SPI peripheral of the Quark SE cannot be used from
    the ARC core
-   ZEP-1222 - Add save/restore support to ARC core
-   ZEP-1223 - Add save/restore support to arcv2\_irq\_unit
-   ZEP-1224 - Add save/restore support to arcv2\_timer\_0/sys\_clock
-   ZEP-1230 - Optimize interrupt return code on ARC.
-   ZEP-1233 - mbedDTLS DTLS client stability does not work on top of
    the tree for the net branch
-   ZEP-1251 - Abstract driver re-entrancy code
-   ZEP-1267 - Echo server crashes upon reception of router
    advertisement
-   ZEP-1276 - Move disk\_access\_\* out of file system subsystem
-   ZEP-1283 - compile option to skip gpio toggle in
    samples/power/power\_mgr
-   ZEP-1284 - Remove arch/arm/core/gdb\_stub.S and all the abstractions
    it introduced
-   ZEP-1288 - Define \_arc\_v2\_irq\_unit device
-   ZEP-1292 - Update external mbed TLS library to latest
    version (2.4.0)
-   ZEP-1300 - ARM LTD V2M Beetle Support \[Phase 2\]
-   ZEP-1304 - Define device tree bindings for NXP Kinetis K64F
-   ZEP-1305 - Add DTS/DTB targets to build infrastructure
-   ZEP-1306 - Create DTS/DTB parser
-   ZEP-1307 - Plumbing the DTS configuration
-   ZEP-1308 - zephyr thread function k\_sleep doesn't work with
    nrf51822
-   ZEP-1320 - Update Architecture Porting Guide
-   ZEP-1321 - Glossary of Terms needs updating
-   ZEP-1323 - Eliminate references to fiber, task, and nanokernel under
    ./include
-   ZEP-1324 - Get rid of references to CONFIG\_NANOKERNEL
-   ZEP-1325 - Eliminate TICKLESS\_IDLE\_SUPPORTED option
-   ZEP-1327 - Eliminate obsolete kernel directories
-   ZEP-1329 - Rename kernel APIs that have nano\_ prefixes
-   ZEP-1334 - Add make debug support for QEMU-based boards
-   ZEP-1337 - Relocate event logger files
-   ZEP-1338 - Update external fs with new FATFS revision 0.12b
-   ZEP-1342 - legacy/kernel/test\_early\_sleep/ fails on EMSK
-   ZEP-1347 - sys\_bitfield\_*() take unsigned long* vs memaddr\_t
-   ZEP-1351 - FDRM k64f SPI does not work
-   ZEP-1355 - Connection Failed to be Established
-   ZEP-1357 - iot/dns: Client is broken
-   ZEP-1358 - BMI160 accelerometer gives 0 on all axes
-   ZEP-1361 - IP stack is broken
-   ZEP-1363 - Missing wiki board support page for arm/arduino\_101\_ble
-   ZEP-1365 - Missing wiki board support page for arm/c3200\_launchxl
-   ZEP-1370 - There's a wiki page for arduino\_due but no zephyr/boards
    support folder
-   ZEP-1374 - Add ksdk spi shim driver
-   ZEP-1387 - Add a driver for Atmel ataes132a HW Crypto module
-   ZEP-1389 - Add support for KW41 SoC
-   ZEP-1390 - Add support for FRDM-KW41Z
-   ZEP-1393 - Add ksdk pinmux driver
-   ZEP-1394 - Add ksdk gpio driver
-   ZEP-1395 - Add data ready trigger to FXOS8700 driver
-   ZEP-1401 - Enhance ready queue cache and interrupt exit code to
    reduce interrupt latency.
-   ZEP-1403 - remove CONFIG\_OMIT\_FRAME\_POINTER from ARC boards
-   ZEP-1405 - function l2cap\_br\_conn\_req in
    /subsys/bluetooth/host/l2cap\_br.c references uninitialized pointer
-   ZEP-1406 - Update sensor driver paths in wiki
-   ZEP-1408 - quark\_se\_c1000\_ss enter\_arc\_state() might need cc
    and memory clobber
-   ZEP-1411 - Deprecate device\_sync\_call API and use semaphore
    directly
-   ZEP-1413 - \[ARC\] test/legacy/kernel/test\_tickless/microkernel
    fails to build
-   ZEP-1415 - drivers/timer/\* code comments still refer to micro/nano
    kernel
-   ZEP-1418 - Add support for Nordic nRF52840 and its DK
-   ZEP-1419 - SYS\_LOG macros cause potentially bad behavior due to
    printk/printf selection
-   ZEP-1420 - Make the time spent with interrupts disabled
    deterministic
-   ZEP-1421 - BMI160 gyroscope driver stops reporting after 1-5 minutes
-   ZEP-1422 - Arduino\_101 doesn't response ipv6 ping request affer
    enable echo\_client ipv6
-   ZEP-1427 - wpanusb dongle / 15.4 communication instability
-   ZEP-1429 - NXP MCR20A Driver
-   ZEP-1432 - ksdk pinmux driver should expose the public pinmux API
-   ZEP-1434 - menuconfig screen shots show nanokernel options
-   ZEP-1437 - AIO: Fail to retrieve pending interrupt in ISR
-   ZEP-1440 - Kconfig choice for MINIMAL\_LIBC vs NEWLIB\_LIBC is not
    selectable
-   ZEP-1442 - Samples/net/dhcpv4\_client: Build fail as No rule to make
    target prj\_.conf
-   ZEP-1443 - Samples/net/zperf: Build fail as net\_private.h can not
    be found
-   ZEP-1448 - Samples/net/mbedtls\_sslclient:Build fail as
    net/ip\_buf.h can not be found
-   ZEP-1449 - samples: logger\_hook
-   ZEP-1456 - Asserts on nrf51 running Bluetooth hci\_uart sample
-   ZEP-1457 - Add SPDX Tags to Zephyr licence boilerplate
-   ZEP-1460 - Sanity check reports some qemu step failures as
    'build\_error'
-   ZEP-1461 - Add zephyr support to openocd upstream
-   ZEP-1467 - Cleanup misc/ and move features to subsystems in subsys/
-   ZEP-1473 - ARP cache confused by use of gateway.
-   ZEP-1474 - BLE Connection Parameter Request/Response Processing
-   ZEP-1475 - k\_free documentation should specify that NULL is valid
-   ZEP-1476 - echo\_client display port unreachable
-   ZEP-1480 - Update supported distros in getting started guide
-   ZEP-1481 - Bluetooth fails to init
-   ZEP-1483 - H:4 HCI driver (h4.c) should rely on UART flow control to
    avoid dropping packets
-   ZEP-1487 - I2C\_SS: I2C doesn't set device busy before starting data
    transfer
-   ZEP-1488 - SPI\_SS: SPI doesn't set device busy before starting data
    transfer
-   ZEP-1489 - \[GATT\] Nested Long Characteristic Value Reliable Writes
-   ZEP-1490 - \[PTS\] TC\_CONN\_CPUP\_BV\_04\_C test case is failing
-   ZEP-1492 - Add Atmel SAM family GMAC Ethernet driver
-   ZEP-1493 - Zephyr project documentation copyright
-   ZEP-1495 - Networking API details documentation is missing
-   ZEP-1496 - gpio\_pin\_enable\_callback error
-   ZEP-1497 - Cortex-M0 port exception and interrupt priority setting
    and getting is broken
-   ZEP-1507 - fxos8700 broken gpio\_callback implementation
-   ZEP-1512 - doc-theme has its own conf.py
-   ZEP-1514 - samples/bluetooth/ipsp build fail: net/ip\_buf.h No such
    file or directory
-   ZEP-1525 - driver: gpio: GPIO driver still uses nano\_timer
-   ZEP-1532 - Wrong accelerometer readings
-   ZEP-1536 - Convert documentation of PWM samples to RST
-   ZEP-1537 - Convert documentation of power management samples to RST
-   ZEP-1538 - Convert documentation of zoap samples to RST
-   ZEP-1539 - Create documentation in RST for all networking samples
-   ZEP-1540 - Convert Bluetooth samples to RST
-   ZEP-1542 - Multi Sessions HTTP Server sample
-   ZEP-1543 - HTTP Server sample with basic authentication
-   ZEP-1544 - Arduino\_101 doesn't respond to ipv6 ping request after
    enable echo\_server ipv6
-   ZEP-1545 - AON Counter : ISR triggered twice on ARC
-   ZEP-1546 - Bug in Zephyr OS high-precision timings sub-system
    (function sys\_cycle\_get\_32())
-   ZEP-1547 - Add support for H7 crypto function and CT2 SMP auth flag
-   ZEP-1548 - Python script invocation is inconsistent
-   ZEP-1549 - k\_cpu\_sleep\_mode unaligned byte address
-   ZEP-1554 - Xtensa integration
-   ZEP-1557 - RISC V Port
-   ZEP-1558 - Support of user private data pointer in Timer expiry
    function
-   ZEP-1559 - Implement \_tsc\_read for ARC architecture
-   ZEP-1562 - echo\_server/echo\_client examples hang randomly after
    some time of operation
-   ZEP-1563 - move board documentation for NRF51/NRF52 back to git tree
-   ZEP-1564 - 6lo uncompress\_IPHC\_header overwrites IPHC fields
-   ZEP-1566 - WDT: Interrupt is triggered multiple times
-   ZEP-1569 - net/tcp: TCP in server mode doesn't support multiple
    concurrent connections
-   ZEP-1570 - net/tcp: TCP in server mode is unable to close client
    connections
-   ZEP-1571 - Update ""Changes from Version 1 Kernel"" to include a
    ""How-To Port Apps"" section
-   ZEP-1572 - Update QMSI to 1.4
-   ZEP-1573 - net/tcp: User provided data in net\_context\_recv is not
    passed to callback
-   ZEP-1574 - Samples/net/dhcpv4\_client: Build fail as undefined
    reference to net\_mgmt\_add\_event\_callback
-   ZEP-1579 - external links to zephyr technical docs are broken
-   ZEP-1581 - \[nRF52832\] Blinky hangs after some minutes
-   ZEP-1583 - ARC: warning: unmet direct dependencies
    (SOC\_RISCV32\_PULPINO || SOC\_RISCV32\_QEMU)
-   ZEP-1585 - legacy.h should be disabled in kernel.h with
    CONFIG\_LEGACY\_KERNEL=n
-   ZEP-1587 - sensor.h still uses legacy APIs and structs
-   ZEP-1588 - I2C doesn't work on Arduino 101
-   ZEP-1589 - Define yaml descriptions for UART devices
-   ZEP-1590 - echo\_server run on FRDM-K64F displays BUS FAULT
-   ZEP-1591 - wiki: add Networking section and point
    <https://wiki.zephyrproject.org/view/Network_Interfaces>
-   ZEP-1592 - echo-server does not build with newlib
-   ZEP-1593 - /scripts/sysgen should create output using SPDX licensing
    tag
-   ZEP-1598 - samples/philosophers build failed unexpectedly
    @quark\_d2000 section noinit will not fit in region RAM
-   ZEP-1601 - Console over Telnet
-   ZEP-1602 - IPv6 ping fails using sample application echo\_server on
    FRDM-K64F
-   ZEP-1611 - Hardfault after a few echo requests (IPv6 over BLE)
-   ZEP-1614 - Use correct i2c device driver name
-   ZEP-1616 - Mix up between ""network address"" and ""socket address""
    concepts in declaration of net\_addr\_pton()
-   ZEP-1617 - mbedTLS server/client failing to run on qemu
-   ZEP-1619 - Default value of NET\_NBUF\_RX\_COUNT is too low, causes
    lock up on startup
-   ZEP-1623 - (Parts) of Networking docs still refer to 1.5 world model
    (with fibers and tasks) and otherwise not up to date
-   ZEP-1626 - SPI: spi cannot work in CPHA mode @ ARC
-   ZEP-1632 - TCP ACK packet should not be forwarded to application
    recv cb.
-   ZEP-1635 - MCR20A driver unstable
-   ZEP-1638 - No (public) analog of inet\_ntop()
-   ZEP-1644 - Incoming connection handling for UDP is not exactly
    correct
-   ZEP-1645 - API to wait on multiple kernel objects
-   ZEP-1648 - Update links to wiki pages for board info back into the
    web docs
-   ZEP-1650 - make clean (or pristine) is not removing all artifacts of
    document generation
-   ZEP-1651 - i2c\_dw malfunctioning due to various changes.
-   ZEP-1653 - build issue when compiling with LLVM in ISSM (altmacro)
-   ZEP-1654 - Build issues when compiling with LLVM(unknown
    attribute '\_alloc\_align\_)
-   ZEP-1655 - Build issues when compiling with LLVM(memory pool)
-   ZEP-1656 - IPv6 over BLE no longer works after commit 2e9fd88
-   ZEP-1657 - Zoap doxygen documentation needs to be perfected
-   ZEP-1658 - IPv6 TCP low on buffers, stops responding after about 5
    requests
-   ZEP-1662 - zoap\_packet\_get\_payload() should return the payload
    length
-   ZEP-1663 - sanitycheck overrides user's environment for CCACHE
-   ZEP-1665 - pinmux: missing default pinmux driver config for
    quark\_se\_ss
-   ZEP-1669 - API documentation does not follow in-code documentation
    style
-   ZEP-1672 - flash: Flash device binding failed on Arduino\_101\_sss
-   ZEP-1674 - frdm\_k64f: With Ethernet driver enabled, application
    can't start up without connected network cable
-   ZEP-1677 - SDK: BLE cannot be initialized/advertised with
    CONFIG\_ARC\_INIT=y on Arduino 101
-   ZEP-1681 - Save/restore debug registers during
    soc\_sleep/soc\_deep\_sleep in c1000
-   ZEP-1692 - \[PTS\] GATT/SR/GPA/BV-11-C fails
-   ZEP-1701 - Provide an HTTP API
-   ZEP-1704 - BMI160 samples fails to run
-   ZEP-1706 - Barebone Panther board support
-   ZEP-1707 - \[PTS\] 7 SM/MAS cases fail
-   ZEP-1708 - \[PTS\] SM/MAS/PKE/BI-01-C fails
-   ZEP-1709 - \[PTS\] SM/MAS/PKE/BI-02-C fails
-   ZEP-1710 - Add TinyTILE board support
-   ZEP-1713 - xtensa: correct all checkpatch issues
-   ZEP-1716 - HTTP server sample that does not support up to 10
    concurrent sessions.
-   ZEP-1717 - GPIO: GPIO LEVEL interrupt cannot work well in deep sleep
    mode
-   ZEP-1723 - Warnings in Network code/ MACROS, when built with ISSM's
    llvm/icx compiler
-   ZEP-1732 - sample of zoap\_server runs error.
-   ZEP-1733 - Work on ZEP-686 led to regressions in docs on integration
    with 3rd-party code
-   ZEP-1745 - Bluetooth samples build failure
-   ZEP-1753 - sample of dhcpv4\_client runs error on Arduino 101
-   ZEP-1754 - sample of coaps\_server was tested failed on qemu
-   ZEP-1756 - net apps: \[-Wpointer-sign\] build warning raised when
    built with ISSM's llvm/icx compiler
-   ZEP-1758 - PLL2 is not correctly enabled in STM32F10x connectivity
    line SoC
-   ZEP-1763 - Nordic RTC timer driver not correct with tickless idle
-   ZEP-1764 - samples: sample cases use hard code device name, such as
    ""GPIOB"" ""I2C\_0""
-   ZEP-1768 - samples: cases miss testcase.ini
-   ZEP-1774 - Malformed packet included with IPv6 over 802.15.4
-   ZEP-1778 - tests/power: multicore case won't work as expected
-   ZEP-1786 - TCP does not work on Arduino 101 board.
-   ZEP-1787 - kernel event logger build failed with
    ""CONFIG\_LEGACY\_KERNEL=n""
-   ZEP-1789 - ARC: ""samples/logger-hook"" crashed \_\_memory\_error from
    sys\_ring\_buf\_get
-   ZEP-1799 - timeout\_order\_test \_ASSERT\_VALID\_PRIO failed
-   ZEP-1803 - Error occurs when exercising dma\_transfer\_stop
-   ZEP-1806 - Build warnings with LLVM/icx (gdb\_server)
-   ZEP-1809 - Build error in net/ip with LLVM/icx
-   ZEP-1810 - Build failure in net/lib/zoap with LLVM/icx
-   ZEP-1811 - Build error in net/ip/net\_mgmt.c with LLVM/icx
-   ZEP-1839 - LL\_ASSERT in event\_common\_prepareA
-   ZEP-1851 - Build warnings with obj\_tracing
-   ZEP-1852 - LL\_ASSERT in isr\_radio\_state\_close()
-   ZEP-1855 - IP stack buffer allocation fails over time
-   ZEP-1858 - Zephyr NATS client fails to respond to server MSG
-   ZEP-1864 - llvm icx build warning in tests/drivers/uart/\*
-   ZEP-1872 - samples/net: the HTTP client sample app must run on QEMU
    x86
-   ZEP-1877 - samples/net: the coaps\_server sample app runs failed on
    Arduino 101
-   ZEP-1883 - Enabling Console on ARC Genuino 101
-   ZEP-1890 - Bluetooth IPSP sample: Too small user data size",59771425
1573,False,False,2019-08-26T01:13:03Z,2019-08-26T01:14:19Z,"**This release fixes minor bugs and includes a new optional dual motor support for self-squaring gantry homing.**

**[OPTIONAL]** *Dual motor support for self-squaring gantry homing.*
- **NOTE: Default build remains the same! Dual motor support can only be enabled in config.h.**
- New dual motor support feature for gantry CNC machines. An axis motor is  efficiently mirrored to a dedicated set of step and direction pins (D12/D13 or A3/A4) with no detectable loss of performance. Primarily used to independently home both sides of a dual-motor gantry with a pair of limit switches (second shared with Z-axis limit pin). When the limit switches are setup correctly, Grbl will self-square the gantry (and stay square if $1=255 is programmed). Beware use at your own risk! Grbl is not responsible for any damage to any machines.

- Dual axis motors is only supported on the X-axis or Y-axis. And deletes the spindle direction(D13) and optional coolant mist (A4) features to make room for the dual motor step and direction pins.

- Dual axis homing will automatically abort homing if one limit switch triggers and travels more than 5% (default) of the non-dual axis max travel setting. For example, if the X-axis has dual motors and one X-axis triggers during homing, Grbl will abort 5% of the Y-axis max travel and the other X-axis limit fails to trigger. This will help keep any misconfigurations or failed limit switches from damaging the machine, but not completely eliminate this risk. Please take all precautions and test thouroughly before using this.

- Dual axis motors supports two configurations:

 - Support for Arduino CNC shield clones. For these, step/dir on pins D12/D13, and spindle enable is moved to A3 (old coolant enable), while coolant enable is moved to A4 (SDA pin). Variable spindle/laser mode option is NOT supported for this shield.

 - Support for Protoneer CNC Shield v3.51. Step/dir on pins A3/A4, and  coolant enable is moved to D13 (old spindle direction pin). Variable spindle/laser mode option IS supported for this shield.

[new] Altered the way default settings are stored and restored. Saved about 300 bytes(!) of flashed size. Should free up enough for certain configurations of CoreXY machines.

[fix] Added a build info feedback mechanism for enabling the safety door input pin.

[fix] Correct control pin state checking within pin change interrupt. Improper if-else statements could lead to missed signal.

[fix] If statement bug fix related to jog motion modal group error checking.

[fix] Spindle/coolant rare bug fixes.

[fix] When the optional M7 mist coolant IO was enabled, coolant overrides was not disabling correctly.

[fix] Coolant override states was not restored correctly after a parking motion in certain situations. It would restore programmed state, rather than current overridden state.

[fix] Now allow coolant overrides to operate during jogging motion.

[fix] Invert control pin mask typo.

[fix] Fix apparent error in restore masking that causes the call to coolant_set_state to not re-enable the mist (M7) output if it was previously enabled. 

[update] Added Bob's CNC E3 and E4 CNC machine defaults.

[update] Updated instructions in fit_nonlinear_spindle.py. Repl.it has changed since the last time fit_nonlinear_spindle.py was tested.",68751856
1574,False,False,2017-08-01T16:27:42Z,2017-07-18T04:40:00Z,"### This release includes a critical bug fix (rare) and some other minor bug fixes, updates and new non-critical features.

[fix] A very rare bug would cause Grbl to crash in a very special and very rare set of circumstances. It would occur only when actively lowering feed/rapid overrides and the programmed move and settings aligned perfectly. Re-factored the problem code to eliminate the potential issue.

[new] A nonlinear spindle speed/PWM output option via a piecewise linear fit model. Enabled through config.h and solved by a Python script in /doc/script.

[new] fit_nonlinear_spindle.py. A solver script that can be run on http://repl.it for free. No Python install necessary. All instructions are available in the script file comments.

[new] stream.py has been updated to include status reports feedback at 1 second interval.

[new] The stream.py streaming script now has a check-mode option, where it will place Grbl in $C check mode automatically and then stream the g-code program. It's a very fast way to check if the g-code program has any errors.

[fix] stream.py bug fix with verbose mode disabled.

[fix] When in M3 constant laser power mode, a change from G0 to G1 would not set the laser on, if G1 was passed with a coincident target. Motion controller now checks for a coincident target situation and will force a spindle sync when detected.

[fix] Restrict M3 forced updates when there is a motion block with a coincident target. Force syncing of the spindle state can lead to some pauses during a job that has coincident targets. That’s not particularly desirable. This ensures M4 dynamic mode is not effected by this force-sync.

[fix] The build info options of “two switches on an axis” and “homing init lock” shared the same letter ‘L’. The former is now ’T’.

[fix] When M7 and M8 are both enabled, $G report would show `M78`, rather than `M7 M8`. This only effects systems that enable M7 mist coolant in config.h. Not the default build.

[fix] When trying to enable laser mode with $32=1 and VARIABLE_SPINDLE is disabled, the error code shown was improperly stating it was a homing failure. Added an new error code specifically for the laser mode being disabled without VARIABLE_SPINDLE.

[fix] The debug variable was not initialized if the debug option was enabled in config.h

[fix] Updated error_codes CSV file to the same format as the others.

[update] Added PocketNC FR4 defaults. Needs some additional work though to be compatible.",68751856
1575,False,False,2017-02-01T01:46:20Z,2017-02-01T02:06:57Z,"### This release contains some _minor_ tweaks to the streaming interface, new features, and bug fixes:

[new] The `$I` build info output now shows two additional values separated by commas `[OPT:VL,15,128]`.  The first value is the total number of usable planner buffer blocks, and the other value is the total number of serial RX buffer bytes available. This information is primarily for GUI handshaking. NOTE: There is always one unusable planner block (not part of the shown value) that is used for internal system purposes.

[new] The `$I` build info includes 5 more character codes to identify various build options. See documentation for details.

[new] Parking motion override control via a new `M56 P0` and `M56 P1`command, which disables and enables the parking motion, respectively. A default override may be configured in config.h. This new feature requires both `PARKING_ENABLE`  and `ENABLE_PARKING_OVERRIDE_CONTROL` enabled in config.h. Primarily for OEMs.

[new] `M56` now appears in the `$G` g-code parser state print out when parking override is enabled in g-code , when the `ENABLE_PARKING_OVERRIDE_CONTROL` option is enabled. 

[new] Spindle enable pin configuration option to alter its behavior based on how certain lasers work. By default, Grbl treats the enable pin separately and leaves it on when S is 0. The new option turns the
enable pin on and off with S>0 and S=0. This only is in effect when a user enables the `USE_SPINDLE_DIR_AS_ENABLE_PIN` option.

[fix] M4 was not allowed to work when USE_SPINDLE_DIR_AS_ENABLE_PIN is enabled. This was problematic for laser folks using the M4 command.

[fix] Fixed an issue when in inverse time mode and G0’s would require a F word.

[fix] Added a note in the defaults.h file that MAX_TRAVEL values must be positive. Some users were setting this negative and it was causing issues.

[fix] EXTREMELY RARE bug. When AMASS is intentionally disabled and sent a motion command that is _one step_ in length, Grbl would not actuate the step due to numerical round-off. Applied a fix to prevent the round-off issue.
",68751856
1576,False,False,2017-01-14T20:54:14Z,2017-01-14T20:58:09Z,"- Fixes an issue where tool number values were not tracked and reported in the g-code parser state.
- Added a new error code (38) to indicate an invalid tool number sent to the parser.
",68751856
1577,False,False,2016-12-20T05:18:23Z,2016-12-20T05:20:36Z,"- Contains a critical bug fix for alarm handling. A recent change to internal alarm codes were not handled correctly and would occasionally show the wrong code and enter an infinite loop.
- Re-installed optional software debouncing for hard limit switches.
- Documentation updates.
",68751856
1578,False,False,2016-12-09T06:17:45Z,2016-12-10T04:50:39Z,"After a lengthy beta-testing cycle, v1.1 is ready for master release! All new realtime override command set to dial in a job, new officially supported laser mode with a nice dynamic laser power mode to produce consistent cuts, all new GUI interface to include a ton more real-time feedback, and a lot more! Please let us know if you run into any problems! Enjoy!
",68751856
1579,False,False,2019-01-10T16:48:31Z,2019-01-10T16:51:37Z,"Cleanflight v2.5.0

Latest Cleanflight Configurator >= v2.5.0-RC1 is required.

Changes since v2.5.0-RC1:
* None

Changes since v2.4.1:
* Added support for feed forward to the PID controller.
* Improved the performance of the dynamic notch filter.
* Changes from Betaflight 3.5.2 merged - see Betaflight release notes for details.

Notes:
* Some features are disabled for some older targets like the NAZE32 and other targets with 256K flash or less. See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md
* OSD users should use the latest font from the latest configurator.
* OSD Slave users should upgrade both the FC *and* their OSD Slave.

Known Issues:
* Manual needs updating, volunteers wanted!
* If you encounter issues with your settings not being correct after upgrading to the RC please report this via the feedback issue, then reset your settings and continue testing.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.
* Motors outputs need to be configured as servo outputs before using servos via the cli `resource` command.
* Use of motor outputs 5-8 on SPRacingF7DUAL requires 'NO_VTX' firmware, get it here: https://github.com/cleanflight/cleanflight/issues/3049#issuecomment-405357538

Future:
* Cleanflight will end support for F1 based boards soon.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF > v2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Set the current sensor source to ""MSP sensor/OSD Slave""
9. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Thanks:
* All contributors, especially the core CF/BF developers.
* Everyone that has donated to the Cleanflight project.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases
",9066347
1580,False,True,2018-09-30T18:08:04Z,2018-10-01T03:41:47Z,"Cleanflight v2.5.0-RC1

Latest Cleanflight Configurator >= v2.5.0-RC1 is required.

Changes since v2.4.1:
* Added support for feed forward to the PID controller.
* Improved the performance of the dynamic notch filter.
* Changes from Betaflight 3.5.2 merged - see Betaflight release notes for details.

Notes:
* Some features are disabled for some older targets like the NAZE32 and other targets with 256K flash or less. See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md
* OSD users should use the latest font from the latest configurator.
* OSD Slave users should upgrade both the FC *and* their OSD Slave.

Known Issues:
* Manual needs updating, volunteers wanted!
* If you encounter issues with your settings not being correct after upgrading to the RC please report this via the feedback issue, then reset your settings and continue testing.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.
* Motors outputs need to be configured as servo outputs before using servos via the cli `resource` command.
* Use of motor outputs 5-8 on SPRacingF7DUAL requires 'NO_VTX' firmware, get it here: https://github.com/cleanflight/cleanflight/issues/3049#issuecomment-405357538

Future:
* Cleanflight will end support for F1 based boards soon.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF > v2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Set the current sensor source to ""MSP sensor/OSD Slave""
9. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Thanks:
* All contributors, especially the core CF/BF developers.
* Everyone that has donated to the Cleanflight project.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases
",9066347
1581,False,False,2018-08-07T18:48:10Z,2018-08-07T18:51:34Z,"Cleanflight v2.4.1

Latest Cleanflight Configurator >= v2.4.0-RC1 is required.

Changes since v2.4.0:
* Fixed SPRACINGF3OSD slave 'Waiting for FC'.

Changes since v2.4.0-RC1:
* None, if you have flashed v2.4.0-RC1 you do not need to re-flash.

Changes since v2.3.2:
* Enhanced flight performance.
* Changes from Betaflight 3.4 merged.

Notes:
* Some features are disabled for some older targets like the NAZE32 and other targets with 256K flash or less. See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md
* OSD users should use the latest font from the latest configurator.
* OSD Slave users should upgrade both the FC *and* their OSD Slave.

Known Issues:
* Manual needs updating, volunteers wanted!
* If you encounter issues with your settings not being correct after upgrading to the RC please report this via the feedback issue, then reset your settings and continue testing.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.
* Motors outputs need to be configured as servo outputs before using servos via the cli `resource` command.
* Use of motor outputs 5-8 on SPRacingF7DUAL requires 'NO_VTX' firmware, get it here: https://github.com/cleanflight/cleanflight/issues/3049#issuecomment-405357538

Future:
* Cleanflight will end support for F1 based boards soon.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF > v2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Set the current sensor source to ""MSP sensor/OSD Slave""
9. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Thanks:
* All contributors, especially the core CF/BF developers.
* Everyone that has donated to the Cleanflight project.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases
",9066347
1582,False,False,2018-08-07T14:14:48Z,2018-08-07T14:24:06Z,"Cleanflight v2.4.0

Latest Cleanflight Configurator >= v2.4.0-RC1 is required.

Changes since v2.4.0-RC1:
* None, if you have flashed v2.4.0-RC1 you do not need to re-flash.

Changes since v2.3.2:
* Enhanced flight performance.
* Changes from Betaflight 3.4 merged.

Notes:
* Some features are disabled for some older targets like the NAZE32 and other targets with 256K flash or less. See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md
* OSD users should use the latest font from the latest configurator.
* OSD Slave users should upgrade both the FC *and* their OSD Slave.

Known Issues:
* Manual needs updating, volunteers wanted!
* If you encounter issues with your settings not being correct after upgrading to the RC please report this via the feedback issue, then reset your settings and continue testing.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.
* Motors outputs need to be configured as servo outputs before using servos via the cli `resource` command.
* Use of motor outputs 5-8 on SPRacingF7DUAL requires 'NO_VTX' firmware, get it here: https://github.com/cleanflight/cleanflight/issues/3049#issuecomment-405357538
* OSD Slave always says 'Waiting for FC', see https://github.com/cleanflight/cleanflight/pull/3062

Future:
* Cleanflight will end support for F1 based boards soon.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF > v2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Set the current sensor source to ""MSP sensor/OSD Slave""
9. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Thanks:
* All contributors, especially the core CF/BF developers.
* Everyone that has donated to the Cleanflight project.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases
",9066347
1583,False,True,2018-07-16T18:13:00Z,2018-07-16T18:18:54Z,"Cleanflight v2.4.0

Latest Cleanflight Configurator >= v2.4.0-RC1 is required.

Changes since v2.3.2:
* Enhanced flight performance.
* Changes from Betaflight 3.4 merged.

Notes:
* Some features are disabled for some older targets like the NAZE32 and other targets with 256K flash or less. See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md
* OSD users should use the latest font from the latest configurator.
* OSD Slave users should upgrade both the FC *and* their OSD Slave.

Known Issues:
* Manual needs updating, volunteers wanted!
* If you encounter issues with your settings not being correct after upgrading to the RC please report this via the feedback issue, then reset your settings and continue testing.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.
* Motors outputs need to be configured as servo outputs before using servos via the cli `resource` command.

Future:
* Cleanflight will end support for F1 based boards soon.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF > v2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Set the current sensor source to ""MSP sensor/OSD Slave""
9. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Thanks:
* All contributors, especially the core CF/BF developers.
* Everyone that has donated to the Cleanflight project.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases
",9066347
1584,False,False,2018-04-22T21:56:40Z,2018-04-22T21:53:14Z,"Cleanflight v2.3.2

Latest Cleanflight Configurator >= v2.2.0-RC1 is required.

Changes since v2.3.1:
* Fix PWM RX 100% cpu usage issue.

Changes since v2.3.0:
* Fix missing transponder support for SPRacingF7DUAL.

Changes since v2.2.0:
* Flight performance enhanced.
* Added PID-Audio feature.
* Many many many other changes and performance enhancements.
* Changes from Betaflight 3.3 merged.
* Improvements for OSD slave.

Notes:
* Some features are disabled for some older targets like the NAZE32 and other targets with 256K flash or less. See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md
* OSD users should use the latest font from the latest configurator.
* OSD Slave users should upgrade both the FC *and* their OSD Slave.

Known Issues:
* Enabling Dynamic Filtering on F7 causes lock-up - https://github.com/betaflight/betaflight/issues/5429
* Manual needs updating, volunteers wanted!
* If you encounter issues with your settings not being correct after upgrading to the RC please report this via the feedback issue, then reset your settings and continue testing.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.
* Motors outputs need to be configured as servo outputs before using servos via the cli `resource` command.

Future:
* Cleanflight will end support for F1 based boards soon.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF > v2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Set the current sensor source to ""MSP sensor/OSD Slave""
9. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Thanks:
* All contributors, especially the core CF/BF developers.
* Everyone that has donated to the Cleanflight project.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases
",9066347
1585,False,False,2018-04-03T19:38:40Z,2018-04-03T19:42:15Z,"Cleanflight v2.3.1

Latest Cleanflight Configurator >= v2.2.0-RC1 is required.

Changes since v2.3.0:
* Fix missing transponder support for SPRacingF7DUAL.

Changes since v2.2.0:
* Flight performance enhanced.
* Added PID-Audio feature.
* Many many many other changes and performance enhancements.
* Changes from Betaflight 3.3 merged.
* Improvements for OSD slave.

Notes:
* Some features are disabled for some older targets like the NAZE32 and other targets with 256K flash or less. See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md
* OSD users should use the latest font from the latest configurator.
* OSD Slave users should upgrade both the FC *and* their OSD Slave.

Known Issues:
* Enabling Dynamic Filtering on F7 causes lock-up - https://github.com/betaflight/betaflight/issues/5429
* Manual needs updating, volunteers wanted!
* If you encounter issues with your settings not being correct after upgrading to the RC please report this via the feedback issue, then reset your settings and continue testing.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.
* Motors outputs need to be configured as servo outputs before using servos via the cli `resource` command.

Future:
* Cleanflight will end support for F1 based boards soon.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF > v2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Set the current sensor source to ""MSP sensor/OSD Slave""
9. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Thanks:
* All contributors, especially the core CF/BF developers.
* Everyone that has donated to the Cleanflight project.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases
",9066347
1586,False,True,2018-03-31T20:32:21Z,2018-03-31T22:13:33Z,"Cleanflight v2.3.0

Latest Cleanflight Configurator >= v2.2.0-RC1 is required.

Changes since v2.2.0:
* Flight performance enhanced.
* Added PID-Audio feature.
* Many many many other changes and performance enhancements.
* Changes from Betaflight 3.3 merged.
* Improvements for OSD slave.

Notes:
* Some features are disabled for some older targets like the NAZE32 and other targets with 256K flash or less. See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md
* OSD users should use the latest font from the latest configurator.
* OSD Slave users should upgrade both the FC *and* their OSD Slave.

Known Issues:
* Enabling Dynamic Filtering on F7 causes lock-up - https://github.com/betaflight/betaflight/issues/5429
* Manual needs updating, volunteers wanted!
* If you encounter issues with your settings not being correct after upgrading to the RC please report this via the feedback issue, then reset your settings and continue testing.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.
* Motors outputs need to be configured as servo outputs before using servos via the cli `resource` command.

Future:
* Cleanflight will end support for F1 based boards soon.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF > v2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Set the current sensor source to ""MSP sensor/OSD Slave""
9. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Thanks:
* All contributors, especially the core CF/BF developers.
* Everyone that has donated to the Cleanflight project.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases
",9066347
1587,False,True,2018-03-08T20:25:33Z,2018-03-09T10:51:38Z,"Cleanflight v2.3.0-RC1

Latest Cleanflight Configurator >= v2.2.0-RC1 is required.

Changes since v2.2.0:
* Flight performance enhanced.
* Many many many other changes and performance enhancements.
* Changes from Betaflight 3.3 merged.
* Improvements for OSD slave.

Notes:
* Some features are disabled for some older targets like the NAZE32 and other targets with 256K flash or less. See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md
* OSD users should use the latest font from the latest configurator.
* OSD Slave users should upgrade both the FC *and* their OSD Slave.

Known Issues:
* Enabling Dynamic Filtering on F7 causes lock-up - https://github.com/betaflight/betaflight/issues/5429
* Manual needs updating, volunteers wanted!
* If you encounter issues with your settings not being correct after upgrading to the RC please report this via the feedback issue, then reset your settings and continue testing.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.
* Motors outputs need to be configured as servo outputs before using servos via the cli `resource` command.

Future:
* Cleanflight will end support for F1 based boards soon.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF > v2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Set the current sensor source to ""MSP sensor/OSD Slave""
9. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Thanks:
* All contributors, especially the core CF/BF developers.
* Everyone that has donated to the Cleanflight project.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases
",9066347
1588,False,False,2018-03-03T11:36:44Z,2018-03-03T18:51:55Z,"Cleanflight v2.2.0

Latest Cleanflight Configurator >= v2.1.0-RC1 is required.

Changes since v2.2.0-RC2:
* Add support for SPRACINGF7DUAL with DUAL SIMULTANEOUS GYROS.

Changes since v2.2.0-RC1:
* Various bug fixes.
* Support for additional targets.

Changes since v2.1.0:
* Flight performance enhanced.
* Many many many other changes and performance enhancements.

Notes:
* Mag and Baro disabled by default for maximum flight performance.
* Default ESC protocol in CF2.x is ONESHOT, not PWM - see SAFETY NOTE.
* Some features, like GPS and SONAR, are disabled for some older targets like the NAZE32 and other targets with 256K flash or less.  See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md
* OSD users should use the latest font from the latest configurator.

Known Issues:
* Manual needs updating, volunteers wanted!
* If you encounter issues with your settings not being correct after upgrading to the RC please report this via the feedback issue, then reset your settings and continue testing.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.
* Motors outputs need to be configured as servo outputs before using servos via the cli `resource` command.

Future:
* Cleanflight will end support for F1 based boards soon.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Set the current sensor source to ""MSP sensor/OSD Slave""
9. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Bug Reports ONLY:
- https://github.com/cleanflight/cleanflight/issues/2972

Thanks:
* All contributors, especially the core CF/BF developers.
* Everyone that has donated to the Cleanflight project.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases
",9066347
1589,False,True,2018-02-18T17:45:06Z,2018-02-18T22:18:13Z,"Cleanflight v2.2.0-RC2

Latest Cleanflight Configurator >= v2.1.0-RC1 is required.

Changes since v2.2.0-RC1:
* Various bug fixes.
* Support for additional targets.

Changes since v2.1.0:
* Flight performance enhanced.
* Many many many other changes and performance enhancements.

Notes:
* Mag and Baro disabled by default for maximum flight performance.
* Default ESC protocol in CF2.x is ONESHOT, not PWM - see SAFETY NOTE.
* Some features, like GPS and SONAR, are disabled for some older targets like the NAZE32 and other targets with 256K flash or less.  See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md
* OSD users should use the latest font from the latest configurator.

Known Issues:
* Manual needs updating, volunteers wanted!
* If you encounter issues with your settings not being correct after upgrading to the RC please report this via the feedback issue, then reset your settings and continue testing.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.
* Motors outputs need to be configured as servo outputs before using servos via the cli `resource` command.

Future:
* Cleanflight will end support for F1 based boards in late 2017.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Set the current sensor source to ""MSP sensor/OSD Slave""
9. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Bug Reports ONLY:
- https://github.com/cleanflight/cleanflight/issues/2972

Thanks:
* All contributors, especially the core CF/BF developers.
* Everyone that has donated to the Cleanflight project.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases
",9066347
1590,False,True,2017-10-30T23:28:23Z,2017-11-01T17:50:25Z,"Cleanflight v2.2.0-RC1

Latest Cleanflight Configurator >= v2.1.0-RC1 is required.

Changes since v2.1.0:
* Flight performance enhanced.
* Many many many other changes and performance enhancements.

Notes:
* Mag and Baro disabled by default for maximum flight performance.
* Default ESC protocol in CF2.x is ONESHOT, not PWM - see SAFETY NOTE.
* Some features, like GPS and SONAR, are disabled for some older targets like the NAZE32 and other targets with 256K flash or less.  See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md
* OSD users should use the latest font from the latest configurator.

Known Issues:
* Manual needs updating, volunteers wanted!
* If you encounter issues with your settings not being correct after upgrading to the RC please report this via the feedback issue, then reset your settings and continue testing.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.
* Motors outputs need to be configured as servo outputs before using servos via the cli `resource` command.

Future:
* Cleanflight will end support for F1 based boards in late 2017.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Set the current sensor source to ""MSP sensor/OSD Slave""
9. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Bug Reports ONLY:
- https://github.com/cleanflight/cleanflight/issues/2972

Thanks:
* All contributors, especially the core CF/BF developers.
* Everyone that has donated to the Cleanflight project.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases
",9066347
1591,False,False,2017-07-30T11:44:48Z,2017-07-30T12:26:45Z,"Cleanflight v2.1.0

Latest Cleanflight Configurator >= v2.1.0-RC1 is required.

Changes since v2.0.x:
* Flight performance enhanced.
* Dynamic PID filtering - enable via cli `feature DYNAMIC_FILTER`.
* Many OSD improvements.
* Crash detection and recovery (see cli commands).
* LED Strip can now show VTX frequency and other VTX settings.
* RunCam SPLIT camera control.
* EasyRaceLapTimer (ERLT) transponder support - CF now supports 3 IR transponder protocols.
* SPRacingF3OSD/PDB current sensor can now be used by the FC, set the current sensor source in the FC to 'MSP sensor/OSD Slave'.
* DSHOT ESC 1200 support.
* PROSHOT ESC 1000 support.
* Many CMS (Configuration menu system) improvements.
* Support for many new targets.
* Many many many other changes and performance enhancements.

Changes since v2.1.0-RC1:
* Synced motor output twitches fixed.
* Other minor fixes and improvements.

Changes since v2.1.0-RC2:
* Fixed SPRACINGF3OSD SPI initialisiation.

Notes:
* Mag and Baro disabled by default for maximum flight performance.
* Default ESC protocol in CF2.x is ONESHOT, not PWM - see SAFETY NOTE.
* Some features, like GPS and SONAR, are disabled for some older targets like the NAZE32 and other targets with 256K flash or less.  See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md
* OSD users should use the latest font from the latest configurator.

Known Issues:
* Manual needs updating, volunteers wanted!
* If you encounter issues with your settings not being correct after upgrading to the RC please report this via the feedback issue, then reset your settings and continue testing.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.
* Motors outputs need to be configured as servo outputs before using servos via the cli `resource` command.

Future:
* Cleanflight will end support for F1 based boards in late 2017.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Set the current sensor source to ""MSP sensor/OSD Slave""
9. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Bug Reports ONLY:
- https://github.com/cleanflight/cleanflight/issues/2885

Thanks:
* All contributors, especially the core CF/BF developers.
* Everyone that has donated to the Cleanflight project.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases
",9066347
1592,False,True,2017-07-16T12:20:20Z,2017-07-16T13:59:22Z,"Cleanflight v2.1.0-RC2

Latest Cleanflight Configurator >= v2.1.0-RC1 is required.

Changes since v2.0.x:
* Flight performance enhanced.
* Dynamic PID filtering - enable via cli `feature DYNAMIC_FILTER`.
* Many OSD improvements.
* Crash detection and recovery (see cli commands).
* LED Strip can now show VTX frequency and other VTX settings.
* RunCam SPLIT camera control.
* EasyRaceLapTimer (ERLT) transponder support - CF now supports 3 IR transponder protocols.
* SPRacingF3OSD/PDB current sensor can now be used by the FC, set the current sensor source in the FC to 'MSP sensor/OSD Slave'.
* DSHOT ESC 1200 support.
* PROSHOT ESC 1000 support.
* Many CMS (Configuration menu system) improvements.
* Support for many new targets.
* Many many many other changes and performance enhancements.

Changes since v2.1.0-RC1:
* Oneshot twitch fixed.
* Other minor fixes and improvements.


Notes:
* Mag and Baro disabled by default for maximum flight performance.
* Default ESC protocol in CF2.x is ONESHOT, not PWM - see SAFETY NOTE.
* Some features, like GPS and SONAR, are disabled for some older targets like the NAZE32.  See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md
* OSD users should use the latest font from the latest configurator.

Known Issues:
* Manual needs updating, volunteers wanted!
* If you encounter issues with your settings not being correct after upgrading to the RC please report this via the feedback issue, then reset your settings and continue testing.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.
* Motors outputs need to be configured as servo outputs before using servos via the cli `resource` command.

Future:
* Cleanflight will end support for F1 based boards in late 2017.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Set the current sensor source to ""MSP sensor/OSD Slave""
9. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Bug Reports ONLY:
- https://github.com/cleanflight/cleanflight/issues/2885

Thanks:
* All contributors, especially the core CF/BF developers.
* Everyone that has donated to the Cleanflight project.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases
",9066347
1593,False,True,2017-07-09T16:10:39Z,2017-07-09T20:41:34Z,"Cleanflight v2.1.0-RC1

Latest Cleanflight Configurator >= v2.1.0-RC1 is required.

Changes since v2.0.x:
* Flight performance enhanced.
* Dynamic PID filtering - enable via cli `feature DYNAMIC_FILTER`.
* Many OSD improvements.
* Crash detection and recovery (see cli commands).
* LED Strip can now show VTX frequency and other VTX settings.
* RunCam SPLIT camera control.
* EasyRaceLapTimer (ERLT) transponder support - CF now supports 3 IR transponder protocols.
* SPRacingF3OSD/PDB current sensor can now be used by the FC, set the current sensor source in the FC to 'MSP sensor/OSD Slave'.
* DSHOT ESC 1200 support.
* PROSHOT ESC 1000 support.
* Many CMS (Configuration menu system) improvements.
* Support for many new targets.
* Many many many other changes and performance enhancements.

Notes:
* Mag and Baro disabled by default for maximum flight performance.
* Default ESC protocol in CF2.x is ONESHOT, not PWM - see SAFETY NOTE.
* Some features, like GPS and SONAR, are disabled for some older targets like the NAZE32.  See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md
* OSD users should use the latest font from the latest configurator.

Known Issues:
* Manual needs updating, volunteers wanted!
* If you encounter issues with your settings not being correct after upgrading to the RC please report this via the feedback issue, then reset your settings and continue testing.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.
* Motors outputs need to be configured as servo outputs before using servos via the cli `resource` command.
* Oneshot output has jitter, fixed in v2.1.0-RC2

Future:
* Cleanflight will end support for F1 based boards in late 2017.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Set the current sensor source to ""MSP sensor/OSD Slave""
9. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Bug Reports ONLY:
- https://github.com/cleanflight/cleanflight/issues/2885

Thanks:
* All contributors, especially the core CF/BF developers.
* Everyone that has donated to the Cleanflight project.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases
",9066347
1594,False,False,2017-07-09T12:22:22Z,2017-07-09T15:47:26Z,"Cleanflight v2.0.5

Latest Cleanflight Configurator >= v2.0.0 is required.

Changes since v2.0.5:
* Fix servo filter initialisation.
* SPRACINGF4NEO - Stabilise VBAT readings.

Changes since v2.0.3:
* SPRACINGF4NEO - Enable faster updates for OSD.

Changes since v2.0.2:
* SPRACINGF4NEO - Initial target support for the first F4 board from Seriously Pro / SP Racing.
* HoTT telemetry fix.

Changes since v2.0.1:
* RSSI via MSP fixed.
* NAZE32 Rev5/6 use dataflash for blackbox by default.
* SPRACINGF3NEO change default telemetry settings to support the XSR receiver.
* Fix HoTT telemetry.  See https://github.com/cleanflight/cleanflight/issues/2745.
* Change 'sport_halfduplex' to 'tlm_halfduplex' to allow experimental support of one-wire HoTT.

Changes since v2.0.0:
* SPRacingF3NEO button features implemented. See VTX section of the manual.
* All VTXs can now be configured using OSD menu, sticks or buttons on any FC, e.g. use sticks to change VTX channels on Tramp/SmartAudio or Built-in VTX.
* SPRacingF3 now supports connection to OSD Slave, note - uses low refresh rate while unarmed.
* Other minor fixes.

Features:
* SPRacingF4EVO - Initial target support for the first F4 board from Seriously Pro / SP Racing.
* New OSD SLAVE SYSTEM.  Remote display of Cleanflight OSD screen and menus on the SPRACINGF3OSD boards.
* All the new latest features from Betaflight. (DSHOT, new PID controller, etc).
* All the fixes and improvements you expect from Cleanflight.
* ARCITIMER Transponder support.

Notes:
* Mag and Baro disabled by default for maximum flight performance.
* Default ESC protocol in CF2.x is ONESHOT, not PWM - see SAFETY NOTE.
* Some features, like GPS and SONAR, are disables for some legacy F1 targets like the NAZE32.  See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md

Known Issues:
* Manual needs updating, volunteers wanted!
* SPRacingF3OSD/PDB board sensors are unused, wait for v2.1.0 - OSD slave only.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Bug Reports ONLY:
- https://github.com/cleanflight/cleanflight/issues/2720

Thanks:
* All contributors, especially the core CF/BF developers.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases",9066347
1595,False,False,2017-06-21T17:32:26Z,2017-06-21T17:33:18Z,"Cleanflight v2.0.4

Latest Cleanflight Configurator >= v2.0.0 is required.

Changes since v2.0.3:
* SPRACINGF4NEO - Enable faster updates for OSD.

Changes since v2.0.2:
* SPRACINGF4NEO - Initial target support for the first F4 board from Seriously Pro / SP Racing.
* HoTT telemetry fix.

Changes since v2.0.1:
* RSSI via MSP fixed.
* NAZE32 Rev5/6 use dataflash for blackbox by default.
* SPRACINGF3NEO change default telemetry settings to support the XSR receiver.
* Fix HoTT telemetry.  See https://github.com/cleanflight/cleanflight/issues/2745.
* Change 'sport_halfduplex' to 'tlm_halfduplex' to allow experimental support of one-wire HoTT.

Changes since v2.0.0:
* SPRacingF3NEO button features implemented. See VTX section of the manual.
* All VTXs can now be configured using OSD menu, sticks or buttons on any FC, e.g. use sticks to change VTX channels on Tramp/SmartAudio or Built-in VTX.
* SPRacingF3 now supports connection to OSD Slave, note - uses low refresh rate while unarmed.
* Other minor fixes.

Features:
* SPRacingF4EVO - Initial target support for the first F4 board from Seriously Pro / SP Racing.
* New OSD SLAVE SYSTEM.  Remote display of Cleanflight OSD screen and menus on the SPRACINGF3OSD boards.
* All the new latest features from Betaflight. (DSHOT, new PID controller, etc).
* All the fixes and improvements you expect from Cleanflight.
* ARCITIMER Transponder support.

Notes:
* Mag and Baro disabled by default for maximum flight performance.
* Default ESC protocol in CF2.x is ONESHOT, not PWM - see SAFETY NOTE.
* Some features, like GPS and SONAR, are disables for some legacy F1 targets like the NAZE32.  See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md

Known Issues:
* Manual needs updating, volunteers wanted!
* SPRacingF3OSD/PDB board sensors are unused, wait for v2.1.0 - OSD slave only.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Bug Reports ONLY:
- https://github.com/cleanflight/cleanflight/issues/2720

Thanks:
* All contributors, especially the core CF/BF developers.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases",9066347
1596,False,False,2017-06-20T20:30:43Z,2017-06-20T20:32:57Z,"Cleanflight v2.0.3

Latest Cleanflight Configurator >= v2.0.0 is required.

Changes since v2.0.2:
* SPRACINGF4NEO - Initial target support for the first F4 board from Seriously Pro / SP Racing.
* HoTT telemetry fix.

Changes since v2.0.1:
* RSSI via MSP fixed.
* NAZE32 Rev5/6 use dataflash for blackbox by default.
* SPRACINGF3NEO change default telemetry settings to support the XSR receiver.
* Fix HoTT telemetry.  See https://github.com/cleanflight/cleanflight/issues/2745.
* Change 'sport_halfduplex' to 'tlm_halfduplex' to allow experimental support of one-wire HoTT.

Changes since v2.0.0:
* SPRacingF3NEO button features implemented. See VTX section of the manual.
* All VTXs can now be configured using OSD menu, sticks or buttons on any FC, e.g. use sticks to change VTX channels on Tramp/SmartAudio or Built-in VTX.
* SPRacingF3 now supports connection to OSD Slave, note - uses low refresh rate while unarmed.
* Other minor fixes.

Features:
* SPRacingF4EVO - Initial target support for the first F4 board from Seriously Pro / SP Racing.
* New OSD SLAVE SYSTEM.  Remote display of Cleanflight OSD screen and menus on the SPRACINGF3OSD boards.
* All the new latest features from Betaflight. (DSHOT, new PID controller, etc).
* All the fixes and improvements you expect from Cleanflight.
* ARCITIMER Transponder support.

Notes:
* Mag and Baro disabled by default for maximum flight performance.
* Default ESC protocol in CF2.x is ONESHOT, not PWM - see SAFETY NOTE.
* Some features, like GPS and SONAR, are disables for some legacy F1 targets like the NAZE32.  See https://github.com/cleanflight/cleanflight/blob/master/docs/Customized%20Version.md

Known Issues:
* Manual needs updating, volunteers wanted!
* SPRacingF3OSD/PDB board sensors are unused, wait for v2.1.0 - OSD slave only.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Bug Reports ONLY:
- https://github.com/cleanflight/cleanflight/issues/2720

Thanks:
* All contributors, especially the core CF/BF developers.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases",9066347
1597,False,False,2017-04-22T12:38:06Z,2017-04-22T15:23:26Z,"Cleanflight v2.0.2

Latest Cleanflight Configurator >= v2.0.0 is required.

Changes since v2.0.1:
* RSSI via MSP fixed.
* NAZE32 Rev5/6 use dataflash for blackbox by default.
* SPRACINGF3NEO change default telemetry settings to support the XSR receiver.
* Fix HoTT telemetry.  See https://github.com/cleanflight/cleanflight/issues/2745.
* Change 'sport_halfduplex' to 'tlm_halfduplex' to allow experimental support of one-wire HoTT.

Changes since v2.0.0:
* SPRacingF3NEO button features implemented. See VTX section of the manual.
* All VTXs can now be configured using OSD menu, sticks or buttons on any FC, e.g. use sticks to change VTX channels on Tramp/SmartAudio or Built-in VTX.
* SPRacingF3 now supports connection to OSD Slave, note - uses low refresh rate while unarmed.
* Other minor fixes.

Features:
* SPRacingF4EVO - Initial target support for the first F4 board from Seriously Pro / SP Racing.
* New OSD SLAVE SYSTEM.  Remote display of Cleanflight OSD screen and menus on the SPRACINGF3OSD boards.
* All the new latest features from Betaflight. (DSHOT, new PID controller, etc).
* All the fixes and improvements you expect from Cleanflight.
* ARCITIMER Transponder support.

Notes:
* Mag and Baro disabled by default for maximum flight performance.
* Default ESC protocol in CF2.x is ONESHOT, not PWM - see SAFETY NOTE.

Known Issues:
* Manual needs updating, volunteers wanted!
* SPRacingF3OSD/PDB board sensors are unused, wait for v2.1.0 - OSD slave only.
* The mixer setting in the configurator may not have any effect. See https://github.com/cleanflight/cleanflight/issues/2764 - configure a custom mixer and use the mmix cli command, see manual.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

OSD Slave usage:
1. Flash CF2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- Slack, Forums, Documentation, Facebook, IRC, BetaFlight WIKI

Bug Reports ONLY:
- https://github.com/cleanflight/cleanflight/issues/2720

Thanks:
* All contributors, especially the core CF/BF developers.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases",9066347
1598,False,False,2017-04-18T21:03:59Z,2017-04-18T23:45:12Z,"Cleanflight v2.0.1

Latest Cleanflight Configurator v2.0.0 is required.

Changes since v2.0.0:
* SPRacingF3NEO button features implemented. See VTX section of the manual.
* All VTXs can now be configured using OSD menu, sticks or buttons on any FC, e.g. use sticks to change VTX channels on Tramp/SmartAudio or Built-in VTX.
* SPRacingF3 now supports connection to OSD Slave, note - uses low refresh rate while unarmed.
* Other minor fixes.

Features:
* SPRacingF4EVO - Initial target support for the first F4 board from Seriously Pro / SP Racing.
* New OSD SLAVE SYSTEM.  Remote display of Cleanflight OSD screen and menus on the SPRACINGF3OSD boards.
* All the new latest features from Betaflight. (DSHOT, new PID controller, etc).
* All the fixes and improvements you expect from Cleanflight.
* ARCITIMER Transponder support.

Notes:
* Mag and Baro disabled by default for maximum flight performance.
* Default ESC protocol in CF2.x is ONESHOT, not PWM - see SAFETY NOTE.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

Known Issues:
* Manual needs updating, volunteers wanted!
* SPRacingF3OSD/PDB board sensors are unused, wait for v2.1.0 - OSD slave only.
* RSSI reading does is not sent via MSP.  It still works for telemetry/logging/osd/etc.

OSD Slave usage:
1. Flash CF2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- IRC, Forums, Slack, Documentation, Facebook, BetaFlight WIKI.

Bug Reports ONLY:
- https://github.com/cleanflight/cleanflight/issues/2720

Thanks:
* All contributors, especially the core CF/BF developers.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases",9066347
1599,False,False,2017-04-12T23:21:00Z,2017-04-13T00:23:34Z,"Cleanflight v2.0.0

Latest Cleanflight Configurator v2.0.0 is required.

Features:
* SPRacingF4EVO - Initial target support for the first F4 board from Seriously Pro / SP Racing.
* New OSD SLAVE SYSTEM.  Remote display of Cleanflight OSD screen and menus on the SPRACINGF3OSD boards.
* All the new latest features from Betaflight. (DSHOT, new PID controller, etc).
* All the fixes and improvements you expect from Cleanflight.
* ARCITIMER Transponder support.

Notes:
* Mag and Baro disabled by default for maximum flight performance.
* Default ESC protocol in CF2.x is ONESHOT, not PWM - see SAFETY NOTE.

SAFETY:
* When upgrading follow this simple procedure: Disconnect battery, remove propellers, flash/upgrade, configure, connect battery, test rx, test motors, test arming - only then should you re-attach your propellers.

Known Issues:
* SPRacingF3NEO button support not ported from CF 1.x yet, use sticks to change VTX channels.
* Manual needs updating, volunteers wanted!

OSD Slave usage:
1. Flash CF2.x onto a compatible stacking FC (SPRACINGF3, SPRACINGF4EVO, SPRACINGF3EVO).
2. Enable OSD feature on the FC.
3. Enable MSP on UART1 on the FC.
4. Flash CF2.x onto the SPRACINGF3OSD/PDB board.
5. Upload Cleanflight font to the SPRACINGF3OSD using the 'OSD' tab, set video mode.
6. Connect FC + OSD using stacking pins and power on board boards.
7. Configure FC as usual.
8. Access OSD menu using sticks by following on-screen prompts. (Yaw Left, Throttle Mid, Pitch Up)

User Support / Questions / Help:
- IRC, Forums, Slack, Documentation, Facebook, BetaFlight WIKI.

Bug Reports ONLY:
- https://github.com/cleanflight/cleanflight/issues/2720

Thanks:
* All contributors, especially the core CF/BF developers.

All configurator versions are available here:
https://github.com/cleanflight/cleanflight-configurator/releases",9066347
1600,False,True,2017-04-02T18:40:04Z,2017-04-02T19:05:28Z,"Cleanflight v2.0.0-RC2

Cleanflight 2.x is now based on the Betaflight v3.1 code, it's currently identical except for the version name and msp flight controller identifier.

Use this development configurator:

https://github.com/cleanflight/cleanflight-configurator/archive/update-for-api-1.33.0.zip

Install development configurator using instructions here:

https://github.com/cleanflight/cleanflight-configurator#installation

Report configurator issues as comments here:

https://github.com/cleanflight/cleanflight-configurator/pull/450

Report firmware issue as comments here:

https://github.com/cleanflight/cleanflight/issues/2696


Features:
* SPRacingF4EVO - Initial target support for the first F4 board from Seriously Pro / SP Racing.
* All the new latest features from Betaflight.
* All the fixes and improvements you expect from Cleanflight.

Known Issues:
* SPRacingF3NEO button support not ported from CF 1.x, use sticks to change VTX channels.
* No release for the SPRacingF3OSD/PDB boards yet.

User Support / Questions / Help:
- IRC, Forums, Slack, Documentation, Facebook, BetaFlight WIKI.

Bug Reports ONLY:
- https://github.com/cleanflight/cleanflight/issues/2696
",9066347
1601,False,True,2017-04-02T16:02:27Z,2017-04-02T16:03:58Z,"Cleanflight v2.0.0-RC1

Cleanflight 2.x is now based on the Betaflight v3.1 code, it's currently identical except for the version name and msp flight controller identifier.

This release is the first Cleanflight v2.x release candidate, with support for a limited selection of targets during this transition period.

_IMPORTANT_ Requires configurator v2.0.0 - download it here: https://github.com/cleanflight/cleanflight-configurator
",9066347
1602,False,False,2016-12-31T02:02:15Z,2016-12-31T03:15:00Z,"Cleanflight v1.14.2

There are new defaults that improve flight performance, suggest flashing with 'FULL CHIP ERASE' selected and selectively restoring your settings so that you get the best performance possible.

Cleanflight now supports OSD hardware and OSD configuration via the cleanflight configurator.
Read more about this here: https://github.com/cleanflight/cleanflight/issues/2210
- Unlike other firmware the OSD support in Cleanflight is NOT based on the legacy MinimOSD codebase.  It also works on OSD-ONLY hardware (SPRacingF3OSD) as well as FC-WITH-OSD hardware (SPRacingF3NEO).

OSD-USERS:
- Suggest flashing with ""full-chip erase"" selected, when upgrading from factory firmware.
- Ensure OSD board is powered and camera and vtx/screen is connected when flashing so you can monitor the font-upload process which occurs after upgrading firmware or after resetting firmware configuration.

FC Changes:
- Improved flight performance.
- Updated horizon mode, see docs.
- All-new gyro sync code.
- New gyro/pid task separation to allow gyro filtering.
- Notch filter from Betaflight.  Proper usage of notch filter can improve flight performance.
- IBus telemetry.
- Various smartport/frsky telemetry changes and fixes.
- Various new target support and updates.

FC/OSD changes:
- New voltage meter configuration.
- New current meter configuration.
- Updated MSP API - New Voltage/Amperage/Battery API.  Older MSP commands deleted. 
- Loads and loads of code-cleanups and minor-fixes.

OSD Changes
- New icons.
- New elements.

NAZE
- Dropped support for I2C display due to code size reasons. See #2472

Changes since v1.14.0:
- Fix heading hold functionality.
- Smartport telemetry ACC readings scaled correctly.

Changes since v1.14.1:
- Improve accelerometer filtering.
- Fix acc stabilized flight modes.
- Fix RSSI reading on OSD.
- Add support for SPRacingF3NEO FC/PDB/OSD/VTX FPV Stacking System
- Fix NAZE32 shared UART1/Telemetry crash on arm bug.
- Fix CPU load issue with legacy MW23/MWREWRITE pid controllers.
- Fix CC3D duplicate UART1 issue.
- Fix serial TX buffer overflow (sometimes occured when flashing ESCs)
- Other minor bug fixes.
",9066347
1603,False,True,2016-12-28T01:16:27Z,2016-12-28T00:15:06Z,"Cleanflight v1.14.2

There are new defaults that improve flight performance, suggest flashing with 'FULL CHIP ERASE' selected and selectively restoring your settings so that you get the best performance possible.

Cleanflight now supports OSD hardware and OSD configuration via the cleanflight configurator.
Read more about this here: https://github.com/cleanflight/cleanflight/issues/2210
- Unlike other firmware the OSD support in Cleanflight is NOT based on the legacy MinimOSD codebase.  It also works on OSD-ONLY hardware (SPRacingF3OSD) as well as FC-WITH-OSD hardware (SPRacingF3NEO).

OSD-USERS:
- Suggest flashing with ""full-chip erase"" selected, when upgrading from factory firmware.
- Ensure OSD board is powered and camera and vtx/screen is connected when flashing so you can monitor the font-upload process which occurs after upgrading firmware or after resetting firmware configuration.

FC Changes:
- Improved flight performance.
- Updated horizon mode, see docs.
- All-new gyro sync code.
- New gyro/pid task separation to allow gyro filtering.
- Notch filter from Betaflight.  Proper usage of notch filter can improve flight performance.
- IBus telemetry.
- Various smartport/frsky telemetry changes and fixes.
- Various new target support and updates.

FC/OSD changes:
- New voltage meter configuration.
- New current meter configuration.
- Updated MSP API - New Voltage/Amperage/Battery API.  Older MSP commands deleted. 
- Loads and loads of code-cleanups and minor-fixes.

OSD Changes
- New icons.
- New elements.

NAZE
- Dropped support for I2C display due to code size reasons. See #2472

Changes since v1.14.0:
- Fix heading hold functionality.
- Smartport telemetry ACC readings scaled correctly.

Changes since v1.14.1:
- Improve accelerometer filtering.
- Fix acc-stabilized flight modes.
- Fix RSSI reading on OSD.
- Add support for SPRacingF3NEO FC/PDB/OSD/VTX FPV Stacking System
- Fix NAZE32 shared UART1/Telemetry crash on arm bug.
- Fix CPU load issue with legacy MW23/MWREWRITE pid controllers.
- Fix CC3D duplicate UART1 issue.
- Fix serial TX buffer overflow (sometimes occured when flashing ESCs)
- Other minor bug fixes.
",9066347
1604,False,True,2016-12-06T23:23:13Z,2016-12-06T23:10:03Z,"Cleanflight v1.14.2

There are new defaults that improve flight performance, suggest flashing with 'FULL CHIP ERASE' selected and selectively restoring your settings so that you get the best performance possible.

Cleanflight now supports OSD hardware and OSD configuration via the cleanflight configurator.
Read more about this here: https://github.com/cleanflight/cleanflight/issues/2210
- Unlike other firmware the OSD support in Cleanflight is NOT based on the legacy MinimOSD codebase.  It also works on OSD-ONLY hardware (SPRacingF3OSD) as well as FC-WITH-OSD hardware (SPRacingF3NEO).

OSD-USERS:
- Suggest flashing with ""full-chip erase"" selected, when upgrading from factory firmware.
- Ensure OSD board is powered and camera and vtx/screen is connected when flashing so you can monitor the font-upload process which occurs after upgrading firmware or after resetting firmware configuration.

FC Changes:
- Improved flight performance.
- Updated horizon mode, see docs.
- All-new gyro sync code.
- New gyro/pid task separation to allow gyro filtering.
- Notch filter from Betaflight.  Proper usage of notch filter can improve flight performance.
- IBus telemetry.
- Various smartport/frsky telemetry changes and fixes.
- Various new target support and updates.

FC/OSD changes:
- New voltage meter configuration.
- New current meter configuration.
- Updated MSP API - New Voltage/Amperage/Battery API.  Older MSP commands deleted. 
- Loads and loads of code-cleanups and minor-fixes.

OSD Changes
- New icons.
- New elements.

NAZE
- Dropped support for I2C display due to code size reasons. See #2472

Changes since v1.14.0:
- Fix heading hold functionality.
- Smartport telemetry ACC readings scaled correctly.

Changes since v1.14.1:
- Improve accelerometer filtering.
- Fix RSSI reading on OSD.
- Add support for SPRacingF3NEO FC/PDB/OSD/VTX FPV Stacking System
- Other minor bug fixes.
",9066347
1605,False,False,2016-11-11T11:48:22Z,2016-11-11T13:13:42Z,"Cleanflight v1.14.1

There are new defaults that improve flight performance, suggest flashing with 'FULL CHIP ERASE' selected and selectively restoring your settings so that you get the best performance possible.

Cleanflight now supports OSD hardware and OSD configuration via the cleanflight configurator.
Read more about this here: https://github.com/cleanflight/cleanflight/issues/2210
- Unlike other firmware the OSD support in Cleanflight is NOT based on the legacy MinimOSD codebase.  It also works on OSD-ONLY hardware as well as FC-WITH-OSD hardware.

OSD-USERS:
- Suggest flashing with ""full-chip erase"" selected, when upgrading from factory firmware.
- Ensure OSD board is powered and camera and vtx/screen is connected when flashing so you can monitor the font-upload process which occurs after upgrading firmware or after resetting firmware configuration.

FC Changes:
- Improved flight performance.
- Updated horizon mode, see docs.
- All-new gyro sync code.
- New gyro/pid task separation to allow gyro filtering.
- Notch filter from Betaflight.  Proper usage of notch filter can improve flight performance.
- IBus telemetry.
- Various smartport/frsky telemetry changes and fixes.
- Various new target support and updates.

FC/OSD changes:
- New voltage meter configuration.
- New current meter configuration.
- Updated MSP API - New Voltage/Amperage/Battery API.  Older MSP commands deleted. 
- Loads and loads of code-cleanups and minor-fixes.

OSD Changes
- New icons.
- New elements.

NAZE
- Dropped support for I2C display due to code size reasons. See #2472

Changes since v1.14.0:
- Fix heading hold functionality.
- Smartport telemetry ACC readings scaled correctly.
",9066347
1606,False,False,2016-11-02T16:37:48Z,2016-11-02T17:51:51Z,"Cleanflight v1.14.0

There are new defaults that improve flight performance, suggest flashing with 'FULL CHIP ERASE' selected and selectively restoring your settings so that you get the best performance possible.

Cleanflight now supports OSD hardware and OSD configuration via the cleanflight configurator.
Read more about this here: https://github.com/cleanflight/cleanflight/issues/2210
- Unlike other firmware the OSD support in Cleanflight is NOT based on the legacy MinimOSD codebase.  It also works on OSD-ONLY hardware as well as FC-WITH-OSD hardware.

OSD-USERS:
- Suggest flashing with ""full-chip erase"" selected, when upgrading from factory firmware.
- Ensure OSD board is powered and camera and vtx/screen is connected when flashing so you can monitor the font-upload process which occurs after upgrading firmware or after resetting firmware configuration.

FC Changes:
- Improved flight performance.
- Updated horizon mode, see docs.
- All-new gyro sync code.
- New gyro/pid task separation to allow gyro filtering.
- Notch filter from Betaflight.  Proper usage of notch filter can improve flight performance.
- IBus telemetry.
- Various smartport/frsky telemetry changes and fixes.
- Various new target support and updates.

FC/OSD changes:
- New voltage meter configuration.
- New current meter configuration.
- Updated MSP API - New Voltage/Amperage/Battery API.  Older MSP commands deleted. 
- Loads and loads of code-cleanups and minor-fixes.

OSD Changes
- New icons.
- New elements.

NAZE
- Dropped support for I2C display due to code size reasons. See #2472
",9066347
1607,False,True,2016-10-23T15:38:45Z,2016-10-23T16:35:48Z,"Cleanflight v1.14.0-Release Candidate 2 (RC2)

There are new defaults that improve flight performance, suggest flashing with 'FULL CHIP ERASE' selected and selectively restoring your settings so that you get the best performance possible.

Cleanflight now supports OSD hardware and OSD configuration via the cleanflight configurator.
Read more about this here: https://github.com/cleanflight/cleanflight/issues/2210
- Unlike other firmware the OSD support in Cleanflight is NOT based on the legacy MinimOSD codebase.  It also works on OSD-ONLY hardware as well as FC-WITH-OSD hardware.

IMPORTANT: 
- Suggest flashing with ""full-chip erase"" selected.

OSD-USERS:
- Ensure OSD board is powered and camera and vtx/screen is connected when flashing so you can monitor the font-upload process which occurs after upgrading firmware or after resetting firmware configuration.

FC Changes:
- Improved flight performance.
- Updated horizon mode, see docs.
- All-new gyro sync code.
- New gyro/pid task separation to allow gyro filtering.
- Notch filter from Betaflight.  Proper usage of notch filter can improve flight performance.
- IBus telemetry.
- Various smartport/frsky telemetry changes and fixes.
- Various new target support and updates.

FC/OSD changes:
- New voltage meter configuration.
- New current meter configuration.
- Updated MSP API - New Voltage/Amperage/Battery API.  Older MSP commands deleted. 
- Loads and loads of code-cleanups and minor-fixes.

OSD Changes
- New icons.
- New elements.
",9066347
1608,False,True,2016-09-13T18:45:15Z,2016-09-13T18:53:04Z,"v1.14.0-Release Candidate 1 (RC1) is the first release of Cleanflight v1.14.0.

This release candidate is aimed at users of the SPRacingF3OSD board only, binaries for other boards will be available when RC2 is released.

IMPORTANT: 
- Flash with ""full-chip erase"" selected.
- Ensure OSD board is powered and camera and vtx/screen is connected when flashing so you can monitor the font-upload process which occurs after a reset.

Known issues:
- Upgrading from v1.13.0 does not reset new configuration settings to their defaults. (Hence the requirement for 'full chip erase' when flashing - See #2395 for details.
",9066347
1609,False,False,2016-06-05T21:26:25Z,2016-06-05T22:20:09Z,"Thanks to anyone who's ever helped out a fellow cleanflight user - without you all the developers would be stuck answering questions instead of coding - keep up the good work!

There have been MASSIVE amounts of code cleanups in this release, we really put the clean in cleanflight with this release.  

There are now over 1000 forks of cleanflight on Github, amazing! - If you're a developer and have forked cleanflight you will really want to incorporate the changes into your codebase ASAP!

NOTE: Upgrading from < v1.13.0 will erase your configuration, backup via GUI and CLI before flashing.
NOTE: Some defaults have changed. Do NOT blindly restore your backups using the CLI.
IMPORTANT: Due to some new default settings you should retune your PIDs.

Changes from v1.12.1
- Enhanced flight performance.
- Support BlHeli 4w interface for ESCs with BlHeli and Sk Bootloader.
- BlHeli ESC configuration and flashing support via USB.
- Mavlink telemetry.
- Complete overhaul of configuration storage mechanism.  Upgrading without loosing settings possible in future.
- Support 4 channel Parallel PWM 3.3v receivers on SPRacingF3MINI.
- Support UART4/5 on STM32F103V
- Configurable colors for LED strip modes.
- New LED strip features for Beacon and GPS status. 
- New OLED display features (PIDs, tasks).
- Updated task scheduler.
- Many, many performance optimizations.
- Substantial code cleanups and reorganization (MSP, Configuraton, PID, Mixer etc).
- Many additional unit test to further enhance robustness.
- Enhanced support for new hardware from various vendors (Motolab, Alienflight, SP Racing, TBS, Lumineer, ImmersionRC).
- Many documentation updates.

Changes from v1.13.0-RC1
- Fix to baro and headfree modes.
- Fix airmode not showing as active in configurator.
- Bug fixes and cleanup of LED strip code for flash size reduction.

Changes from v1.13.0-RC2
- Documentation updates
- Minor code cleanups
- Support MSP_MODECOLOR to allow GUI to configure new LED strip features.
- Fix to MSP RX.

Full change log: https://github.com/cleanflight/cleanflight/compare/v1.12.0...v1.13.0

NOTE: some SPRacingF3EVO boards shipped with firmware 1.12.0 which was labelled 1.13.0.  You can use the date, api version shown when connecting to the board and the cli `status` command to distinguish between them.  If in doubt reflash it.
NOTE: BlHeli 4w support requires latest BlHeliSuite.
NOTE: PID LUX_FLOAT has had its settings scaled to the same values as MWREWRITE so that users can change between LUX_FLOAT and MWREWRITE without changing their PID values.
NOTE: CC3D PPM has been moved from pin 3 to pin 8.
NOTE: Your aircraft won't arm if the processor is overloaded. This normally only effects F1 boards (e.g. Naze, Flip and CC3D). If there is a problem with arming with one of these boards users should switch to the `MWREWRITE` PID or choose other features and settings to reduce CPU load.

Many thanks to @ledvinap @martinbudden for their really hard work on this release!  Thanks also to all testers and everyone else contributing code, bug reports, suggestions, fixes and other feedback.  Only together can we make it AWESOME!
",9066347
1610,False,True,2016-05-30T15:46:33Z,2016-05-30T20:49:41Z,"Thanks to anyone who's ever helped out a fellow cleanflight user - without you all the developers would be stuck answering questions instead of coding - keep up the good work!

There have been MASSIVE amounts of code cleanups in this release, we really put the clean in cleanflight with this release.  

There are now over 1000 forks of cleanflight on Github, amazing! - If you're a developer and have forked cleanflight you will really want to incorporate the changes into your codebase ASAP!

NOTE: Upgrading from < v1.13.0 will erase your configuration, backup via GUI and CLI before flashing.
NOTE: Some defaults have changed. Do NOT blindly restore your backups using the CLI.
IMPORTANT: Due to some new default settings you should retune your PIDs.

Changes from v1.12.1
- Enhanced flight performance.
- Support BlHeli 4w interface for ESCs with BlHeli and Sk Bootloader.
- BlHeli ESC configuration and flashing support via USB.
- Mavlink telemetry.
- Complete overhaul of configuration storage mechanism.  Upgrading without loosing settings possible in future.
- Support 4 channel Parallel PWM 3.3v receivers on SPRacingF3MINI.
- Support UART4/5 on STM32F103V
- Configurable colors for LED strip modes.
- New LED strip features for Beacon and GPS status. 
- New OLED display features (PIDs, tasks).
- Updated task scheduler.
- Many, many performance optimizations.
- Substantial code cleanups and reorganization (MSP, Configuraton, PID, Mixer etc).
- Many additional unit test to further enhance robustness.
- Enhanced support for new hardware from various vendors (Motolab, Alienflight, SP Racing, TBS, Lumineer, ImmersionRC).
- Many documentation updates.

Changes from v1.13.0-RC1
- Fix to baro and headfree modes.
- Fix airmode not showing as active in configurator.
- Bug fixes and cleanup of LED strip code for flash size reduction.

Full change log: https://github.com/cleanflight/cleanflight/compare/v1.12.0...v1.13.0-RC1

NOTE: some SPRacingF3EVO boards shipped with firmware 1.12.0 which was labelled 1.13.0.  You can use the date, api version shown when connecting to the board and the cli `status` command to distinguish between them.  If in doubt reflash it.
NOTE: BlHeli 4w support requires latest BlHeliSuite.
NOTE: PID LUX_FLOAT has had its settings scaled to the same values as MWREWRITE so that users can change between LUX_FLOAT and MWREWRITE without changing their PID values.
NOTE: CC3D PPM has been moved from pin 3 to pin 8.
NOTE: Your aircraft won't arm if the processor is overloaded. This normally only effects F1 boards (e.g. Naze, Flip and CC3D). If there is a problem with arming with one of these boards users should switch to the `MWREWRITE` PID or choose other features and settings to reduce CPU load.

Many thanks to @ledvinap @martinbudden for their really hard work on this release!  Thanks also to all testers and everyone else contributing code, bug reports, suggestions, fixes and other feedback.  Only together can we make it AWESOME!
",9066347
1611,False,True,2016-05-11T23:16:13Z,2016-05-12T09:51:03Z,"Thanks to anyone who's ever helped out a fellow cleanflight user - without you all the developers would be stuck answering questions instead of coding - keep up the good work!

There have been MASSIVE amounts of code cleanups in this release, we really put the clean in cleanflight with this release.  

There are now over 1000 forks of cleanflight on Github, amazing! - If you're a developer and have forked cleanflight you will really want to incorporate the changes into your codebase ASAP!

NOTE: Upgrading from < v1.13.0 will erase your configuration, backup via GUI and CLI before flashing.
NOTE: Some defaults have changed. Do NOT blindly restore your backups using the CLI.
IMPORTANT: Due to some new default settings you should retune your PIDs.

Changes from v1.12.1
- Enhanced flight performance.
- Support BlHeli 4w interface for ESCs with BlHeli and Sk Bootloader.
- BlHeli ESC configuration and flashing support via USB.
- Mavlink telemetry.
- Complete overhaul of configuration storage mechanism.  Upgrading without loosing settings possible in future.
- Support 4 channel Parallel PWM 3.3v receivers on SPRacingF3MINI.
- Support UART4/5 on STM32F103V
- Configurable colors for LED strip modes.
- New LED strip features for Beacon and GPS status. 
- New OLED display features (PIDs, tasks).
- Updated task scheduler.
- Many, many performance optimizations.
- Substantial code cleanups and reorganization (MSP, Configuraton, PID, Mixer etc).
- Many additional unit test to further enhance robustness.
- Enhanced support for new hardware from various vendors (Motolab, Alienflight, SP Racing, TBS, Lumineer, ImmersionRC).
- Many documentation updates.

Full change log: https://github.com/cleanflight/cleanflight/compare/v1.12.0...v1.13.0-RC1

NOTE: some SPRacingF3EVO boards shipped with firmware 1.12.0 which was labelled 1.13.0.  You can use the date, api version shown when connecting to the board and the cli `status` command to distinguish between them.  If in doubt reflash it.
NOTE: BlHeli 4w support requires latest BlHeliSuite.

Many thanks to @ledvinap @martinbudden for their really hard work on this release!  Thanks also to all testers and everyone else contributing code, bug reports, suggestions, fixes and other feedback.  Only together can we make it AWESOME!
",9066347
1612,False,False,2016-04-10T18:33:53Z,2016-04-10T18:18:07Z,"IMPORTANT: *\* Requires >= v1.1.0 configurator **

NOTE: Upgrading from < v1.12.0 will erase your configuration, backup via GUI and CLI before flashing.
NOTE: Some defaults have changed. Do NOT blindly restore your backups using the CLI.
IMPORTANT: Due to some new default settings you should retune your PIDs.

REMINDER: Some CLI get/set commands have changed. some variables are now set using OFF/ON instead of 0/1.

Changes between v1.12.1 and v1.12.0
- Fix to Naze32 PWM mapping.
- SPRacingF3EVO support.

Note: some SPRacingF3EVO boards shipped with this firmware equivalent to this but with in incorrect version number of 1.13.0 instead of 1.12.1 and without the important fix for the MPU9250 mag driver.

Changes from v1.12.0
- Support for the SPRacingF3Mini FC including Blackbox Logging via built-in SD Card and iLAP compatible race transponder system.
- Support for the LUX_RACE FC.
- Gyro sync and filters for better flight performance (enabled by default).
- New AIR_MODE feature.
- New faster and more accurate IMU for better flight performance.
- New task scheduler to allow sensor readings to be processed earlier.
- Sonar improvements. (Available sparky now too).
- G-Tune available on Naze32 and other targets.
- Blackbox logging improvements.
- Additional MSP commands for failsafe configuration via GUI.
- Documentation improvements.
- Add LTM telemetry (replaces MSP telemetry).
- Fix in GPS UBLOX so handle badly received UBLOX packets, prevents unrecoverable GPS communication loss.
- More settings are in-flight adjustable.
- Support non-inverted SBus receivers (OpenLRS and modified FrSky receivers).
- Many code optimizations.
- Many documentation improvements and fixes.
- Even more unit tests to ensure code reliability.

KNOWN ISSUES:
- Do not use PPM and ONESHOT on CC3D when using sticks to arm (use a switch). See #1748

Special mention to key contributors: DigitalEntity, BorisB, Ledvinap, ProDrone, Stronnag and MartinBudden.  Thanks guys - your continued work keeps making everything better!

Thanks again to the awesome Cleanflight developer and user communities for their continued hard work, support and feedback.
",9066347
1613,False,False,2016-02-20T14:53:25Z,2016-02-20T14:55:30Z,"IMPORTANT: *\* Requires >= v1.1.0 configurator **

NOTE: Upgrading from < v1.12.0 will erase your configuration, backup via GUI and CLI before flashing.
NOTE: Some defaults have changed. Do NOT blindly restore your backups using the CLI.
IMPORTANT: Due to some new default settings you should retune your PIDs.

REMINDER: Some CLI get/set commands have changed. some variables are now set using OFF/ON instead of 0/1.
- Support for the SPRacingF3Mini FC including Blackbox Logging via built-in SD Card and iLAP compatible race transponder system.
- Support for the LUX_RACE FC.
- Gyro sync and filters for better flight performance (enabled by default).
- New AIR_MODE feature.
- New faster and more accurate IMU for better flight performance.
- New task scheduler to allow sensor readings to be processed earlier.
- Sonar improvements. (Available sparky now too).
- G-Tune available on Naze32 and other targets.
- Blackbox logging improvements.
- Additional MSP commands for failsafe configuration via GUI.
- Documentation improvements.
- Add LTM telemetry (replaces MSP telemetry).
- Fix in GPS UBLOX so handle badly received UBLOX packets, prevents unrecoverable GPS communication loss.
- More settings are in-flight adjustable.
- Support non-inverted SBus receivers (OpenLRS and modified FrSky receivers).
- Many code optimizations.
- Many documentation improvements and fixes.
- Even more unit tests to ensure code reliability.

KNOWN ISSUES:
- Do not use PPM and ONESHOT on CC3D when using sticks to arm (use a switch). See #1748

Special mention to key contributors: DigitalEntity, BorisB, Ledvinap, ProDrone, Stronnag and MartinBudden.  Thanks guys - your continued work keeps making everything better!

Thanks again to the awesome Cleanflight developer and user communities for their continued hard work, support and feedback.
",9066347
1614,False,True,2016-02-05T13:18:23Z,2016-02-05T15:24:54Z,"IMPORTANT: *\* Requires >= v1.1.0 configurator **

NOTE: Upgrading from < v1.12.0 will erase your configuration, backup via GUI and CLI before flashing.
NOTE: Some defaults have changed. Do NOT blindly restore your backups using the CLI.
IMPORTANT: Due to some new default settings you should retune your PIDs.

REMINDER: Some CLI get/set commands have changed. some variables are now set using OFF/ON instead of 0/1.
- Gyro sync and filters for better flight performance (enabled by default).
- New faster and more accurate IMU for better flight performance.
- New task scheduler to allow sensor readings to be processed earlier.
- Sonar improvements. (Available sparky now too).
- G-Tune available on Naze32 and other targets.
- Blackbox logging improvements.
- Additional MSP commands for failsafe configuration via GUI.
- Documentation improvements.
- Add LTM telemetry (replaces MSP telemetry).
- Fix in GPS UBLOX so handle badly received UBLOX packets, prevents unrecoverable GPS communication loss.
- More settings are in-flight adjustable.
- Support non-inverted SBus receivers (OpenLRS and modified FrSky receivers).
- Many code optimizations.
- Many documentation improvements and fixes.
- Even more unit tests to ensure code reliability.

KNOWN ISSUES:
- Do not use PPM and ONESHOT on CC3D when using sticks to arm (use a switch). See #1748

Special mention to key contributors: DigitalEntity, BorisB, Ledvinap, ProDrone, Stronnag and MartinBudden.  Thanks guys - your continued work keeps making everything better!

Thanks again to the awesome Cleanflight developer and user community for their continued hard work, support and feedback.
",9066347
1615,False,True,2016-01-11T15:21:27Z,2016-01-11T15:17:42Z,"IMPORTANT: *\* Requires >= v1.1.0 configurator **

NOTE: Upgrading from < v1.12.0 will erase your configuration, backup via GUI and CLI before flashing.
NOTE: Some defaults have changed. Do NOT blindly restore your backups using the CLI.

REMINDER: Some CLI get/set commands have changed. some variables are now set using OFF/ON instead of 0/1.
- Gyro Sync (use `set gyro_sync=ON` cli command to enable) for better flight performance 
- Gyro filters. (see `gyro_soft_lpf` and `gyro_lpf` cli settings).
- New Faster and more accurate IMU for better flight performance.
- New task scheduler to allow sensor readings to be processed earlier.
- Many code optimizations.
- Sonar improvements. (Available sparky now too).
- G-Tune available on Naze32 and other targets.
- Blackbox logging improvements.
- Additional MSP commands for failsafe configuration via GUI.
- Documentation improvements.
- Add LTM telemetry (replaces MSP telemetry).
- Fix in GPS UBLOX so handle badly received UBLOX packets, prevents unrecoverable GPS communication loss.
- More settings are in-flight adjustable.
- Support non-inverted SBus receivers (OpenLRS and modified FrSky receivers).
- Many documentation improvements and fixes.
- Even more unit tests to ensure code reliability.

Special mention to key contributors: DigitalEntity, BorisB, Ledvinap, ProDrone, Stronnag and MartinBudden.  Thanks guys - your continued work keeps making everything better!

Thanks again to the awesome Cleanflight developer and user community for their continued hard work, support and feedback.
",9066347
1616,False,False,2015-12-12T22:50:46Z,2015-11-28T17:37:20Z,"IMPORTANT: *\* Requires >= v1.1.0 configurator **

NOTE: Upgrading from < v1.11.0 will erase your configuration, backup via GUI and CLI before flashing.
NOTE: Some defaults have changed.  Do NOT blindly restore your backups using the CLI.  
NOTE: CLI get/set commands have changed.  some variables are now set using OFF/ON instead of 0/1.
NOTE: Experimental PID controllers have been removed.  Only MW23, MWREWRITE and LUXFLOAT remain.
NOTE: Openpilot bootloader support as been removed.  Flashing CC3D's via GCS is no-longer supported. See docs.
NOTE: G-Tune not available on NAZE target, it didn't fit - latest development builds have G-Tune on Naze Target.

Changes:
- Improved flight performance.
- Replaced AUTOTUNE with G-TUNE.
- More robust SBUS and Spektrum support.
- Failsafe improvements.
- Mixer output mapping fixes.
- I2C overclock feature.
- Sonar improvements.
- CLI usabiity improvements.
- Removed less popular PID controllers - experimentation time is over.
- Blackbox logging improvements and fixes.
- USART1 can be used for SerialRX on F3 boards.
- HoTT Telemetry improvements and fixes.
- Support Naze32 Rev6.
- Support RMRC DoDo target.
- Many other fixes and general improvements.
- More unit tests.
- Documentation improvements.

Many thanks to the awesome Cleanflight developer and user community for their continued hard work, support and feedback.
",9066347
1617,False,False,2015-10-02T13:54:57Z,2015-10-02T14:31:12Z,"IMPORTANT: *\* Requires >= v0.66.0 configurator - DEVELOPMENT VERSION **
IMPORTANT: *\* Verify your RX and failsafe is configured after upgrading, check your channel endpoints when your rx is operating normally and when in failsafe mode, see rx_min_usec and rx_max_usec **

NOTE: Upgrading from < v1.10.0 will erase your configuration, backup via GUI and CLI before flashing.
NOTE: Some defaults have changed.  Do NOT blindly restore your backups using the CLI.
NOTE: If you us luxfloat PID controller retune from new defaults.
NOTE: cmix cli command has been renamed to mmix (mmix for motors, smix for servos, both use a zero-based index for motors).

WARNING: If using FrSky SBus receivers please ensure you are using a version that contains a fix for signal dropouts, see FrSky's website for latest firmware.

Changes:
- Improved flight performance.
- Major failsafe improvements and fixes - also see 'rxfail' CLI command for FC failsafe settings.
- Blackbox logging improvements and fixes.
- Battery voltage monitoring and improvements.
- Allow independent pitch and roll in-flight PID adjustment.
- Filtering of Gyro readings. (enable via cli)
- Filtering of PIDs. (enable via cli).
- Configurable servo mixers. 
- New custom tricopter and custom airplane mixers.
- Fixed wing improvements and fixes.
- Groundwork for TILT flight modes (work-in-progress).
- RC Input smoothing. (enable via cli)
- Lux PID controller improvements and new defaults.
- Telemetry fixes and improvements.
- SPRacingF3 - Enable SoftSerial on CH4/5 and CH7/8 (RX/TX)
- Various cleanups and fixes for 3D flight.
- Rename `yaw_direction` to `yaw_motor_direction` to avoid confusion between `yaw_control_direction` and yaw servo configuration.
- Improved SUMD RX handling.
- Improved FC hardware failure indication - count the long flashes after the short flashes when the FC doesn't boot to determine failure reason.
- Many other fixes and general improvements.
- Support TBS Colibri Race target.
- More unit tests.
- Documentation improvements.

Correct usage PIDs in combination with gyro settings and filters will improve flight performance and give you longer flight times. See documentation and tuning guides.
",9066347
1618,False,True,2015-09-29T10:14:09Z,2015-09-29T10:14:32Z,"IMPORTANT: *\* Requires >= v0.66.0 configurator - DEVELOPMENT VERSION **
IMPORTANT: *\* Verify your RX and failsafe is configured after upgrading, check your channel endpoints when your rx is operating normally and when in failsafe mode, see rx_min_usec and rx_max_usec **

NOTE: Upgrading from < v1.10.0 will erase your configuration, backup via GUI and CLI before flashing.
NOTE: Some defaults have changed.  Do NOT blindly restore your backups using the CLI.
NOTE: If you us luxfloat PID controller retune from new defaults.
NOTE: cmix cli command has been renamed to mmix (mmix for motors, smix for servos, both use a zero-based index for motors).

WARNING: If using FrSky SBus receivers please ensure you are using a version that contains a fix for signal dropouts, see FrSky's website for latest firmware.

Changes:
- Improved flight performance.
- Major failsafe improvements and fixes - also see 'rxfail' CLI command for FC failsafe settings.
- Blackbox logging improvements and fixes.
- Battery voltage monitoring and improvements.
- Allow independent pitch and roll in-flight PID adjustment.
- Filtering of Gyro readings. (enable via cli)
- Filtering of PIDs. (enable via cli).
- Configurable servo mixers. 
- New custom tricopter and custom airplane mixers.
- Fixed wing improvements and fixes.
- Groundwork for TILT flight modes (work-in-progress).
- RC Input smoothing. (enable via cli)
- Lux PID controller improvements and new defaults.
- Telemetry fixes and improvements.
- SPRacingF3 - Enable SoftSerial on CH4/5 and CH7/8 (RX/TX)
- Various cleanups and fixes for 3D flight.
- Rename `yaw_direction` to `yaw_motor_direction` to avoid confusion between `yaw_control_direction` and yaw servo configuration.
- Improved SUMD RX handling.
- Improved FC hardware failure indication - count the long flashes after the short flashes when the FC doesn't boot to determine failure reason.
- Many other fixes and general improvements.
- Support TBS Colibri Race target.
- More unit tests.
- Documentation improvements.

Correct usage PIDs in combination with gyro settings and filters will improve flight performance and give you longer flight times. See documentation and tuning guides.
",9066347
1619,False,False,2015-05-31T12:39:36Z,2015-06-03T00:41:05Z,"IMPORTANT: *\* Requires >= v0.63.2 configurator **
IMPORTANT: *\* Verify your RX and failsafe is configured after upgrading, check your channel endpoints when your rx is operating normally and when in failsafe mode, see rx_min_usec and rx_max_usec **

NOTE: Upgrading from < v1.9.0 will erase your configuration, backup via GUI and CLI before flashing.
NOTE: Yaw behavior has changed and new settings to tune yaw have been added, yaw-retuning may be required. See documentation.
NOTE: Tricopter pilots may wish to enable servo filtering - try without first.

Known issues:
- Please help with known issues, see here: https://github.com/cleanflight/cleanflight/labels/bug

Changes
- Full support for SPRacingF3 board - http://seriouslypro.com/spracingf3
- Oneshot ESC safety improvements.  Better support for auto-switching ESCs.
- Improved Yaw.
- Yaw Expo (via CLI/MSP, configurator support soon).
- Rewritten failsafe and RX loss detection code.  Unit tested.
- Beeper code overhaul.
- Warning led code overhaul.
- Horizon mode fixes for PID Controller 1.
- Sonar/Baro Alt-Holt improvements (less drift, more accurate barometer readings).
- Sparky compatability fixes.
- Tricopter/Airpane yaw servo low-throttle fixes.
- Blackbox Logging updates.
- Independent in-flight adjustments for Pitch P/I/D and Roll P/I/D (requires v0.64.0 configurator)
- Support for UART3 and I2C on Paris Air Hero 32 / Naze32 SP
- Support for Sonar on CC3D
- Many documentation additions and cleanups.
- Many code cleanups.
- Many minor bug fixes.
- Reduced maximum mode ranges from 40 to 20.
- New `serial` cli command.

Many thanks to everyone who has contributed to this release!

Please consider donating to the Cleanflight project if you find this useful.
",9066347
1620,False,False,2015-04-01T21:15:59Z,2015-05-17T21:29:33Z,"IMPORTANT: *\* Requires the latest v0.63.0 configurator **

NOTE: Upgrading from < v1.8.0 will erase your configuration, backup via GUI and CLI before flashing.

NOTE: Other software clients will need updating to use the modified MSP_RC_TUNING command.

NOTE: Your pid controller 2 (LuxFloat) P/R/Y I term values should be divided by 10 to retain previous flight behavior when upgrading from < v1.8.0

Known Issues:
- Do not use `retarded_arm` and `pid_at_min_throttle` - See #719.

Bugfix release v1.8.1
- Fix for hang when attempting to use Softserial ports when Softserial feature is disabled.
- Fix SmartPort on all F3 targets.
- Fix FrSky RPM when using MOTOR_STOP.
- Fix for Virtual Current Meter when using 3D Flight.
- Enable telemetry on Sparky.
- Enable autotune on Sparky (Autotune is still experimental, YMMV).
- Enable current and battery monitoring on Sparky.

Changes from v1.8.0
- Blackbox Flight data logging to onboard SPI flash chips (Naze Full, CC3D, SPRacingF3)
- Low-pass servo filtering.
- Re-designed serial port configuration.
- Multiple simultaneous telemetry systems can be used.
- CLI now also available on all MSP ports.
- Support MSP on 2 ports at different baud rates (e.g. for using configuring via Bluetooth using SoftSerial2 at 19200)
- Blackbox support for 230400 and 250000 baud rates.
- Better support for SumD failsafe (works the same as SBus failsafe).
- Independent Pitch/Roll rate adjustment (in GUI and in-flight).
- Support TPA Breakpoint adjustment in GUI.
- Cleanup of Mag/Acc sensor selection.
- Support high precision FrSky Voltage monitoring.
- Bug fix for tricopter 3D flight.
- NMEA GPS SpaceVehicle information support.
- Support for new SPRacingF3 Flight Controller.
- Sonar support for some STM32F3 based boards.
- Battery Voltage and Current monitoring on the Sparky.
- Many documentation updates.
- Many code cleanups.
",9066347
1621,False,False,2015-03-30T22:00:24Z,2015-03-27T16:21:32Z,"IMPORTANT: *\* Requires the latest v0.63.0 configurator **

NOTE: Flashing will erase your configuration, backup via GUI and CLI before flashing.

NOTE: Other software clients will need updating to use the modified MSP_RC_TUNING command.

NOTE: Your pid controller 2 (LuxFloat) P/R/Y I term values should be divided by 10 to retain previous flight behavior.
- Blackbox Flight data logging to onboard SPI flash chips (Naze Full, CC3D, SPRacingF3)
- Low-pass servo filtering.
- Re-designed serial port configuration.
- Multiple simultaneous telemetry systems can be used.
- CLI now also available on all MSP ports.
- Support MSP on 2 ports at different baud rates (e.g. for using configuring via Bluetooth using SoftSerial2 at 19200)
- Blackbox support for 230400 and 250000 baud rates.
- Better support for SumD failsafe (works the same as SBus failsafe).
- Independent Pitch/Roll rate adjustment (in GUI and in-flight).
- Support TPA Breakpoint adjustment in GUI.
- Cleanup of Mag/Acc sensor selection.
- Support high precision FrSky Voltage monitoring.
- Bug fix for tricopter 3D flight.
- NMEA GPS SpaceVehicle information support.
- Support for new SPRacingF3 Flight Controller.
- Sonar support for some STM32F3 based boards.
- Battery Voltage and Current monitoring on the Sparky.
- Many documentation updates.
- Many code cleanups.
",9066347
1622,False,False,2015-02-22T21:57:15Z,2015-02-18T00:27:45Z,"Bugfix release v1.7.2
- Fix drift in HaraKiri PID controller (Crashpilot/MJ666/Nebbian)
- Major documentation updates.
- Sensors Page on OLED display shows additional values.
- New CLI command for servos (dump/backup via cli now contains all the settings).
- CLI status command now shows all detected sensor names.
- Fix external mag/baro detection on targets that don't have onboard sensors.
- Improve SBus compatibility.  Now tested on FrSky X4RSB & X8R, Futaba R6208SB & R6303SB.
- Support 2 digital channels on SBus (for Futaba RXs).
- Improve ESC compatibility (legacy issue inherited from baseflight).
- Fix PWM/USART2 clash on STM32F1 targets.
- Fix hardware inverter GPIO initialization - Allows S.Bus receviers to be connected to CC3D's Main Port (USART1) without external inverter cable.

Bugfix release v1.7.1
- Fix current meter when VBAT feature is not enabled.

Changes  from v1.7.0
- Three new pid controllers, feedback wanted so we can decide which to keep.
- LED strip thrust ring.
- LED strip color configuration.
- LED strip on/off via mode/channel.
- CC3D - USB VCP support. Flash .hex with USB->UART. Flash .bin with GCS as before.  Configure via USB.
- Sparky baro support (some Sparky boards have very noisy Baro sensors, ones from RadioC are fine).
- Blackbox logging improvements (autotune, etc).
- Virtual current meter.
- Current meter and ADC improvements and fixes.
- XBUS / Align JR01 DMSS Receiver Support.
- Fix PWM failsafe channel mapping issue.
- Servo mid-point decoupled from RX mid-point.
- Many, many code cleanups.

Notes:
- Upgrading to this firmware from a version lower than v1.7.0 will reset the configuration. Ensure you have a backup before flashing.
- Configurator v0.61.0 is required for LED strip configuration.
",9066347
1623,False,False,2015-02-04T00:43:43Z,2015-02-04T11:40:20Z,"Bugfix release v1.7.1
- Fix current meter when VBAT feature is not enabled.

Changes  from v1.7.0
- Three new pid controllers, feedback wanted so we can decide which to keep.
- LED strip thrust ring.
- LED strip color configuration.
- LED strip on/off via mode/channel.
- CC3D - USB VCP support. Flash .hex with USB->UART. Flash .bin with GCS as before.  Configure via USB.
- Sparky baro support (some Sparky boards have very noisy Baro sensors, ones from RadioC are fine).
- Blackbox logging improvements (autotune, etc).
- Virtual current meter.
- Current meter and ADC improvements and fixes.
- XBUS / Align JR01 DMSS Receiver Support.
- Fix PWM failsafe channel mapping issue.
- Servo mid-point decoupled from RX mid-point.
- Many, many code cleanups.

Notes:
- Upgrading to this firmware from a version lower than v1.7.0 will reset the configuration. Ensure you have a backup before flashing.
- Configurator v0.61.0 is required for LED strip configuration.
",9066347
1624,False,False,2015-02-02T00:31:43Z,2015-01-27T23:21:41Z,"- Three new pid controllers, feedback wanted so we can decide which to keep.
- LED strip thrust ring.
- LED strip color configuration.
- LED strip on/off via mode/channel.
- CC3D - USB VCP support. Flash .hex with USB->UART. Flash .bin with GCS as before.  Configure via USB.
- Sparky baro support (some Sparky boards have very noisy Baro sensors, ones from RadioC are fine).
- Blackbox logging improvements (autotune, etc).
- Virtual current meter.
- Current meter and ADC improvements and fixes.
- XBUS / Align JR01 DMSS Receiver Support.
- Fix PWM failsafe channel mapping issue.
- Servo mid-point decoupled from RX mid-point.
- Many, many code cleanups.

Notes:
- Upgrading to this firmware will reset the configuration. Ensure you have a backup before flashing.
- Configurator v0.61.0 is required for LED strip configuration.
",9066347
1625,False,False,2015-01-16T12:38:57Z,2015-01-16T12:42:07Z,"- PID controller 2 horizion fixes by nebbian.
- SBus timeout correction.
- MSP_SET_LED_STRIP_CONFIG updated to allow configurator to save LED configuration.
- Blackbox can now log autotune events, please submit autotune blackbox logs to us!
- LED Strip support on Sparky
- Many documentation updates. 
",9066347
1626,False,False,2015-01-09T14:06:52Z,2015-01-08T19:03:18Z,"- Blackbox flight recording! - https://www.youtube.com/watch?v=dR8OnqclSso - https://github.com/cleanflight/cleanflight/blob/master/docs/Blackbox.md
- MSP_SET_RAW_RC fix and improvement.
- MSP_LED_CONFIG fix.
- MSP_SET_LED_CONFIG improvement.
- CJMCU hardware revision detection and support for the LED3.
",9066347
1627,False,False,2015-01-03T22:00:16Z,2015-01-03T22:09:15Z,"- Add new MSP commands so that client programs can detect the flight controller variant.
- Add new MSP commands to enable serial port configuration.
- Support new CJMCU board revision.
- Fix flight behaviour when aircraft is inverted and using an RC Rate greater than 1.
",9066347
1628,False,False,2014-12-28T16:18:59Z,2014-12-28T16:27:15Z,"- More robust SBus support.
- Automatic disarm.
- Avoid MSP cpu hog (mainly noticable when using two MSP ports).
- Improved sonar driver.
- Sparky MAG/Compass support.
- Various other minor fixes and improvements, see github changelog for more details.

Notes:

Upgrading to this firmware will reset the configuration. Ensure you have a backup before flashing.
",9066347
1629,False,False,2014-12-21T23:47:38Z,2014-12-21T23:59:27Z,"- Latest binaries for use with latest configurator.
- Support ATAIL mixer.
- Fix beeping when using rate profile selection.
- Added support for battery warning voltage alarm.
- Added spektrum bind support.
- Fix GPS angle reset when disabling GPS home/hold mode.

Known issues:
- Setting mixer via MSP not working.

Notes:

Upgrading to this firmware will reset the configuration. Ensure you have a backup before flashing.
",9066347
1630,False,False,2014-12-16T00:21:23Z,2014-12-16T00:22:54Z,"- GPS and OLED Display improvements.
",9066347
1631,False,False,2014-11-24T15:50:44Z,2014-11-24T15:53:52Z,"- First release using GitHub releases system.
",9066347
1632,False,False,2020-03-01T06:55:07Z,2020-03-01T07:00:10Z,"5628e1b Fix bug of download file
bbef557 up/down file: notice must be run as root
da3b335 Check disk space before downloading file
cff9a71 up/down file: Optimize code
7e0461c Fix bug: File not closed when downloads was cancelled
9818ed0 ssl: Compatible with mbedtls 2.3 and lower
",92715023
1633,False,False,2020-02-11T03:13:17Z,2020-02-11T03:19:17Z,"1d7801a Fix bug: compile fail when select mbedtls
7ef3318 ssl: Optimize code
82516d4 ssl: Fix bug while reconnect fail
d44d71c start_file_service should move to rtty_start
b3e6f82 Remove unused variable
566440b Fix typo bug
3986ad6 Optimize code
f03f2c6 Fix bug: mem leak
9d555c4 Fix code style",92715023
1634,False,False,2020-02-07T07:42:16Z,2020-02-07T07:51:25Z,"7ba7b1a Fix code style
347ef19 download file: Fix bug
5706c4b Optimize file operation
3e375cb down file: more stable
6d2b5a4 buffer: sync from upstream
",92715023
1635,False,False,2020-01-31T07:43:43Z,2020-01-31T07:48:42Z,"974747f install.sh: Fix clone rtty
a1e4fd1 Fix bug while ssl off on compiling
59bc14a ssl: Fix bug while use wolfssl
e6cdf0b Drop the depend of libuwsc
",92715023
1636,False,False,2019-04-25T02:49:40Z,2019-04-25T02:50:41Z,479d630 luci: support configure token,92715023
1637,False,False,2019-04-25T02:38:50Z,2019-04-25T02:41:44Z,"d5dad94 Support authorization
d589674 Server port default to 5912
c086f35 Fix bug #41: SegFault in main.c:change_winsize",92715023
1638,False,False,2019-01-09T02:40:42Z,2019-01-09T02:41:56Z,"80bb133 exec cmd: base64 stdout and stderr
d273c59 Improve remote exec command
53b5b72 libuwsc minimum required 3.2
c266af2 Optimize code",92715023
1639,False,False,2018-12-23T13:54:04Z,2018-12-23T13:55:34Z,"2a567a0 Fix bug: exec cmd fail when stdout too big
24478bd Add support luci",92715023
1640,False,False,2018-12-14T08:41:46Z,2018-12-14T08:46:38Z,"c5e0f17 transfer file: Optimize progress
aeed2e7 Reimplement the file transfer
a17be67 Fix compile failed in centos 6",92715023
1641,False,False,2018-10-18T08:09:24Z,2018-10-18T08:11:33Z,"bad3701 command: Check the params or env whether is empty
d9911b1 Close unused pipe fd
1f4d095 Fix bug: freed pointer is used in 'do_connect'
17d2036 Fix bug: may take up memory for a long time
d21cc05 Drop version match
35313e8 Support run in the background",92715023
1642,False,False,2018-10-04T14:42:34Z,2018-10-04T14:46:11Z,"Fix bug: Reference freed pointer in uwsc_onclose and uwsc_onerror 0b45a55
Use version to match server 9e38be4
Optimize code 5551842
Use lrzsz to transfer file ef96054",92715023
1643,False,False,2018-09-21T13:12:13Z,2018-09-21T13:14:04Z,"4b55c76 Optimize keep-alive mechanism
8d6ba53 Support match protocol versions between server and client",92715023
1644,False,False,2018-09-20T13:42:09Z,2018-09-20T13:43:12Z,1ff026e Fix bug: Send up to 65535 bytes using libuwsc,92715023
1645,False,False,2018-09-10T15:16:36Z,2018-09-10T15:25:42Z,45a8e69 Optimize auto reconnect,92715023
1646,False,False,2018-09-09T14:32:25Z,2018-09-09T14:33:52Z,ff4e8e5 Don't allowed to set the interval of Ping,92715023
1647,False,False,2018-09-08T17:53:52Z,2018-09-08T17:55:46Z,,92715023
1648,False,True,2018-09-08T09:47:53Z,2018-09-08T09:50:07Z,0d94ba8 Refactoring with libev,92715023
1649,False,False,2018-06-17T16:35:08Z,2018-06-17T16:38:21Z,"853baee Support change winsize for pty
59df4a4 Use getuid instead of setuid to check root
00b9166 Fix compile error in some platform",92715023
1650,False,False,2018-06-14T08:39:23Z,2018-06-14T08:41:48Z,a1618a8 Optimize code by use protobuf,92715023
1651,False,False,2018-06-13T06:40:04Z,2018-06-13T06:41:11Z,13ca0ff Use log api from libuwsc,92715023
1652,False,False,2018-06-12T06:58:32Z,2018-06-12T07:15:43Z,Use protobuf,92715023
1653,False,False,2018-05-23T10:01:34Z,2018-05-23T12:34:01Z,252e9f2 fix bug #18,92715023
1654,False,False,2018-03-15T14:29:58Z,2018-03-15T14:32:38Z,"f056af0 Fix bug: double free memory when execute a command timeout
69260b6 Fix bug: Error class did not match the server

f056af0 修复bug：当执行命令超时时重复释放内存
69260b6 修复bug：错误类型未和服务器匹配",92715023
1655,False,False,2018-03-13T14:49:13Z,2018-03-13T14:50:37Z,"32daf09 support execute a command remote

32daf09 支持远程执行命令",92715023
1656,False,False,2018-03-03T15:03:23Z,2018-03-03T15:04:15Z,Change license to LGPL2,92715023
1657,False,False,2018-02-07T09:00:20Z,2018-02-07T09:05:02Z,"0442912 Fix bug: The length of destination buf be miscalculated.
4370222 Fix bug: Filter '/dev', '/sys' and '/proc' failed when download file.
02d8168 Optimization code.
1e7dc94 Fix bug: URLEncode should be used to encode description, not Base64.
54ddb2f Optimization: Use avl instead of list to manage sessions.
d5ec86c Optimization: reduce the time of memory occupation",92715023
1658,False,False,2018-02-06T09:02:02Z,2018-02-06T09:03:23Z,"2cb78bf Fix bug: Formatting error of the file list sent.
373c577 Filter the '/dev', '/proc', '/sys' when download file",92715023
1659,False,False,2018-02-06T07:17:22Z,2018-02-06T07:18:21Z,"82ebf86 ping interval configurable
bba4b96 Support download file from device",92715023
1660,False,False,2018-02-05T16:45:35Z,2018-02-05T16:47:33Z,"a683c52 Restructure

No longer use JSON;
Using binary data in TLV format;
Optimization code;",92715023
1661,False,False,2018-01-23T04:23:15Z,2018-01-23T04:25:06Z,"1d1d6c0 Bump version 2.2.0
fa08867 libuwsc-1.1 required
4150994 Optimize upload file
b60a15a Support upload file to device
eb6f5ea Fix bug: do_connect is invoked by cyclic without interval when reconnect",92715023
1662,False,False,2018-01-18T08:46:21Z,2018-01-18T08:54:23Z,"84d89b2 Bump version 2.1.0
05d17a7 Support ssl",92715023
1663,False,False,2018-01-18T00:23:19Z,2018-01-18T00:40:18Z,"ffa8b6e Bump version 2.0.0
820c73b Validate the ID specified by user
383299e Support to add a description to the device
4d0ee0e server: python -> GO
e8276d5 Optimize code
c7a96f3 Remove not used code
e8e79bb server: an automatic jump function for url
17df030 Fix ID conflicts
8e470cc Access devices through configurable ID
e679887 Fix bug: Segmentation fault
e4c6a83 optimize automatically reconnect
fd9ee1b Fix bug: Memory leak
297793b The client support automatically reconnect to the server
66d705c Remove debug code
f94ca85 optimize code format
0e88eee Fix bug: segment err
de1e3e0 improve code
331c0db Optimize code
0c9a1db Adjust the heartbeat interval to 10 seconds
a2feaa0 Check whether there is a login program
a58ccc3 Forcing root to run
59c5781 Fix bug: double free
eba4c8a Fix bug: when close, not quit loop
",92715023
1664,False,False,2017-07-03T12:21:52Z,2017-07-03T12:27:07Z,,92715023
1665,False,False,2015-06-09T01:50:40Z,2015-06-09T01:51:05Z,"主要更新：
- 新增：编辑器黑色主题 Dark，改进自定义主题功能（即工具栏、编辑区、预览区可分别设置主题样式）；
- 新增：多行公式支持；
- 新增：支持非编辑状态下的 ToC 自定义容器；
- 新增：支持设置为单向同步滚动；
- 改进：编辑器样式美化，更换了滚动条样式; 
- 改进：提高同步滚动定位的精确度；
- 改进：修复和改进 HTML 标签及属性过滤功能；
- 改进：修复在 Bootstrap 下的兼容性问题；
- 修复多处 Bug；
",30136107
1666,False,False,2015-06-02T08:11:32Z,2015-06-02T08:12:31Z,,30136107
1667,False,False,2015-03-11T18:33:11Z,2015-03-11T18:34:06Z,,30136107
1668,False,False,2015-03-09T17:24:48Z,2015-03-09T17:26:12Z,,30136107
1669,False,False,2015-02-15T16:49:11Z,2015-02-16T04:30:33Z,"added logo, added Image upload, added custom toolbar, added l18n....
",30136107
1670,False,False,2015-02-09T17:14:51Z,2015-02-09T17:16:58Z,"remove MathJax, using KaTeX. 
",30136107
1671,False,False,2017-03-19T08:10:30Z,2017-03-19T08:11:30Z,,46494844
1672,False,False,2017-02-18T19:02:27Z,2017-02-18T19:02:58Z,,46494844
1673,False,False,2017-01-21T18:20:52Z,2017-01-21T18:22:12Z,,46494844
1674,False,False,2017-01-19T10:09:52Z,2017-01-19T10:10:26Z,,46494844
1675,False,False,2017-01-12T14:56:45Z,2017-01-12T14:57:18Z,,46494844
1676,False,False,2016-12-31T22:52:41Z,2016-12-31T22:53:08Z,,46494844
1677,False,False,2016-12-19T06:59:57Z,2016-12-19T07:01:15Z,,46494844
1678,False,False,2016-12-18T20:45:58Z,2016-12-18T20:46:31Z,,46494844
1679,False,False,2016-12-12T07:17:55Z,2016-12-12T07:18:57Z,,46494844
1680,False,False,2016-12-09T06:39:30Z,2016-12-09T06:40:25Z,,46494844
1681,False,False,2016-12-07T06:10:25Z,2016-12-07T06:10:47Z,,46494844
1682,False,False,2016-11-23T07:27:06Z,2016-11-23T07:28:56Z,,46494844
1683,False,False,2016-11-23T07:22:23Z,2016-11-23T07:27:33Z,,46494844
1684,False,False,2016-11-16T08:00:20Z,2016-11-16T08:03:15Z,,46494844
1685,False,False,2016-11-06T18:52:18Z,2016-11-06T18:52:57Z,,46494844
1686,False,False,2016-11-04T12:21:10Z,2016-11-04T12:23:06Z,,46494844
1687,False,False,2016-11-04T06:28:00Z,2016-11-04T06:28:53Z,,46494844
1688,False,False,2016-10-29T16:13:22Z,2016-10-29T16:13:57Z,,46494844
1689,False,False,2016-10-17T20:16:40Z,2016-10-17T20:25:30Z,,46494844
1690,False,False,2016-10-16T08:30:08Z,2016-10-16T09:27:36Z,,46494844
1691,False,False,2016-10-06T08:12:50Z,2016-10-06T08:29:12Z,,46494844
1692,False,False,2016-10-06T05:28:56Z,2016-10-06T05:29:16Z,,46494844
1693,False,False,2016-10-05T09:20:42Z,2016-10-05T09:21:03Z,,46494844
1694,False,False,2016-10-05T09:15:07Z,2016-10-05T09:15:31Z,,46494844
1695,False,False,2016-10-05T09:12:57Z,2016-10-05T09:13:29Z,,46494844
1696,False,False,2016-10-05T06:52:33Z,2016-10-05T06:53:20Z,,46494844
1697,False,False,2016-10-05T06:48:29Z,2016-10-05T06:49:01Z,,46494844
1698,False,False,2016-10-05T06:30:00Z,2016-10-05T06:32:24Z,,46494844
1699,False,False,2016-06-05T18:33:16Z,2016-06-05T18:33:50Z,,46494844
1700,False,False,2016-05-02T09:59:43Z,2016-05-02T10:03:31Z,"- Specter Integration - 
  Check [Specter on KLIPSE](http://app.klipse.tech/?cljs_in=%28ns%20my.sp%24macros%0A%20%20%28%3Arequire%20%5Bcom.rpl.specter%20%3Aas%20specter%5D%29%29%0A%0A%28defmacro%20disp%20%5B%26%20forms%5D%0A%20%20%28cons%20%60str%20%28for%20%5Bform%20forms%5D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%60%28str%20%28pr-str%20%27~form%29%20%22%20%3D%3E%20%22%20%28pr-str%20~form%29%20%22%5Cn%22%29%29%29%29%0A%0A%0A%28defmacro%20define%20%5B%26%20syms%5D%0A%20%20%28cons%20%27do%20%28for%20%5Bsym%20syms%5D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%60%28def%20~sym%20~%28symbol%20%28str%20%22specter%2F%22%20sym%29%29%29%29%29%29%0A%0A%3Bthe%20following%20statement%20is%20required%0A%3Bbecause%20KLIPSE%20doesn%27t%20not%20support%20%3Arefer%20yet%0A%28my.sp%2Fdefine%20transform%20ALL%20select%20srange%20walker%29%0A%0A%28my.sp%2Fdisp%0A%20%20%28transform%20%5BALL%20%3Aa%20even%3F%5D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20inc%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%5B%7B%3Aa%201%7D%20%7B%3Aa%202%7D%20%7B%3Aa%204%7D%20%7B%3Aa%203%7D%5D%29%0A%20%20%28select%20%5BALL%20ALL%20%23%28%3D%200%20%28mod%20%25%203%29%29%5D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B%5B1%202%203%204%5D%20%5B%5D%20%5B5%203%202%2018%5D%20%5B2%204%206%5D%20%5B12%5D%5D%29%0A%20%20%28transform%20%5B%28srange%201%204%29%20ALL%20odd%3F%5D%20inc%20%5B0%201%202%203%204%205%206%207%5D%29%0A%20%20%28select%20%28walker%20number%3F%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B2%20%5B1%202%20%5B6%207%5D%5D%20%3Aa%204%20%3Ac%20%7B%3Aa%201%20%3Ad%20%5B2%20nil%5D%7D%7D%29%0A%20%20%0A%20%20%29%0A%0A&eval_only=1)
",46494844
1701,False,False,2016-04-28T08:09:13Z,2016-04-28T08:11:53Z,"- fix css for scrolling
- static-fns url parameter
",46494844
1702,False,False,2016-04-28T05:26:02Z,2016-04-28T05:28:24Z,"- devcards 
- more detailed errors
- pretty print clojure outputs
- more unit tests
- static dispatch also for evaluation
- fix scrolling issue
",46494844
1703,False,False,2020-02-02T13:21:53Z,2020-02-02T13:39:41Z,"Removals
------------------------------
* Python 2 is no longer supported.
* Support for attribute lists in `defclass` has been removed. Use `setv` and `defn` instead.
* Literal keywords are no longer parsed differently in calls to functions with certain names.
* `hy.contrib.multi` has been removed. Use `cond` or the PyPI package `multipledispatch` instead.

Other Breaking Changes
------------------------------
* `HySequence` is now a subclass of `tuple` instead of `list`. Thus, a `HyList` will never be equal to a `list`, and you can't use `.append`, `.pop`, etc. on a `HyExpression` or `HyList`.

New Features
------------------------------
* Added special forms `py` to `pys` that allow Hy programs to include inline Python code.
* Added a special form `cmp` for chained comparisons.
* All augmented assignment operators (except `%=` and `^=`) now allow more than two arguments.
* Added support for function annotations (PEP 3107) and variable annotations (PEP 526).
* Added a function `parse-args` as a wrapper for Python's `argparse`.

Bug Fixes
------------------------------
* Statements in the second argument of `assert` are now executed.
* Fixed a bug that caused the condition of a `while` to be compiled twice.
* `in` and `not-in` now allow more than two arguments, as in Python.
* `hy2py` can now handle format strings.
* Fixed crashes from inaccessible history files.
* Removed an accidental import from the internal Python module `test`.
* Fixed a swarm of bugs in `hy.extra.anaphoric`.

Misc. Improvements
------------------------------
* Replaced the dependency `clint` with `colorama`.",7184072
1704,False,False,2019-05-20T14:28:46Z,2019-05-20T14:37:41Z,"**Warning**: Hy 0.17.x will be the last Hy versions to support Python 2, and we expect 0.17.0 to be the only release in this line. By the time 0.18.0 is released (in 2020, after CPython 2 has ceased being developed), Hy will only support Python 3.

Removals
------------------------------
* Python 3.4 is no longer supported.

New Features
------------------------------
* Python 3.8 is now supported.
* Format strings with embedded Hy code (e.g., `f""The sum is {(+ x y)}""`) are now supported, even on Pythons earlier than 3.6.
* Added a special form `setx` to create Python 3.8 assignment expressions.
* Added new core functions `list?` and `tuple`.
* Gensyms now have a simpler format that's more concise when mangled (e.g., `_hyx_XsemicolonXfooXvertical_lineX1235` is now `_hyx_fooXUffffX1`).

Bug Fixes
------------------------------
* Fixed a crash caused by errors creating temporary files during bytecode compilation.",7184072
1705,False,False,2019-02-12T21:13:32Z,2019-02-12T21:21:10Z,"Removals
------------------------------
* Empty expressions (`()`) are no longer legal at the top level.

New Features
------------------------------

* `eval` / `hy_eval` and `hy_compile` now accept an optional `compiler` argument that enables the use of an existing `HyASTCompiler` instance.
* Keyword objects (not just literal keywords) can be called, as shorthand for `(get obj :key)`, and they accept a default value as a second argument.
* Minimal macro expansion namespacing has been implemented. As a result, external macros no longer have to `require` their own macro dependencies.
* Macros and tags now reside in module-level `__macros__` and `__tags__` attributes.

Bug Fixes
------------------------------
* Cleaned up syntax and compiler errors.
* You can now call `defmain` with an empty lambda list.
* `require` now compiles to Python AST.
* Fixed circular `require`\s.
* Fixed module reloading.
* Fixed circular imports.
* Fixed errors from `from __future__ import ...` statements and missing Hy module docstrings caused by automatic importing of Hy builtins.
* Fixed `__main__` file execution.
* Fixed bugs in the handling of unpacking forms in method calls and attribute access.
* Fixed crashes on Windows when calling `hy-repr` on date and time objects.
* Fixed a crash in `mangle` for some pathological inputs.
* Fixed incorrect mangling of some characters at low code points.
* Fixed a crash on certain versions of Python 2 due to changes in the standard module `tokenize`.",7184072
1706,False,False,2018-07-21T18:34:01Z,2018-07-21T18:37:04Z,"Removals
------------------------------
* Dotted lists, `HyCons`, `cons`, `cons?`, and `list*` have been removed. These were redundant with Python's built-in data structures and Hy's most common model types (`HyExpression`, `HyList`, etc.).
* `&key` is no longer special in lambda lists. Use `&optional` instead.
* Lambda lists can no longer unpack tuples.
* `ap-pipe` and `ap-compose` have been removed. Use threading macros and `comp` instead.
* `for/a` has been removed. Use `(for [:async ...] ...)` instead.
* `(except)` is no longer allowed. Use `(except [])` instead.
* `(import [foo])` is no longer allowed. Use `(import foo)` instead.

Other Breaking Changes
------------------------------
* `HyExpression`, `HyDict`, and `HySet` no longer inherit from `HyList`. This means you can no longer use alternative punctuation in place of square brackets in special forms (e.g. `(fn (x) ...)` instead of the standard `(fn [x] ...)`).
* Mangling rules have been overhauled; now, mangled names are always legal Python identifiers.
* `_` and `-` are now equivalent, even as single-character names.

  * The REPL history variable `_` is now `*1`.

* Non-shadow unary `=`, `is`, `<`, etc. now evaluate their argument instead of ignoring it.
* `list-comp`, `set-comp`, `dict-comp`, and `genexpr` have been replaced by `lfor`, `sfor`, `dfor`, and `gfor`, respectively, which use a new syntax and have additional features. All Python comprehensions can now be written in Hy.
* `&`-parameters in lambda lists must now appear in the same order that Python expects.
* Literal keywords now evaluate to themselves, and `HyKeyword` no longer inherits from a Python string type
* `HySymbol` no longer inherits from `HyString`.

New Features
------------------------------
* Python 3.7 is now supported.
* `while` and `for` are allowed to have empty bodies.
* `for` supports the various new clause types offered by `lfor`.
* `defclass` in Python 3 supports specifying metaclasses and other keyword arguments.
* Added `mangle` and `unmangle` as core functions.
* Added more REPL history variables: `*2` and `*3`.
* Added a REPL variable holding the last exception: `*e`.
* Added a command-line option `-E` per CPython.
* Added a new module `hy.model_patterns`.

Bug Fixes
------------------------------
* `hy2py` should now output legal Python code equivalent to the input Hy code in all cases.
* Fixed `(return)` so it can exit a Python 2 generator.
* Fixed a case where `->` and `->>` duplicated an argument.
* Fixed bugs that caused `defclass` to drop statements or crash.
* Fixed a REPL crash caused by illegal backslash escapes.
* `NaN` can no longer create an infinite loop during macro-expansion.
* Fixed a bug that caused `try` to drop expressions.
* The compiler now properly recognizes `unquote-splice`.
* Trying to import a dotted name is now a syntax error, as in Python.
* `defmacro!` now allows optional arguments.
* Fixed handling of variables that are bound multiple times in a single `let`.

Misc. Improvements
----------------------------
* `hy-repr` uses registered functions instead of methods.
* `hy-repr` supports more standard types.
",7184072
1707,False,False,2018-02-14T16:23:09Z,2018-02-14T16:31:03Z,"Removals
------------------------------
* Python 3.3 is no longer supported
* `def` is gone; use `setv` instead
* `apply` is gone; use the new `#*` and `#**` syntax instead
* `yield-from` is no longer supported under Python 2
* Periods are no longer allowed in keywords
* Numeric literals can no longer begin with a comma or underscore
* Literal `Inf`\s and `NaN`\s must now be capitalized like that

Other Breaking Changes
------------------------------
* Single-character ""sharp macros"" are now ""tag macros"", which can have longer names
* `xi` from `hy.extra.anaphoric` is now a tag macro `#%`
* `eval` is now a function instead of a special form

New Features
------------------------------
* The compiler now automatically promotes values to Hy model objects as necessary, so you can write ``(eval `(+ 1 ~n))`` instead of ``(eval `(+ 1 ~(HyInteger n)))``
* `return` has been implemented as a special form
* Added a form of string literal called ""bracket strings"" delimited by `#[FOO[` and `]FOO]`, where `FOO` is customizable
* Added support for PEP 492 (`async` and `await`) with `fn/a`, `defn/a`, `with/a`, and `for/a`
* Added Python-style unpacking operators `#*` and  `#**` (e.g., `(f #* args #** kwargs)`)
* Added a macro `comment`
* Added EDN `#_` syntax to discard the next term
* `while` loops may now contain an `else` clause, like `for` loops
* `#%` works on any expression and has a new `&kwargs` parameter `%**`
* Added a macro `doc` and a tag macro `#doc`
* `get` is available as a function
* `~@` (`unquote-splice`) form now accepts any false value as empty

Bug Fixes
------------------------------
* Relative imports (PEP 328) are now allowed
* Numeric literals are no longer parsed as symbols when followed by a dot and a symbol
* Hy now respects the environment variable `PYTHONDONTWRITEBYTECODE`
* String literals should no longer be interpreted as special forms or macros
* Tag macros (née sharp macros) whose names begin with `!` are no longer mistaken for shebang lines
* Fixed a bug where REPL history wasn't saved if you quit the REPL with `(quit)` or `(exit)`
* `exec` now works under Python 2
* No TypeError from multi-arity `defn` returning values evaluating to `None`
* `try` forms are now possible in `defmacro` and `deftag`
* Multiple expressions are now allowed in `try`
* Fixed a crash when `macroexpand`\ing a macro with a named import
* Fixed a crash when `with` suppresses an exception. `with` now returns `None` in this case.
* Fixed a crash when `--repl-output-fn` raises an exception
* Fixed a crash when `HyTypeError` was raised with objects that had no source position
* `assoc` now evaluates its arguments only once each
* Multiple expressions are now allowed in the `else` clause of a `for` loop
* `else` clauses in `for` and `while` are recognized more reliably
* Statements in the condition of a `while` loop are repeated properly
* Argument destructuring no longer interferes with function docstrings
* Nullary `yield-from` is now a syntax error
* `break` and `continue` now raise an error when given arguments instead of silently ignoring them

Misc. Improvements
------------------------------
* `read`, `read_str`, and `eval` are exposed and documented as top-level functions in the `hy` module
* An experimental `let` macro has been added to `hy.contrib.walk`",7184072
1708,False,False,2017-11-03T17:14:38Z,2017-11-03T17:24:10Z,"Changed setup.py to require astor 0.5, since 0.6 isn't backwards-compatible.",7184072
1709,False,False,2017-06-20T21:29:45Z,2017-06-20T21:34:20Z,"## Language Changes

* Pythons 2.6, 3.0, 3.1, and 3.2 are no longer supported
* `let` has been removed. Python's scoping rules do not make a proper implementation of it possible. Use `setv` instead.
* `lambda` has been removed, but `fn` now does exactly what `lambda` did
* `defreader` has been renamed to `defsharp`; what were previously called ""reader macros"", which were never true reader macros, are now called ""sharp macros""
* `try` now enforces the usual Python order for its elements (`else` must follow all `except`s, and `finally` must come last). This is only a syntactic change; the elements were already run in Python order even when defined out of order.
* `try` now requires an `except` or `finally` clause, as in Python
* Importing or executing a Hy file automatically byte-compiles it, or loads a byte-compiled version if it exists and is up to date. This brings big speed boosts, even for one-liners, because Hy no longer needs to recompile its standard library for every startup.
* Added bytestring literals, which create `bytes` objects under Python 3 and `str` objects under Python 2
* Commas and underscores are allowed in numeric literals
* Many more operators (e.g., `**`, `//`, `not`, `in`) can be used as first-class functions
* The semantics of binary operators when applied to fewer or more than two arguments have been made more logical
* `(** a b c d)` is now equivalent to `(** a (** b (** c d)))`, not `(** (** (** a b) c) d)`
* `setv` always returns `None`
* When a `try` form executes an `else` clause, the return value for the `try` form is taken from `else` instead of the `try` body. For example, `(try 1 (except [ValueError] 2) (else 3))` returns `3`.
* `xor`: If exactly one argument is true, return it
* `hy.core.reserved` is now `hy.extra.reserved`
* `cond` now supports single argument branches

## Bug Fixes

* All shadowed operators have the same arities as real operators
* Shadowed comparison operators now use `and` instead of `&` for chained comparisons
* `partition` no longer prematurely exhausts input iterators
* `read` and `read-str` no longer raise an error when the input parses to a false value (e.g., the empty string)
* A `yield` inside of a `with` statement will properly suppress implicit returns
* `setv` no longer unnecessarily tries to get attributes
* `loop` no longer replaces string literals equal to ""recur""
* The REPL now prints the correct value of `do` and `try` forms
* Fixed a crash when tokenizing a single quote followed by whitespace

## Misc. Improvements

* New contrib module `hy-repr`
* Added a command-line option `--repl-output-fn`
",7184072
1710,False,False,2017-01-17T21:44:59Z,2017-01-17T21:46:51Z,"This release brings some quite significant changes on the language and as a
result very large portions of previously written Hy programs will require
changes. At the same time, documentation and error messages were improved,
hopefully making the language easier to use.

# Language Changes
- New syntax for `let`, `with` and `defclass`
- defmacro will raise an error on `&kwonly`, `&kwargs` and `&key` arguments
- Keyword argument labels to functions are required to be strings
- slice replaced with cut to stop overloading the python built-in
- removed reduntant throw, catch, progn, defun, lisp-if, lisp-if-not,
   filterfalse, true, false and nil
- global now takes multiple arguments
- Nonlocal keyword (Python 3 only)
- Set literals (`#{1 2 3}`)
- Keyword-only arguments (Python 3 only)
- Setv can assign multiple variables at once
- Empty form allowed for `setv`, `del` and `cond`
- One-argument division, rationals and comparison operators (`=`, `!=`, `<`, `>`, `<=`, `>=`)
- `partition` form for chunking collection to n-sized tuples
- `defn-alias` and `demacro-alias` moved into `hy.contrib.alias`
- `None` is returned instead of the last form in `--init--`
- `for` and `cond` can take a multi-expression body
- Hex and octal support for integer literals
- `apply` now mangles strings and keywords according to Hy mangling rules
- Variadic `if`
- `defreader` can use strings as macro names
- `as->` macro added
- `require` syntax changed and now supports same features as `import`
- `defmulti` changed to work with dispatching function
- old `defmulti` renamed to `defn`
- Lazy sequences added to `contrib`
- `defmacro!` added for once-only evaluation for parameters
- `comp`, `constantly`, `complement` and `juxt` added
- keyword arguments allowed in method calls before the object

# Bug Fixes
- Better error when `for` doesn't have body
- Better error detection with list comprehensions in Python 2.7
- Setting value to callable will raise an error
- `defclass` can have properties / methods with built-in names
- Better error messages on invalid macro arguments
- Better error messages with `hy2py` and `hyc`
- Cmdline error to string conversion.
- In python 3.3+, generator functions always return a value
- `&rest` can be used after `&optional`

# Misc. Improvements
- Version information includes SHA1 of current commit
- Improved Python 3.5 support
- Allow specification of global table and module name for `(eval ...)`
- General documentation improvements
- `contrib.walk`: Coerce non-list iterables into list form
- Flow macros (`case` and `switch`)
- `ap-pipe` and `ap-compose` macros
- `#@` reader macro for with-decorator
- Type check `eval` parameters
- `and` and `or` short-circuit
- `and` and `or` accept zero or more arguments
- `read-str` for tokenizing a line
- `botsbuildbots` moved to contrib
- Trailing bangs on symbols are mangled
- `xi` forms (anonymous function literals)
- `if` form optimizations in some cases
- `xor` operator
- Overhauled macros to allow macros to ref the compiler
- `ap-if` requires `then` branch
- Parameters for numeric operations (`inc`, `dec`, `odd?`, `even?`, etc.) aren't type checked
- `import_file_to_globals` added for use in emacs inferior lisp mode
- `hy.core.reserved` added for querying reserved words
- `hy2py` can use standard input instead of a file
- `alias`, `curry`, `flow` and `meth` removed from `contrib`
- `contrib.anaphoric` moved to `hy.extra`
",7184072
