,Created At,Updated At,Closed At,Merged At,Details,Id
0,2020-03-26T18:33:11Z,2020-03-26T18:33:11Z,,,"@gavinr @jwasilgeo this PR removes the dependency on `leaflet-virtual-grid` and replaces it with a new `FeatureGrid` that makes a repeatable grid so we can have queries be cached similar to the JS API despite maps having different origins. The code is based on a simplified version of Leaflets [`GridLayer`](https://github.com/Leaflet/Leaflet/blob/master/src/layer/tile/GridLayer.js).

You can test this by:

1. Start the dev server an open the debug app
2. Open Dev Tools > Network and make sure caching is ENABLED
3. Refresh the page until you see the `query` calls until you see 304 responses this means the browser has cached the queries
4. Change the initial lat/lng of the map view and refresh the page. You should still see queries with 304 responses.

@gavinr @jwasilgeo can you validate that this works and that all samples still work. Ideally this should go out without any breaking changes.",10066825
1,2020-03-27T01:56:52Z,2020-03-27T02:04:06Z,,,"Closes #20172 

- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).
",23083156
2,2020-03-25T19:25:20Z,2020-03-27T07:16:57Z,,,"<!-- Thanks so much for your PR, your contribution is appreciated! ❤️ -->

- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).

As discussed with @oliviertassinari this needs for date range picker to display currently selectable range end, according to material design guideline. And this prop is also can be useful for public users. ",23083156
3,2020-03-25T08:22:08Z,2020-03-26T16:51:14Z,,,"<!-- Thanks so much for your PR, your contribution is appreciated! ❤️ -->
https://github.com/mui-org/material-ui/issues/20250
- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).
",23083156
4,2020-03-22T18:40:49Z,2020-03-26T11:02:15Z,,,"- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).

Closes #20204",23083156
5,2020-03-22T16:35:55Z,2020-03-25T18:17:58Z,,,"- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).

Closes #20154",23083156
6,2020-03-22T15:21:34Z,2020-03-23T21:43:32Z,,,"I've added FramerX wrappers for:

- Stepper
<img width=""600"" alt=""Screenshot 2020-03-22 at 15 14 56"" src=""https://user-images.githubusercontent.com/784018/77253160-e26df400-6c58-11ea-8fbf-fb8172938f3a.png"">

- Nested List
<img width=""498"" alt=""Screenshot 2020-03-22 at 15 14 32"" src=""https://user-images.githubusercontent.com/784018/77253162-e3068a80-6c58-11ea-92ba-d25c6f52eb01.png"">

- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).
",23083156
7,2020-03-22T11:40:08Z,2020-03-25T18:18:41Z,,,"- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).

Closes #19882",23083156
8,2020-03-21T14:31:07Z,2020-03-25T18:19:48Z,,,"- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).

In addition to making the tree view agree with aria practices this pull request also resolves some other outstanding issues.

[TreeItem hijacks focus when typing on an input box that updates it](https://github.com/mui-org/material-ui/issues/19882)
This code is present in this [codesandbox](https://codesandbox.io/s/wandering-brook-fd11w) that replicates the one in the issue.  The steps below that result in the issue behaviour as seen in the [original sandbox](https://codesandbox.io/s/bold-hill-rw9y5) are no longer an issue.

1. Focus apples
2. Type b in the input ( to remove apples )
3. Remove the search - **apples is focused**

[TreeView programmatic focus does not change tab indices](https://github.com/mui-org/material-ui/issues/20141) inconsistent behaviour is no longer an issue as it selection and not last focus that determines what is focused when the tree receives focus ( as per aria practices ).

[TreeView cannot be controlled by keyboard after item removal](https://github.com/mui-org/material-ui/issues/20204) is also no longer an issue.

Note that there is no longer a need for tabbable state.

Remarks on the tests :
Tests that conditionally render a tree item have to render a span - due to [bug](https://github.com/mui-org/material-ui/issues/20154)
I corrected the tests regarding this focus behaviour - but perhaps the tests should be in TreeView.test.js instead of TreeItem.test.js.

Remarks on the code :
The aria practices does not describe what should happen if the tree receives focus and the selected tree item is in a collapsed parent.  I decided to expand the tree to make it visible for now ( I have not raised the event - if this behaviour is agreed I will change ), the alternative is to focus the first item.
https://github.com/tonyhallett/material-ui/blob/bebcef3ff8da24ee3daa04eed50d095da585ef89/packages/material-ui-lab/src/TreeView/TreeView.js#L483

The clean up of selected can probably be improved upon.
https://github.com/tonyhallett/material-ui/blob/bebcef3ff8da24ee3daa04eed50d095da585ef89/packages/material-ui-lab/src/TreeView/TreeView.js#L514

When a focused item is removed I have decided to refocus the tree view.  I can change this to making the TreeView tabbable again.
https://github.com/tonyhallett/material-ui/blob/bebcef3ff8da24ee3daa04eed50d095da585ef89/packages/material-ui-lab/src/TreeView/TreeView.js#L574

You can see this code on this [sandbox](https://codesandbox.io/s/confident-golick-j2nnt)",23083156
9,2020-03-19T12:38:49Z,2020-03-20T08:59:27Z,,,"In continuation of https://github.com/mui-org/material-ui/pull/20093

- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).
",23083156
10,2020-03-17T17:56:09Z,2020-03-25T20:18:12Z,,,"Fixes #20125 

- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).
",23083156
11,2020-03-17T17:17:38Z,2020-03-25T18:20:12Z,,,"- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).

Closes #20140",23083156
12,2020-03-16T17:26:05Z,2020-03-25T18:23:52Z,,,"<!-- Thanks so much for your PR, your contribution is appreciated! ❤️ -->

- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).

Closes #20092",23083156
13,2020-03-15T19:56:43Z,2020-03-22T20:38:07Z,,,"<!-- Thanks so much for your PR, your contribution is appreciated! ❤️ -->
Closes #19975 
This PR adds a new disabled prop to TreeItem
![image](https://user-images.githubusercontent.com/19830660/76709491-e4c2d200-66dd-11ea-8538-f06fcb4c570d.png)

- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).
",23083156
14,2020-03-12T15:37:35Z,2020-03-22T11:23:49Z,,,"<!-- Thanks so much for your PR, your contribution is appreciated! ❤️ -->

- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).
",23083156
15,2020-03-12T13:09:28Z,2020-03-24T23:32:45Z,,,"<!-- Thanks so much for your PR, your contribution is appreciated! ❤️ -->

- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).
",23083156
16,2020-03-05T12:52:32Z,2020-03-06T14:48:21Z,,,"<!-- Thanks so much for your PR, your contribution is appreciated! ❤️ -->

- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).
",23083156
17,2020-03-03T23:53:25Z,2020-03-22T12:40:25Z,,,"<!-- Thanks so much for your PR, your contribution is appreciated! ❤️ -->

- [ ] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).

Fixes #19882",23083156
18,2020-02-26T22:50:29Z,2020-03-26T20:14:36Z,,,"<!-- Thanks so much for your PR, your contribution is appreciated! ❤️ -->

- [ ] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).

If this takes another 3 months.... 😆 

Closes #17407",23083156
19,2020-02-25T03:01:03Z,2020-03-22T12:40:24Z,,,"Fixes #19757 

The menu is jumping to the bottom of the page because the `contentAnchor`'s offset becomes negative after scrolling. I propose to cache the first computed offset and not recalculate it again while the popover is open.

- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).
",23083156
20,2020-02-23T05:26:15Z,2020-02-27T11:01:37Z,,,"<!-- Thanks so much for your PR, your contribution is appreciated! ❤️ -->
- [ x ] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).
fix #19245 
fix update position problem when content scrollbar changed
",23083156
21,2020-02-21T10:37:46Z,2020-02-26T07:53:47Z,,,"<!-- Thanks so much for your PR, your contribution is appreciated! ❤️ -->

- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).


This is based on #4476.

Screenshot of the new example:
![image](https://user-images.githubusercontent.com/10603631/75027265-86b81b80-549e-11ea-8395-4b9f94ebaacd.png)
",23083156
22,2020-02-09T06:29:00Z,2020-02-25T23:22:22Z,,,"<!-- Thanks so much for your PR, your contribution is appreciated! ❤️ -->

- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).

This is the updated drawer docs that discussed in this [issue](https://github.com/mui-org/material-ui/issues/19557)

closes #19108
closes #19557",23083156
23,2020-01-11T18:55:53Z,2020-03-25T10:25:33Z,,,"This PR adds support for nested css rules in the system `css` prop:
```javascript
<Box css={{
  color: 'blue,
  '&:hover': {
    color: 'pink',
    '> button': {
      color: 'red'
    }
  }
}} />
```",23083156
24,2019-12-27T00:40:58Z,2020-03-25T10:25:33Z,,,"This pull request addresses Issue #15631, there were added 5 props to the Grid component to support responsive spacing for breakpoints: xs, sm, md, lg, xl. I added the corresponding tests.

Here is a little demo.
![ezgif com-gif-maker](https://user-images.githubusercontent.com/19152108/71495641-87249500-2814-11ea-946e-1eae46df330b.gif)

The props added to the component are `spcingXs`, `spacingSm`, `spacingMd`, `spacingLg`, `spacing Xl` 

A Grid component using this props

<img width=""967"" alt=""Screen Shot 2019-12-27 at 11 34 16 AM"" src=""https://user-images.githubusercontent.com/19152108/71526700-aa475700-289d-11ea-9928-f96e2b5c61b7.png"">

",23083156
25,2019-12-23T16:03:10Z,2020-02-04T10:52:03Z,,,"<!-- Thanks so much for your PR, your contribution is appreciated! ❤️ -->

- [x] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).
- [x] I tested it on latest Firefox and Chrome

Closes #14815.

Horizontal before:
![image](https://user-images.githubusercontent.com/25515470/71367340-0a3fb400-25a5-11ea-8bf5-e633d9e64ec6.png)
Horizontal after:
![image](https://user-images.githubusercontent.com/25515470/71367366-22173800-25a5-11ea-8b31-027436f918ed.png)


Vertical before:
![image](https://user-images.githubusercontent.com/25515470/71367215-b3d27580-25a4-11ea-9ad4-1cd140da9052.png)
Vertical after:
![image](https://user-images.githubusercontent.com/25515470/71367259-d1074400-25a4-11ea-9037-28afbfdbf2c0.png)

",23083156
26,2019-12-16T11:13:57Z,2020-03-25T10:25:32Z,,,"Preview: https://deploy-preview-18872--material-ui.netlify.com/components/data-grid/

This is a first batch for the MIT version of the component. The long term objective is to be, more or less at feature parity with ag-grid. This is a strategical effort to strengthen the idea that Material-UI primary focus is to solve complex UI problems at its core. To truly execute on our strapline: 

> React components for faster and easier web development. Build your own design system, or start with Material Design.

Providing a nice looking layer on top of these components is a necessary **secondary** requirement (Material Design), that we might support different design specifications in the future (2-3 years?), like fluent, or ant.

I plan to dedicate 100 hours to this first batch, similarly to the [first batch](https://github.com/mui-org/material-ui/pull/17037) of the Autocomplete component. I estimate that it will take about 6 weeks to complete (end of January) if I keep the primary focus on the daily issues and pull requests flow coordination. Long term, we will likely need a good 5,000 hours on this problem.

@gabrielliwerant, @gregnb, @geoperez, @mbrn, @Domino987 per your previous interest and effort [on](https://github.com/unosquare/tubular-react) [different](https://github.com/gregnb/mui-datatables) [projects](https://github.com/gregnb/mui-datatables) to solve this problem, you are welcome to come in and help :)! We have a dedicated $ fund to support this effort (including the development of not MIT features).

Regarding the 4 [complementary projects](https://material-ui.com/components/tables/#complementary-projects) we link in the documentation, once this component is feature-rich enough, we will remove these mentions, as we did for the Autocomplete for downshift and react-select because they overlap. 

Progress: 30/100 hours (still in a preliminary phase, most of the time spent on early R&D).

Closes #5069
Closes #14267
Closes #18019
Closes #18434
Closes #18712
",23083156
27,2019-11-19T23:39:31Z,2020-03-25T10:25:32Z,,,"<!-- Thanks so much for your PR, your contribution is appreciated! ❤️ -->

- [ ] I have followed (at least) the [PR section of the contributing guide](https://github.com/mui-org/material-ui/blob/master/CONTRIBUTING.md#sending-a-pull-request).

Closes #18158

https://deploy-preview-18459--material-ui.netlify.com/components/stack/",23083156
28,2019-10-17T10:18:34Z,2020-03-10T16:29:31Z,,,"Based on https://developers.google.com/web/updates/2017/03/performant-expand-and-collapse

The goal is to move to animate scale instead of width since it is much more performant.

This is a WIP that I'm willing to hand off to someone with more transform animation experience.

The idea is to either completely replace `Collapse` or offer `FastCollapse` as a customization option if it can't implement the full interface of `Collapse`. Currently there are two problems:
1. It still takes up space in an expansionpanel https://deploy-preview-17916--material-ui.netlify.com/components/expansion-panels/#simple-expansion-panel
2. It transitions from the center to top and bottom instead of transitioning from to to bottom https://deploy-preview-17916--material-ui.netlify.com/components/transitions/#collapse

Closes #10931",23083156
29,2018-10-26T08:16:50Z,2018-10-26T08:16:50Z,,,,7326769
30,2018-09-30T18:57:48Z,2018-09-30T18:57:48Z,,,,7326769
31,2017-05-06T02:25:44Z,2017-05-06T02:25:44Z,,,"Fix the empty-error issues
Fix the issues of not overwriting CSS files when compiling manually in compass mode",7326769
32,2020-03-01T17:22:44Z,2020-03-09T04:25:11Z,,,"This is pretty messy for the commits because it's not passing everywhere. Current state: 

- [x] Linux builds with Artifact uploads
- [ ] OSX build errors
- [ ] Windows passes on 8, fails the rest
- [ ] There is a bunch of duplication for OSX/Linux that should get pulled out to separate YAML files to share
- [ ] Releases aren't signed
- [ ] Files are double zipped do to an issue with v1 of actions/upload-artifact that may be resolved with v2 release
- [ ] Only uses Python 3. Python 2 could be a separate job with PyLint or others though
- [ ] Rebase commits before landing

Related to #914",1133930
33,2020-02-29T20:58:34Z,2020-02-29T23:10:35Z,,,"Creates a single ""develop"" pre-release tag and upload all assets to tag.

- This will require updated the Dockerfile since it's using the platform specific tag. I'd probably do a second pass after this to ensure the version number tags also get populated with these assets, and use those as the Dockerfile assets.

- Appveyor would also needed to be updated to include the Windows assets.

Maybe you ran into an issue with this type of setup originally, so I'm fine if you don't like this approach and just want to close it.",1133930
34,2019-05-23T18:55:47Z,2019-05-23T18:55:47Z,,,#187,1133930
35,2019-03-11T12:21:51Z,2019-05-21T06:17:06Z,,,"The `doc-glossary` role currently isn't allowed anywhere, but this PR changes that to allow it on `section` elements, as it is defined as a landmark role in DPUB-ARIA 1.0 and the accessibility mappings document.

The definition in DPUB-ARIA 1.0 unfortunately shows an incorrect example with the role on a `dl` element, but this will be updated in the next release of that specification. An issue to [fix the usage](https://github.com/w3c/html-aria/issues/128) has also been filed with ARIA in HTML document which picked up the example use.",1133930
36,2018-06-12T03:45:46Z,2019-04-19T05:08:42Z,,,"Added a new GET parameter on servlet to be able set Locale for resource bundle messages.

Required to [htmlparser](https://github.com/validator/htmlparser/pull/6)
",1133930
37,2018-04-20T08:55:47Z,2019-04-19T05:08:42Z,,,,1133930
38,2020-03-26T21:49:13Z,2020-03-27T01:11:54Z,,,"## Description

TODO: Describe your changes in detail here.

## Related Issue
<!--- This project only accepts pull requests related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here by replacing ISSUE_NUMBER with your actual issue number. -->
<!--- Using the above wording causes Github to automatically close the issue on merge. -->
Closes [PWA-186](https://jira.corp.magento.com/browse/PWA-186).

## Acceptance 
<!-- The people and processes this pull request needs before it is merged. -->
<!-- These fields are not required when opening the pull request, but they -->
<!-- should be populated after code review. -->
### Verification Stakeholders
<!-- People who must verify that this solves the attached issue. -->
### Specification
<!-- Changes to `upward-spec` and/or `upward-js` packages must be reviewed -->
<!-- by `UPWARD-PHP` maintainers to ensure continued compatibility -->

### Verification Steps
<!-- Please describe in detail how a reviewer can verify your changes, -->
<!-- OR how you will demonstrate the changes to the stakeholder(s). -->
1. Go to the FOO page.
2. Verify the BAR shows up.
3. Make sure BAZ does a thing.

## Screenshots / Screen Captures (if appropriate)

## Checklist
<!--- Go over all the following points, and make sure you've done anything necessary -->
* I have updated the documentation accordingly, if necessary.
* I have added tests to cover my changes, if necessary.
",137249745
39,2020-03-25T21:25:46Z,2020-03-27T01:11:24Z,,,"<!--
Before submitting this pull request, please make sure you have read our Contribution Guidelines and your PR meets our contribution standards:
https://github.com/magento/pwa-studio/blob/master/.github/CONTRIBUTING.md

Please fill out as much information as you can about your PR to help speed up the review process.
If your PR addresses an existing GitHub Issue, please refer to it in the title or Additional Information section to make the connection.

We may ask you for changes in your PR in order to meet the standards set in our Contribution Guidelines. PRs that do not comply with our guidelines may be closed at the maintainers' discretion.

Feel free to remove this section before creating this PR. Thank you for your contribution!
-->

## Description

As an unauthenticated user I want to enter my data in order to complete my purchase. Form fields should include (see mockups):
 * Shipping address
 * Edit shipping address
 * Double check that headers adhere to mock

*Important:*
* Do not display temp data from shipping estimate fields. Compare gql response to `MOCKED_ADDRESS` to verify.

*Nice to have: *

* Auto city/state detection by zip code entry  (is this available through existing API) 
* UX would like to see the different sections numbered if possible. Include in this scope of doesn't present any problems.

eg.
1. Shipping Information
2. Shipping Method
3. Payment Information

### Developer Note
Included in this scope is the decomposition of Country and Region fields into their own components, extracted from the Estimate Shipping Methods components on the CartPage. 

## Related Issue
<!--- This project only accepts pull requests related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here by replacing ISSUE_NUMBER with your actual issue number. -->
<!--- Using the above wording causes Github to automatically close the issue on merge. -->
* [[PWA-244](https://jira.corp.magento.com/browse/PWA-244)] Shipping Information (Guest)

## Acceptance 
<!-- The people and processes this pull request needs before it is merged. -->
<!-- These fields are not required when opening the pull request, but they -->
<!-- should be populated after code review. -->
### Verification Stakeholders
<!-- People who must verify that this solves the attached issue. -->
### Specification
<!-- Changes to `upward-spec` and/or `upward-js` packages must be reviewed -->
<!-- by `UPWARD-PHP` maintainers to ensure continued compatibility -->

### Verification Steps
<!-- Please describe in detail how a reviewer can verify your changes, -->
<!-- OR how you will demonstrate the changes to the stakeholder(s). -->
This PR decomposed Country and Region into its own components, so we'll need to test both `/cart` Estimate Shipping functionality and Checkout
**Cart Verification**
1. Add a few items to cart of different types
2. Navigate to `/cart` and open Estimate Shipping panel
3. Verify that Country still defaults to US and all options loading w/o Error
4. Verify that Region loaded state options
5. Switch to a country with no region options and verify text input displayed
6. Select France and verify new set of regions is loaded
7. Switch back to US, enter State/ZIP, and estimate your shipping. Verify no errors.

**Checkout Verification**
1. Go to `/checkout`. Shipping form should automatically render with values from cart pre-filled
2. Enter Shipping Information, verify that it saves, and the card view is then rendered with entered data and it automatically opened the Shipping Methods step (this should go directly to Payment once Shipping Methods PR is merged, since you already selected from Cart)
3. Edit shipping information, verify everything saves and is re-rendered correctly
4. Repeat these steps for mobile viewports (only difference is a drawer instead of modal for edit, and first/last should collapse to single column)

## Screenshots / Screen Captures (if appropriate)
<img width=""677"" alt=""Screen Shot 2020-03-26 at 3 38 23 PM"" src=""https://user-images.githubusercontent.com/462953/77694391-ee6af600-6f77-11ea-82b9-7aa63aa4435b.png"">
<img width=""669"" alt=""Screen Shot 2020-03-26 at 3 38 46 PM"" src=""https://user-images.githubusercontent.com/462953/77694399-f1fe7d00-6f77-11ea-8089-ff72aeb8736b.png"">
<img width=""1089"" alt=""Screen Shot 2020-03-26 at 3 38 54 PM"" src=""https://user-images.githubusercontent.com/462953/77694404-f5920400-6f77-11ea-9b39-103020dac035.png"">

## Checklist
<!--- Go over all the following points, and make sure you've done anything necessary -->
* I have updated the documentation accordingly, if necessary.
* I have added tests to cover my changes, if necessary.
",137249745
40,2020-03-25T20:28:25Z,2020-03-27T01:54:52Z,,,"
## Description

Test PR

## Related Issue
<!--- This project only accepts pull requests related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here by replacing ISSUE_NUMBER with your actual issue number. -->
<!--- Using the above wording causes Github to automatically close the issue on merge. -->
Closes #ISSUE_NUMBER.

## Acceptance 
<!-- The people and processes this pull request needs before it is merged. -->
<!-- These fields are not required when opening the pull request, but they -->
<!-- should be populated after code review. -->
### Verification Stakeholders
<!-- People who must verify that this solves the attached issue. -->
### Specification
<!-- Changes to `upward-spec` and/or `upward-js` packages must be reviewed -->
<!-- by `UPWARD-PHP` maintainers to ensure continued compatibility -->

### Verification Steps
<!-- Please describe in detail how a reviewer can verify your changes, -->
<!-- OR how you will demonstrate the changes to the stakeholder(s). -->
1. Go to the FOO page.
2. Verify the BAR shows up.
3. Make sure BAZ does a thing.

## Screenshots / Screen Captures (if appropriate)

## Checklist
<!--- Go over all the following points, and make sure you've done anything necessary -->
* I have updated the documentation accordingly, if necessary.
* I have added tests to cover my changes, if necessary.
",137249745
41,2020-03-25T16:59:52Z,2020-03-27T01:09:33Z,,,"## Description

Due to an apparent regression in M2.3.5, the GraphQL API now passes HTML content (in CMS blocks, anyway) through at least one PageBuilder-related render. The effect is that HTML content nodes, whose content itself was HTML encoded (`<div>` became `&lt;div&gt;`), was no longer HTML encoded. This broke the PageBuilder Html content type by stripping all HTML tags from it.

The Html ""config aggregator"" was using `node.textContent` to get and unescape its HTML, but when GraphQL has already unescaped it, we must use innerHTML instead. This PR updates the config aggregator with that logic.

Because the bug in MC-32787 may indicate a misconfiguration, the config aggregator logs a message in development mode.


<!--
Before submitting this pull request, please make sure you have read our Contribution Guidelines and your PR meets our contribution standards:
https://github.com/magento/pwa-studio/blob/master/.github/CONTRIBUTING.md

Please fill out as much information as you can about your PR to help speed up the review process.
If your PR addresses an existing GitHub Issue, please refer to it in the title or Additional Information section to make the connection.

We may ask you for changes in your PR in order to meet the standards set in our Contribution Guidelines. PRs that do not comply with our guidelines may be closed at the maintainers' discretion.

Feel free to remove this section before creating this PR. Thank you for your contribution!
-->

## Related Issue
<!--- This project only accepts pull requests related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here by replacing ISSUE_NUMBER with your actual issue number. -->
<!--- Using the above wording causes Github to automatically close the issue on merge. -->
Closes https://jira.corp.magento.com/browse/MC-32787.

## Acceptance 
<!-- The people and processes this pull request needs before it is merged. -->
<!-- These fields are not required when opening the pull request, but they -->
<!-- should be populated after code review. -->
### Verification Stakeholders
@sirugh 
@davemacaulay 
@dpatil-magento 
### Specification
<!-- Changes to `upward-spec` and/or `upward-js` packages must be reviewed -->
<!-- by `UPWARD-PHP` maintainers to ensure continued compatibility -->

### Verification Steps
<!-- Please describe in detail how a reviewer can verify your changes, -->
<!-- OR how you will demonstrate the changes to the stakeholder(s). -->
1. Set your `MAGENTO_BACKEND_URL=https://pwa-test1-scjyl6a-vqnoqmbf7mivy.us-4.magentosite.cloud/` a 2.3.4 instance.
2. `yarn run watch:venia`
3. Visit homepage.
4. Verify it looks normal.
1. Set your `MAGENTO_BACKEND_URL=https://magento232-qwt7c3a-vqnoqmbf7mivy.us-4.magentosite.cloud/` a **2.3.5** instance
2. `yarn run watch:venia`
3. Visit homepage.
4. Verify it still looks normal, whereas in `develop` this formatting is bonkers.


* I have updated the documentation accordingly, if necessary.
* I have added tests to cover my changes, if necessary.
",137249745
42,2020-03-24T20:26:17Z,2020-03-27T01:28:23Z,,,"<!--
Before submitting this pull request, please make sure you have read our Contribution Guidelines and your PR meets our contribution standards:
https://github.com/magento/pwa-studio/blob/master/.github/CONTRIBUTING.md

Please fill out as much information as you can about your PR to help speed up the review process.
If your PR addresses an existing GitHub Issue, please refer to it in the title or Additional Information section to make the connection.

We may ask you for changes in your PR in order to meet the standards set in our Contribution Guidelines. PRs that do not comply with our guidelines may be closed at the maintainers' discretion.

Feel free to remove this section before creating this PR. Thank you for your contribution!
-->

## Description

This PR adds shipping methods to the Checkout Page.

**For reviewer consideration:**

1. I purposefully kept all the logic work in the `useShippingMethod` talon, as opposed to creating talons for each subcomponent. I made this choice because it keeps all of the logic in one place, it's easier to separate the component view from the talon for other implementations of the view, and it's easier to maintain. The downside is that I had to do some additional prop threading.
1. Speaking of prop threading, I purposefully did not create a `ShippingMethod` context because there wasn't enough of a maintenance concern to justify it. Also for consistency with other components, few of which create their own contexts.

## Related Issue
<!--- This project only accepts pull requests related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here by replacing ISSUE_NUMBER with your actual issue number. -->
<!--- Using the above wording causes Github to automatically close the issue on merge. -->
Closes PWA-179.

## Acceptance 
<!-- The people and processes this pull request needs before it is merged. -->
<!-- These fields are not required when opening the pull request, but they -->
<!-- should be populated after code review. -->
### Verification Stakeholders
<!-- People who must verify that this solves the attached issue. -->

@soumya-ashok 

### Specification
<!-- Changes to `upward-spec` and/or `upward-js` packages must be reviewed -->
<!-- by `UPWARD-PHP` maintainers to ensure continued compatibility -->

### Verification Steps
<!-- Please describe in detail how a reviewer can verify your changes, -->
<!-- OR how you will demonstrate the changes to the stakeholder(s). -->

#### No Shipping Address

📝 This shouldn't really ever happen in production but since the Shipping Address component hasn't been completed yet, it is possible to get to Shipping Methods without first having input a Shipping Address.

1. Clear your site data (`Developer Tools > Application > Clear storage > Clear site data`)
1. Hard reload the home page
1. Add an item to your cart
1. Navigate to the `/checkout` page
1. Click ""Continue to shipping method"" button in the ""Shipping Address"" section
1. Verify that the Shipping Method UI is:

![Screen Shot 2020-03-25 at 1 27 10 PM](https://user-images.githubusercontent.com/13182778/77572079-5fd57680-6e9c-11ea-97c0-b7d097e61f2a.png)

### Shipping Address Has No Shipping Method

📝 This often occurs during guest checkout.

1. Continue directly from or repeat the steps above
1. Open the mini cart
1. Click ""Checkout"" and add a shipping address
1. Refresh the `/checkout` page<sup>1</sup>
1. See that there is a brief loading spinner while shipping methods are fetched
1. Verify that the Shipping Method UI shows and pre-selects the lowest cost available shipping method:

![Screen Shot 2020-03-25 at 1 45 48 PM](https://user-images.githubusercontent.com/13182778/77573626-f4d96f00-6e9e-11ea-85dc-97314f4b3ca2.png)

### Shipping Address Has A Shipping Method

1. Clear your site data (`Developer Tools > Application > Clear storage > Clear site data`)
1. Hard reload the home page
1. Add an item to your cart
1. Navigate to the `/checkout` page
1. Open the mini cart
1. Click ""Checkout"" 
1. Add a shipping address
1. Add a shipping method
1. Refresh the `/checkout` page<sup>1</sup>
1. Verify that the Shipping Method UI shows and pre-selects the previously selected shipping method:

![Screen Shot 2020-03-25 at 1 45 48 PM](https://user-images.githubusercontent.com/13182778/77573626-f4d96f00-6e9e-11ea-85dc-97314f4b3ca2.png)

<sup>1</sup> It would be nice if the page didn't have to reload to pick up the changes, but we don't have any patterns for that yet.

### ""Done"" View

1. Click the ""Continue to Payment Information"" button
1. Verify that the Shipping Method UI goes into done / read-only mode:

![Screen Shot 2020-03-25 at 1 48 49 PM](https://user-images.githubusercontent.com/13182778/77573914-631e3180-6e9f-11ea-8b0f-73389afb3881.png)

## Screenshots / Screen Captures (if appropriate)

## Checklist
<!--- Go over all the following points, and make sure you've done anything necessary -->
* I have updated the documentation accordingly, if necessary.
* I have added tests to cover my changes, if necessary.

## TODO

- [x] Resolve merge discrepancies
- [x] Done / read only state
- [x] Unit tests
- [ ] The proper ""update"" view",137249745
43,2020-03-24T20:20:12Z,2020-03-27T01:07:42Z,,,"## Description

This PR add the 6.0 release notes

## Related Issue

Closes PWA-456

## Acceptance 

@awilcoxa 
@cherdman 

### Verification Stakeholders

any developers

### Specification
<!-- Changes to `upward-spec` and/or `upward-js` packages must be reviewed -->
<!-- by `UPWARD-PHP` maintainers to ensure continued compatibility -->

### Verification Steps
<!-- Please describe in detail how a reviewer can verify your changes, -->
<!-- OR how you will demonstrate the changes to the stakeholder(s). -->
1. Go to the FOO page.
2. Verify the BAR shows up.
3. Make sure BAZ does a thing.

## Screenshots / Screen Captures (if appropriate)

## Checklist
<!--- Go over all the following points, and make sure you've done anything necessary -->
* I have updated the documentation accordingly, if necessary.
* I have added tests to cover my changes, if necessary.
",137249745
44,2020-03-19T22:50:36Z,2020-03-27T01:14:13Z,,,"## Description
Style the `Icon` component with CSS rather than SVG attributes.

## Related Issue
PWA-445

## Acceptance 
- @tjwiebell 

### Verification Stakeholders
- @larsroettig 
- @sirugh 

### Specification

### Verification Steps
1. View icons throughout the site, verifying none have changed.
2. Fill and empty your cart, verifying that the icon changes when you do.

## Screenshots / Screen Captures (if appropriate)

## Checklist
* I have updated the documentation accordingly, if necessary.
* I have added tests to cover my changes, if necessary.
",137249745
45,2020-03-18T12:03:28Z,2020-03-27T01:14:11Z,,,"<!--
Before submitting this pull request, please make sure you have read our Contribution Guidelines and your PR meets our contribution standards:
https://github.com/magento/pwa-studio/blob/master/.github/CONTRIBUTING.md

Please fill out as much information as you can about your PR to help speed up the review process.
If your PR addresses an existing GitHub Issue, please refer to it in the title or Additional Information section to make the connection.

We may ask you for changes in your PR in order to meet the standards set in our Contribution Guidelines. PRs that do not comply with our guidelines may be closed at the maintainers' discretion.

Feel free to remove this section before creating this PR. Thank you for your contribution!
-->

## Description

PR fixes [[bug]: CREATE ACCOUNT. Mutation does not send a subscribe flag](https://github.com/magento/pwa-studio/issues/2253)

## Related Issue
<!--- This project only accepts pull requests related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here by replacing ISSUE_NUMBER with your actual issue number. -->
<!--- Using the above wording causes Github to automatically close the issue on merge. -->
Closes #2253.

## Acceptance 
<!-- The people and processes this pull request needs before it is merged. -->
<!-- These fields are not required when opening the pull request, but they -->
<!-- should be populated after code review. -->
### Verification Stakeholders
<!-- People who must verify that this solves the attached issue. -->
### Specification
<!-- Changes to `upward-spec` and/or `upward-js` packages must be reviewed -->
<!-- by `UPWARD-PHP` maintainers to ensure continued compatibility -->

### Verification Steps
<!-- Please describe in detail how a reviewer can verify your changes, -->
<!-- OR how you will demonstrate the changes to the stakeholder(s). -->
Steps to reproduce the behavior:
1. Go to 'Create Account'
2. Click on 'Subscribe to news and updates'
3. Click 'Submit'

**Expected result:**

![2265](https://user-images.githubusercontent.com/13585327/76959860-1e384f00-6923-11ea-8196-4ca8106439ac.png)


## Screenshots / Screen Captures (if appropriate)

## Checklist
<!--- Go over all the following points, and make sure you've done anything necessary -->
* I have updated the documentation accordingly, if necessary.
* I have added tests to cover my changes, if necessary.
",137249745
46,2020-03-13T11:56:53Z,2020-03-27T01:07:48Z,,,"<!--
Before submitting this pull request, please make sure you have read our Contribution Guidelines and your PR meets our contribution standards:
https://github.com/magento/pwa-studio/blob/master/.github/CONTRIBUTING.md

Please fill out as much information as you can about your PR to help speed up the review process.
If your PR addresses an existing GitHub Issue, please refer to it in the title or Additional Information section to make the connection.

We may ask you for changes in your PR in order to meet the standards set in our Contribution Guidelines. PRs that do not comply with our guidelines may be closed at the maintainers' discretion.

Feel free to remove this section before creating this PR. Thank you for your contribution!
-->

## Description
Removed duplicate css property

## Related Issue
<!--- This project only accepts pull requests related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here by replacing ISSUE_NUMBER with your actual issue number. -->
<!--- Using the above wording causes Github to automatically close the issue on merge. -->
N/A

## Acceptance 
<!-- The people and processes this pull request needs before it is merged. -->
<!-- These fields are not required when opening the pull request, but they -->
<!-- should be populated after code review. -->
### Verification Stakeholders
<!-- People who must verify that this solves the attached issue. -->
### Specification
<!-- Changes to `upward-spec` and/or `upward-js` packages must be reviewed -->
<!-- by `UPWARD-PHP` maintainers to ensure continued compatibility -->

### Verification Steps
<!-- Please describe in detail how a reviewer can verify your changes, -->
<!-- OR how you will demonstrate the changes to the stakeholder(s). -->
1. Go to the FOO page.
2. Verify the BAR shows up.
3. Make sure BAZ does a thing.

## Screenshots / Screen Captures (if appropriate)

## Checklist
<!--- Go over all the following points, and make sure you've done anything necessary -->
* I have updated the documentation accordingly, if necessary.
* I have added tests to cover my changes, if necessary.
",137249745
47,2020-03-12T10:41:48Z,2020-03-27T01:07:41Z,,,"<!--
Before submitting this pull request, please make sure you have read our Contribution Guidelines and your PR meets our contribution standards:
https://github.com/magento/pwa-studio/blob/master/.github/CONTRIBUTING.md

Please fill out as much information as you can about your PR to help speed up the review process.
If your PR addresses an existing GitHub Issue, please refer to it in the title or Additional Information section to make the connection.

We may ask you for changes in your PR in order to meet the standards set in our Contribution Guidelines. PRs that do not comply with our guidelines may be closed at the maintainers' discretion.

Feel free to remove this section before creating this PR. Thank you for your contribution!
-->

## Description
Update isLeaf when category.children_count is Int (not String)

## Related Issue
<!--- This project only accepts pull requests related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here by replacing ISSUE_NUMBER with your actual issue number. -->
<!--- Using the above wording causes Github to automatically close the issue on merge. -->
Closes #2241.

## Acceptance 
<!-- The people and processes this pull request needs before it is merged. -->
<!-- These fields are not required when opening the pull request, but they -->
<!-- should be populated after code review. -->
### Verification Stakeholders
<!-- People who must verify that this solves the attached issue. -->
### Specification
<!-- Changes to `upward-spec` and/or `upward-js` packages must be reviewed -->
<!-- by `UPWARD-PHP` maintainers to ensure continued compatibility -->

### Verification Steps
<!-- Please describe in detail how a reviewer can verify your changes, -->
<!-- OR how you will demonstrate the changes to the stakeholder(s). -->
1. Open menu
2. Check the leaf categories

## Screenshots / Screen Captures (if appropriate)

## Checklist
<!--- Go over all the following points, and make sure you've done anything necessary -->
* I have updated the documentation accordingly, if necessary.
* I have added tests to cover my changes, if necessary.
",137249745
48,2020-03-09T11:55:18Z,2020-03-27T01:09:26Z,,,"## Description
Display the category description on the category page after the category name.
The category description renderer supports the PageBuilder content.

## Related Issue
Closes #2209 .

## Acceptance 
<!-- The people and processes this pull request needs before it is merged. -->
<!-- These fields are not required when opening the pull request, but they -->
<!-- should be populated after code review. -->
### Verification Stakeholders
<!-- People who must verify that this solves the attached issue. -->
### Specification
<!-- Changes to `upward-spec` and/or `upward-js` packages must be reviewed -->
<!-- by `UPWARD-PHP` maintainers to ensure continued compatibility -->

### Verification Steps
<!-- Please describe in detail how a reviewer can verify your changes, -->
<!-- OR how you will demonstrate the changes to the stakeholder(s). -->
1. Go to the category page that has a description in the admin area.
2. Verify the category description shows up.

## Screenshots / Screen Captures (if appropriate)

## Checklist
<!--- Go over all the following points, and make sure you've done anything necessary -->
- [ ] I have updated the documentation accordingly, if necessary.
- [ ] I have added tests to cover my changes, if necessary.
",137249745
49,2020-03-05T17:29:22Z,2020-03-27T01:07:50Z,,,"## Description

As the BuildBus extension framework gains functionality, new features of Venia should be implemented as separate modules as much as possible.

This is the way of Magento, and it serves what partners desperately need:

 - A less monolithic, more maintainable Venia
 - Mix and match functionality
 - A Magento-like ability to enhance store functionality with a simple `npm install`
 - Examples of extensions, for extension developers to follow, so they start building/porting extensions and growing our ecosystem
 - Marketplace integration so extension developers can sell their stuff

For now, the script is intended for core contributor use only; use it if you want to add a package to the PWA Studio monorepo.

It creates a new module, adds it to the workspaces, and configures it for unit testing.

## Related Issue
TODO: Retcon an issue for this

## Acceptance 
<!-- The people and processes this pull request needs before it is merged. -->
<!-- These fields are not required when opening the pull request, but they -->
<!-- should be populated after code review. -->
### Verification Stakeholders
Core team members, @jimbo @supernova-at @tjwiebell @sirugh @revanth0212 @dpatil-magento @jcalcaben 
Community maintainers, @Jordaneisenburger 

### Verification Steps
1. From the repo root directory:
  
  ```sh
  node scripts/make-new-package.js
  ```

2. Answer the questionnaire and behold!


## Screenshots / Screen Captures (if appropriate)

![image](https://user-images.githubusercontent.com/1643758/76007873-5af05900-5ed4-11ea-9b1d-c70c932a05c5.png)


## Checklist
<!--- Go over all the following points, and make sure you've done anything necessary -->
* I have updated the documentation accordingly, if necessary.
* I have added tests to cover my changes, if necessary.
",137249745
50,2020-03-03T08:32:59Z,2020-03-27T01:09:45Z,,,"# Description

This PR fixes the bug reported in #2204 - Adds visual representation for the shopping form fields to let the customer know that they are required fields before pressing the ""Use Address"" button.

## Related Issue
Closes #2204.

## Acceptance 

### Verification Stakeholders
<!-- People who must verify that this solves the attached issue. -->

### Specification
<!-- Changes to `upward-spec` and/or `upward-js` packages must be reviewed -->
<!-- by `UPWARD-PHP` maintainers to ensure continued compatibility -->

### Verification Steps

1. Go to a product page
2. Add the product to the cart
3. Open the cart
4. Click on the ""Checkout"" button
5. Press the button to add the shipping information
6. See that field labels contain the `*` (asterisk) hint that they are required

## Screenshots / Screen Captures (if appropriate)
![shipping-form-fields-has-required-symbol](https://user-images.githubusercontent.com/13456702/75756942-247ed680-5d3a-11ea-8351-31157171b286.jpg)


## Checklist
<!--- Go over all the following points, and make sure you've done anything necessary -->

",137249745
51,2020-02-28T08:43:17Z,2020-03-27T01:07:52Z,,,"### Description

Remove not used link from [BEM] link from pwa-devdocs/src/technologies/basic-concepts/css-modules/index.md

### Related Issue

No related issue

### Verification Steps

[BEM] link is removed from pwa-devdocs/src/technologies/basic-concepts/css-modules/index.md
",137249745
52,2020-02-20T02:57:15Z,2020-03-27T01:07:59Z,,,"## Description

This PR fixes an issue with the page content being forced to a certain height, meaning the footer will never be within the viewport on page load, even if the page being loaded is very short.
With this update, if the page's content isn't long enough to push the footer, then it will place itself at the bottom of the viewport, otherwise it will be placed at the end of the pages content. This ensures there is never ""leading/trailing whitespace"" around the footer

## Related Issue
Closes #2177.

## Acceptance 
<!-- The people and processes this pull request needs before it is merged. -->
<!-- These fields are not required when opening the pull request, but they -->
<!-- should be populated after code review. -->
### Verification Stakeholders
<!-- People who must verify that this solves the attached issue. -->
### Specification
<!-- Changes to `upward-spec` and/or `upward-js` packages must be reviewed -->
<!-- by `UPWARD-PHP` maintainers to ensure continued compatibility -->

### Verification Steps
1. Go to the hoempage.
2. Verify the footer is visible.

## Screenshots / Screen Captures (if appropriate)
**Before:**
![image](https://user-images.githubusercontent.com/18253422/74896503-5dd35000-53e4-11ea-9ca8-b719c0cb1357.png)

**After:**
![image](https://user-images.githubusercontent.com/18253422/74896563-80656900-53e4-11ea-89c0-5082e8ad0f26.png)


**With long content:**
![image](https://user-images.githubusercontent.com/18253422/74896524-6fb4f300-53e4-11ea-89fa-b8ca47e2d2f2.png)

",137249745
53,2020-02-11T04:18:31Z,2020-03-27T01:09:31Z,,,"## Description

This PR updates the cms.js component to make use of `data.cmsPage.title` and `data.cmsPage.content_heading`, that otherwise seems to be ignored.

I have placed the `<Title>` and `<h1>` in this location so that it doesn't affect the home page. I am by no means saying this is the perfect place to put it, I'm very open to suggestions of where to move these elements, but I think they should be included _somewhere_.
I have attached a couple of screenshots, showing an ""about-us"" page with and without this update. In the ""before"" screenshot, we can see how hard it is to determine which page we're on, especially if we have multiple tabs open on the storefront.

The classname given to the `<h1>` is also a bit of a guess, so I'm open to updating this to better suit.

## Related Issue
Closes #2158.

## Acceptance 
<!-- The people and processes this pull request needs before it is merged. -->
<!-- These fields are not required when opening the pull request, but they -->
<!-- should be populated after code review. -->
### Verification Stakeholders
<!-- People who must verify that this solves the attached issue. -->
### Specification
<!-- Changes to `upward-spec` and/or `upward-js` packages must be reviewed -->
<!-- by `UPWARD-PHP` maintainers to ensure continued compatibility -->

### Verification Steps
1. Create a new page
2. Give the new page a content heading, and some content
3. Navigate to the URL slug of the new page using a PWA instance
4. Verify that the page title updates to reflect the name of the page that you're on, and that the content heading that was entered into admin is also displaying

## Screenshots / Screen Captures (if appropriate)
**Before Update**
![image](https://user-images.githubusercontent.com/18253422/74210784-127eba80-4cdd-11ea-8cda-345789db5181.png)

**After Update**
![image](https://user-images.githubusercontent.com/18253422/74210655-781e7700-4cdc-11ea-9ef8-970e6d8d940b.png)


",137249745
54,2020-02-09T09:21:44Z,2020-03-27T01:07:44Z,,,"<!--
Before submitting this pull request, please make sure you have read our Contribution Guidelines and your PR meets our contribution standards:
https://github.com/magento/pwa-studio/blob/master/.github/CONTRIBUTING.md

Please fill out as much information as you can about your PR to help speed up the review process.
If your PR addresses an existing GitHub Issue, please refer to it in the title or Additional Information section to make the connection.

We may ask you for changes in your PR in order to meet the standards set in our Contribution Guidelines. PRs that do not comply with our guidelines may be closed at the maintainers' discretion.

Feel free to remove this section before creating this PR. Thank you for your contribution!
-->

## Description
I added a new component which currently takes its configuration from a util-class getMediaConfig. I implemented this because at some point the social media icons should be configured in magento and loaded over graphql. The implementation need for that is hard dependent on #2120.

The SocialMedia Icons have a feature toggle which can be used to either render them in the footer or not. Currently there is no feature to only display for example facebook and youtube only. If the feature is enabled it will display all 4 social media icons.

I also added the four icons for the social media platforms twitter, facebook, instagram and youtube. These icons are from https://feathericons.com/.

For testing purpose I added some jest tests.
 
## Related Issue
<!--- This project only accepts pull requests related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here by replacing ISSUE_NUMBER with your actual issue number. -->
<!--- Using the above wording causes Github to automatically close the issue on merge. -->
Closes #2152 .

## Acceptance 
<!-- The people and processes this pull request needs before it is merged. -->
<!-- These fields are not required when opening the pull request, but they -->
<!-- should be populated after code review. -->
### Verification Stakeholders
<!-- People who must verify that this solves the attached issue. -->
### Specification
<!-- Changes to `upward-spec` and/or `upward-js` packages must be reviewed -->
<!-- by `UPWARD-PHP` maintainers to ensure continued compatibility -->

### Verification Steps
<!-- Please describe in detail how a reviewer can verify your changes, -->
<!-- OR how you will demonstrate the changes to the stakeholder(s). -->
1. Go to the any page.
2. Verify that by default social media icons are displayed like this:
<img width=""1420"" alt=""social-media-icons"" src=""https://user-images.githubusercontent.com/46490366/74099500-c852d900-4b24-11ea-8bad-4da5238ff8ed.png"">
3. Every Icon should link to the specific social media homepage

## Screenshots
### Mobile
<img width=""359"" alt=""social-media-icons-mobile"" src=""https://user-images.githubusercontent.com/46490366/74099564-7f4f5480-4b25-11ea-81e7-f56dd2f90085.png"">

## Things to improve
- Graphql Endpoint in Magento to get the configuration from the core_config_data table. (depends on #2120)
- Build in a check to render a social media icon only if a link is configured in magento (currently all four icons are rendered all the time. Except if you disable the feature)

## Checklist
<!--- Go over all the following points, and make sure you've done anything necessary -->
* I have updated the documentation accordingly, if necessary. (not necessary)
* I have added tests to cover my changes, if necessary. (done)
",137249745
55,2020-02-08T14:22:25Z,2020-03-27T01:09:24Z,,,"<!--
Before submitting this pull request, please make sure you have read our Contribution Guidelines and your PR meets our contribution standards:
https://github.com/magento/pwa-studio/blob/master/.github/CONTRIBUTING.md

Please fill out as much information as you can about your PR to help speed up the review process.
If your PR addresses an existing GitHub Issue, please refer to it in the title or Additional Information section to make the connection.

We may ask you for changes in your PR in order to meet the standards set in our Contribution Guidelines. PRs that do not comply with our guidelines may be closed at the maintainers' discretion.

Feel free to remove this section before creating this PR. Thank you for your contribution!
-->

## Description
Changed the random color of the swatch to the real one.

## Related Issue
<!--- This project only accepts pull requests related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here by replacing ISSUE_NUMBER with your actual issue number. -->
<!--- Using the above wording causes Github to automatically close the issue on merge. -->
Closes #1633 .

### Verification Steps
<!-- Please describe in detail how a reviewer can verify your changes, -->
<!-- OR how you will demonstrate the changes to the stakeholder(s). -->
1. Go to a configurable product.
2. The colors of the swatches are the real ones.

## Checklist
<!--- Go over all the following points, and make sure you've done anything necessary -->
* I have updated tests to cover my changes.

## Compatibility
With Magento 2.3.5 or higher",137249745
56,2020-01-31T11:16:54Z,2020-03-27T01:12:09Z,,,"## Description
`PageBuilder/config.js` provides two methods: `getContentTypeConfig(contentType)` and `setContentTypeConfig(contentType, config)` instead of only getter. This allows to add PageBuilder Content Type Configs dynamically.

When you need to add new content type, you just call setter with proper params
```javascript
import React from 'react';
import {setContentTypeConfig} from '@magento/venia-ui/lib/components/RichContent/PageBuilder/config';

// something you are doing, that leads to necessity of adding new content type for PB

setContentTypeConfig('Example', {
            configAggregator: (node, props) => {
                return {
                    text: 'example-text'
                };
            },
            component: function ExampleComponent({text}){
                   return <div>{text}</div>;
            }
});
```
And then call PageBuilder in the place you expect it to be rendered:
```javascript
import React from 'react';
import PageBuilder from '@magento/venia-ui/lib/components/RichContent/PageBuilder/pagebuilder';

export function PageBuilderComponent({content}) {
    return (
        <div className=""page-builder-component"">
            <PageBuilder masterFormat={content}/>
        </div>
    );
}
```
## Related Issue
Closes #2130.

## Acceptance 
<!-- The people and processes this pull request needs before it is merged. -->
<!-- These fields are not required when opening the pull request, but they -->
<!-- should be populated after code review. -->
### Verification Stakeholders
<!-- People who must verify that this solves the attached issue. -->
### Specification
<!-- Changes to `upward-spec` and/or `upward-js` packages must be reviewed -->
<!-- by `UPWARD-PHP` maintainers to ensure continued compatibility -->

### Verification Steps
<!-- Please describe in detail how a reviewer can verify your changes, -->
<!-- OR how you will demonstrate the changes to the stakeholder(s). -->
two new tests added to `config.spec.js`.

## Screenshots / Screen Captures (if appropriate)

## Checklist
<!--- Go over all the following points, and make sure you've done anything necessary -->
* I have added tests to cover my changes.
",137249745
57,2019-12-12T19:46:36Z,2020-03-27T01:08:28Z,,,"## Description

Do not merge this. This is a hackathon project. Using this PR to create an AWS instance to share for public access. Not to be merged into `pwa-studio`.",137249745
58,2017-11-26T23:42:50Z,2017-12-01T21:28:44Z,,,Jackson seems to work great with Quasar Fibers.  I marked up all methods that call `stream`/`writer` `read`/`write` methods with `@Suspendable` and then used `SuspendablesScanner` to generate these (lengthy!) lists.  Let me know if there's a better methodology.,11724937
59,2017-04-14T16:58:51Z,2017-04-27T18:24:50Z,,,"- Upgrade OkHttp to 3.6.0.
- Adding AOT for every project.
- Dropping support for retrofit, new version of retrofit (2.x) has renamed RestTemplate to Retrofit and now its Builder is final. However the builder supports a OkHttpClient as an option, so it might be possible to use comsat-okhttp client as a parameter to the builder.",11724937
60,2017-01-07T22:39:35Z,2017-01-07T22:39:35Z,,,"Re: https://github.com/puniverse/comsat/issues/86
",11724937
61,2016-12-29T08:55:07Z,2017-01-24T15:46:12Z,,,"Hi,
Here's a start.
I'm not sure about ""comsat-jooq-latest"", perhaps ""comsat-jooq-java8"" is more appropriate.
Please let me know of any comments or reservations.",11724937
62,2016-11-30T10:53:10Z,2016-11-30T11:36:33Z,,,"PR to see if I can figure out the hanging tests issues on Travis.

I can't reproduce the same issue locally. However what I am seeing on my machine is that tests sometimes fail due to an `java.lang.RuntimeException: java.net.BindException: Address already in use: bind` exception.
After `server.stop()`, the `INET_PORT` remains in a `TIME_WAIT` state it seems .
Adding a short `Thread.sleep()` after stopping or a `while(available(INET_PORT)) Thread.sleep(500);` where `available` is something like this: http://svn.apache.org/viewvc/camel/trunk/components/camel-test/src/main/java/org/apache/camel/test/AvailablePortFinder.java?view=markup#l130 fixes the issue on my machine.
No sure idea if this is related to the hanging SSE tests though.

",11724937
63,2018-08-03T12:41:39Z,2018-08-03T12:56:13Z,,,"## Brief description of the changes

Currenly when using the Azure version and activating the 'chunked' option, on every chunk it calls the signature endpoint to retrieve a SAS.

But you can specify an expiry time for the SAS (`SharedAccessBlobPolicy.SharedAccessExpiryTime`) and based on this, the SAS can be cached by the browser and a new request can be sent only when it expires

For reference this is the C# code that creates the SAS and returns the url and the validity period
```
// the SAS will be valid for 5 minutes
var validForMinutes = 5;
var blob = new CloudBlockBlob(new Uri(blobUri), credentials);

var policy = new SharedAccessBlobPolicy()
{
    Permissions = SharedAccessBlobPermissions.Write,
    SharedAccessExpiryTime = DateTime.UtcNow.AddMinutes(validForMinutes),
};

var sas = blob.GetSharedAccessSignature(policy);

// instead of just returing the SAS url, return also the amount of time the SAS is valid for
return new
{
    sasUrl = blob.Uri + sas,
    validFor = validForMinutes * 60 // seconds
};
```

## What browsers and operating systems have you tested these changes on?

Chrome on Windows so far, but will test across other browsers

## Have you written unit tests? If not, explain why.

Looking for a confirmation first that this is something that the maintainers will agree on including. Happy to write tests.",728994
64,2018-07-03T05:40:57Z,2018-11-05T18:42:15Z,,,"_getNotFinished, which is used to determine when to fire the onAllComplete callback, wasn't accounting for files in the UPLOAD_FINALIZING state. For smaller files, this could cause onAllComplete to be called multiple times per set of files passed to addFiles().

Note, the expected result is for onAllComplete() to be called only once per call to addFiles().",728994
65,2018-07-02T12:26:03Z,2018-11-08T06:58:26Z,,,"## Brief description of the changes

AWS S3 SDK using PostObjectV4 (https://docs.aws.amazon.com/aws-sdk-php/v3/api/class-Aws.S3.PostObjectV4.html) doesnt let you set custom date for policy, and sometimes the dates are different about a second, so the better way for me is setting the date from server.

Maybe even better way would be setting the whole `awsParams` from server.


## What browsers and operating systems have you tested these changes on?
macos chrome


## Have you written unit tests? If not, explain why.
I didnt find existing matching test for this.",728994
66,2018-05-26T08:37:23Z,2018-11-05T18:41:43Z,,,"## Brief description of the changes
Fix for https://github.com/FineUploader/fine-uploader/issues/1952.  Added in the content-type to be emptied only if edge 15+ was detected.

## What browsers and operating systems have you tested these changes on?
Edge 15+, Chrome, Firefox.

## Have you written unit tests? If not, explain why.
Yes see attached code.
",728994
67,2018-03-27T22:39:26Z,2018-11-15T22:11:23Z,,,"## Brief description of the changes

- Adds TypeScript declaration for `lib/core/s3`.
- Adds `retry` option to `FineUploaderBasic`.

Resolves #1988.

Extra `package.json` files have been added to `commonJs` to associate types with nested modules, this follows the pattern used by date-fns.

## What browsers and operating systems have you tested these changes on?

n/a

## Have you written unit tests? If not, explain why.

`fine-uploader.test.ts` has been extended.
",728994
68,2018-03-27T05:25:12Z,2018-11-01T16:38:11Z,,,"## Brief description of the changes

Convert all uses of `qq.Promise` or other promises to require native `Promise` instead.

## What browsers and operating systems have you tested these changes on?

Firefox 59

## Have you written unit tests? If not, explain why.

I've migrated existing tests to be async friendly.

I'm going to build off this branch for my product https://dovetailapp.com and give it some production testing. I'll be using the S3 chunked uploader.

## Remaining issues

- [x] Replace `PromiseOptions` with `Promise`. Check implications of no longer allowing the promise to be resolved by callers (no more `.success` and `.failure`).",728994
69,2018-01-28T00:52:15Z,2018-11-15T22:11:23Z,,,"currently the only function to set params ( ""setParams"" ) will replace the current data with new data, this is not always enough.
Adding ""getParams"" and ""expandParams"" will add the option to manipulate the params without erase them.
Without this options it is not possible to update multiple times the params from different sources.

i think this 2 simple functions are useful, what do you think?",728994
70,2020-01-01T06:25:08Z,2020-01-04T06:14:24Z,,,"- using node :12.13
- installing pm2-runtime 
- adding .circleci with build phase",66834034
71,2019-06-21T08:51:27Z,2019-06-21T08:51:27Z,,,"The tutorial had been added but was not possible to discover on the
website as it was missing from the tutorials list.

Closes https://github.com/agrafix/Spock/issues/142",12626767
72,2019-05-15T10:50:30Z,2019-05-15T10:50:30Z,,,Fix typo in REST API tutorial,12626767
73,2019-05-05T10:01:50Z,2019-05-05T10:01:50Z,,,"This should fix #149 and #156, without these changes I couldn't get it to run by following the Getting Started guide, but I'm just starting out with Haskell.",12626767
74,2019-04-08T01:07:30Z,2019-04-08T01:07:30Z,,,The code example wouldn't compile because of the redundant import of `Data.Monoid`.,12626767
75,2020-03-03T13:46:18Z,2020-03-12T15:10:26Z,,,Added very simple example of dataset map and reduce methods,66670819
76,2020-02-23T15:55:40Z,2020-02-24T10:05:03Z,,,"As a follow-up to https://github.com/apifytech/apify-js/issues/456, I would like to propose the following implementation for an integration of blocking ads, trackers and annoyances into `Apify`. The expected benefits are faster crawls thanks to the reduced number of requests (all ads and trackers can be blocked, leading to less requests, less JavaScript to run and less data to download). The breakage should also be fairly low thanks to the use of actively maintained lists from Easylist and uBlock Origin projects (updated continuously).

The implementation is strongly inspired by the existing utils used to block requests (e.g. `blockRequests()`) and all the new logic is located inside of `src/puppeteer_utils.js`. The new `blockAdsAndTrackers(page, [options])` can be used be used to enable blocking of request based on rules found on the widely-used subscriptions: Easylist, uBlock Origin filters, etc. (see the docstring for more information). The following behaviors are implemented and can be selected when calling `blockAdsAndTrackers()`:

- Block ads only (default behavior)
- Block ads and trackers (using `blockTrackers` options)
- Block ads, trackers and annoyances, such as cookie popups, banners, etc. (using `blockAnnoyances`)

Currently, the implementation will perform requests to GitHub (where lists of rules are hosted) to initialize the blocking engine, then cache the state on disk. This behavior can be tweaked in different ways depending on what the maintainers judge acceptable:

- Hosting rules as static file in the apify repository to avoid any network request,
- Customizing caching (disabling, using some Apify API to persist the data, customizing the path for caching, etc.),
- Perform the building of the engine as a `postinstall` hook instead of dynamically,

There are also things which I did not commit in this initial PR as I was not sure if I should do it, or if this would be done as part of the releasing process:
- Re-generating the docs
- Re-generating the types
- Updating CHANGELOG.md

I am happy to receive any feedback on this and make changes accordingly,
Best,",66670819
77,2019-11-08T12:47:20Z,2020-02-18T16:31:59Z,,,"Not ready to be merged yet, would like some advice. Having tried to come up with a solution as robust as possible, this may be the best version yet - though I'm not sure it's the best approach and definitely needs some refactoring. Haven't written any tests for it yet but it does work well on the two examples, one with forms (standard) and the other without.

Thanks!",66670819
78,2019-10-31T12:21:03Z,2020-01-08T22:44:06Z,,,fixed #478,66670819
79,2020-03-26T03:16:40Z,2020-03-26T03:54:24Z,,,"This allow us to build 'actix-web' without default features and run all
tests.",105379569
80,2020-03-07T23:02:09Z,2020-03-12T07:45:22Z,,,Adding tests and fixing remarks from https://github.com/actix/actix-web/pull/1398,105379569
81,2020-02-07T16:19:49Z,2020-03-12T20:24:25Z,,,"fixes #1035
(cherry picked from commit a3287948d19bbdc9e7cf9957403961eeb2d8b94d)",105379569
82,2020-02-04T09:23:52Z,2020-03-19T18:11:33Z,,,"I want to implement a custom Factory to strictly define arguments for handlers

```rust
impl<F, B, T, R, O> Handler<F, T, R, O>
where
    F: BoundFactory<B, T, R, O>,
    R: Future<Output = O>,
    O: Responder,
{
    pub fn new(hnd: F) -> Self {
        Handler {
            hnd,
            _t: PhantomData,
        }
    }
}


pub trait BoundFactory<B, T, R, O>: Clone + 'static
where
    R: std::future::Future<Output = O>,
    O: actix_web::Responder,
{
    fn call(&self, bound: B, param: T) -> R;
}

impl<Func, B0, R, O> BoundFactory<(B0,), (), R, O> for Func
where
    Func: Fn(B0) -> R + Clone + 'static,
    R: std::future::Future<Output = O>,
    O: actix_web::Responder,
{
    fn call(&self, bound: (B0,), _: ()) -> R {
        (self)(bound.0)
    }
}
impl<Func, B0, A0, R, O> BoundFactory<(B0,), (A0,), R, O> for Func
where
    Func: Fn(B0, A0) -> R + Clone + 'static,
    R: std::future::Future<Output = O>,
    O: actix_web::Responder,
{
    fn call(&self, bound: (B0,), args: (A0,)) -> R {
        (self)(bound.0, args.0)
    }
}

impl<Func, B0, B1, R, O> BoundFactory<(B0, B1), (), R, O> for Func
where
    Func: Fn(B0, B1) -> R + Clone + 'static,
    R: std::future::Future<Output = O>,
    O: actix_web::Responder,
{
    fn call(&self, bound: (B0, B1), _: ()) -> R {
        (self)(bound.0, bound.1)
    }
}

impl<Func, B0, B1, A0, A1, R, O> BoundFactory<(B0, B1), (A0, A1), R, O> for Func
where
    Func: Fn(B0, B1, A0, A1) -> R + Clone + 'static,
    R: std::future::Future<Output = O>,
    O: actix_web::Responder,
{
    fn call(&self, bound: (B0, B1), args: (A0, A1)) -> R {
        (self)(bound.0, bound.1, args.0, args.1)
    }
}
```",105379569
83,2020-02-03T13:49:45Z,2020-03-01T17:01:09Z,,,"Attempt to fix https://github.com/actix/actix-web/issues/1335 and upgrade to the still actively developed `socket2` crate while preserving the [`backlog` option](https://github.com/actix/actix-web/blob/6a0cd2dced8b085865e966e2d40baf1b8ad9d640/src/server.rs#L575).

If `socket2` is a bad idea, `builder.reuse_address(false)?;` would also work to fix this.
When removing `net2` I also modified the tests, specifically the utility function `unused_addr` to use `net::TcpListener`.",105379569
84,2020-01-22T20:27:20Z,2020-01-29T11:18:19Z,,,"This originates from #1304. 

When data_factory produces Error server is interrupting connection which is incorrect by web standard. It should return `StatusCode::INTERNAL_SERVER_ERROR` instead.

- [X] Add test case for #1304.
- [ ] Fix the issue",105379569
85,2020-01-12T18:24:05Z,2020-02-25T01:39:48Z,,,Closes #1272 ,105379569
86,2020-03-20T13:08:46Z,2020-03-21T13:10:13Z,,,"I noticed that running a simple `fin` was hanging sometimes when Docker Desktop was still booting. I wasn't sure why this would happen since `fin` does not have to interact with Docker at that point, so I investigated.

The variable `DOCKER_RUNNING` is seeded with Docker's running state for _every_ invocation of the `fin` command. I decided to apply caching inside the `is_docker_running` method and clear `DOCKER_RUNNING` whenever the value needs to be updated. This way, it's only checked if Docker is running if the logic requires it and `fin` no longer hangs when Docker is still booting.

On my machine, this reduces the wall time for `fin` from 310ms to 250ms on average.

Also looking for feedback. I think `is_docker_running` could benefit from a cleaner implementation than the one I suggest in this MR.",66903082
87,2020-03-16T08:09:45Z,2020-03-16T08:10:06Z,,,Fixes: https://github.com/docksal/docksal/issues/787,66903082
88,2020-03-04T08:08:42Z,2020-03-16T08:18:28Z,,,Fixes: https://github.com/docksal/docksal/issues/1288,66903082
89,2020-02-23T20:14:24Z,2020-02-23T20:14:24Z,,,"I needed to use Elasticsearch 7 for one of my projects and could not get it to start by default 
Found that I needed to use the following in my override Yaml file:
```yaml
elasticsearch:
    extends:
      file: ${HOME}/.docksal/stacks/services.yml
      service: elasticsearch
    image: elasticsearch:7.1.1
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - ""ES_JAVA_OPTS=-Xms512m -Xmx512m""
```
Whereas it should be easier to use 
```bash
ELASTICSEARCH_IMAGE=elasticsearch:7.1.1
```
in my env file

Single node addon was also needed in order to allow the node to start 
",66903082
90,2020-02-10T13:01:36Z,2020-02-14T21:08:48Z,,,"In #498, [comment](https://github.com/docksal/docksal/issues/498#issuecomment-514158964) is mentioned that we could use [mkcert](https://github.com/FiloSottile/mkcert) for locally-trusted development certificates.

In this pull request I install mkcert, run 'mkcert -install' to create the locally-trusted CAROOT cerificate and create a site cerificate at 'fin project start'.
This certificate is trusted for $VIRTUAL_HOST as well as for *.$VIRTUAL_HOST.

TODOS:
Who can help me to install mkcert on windows and wsl?

- install_tools_wsl  
  Can I use $URL_MKCERT_NIX and MKCERT_BIN=""/usr/local/bin/mkcert""
- install_tools_windows  
  Use $URL_MKCERT_WIN and what should MKCERT_BIN_WIN be?
- small change in [service-vhost-proxy](https://github.com/docksal/service-vhost-proxy) to redirect port 80 automatically to 443. 
",66903082
91,2019-10-22T17:21:38Z,2019-10-23T20:31:40Z,,,Reworking Ngrok to be a service of the project.,66903082
92,2019-05-02T19:14:48Z,2019-10-23T03:09:50Z,,,"Modified Ngrok to connect to a docker project network.

This is also helpful when utilizing the configuration files to reference the hostname of the service.

Fixes #1046 ",66903082
93,2019-05-02T16:33:41Z,2019-10-18T23:26:57Z,,,"Fixes #1044 

This also makes it so if there is a different container other than web",66903082
94,2019-02-17T22:08:30Z,2019-03-21T22:58:08Z,,,"Added feature that would allow integration with the [SSH Proxy](https://github.com/docksal/service-ssh-proxy). This comes in hand with Sandboxes and allowing for SSHing into a specific project without the need to specifically ssh into the host machine. This also comes in handy when wanting to use drush remotely.

This also solves a need for the following: https://github.com/docksal/docksal/issues/792",66903082
95,2018-05-21T06:50:36Z,2019-10-17T11:57:28Z,,,"Started development for multiple repositories that can be used for addons.
Additionally, added ability to run updates between addons. Rather then
running the risk of the addons being out of sync

This is a rewrite of the PR #535 and I believe this solves #368 and solves #405

This takes information that was written through back channels and allows for GIT repos to be used when checking out addons instead of downloading raw files with only support for github.

Additionally, support for multiple repositories is added. The repositories must be prefixed with `DOCKSAL_ADDONS_REPO_` in order to have them searched. The `DOCKSAL_ADDONS_REPO` which is the same repo at https://github.com/docksal/addons is searched first but can be overridden within the `.docksal/docksal.env` file.

Syntax:
```
DOCKSAL_ADDONS_REPO_[NAME]=""[Repo URL]|[Branch]""
```

Because a repository can have multiple branches there is an additional options for the variable to designate which branch is selected.

`[NAME]` Should be replaced with a unique machine name for that repo
`[Repo URL]` Should be the GIT repo url that will be used to clone the repo.
`[BRANCH]` Is optional but designates what branch of the repo to use, if not included `master` branch will be used.

**NOTE** A pipe `(|)` is used to separate the `[REPO URL]` and `[BRANCH]`. If `[BRANCH]` is omitted then the pipe is not necessary

Examples:
```
 # Checks master branch
DOCKSAL_ADDONS_REPO_TOOLKIT=""https://github.com/kanopi/docksal-toolkit.git""
# Checks sample branch
DOCKSAL_ADDONS_REPO_TOOLKIT_SAMPLE=""https://github.com/kanopi/docksal-toolkit.git|sample"" 
```

This also adds in a `fin addon update` command which will allow for the addon to run a similar process as the `fin addon install`. The update process will look for `pre-update` and `post-update` hooks as well. 

The purpose for this is that if an addon has a single repo it can be tracked and to a certain extent versioned appropriately, but more so then that, if there is a need for developer to use their own personal addons in projects, but they also have a repo which is shared amongst a team then they can use both of the repositories.",66903082
96,2016-05-06T18:18:56Z,2018-10-08T07:22:25Z,,,"working on #279
",755200
97,2019-11-01T04:20:25Z,2019-11-01T05:19:35Z,,,"Lots of work to do, but this a PoC for creating a generic host builder for ""microservices"" based on the .NET Core 3.0 SDK worker.

Ideas

- Basic background service support (like a queue consumer/event consumer/etc)
- Maybe a base builder behind the Saturn one (since they share the same base host now)
- Separate CE that creates a worker
- A better way to deal with cancellation in Task CEs 

",115228232
98,2019-08-14T15:52:30Z,2020-02-01T17:04:01Z,,,"In the current channels implementation, we're limited to sending to specific clients identified by a framework provided socket ID. There are instances where we want to be able to treat connections as a higher level construct and message a group of connections at once. Some examples of this include:
- A chatroom where a group relates to a private message conversation
- A game where a group is a running game server
These are tasks where we want to perform the management of groups on the server to limit either the security impact of sending all messages to all clients or to improve performance by not sending all global messages.

In this PR, I've started an implementation of server side management of groups, I suspect that there will still be some API changes needed before this is production ready though.

A group is a child of a channel. A channel can have many groups and an individual connection can belong to many groups. Clients can be added to and removed from groups at any time in the application's lifetime and is not just limited to adding or removing during connection or disconnection events. Groups are identified by a composite key of channel path and group name. Groups are currently a serverside only concept, e.g. the server can broadcast a message to all clients within a group but a client does not have the same ability, therefore there is no concept of server side message subscriptions for groups.

This PR adds the following changes:
1. A change to the ``channel`` computation expression to expose an ``on_connected`` and ``on_disconnected`` handler which are invoked during the channel lifecycle
1. A change to the ``ISocketHub`` API which exposes functions to add a connection to a group, remove a connection from a group and send a message to all members of a group.
1. Internal changes to the socket API to maintain a thread safe dictionary of client group membership.

This implementation still needs some cleanup and API changes as mentioned above hence why the PR is marked as WIP. I would be interested to hear thoughts on the current implementation and how we could further improve this.",115228232
99,2019-03-25T15:37:07Z,2019-03-25T15:37:07Z,,,Here's how `with_auth` in the context of #169 might look in an router.,115228232
100,2018-11-07T21:50:24Z,2019-03-03T22:49:15Z,,,"[WebHost.CreateDefaultBuilder()](https://github.com/aspnet/MetaPackages/blob/f245512f6e68d65309b65528d479f32b34c67718/src/Microsoft.AspNetCore/WebHost.cs#L157-L176) loads application configuration from several places by default:
* `appsettings.json`
* `appsettings.{env}.json`
* Environment variables
* Command line args

It aggregates them in `IConfiguration` instance available in the `ServiceCollection`.

The idea of this PR is to provide an already loaded configuration to the configuration functions for simplification of environment differences handling.

- [x] `use_jwt_authentication_from_config`
- [x] `use_cookies_authentication_from_config`
- [x] `use_oauth_from_config`
- [x] `use_cors_from_config`

With this PR I would also like to open a discussion about other custom operations which might deserve similar approach, such as `use_config` or `forse_ssl`, but the implementation there would be different.",115228232
101,2020-03-27T07:22:57Z,2020-03-27T07:22:57Z,,,"<!--
Make sure that you've read the ""Contributing Code and Content"" section in CONTRIBUTING.md

If you are submitting a bug fix, the subject should contain ""fixes ISSUE_ID"" or ""resolves ISSUE_ID"".

In addition, please clarify:

1. What did you do? 
2. How did you do it?
3. How should we verify this?

-->
",88523356
102,2020-03-26T23:15:47Z,2020-03-26T23:15:51Z,,,,88523356
103,2020-03-26T16:49:05Z,2020-03-26T16:49:05Z,,,"<!--
Make sure that you've read the ""Contributing Code and Content"" section in CONTRIBUTING.md

If you are submitting a bug fix, the subject should contain ""fixes ISSUE_ID"" or ""resolves ISSUE_ID"".

In addition, please clarify:

1. What did you do? 
2. How did you do it?
3. How should we verify this?

-->
",88523356
104,2020-03-26T16:46:21Z,2020-03-27T06:29:50Z,,,,88523356
105,2020-03-26T16:44:17Z,2020-03-27T06:31:10Z,,,,88523356
106,2020-03-26T16:17:49Z,2020-03-27T06:32:03Z,,,"To avoid the issue in Vue components:
![image](https://user-images.githubusercontent.com/1420883/77669834-706a1780-6f96-11ea-97cc-ceb4642e7ac2.png)
",88523356
107,2020-03-26T15:07:30Z,2020-03-26T16:11:21Z,,,,88523356
108,2020-03-26T14:57:31Z,2020-03-26T16:10:22Z,,,,88523356
109,2020-03-26T14:07:04Z,2020-03-26T14:07:14Z,,,,88523356
110,2020-03-25T21:20:05Z,2020-03-26T16:56:29Z,,,,88523356
111,2020-03-25T09:47:26Z,2020-03-25T10:30:52Z,,,,88523356
112,2020-03-24T18:56:52Z,2020-03-25T20:21:08Z,,,,88523356
113,2020-03-24T18:54:26Z,2020-03-26T18:41:27Z,,,,88523356
114,2020-03-24T16:05:37Z,2020-03-25T08:56:40Z,,,,88523356
115,2020-03-24T15:31:24Z,2020-03-26T13:00:52Z,,,,88523356
116,2020-03-24T15:28:26Z,2020-03-26T13:00:58Z,,,,88523356
117,2020-03-23T09:18:30Z,2020-03-26T12:46:30Z,,,,88523356
118,2020-03-20T10:59:15Z,2020-03-26T16:09:56Z,,,"Deprecated options: 

- title
- titleTemplate
- onTitleRendered
- fullScreen
- popupWidth
- popupHeight
- shading
- closeOnOutsideClick
- position
- animation
- showPopupTitle

DropDownEditor.showPopupTitle is deprecated too.",88523356
119,2020-03-19T07:52:48Z,2020-03-25T11:57:11Z,,,"The problem leads when setting an option via the option method the following way:
`form.option('items[0].label.text', 'test')`",88523356
120,2020-03-18T14:00:59Z,2020-03-18T14:00:59Z,,,,88523356
121,2020-03-18T08:09:28Z,2020-03-26T15:11:52Z,,,"<!--
Make sure that you've read the ""Contributing Code and Content"" section in CONTRIBUTING.md

If you are submitting a bug fix, the subject should contain ""fixes ISSUE_ID"" or ""resolves ISSUE_ID"".

In addition, please clarify:

1. What did you do? 
2. How did you do it?
3. How should we verify this?

-->
",88523356
122,2020-03-17T14:08:49Z,2020-03-18T14:15:42Z,,,,88523356
123,2020-03-17T08:07:16Z,2020-03-19T07:06:58Z,,,,88523356
124,2020-03-10T14:56:20Z,2020-03-12T05:06:05Z,,,"<!--
Make sure that you've read the ""Contributing Code and Content"" section in CONTRIBUTING.md

If you are submitting a bug fix, the subject should contain ""fixes ISSUE_ID"" or ""resolves ISSUE_ID"".

In addition, please clarify:

1. What did you do? 
2. How did you do it?
3. How should we verify this?

-->
",88523356
125,2020-03-06T16:46:07Z,2020-03-19T08:48:57Z,,,,88523356
126,2020-02-18T12:29:41Z,2020-02-29T13:45:31Z,,,,88523356
127,2019-12-13T13:38:30Z,2020-02-29T13:44:53Z,,,,88523356
128,2019-11-15T13:08:09Z,2020-01-15T21:29:20Z,,,"<!--
Make sure that you've read the ""Contributing Code and Content"" section in CONTRIBUTING.md

If you are submitting a bug fix, the subject should contain ""fixes ISSUE_ID"" or ""resolves ISSUE_ID"".

In addition, please clarify:

1. What did you do? 
2. How did you do it?
3. How should we verify this?

-->
",88523356
129,2019-09-03T12:45:13Z,2020-01-16T07:45:35Z,,,"<!--
Make sure that you've read the ""Contributing Code and Content"" section in CONTRIBUTING.md

If you are submitting a bug fix, the subject should contain ""fixes ISSUE_ID"" or ""resolves ISSUE_ID"".

In addition, please clarify:

1. What did you do? 
2. How did you do it?
3. How should we verify this?

-->
In the DataGrid columns config there is need ability to set function in the columns.headerFilter.dataSource. I see in the source code that result of call of columns.headerFilter.dataSource() not assigned anywhere and I fix it.",88523356
130,2019-06-28T12:40:10Z,2020-01-15T21:35:22Z,,,,88523356
131,2020-03-16T18:03:21Z,2020-03-16T18:10:35Z,,,Should be return index as number.,12755139
132,2020-01-21T00:25:29Z,2020-01-21T13:29:47Z,,,"## Expected behavior

When `threshold-height` attribute is a negative value, the pull hook should prevent itself from being pulled too far. And developer should be able to specify the max distance (`max-height` attribute) a user can pull the component

## Current behavior

When `threshold-height` attribute is a negative value, a user can pull the pull-hook component to an indefinite distance which may make the layout look weird.

## Proposed solution

The proposed the change adds an `max-height` attribute to the `ons-pull-hook` component, by which a developer can specify how far a user can pull it when `threshold-height` is disabled.",12755139
133,2019-12-28T17:46:36Z,2019-12-30T13:14:55Z,,,"Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.0.5 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add ""no-prototype-builtins"" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of ""properties that must be enumerable"".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the ""lookup""-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for ""constructor"" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add ""no-prototype-builtins"" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to ""runtime""-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.0.5...v4.5.3)
</details>
<details>
<summary>Maintainer changes</summary>

This version was pushed to npm by [knappi](https://www.npmjs.com/~knappi), a new releaser for handlebars since your current version.
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.0.5&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/OnsenUI/OnsenUI/network/alerts).

</details>",12755139
134,2019-12-12T10:49:25Z,2019-12-30T13:14:55Z,,,"Bumps [mixin-deep](https://github.com/jonschlinkert/mixin-deep) from 1.3.1 to 1.3.2.
<details>
<summary>Commits</summary>

- [`754f0c2`](https://github.com/jonschlinkert/mixin-deep/commit/754f0c20e1bc13ea5a21a64fbc7d6ba5f7b359b9) 1.3.2
- [`90ee1fa`](https://github.com/jonschlinkert/mixin-deep/commit/90ee1fab375fccfd9b926df718243339b4976d50) ensure keys are valid when mixing in values
- See full diff in [compare view](https://github.com/jonschlinkert/mixin-deep/compare/1.3.1...1.3.2)
</details>
<details>
<summary>Maintainer changes</summary>

This version was pushed to npm by [doowb](https://www.npmjs.com/~doowb), a new releaser for mixin-deep since your current version.
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mixin-deep&package-manager=npm_and_yarn&previous-version=1.3.1&new-version=1.3.2)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/OnsenUI/OnsenUI/network/alerts).

</details>",12755139
135,2019-12-12T10:49:23Z,2019-12-30T13:14:55Z,,,"Bumps [mixin-deep](https://github.com/jonschlinkert/mixin-deep) from 1.3.1 to 1.3.2.
<details>
<summary>Commits</summary>

- [`754f0c2`](https://github.com/jonschlinkert/mixin-deep/commit/754f0c20e1bc13ea5a21a64fbc7d6ba5f7b359b9) 1.3.2
- [`90ee1fa`](https://github.com/jonschlinkert/mixin-deep/commit/90ee1fab375fccfd9b926df718243339b4976d50) ensure keys are valid when mixing in values
- See full diff in [compare view](https://github.com/jonschlinkert/mixin-deep/compare/1.3.1...1.3.2)
</details>
<details>
<summary>Maintainer changes</summary>

This version was pushed to npm by [doowb](https://www.npmjs.com/~doowb), a new releaser for mixin-deep since your current version.
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mixin-deep&package-manager=npm_and_yarn&previous-version=1.3.1&new-version=1.3.2)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/OnsenUI/OnsenUI/network/alerts).

</details>",12755139
136,2019-12-12T10:49:23Z,2019-12-30T13:14:55Z,,,"Bumps [mixin-deep](https://github.com/jonschlinkert/mixin-deep) from 1.3.1 to 1.3.2.
<details>
<summary>Commits</summary>

- [`754f0c2`](https://github.com/jonschlinkert/mixin-deep/commit/754f0c20e1bc13ea5a21a64fbc7d6ba5f7b359b9) 1.3.2
- [`90ee1fa`](https://github.com/jonschlinkert/mixin-deep/commit/90ee1fab375fccfd9b926df718243339b4976d50) ensure keys are valid when mixing in values
- See full diff in [compare view](https://github.com/jonschlinkert/mixin-deep/compare/1.3.1...1.3.2)
</details>
<details>
<summary>Maintainer changes</summary>

This version was pushed to npm by [doowb](https://www.npmjs.com/~doowb), a new releaser for mixin-deep since your current version.
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mixin-deep&package-manager=npm_and_yarn&previous-version=1.3.1&new-version=1.3.2)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/OnsenUI/OnsenUI/network/alerts).

</details>",12755139
137,2019-12-03T04:45:37Z,2019-12-03T18:46:44Z,,,"postcss-apply was also added since postcss-preset-env does not support
the @apply rule:
https://github.com/csstools/postcss-preset-env/issues/50",12755139
138,2019-11-20T17:00:05Z,2019-12-30T13:14:55Z,,,"Bumps [angular](https://github.com/angular/angular.js) from 1.7.2 to 1.7.9.
<details>
<summary>Changelog</summary>

*Sourced from [angular's changelog](https://github.com/angular/angular.js/blob/master/CHANGELOG.md).*

> # 1.7.9 pollution-eradication (2019-11-19)
> 
> ## Bug Fixes
> - **angular.merge:** do not merge __proto__ property
>   ([726f49](https://github.com/angular/angular.js/commit/726f49dcf6c23106ddaf5cfd5e2e592841db743a))
>   <br>(Thanks to the [Snyk Security Research Team](https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/) for identifyng this issue.)
> - **ngStyle:** correctly remove old style when new style value is invalid
>   ([5edd25](https://github.com/angular/angular.js/commit/5edd25364f617083363dc2bd61f9230b38267578),
>   [#16860](https://github-redirect.dependabot.com/angular/angular.js/issues/16860),
>   [#16868](https://github-redirect.dependabot.com/angular/angular.js/issues/16868))
> 
> 
> <a name=""1.7.8""></a>
> # 1.7.8 enthusiastic-oblation (2019-03-11)
> 
> 
> ## Bug Fixes
> - **required:** correctly validate required on non-input element surrounded by ngIf
>   ([a4c7bd](https://github.com/angular/angular.js/commit/a4c7bdccd76c39c30e33f6215da9a00cc8acde2c),
>   [#16830](https://github-redirect.dependabot.com/angular/angular.js/issues/16830),
>   [#16836](https://github-redirect.dependabot.com/angular/angular.js/issues/16836))
> 
> 
> <a name=""1.7.7""></a>
> # 1.7.7 kingly-exiting (2019-02-04)
> 
> ## Bug Fixes
> - **ngRequired:** set error correctly when inside ngRepeat and false by default
>   ([5ad4f5](https://github.com/angular/angular.js/commit/5ad4f5562c37b1cb575e3e5fddd96e9dd10408e2),
>   [#16814](https://github-redirect.dependabot.com/angular/angular.js/issues/16814),
>   [#16820](https://github-redirect.dependabot.com/angular/angular.js/issues/16820))
> 
> 
> <a name=""1.7.6""></a>
> # 1.7.6 gravity-manipulation (2019-01-17)
> 
> ## Bug Fixes
> - **$compile:** fix ng-prop-* with undefined values
>   ([772440](https://github.com/angular/angular.js/commit/772440cdaf9a9bfa40de1675e20a5f0e356089ed),
>   [#16797](https://github-redirect.dependabot.com/angular/angular.js/issues/16797),
>   [#16798](https://github-redirect.dependabot.com/angular/angular.js/issues/16798))
> - **compile:** properly handle false value for boolean attrs with jQuery
>   ([27486b](https://github.com/angular/angular.js/commit/27486bd15e70946ece2ba713e4e8654b7f9bddad),
>   [#16778](https://github-redirect.dependabot.com/angular/angular.js/issues/16778),
>   [#16779](https://github-redirect.dependabot.com/angular/angular.js/issues/16779))
> - **ngRepeat:**
>   - fix reference to last collection value remaining across linkages
>   ([cf919a](https://github.com/angular/angular.js/commit/cf919a6fb7fc655f3fa37a74899a797ea5b8073e))
>   - fix trackBy function being invoked with incorrect scope
>   ([d4d103](https://github.com/angular/angular.js/commit/d4d1031bcd9b30ae6a58bd60a79bcc9d20f0f2b7),
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`d257c45`](https://github.com/angular/angular.js/commit/d257c4564d069a279c5625ad6b68008d4a4dbb11) docs: release notes for 1.7.9
- [`1b1684c`](https://github.com/angular/angular.js/commit/1b1684c2b20a75df677426d4e4a61d51af3b5c44) docs($compile): fix typos and incorrect example
- [`726f49d`](https://github.com/angular/angular.js/commit/726f49dcf6c23106ddaf5cfd5e2e592841db743a) fix(angular.merge): do not merge __proto__ property
- [`8a187f1`](https://github.com/angular/angular.js/commit/8a187f16c37e0574b1a1fa7ccc54f3690d9d81ec) chore(saucelabs): switch to latest version of desktop Safari
- [`d97e6f1`](https://github.com/angular/angular.js/commit/d97e6f169536fdb7bd8b0c7735b79348d5669213) chore(saucelabs): upgrade SauceConnect to 4.5.4
- [`26e893a`](https://github.com/angular/angular.js/commit/26e893a2faa5be9b563948963dc4ac71990e5100) docs(guide/migration): fix typo (misceallenous --> miscellaneous)
- [`5edd253`](https://github.com/angular/angular.js/commit/5edd25364f617083363dc2bd61f9230b38267578) fix(ngStyle): correctly remove old style when new style value is invalid
- [`019dded`](https://github.com/angular/angular.js/commit/019dded64b7a58d67994af5f0f5b532f1c97b908) chore(*): update jQuery from 3.2.1 to 3.4.0
- [`0007be1`](https://github.com/angular/angular.js/commit/0007be1ca2f3d3b8e1b914e2cdc3c943cbe16bc9) chore(*): make yarn.lock & GitHub templates identical between master & v1.7.x
- [`863528f`](https://github.com/angular/angular.js/commit/863528f2999a32cfb16761258e94e03479e349e8) docs(DEVELOPERS): remove git revert misleading information
- Additional commits viewable in [compare view](https://github.com/angular/angular.js/compare/v1.7.2...v1.7.9)
</details>
<details>
<summary>Maintainer changes</summary>

This version was pushed to npm by [petebacondarwin](https://www.npmjs.com/~petebacondarwin), a new releaser for angular since your current version.
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=angular&package-manager=npm_and_yarn&previous-version=1.7.2&new-version=1.7.9)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/OnsenUI/OnsenUI/network/alerts).

</details>",12755139
139,2019-09-06T21:37:00Z,2019-09-06T21:40:15Z,,,"Failed to compile.

Parse error on line 1: 
- var(--ipho...
--^
Expecting ""SUB"", ""NUMBER"", ""LENGTH"", ""ANGLE"", ""TIME"", ""FREQ"", ""RES"", ""EMS"", ""EXS"", ""CHS"", ""REMS"", ""VHS"", ""VWS"", ""VMINS"", ""VMAXS"", ""PERCENTAGE"", ""css_value"", got unexpected ""FUNCTION""",12755139
140,2018-12-19T12:11:55Z,2019-02-25T10:39:39Z,,,"Hi, nice framework!

When setting up the `css-components`-folder I am faced with a lot of errors `node-gyp` and `fs-events` running on nodeJs LTS (v10.14.2). But basically the replacement with postcss-preset-env would be easy.

Please confirm.

Related issue: #2449",12755139
141,2018-09-12T17:31:51Z,2018-10-05T04:04:56Z,,,,12755139
142,2018-08-09T01:14:15Z,2018-10-05T04:04:55Z,,,"I'm trying to use the lift transition to mimic the iOS modal transition, but the existing transition also animates the underlying page while it transitions. This is right for the iOS push transition, but not for the modal, so I'm wondering why the lift transition has it! I don't _think_ the current behaviour matches anything on iOS?

If you agree, I believe this very simple change makes the lift animation behaviour look more like iOS!",12755139
143,2018-08-06T01:38:52Z,2018-10-05T04:04:55Z,,,"Issue #2335 is happening due to the Tabbar components internal page cache being incorrectly updated when the Page component returned from the renderTabs function changes.

In Tabbar's render method:
```jsx
 const tabs = this.props.renderTabs(this.props.index, this);

 if (!this.tabPages) {
      this.tabPages = tabs.map((tab) => tab.content);
    } else {
      this.tabPages[this.props.index] = tabs[this.props.index].content;
    }
```
The first render of the component will populate tabPages with every tabs content. Subsequent renders will only update the current tab's content. A page's content fails to update when the 'index' prop is out of sync with the actual index that needs to be update. This can occur for two reasons:

1. No 'index' prop is being passed in.
2. The 'index' prop is being passed in and the user has swiped or clicked on a tab to navigate a different page.

So what happens in case 1? The default for the index prop is 0. As such, changes to the first tab's content will be made, all other tabs will be ignored.
```jsx
Tabbar.defaultProps = {
  index: 0
};
```

In case 2, the 'index' prop can be out of sync with the ons-tabbar's active tab index since it can change by means other than just updating the Tabbar's 'index' prop.

In Tabbar's componentWillReceiveProps method:
```jsx
 if (nextProps.index !== this.props.index && nextProps.index !== node.getActiveTabIndex()) {
      node.setActiveTab(nextProps.index, { reject: false });
    }
```


How do we solve this problem? The easiest solution would be to regenerate the entire tabPages cache on every render. This has the downside of removing the entire optimization and results in unnecessary reconciliation within react. A better solution is keeping the current pattern, but ensuring that the correct tab is updated. 

Conceptually, what we want is this:
```jsx
 const node = this._tabbar;
 const tabs = this.props.renderTabs(node.getActiveTabIndex(), this);

 if (!this.tabPages) {
      this.tabPages = tabs.map((tab) => tab.content);
    } else {
      this.tabPages[node.getActiveTabIndex()] = tabs[node.getActiveTabIndex()].content;
    }
```
Notice how the responsibility of deciding which tab's content gets updated has changed from the passed in 'index' prop to the ons-tabbar's current active tab. 

There are 2 issues with this solution though:
1. Changing ons-tabbar's active tab by a means internal to the web component (swiping / clicking a tab)  will not cause react to rerender, and the tab's content will not be updated.
2. It is not guaranteed that node.getActiveTabIndex() will return the value set in Tabbar's componentWillReceiveProps method by the time Tabbar's render method is called.

The first point seems like a non-issue, since renderTabs' output can't change without a rerender happening. It is an issue though. We can't be sure that renderTab's output hadn't changed during a prior rendering, which was thrown out by not updating tabPages to prevent unnecessary reconciliation. 

The second point results from the possibility of setting ons-tabbar's active tab being asynchronous. This appears to be rare, but happens when:
A.  A tab's page is not loaded.
B. platform.isUIWebView() is true.

To ensure that react rerenders the component and uses the correct tab index in response to the active tab changing, this patch tracks the active tab within Tabbar's state, which gets updated during the onPostChange event or in response to the 'index' prop changing. I have tested it with the example in issue #2335 to confirm it works, and I am unaware of any side-effects or bugs.








",12755139
144,2018-08-06T01:00:45Z,2018-10-05T04:04:55Z,,,,12755139
145,2018-03-04T22:46:05Z,2018-08-06T01:49:12Z,,,"This fixed issue #2335 for me.  I've only tested by wrapping the component, haven't had a chance to rebuild and test this patch to the library yet.

Wrapper for component:
https://gist.github.com/chronweigle/c7bf3b5a7ad21dbbb5110236439ad4f6",12755139
146,2018-01-04T01:11:12Z,2018-10-05T04:04:54Z,,,"I've been working on developing OnsenUI bindings for mithril, as it's been my first choice when developing client apps for quite some time now. I have developed several apps using OnsenUI with mithril, but the integration i had was made in a hurry, so it wasn't pretty nor complete.

This is my attempt at creating proper mithril bindings. So far i have the navigator and the splitter properly working. I'll be actively working more to expand the features and capabilities, as i personally need it for my projects.

I'm making this PR for review purposes and feedback for now, until i have more things working.",12755139
147,2020-03-26T11:42:51Z,2020-03-26T11:42:51Z,,,fix Py3 encoding problem #2297,72690
148,2020-03-23T13:05:18Z,2020-03-23T13:05:18Z,,,this makes building binaries (and upgrading them) much easier,72690
149,2019-07-28T20:45:41Z,2019-08-11T17:53:49Z,,,"I traced the command 'python web2py.py -v -T welcome' and found out the shell.py does not execute doctest for two readons: (1) the ignores was not cloned correctly so the function to be executed was not picked up because the type got into global_vars after execfile(...), (2) for python3, the type has changed.  after I made the changes, now I can get execution results back from running all doctests in an application.",72690
150,2019-07-25T16:03:47Z,2019-12-18T16:15:20Z,,,"When running scripts, the path used is relative to the web2py root instead of the full path. This causes differences in migrations when using InDBMigrator - this causes pydal to try to repeat migrations already done.",72690
151,2019-04-03T16:13:32Z,2020-01-07T18:14:12Z,,,"Python redis recently moved from v2 to v3.  With this update it broke backwards compatibility.  See the details here:  https://pypi.org/project/redis/

V3 implements StrictRedis vs Redis which has been deprecated.

This change removes an unnecessary key from the parms passed to the pipe and changes the type of another.",72690
152,2018-12-08T15:15:14Z,2019-05-30T23:04:12Z,,,"ubuntu add package sudo as it's prerequisites to run from user
debian same like ubuntu script
all tested on docker and work

**ref**
https://groups.google.com/forum/#!topic/web2py/IFasLOdWsbI
",72690
153,2020-01-29T16:45:28Z,2020-01-29T16:45:28Z,,,,94273923
154,2019-06-24T18:00:44Z,2019-06-24T22:09:46Z,,,,94273923
155,2019-03-21T21:13:38Z,2019-03-27T06:23:47Z,,,Needs to be tested.,94273923
156,2018-05-15T16:00:14Z,2018-08-26T13:46:57Z,,,This PR adds two projects to the PlatformSamples; They are AspNetCoreWasm.Server (asp.net.core configured to serve the wasm and dll files) and AspNetCoreWasm.Client (A small XAML based demo of a couple of bindings to a ViewModel).,94273923
157,2018-05-13T17:49:29Z,2018-08-30T08:31:30Z,,,"# Ooui Project

- Extended functionality to support DOM custom events with JSON objects as content for interop between javascript and the C# code (this was required in order to interact with the GoogleMap control scripts)
- Added a GoogleMap control to the Ooui project with a sample.

# Ooui.Forms.Maps Project (NEW)

- Added a Ooui.Forms.Maps project to support the GoogleMap control for Xamarin Forms integration (also with a sample).

The Ooui.Forms.Maps is a separate project from Ooui.Forms, because Xamarin.Forms.Maps is separate from Xamarin.Forms, and it would be unnecessary for Ooui.Forms to have a dependency on the maps project if it is not part of the default package. If this is used as a separate project, it would probably need to become its own nuget package as well.

# Samples Project

- Added a plain web sample for Maps
- Added a Xamarin sample for Maps

The resulting control looks like the below (depending on Map Type option, etc):
![image](https://user-images.githubusercontent.com/16349308/39970082-bb7e8b50-56e5-11e8-9dab-5a462d77683a.png)
",94273923
158,2018-05-03T07:58:03Z,2018-08-25T16:48:28Z,,,"Local attributes are not sent to browser. Local attributes are
useful for caching .NET objects on server side objects.",94273923
159,2018-10-03T21:55:20Z,2018-11-07T12:34:34Z,,,"This pull request adds datatip on cursor while using keyboard. The setting can be turned on by going into settings.

This is the same [pull request](https://github.com/facebook-atom/atom-ide-ui/pull/307)",31524768
160,2018-08-31T20:49:38Z,2018-10-04T22:43:02Z,,,"This sets up preliminary support for Rust in Buck.
It uses the [Rust Language Server (RLS)](https://github.com/rust-lang-nursery/rls) LSP server to provide necessary IDE features.

Since RLS and Cargo (the Rust package manager) don't support custom build systems out of box yet, this uses a hacky workaround for the moment. The user has to explicitly build a Rust target in Buck using the Buck toolbar - this in turn executes the `#save-analysis` flavor build and passes location of the resulting JSON save-analysis (index) files to the RLS. For this, the files should be saved first, before executing the build.

Until https://github.com/rust-lang/rust/pull/53870 lands and the updated RLS will ship with a Rust toolchain, it has to be built manually using recent Rust nightly compiler and to have its executable [pointed at](https://github.com/facebook/nuclide/commit/828e5e35e3a389b2e3ca62b619de1c9f88511dff#diff-08dcd94d8ccb34343d6c87bc397b1b59R26) by the user.

Currently the workflow is fragile - if the users starts editing the files without the explicit build first, the RLS can crash because how much it's currently tied to Cargo. This should be fixed when https://github.com/rust-lang-nursery/rls/issues/1026 is implemented (at least stop it from crashing).

cc @jsgf @mostafaeweda @sunshowers ",31524768
161,2018-07-03T16:00:16Z,2018-07-04T04:10:22Z,,,,31524768
162,2018-01-08T19:02:17Z,2018-02-13T21:49:03Z,,,"Hello! I found issue #822 and thought it'd be easy enough to just fix it. This is my first PR to the project, so apologies in advance if I missed something. All feedback is appreciated!",31524768
163,2017-12-31T15:55:06Z,2017-12-31T22:30:04Z,,,"After installing Nuclide I've set it to automatically fetch and install all recommended packages. However, I've had this alert popping up every single time I opened Nuclide:

![image](https://user-images.githubusercontent.com/1261453/34462725-04df5386-ee29-11e7-9e16-7c722d220ccb.png)

It looked like the MagicPython package was getting installed, but it actually wasn't (btw I'm running Atom 1.23.1, Nuclide 0.273.0 on MacOS High Sierra).

Tried installing it manually running `apm install MagicPython` but it errored out:

```
Installing MagicPython to /Users/fknussel/.atom/packages ✓
fs.js:640
  return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);
                 ^

Error: ENOENT: no such file or directory, open '/Users/fknussel/.atom/packages/MagicPython/package.json'
    at Error (native)
    at Object.fs.openSync (fs.js:640:18)
    at Proxy.fs.readFileSync (fs.js:508:33)
    at Proxy.fs.readFileSync (/private/var/folders/4j/6cfp1zxj6_x9ywq8g_nj3b8m0000gn/T/AppTranslocation/4FCD6043-6D3C-464A-B0B9-FF1FCD713E7C/d/Atom.app/Contents/Resources/app/apm/node_modules/asar-require/lib/require.js:86:27)
    at /private/var/folders/4j/6cfp1zxj6_x9ywq8g_nj3b8m0000gn/T/AppTranslocation/4FCD6043-6D3C-464A-B0B9-FF1FCD713E7C/d/Atom.app/Contents/Resources/app/apm/lib/install.js:476:42
    at fn (/private/var/folders/4j/6cfp1zxj6_x9ywq8g_nj3b8m0000gn/T/AppTranslocation/4FCD6043-6D3C-464A-B0B9-FF1FCD713E7C/d/Atom.app/Contents/Resources/app/apm/node_modules/async/lib/async.js:582:34)
    at Immediate.<anonymous> (/private/var/folders/4j/6cfp1zxj6_x9ywq8g_nj3b8m0000gn/T/AppTranslocation/4FCD6043-6D3C-464A-B0B9-FF1FCD713E7C/d/Atom.app/Contents/Resources/app/apm/node_modules/async/lib/async.js:498:34)
    at runCallback (timers.js:649:20)
    at tryOnImmediate (timers.js:622:5)
    at processImmediate [as _immediateCallback] (timers.js:594:5)
```

Not sure what's the deal with case sensitivity when it comes to Atom packages, but switching to the lowercase name version (as per the [package site](https://atom.io/packages/magicpython)) seemed to do the trick:

```
apm install magicpython
```

Never got the ""installing MagicPython"" alert message again on boot up.

Not sure this is just me, but anyway I reckon this should be changed to reflect the actual name of the package.",31524768
164,2017-11-09T18:11:44Z,2017-11-21T18:50:57Z,,,Haven't tested but should work. Major change is unrelated to Nuclide (only affects dropping support for very old RN).,31524768
165,2017-06-07T21:23:02Z,2018-01-25T20:55:09Z,,,"Right now there is a .icon property which maps to Atom$Icons which doesn't have the icons we really want as well as a .kind property for theming I added.

This unifies the two - my new LSP-compatible icons are mapped to type-x where x is the kind property from LSP.

Should be no migration problems now as this preserves existing icon behavior for nuclide/those that used it and my usage from atom-languageclient of the now-removed kind had no impact yet.",31524768
166,2017-03-31T19:46:20Z,2017-06-10T01:23:33Z,,,"## TODO 

- [ ] Tooltips

- [ ] Streams for Spawning and Components

- [ ] Use internal Functions

- [ ] Flow support

- [ ] Linting

- [ ] Tests

- [ ] Check if CRA/CRNA is installed first, then find the script

- [ ] Change CWD and provide console log messages on fail",31524768
167,2020-03-05T22:03:10Z,2020-03-25T21:39:32Z,,,"Closes #1198 .

There was some discussion in the issue about the option name; I've gone with `RedirectDirs` here but I'm happy to change if you have a better alternative. The other suggestions (`NakedDirs`, `UnterminatedDirs`) felt like they had the opposite sense.",54168759
168,2020-02-27T03:13:01Z,2020-02-27T22:39:45Z,,,"This commit adds an alternative to `RocketConfig::read()`, that takes a path to the configuration file to read and parse. Being able to specify a configuration path programmatically gives users more flexibility on where they store configurations and in determining which file to read from.

Taking a single argument `path` seemed like a better interface than just [making `RocketConfig::parse` public](https://github.com/SergioBenitez/Rocket/issues/228).",54168759
169,2020-02-26T02:11:07Z,2020-03-10T15:04:15Z,,,"This PR makes `on_attach` fairings asynchronous. It transitively requires several other functions to become asynchronous, including the ""entry point"" (usually `launch()` or `Client::new()`). This specific implementation is a balance between needing to do asynchronous work in `on_attach`, such as database setup, versus the verbosity of making too many builder-type functions require `.await`s.

Some other similarly sweeping changes that I have not made yet, and can be added to this or made as a followup PR:

* A synchronous version of `Client` (with an internal `Runtime`, that would `block_on` each operation).
  * This can simplify *many* tests by making `.await`s internal - especially in e.g. https://github.com/SergioBenitez/Rocket/compare/async...jebrosen:async-on-attach?expand=1#diff-048d6496580899aa2aec5fc6a244faf0
* Changing the return type of `launch()` so that the most common usage does not require `let _ =` to suppress an unused `Result` warning.

Some other things we may want, off the top of my head:

* An explanation of why `#[rocket::main]` and `#[rocket::async_test]` exist (short version: an attribute is worth it, and reexports of `tokio::main` and `tokio::test` [don't work](hyperium/hyper#1878))",54168759
170,2020-02-21T05:35:18Z,2020-03-16T16:46:51Z,,,Closes #180,54168759
171,2020-02-13T17:51:07Z,2020-02-27T22:39:46Z,,,"Right now a single Rocket.toml is allowed with a limited amount of environments. This change allows an environment variable, ROCKET_CONFIG_FILE to be set, allowing a user to override environment details with additional configuration files.

This will alleviate some of the concerns in #852.",54168759
172,2020-02-13T04:15:58Z,2020-03-03T17:09:13Z,,,"Using Booleans to convey success is often very verbose and not particularly idiomatic. Using Results to express the possible failure is much more explicit and lends the error handling impetus to the callee.

One part of this I'm not particularly happy with is the new need for `.unwrap()` on many places where `Task::all` was used previously; perhaps we also want to bubble errors in these areas? `.unwrap()` in the tests is simply unavoidable, as far as I can see.",54168759
173,2020-02-01T11:17:34Z,2020-03-15T11:47:13Z,,,This commit adds basic support of Last-Modified and If-Modified-Since headers in order to enable HTTP caching while serving static files.,54168759
174,2020-01-21T22:46:00Z,2020-02-27T22:39:47Z,,,CL addressing issue: #1210,54168759
175,2019-12-09T17:04:14Z,2020-02-27T22:39:48Z,,,"Hi,

this PR would fix the issue #464 . I focused on not changing the public API, but it feels a little bit like a spaghetti code, since the types are forwarded from the `StaticRouteInfo`, to `Route`, and finally to the `Rocket` struct. 

Other issues with current solution:
 * requires just another nightly only feature
 * mapping from `TypeId` to human readable type name
 * reading the comments in `std` docs, I'm not sure it is encouraged to use `TypeId`
 * allows only 16 managed states per handler (is it really an issue?)

The mapping can be created during the codegen phase and stored alongside
the `TypeId`. Type names for unused managed states can be obtained using
`std::any::type_name::<T>()`.

I also included an expanded `main.rs` from the `state` example so that you can easily check the generated code. I'll, of course, remove it from the commit. Do you have any suggestions how to improve the approach of communicating the types from endpoint handlers to the `Rocket` struct?",54168759
176,2019-10-04T12:26:36Z,2020-02-27T22:39:48Z,,,"Added a new pub(crate) method in Rocket to launch for testing use only

Fixes #1154 ",54168759
177,2019-10-03T15:57:30Z,2019-12-11T04:21:07Z,,,"This PR adds support for [RON](https://github.com/ron-rs/ron) as an alternative to JSON. I plan to add comments to the code asap, but wanted to have the code already here so if there's something that needs to be changed I don't have to write comments twice (especially because they wouldn't differ from the comments for JSON, except for the format itself). 

The whole code is very strictly oriented at the already existing JSON code, I tested its functionality in a hobby project (which is not yet released, if ever), but didn't write any tests, as I was not able to find any JSON specific tests either.",54168759
178,2019-09-06T13:52:06Z,2020-03-19T17:09:56Z,,,,54168759
179,2019-09-02T08:18:03Z,2019-12-11T04:21:08Z,,,"Most of these lints are either built into rustc (and are allowed by default) or are available via clippy. A couple I've done by hand by using ripgrep to find instances (an example of this is `use foo` declarations, which isn't available via tooling).

Commit messages, which describe what was changed:

- Remove unnecessary braces on import
- Use shorter path where already imported
  In these situations, the relevant path is already imported into the current scope. As such, we can remove parts of the path without cost.

- Remove `use foo`, which is a noop
  This is likely left over from the conversion to 2018, where `extern crate` would have been converted to this.

- Use struct field shorthand where possible

- Remove identity function
  `.params()` already returns an iterator

- Restrict visibility where not externally visible
  Use `crate` over `pub`. This way, rustc can let us know if something is actually unused, rather than assuming it may be used publicly.

- Remove `self` from path where possible
  Doing this is allowed in newer versions of the compiler.",54168759
180,2019-08-09T20:39:45Z,2020-02-27T22:39:48Z,,,"Very simple pull request.
Add DnsPrefetchControl to the Helmet contrib.",54168759
181,2019-08-08T04:36:47Z,2019-12-11T04:21:08Z,,,"In some situatations, ther are nested `impl`s. Other places may be
possible, but would require explicitly specifying the `Self` type.",54168759
182,2019-06-04T19:33:04Z,2020-02-27T22:39:48Z,,,"Hello there!

I use the contrib Uuid wrapper, and bind uuid types to my route handlers. When trying to use Uuid types in conjunction with the `uri!` macro, with code like this:

```rust
Redirect::to(uri!(show: instance_membership_id = instance_membership_id))
```

Where `instance_membership_id` is a contrib `Uuid` wrapper type, and the route handler function signature looks something like:

```rust
use rocket_contrib::uuid::Uuid as RocketUuid;

#[get(""/instances/<instance_membership_id>/topics/<topic_name>"")]
pub fn show(
    instance_membership_id: RocketUuid,
    topic_name: String,
    db: WebappDb,
    user: User,
) -> Result<Template, ExecuteError> {
   ...
}
```

I get an error like this:

```
error[E0277]: the trait bound `rocket_contrib::uuid::Uuid: rocket::http::uri::FromUriParam<rocket::http::uri::Path, _>` is not satisfied                                       
   --> webapp/src/instances.rs:319:58
    |
319 |         Redirect::to(uri!(show: instance_membership_id = instance_membership_id)),                                                                                       
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^ the trait `rocket::http::uri::FromUriParam<rocket::http::uri::Path, _>` is not implemented for `rocket_contrib::uuid::Uuid`
```

This PR adds trait implementations for `UriDisplay`, and their corresponding `FromUriParam` identity implementation. Everything type checks and works after local testing. A few questions / notes:

1. I attempted to use the `impl_with_display!` macro, since UUIDs should be able to use the exact same `Display` implementation for their Uri representation, but had trouble with the macro visibility.
2. I wasn't sure about the best way to unit test this, with the uri `Formatter`: I had trouble understanding how Uri `Formatters` are constructed, given that they seem to be built using macro code-gen. Any advice on how to unit test this would be helpful.

Please let me know if there's a better way to implement this, especially if it makes sense to hook into the `impl_with_display!` macro.

Thanks, and thanks for Rocket!",54168759
183,2019-05-27T12:01:19Z,2020-03-01T02:45:03Z,,,"Set a more permissive range to allow for more projects to co-depend on ring.
This way cargo will choose the best version",54168759
184,2019-05-23T20:53:15Z,2020-02-27T22:39:49Z,,,"The HTTP Content-Security-Policy response header allows web site administrators to control resources the user agent is allowed to load for a given page. With a few exceptions, policies mostly involve specifying server origins and script endpoints. This helps guard against cross-site scripting attacks (XSS).

More information:

- https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
- https://w3c.github.io/webappsec-csp/2/",54168759
185,2019-05-06T11:59:16Z,2020-02-28T20:17:45Z,,,"Hey there,

as suggested in https://github.com/SergioBenitez/Rocket/pull/973#issuecomment-482831877, Rocket should provide an easy way to read from the HTTP body with an upper limit on the body size. (As this is needed for `Form`, `JSON`, etc.)

Let's start off with this proof of concept which adds `DataStream::read_to_string_with_limit` and `DataStream::read_to_end_with_limit` together with a new error type `LimitReadError`.

@jebrosen: What do you think?",54168759
186,2019-03-06T06:34:49Z,2020-02-27T22:39:49Z,,,,54168759
187,2019-01-21T09:12:33Z,2020-02-27T22:39:50Z,,,"Resolves #881.

Brief explanation:

* For forms, a field named `r#type` without a `#[form(name=""something"")]` will now match `&type=` in an input string, when it currently matches `&r#type=`. This test currently passes in `master`:
    ```rust
    #[derive(Debug, PartialEq, FromForm)]
   struct Hazard { r#type: String, }

    #[test]
    fn test_hazard() {
        let form: Result<Hazard, _> = strict(""r#type=test"");
        assert_eq!(form, Ok(Hazard { r#type: ""test"".into() }));
    }
    ```

* For routes, two things happen:
  * Prefixing is always done to an `unraw`ed ident. This is implemented in `prefix()` itself.
  * Comparison of route segment names (e.g. ""<enum>"") is done against the `unraw`ed idents instead of the original idents.

TODO:

* [x] Use `unraw` from syn (dtolnay/syn#625) once it's in a release, instead of implementing it here
* [x] Unconditionally call `unraw()` in `prefix()` instead
* [x] Explore interactions when using a raw ident in one place and a normal ident in another. In particular, there is some tricky behavior with the `uri!` macro that might be more likely to show up when mixing 2015 code (think `async: bool`) with 2018 code (passing in `r#async: true` to `uri!`).
* [x] Comprehensive reform of handling raw identifiers (see https://github.com/SergioBenitez/Rocket/pull/894#pullrequestreview-259139845)
* [x] rebase on top of latest `master` and update for 1.0 releases of proc_macro2 and syn",54168759
188,2019-01-14T14:09:19Z,2020-02-27T22:39:51Z,,,"This is an attempt to fix #806 (at least partially).

This transparently handles `Range` requests for `&[u8]`, `Vec<u8>`, `File` and `NamedFile`, when the total size is known, allowing partial downloads.

It also advertises this feature for the listed types by adding an `AcceptRanges` header.

The implementation follows the [MDN examples](https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests) and the corresponding [RFC](https://tools.ietf.org/html/rfc7233), but only supports `Single part ranges`, which is compliant with the RFC, as a server may choose to ignore or reject any range request.

`Multipart ranges` would most likely be better implemented as a custom `Body` variant and would be more complicated. I have no use case for those, which is why I did not bother, but if that would be blocking and someone can provide some directions/suggestion on how to implement those (I am not very familiar with rocket's codebase), I would try to tackle that as well. But I would strongly prefer to do that in a separate PR.

I am looking for some initial feedback on the approach. I did implement it in the corresponding `Responder` implementations to have access to the `Range` header of the request and the response as well. It seemed fitting. But it would probably also be possible to just parse the header in the `Responder` and just store that in the `Response` or `Body` and deal with it later in the chain (when writing out the `Response` for example).

Docs and Tests are completely lacking, also formatting was not working well, `cargo fmt` changed the whole codebase. So I would appreciate some more comments on what I should provide on those subjects as well.

Thanks for your time :)",54168759
189,2019-01-10T09:51:11Z,2020-02-27T22:39:51Z,,,Fixes https://github.com/SergioBenitez/Rocket/issues/880,54168759
190,2018-03-28T05:42:06Z,2020-02-27T22:39:52Z,,,"TODO:

- [x] Safely delete existing socket on startup
- [x] Emit error when both `address` and `port` are specified(But what if I want to listen on both tcp and unix sockets?)
- [x] TLS over unix socket

Closes #545 ",54168759
191,2020-02-29T09:17:15Z,2020-02-29T09:17:16Z,,,"Bumps [rake](https://github.com/ruby/rake) from 10.1.1 to 12.3.3.
<details>
<summary>Changelog</summary>

*Sourced from [rake's changelog](https://github.com/ruby/rake/blob/master/History.rdoc).*

> === 12.3.3
> 
> ==== Bug fixes
> 
> * Use the application's name in error message if a task is not found.
>   Pull Request [#303](https://github-redirect.dependabot.com/ruby/rake/issues/303) by tmatilai
> 
> ==== Enhancements:
> 
> * Use File.open explicitly.
> 
> === 12.3.2
> 
> ==== Bug fixes
> 
> * Fixed test fails caused by 2.6 warnings.
>   Pull Request [#297](https://github-redirect.dependabot.com/ruby/rake/issues/297) by hsbt
> 
> ==== Enhancements:
> 
> * Rdoc improvements.
>   Pull Request [#293](https://github-redirect.dependabot.com/ruby/rake/issues/293) by colby-swandale
> * Improve multitask performance.
>   Pull Request [#273](https://github-redirect.dependabot.com/ruby/rake/issues/273) by jsm
> * Add alias `prereqs`.
>   Pull Request [#268](https://github-redirect.dependabot.com/ruby/rake/issues/268) by take-cheeze
> 
> === 12.3.1
> 
> ==== Bug fixes
> 
> * Support did_you_mean >= v1.2.0 which has a breaking change on formatters.
>   Pull request [#262](https://github-redirect.dependabot.com/ruby/rake/issues/262) by FUJI Goro.
> 
> ==== Enhancements:
> 
> * Don't run task if it depends on already invoked but failed task.
>   Pull request [#252](https://github-redirect.dependabot.com/ruby/rake/issues/252) by Gonzalo Rodriguez.
> * Make space trimming consistent for all task arguments.
>   Pull request [#259](https://github-redirect.dependabot.com/ruby/rake/issues/259) by Gonzalo Rodriguez.
> * Removes duplicated inclusion of Rake::DSL in tests.
>   Pull request [#254](https://github-redirect.dependabot.com/ruby/rake/issues/254) by Gonzalo Rodriguez.
> * Re-raise a LoadError that didn't come from require in the test loader.
>   Pull request [#250](https://github-redirect.dependabot.com/ruby/rake/issues/250) by Dylan Thacker-Smith.
> 
> === 12.3.0
> 
> ==== Compatibility Changes
> 
> * Bump `required_ruby_version` to Ruby 2.0.0. Rake has already
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`5c87c46`](https://github.com/ruby/rake/commit/5c87c462b64aad674ebb92b1f5b0ff2c911406cd) Bump version to 12.3.3.
- [`5b8f8fc`](https://github.com/ruby/rake/commit/5b8f8fc41a5d7d7d6a5d767e48464c60884d3aee) Use File.open explicitly.
- [`6497ba4`](https://github.com/ruby/rake/commit/6497ba4d94d12c123df48cc8ab40f0a4eb7fb337) Merge pull request [#317](https://github-redirect.dependabot.com/ruby/rake/issues/317) from ruby/ignore-gitignore
- [`be62efb`](https://github.com/ruby/rake/commit/be62efb6cdfc2cc00d660f8fc7d6c1c9de8014e2) Removed gitignore from gemspec files.
- [`1c22b49`](https://github.com/ruby/rake/commit/1c22b490ee6cb8bd614fa8d0d6145f671466206b) Merge pull request [#309](https://github-redirect.dependabot.com/ruby/rake/issues/309) from RDIL/patch-1
- [`496944a`](https://github.com/ruby/rake/commit/496944a8febd51e20957e6833c7930286a0e9a25) Remove deprecated travis ci option
- [`489c7d8`](https://github.com/ruby/rake/commit/489c7d863c666b6d287b760527acf3abe13aaf48) Merge pull request [#307](https://github-redirect.dependabot.com/ruby/rake/issues/307) from ruby/azure-pipelines
- [`77eb6d8`](https://github.com/ruby/rake/commit/77eb6d87cb69c2cc531f72d4aa1948054e9d077f) Only enabled macOS environment
- [`72ffa2e`](https://github.com/ruby/rake/commit/72ffa2ea89f96df2307158fa151825dbb2c28ddf) use realpath
- [`7744872`](https://github.com/ruby/rake/commit/77448726bb057c8ba90a8d12ab6e20ad60dac976) Do not specify ruby version of macOS
- Additional commits viewable in [compare view](https://github.com/ruby/rake/compare/rake-10.1.1...v12.3.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=rake&package-manager=bundler&previous-version=10.1.1&new-version=12.3.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/caelum/vraptor4/network/alerts).

</details>",9821876
192,2019-12-20T00:52:24Z,2019-12-20T00:52:25Z,,,"Bumps [rack](https://github.com/rack/rack) from 1.5.2 to 1.6.12.
<details>
<summary>Changelog</summary>

*Sourced from [rack's changelog](https://github.com/rack/rack/blob/master/CHANGELOG.md).*

> ## [1.6.12] - 2019-12-08
> 
> - [[CVE-2019-16782](https://nvd.nist.gov/vuln/detail/CVE-2019-16782)] Prevent timing attacks targeted at session ID lookup. ([@&#8203;tenderlove](https://github.com/tenderlove), [@&#8203;rafaelfranca](https://github.com/rafaelfranca))
> 
> ## [2.0.7] - 2019-04-02
> 
> ### Fixed
> 
> - Remove calls to `#eof?` on Rack input in `Multipart::Parser`, as this breaks the specification. ([@&#8203;matthewd](https://github.com/matthewd))
> - Preserve forwarded IP addresses for trusted proxy chains. ([@&#8203;SamSaffron](https://github.com/SamSaffron))
> 
> ## [2.0.6] - 2018-11-05
> 
> ### Fixed
> 
> - [[CVE-2018-16470](https://nvd.nist.gov/vuln/detail/CVE-2018-16470)] Reduce buffer size of `Multipart::Parser` to avoid pathological parsing. ([@&#8203;tenderlove](https://github.com/tenderlove))
> - Fix a call to a non-existing method `#accepts_html` in the `ShowExceptions` middleware. ([@&#8203;tomelm](https://github.com/tomelm))
> - [[CVE-2018-16471](https://nvd.nist.gov/vuln/detail/CVE-2018-16471)] Whitelist HTTP and HTTPS schemes in `Request#scheme` to prevent a possible XSS attack. ([@&#8203;PatrickTulskie](https://github.com/PatrickTulskie))
> 
> ## [2.0.5] - 2018-04-23
> 
> ### Fixed
> 
> - Record errors originating from invalid UTF8 in `MethodOverride` middleware instead of breaking. ([@&#8203;mclark](https://github.com/mclark))
> 
> ## [2.0.4] - 2018-01-31
> 
> ### Changed
> 
> - Ensure the `Lock` middleware passes the original `env` object. ([@&#8203;lugray](https://github.com/lugray))
> - Improve performance of `Multipart::Parser` when uploading large files. ([@&#8203;tompng](https://github.com/tompng))
> - Increase buffer size in `Multipart::Parser` for better performance. ([@&#8203;jkowens](https://github.com/jkowens))
> - Reduce memory usage of `Multipart::Parser` when uploading large files. ([@&#8203;tompng](https://github.com/tompng))
> - Replace ConcurrentRuby dependency with native `Queue`. ([@&#8203;devmchakan](https://github.com/devmchakan))
> 
> ### Fixed
> 
> - Require the correct digest algorithm in the `ETag` middleware. ([@&#8203;matthewd](https://github.com/matthewd))
> 
> ### Documentation
> 
> - Update homepage links to use SSL. ([@&#8203;hugoabonizio](https://github.com/hugoabonizio))
> 
> ## [2.0.3] - 2017-05-15
> 
> ### Changed
> 
> - Ensure `env` values are ASCII 8-bit encoded. ([@&#8203;eileencodes](https://github.com/eileencodes))
> 
> ### Fixed
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`de902e4`](https://github.com/rack/rack/commit/de902e48d1c971fe145002039121afb69e10af5a) Merge branch '1-6-sec' into 1-6-stable
- [`b7d6546`](https://github.com/rack/rack/commit/b7d6546e2e21a620559b498707f65f5206f662e2) Bump version
- [`d3e2f88`](https://github.com/rack/rack/commit/d3e2f88c17dad2c7997e453d7ef518dd6e751ac8) making diff smaller
- [`99a8a87`](https://github.com/rack/rack/commit/99a8a8776513839b5da4af393b67afe95a9412d8) fix memcache tests on 1.6
- [`f2cb48e`](https://github.com/rack/rack/commit/f2cb48e50e507e638973f331d4a62099fae567ec) fix tests on 1.6
- [`7ff635c`](https://github.com/rack/rack/commit/7ff635c51d29f3e19377855f6010574fb2e8e593) Introduce a new base class to avoid breaking when upgrading
- [`3232f93`](https://github.com/rack/rack/commit/3232f9370d099e784a16c01d32e8a2da4a953f18) Add a version prefix to the private id to make easier to migrate old values
- [`15da2e5`](https://github.com/rack/rack/commit/15da2e5d95228d0b3fcdb38b2a562efc333402f0) Fallback to the public id when reading the session in the pool adapter
- [`1a532d1`](https://github.com/rack/rack/commit/1a532d13eee9d5546349b5253a204187773de151) Also drop the session with the public id when destroying sessions
- [`9fe40c6`](https://github.com/rack/rack/commit/9fe40c68b514e0f4a947577e4b903a9ae477365e) Fallback to the legacy id when the new id is not found
- Additional commits viewable in [compare view](https://github.com/rack/rack/compare/1.5.2...1.6.12)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=rack&package-manager=bundler&previous-version=1.5.2&new-version=1.6.12)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/caelum/vraptor4/network/alerts).

</details>",9821876
193,2019-11-01T12:25:51Z,2019-11-01T12:25:52Z,,,"Bumps [nokogiri](https://github.com/sparklemotion/nokogiri) from 1.6.3.1 to 1.6.8.1.
<details>
<summary>Changelog</summary>

*Sourced from [nokogiri's changelog](https://github.com/sparklemotion/nokogiri/blob/master/CHANGELOG.md).*

> ## 1.6.8.1 / 2016-10-03
> 
> ### Dependency License Notes
> 
> Removes required dependency on the `pkg-config` gem. This dependency
> was introduced in v1.6.8 and, because it's distributed under LGPL, was
> objectionable to many Nokogiri users ([#1488](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1488), [#1496](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1496)).
> 
> This version makes `pkg-config` an optional dependency. If it's
> installed, it's used; but otherwise Nokogiri will attempt to work
> around its absence.
> 
> 
> ## 1.6.8 / 2016-06-06
> 
> ### Security Notes
> 
> [MRI] Bundled libxml2 is upgraded to 2.9.4, which fixes many security issues. Many of these had previously been patched in the vendored libxml 2.9.2 in the 1.6.7.x branch, but some are newer.
> 
> See these libxml2 email posts for more:
> 
> * https://mail.gnome.org/archives/xml/2015-November/msg00012.html
> * https://mail.gnome.org/archives/xml/2016-May/msg00023.html
> 
> For a more detailed analysis, you may care to read Canonical's take on these security issues:
> 
> * http://www.ubuntu.com/usn/usn-2994-1
> 
> 
> [MRI] Bundled libxslt is upgraded to 1.1.29, which fixes a security issue as well as many long-known outstanding bugs, some features, some portability improvements, and general cleanup.
> 
> See this libxslt email post for more:
> 
> * https://mail.gnome.org/archives/xslt/2016-May/msg00004.html
> 
> 
> ### Features
> 
> Several changes were made to improve performance:
> 
> * [MRI] Simplify NodeSet#to_a with a minor speed-up. ([#1397](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1397))
> * XML::Node#ancestors optimization. ([#1297](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1297)) (Thanks, Bruno Sutic!)
> * Use Symbol#to_proc where we weren't previously. ([#1296](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1296)) (Thanks, Bruno Sutic!)
> * XML::DTD#each uses implicit block calls. (Thanks, [@&#8203;glaucocustodio](https://github.com/glaucocustodio)!)
> * Fall back to the `pkg-config` gem if we're having trouble finding the system libxml2. This should help many FreeBSD users. ([#1417](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1417))
> * Set document encoding appropriately even on blank document. ([#1043](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1043)) (Thanks, [@&#8203;batter](https://github.com/batter)!)
> 
> 
> ### Bug Fixes
> 
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`002e4d8`](https://github.com/sparklemotion/nokogiri/commit/002e4d8481dcc15bbf23fb385cdf5ebfed892442) version bump to v1.6.8.1
- [`3b9ee4b`](https://github.com/sparklemotion/nokogiri/commit/3b9ee4baa2879be181227ee076cf54a062b93933) update CHANGELOG for pkg-config
- [`f2dd079`](https://github.com/sparklemotion/nokogiri/commit/f2dd07910d2b8b332ce94f7daa4184532a0d8b4e) Make the pkg-config gem optional.
- [`6b05c5a`](https://github.com/sparklemotion/nokogiri/commit/6b05c5a5d319575f14d1cfc924c92f0df19a52cd) update v1.6.8 date in CHANGELOG
- [`1103a64`](https://github.com/sparklemotion/nokogiri/commit/1103a647ee84837c6f23c4fe21e554bc2d3708bf) version bump to v1.6.8 final
- [`03d4022`](https://github.com/sparklemotion/nokogiri/commit/03d402212707bd5dfa0a21b7de5e91a7f9d90028) update CHANGELOG with libxml2 USN info
- [`a7da0f9`](https://github.com/sparklemotion/nokogiri/commit/a7da0f9217c7d00d9bd22be9948e73934ee55117) make sure test_all will errexit
- [`8d4ea86`](https://github.com/sparklemotion/nokogiri/commit/8d4ea8671035a59d13936bce263cc7edb031fda0) make sure test_all doesn't require libxml-ruby
- [`80e800b`](https://github.com/sparklemotion/nokogiri/commit/80e800bdb7ab5c04d19fcffdd6cc6c877b3f4279) use eval_gemfile to load libxml-ruby
- [`95ba49a`](https://github.com/sparklemotion/nokogiri/commit/95ba49addfb6dbece66127287d119b5955c4d28b) test_all uses Bundler 1.12.*
- Additional commits viewable in [compare view](https://github.com/sparklemotion/nokogiri/compare/v1.6.3.1...v1.6.8.1)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=nokogiri&package-manager=bundler&previous-version=1.6.3.1&new-version=1.6.8.1)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/caelum/vraptor4/network/alerts).

</details>",9821876
194,2019-10-24T10:14:00Z,2020-02-14T18:24:47Z,,,"Changes oraclejdk8 to openjdk8 due to license issues with the former.
That fix the Travis error below:

`The command ""~/bin/install-jdk.sh --target ""/home/travis/oraclejdk8"" --workspace ""/home/travis/.cache/install-jdk"" --feature ""8"" --license ""BCL"""" failed and exited with 3 during .`",9821876
195,2019-10-24T09:40:36Z,2019-11-04T18:52:12Z,,,"Changes `CustomerController.view` to `Customercontroller.show` at the 1st section.
That makes the name of the method consistent with the other examples on the page.
The text mentioned the URI `/customer/show`, while the action in the controller was named `view` instead of `show`.",9821876
196,2019-07-25T14:24:35Z,2019-07-25T14:24:35Z,,,Aprendizado.,9821876
197,2019-06-13T19:22:21Z,2019-06-13T19:22:21Z,,,don't do nothing.,9821876
198,2015-11-21T04:56:08Z,2018-04-25T20:21:35Z,,,"Allow the user submit date and time to controller like ""21/11/2015 13:10:10"" or ""21/11/2015 13:10""
",9821876
199,2015-08-27T11:59:38Z,2016-12-06T23:01:14Z,,,"Issue solved: https://github.com/caelum/mamute/issues/190
",9821876
200,2015-03-04T17:45:04Z,2015-07-16T21:46:14Z,,,"This closes #940.

@Turini Can you take a look please?

Obs: I had to add the `commons-beanutils` dependency from Apache.

@lucascs 
",9821876
201,2020-03-10T14:54:58Z,2020-03-26T15:12:14Z,,,,970401
202,2020-02-11T13:36:22Z,2020-02-11T13:36:22Z,,,"As you know, since Scala 2.13, symbol literals have been marked as deprecated. We have to use `Symbol(""foo"")` instead of `'foo`. I know this is not beneficial for skinny users at all... 

I really regret to bring backward-incompatibilities to this library but I have to. Since v4, all the methods that used to accept Symbol values go with String values instead. This is a breaking change that probably affects all existing users.

When you upgrade to v4, you will see not small number of compilation errors. There is no other way apart from manually fixing all of them. I'm sorry about that again. I would like all of you to understand this decision.
",13057782
203,2019-08-09T11:34:21Z,2019-08-09T11:34:21Z,,,"**New feature:**

This allows the user to customize the prompt. url is parsed and formatted with the [urlparse](https://docs.python.org/2/library/urlparse.html#module-urlparse) conventions.


**Default configuration:**

Default configuration is using the whole url (scheme, netloc, path, params, query, fragment):
`prompt = '{scheme}{netloc}{path}{params}{query}{fragment}'`

**Example:**
```
$ tail -n 1 ~/.config/http-prompt/config.py
prompt = '{netloc[1:]}{path[-2:]}'
$ http-prompt ""http://www.example.org""
Version: 1.0.0
example.org/> cd foo/bar/baz
example.org/bar/baz>
Goodbye!
```

**Possible updates:**
- Add spaces or other characters around elements: `{path} ` will give `/foo >` from a `/foo` path
- Chain the index operator: `{path[-2:][1]}` will give `/f/b>` from a `moo/foo/bar` path

I might be not good enough with python to ensure myself I didn't introduced a vulnerability through `eval()` in `utils.get_prompt()`.

[Related issue](https://github.com/eliangcs/http-prompt/issues/55)",55584626
204,2019-06-14T07:56:16Z,2019-06-14T07:56:16Z,,,"I added support for httpie file upload with @ syntax.

You need to have --form enabled then you can add a file to request body with:

`> some-file-form-field@some-file.txt`",55584626
205,2019-05-18T01:22:25Z,2019-12-09T13:45:43Z,,,"The endpoint paths can have the parameters to directly below.

An example:
https://github.com/apiaryio/swagger-zoo/blob/aa9118ac8db87594fb9ceb4e5c7ad0bb55a7a2f3/fixtures/examples/swagger/instagram.yaml#L215-L219
```yaml
paths:
  /users/{user-id}:
    parameters:
      - $ref: '#/parameters/user-id'
    get:
      ...
```",55584626
206,2019-05-17T22:12:02Z,2019-05-17T22:41:11Z,,,"Hi! guys,

The methods may not a valid format, as like the list.
It passes through validates tests of some tools.

Thanks!",55584626
207,2019-03-20T06:33:42Z,2019-03-23T10:43:46Z,,,"I patched [jonathanslenders's works](https://github.com/eliangcs/http-prompt/pull/137) into the latest source.

I don't know why this update stop for a long time, and creating new pull request is good manner or not, but I think http-prompt works with prompt_tookit 2.0.x is things I need.

Almost changes is the same as jonathanslenders's. I added only information message for KeyboardInterrupt exception on http_prompt/cli.py:169.",55584626
208,2019-03-14T19:27:13Z,2019-03-14T19:43:41Z,,,Update yaml.load call to use SafeLoader for compatibility with latest PyYAML version recommendations,55584626
209,2019-01-11T23:04:31Z,2019-01-11T23:04:31Z,,,"Swagger allows to reuse common parameters by referencing items of the top-level `parameters` section. The parameter section in `paths` then looks like

```
      parameters:
        - $ref: ""#/parameters/max""
        - $ref: ""#/parameters/offset""
```

An error is thrown at the moment in that case, because a `name` property is expected and references are not resolved.

This PR resolves references from the top-level parameters object if `$ref` is found.",55584626
210,2018-12-07T10:16:22Z,2018-12-07T10:16:22Z,,,"Hi

This PR adds support for building a snap package of http-prompt. Snaps are cross distro Linux software packages. One snap can be installed on Ubuntu all supported LTS and non LTS releases from 14.04 onward. Additionally they can installed on Debian, Manjaro, Fedora, OpenSUSE and others. Making a snap of http-prompt enables you to provide automatic updates on your schedule to your users via the snap store.

If accepted, you can use snapcraft locally, a CI system such as travis or circle-ci, or our free build system (build.snapcraft.io) to create snaps and upload to the store (snapcraft.io/store).

To test this PR locally, I used an Ubuntu 16.04 VM, with the following steps.

    snap install snapcraft --classic
    git clone -b snapcraft https://github.com/dargad/http-prompt
    cd http-prompt
    snapcraft

Please note that snapcraft.yaml has been implemented in such a way it automatically picks up http-prompt version from the latest tag. It can be installed with:

    snap install --dangerous http-prompt_amd64.snap

(the --dangerous is necessary because we’re installing an app which hasn’t gone through the snap store review process)

Once installed the command can be executed: `http-prompt`
![screenshot from 2018-12-07 11-13-35](https://user-images.githubusercontent.com/468720/49641759-62932a80-fa11-11e8-92e3-655540483774.png)

If landed, you will need to:
* Register an account in the snap store https://snapcraft.io/account
* Register the 'http-prompt' name in the store.
```
snapcraft login
snapcraft register http-prompt
```

* Upload a built snap to the store
```snapcraft push http-prompt_amd64.snap --release edge```
* Test installing on a clean Ubuntu 16.04 machine:
```snap install http-prompt --edge```

The store supports multiple risk levels as “channels” with the edge channel typically used to host the latest build from git master. Stable is where stable releases are pushed. Optionally beta and candidate channels can also be used if needed.

Once you are happy, you can push a stable release to the stable channel, update the store page, and promote the application online (we can help there).",55584626
211,2017-12-30T17:39:52Z,2019-03-21T03:49:40Z,,,"These are the changes required for upgrading to prompt_toolkit 2.0 once it's released.

Do you need asynchronous autocompletion or not? By default, completion is synchronous, but we can make it async if completion takes too much time.",55584626
212,2020-03-18T16:17:09Z,2020-03-24T18:24:02Z,,,,25594973
213,2020-03-08T09:17:45Z,2020-03-18T16:15:54Z,,,,25594973
214,2020-02-03T20:32:18Z,2020-02-06T15:19:40Z,,,Replace all spaces with tabs for indentation in templates for Go source code.,25594973
215,2019-12-25T11:05:05Z,2020-02-23T06:44:37Z,,,"This PR aims to remove all the files left over when `buffalo new <app-name>` results in an error.
So incase of any error I am removing the folder itself to remove junk files",25594973
216,2019-12-12T15:29:49Z,2020-01-30T14:54:17Z,,,"This PR attempts to fix 2 bugs in the logs:
- the status code is missing in the logs when calling `c.Error()` (as describe in the issue #1171 )
- When calling `c.Error()`, two similar logs are produced : 1 that comes from the `RequestLoggerFunc` in `request_logger.go`, and 1 from the `defaultErrorHandler` in `errors.go`

**Proposal**
- In `c.Error()`: set the `response.Status` used in logs, and add the error message in a logfield `error`
- Only write the logs in `RequestLoggerFunc`, and set the log level according to the status code

Note: I did not add tests for this small bug fix, as I have not seen tests for logs.",25594973
217,2019-11-21T20:45:19Z,2020-02-18T22:39:12Z,,,,25594973
218,2019-10-24T09:13:46Z,2020-01-30T14:54:18Z,,,"https://github.com/gobuffalo/buffalo/issues/1813  
This is the proposed solution to properly send a big number of mails at the same time, with opening and closing the connection with SMTP server only one time.",25594973
219,2020-03-14T07:53:59Z,2020-03-14T07:54:00Z,,,"Bumps [acorn](https://github.com/acornjs/acorn) from 6.1.1 to 6.4.1.
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/acornjs/acorn/commit/9a2e9b6678e243d66846b91179d650d28453e70c""><code>9a2e9b6</code></a> Mark version 6.4.1</li>
<li><a href=""https://github.com/acornjs/acorn/commit/90a9548ea0ce351b54f956e2c4ed27cca9631284""><code>90a9548</code></a> More rigorously check surrogate pairs in regexp validator</li>
<li><a href=""https://github.com/acornjs/acorn/commit/df0cf1a3e2b1a51a26c14984dc0f5412b7151b10""><code>df0cf1a</code></a> Mark version 6.4.0</li>
<li><a href=""https://github.com/acornjs/acorn/commit/53034126864b492da4e278628bb972cb2a9313d4""><code>5303412</code></a> Also export Parser via Parser.acorn</li>
<li><a href=""https://github.com/acornjs/acorn/commit/efe273e70123449a458157dbf578afaf109a49ab""><code>efe273e</code></a> give token types and etc to plugins</li>
<li><a href=""https://github.com/acornjs/acorn/commit/ac6decb94a3aa4eee99230fdaf5883dfaafe8479""><code>ac6decb</code></a> Mark version 6.3.0</li>
<li><a href=""https://github.com/acornjs/acorn/commit/7e9817d17639d95cc6dbacfde734a0626b2a7dea""><code>7e9817d</code></a> Allow sourceType: module even with ecmaVersion &lt; 6</li>
<li><a href=""https://github.com/acornjs/acorn/commit/e2b8cc087386eccc2ad6fd4a02b4257833557cb3""><code>e2b8cc0</code></a> Fix broken parsing of new expressions when allowReserved==&quot;never&quot;</li>
<li><a href=""https://github.com/acornjs/acorn/commit/1555c528855b10320ce98b4154906d7898c92990""><code>1555c52</code></a> Update acorn.d.ts</li>
<li><a href=""https://github.com/acornjs/acorn/commit/77c20fa2c2f490e646b67e6a0ff7e75fb54ab6c8""><code>77c20fa</code></a> Mark version 6.2.1</li>
<li>Additional commits viewable in <a href=""https://github.com/acornjs/acorn/compare/6.1.1...6.4.1"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=acorn&package-manager=npm_and_yarn&previous-version=6.1.1&new-version=6.4.1)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/Esri/esri-loader/network/alerts).

</details>",74071376
220,2019-10-22T01:47:02Z,2019-10-22T01:47:03Z,,,"Bumps [jquery](https://github.com/jquery/jquery) from 1.8.3 to 3.4.1.
<details>
<summary>Commits</summary>

- [`75f7e96`](https://github.com/jquery/jquery/commit/75f7e963708b60f37a42b777f35825d33c4f8e7a) 3.4.1
- [`7dddb19`](https://github.com/jquery/jquery/commit/7dddb19ca4bca9685adb734c76dcf72c3f610007) Core: Make isAttached work with iOS 10.0-10.2
- [`6c1e7db`](https://github.com/jquery/jquery/commit/6c1e7dbf7311ae7c0c31ba335fe216185047ae5f) Event: Prevent leverageNative from registering duplicate dummy handlers
- [`24d71ac`](https://github.com/jquery/jquery/commit/24d71ac70406f522fc1b09bf7c4025251ec3aee6) Event: Fix handling of multiple async focus events
- [`b4fadc9`](https://github.com/jquery/jquery/commit/b4fadc9b5487bc4274f062c39573061969f5e8c9) Build: Test on Node.js 12, stop testing on Node.js 6 & 11
- [`0d4af52`](https://github.com/jquery/jquery/commit/0d4af5293449722fe873bc1a4b462a857dbbe58e) Build: Fix unresolved jQuery reference in finalPropName
- [`22caea8`](https://github.com/jquery/jquery/commit/22caea8149fc1049ac05b9fab8242a07f25a580c) Build: Updating the 3.4-stable version to 3.4.1-pre
- [`59ea765`](https://github.com/jquery/jquery/commit/59ea7659d433a4a025a25a92c1ed350726e09f76) Release: update AUTHORS.txt
- [`7c1ef15`](https://github.com/jquery/jquery/commit/7c1ef1512b3a6e5af177803aca68e268bc4c64b9) Release: update version to 3.4.0-pre
- [`d940bc0`](https://github.com/jquery/jquery/commit/d940bc063cd5ae09bf52067bbe046fda88f1f687) Build: Update Sizzle from 2.3.3 to 2.3.4
- Additional commits viewable in [compare view](https://github.com/jquery/jquery/compare/1.8.3...3.4.1)
</details>
<details>
<summary>Maintainer changes</summary>

This version was pushed to npm by [timmywil](https://www.npmjs.com/~timmywil), a new releaser for jquery since your current version.
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jquery&package-manager=npm_and_yarn&previous-version=1.8.3&new-version=3.4.1)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/maxmert/maxmertkit/network/alerts).

</details>",6792271
221,2020-01-21T20:56:53Z,2020-01-29T09:36:07Z,,,"This should fix #140 

The problem was that all files in `/mini` begin with underscore (ie: `_core.scss`). By default github pages ignores them, because of Jekyll's ignore rules. Adding a `.nojekyll` file at `/docs` solves the problem, as the site does not use Jekyll.

More on the topic: https://github.blog/2009-12-29-bypassing-jekyll-on-github-pages/

Also I've published the fix here for testing: https://sigmasoldi3r.github.io/mini.css/flavors",66245850
222,2020-02-08T15:37:33Z,2020-03-19T16:53:58Z,,,"Added notification support to the Web Interface.
- icon added to enable and request notification permissions
- throttle added when notifications are enabled, to only send once every 2 seconds

As Chrome/Firefox require secure context to allow notifications, added https cli arguments
See docs/https.md for details.",9135204
223,2020-02-08T15:24:31Z,2020-03-26T01:27:58Z,,,"The autoShow state wasn't remember between page refreshes.

When MailDev interface loads the autoShow state will be retrieved from local storage.
When autoShow state changes, the state will be persisted in local storage.",9135204
224,2019-12-18T21:26:22Z,2020-03-26T01:27:35Z,,,"Mails and attachments are not stored in a os dependent temporary directory, but
in a given directory. This is useful in containerized environments where
persistent volumes are mapped to folders in the container.",9135204
225,2019-10-06T22:39:51Z,2020-02-08T06:23:08Z,,,"When maildev is used in a CI environment, and multiples tests are run in parrallel, it's rather difficult to clean all emails sent by one test without perturbing other tests.

This feature use a dedicated header in mails to group/categorize them through specific REST routes.
- **GET    /group** - Get all groups, by default, if an email doesn't have the `x-maildev-group` header, then it's group is `default`
- **GET    /group/:group** - Get all emails by group
- **DELETE /group/:group** - Delete all emails by group
",9135204
226,2019-10-06T15:29:53Z,2020-02-08T05:40:23Z,,,"A toggle is displayed at the upper right corner, when triggered
display menu are either displayed as dropdown menu, or like a
toolbar

<img width=""979"" alt=""Capture d’écran 2019-10-06 à 17 28 55"" src=""https://user-images.githubusercontent.com/1434700/66271491-d46d1800-e85e-11e9-8a2b-4f6de168a560.png"">
<img width=""979"" alt=""Capture d’écran 2019-10-06 à 17 28 45"" src=""https://user-images.githubusercontent.com/1434700/66271492-d505ae80-e85e-11e9-9bae-24aa95a9d70b.png"">
",9135204
227,2018-11-15T11:42:51Z,2020-03-26T01:27:20Z,,,"MailDev may sometimes be used as a part of a development/staging environment where the process may be running for a very long time without interruption. In those cases, it is undesirable to let that
process grow freely. This limit makes sure that the memory usage is bounded.",9135204
228,2018-07-13T12:12:47Z,2019-10-18T04:58:19Z,,,"Currently, the case of transmitting both STARTTLS and AUTH can not be covered.

Like smtp-server module, not only extended commands, but all unnecessary commands should be controllable.",9135204
229,2018-05-31T08:43:06Z,2018-05-31T09:29:01Z,,,Email to wasn't showing and relay button didn't work,9135204
230,2018-04-13T00:46:39Z,2019-03-22T08:50:44Z,,,"This PR adds `dovecot` to MailDev, which allows it to support POP3 and IMAP

fixes https://github.com/djfarrelly/MailDev/issues/166

One can try it here: https://hub.docker.com/r/marcosdiez/maildev/",9135204
231,2017-09-02T22:01:05Z,2019-04-01T12:41:32Z,,,,9135204
232,2017-07-20T15:44:27Z,2017-08-25T12:50:42Z,,,"At first, I got this:
``` Javascript
  /node_modules/ws/lib/Receiver.js:306
  if (mask != null && buf != null) bufferUtil.unmask(buf, mask);
                                             ^
TypeError: Cannot read property 'unmask' of undefined
```

Then I installed bufferutil, then got this:
``` Javascript
/node_modules/ws/lib/Receiver.js:532
            if (!Validation.isValidUTF8(messageBuffer)) {
                           ^
TypeError: Cannot read property 'isValidUTF8' of undefined
```

According to this issue: https://github.com/websockets/ws/issues/1021
and this PR: https://github.com/socketio/engine.io/pull/495
I did an update locally and it works",9135204
233,2017-06-03T23:37:15Z,2019-03-22T15:35:28Z,,,"This adds an option to disable the execution of javascript in a mail.

By default Javascript will be executed with the flag --disable-javascript it can be disabled.",9135204
234,2016-10-31T00:12:45Z,2020-03-26T01:27:28Z,,,"Storage moved to separate js file - mainly because it's easier to test. Instead of using a normal js array a custom implementation of push method is provided. A storage itself uses an event emiter to communicate with the rest of the system.

It's not an ideal solution but provides the functionality which is needed. The storage might be use in the future to provide a proper separation of mailserver and storage functionalities. This should provide an abstraction layer between multiple storages and mailserver. Anyway it's a bigger refactoring effort.
",9135204
235,2020-03-25T13:26:50Z,2020-03-25T13:26:51Z,,,"Bumps [rollup](https://github.com/rollup/rollup) from 2.1.0 to 2.2.0.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/rollup/rollup/releases"">rollup's releases</a>.</em></p>
<blockquote>
<h2>v2.2.0</h2>
<p><em>2020-03-24</em></p>
<h3>Features</h3>
<ul>
<li>Add <code>renderDynamicImport</code> hook to rewrite dynamic import expressions (<a href=""https://github-redirect.dependabot.com/rollup/rollup/issues/3449"">#3449</a>)</li>
<li>Add information about dynamically imported modules to <code>this.getModuleInfo</code> (<a href=""https://github-redirect.dependabot.com/rollup/rollup/issues/3449"">#3449</a>)</li>
</ul>
<h3>Bug Fixes</h3>
<ul>
<li>Make file emission work with Uin8Array sources when using Rollup in the browser (<a href=""https://github-redirect.dependabot.com/rollup/rollup/issues/3452"">#3452</a>)</li>
<li>Fix types to allow watch to accept an array of configs (<a href=""https://github-redirect.dependabot.com/rollup/rollup/issues/3453"">#3453</a>)</li>
<li>Do not strip <code>.js</code> extensions from AMD imports when the import is a user-supplied replacement for a non-resolvable dynamic import target (<a href=""https://github-redirect.dependabot.com/rollup/rollup/issues/3453"">#3453</a>)</li>
</ul>
<h3>Pull Requests</h3>
<ul>
<li><a href=""https://github-redirect.dependabot.com/rollup/rollup/pull/3449"">#3449</a>: Avoid the assumption of Buffer in browser envs (<a href=""https://github.com/lukastaegert"">@lukastaegert</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/rollup/rollup/pull/3452"">#3452</a>: Avoid the assumption of Buffer in browser envs (<a href=""https://github.com/JoviDeCroock"">@JoviDeCroock</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/rollup/rollup/pull/3453"">#3453</a>: fix types since watch accepts single or array config (<a href=""https://github.com/lukeed"">@lukeed</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/rollup/rollup/pull/3456"">#3456</a>: fix SystemJS url in tutorial (<a href=""https://github.com/guybedford"">@guybedford</a>)</li>
</ul>
</blockquote>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/rollup/rollup/blob/master/CHANGELOG.md"">rollup's changelog</a>.</em></p>
<blockquote>
<h2>2.2.0</h2>
<p><em>2020-03-24</em></p>
<h3>Features</h3>
<ul>
<li>Add <code>renderDynamicImport</code> hook to rewrite dynamic import expressions (<a href=""https://github-redirect.dependabot.com/rollup/rollup/issues/3449"">#3449</a>)</li>
<li>Add information about dynamically imported modules to <code>this.getModuleInfo</code> (<a href=""https://github-redirect.dependabot.com/rollup/rollup/issues/3449"">#3449</a>)</li>
</ul>
<h3>Bug Fixes</h3>
<ul>
<li>Make file emission work with Uin8Array sources when using Rollup in the browser (<a href=""https://github-redirect.dependabot.com/rollup/rollup/issues/3452"">#3452</a>)</li>
<li>Fix types to allow watch to accept an array of configs (<a href=""https://github-redirect.dependabot.com/rollup/rollup/issues/3453"">#3453</a>)</li>
<li>Do not strip <code>.js</code> extensions from AMD imports when the import is a user-supplied replacement for a non-resolvable dynamic import target (<a href=""https://github-redirect.dependabot.com/rollup/rollup/issues/3453"">#3453</a>)</li>
</ul>
<h3>Pull Requests</h3>
<ul>
<li><a href=""https://github-redirect.dependabot.com/rollup/rollup/pull/3449"">#3449</a>: Avoid the assumption of Buffer in browser envs (<a href=""https://github.com/lukastaegert"">@lukastaegert</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/rollup/rollup/pull/3452"">#3452</a>: Avoid the assumption of Buffer in browser envs (<a href=""https://github.com/JoviDeCroock"">@JoviDeCroock</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/rollup/rollup/pull/3453"">#3453</a>: fix types since watch accepts single or array config (<a href=""https://github.com/lukeed"">@lukeed</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/rollup/rollup/pull/3456"">#3456</a>: fix SystemJS url in tutorial (<a href=""https://github.com/guybedford"">@guybedford</a>)</li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/rollup/rollup/commit/dade1fc830a5201fd8d79532058673cca07a8048""><code>dade1fc</code></a> 2.2.0</li>
<li><a href=""https://github.com/rollup/rollup/commit/33c8b01ccb4c6f20661c3b671f4c9ff5a59122de""><code>33c8b01</code></a> Update changelog</li>
<li><a href=""https://github.com/rollup/rollup/commit/28ffcf4c4a2ab4323091f63944b2a609b7bcd701""><code>28ffcf4</code></a> Add hook to rewrite dynamic import expressions (<a href=""https://github-redirect.dependabot.com/rollup/rollup/issues/3449"">#3449</a>)</li>
<li><a href=""https://github.com/rollup/rollup/commit/485700e2886be3959f765877533800ad0859b533""><code>485700e</code></a> feat(watch): add <code>skipWrite</code> option (<a href=""https://github-redirect.dependabot.com/rollup/rollup/issues/3454"">#3454</a>)</li>
<li><a href=""https://github.com/rollup/rollup/commit/e9ece1d67dc9b194289f4b60781db4aef8f94c5e""><code>e9ece1d</code></a> Avoid the assumption of Buffer in browser envs (<a href=""https://github-redirect.dependabot.com/rollup/rollup/issues/3452"">#3452</a>)</li>
<li><a href=""https://github.com/rollup/rollup/commit/399bbf46f4ca0bd87e7fcf9992c97e148c48463f""><code>399bbf4</code></a> docs: fix SystemJS url in tutorial (<a href=""https://github-redirect.dependabot.com/rollup/rollup/issues/3456"">#3456</a>)</li>
<li><a href=""https://github.com/rollup/rollup/commit/530e259045520665faa2f925337fb0ff8534105e""><code>530e259</code></a> fix(types): watch accepts single or array config (<a href=""https://github-redirect.dependabot.com/rollup/rollup/issues/3453"">#3453</a>)</li>
<li>See full diff in <a href=""https://github.com/rollup/rollup/compare/v2.1.0...v2.2.0"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=rollup&package-manager=npm_and_yarn&previous-version=2.1.0&new-version=2.2.0)](https://dependabot.com/compatibility-score/?dependency-name=rollup&package-manager=npm_and_yarn&previous-version=2.1.0&new-version=2.2.0)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>",66781496
236,2020-03-23T13:32:17Z,2020-03-23T13:32:18Z,,,"Bumps [marked](https://github.com/markedjs/marked) from 0.8.1 to 0.8.2.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/markedjs/marked/releases"">marked's releases</a>.</em></p>
<blockquote>
<h2>0.8.2</h2>
<h2>Fixes</h2>
<ul>
<li>Add html to TextRenderer for html in headings <a href=""https://github-redirect.dependabot.com/markedjs/marked/issues/1622"">#1622</a></li>
<li>Remove html tags in heading ids <a href=""https://github-redirect.dependabot.com/markedjs/marked/issues/1622"">#1622</a></li>
</ul>
<h2>Docs</h2>
<ul>
<li>Update comment about GitHub breaks <a href=""https://github-redirect.dependabot.com/markedjs/marked/issues/1620"">#1620</a></li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/markedjs/marked/commit/4af69d33434f47b85630ea435a0ddeccea244838""><code>4af69d3</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/markedjs/marked/issues/1624"">#1624</a> from UziTech/release-0.8.2</li>
<li><a href=""https://github.com/markedjs/marked/commit/19f0d4f4bfc1b09ba947ea9ad6ddea7bd2472fad""><code>19f0d4f</code></a> 0.8.2</li>
<li><a href=""https://github.com/markedjs/marked/commit/38403c01e49bf6fb518f1cfb83c4d99ed4b0f2d6""><code>38403c0</code></a> build</li>
<li><a href=""https://github.com/markedjs/marked/commit/d7b05cbff37c1b94a6489c49ac8a5e71857986c5""><code>d7b05cb</code></a> update devdeps</li>
<li><a href=""https://github.com/markedjs/marked/commit/17ee15f6799a8600e85665472be6af91c0e2eb20""><code>17ee15f</code></a> build [skip ci]</li>
<li><a href=""https://github.com/markedjs/marked/commit/58e9fed699e78edbaf01584f2213a753fb6d5e76""><code>58e9fed</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/markedjs/marked/issues/1622"">#1622</a> from UziTech/render-html</li>
<li><a href=""https://github.com/markedjs/marked/commit/193a41e78d625765075f652a152366e1e1e17435""><code>193a41e</code></a> simplify tag regex</li>
<li><a href=""https://github.com/markedjs/marked/commit/7330a9ca3d3b1d6de8730953beb0777f43beedec""><code>7330a9c</code></a> add html test to heading ids</li>
<li><a href=""https://github.com/markedjs/marked/commit/f01ba949dd2a7d582ea764f11837df534797a4f5""><code>f01ba94</code></a> add html to TextRenderer</li>
<li><a href=""https://github.com/markedjs/marked/commit/cf3d0a0005d8ae9e3dd31e0b70e8f64ba1426b3f""><code>cf3d0a0</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/markedjs/marked/issues/1620"">#1620</a> from julien-c/patch-1</li>
<li>Additional commits viewable in <a href=""https://github.com/markedjs/marked/compare/v0.8.1...v0.8.2"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=marked&package-manager=npm_and_yarn&previous-version=0.8.1&new-version=0.8.2)](https://dependabot.com/compatibility-score/?dependency-name=marked&package-manager=npm_and_yarn&previous-version=0.8.1&new-version=0.8.2)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>",66781496
237,2020-03-27T07:37:09Z,2020-03-27T07:37:20Z,,,"This CL moves flex-item-contains-strict.html test from
css3/css-flexbox to external/wpt/css/css-flexbox with WPT
styles, adding links to the relevant specs, a proper title,
and test description.

Bug: 1063749
Change-Id: I8c688b51efc8890250073778b76bef1f23f8fa24
Reviewed-on: https://chromium-review.googlesource.com/2123573
WPT-Export-Revision: 639a95a8916087e1cba05f0fe2f80f3ce6cfb592",3618133
238,2020-03-27T05:54:14Z,2020-03-27T05:54:23Z,,,"This CL is a follow-up of https://crrev.com/c/2120664. It renames
intrinsic-min-width-applies-with-fixed-width.html to
flex-minimum-width-flex-items-011.html.

Bug: 1063749
Change-Id: I66932589a9d05c4c8fed68e4f55e751bfaa82fbb
Reviewed-on: https://chromium-review.googlesource.com/2123694
WPT-Export-Revision: 795a01930c4c63f3f3dff25aa6ce91271842b896",3618133
239,2020-03-27T05:14:46Z,2020-03-27T05:35:15Z,,,"This CL moves flex-item-contains-strict.html test from
css3/css-flexbox to external/wpt/css/css-flexbox with WPT
styles, adding links to the relevant specs, a proper title,
and test description.

Bug: 1063749
Change-Id: I5559de07cc72a44a36ed39c951562a156dfeabca
Reviewed-on: https://chromium-review.googlesource.com/2123695
WPT-Export-Revision: 247b2e469f8efa6b2fa1023a4c90d5821f583871",3618133
240,2020-03-26T20:50:58Z,2020-03-26T22:44:54Z,,,"Does not use the property in layout yet.

https://drafts.csswg.org/css-sizing-4/#aspect-ratio

Bug: 1045668
Change-Id: I1c6411faaf7eec6c7dc041da5b7e481fb34fe030
Reviewed-on: https://chromium-review.googlesource.com/2122430
WPT-Export-Revision: 583f21fc19673bdfa814f3f9d7ed46f2bcc92032",3618133
241,2020-03-26T20:00:07Z,2020-03-26T20:00:17Z,,,"BUG=1063749
R=dgrogan@chromium.org

Change-Id: I35b258bed47050051139020a1fc3147d08333fbd
Reviewed-on: https://chromium-review.googlesource.com/2120544
WPT-Export-Revision: 77857ee93553599a79bc43a421e5a94cda22ccaf",3618133
242,2020-03-26T17:11:16Z,2020-03-26T23:46:22Z,,,"Version as reported by safaridriver --version:
Included with Safari Technology Preview (Release 103, 15610.1.7.3.2)

Source: https://developer.apple.com/safari/download/
Build: https://dev.azure.com/foolip/safari-technology-preview-updater/_build/results?buildId=1595&view=logs",3618133
243,2020-03-26T17:02:14Z,2020-03-26T17:02:23Z,,,"This change re-adds wpt tests[1] from the former API iteration,
SMS Receiver API, to the new OTP Credential API version.
They were once deleted here[2], when cleaning up the previous
API interface.

[1]https://chromium.googlesource.com/chromium/src/+/26d14ef58e85c3826d4ca5cc0607efc49300b993/third_party/blink/web_tests/external/wpt/sms/interceptor.https.html
[2]https://chromium-review.googlesource.com/c/chromium/src/+/2097041

Change-Id: Ic1755c0a6fab4764bd3b0ab06c688f1cd4001d3a

Reviewed-on: https://chromium-review.googlesource.com/2121466
WPT-Export-Revision: 0532a05affb4b5b29c83febfca2fe986e442dfb9",3618133
244,2020-03-26T14:45:08Z,2020-03-27T01:59:25Z,,,"This CL renames ""wake-lock"" to ""screen-wake-lock"" in policy-controlled feature
specific for screen wake lock, and leaves system wake lock's policy control
as allowed by default because its associated feature policy is not defined yet.

Spec changes at: https://github.com/w3c/wake-lock/pull/255

Bug: 1064685
Change-Id: I7701a532a7688d708a75aedafc8713d671da6e2b

Reviewed-on: https://chromium-review.googlesource.com/2119886
WPT-Export-Revision: 9b04cd42a3bf70e3edd281cd84e779271ff402fb",3618133
245,2020-03-26T14:17:04Z,2020-03-27T05:15:50Z,,,"Migrate this test out of third_party/blink/web_tests/css3/flexbox
and into the WPT-specific directory, adding links to the relevant
specs and a test assertion describing its purpose.

Bug: 1063749
Change-Id: I46beff57bed22cd3b1795c10d7195ad7cfdd2324
Reviewed-on: https://chromium-review.googlesource.com/2121938
WPT-Export-Revision: 27459ff882f3523dc8ce29cf0ab80bfd037e8ec4",3618133
246,2020-03-26T13:44:45Z,2020-03-26T13:44:55Z,,,"see https://github.com/w3c/webrtc-pc/issues/2499

Bug: none
Change-Id: I0bfc2adbb7f07a851f6fe704c93452e1312b6f49
Reviewed-on: https://chromium-review.googlesource.com/2120399
WPT-Export-Revision: b794494656dba2cbbbaae5f45da93fcf2d01b64a",3618133
247,2020-03-26T11:02:44Z,2020-03-26T11:02:55Z,,,"For https://github.com/whatwg/html/issues/4924

Bug: 1064920
Change-Id: I3837bd2dab635ec0d09d68362a5e4f13b6f44582
Reviewed-on: https://chromium-review.googlesource.com/2121936
WPT-Export-Revision: 1fd4cfb00bff44a46494d24dfb0124f0a5590f3a",3618133
248,2020-03-26T10:36:53Z,2020-03-26T10:37:04Z,,,"Returning null from FindSVGData just means ""fall back to whatever display
specifies"", and that's not great.

Differential Revision: https://phabricator.services.mozilla.com/D67706

bugzilla-url: https://bugzilla.mozilla.org/show_bug.cgi?id=1611848
gecko-commit: 02c284defc4d5f8d9ed1c7c8363becdd93f4b291
gecko-integration-branch: autoland
gecko-reviewers: heycam",3618133
249,2020-03-26T09:38:06Z,2020-03-27T05:54:41Z,,,"This CL migrates this test out of
third_party/blink/web_tests/css3/flexbox and into the WPT-specific
directory, adding links to the relevant specs and a test assertion
describing its purpose and renames it to
justify-content_space-between-002.html.

Bug: 1063749
Change-Id: Ib4c2a87c230e1e8865be868e7bfc7d5273bcc865
Reviewed-on: https://chromium-review.googlesource.com/2121639
WPT-Export-Revision: 6e74fd899725bdfa42f2e1f64ef84fe7aba72afd",3618133
250,2020-03-26T07:14:55Z,2020-03-27T00:16:14Z,,,As discussed in https://github.com/web-platform-tests/wpt/pull/22309#issuecomment-604203669,3618133
251,2020-03-25T21:35:09Z,2020-03-26T18:42:27Z,,,"Add new CSSAnimationUtils class with a static method
KeyframeValueFromComputedStyle() which returns the true computed value
for all properties. This mostly calls CSSValueForComputedStyle() without
a LayoutObject, but the cases where this does not return the computed
value (line-height and transform) are handles separately, simillarly
to the implementation of ComputedStyleMap.

This method does take a LayoutObject, but it is only used to resolve
matrix interpolation of box-size-dependent transform values, which
produces a deferred compilation which cannot be serialized directly in
the current spec.

Make Animation.commitStyles() use this new function instead of
committing the resolved value using CSSValueFromComputedStyle().

Add additional WPT tests for commitStyles() adding tests for
special-case properties and splitting the logical properties case.

Bug: 1056197, 1057307
Change-Id: Ic823f96f257d4c6b010dfee758d4ac0b5cd4148c
Reviewed-on: https://chromium-review.googlesource.com/2118765
WPT-Export-Revision: 0eb43f09e38425aa17694859c616da10e8870831",3618133
252,2020-03-25T21:01:45Z,2020-03-26T13:45:23Z,,,"The experimental Trust Token API
(https://github.com/wicg/trust-token-api)
takes in parameters specifying a Trust Tokens protocol operation,
annotates outgoing requests with request headers corresponding to
protocol state, and processes corresponding response headers. For the
MVP of the API, we're making the functionality available via Fetch,
iframe, and XHR.

To implement the XHR surface, this CL adds a new XHR setter,
that accepts a trustToken object (identical to the one for the Fetch
interface added in crrev.com/c/2036648) specifying a Trust Tokens
operation to execute against the request.

Test: Expands integration tests to ensure Trust Tokens params are
propagated correctly from the XHR interface to the network stack.
Bug: 1062395
Change-Id: I5f32d60c7b59002e79dc877719ba549ce5b9f412
Reviewed-on: https://chromium-review.googlesource.com/2120266
WPT-Export-Revision: 8b4d997a0808e02621647cbbee45766aa34084d5",3618133
253,2020-03-25T20:10:45Z,2020-03-27T01:17:14Z,,,"Skia takes a scale-factor when generating complex strokes (dashed, etc.)
as an optimization.  When rendering, we passed a scale-factor derived
from the CTM, but when hit-testing we were passing a hard-coded value.
As a result, the stroke generated for hit-testing was noticeably
different between hit-testing and rendering.

This change passes the CTM through to the hit-testing code, so that the
same scale factor will be used for hit-testing as it was for rendering.

Bug: 964614
Change-Id: I8dfcb3ade86b9e7b63c7415baab5814ac2286ce8
Reviewed-on: https://chromium-review.googlesource.com/2112955
WPT-Export-Revision: 115b6aeb326807ed7ab0b1ff00b1402f4bf452dc",3618133
254,2020-03-25T18:43:42Z,2020-03-26T19:39:47Z,,,"See bug for more detailed information.

Basically the site in the bug had images all with an aspect ratio of 1/1.
With browser zoom, we hit a situation where the width != height due to
a loss of precision in the conversion from:

LayoutUnit -> float -> LayoutUnit.

Resulting in a LayoutUnit(1) difference in the width and height.

This patch changes the aspect-ratio calculation to use doubles meaning
we retain some precision in the:
LayoutUnit -> double -> LayoutUnit conversion.

Bug: 1052370
Change-Id: Ic242c224fec17eeec8f1469c0a6c1fe2ed85c4d2

Reviewed-on: https://chromium-review.googlesource.com/2117464
WPT-Export-Revision: 2eecea9ef610ec40fa52acfa77a5854404a728f4",3618133
255,2020-03-25T18:02:46Z,2020-03-25T18:02:56Z,,,"The ready promise depends on the pending state, which in turn can be
impacted by a pending style change. Checking the pending state prior
to checking the ready promise fixes the problem. A few tweaks were
needed to the test itself.  If we create a ready promise, we need to
wait for it to resolve. Otherwise, an error is potentially triggered
(race condition) during tear down of the test as it will cancel a
pending animation, which in turn, rejects the ready promise.  Any
unexpected promise reject triggers a harness error.

Bug: 1064640
Change-Id: I25191dd26206368e497638ce9f73984b2e61cad4

Reviewed-on: https://chromium-review.googlesource.com/2118183
WPT-Export-Revision: e453aa387d3010fd8800a44a1ea509dac2121878",3618133
256,2020-03-25T06:30:20Z,2020-03-25T06:30:29Z,,,"Migrate this test out of third_party/blink/web_tests/css3/flexbox
and into the WPT-specific directory, adding links to the relevant
specs and a test assertion describing its purpose.

Bug: 1063749
Change-Id: I1644b62216c9ada36516027caf4f3166f5735fc2

Reviewed-on: https://chromium-review.googlesource.com/2117913
WPT-Export-Revision: cbd6ba0264074e14a7753f6a5febc38ce978d0f4",3618133
257,2020-03-25T00:47:40Z,2020-03-27T07:37:36Z,,,"Aspect-ratio items with min-main:auto and a definite cross size use
cross size * ratio as an input to the min-main:auto algorithm. FlexNG
previously ignored that part of the spec.

Bug: 845235,1064283
Change-Id: I22198e1255c70797aed83c045f76b8e23c029b3e
Reviewed-on: https://chromium-review.googlesource.com/2119174
WPT-Export-Revision: 0bcb738c6d5164df028b9ff58477872444ee2c9b",3618133
258,2020-03-24T20:53:06Z,2020-03-25T21:16:32Z,,,"Relevant spec: https://w3c.github.io/uievents/#event-flow-activation

This is targeting [a Firefox bug](https://bugzilla.mozilla.org/show_bug.cgi?id=1220143) where when forwarding focus on space and enter keydown events, a unexpected click event is triggered on the forward target.

Here's a demo page for the buggy behavior: https://html-is.glitch.me/firefox-space-focus.html

Since this is my first WPT pull request, I want to keep it small– this test case only cover the Space key case where Firefox is the outlier. 

There might be a better place for this test file. I'd be happy to take any suggestions and make changes accordingly.

Many thanks to @hexcles & @jgraham for helping me in IRC.

---

Reference re `\ue00d`: https://bugzilla.mozilla.org/show_bug.cgi?id=1417955

",3618133
259,2020-03-24T19:31:20Z,2020-03-24T19:31:30Z,,,"This CL isolates activation-gated APIs from the tests because those API
behavior may depend on other browser-defined things.

Four specific changes done here are:
- Isolate a basic activation test as non-tentative.
- Replace an existing wpt with a chained setTimeout test.
- Isolate tests for same/cross-origin consumption behavior.
- Clarify tests for same/cross-origin navigation behavior.

Change-Id: I0a7e6d87fc8ed088cd162bbaa8584e8ea7710239
Reviewed-on: https://chromium-review.googlesource.com/2110685
WPT-Export-Revision: 933f2b7a9d8c3f8ef2ba69712faaee8abf8435f1",3618133
260,2020-03-24T16:13:47Z,2020-03-26T02:59:51Z,,,"This CL adds upgrade-insecure-request wpts to test static-import from
dedicated workers and shared workers.

The test scheme is implemented in the previous CL:
https://chromium-review.googlesource.com/c/chromium/src/+/2102036.
This CL only removes 'worker-import' and 'sharedworker-import' from
the excluded subresource list in spec.src.json and auto-generates tests.

Bug: 989399
Change-Id: I3b799d7743306a8b5fca0d7292360a88d9b36ded
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/2117591
Reviewed-by: Hiroki Nakagawa \<nhiroki@chromium.org>
Reviewed-by: Hiroshige Hayashizaki \<hiroshige@chromium.org>
Commit-Queue: Eriko Kurimoto \<elkurin@google.com>
Cr-Commit-Position: refs/heads/master@{#753164}

",3618133
261,2020-03-24T16:12:55Z,2020-03-25T04:50:56Z,,,"This CL adds referrer-policy wpts to test static-import from dedicated
workers and shared workers.

The test scheme for static-import is implemented in the previous CL:
https://chromium-review.googlesource.com/c/chromium/src/+/2102036.
This CL removes 'worker-import' and 'sharedworker-import' from the
excluded subresource list in spec.src.json and changes test-case.sub.js
to modify the expectation.

Change-Id: I955d85201c102bc166778df49b6f22452fb28f88

Reviewed-on: https://chromium-review.googlesource.com/2117846
WPT-Export-Revision: f87c42fabfbdcf45cb43a0c7b9089a4680ba8e70",3618133
262,2020-03-23T22:27:57Z,2020-03-27T07:51:51Z,,,"Bug: 1042415
Change-Id: I771434df7a4dbcf8b26ea0bceded1f3e7b136ada
Reviewed-on: https://chromium-review.googlesource.com/2116833
WPT-Export-Revision: 5f6ab96e0d377844e2a41ed8e403cc24091516dd",3618133
263,2020-03-23T19:44:36Z,2020-03-26T08:05:17Z,,,"[1] Fix some TypeErrors. Calling get API in reuqest.headers
(<class wptserve.request.RequestHeaders>) returns binary string values.
In python 2, bytes is alias to str type. In Python 3, str type is
different from bytes. This change uses utf-8 encoding for the request.headers
values using for Py2 and Py3 compability.
[2] Add python 3 support for accessing headers content in raw_headers
(xhr/resources/inspect-headers.py). Type of raw_headers is class
HTTPMessage. In Python 2, HTTPMessage derives from mimetools.Message while
in Python 3, it derives from email.message.Message. Interfaces from
mimetools.Message and email.message.Message are very different.
In Python 3, HTTPMessage doesn't have 'headers"" attribute or equivalent.
[ref: https://bugs.python.org/issue4773]
[3] Fix some imports for python2 and python 3 compatibility",3618133
264,2020-03-23T18:27:53Z,2020-03-23T19:16:02Z,,,"The related code was changed in this CL:
https://chromium-review.googlesource.com/c/chromium/src/+/1698667.

The crash reported in this bug was caused by missing a null check
in the above CL. This CL adds the null check.

Bug: 1063652
Change-Id: I9ec52b320090d36b523b6fe2eac5e363a8f76005
Reviewed-on: https://chromium-review.googlesource.com/2114583
WPT-Export-Revision: a66f3cec597a8605aded24e11c20bb2062411a49",3618133
265,2020-03-23T15:20:44Z,2020-03-23T15:20:54Z,,,"On Chromium CI, this occasionally dips above 6s and times out. Looks
like its just a bit slow, not hanging entirely, so giving it more time
to finish seems ok.

Bug: 1033652
Change-Id: I1ea1ee51b19500aa99bbb318a8124abfce7abef3
Reviewed-on: https://chromium-review.googlesource.com/2115517
WPT-Export-Revision: ecdee613e90b0feccbaae1f6ed53745940d15067",3618133
266,2020-03-23T09:32:00Z,2020-03-23T11:04:41Z,,,"Fixes this: `DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working`",3618133
267,2020-03-21T09:21:11Z,2020-03-21T11:16:12Z,,,"This CL adds some documentation to, and cleans up, two lazy load image
tests that deal with image-in-iframe scenarios. It also makes the iframe
files more deterministic by delaying the image load in the iframe so
that it is guaranteed to finish loading after the iframe's window's load
event would fire, in a correct implementation. This makes testing the
loading-lazy load event semantics more rigorous.

Change-Id: I55edf29eba33196ab8d95bb6418580a0691cfe1d
Reviewed-on: https://chromium-review.googlesource.com/2103990
WPT-Export-Revision: 9cb301b772085c9e28a434c9b8ca1f9ce0c1c73e",3618133
268,2020-03-21T04:51:47Z,2020-03-21T04:52:05Z,,,"copied from Bugzilla to let these run through CI here, though they should land via there",3618133
269,2020-03-21T00:33:44Z,2020-03-21T00:33:54Z,,,"Non-lazy images don't show this icon. It's incorrect to show such
an icon just because an image is loading. In addition, it messes
up the intrinsic sizing heuristics for aspect ratio.

Both lazy and non-lazy images still show a broken image icon when
images fail to load via HTTP failure.

Bug: 997606, 1045745

Change-Id: I5dc6bac50a1c43395057e37547864e9e3fc13b6d

Reviewed-on: https://chromium-review.googlesource.com/2109330
WPT-Export-Revision: b5435a3afbd1d51e834f936954233808177d858e",3618133
270,2020-03-21T00:01:42Z,2020-03-26T17:01:38Z,,,"The CSSWG resolved [1] that ""@import doesn't parse in constructable
stylesheets and as a result throw syntax errors"". We have a comment [2]
requesting clarification, but the working assumption is:

- calling replace() with text that includes @import will ignore the
  @import, and issue a console warning.
- calling replaceSync() with text that includes @import will ignore
  the @import, and issue a console warning.
- calling insertRule() on a constructed stylesheet with an @import
  rule will throw a SyntaxError. (no change here)

*Prior* to this CL, the behavior of Chromium was:
- calling replace() with text that includes @import would work. The
  returned Promise would resolve once all @imports were loaded. Any
  invalid @import rules would cause a NetworkError to be thrown.
- calling replaceSync() with text that includes @import would throw
  a ""NotAllowed"" exception.
- calling insertRule() on a constructed stylesheet with an @import
  rule will throw a SyntaxError.

The Intent to Remove for this change is at [3].

[1] https://github.com/WICG/construct-stylesheets/issues/119#issuecomment-597733392
[2] https://github.com/WICG/construct-stylesheets/issues/119#issuecomment-600410089
[3] https://groups.google.com/a/chromium.org/g/blink-dev/c/RKG8oxp22RY/m/fdFnG1rGCgAJ

Bug: 1055943
Change-Id: I0a8444289b137b4c2880be5231696bb526331107
Reviewed-on: https://chromium-review.googlesource.com/2106996
WPT-Export-Revision: 868ccb2b7a7f2ddde3684e5b55d6aa61b1461220",3618133
271,2020-03-20T14:17:07Z,2020-03-20T14:17:18Z,,,"Remove the wpt test.
File affected:
external/wpt/pointerevents/pointerevent_lostpointercapture_for_disconnected_node_in_shadow_dom.html

Bug: 1063163
Change-Id: I07e68b1e43f2578e7d2265e13b9f6b33e373e83c
Reviewed-on: https://chromium-review.googlesource.com/2112521
WPT-Export-Revision: 476d8a4ea189c49b14fb440539b6679b318a312f",3618133
272,2020-03-19T19:59:24Z,2020-03-19T19:59:34Z,,,"Implement basic calculation taking edge and threshold into account
Add edge to IDL

Change-Id: I38caf32e775e6827a9b7d8763bb7cf9c86fc29c3
Reviewed-on: https://chromium-review.googlesource.com/2100887
WPT-Export-Revision: 60dd242370662d7da399c399411b5d5696546543",3618133
273,2020-03-19T14:50:00Z,2020-03-20T19:17:45Z,,,"Most image policies can report multiple violations for a single cause(same image not following the rule) during layout, e.g. An unoptimized-lossless-image's bpp(byte per pixel) value can change multiple times if the image is being scaled in an animation.

To avoid unnecessary duplicated reports being generated. This CL adds Hash method for DocumentPolicyViolationReportBody to uniquely identify each report and avoid the duplication by remembering these hash values in ExecutionContext and filter out reports that are in record.

Some exiting web tests rely on the fact that multiple copies of same report generated in same document. This CL also worked around that to either help make reports generated unique or isolate test cases to different documents(iframes).

Bug: 924684
Change-Id: I230e32801c77980573b5ed55064d46f94aed3060
Reviewed-on: https://chromium-review.googlesource.com/2078837
WPT-Export-Revision: 3a75e83256812efa844b80481a2a86869d6b99fc",3618133
274,2020-03-18T20:45:23Z,2020-03-18T20:45:32Z,,,"With the addition of ScrollTimeline phase and the removal of
ScrollTimeline.fill, AnimationEffects now need to account for
ScrollTimeline.phase when they are calculating their own phase.

Bug: 1046833
Change-Id: I6a13ab10105d81b2a0b19d205141d2bd89886a61
Reviewed-on: https://chromium-review.googlesource.com/2092188
WPT-Export-Revision: 202fdd86025d41761d8a36a06a924f9624a421d7",3618133
275,2020-03-18T01:38:55Z,2020-03-27T00:30:15Z,,,"Verify sticky position while composition happens. Catch when the main
thread position is different from the sticky position of ref tests.

Bug: 1059272

Change-Id: I3ec4fa391b42ff3783b2e89347a4bd10ab81faaf
Reviewed-on: https://chromium-review.googlesource.com/2105754
WPT-Export-Revision: 551f489a153b69c1239c0eb8e374d6f1f493db98",3618133
276,2020-03-17T20:47:00Z,2020-03-17T21:43:34Z,,,"Fixed: 1051170
Change-Id: I50cc48e9e6acaa3e8b8d835be048ebeff041dfb1
Reviewed-on: https://chromium-review.googlesource.com/2106568
WPT-Export-Revision: 6448a599948041bee8fe547b980435a0b22d5112",3618133
277,2020-03-17T16:52:59Z,2020-03-19T15:39:57Z,,,"Make URLs used to construct workers TrustedScriptURLs.

Minor rework of how to get the execution context in the generated bindings,
because the old method assumed presence of an ""impl"" object, whichfor is
only created at the end in case of constructors. So insetead, implement a
method with which we can always obtain the execution context from the
v8::FunctionCallbackInfo.

Bug: 1059684
Change-Id: I00e3e52cad5c3736105289a9fda1eeca15fd6f62
Reviewed-on: https://chromium-review.googlesource.com/2105339
WPT-Export-Revision: b274724ec0a81d2acc65f422e0b2cfd5ca638563",3618133
278,2020-03-17T09:50:15Z,2020-03-17T09:50:25Z,,,"In the fetch event handler, the client of the fetch event for
simple.html is undefined as this request is made by
fetch-event-handled.https.html which is not controlled.

This change makes sure messages are only sent to valid clients.",3618133
279,2020-03-17T08:40:04Z,2020-03-17T14:41:31Z,,,"Add test to verify that frame removal triggers revalidation
cancellation.",3618133
280,2020-03-16T22:32:41Z,2020-03-20T16:28:01Z,,,"Previous CLs added an Origin-Policy header parser. We now use it, in
the most basic way, by parsing the header and causing a network error
if the header is unparsable.

Fixed: 1042036
Change-Id: Ib3e131387c7b724fef2df03b8d8696c04b826121
Reviewed-on: https://chromium-review.googlesource.com/2106417
WPT-Export-Revision: 2c03894f570032c3e6aa5cd15c92293e5acff60e",3618133
281,2020-03-16T21:35:06Z,2020-03-20T21:54:59Z,,,"This CL adds a new method to Document, hasTrustToken(\<issuer>),
returning whether the user has any trust tokens
(https://github.com/wicg/trust-token-api) for the token issuer origin
given by |issuer|. This works by querying a new Mojo interface provided
by the network context via BrowserInterfaceBinders.

More specifically, the method first checks if it can associate the
calling top-level context (in the sense of
TrustTokenStore::SetAssociation) with |issuer| and, if not, fails. For
this reason, the Mojo handle is bound by trusted code to the document's
top-level context.

New code:
- //content, NetworkContext: boilerplate to bind the Mojo interface
- blink::Document: add a new mojo remote and bind it; pack API calls
into mojom::HasTrustTokenAnswerer requests and unpack responses
- Blink scheduling: boilerplate to add a new TaskType (necessary in
order to use HeapMojoRemote)

Test: unit tests check that the logic in the network service behaves
correctly; WPTs exercise the interface end to end.
Bug: 1061116
Change-Id: I0f7835cac15b5af3582bb560e116511c601f3b36
Reviewed-on: https://chromium-review.googlesource.com/2103082
WPT-Export-Revision: f50f8499429ecbb1dc8fa110f803217152625fb2",3618133
282,2020-03-16T14:27:37Z,2020-03-16T14:27:47Z,,,"This CL migrates LayoutAnimations from feature policy to document policy.

Following web tests are being migrated:
- external/wpt/feature-policy/experimental-features/layout-animations-disabled-tentative.html
- external/wpt/feature-policy/experimental-features/layout-animations-disabled-violation-report-js-tentative.html
- external/wpt/feature-policy/experimental-features/layout-animations-disabled-violation-report-keyframes-tentative.html
- external/wpt/feature-policy/experimental-features/layout-animations-enabled-tentative.html
- http/tests/feature-policy/layout-animations-disabled-by-policy.php

Bug: 993790
Change-Id: I8244c0b997ed9a8f66290bdd8af93b6e40f21e00

Reviewed-on: https://chromium-review.googlesource.com/2102768
WPT-Export-Revision: c574337db31a8f61d041d5ed2e269c65aa6fb86b",3618133
283,2020-03-16T08:38:31Z,2020-03-16T08:38:41Z,,,"Bug: webrtc:8329
Change-Id: Id3677d42e496a9518e3e7462b1d8d43c1d00a978
Reviewed-on: https://chromium-review.googlesource.com/2098706
WPT-Export-Revision: 74ec0f9d4066c7850cfa7c2ae75d9cdfd8309d9f",3618133
284,2020-03-14T15:44:45Z,2020-03-14T15:55:55Z,,,"This CL removes |ImageLoader::Task::request_url_| in favor of lazily
parsing the image request's absolute URL when ImageLoader::Task is run.

Currently ImageLoader::Task stores a KURL |request_url_|, which is a
snapshot of the image's absolute URL, parsed relative to the image
element's node document at the time ImageLoader::Task is queued.
We shouldn't have to store a snapshot of the parsed URL, because the
source URL at the time an ImageLoader::Task is run is the same as when
the task is queued.

The reason we stored a snapshot of the parsed URL is because what *can*
change in between when an ImageLoader::Task is queued and run, is the
document's base URL, via a `\<base>` element. In https://crbug.com/569760
a CL was landed that takes this snapshot, so that if a `\<base>` element
was dynamically-inserted before the ImageLoader::Task was run, the URL
would be unaffected by the addition of the `\<base>`. However, the spec
is very clear that the parsing of an image request's URL [1] happens
after the microtask is run, meaning our snapshot is unnecessary, and
incorrect.

This CL:
 - Removes the snapshot
 - Fixes the associated test
 - Exports the test to external/wpt so other impls can benefit
 - Adds documentation noting that ImageLoader::Task::referrer_policy_ is
   going away soon

[1]: https://html.spec.whatwg.org/multipage/images.html#updating-the-image-data:parse-a-url-2

Bug: 569760,1061685
Change-Id: I8d9e3dbefd27a26626bb930acc809196753c7506
Reviewed-on: https://chromium-review.googlesource.com/2103987
WPT-Export-Revision: f6db43a4777a9f095293c395f5746971d359e136",3618133
285,2020-03-14T15:22:27Z,2020-03-27T06:39:39Z,,,"This PR was automatically created by a bot.

Before merging, please check that any tests that depend on the updated IDL files still work.

If additional changes are needed, please manually create another PR based on this one.

See the [README](https://github.com/web-platform-tests/wpt/blob/master/interfaces/README.md) for how the IDL files in this directory are used.

<hr>

Source: https://github.com/tidoust/reffy-reports/blob/d6b3cbf/ed/idl/svg-markers.idl
Build: https://travis-ci.org/tidoust/reffy-reports/builds/662422484

",3618133
286,2020-03-14T12:37:42Z,2020-03-27T06:39:28Z,,,"This PR was automatically created by a bot.

Before merging, please check that any tests that depend on the updated IDL files still work.

If additional changes are needed, please manually create another PR based on this one.

See the [README](https://github.com/web-platform-tests/wpt/blob/master/interfaces/README.md) for how the IDL files in this directory are used.

<hr>

Source: https://github.com/tidoust/reffy-reports/blob/465e47a/ed/idl/dom.idl
Build: https://travis-ci.org/tidoust/reffy-reports/builds/662380757

",3618133
287,2020-03-14T02:05:05Z,2020-03-16T19:52:22Z,,,"Prior to this CL, the ordering of the manually assigned nodes is not
preserved. Nodes were assigned in tree-order. In addition, assignment
is not absolute. A slotable node can be assign to multiple slots, and
where it appears is when the assigned slot first appear in a tree-order
traversal, not the last slot the node is assigned to.

This CL does two things. One, the order of manually assigned node is
preserved. Two, assignment is absolute. The implementation uses a
HeapHashMap, candidate_assigned_slot_map_, to keep track of
assignment node -> slot. It uses this map during node assignment to
find if another assigned slot exists. When found, the node is
removed from the previously assigned slot.

Preserving the ordering of manually assigned nodes is done in
HTMLSlotElement::UpdateManuallyAssignedNodesOrdering(). This is called
at the end of SlotAssignment::RecalcAssignment(). RecalcAssignment()
walks the ShadowHost's children in tree-order, so the assigned node
could be out of order from how these nodes were assigned.  I thought
about making a separate function for manually assigned nodes, looping
though assigned nodes instead. But I decided against it at this point
due to the complexity of the recalc function.

For Reference: point 1 in this comment is addressed by this CL.
https://github.com/whatwg/html/issues/3534#issuecomment-537802687


Bug:869308
Change-Id: Idc45cb593313b00f13cd5f29df8972bfe246ecce
Reviewed-on: https://chromium-review.googlesource.com/2103403
WPT-Export-Revision: ea011403592ac81659b37cfd703a07c99653216c",3618133
288,2020-03-13T19:11:23Z,2020-03-13T19:22:12Z,,,"This PR is a fix for [Issue 22205](https://github.com/web-platform-tests/wpt/issues/22205)

background-size-007.html
background-size-010.html
../reference/ref-nothing-below.xht",3618133
289,2020-03-13T07:34:03Z,2020-03-13T08:25:36Z,,,Fixes https://github.com/web-platform-tests/wpt/issues/15089,3618133
290,2020-03-13T00:29:41Z,2020-03-13T00:29:49Z,,,"Port the code serializing transform lists from ComputedStylePropertyMap
to ComputedStyleUtils and fix some minor bugs.

Change ComputedTransform to return a transformlist (instead of none)
when there is no LayoutObject given. In this case CSSValueFromComputedStyle
is supposed to return the computed style (the transform list) instead of
the resolved style (the resulting matrix).

Add ComputedTransformList function which takesa layout object but
only uses it to resolve thunks (deferred computation) resulting from
matrix interpolation of box-size-dependent values. Make
ComputedStylePropertyMap use this function to return transform lists.

This is part of a cleanup of CSSValueFromComputedStyle in preparation
for using it in the CSS transition lifecycle (which requires computed
values, not the resolved ones getComputedStyle returns if a layout
object is available).

Bug: 1057307
Change-Id: I064c2bc04236dde5b529afe8bae150654f91c3b3
Reviewed-on: https://chromium-review.googlesource.com/2097029
WPT-Export-Revision: 8f574501f06c1b7e6bc49c991f5c587b12fde9e7",3618133
291,2020-03-12T16:14:50Z,2020-03-12T16:15:02Z,,,"This reverts commit 016fe21fd1698bc9aed3ad7c1f1cb16609d239cc.

Reason for revert: blink_web_tests failing on Mac10.14 Tests: https://ci.chromium.org/p/chromium/builders/ci/Mac10.14%20Tests/2403 and  Win7 Tests (1): https://ci.chromium.org/p/chromium/builders/ci/Win7%20Tests%20%281%29/100679

Original change's description:
> [COEP] CacheStorage > reporting API > WPT tests
> 
> When a response is blocked by CORP because of the COEP header, check the
> reporting API is worker.
> 
> This patch adds 4x2=8 new WPT tests.
> 
> For every 4 context:
> - Document
> - SharedWorker
> - DedicatedWorker
> - ServiceWorker
> 
> For the 2 headers:
> - Cross-Origin-Embedder-Policy
> - Cross-Origin-Embedder-Policy-Report-Only
> 
> Bug: 1059727, 1031542, 887967
> Change-Id: I797e36d0cfc982862e85dbc9a49c661fee46bf85
> Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/2096687
> Commit-Queue: Arthur Sonzogni \<arthursonzogni@chromium.org>
> Reviewed-by: Yutaka Hirano \<yhirano@chromium.org>
> Cr-Commit-Position: refs/heads/master@{#749603}

TBR=yhirano@chromium.org,arthursonzogni@chromium.org

Change-Id: I1392e9bc2256c771e94e9d3325e9ab29da809501
No-Presubmit: true
No-Tree-Checks: true
No-Try: true
Bug: 1059727, 1031542, 887967

Reviewed-on: https://chromium-review.googlesource.com/2100710
WPT-Export-Revision: 9c23f7c153a5bb2e9eb97c3d1dc30bc6393026c5",3618133
292,2020-03-12T12:39:09Z,2020-03-27T06:39:40Z,,,"This PR was automatically created by a bot.

Before merging, please check that any tests that depend on the updated IDL files still work.

If additional changes are needed, please manually create another PR based on this one.

See the [README](https://github.com/web-platform-tests/wpt/blob/master/interfaces/README.md) for how the IDL files in this directory are used.

<hr>

Source: https://github.com/tidoust/reffy-reports/blob/b310bbe/ed/idl/web-transport.idl
Build: https://travis-ci.org/tidoust/reffy-reports/builds/661512682

",3618133
293,2020-03-12T07:16:45Z,2020-03-12T07:16:55Z,,,"Bug: 1060911
Change-Id: I28cf63aeaa45c8270a1653cc545bd5b1b7c2fdd4

Reviewed-on: https://chromium-review.googlesource.com/2100018
WPT-Export-Revision: b7b95c6e1516976b981af464e246fe93a368e14c",3618133
294,2020-03-12T05:13:36Z,2020-03-12T05:47:03Z,,,"This CL adds 2 tests:
- Test error event should be fired if nfc permission is denied during
  nfc reading
- Test write operation rejects if deny nfc permission when write operation
  is pending

Bug: 520391
Change-Id: Ife15c7f7f56d54da3368086527e89ea825eb8629

Reviewed-on: https://chromium-review.googlesource.com/2099766
WPT-Export-Revision: 326826ea5d09c7eafe3a7151dcb555b89b65bcb7",3618133
295,2020-03-12T02:35:03Z,2020-03-12T02:35:12Z,,,"Fix CSSValueFromComputedStyle implementations for border-*-raduis and
backgroind-size so that the generated CSSValues are valid and can
round-trip back into a style attribute.

Split the implementation for line-height into a general one returning
the computed value and one for getComputedStyle returning the used value.
Unlike with all other properties, getComputedStyle returns the used
value even without a LayoutObject, so the usual convention of passing
layout_object = nullptr in to get the computed value (which other
callers of CSSValueFromComputedStyle rely on) does not work for a
single implementation.

This is part of a cleanup of CSSValueFromComputedStyle in preparation
for using it in the CSS transition lifecycle (which requires computed
values, not the resolved ones getComputedStyle returns if a layout
object is available).

Change-Id: Ia52ce4008f79669d898543f3b8a347f53455495a
Reviewed-on: https://chromium-review.googlesource.com/2099241
WPT-Export-Revision: 116685585535d128cbd7ba6162f4c4d247610872",3618133
296,2020-03-12T01:03:48Z,2020-03-12T01:38:51Z,,,"Those 6 tests are a followup to
[[css-backgrounds-3] background-size with ""<length-percentage> auto"" and gradient image is not interoperably implemented](https://github.com/w3c/csswg-drafts/issues/2675)

background-size-041.html
background-size-042.html
background-size-043.html
background-size-044.html
background-size-045.html
background-size-046.html
reference/ref-filled-green-100px-square.xht
support/green-intrinsic-none.svg
",3618133
297,2020-03-11T20:27:13Z,2020-03-19T19:36:12Z,,,"Implement basic element-based IDL and processing.
- Change existing start and end offset to accept a dictionary
  at the moment it only has target and threshold but no
  edge or rootMargin.
- Add ScrollTimelineOffset that can handle both the existing string
  or the new dictionary based offset.
- Update ScrollTimeline to use new the offset class.
- Implement basic validation logic for new element-based offset.
- Add test verify correct parsing and validation on construction.


This is the first patch in a series. Follow up patch [1] would use this
new offset input to produce the resolved offset.

[1] https://chromium-review.googlesource.com/c/chromium/src/+/2100887


Test: wpt/scroll-animations/constructor.html
Bug: 1023375
Change-Id: Ie14fb2127d089a39379c498b4b15c86e6b2dd272
Reviewed-on: https://chromium-review.googlesource.com/2070673
WPT-Export-Revision: d95c5beab8e06b140408ef3fa708032c5f66eb01",3618133
298,2020-03-11T13:29:21Z,2020-03-11T13:29:32Z,,,"fix

Change-Id: Ia70f377735b6ed019c71154c1dead7630fc55b55

Reviewed-on: https://chromium-review.googlesource.com/2097878
WPT-Export-Revision: 57b6d7988265d80dd45ed97441e5c1e9030c2a5f",3618133
299,2020-03-11T07:16:01Z,2020-03-11T09:34:18Z,,,"Bug: 1052764
Change-Id: I5825eb2946dc00f9e042b55e602fd786dc2d1adc
Reviewed-on: https://chromium-review.googlesource.com/2097800
WPT-Export-Revision: 0d358d974ae1c18d81a45b8e79d191b3c93042be",3618133
300,2020-03-10T19:59:54Z,2020-03-10T20:00:05Z,,,"Two tests for the ""contents"" value of the `content` property.  One testing this in isolation, another when combined with a few other features of generated content and lists in a realistic use-case (which is something that's been requested in the spec, see https://drafts.csswg.org/css-content-3/#issue-bfc60bbc)
",3618133
301,2020-03-10T18:38:22Z,2020-03-27T06:39:34Z,,,"This PR was automatically created by a bot.

Before merging, please check that any tests that depend on the updated IDL files still work.

If additional changes are needed, please manually create another PR based on this one.

See the [README](https://github.com/web-platform-tests/wpt/blob/master/interfaces/README.md) for how the IDL files in this directory are used.

<hr>

Source: https://github.com/tidoust/reffy-reports/blob/5a18b76/ed/idl/native-file-system.idl
Build: https://travis-ci.org/tidoust/reffy-reports/builds/666007015

",3618133
302,2020-03-10T16:02:05Z,2020-03-10T16:02:15Z,,,"Bug: TDB

Change-Id: I00940f45a09a4d4c26fcc2e919ffb71056578a03
Reviewed-on: https://chromium-review.googlesource.com/2094314
WPT-Export-Revision: 113cbf9e36a3a961b438d1702fab828057b1873f",3618133
303,2020-03-10T12:40:29Z,2020-03-27T06:39:33Z,,,"This PR was automatically created by a bot.

Before merging, please check that any tests that depend on the updated IDL files still work.

If additional changes are needed, please manually create another PR based on this one.

See the [README](https://github.com/web-platform-tests/wpt/blob/master/interfaces/README.md) for how the IDL files in this directory are used.

<hr>

Source: https://github.com/tidoust/reffy-reports/blob/e7eb157/ed/idl/hit-test.idl
Build: https://travis-ci.org/tidoust/reffy-reports/builds/660604359

",3618133
304,2020-03-09T18:04:20Z,2020-03-09T18:36:48Z,,,"Use assert_precondition to check if the browser supports both input element types before trying to change the state from one to other.

For example, WebKitGTK and Safari doesn't support several of the input types tested here (like those related to dates). The output of the test its clearer if the precondition its checked before.",3618133
305,2020-03-06T19:11:27Z,2020-03-06T19:11:37Z,,,"This should not be submitted until after an intent to prototype is filed

Bug: 1055002
Change-Id: I497099320236f5f9de42c5f655eb28c5b4fd9272
Reviewed-on: https://chromium-review.googlesource.com/2068873
WPT-Export-Revision: 5329e0f2c9d1b7741305ee002b7ba312365f6891",3618133
306,2020-03-06T10:12:35Z,2020-03-06T10:12:35Z,,,TODO: rename what remains in interfaces-*,3618133
307,2020-03-06T09:48:54Z,2020-03-16T07:05:52Z,,,"The implementation is according to
https://w3c.github.io/webrtc-extensions/#dom-rtcrtpcontributingsource-capturetimestamp

An intent as be filed on blink-dev, see
https://groups.google.com/a/chromium.org/g/blink-dev/c/SRfE60yI0uc.

Bug: 1056230
Change-Id: Icf1e08092486bb542f40cc4833cb025dc67929f0

Reviewed-on: https://chromium-review.googlesource.com/2072161
WPT-Export-Revision: a1aa748e1c61e2595b881cd53cb85b7bce15f342",3618133
308,2020-03-05T21:04:11Z,2020-03-26T17:01:03Z,,,"The [Badging API](https://wicg.github.io/badging/) is a new API
allowing the setting of application/document badges. This change
converts the Badging API web tests into Web Platform Tests.

This change adds a no-op MockBadgeService to the content_shell.
This is necessary because the RenderProcessHostImpl will terminate
the render process if unknown Mojo messages are received.

Bug: 1051684
Change-Id: I61e29b8f197a754fea489ebb2d0dcd41484f6cf4
Reviewed-on: https://chromium-review.googlesource.com/2088297
WPT-Export-Revision: eb84ef58fd614fdd6d23bd57690ed8ea4c073918",3618133
309,2020-03-05T19:45:31Z,2020-03-05T21:25:19Z,,,"WIP
Bug:919909

Change-Id: I6a40d0ad00dc4e4e45b1428d6f0a67db31e72d21

Reviewed-on: https://chromium-review.googlesource.com/2090353
WPT-Export-Revision: 4af91c94d894b52b72452ad89013cc211e7ccd17",3618133
310,2020-03-04T22:11:38Z,2020-03-04T22:11:48Z,,,"In addition to making BiquadFilterNode AudioParams apply the input to
the param, we also needed to fix an issue in
CalculateSampleAccurateValues when the param is k-rate.  We would sum
in all the values for the input instead of just taking one.

Manually ran the new test case with Chrome stable and all the tests fail
as expected.

Bug: 1015760
Test: k-rate-biquad-connections.html

Change-Id: I412f9567909d8dd6d4cf00036138b47a454c431c

Reviewed-on: https://chromium-review.googlesource.com/2083224
WPT-Export-Revision: f47819d9b7fa1b5aabaf761945b3517940ba564c",3618133
311,2020-03-04T18:03:03Z,2020-03-04T18:03:13Z,,,"This reverts commit d7032c0f7f3d6f59d57e16e2589ce2ecc5b88532.

WIP: I want to see the results of this on TaskCluster; please don't review yet.",3618133
312,2020-03-03T19:14:24Z,2020-03-11T19:31:13Z,,,"Cue-related events (enter, exit, cuechange) are fired up to 250ms late,
and there is a similar latency in their display which is quite
noticeable.

The underlying problem is that we only update cues alongside the
`timeupdate` event, which is fixed at 4 Hz.

My solution is to add a separate timer to CueTimeline
(`CueTimeline::cue_event_timer_`) which is given a timeout for the
next cue event based on the current playback position and rate. This
allows for significantly more precise cue timing accuracy without a
significant performance penalty.

Additionally, several web tests were written with the expectation that
the 'time marches on' algorithm is run before video playback begins
(ie, upon loading text track cues). This behavior is not in accordance
with the spec (as outlined in crbug/1050767), so this CL fixes those
expectations and adds a new test to prevent regressing.

Bug: 576310, 1050767
Change-Id: I675f5f030a68ba9cee10e12b3e79a9b174048193
Reviewed-on: https://chromium-review.googlesource.com/2008079
WPT-Export-Revision: 09b790ac60ff8dd92b76f5822a860eb0746cee2e",3618133
313,2020-03-03T18:10:19Z,2020-03-12T20:06:02Z,,,"In particular, the browser needs to parse accept-ch there since
the renderer doesn't see the intermediate steps until after everything
is fetched, and new client hints may be requested in the middle of the
chain.

This is also likely the first step towards moving more of handling
of accept-ch to browser (which will simplify some things and fix
some bugs).

Bug: 1050726
Change-Id: Ie02d7492c02b75034b36af30e489ebbb430d6a1b
Reviewed-on: https://chromium-review.googlesource.com/2085114
WPT-Export-Revision: 2b82388bc049da06fd951540d259338b780b8088",3618133
314,2020-03-03T18:09:51Z,2020-03-03T22:17:55Z,,,"This CL fixes one of discrepancies between Chromium code and the spec at
https://url.spec.whatwg.org.  After this CL, DoCanonicalizeFileURL will
check if the hostname equals ""localhost"", and will reset the hostname to
an empty string in that case (as required by the spec).

For comparing the hostname against the ""localhost"" literal,
DoCanonicalizeFileURL reuses CompareSchemeComponent from
//url/url_util_internal.h (after renaming it to LowerCaseEqualsASCII, to
make the helper's name more generic and not specific to URL schemes; the
name has been picked for consistency with a similar helper in //base).

The CL adds a few extra test cases for dealing with the hostname in file:
URLs.  The new test cases are added to the following test suites:
- URLCanonTest.CanonicalizeFileURL in //url/url_canon_unittest.cc
- blink/web_tests/external/wpt/url/resources/urltestdata.json

The rest of the CL adjusts test expectations of other/existing tests, to
follow the change in behavior.  SCOPED_TRACE is added in a few places to
aid in debugging tests that iterate over multiple test cases.

Change-Id: I943e437a56bed886de03ee1266dcf200b0b12521
Bug: 1058053
Reviewed-on: https://chromium-review.googlesource.com/2082862
WPT-Export-Revision: 862de199e0f9d6fe798fba4a4cac795ef8cd0b0a",3618133
315,2020-03-03T06:45:22Z,2020-03-24T13:53:30Z,,,"Hi! 
I noticed that the tests in this file used variables that are not scoped to individual tests, and that these variables are modified outside tests. eg:

`var testElement = document.createElement(""testElement"");`
`testElement.contentEditable=""true"";`

I refactored the tests to have variables scoped to individual tests, thus making tests atomic and not dependent on the order in which they are run.

I also ran the file through `prettier` to format it.

cc @marcoscaceres - thank you for your help!",3618133
316,2020-03-02T21:24:16Z,2020-03-02T21:24:26Z,,,"Differential Revision: https://phabricator.services.mozilla.com/D64851

bugzilla-url: https://bugzilla.mozilla.org/show_bug.cgi?id=1618312
gecko-commit: ce295f8ded7e88ef7afc398162888b1626076180
gecko-integration-branch: autoland
gecko-reviewers: dholbert",3618133
317,2020-03-02T21:03:47Z,2020-03-02T21:03:55Z,,,"Change-Id: I2fc0f1d3034da37f3a88be73c9067f7ea11b3018
Reviewed-on: https://chromium-review.googlesource.com/2082085
WPT-Export-Revision: 15b4deb192e8c27554d28106ac5e9c59fba3d01a",3618133
318,2020-03-02T18:42:08Z,2020-03-09T16:15:10Z,,,"As I suspect it's busted in Chrome.

Change-Id: I1435bdc9dfcc6f6643ea737a135e8c0e07e7ecde
Reviewed-on: https://chromium-review.googlesource.com/2083671
WPT-Export-Revision: c92d214fd257d2e58fb89722ff9c17ecc0475b5b",3618133
319,2020-03-02T13:47:58Z,2020-03-03T15:07:31Z,,,"This doesn't enable anything really new, but does make it a little easier
to write tests for features that have different behaviour depending on the
use of host name vs ip address for the server",3618133
320,2020-03-02T11:06:36Z,2020-03-02T11:06:47Z,,,"According to the specification:
https://mikewest.github.io/corpp/#initialize-embedder-policy-for-global
The COEP of a DedicatedWorker is the COEP of its owner document.

This patch fix WPT test introduced in the previous patch:
https://chromium-review.googlesource.com/c/chromium/src/+/2080355

Bug: 1031542
Change-Id: I5152096f543569696b57fd664942d0a9923d6ad3
Reviewed-on: https://chromium-review.googlesource.com/2080355
WPT-Export-Revision: c5b1b6857a8a80981cd00e9bca793058a4df2756",3618133
321,2020-02-27T10:55:20Z,2020-02-27T10:55:38Z,,,"This CL modifies the test expectations in mixed-content WPTs.
Subresource fetching from data: URL shared workers should be always
allowed.

A strict mixed content checking flag is false by default, so we need to
set Content-Security-Policy: block-all-mixed-content to block mixed
content. However, data: URL scripts cannot take CSP headers, so a strict
mixed content checking flag is always false.
spec: https://w3c.github.io/webappsec-mixed-content/#strict-checking
Shared workers inside settings obey worker scripts' CSP headers, so
data: URL shared workers cannot block mixed-content even if the parent
document specifies Content-Security-Policy: block-all-mixed-content.

Bug: 1056161
Change-Id: I6369855a01b375f463e599d4c01d64ac0885b380
Reviewed-on: https://chromium-review.googlesource.com/2077698
WPT-Export-Revision: 6f8a5f76eb961bd76bc57bbb66b4f18a49d02253",3618133
322,2020-02-26T13:59:30Z,2020-02-26T13:59:41Z,,,"In python2, binary is basically an alias of str. In python3 the binary
data is different to a string. This change is to convert some binary data
to string type in order to be compatible for both Python 2 and Python 3.",3618133
323,2020-02-26T08:31:10Z,2020-02-26T08:31:19Z,,,"Add an automated test for the parsing of different
uses and declarations of the CSS @page rule, including
for @media rules and for properties of HTML elements.
Based on printing/page-rule-css-text.html which has
been moved to external/wpt/css/css-page and adapted.

Instead of skipping the whole wpt/css/css-page folder, skip
only the manual tests so we can add automated ones.

R=rego@igalia.com

Change-Id: I04d842306d370e8152c254b60f288b86c6855d8e

Reviewed-on: https://chromium-review.googlesource.com/2073439
WPT-Export-Revision: 6880e0ee699b2dcffa700ab3124c5d35da3a6334",3618133
324,2020-02-25T23:47:00Z,2020-03-10T18:22:21Z,,,"Update web-animations WPT tests to incorporate the error handling fix
https://github.com/w3c/csswg-drafts/pull/4829
Clean-up incorrect test cases which matched neither the old or new
error handling procedures.

Make KeyFrameEffect() reject the empty string as a pseudo-selector
as in the spec.

Delete two tests checking CSSPseudoElement identity (since we now return
strings instead) and replace with a tect checking the returned string
against a literal. These should have been removed in
https://chromium-review.googlesource.com/c/chromium/src/+/1894477
but were overlooked.

Change-Id: I5e9edc498bf3dad68ae683cd466ad41554cf10e4

Reviewed-on: https://chromium-review.googlesource.com/2073198
WPT-Export-Revision: 7a08ee9a826712e141be494c2f0c5c4451403fda",3618133
325,2020-02-25T19:34:20Z,2020-03-25T06:26:43Z,,,"6 min-content sizing tests and 2 max-content sizing tests:

white-space-intrinsic-size-013.html
white-space-intrinsic-size-014.html
white-space-intrinsic-size-015.html
white-space-intrinsic-size-016.html
white-space-intrinsic-size-017.html
white-space-intrinsic-size-018.html
white-space-intrinsic-size-019.html
white-space-intrinsic-size-020.html
reference/ref-filled-green-100px-square.xht",3618133
326,2020-02-25T17:01:07Z,2020-02-25T18:06:42Z,,,Add preconditions to the tests on the feature existing so that implementations without the feature can fail fast.,3618133
327,2020-02-24T18:40:54Z,2020-03-27T06:39:36Z,,,"This PR was automatically created by a bot.

Before merging, please check that any tests that depend on the updated IDL files still work.

If additional changes are needed, please manually create another PR based on this one.

See the [README](https://github.com/web-platform-tests/wpt/blob/master/interfaces/README.md) for how the IDL files in this directory are used.

<hr>

Source: https://github.com/tidoust/reffy-reports/blob/1849604/ed/idl/service-workers.idl
Build: https://travis-ci.org/tidoust/reffy-reports/builds/654545578

",3618133
328,2020-02-24T15:12:29Z,2020-02-25T02:20:23Z,,,"adds a third-party module for SDP parsing, mangling and generation to the
webrtc directory. This is going to be used for simulcast tests.

Checks in node_modules as well as a package.json and yarn lock files for
ease of updating. See
  https://github.com/web-platform-tests/rfcs/issues/46
for discussіon on the approach",3618133
329,2020-02-24T01:13:36Z,2020-02-25T23:47:38Z,,,"calc(0) is not valid syntax for a length but the test expects it to be. The test
is wrong.

(The resolved unit of calc(0) is `<number>`, not `<length>`.)

I noticed this because I recently enabled min() / max() in Gecko and that
made the relevant tests fail, but I spotted the calc(0) test tagged as failing.",3618133
330,2020-02-22T20:34:40Z,2020-02-23T15:52:33Z,,,"This PR is a followup to
https://github.com/web-platform-tests/wpt/pull/20800
and it has all the corrections requested and suggestions proposed in it.

active-selection-001-manual.html
active-selection-002-manual.html
active-selection-003-manual.html
active-selection-004-manual.html
active-selection-011.html
active-selection-011-ref.html
active-selection-012.html
active-selection-012-ref.html
active-selection-014.html
active-selection-014-ref.html
active-selection-015.html
active-selection-015-ref.html
active-selection-016.html
active-selection-016-ref.html
active-selection-017.html
active-selection-017-ref.html
active-selection-018.html
active-selection-019.html
active-selection-019-ref.html
support/select-custom.png
support/select-custom.cur

I added the SHOULD flag in tests active-selection-003-manual.html , active-selection-004-manual.html and
active-selection-014.html because of the following statement in the spec:
""
The UA **should** use the OS-default highlight colors for ::selection when neither color nor background-color has been specified by the author.
""
coming from § 3.4
https://www.w3.org/TR/css-pseudo-4/#highlight-cascade",3618133
331,2020-02-21T00:52:39Z,2020-02-21T06:27:09Z,,,"Code to snap the src_rect for background image painting was snapping
the rect to an integer under the assumption that properties modifying
the source size were used overwhelmingly by sprite maps. This caused
severe jitter when animating the background properties of a small
image scaled up to something large.

Change the snapping to only snap when the rectangle is already close
to integral. This requires adding a method to FloatRect.

The test is in WPT form but not the WPT directory because I can
see no way at all to make a ref test for this case given it relies
on image resize filtering that is highly implementation dependent.
In particular any code that snaps will have integral pixels with no
filtering. Hence to show sub-pixel src rect we need to have something
filtered thus introducing the platform-dependent filtering issue.

Bug: 925196
Change-Id: I1fcf16be6b453a5b411d59c91251fac06a153721

Reviewed-on: https://chromium-review.googlesource.com/2063916
WPT-Export-Revision: ce9c75aa8bd59a9228a6697972cfd45fc13d20d1",3618133
332,2020-02-20T15:24:30Z,2020-03-26T11:33:29Z,,,,3618133
333,2020-02-18T20:16:16Z,2020-02-22T21:08:58Z,,,"This is a followup of
https://github.com/web-platform-tests/wpt/pull/21449
with improvements or corrections to:
active-selection-051: active selection and invalid declaration block
active-selection-052: active selection and empty declaration block
active-selection-053: active selection and invalid color value
active-selection-054: active selection and invalid background-color value
active-selection-056: active selection and 3 `<br>` elements
",3618133
334,2020-02-18T19:47:13Z,2020-02-18T19:47:22Z,,,"2 tests testing a word with both a spelling error and a grammar error:
grammar-spelling-errors-001.html 
grammar-spelling-errors-001-ref.html 
grammar-spelling-errors-002.html  
grammar-spelling-errors-002-ref.html 

1 test testing ::selection highlight and 
styling of css property `caret-color`:
active-selection-005-manual.html",3618133
335,2020-02-18T14:12:31Z,2020-02-18T15:14:42Z,,,,3618133
336,2020-02-17T08:32:48Z,2020-02-17T15:04:06Z,,,"based on a more modern variant chrome/test/data/webrtc/webrtc-simulcast.html

BUG=921041
Change-Id: I6068dada500cccecdcdb4d8df851a55725d0e5ec

Reviewed-on: https://chromium-review.googlesource.com/2050303
WPT-Export-Revision: d7ad52c32ae6737aa05c48fdd13782e2fedfbe22",3618133
337,2020-02-14T23:36:05Z,2020-02-15T01:54:55Z,,,"## Issue
  - whatwg/dom/#478

### Implementation
  - whatwg/dom#835

### WPT Platform Tests
  - https://github.com/web-platform-tests/wpt/pull/21810

### Bug Trackers
   - [🐛Webkit `198578`](https://bugs.webkit.org/show_bug.cgi?id=198578)

### TODO:
  - [ ] Better align with https://github.com/web-platform-tests/wpt/pull/1974 `ParentNode` / `ChildNode` *imperative* test patterns.
  - [ ] Flesh out test cases.
  - [ ] Remove test double.
",3618133
338,2020-02-14T18:02:20Z,2020-02-14T18:02:29Z,,,"Bug: 993790
Change-Id: Idc04fa3b13f6dc8f85af84e37ce7cda9604aed1e
Reviewed-on: https://chromium-review.googlesource.com/2042119
WPT-Export-Revision: 6fd64f997d0588d9cf0f188fa201fbde08823183",3618133
339,2020-02-14T15:53:00Z,2020-02-14T15:53:09Z,,,"The test previously waited 3x requestAnimationFrame. With this it fails
~10% of the time on my local machine. Waiting 5 frames instead it
passes 100% of the time.

Bug: 1047648
Change-Id: Ic211b4186d0de4ae6dbe67a830d64edfd1e9baae

Reviewed-on: https://chromium-review.googlesource.com/2056926
WPT-Export-Revision: f7f0477ff36e6d1ad10d5eaf5583245ff4598bac",3618133
340,2020-02-13T22:30:26Z,2020-03-24T06:37:57Z,,,"This CL allows for HDR to be queried with MediaCapabilities.decodingInfo
with hdrMetadataType, colorGamut, and transferFunction. Both Blink- and
Media-side changes are included. The feature is flagged by
MediaCapabilitiesDynamicRange.

Bug: 1048045
Change-Id: I9f144726bbc7aaead4dcc1c9f69cf536da1bf2a9
Reviewed-on: https://chromium-review.googlesource.com/2035053
WPT-Export-Revision: 2cdc26ed4d542538b9821356cf084667b080592f",3618133
341,2020-02-11T13:35:54Z,2020-02-12T11:28:00Z,,,"These adds test for headers like `X-Frame-Options: DENY,SAMEORIGIN` (with various combinations of DENY, SAMEORIGIN and INVALID).

The existing cases send two headers, this does adds explicit tests for comma-separated header values.

There are existing tests that timeout in browsers other than Firefox.
Due to the fact that I am adding test cases, I am also adding more timeouts :confused: 


Tested to pass in Firefox (and 8 pass, 4 timeout) in Chrome as expected.


CC @annevk",3618133
342,2020-02-10T19:19:10Z,2020-02-19T10:06:36Z,,,"First batch of new GCPM tests I've been working on.

I've marked a few of these as tentative as there are discussions that need to be had on the correct functionality - I've included comments within the tests to point to the relevant issues. I believe adding these before the issues are resolved is still useful, as it demonstrates the point of the issue.

Once they're resolved one way or another I can revisit these and resolve them one way or another.",3618133
343,2020-02-10T11:08:29Z,2020-02-14T09:03:42Z,,,It will be good if we could also test backward focus navigation.,3618133
344,2020-02-09T22:18:48Z,2020-02-16T15:34:37Z,,,,3618133
345,2020-02-08T02:58:12Z,2020-02-14T16:11:34Z,,,Reviewed in https://github.com/servo/servo/pull/25705.,3618133
346,2020-02-07T23:22:46Z,2020-02-07T23:22:55Z,,,"Port case from https://codepen.io/george-steel/pen/mdJdEOV to WPT.
Tests effects of animation class on composite order.

Bug: 1050224
Change-Id: I3711f9a75e8da70c333936f5c9682f1793563739
Reviewed-on: https://chromium-review.googlesource.com/2044622
WPT-Export-Revision: 7cdaebf5d8d89d930eb1e496be7cc62e067938bf",3618133
347,2020-02-07T16:36:58Z,2020-02-11T19:14:41Z,,,"These tests all referred to a ""fonts/FreeSans.woff"" - there is no ""fonts"" directory here. The same font exists elsewhere in the svg testsuite, so point to the lowest-impact change that will get this working.

Note font metrics are potentially important for these tests, so the font is required.",3618133
348,2020-02-07T15:54:04Z,2020-02-10T03:08:22Z,,,"The whitespace in bidi-003 and bidi-004 were out by a single whitespace character due to collapsing. No browsers were rendering these correctly - it's possible the tests are right and everything else was wrong, but I think in this case the tests were the ones that were wrong.",3618133
349,2020-02-07T11:47:16Z,2020-02-07T16:21:24Z,,,"The missing DoulosSIL-R font is referenced (and required) by a numbers of tests, eg css/css-text/text-transform/text-transform-capitalize-024.html

This is version 5.000, the latest from https://software.sil.org/doulos/download/.

The font is covered under the SIL open font license at http://scripts.sil.org/ofl. ""The font can be bundled with free software so long as the license is included"" is a summary of the terms of the license that apply here, so I've included the OFL.txt file as well.
",3618133
350,2020-02-07T01:11:40Z,2020-02-19T18:23:12Z,,,"Some implementations, in particular WebKit on macOS/iOS, add
some dithering with noise to their gradients in order to provide
a nicer visual output. This means you can't test for exact pixel
values in the resulting image.

Instead you should check the pixel values with a small tolerance.
I'd already done this for some gradient tests, but not all.

The actual fix here is to use `_assertPixelApprox` instead of
`_assertPixel`. Rather than specify a tolerance at each call site,
I changed the function definition to have a default tolerance value
that seemed appropriate.",3618133
351,2020-02-06T10:19:13Z,2020-02-12T09:10:07Z,,,,3618133
352,2020-02-05T16:23:00Z,2020-02-05T16:23:12Z,,,"* Added new reftests

* Set the page margin for all css-gcpm tests to 72px. I suspect the tests were developed against Prince which uses 72px as a default - but this is specific to that user-agent. This will make the tests consistent across all user-agents, and ensure that where the UA default is 0, text does not overlap.",3618133
353,2020-02-05T10:35:25Z,2020-02-25T06:56:31Z,,,"This CL adds content-security-policy web-platform-tests for classic SharedWorkers.

Bug: 1049011
Change-Id: I16ac336458fa254e9f7ac8bb4411e8ef4a7ef25e
Reviewed-on: https://chromium-review.googlesource.com/2035462
WPT-Export-Revision: f4d792c82b2d6ddff17cc78db5bf6c082da8a4be",3618133
354,2020-02-04T12:38:26Z,2020-02-04T12:38:35Z,,,,3618133
355,2020-02-04T12:26:59Z,2020-02-04T12:27:08Z,,,Testing whether a deployment webhook event is sent for a PR from a fork,3618133
356,2020-02-03T22:12:40Z,2020-02-03T22:12:49Z,,,/ @rwlbuis ,3618133
357,2020-02-03T19:00:44Z,2020-02-06T15:37:31Z,,,(do not merge - needs discussion) Adding some initial mathml equivalent of svg nonce hiding tests in pursuit of https://github.com/whatwg/html/pull/5248#issuecomment-580879380 ,3618133
358,2020-02-03T18:58:34Z,2020-03-02T13:05:43Z,,,"Removed stats for stream, track (now obsolete)
Added media-source, transceiver, sender, receiver, ice-server stats
Aligned fields of various stat objects with new hierarchy
Aligned list of MTI stats with latest WebRTC spec",3618133
359,2020-01-30T22:05:15Z,2020-01-30T22:56:00Z,,,active-selection-063.html : 4 consecutive preserved `&Tab;` control characters being selected,3618133
360,2020-01-30T11:26:40Z,2020-03-02T10:44:05Z,,,,3618133
361,2020-01-29T23:41:45Z,2020-01-29T23:56:38Z,,,"active-selection-057.html : empty `<div>`
active-selection-058.html : empty `<div>`
active-selection-059.html : `<hr>`
active-selection-060.html : `<hr>`
active-selection-061.html : `&NewLine;`
reference/ref-nothing-below.xht
reference/ref-filled-green-100px-square.xht",3618133
362,2020-01-28T21:50:36Z,2020-01-28T21:50:46Z,,,"This is a fairly thorough rewrite of the StorageArea mojom interface
and the related StorageAreaObserver interface. A very brief summary
of the changes is:

 - StorageAreaObserver is no longer associated with StorageArea
 - The Blink DOM Storage implementation no longer relies on StorageArea
   replies being ordered against StorageAreaObserver events
 - CachedStorageArea no longer resets its StorageAreaObserver
   connection once established
 - All storage mutations (or failed mutations) now result in a
   StorageAreaObserver event.

Follow-up changes should be able to simplify IPC further by removing
StorageArea message replies, removing some redundant messages, and
possibly reducing the complexity of the different caching modes.

Rough preliminary proposal:
https://docs.google.com/document/d/1N27aEvjJa-3t_kunyyGATlmTyuTU8HNkv0sLDgZCLGM/edit

Bug: 1000959
Change-Id: I810626eda9e5f409b8f08439ab66801dd7376a0b
Reviewed-on: https://chromium-review.googlesource.com/2025873
WPT-Export-Revision: cab4cf896dec03c02e2d61a10a112c606a65a2b1",3618133
363,2020-01-28T15:09:08Z,2020-02-05T22:52:52Z,,,Based on https://github.com/web-platform-tests/wpt/pull/21442.,3618133
364,2020-01-27T23:18:44Z,2020-01-31T01:05:37Z,,,"This is a followup to 
https://github.com/web-platform-tests/wpt/pull/20033#issuecomment-576460334

active-selection-065.html : normal non-curved line of text in a SVG object
active-selection-065-ref.html
",3618133
365,2020-01-27T21:15:37Z,2020-01-29T13:14:50Z,,,  * Make clearer that this tests are manual by renaming them.,3618133
366,2020-01-27T21:13:41Z,2020-01-27T21:14:01Z,,,"This PR does the following:

* re-encode tests css/css-backgrounds/border-image-shorthand*  from utf-16 to utf-8
* Convert the tests from manual to ref-tests by using as reference the same test but with the reference duplicated.",3618133
367,2020-01-27T18:40:55Z,2020-03-27T06:39:41Z,,,"This PR was automatically created by a bot.

Before merging, please check that any tests that depend on the updated IDL files still work.

If additional changes are needed, please manually create another PR based on this one.

See the [README](https://github.com/web-platform-tests/wpt/blob/master/interfaces/README.md) for how the IDL files in this directory are used.

<hr>

Source: https://github.com/tidoust/reffy-reports/blob/feb4d7b/ed/idl/webrtc-priority.idl
Build: https://travis-ci.org/tidoust/reffy-reports/builds/642518716

",3618133
368,2020-01-24T00:46:41Z,2020-02-28T21:26:18Z,,,"This CL uses a new, ref-counted, HTMLMediaSourceAttachment object as the
registrable in the MediaSourceRegistry (instead of the MediaSource
object itself), and handles the attachment and
detachment of the MSE API to an HTMLMediaElement as moderated by this
new attachment class.

Along with managing GC-traceable references in each of HTMLMediaElement
and MediaSource, HTMLMediaSourceAttachment is expected to enable, in
later CLs, cross-thread (aka MSE-in-Workers) attachments of a main
thread HTMLMediaElement to a worker thread MediaSource.

The registry singleton itself is owned by the main thread, setup by a
new Init() call executed during modules initialization. Calls to
register or unregister a MediaSource objectUrl are proxied to the main
thread if necessary. Lookups to retrieve a MediaSource by its url are
allowed only on the main thread (to satisfy the only known use case:
attachment of the MSE API to an HTMLMediaElement).

This is the second of a multi-part series of changes to enable
experimental MSE API usage from dedicated and shared worker contexts, in
addition to previous usage from the same (main) thread.

Later changes will enable instantiation of a MediaSource object on a
DedicatedWorker thread (in-process). SharedWorker support is not in this
initial feature work (deferred, see https://crbug.com/1054566).

Intent-to-implement:
https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/CNRywDqgKjY/F0nnA4tTAwAJ

BUG=878133,1054566

Change-Id: I75ca36721f239ceae643a5790c769bbf47d574bf
Reviewed-on: https://chromium-review.googlesource.com/2003402
WPT-Export-Revision: 616e3b17ab3e355f2fbb145456f0fb5b2203df7d",3618133
369,2020-01-23T19:40:30Z,2020-01-24T20:03:34Z,,,"Bug: 993790
Change-Id: I5fc6b5c213fa7d56d473a8ea7e10235dd418ba42
Reviewed-on: https://chromium-review.googlesource.com/2015443
WPT-Export-Revision: 65eb2e0511bc9fe0dc8e6a6bcdb57ed904f46a1f",3618133
370,2020-01-23T12:41:44Z,2020-03-27T06:39:26Z,,,"This PR was automatically created by a bot.

Before merging, please check that any tests that depend on the updated IDL files still work.

If additional changes are needed, please manually create another PR based on this one.

See the [README](https://github.com/web-platform-tests/wpt/blob/master/interfaces/README.md) for how the IDL files in this directory are used.

<hr>

Note: This file was recently manually updated in commit 34e5617997.
      This commit may revert some of those changes.

Source: https://github.com/tidoust/reffy-reports/blob/886d121/ed/idl/css-regions.idl
Build: https://travis-ci.org/tidoust/reffy-reports/builds/640878622

",3618133
371,2020-01-23T06:29:58Z,2020-01-24T20:04:10Z,,,"Note that the existing 'Publish results' step for infrastructure_macOS
wasn't doing anything as nothing was put in the artifact directory, so
it was removed.",3618133
372,2020-01-22T15:13:41Z,2020-01-24T20:03:31Z,,,"As per recent CSSWG resolution in:
https://github.com/w3c/csswg-drafts/issues/4659#issuecomment-577211422

Change-Id: I088059bc4092da07047a89cb19ac1193bb4e8c5c
Reviewed-on: https://chromium-review.googlesource.com/2012957
WPT-Export-Revision: a24e5485c3400c82b637ab71a345f0cbc2a33db0",3618133
373,2020-01-22T11:05:55Z,2020-01-22T11:06:12Z,,,,3618133
374,2020-01-21T21:11:22Z,2020-03-11T14:27:17Z,,,"Adding [WMAS (Web Media API Snapshot) test runner](https://github.com/cta-wave/WMAS/) for running tests on embedded devices (TVs, Set-Top-Boxes, Streaming devices) in a single window/tab with server-side monitoring and execution. The [WMAS Specification](https://github.com/w3c/webmediaapi/) targets devices that are not able to run the WPT test runner due performance limitations and missing support of multiple windows/tabs (TV Apps run usually in a single window and not able to use window.open() which is used by the WPT Test Runner).   
PS: this [PR](https://github.com/web-platform-tests/rfcs/pull/23) in the [web-platform-tests RFCs](https://github.com/web-platform-tests/rfcs) provides more info about the discussion of the integration of the WMAS Test Runner into WPT.

Additions/Modifications:
- testharnessreport.js: Added logic to communicate with the server
  backend: send results, get URL to next test (only if wpt is started with the command `wpt serve-wave`)
- tools/wptserve/wptserve/wave: Code for WMAS test runner backend written in Python
- wpt code base: Added serve-wave command to load code for backend
  server. Added --report option to activate report generation,
  requires to install wptreport tool.
- Added configuration options to change the servers behaviour
- Documentation inside tools/wptserve/wptserve/wave/docs directory
- Postman API tests inside tools/wptserve/wptserve/wave/test
- Webinterface available under /wave/index.html
- results and generated reports are persisted in /results directory
  (can be configured)
- updated README.md with command `wpt serve-wave`",3618133
375,2020-01-21T20:50:50Z,2020-01-30T12:41:09Z,,,As per https://whatwg.org/style-guide,3618133
376,2020-01-21T18:42:34Z,2020-03-27T06:39:37Z,,,"This PR was automatically created by a bot.

Before merging, please check that any tests that depend on the updated IDL files still work.

If additional changes are needed, please manually create another PR based on this one.

See the [README](https://github.com/web-platform-tests/wpt/blob/master/interfaces/README.md) for how the IDL files in this directory are used.

<hr>

Source: https://github.com/tidoust/reffy-reports/blob/7ae7c91/ed/idl/svg-animations.idl
Build: https://travis-ci.org/tidoust/reffy-reports/builds/639926932

",3618133
377,2020-01-21T18:42:28Z,2020-03-27T06:39:35Z,,,"This PR was automatically created by a bot.

Before merging, please check that any tests that depend on the updated IDL files still work.

If additional changes are needed, please manually create another PR based on this one.

See the [README](https://github.com/web-platform-tests/wpt/blob/master/interfaces/README.md) for how the IDL files in this directory are used.

<hr>

Source: https://github.com/tidoust/reffy-reports/blob/7ae7c91/ed/idl/page-lifecycle.idl
Build: https://travis-ci.org/tidoust/reffy-reports/builds/639926932

",3618133
378,2020-01-21T18:42:20Z,2020-03-27T06:39:32Z,,,"This PR was automatically created by a bot.

Before merging, please check that any tests that depend on the updated IDL files still work.

If additional changes are needed, please manually create another PR based on this one.

See the [README](https://github.com/web-platform-tests/wpt/blob/master/interfaces/README.md) for how the IDL files in this directory are used.

<hr>

Source: https://github.com/tidoust/reffy-reports/blob/11380ca/ed/idl/gamepad-extensions.idl
Build: https://travis-ci.org/tidoust/reffy-reports/builds/654757585

",3618133
379,2020-01-21T12:41:55Z,2020-03-27T06:39:31Z,,,"This PR was automatically created by a bot.

Before merging, please check that any tests that depend on the updated IDL files still work.

If additional changes are needed, please manually create another PR based on this one.

See the [README](https://github.com/web-platform-tests/wpt/blob/master/interfaces/README.md) for how the IDL files in this directory are used.

<hr>

Source: https://github.com/tidoust/reffy-reports/blob/7ae7c91/ed/idl/frame-timing.idl
Build: https://travis-ci.org/tidoust/reffy-reports/builds/639926932

",3618133
380,2020-01-21T12:41:49Z,2020-03-27T06:39:27Z,,,"This PR was automatically created by a bot.

Before merging, please check that any tests that depend on the updated IDL files still work.

If additional changes are needed, please manually create another PR based on this one.

See the [README](https://github.com/web-platform-tests/wpt/blob/master/interfaces/README.md) for how the IDL files in this directory are used.

<hr>

Source: https://github.com/tidoust/reffy-reports/blob/7ae7c91/ed/idl/device-memory.idl
Build: https://travis-ci.org/tidoust/reffy-reports/builds/639926932

",3618133
381,2020-01-21T02:10:38Z,2020-01-24T20:03:26Z,,,"This change is still behind the flag.

Bug: 824646
Change-Id: I8a82c9b1fe499c4cf8ba182c308054c5dc9e5d0e
Reviewed-on: https://chromium-review.googlesource.com/2009598
WPT-Export-Revision: b2cd59ba422b1df372530facc1274462541ab23a",3618133
382,2020-01-21T01:28:31Z,2020-02-13T22:43:31Z,,,Reviewed in https://github.com/servo/servo/pull/25562.,3618133
383,2020-01-20T13:40:03Z,2020-01-24T20:01:43Z,,,"Per [1], we should only trigger an update of the image data on
insertions into a \<picture> parent. So we can axe most of
ImageLoader::ShouldUpdateOnInsertedInto and remove the associated state.

[1] https://html.spec.whatwg.org/multipage/images.html#relevant-mutations

Bug: 1000273
Change-Id: Ife48bfeb41a7858cdf4515f3b5e662e13b35c88a
Reviewed-on: https://chromium-review.googlesource.com/1782578
WPT-Export-Revision: b62ab78e15b8a52da05128f6b70f94f5a7a3a38e",3618133
384,2020-01-20T13:29:35Z,2020-02-17T17:15:59Z,,,"Bug: 954390
Change-Id: Ic3c9c1f576f6cfe56912750943ef771be11169ac

Reviewed-on: https://chromium-review.googlesource.com/2010592
WPT-Export-Revision: 9ddcebf176379f53527222904599fc357389158c",3618133
385,2020-01-16T06:25:31Z,2020-01-16T17:54:12Z,,,"According to the spec referrer policy should be taken into account when
the response tainting is not ""cors"", but the test expects that referrer
policy is taken into account when the mode is ""cors"". Fix the test.",3618133
386,2020-01-15T07:10:57Z,2020-01-15T07:11:08Z,,,"Happy new year 2020
",3618133
387,2020-01-14T19:59:54Z,2020-01-24T20:03:21Z,,,"We originally disallowed same-document scroll to text navigations as a
security mitigation. We now have a better idea of the security concerns,
which are mitigated by ensuring the frame is not script accessible by
another frame, in which case it is safe to do a same-document scroll to
text navigation.

Even for same-document scroll to text navigations, we still require it
to be a user navigation (e.g. link click or user activated script) or a
browser navigation (e.g. same-document bookmark clicked).

Bug: 1041065 1023640
Change-Id: I2924ae9fc4bb01db4b75f184cc1fb70fae487b1c

Reviewed-on: https://chromium-review.googlesource.com/1999000
WPT-Export-Revision: 4ab89fbe2b24dcedbdcc223b505c6f4a6b04118d",3618133
388,2020-01-10T16:11:50Z,2020-01-13T18:49:12Z,,,Reviewed in https://github.com/servo/servo/pull/25447.,3618133
389,2020-01-09T15:57:35Z,2020-01-27T14:18:52Z,,,Part of #18354.,3618133
390,2020-01-07T07:24:39Z,2020-01-24T20:04:48Z,,,https://github.com/whatwg/html/pull/5120,3618133
391,2020-01-06T22:32:04Z,2020-01-24T20:03:17Z,,,"The deprecated implementation for -webkit-box started horizontal layout
from an x position of 0. rtl was handled by iterating in reverse.
https://chromium-review.googlesource.com/c/chromium/src/+/1876073
got close to this by making the width_for_rtl come from the
hypothetical size. Unfortunately that doesn't deal with flex.
This patch adjusts width_for_rtl based on flex to better mirror that
of the deprecated implementation.

BUG=1034461
TEST=external/wpt/compat/webkit-box-rtl-flex.html

Change-Id: I8586b4b451e904bfffe27b922ebec3b82ec0acf3

Reviewed-on: https://chromium-review.googlesource.com/1988668
WPT-Export-Revision: a9fff73e877551fb5dbca077bd91b57316b0ecfc",3618133
392,2020-01-06T10:28:40Z,2020-01-24T20:03:16Z,,,"This CL makes `null` entries, i.e. mappings to `null`, `[]`, invalid URLs,
etc., be ignored, while previously they caused an error.

Built-in-modules-enabled cases:

The tests for built-in-modules-enabled cases are based on an old version
of the spec where `null` entries should cause errors.
This CL changes the tests so that `null` entries are ignored.

Associated spec updates for this change is not needed for now,
because the built-in modules support is tentatively dropped from the spec.

Built-in-modules-disabled cases:

The new behavior is already conformant with the current spec and WPT tests.

Bug: 990561, https://github.com/WICG/import-maps/issues/184
Change-Id: I3ce416adc9b9145b7fae8d9a22973698bd632f7e

Reviewed-on: https://chromium-review.googlesource.com/1986653
WPT-Export-Revision: 16d4743f1a586050f5f2828672412b1dc1577d63",3618133
393,2020-01-03T16:47:00Z,2020-01-24T20:03:14Z,,,"Bug: chromium:1038754
Change-Id: I51d99e7fffbb66a0478f03d674fb3699925fa3f8
Reviewed-on: https://chromium-review.googlesource.com/1986070
WPT-Export-Revision: 24420b66c5422d3e1bd74d78692efefa7e851e7f",3618133
394,2020-01-02T17:46:27Z,2020-01-24T20:02:57Z,,,"Bug: 1017166
Change-Id: I9a41809361d37542ecd13d34c2f7a723b64d66f8
Reviewed-on: https://chromium-review.googlesource.com/1954733
WPT-Export-Revision: 9b911041aee23b7cc044d59bfa0f2a974855438d",3618133
395,2020-01-01T03:06:09Z,2020-01-24T20:03:12Z,,,"Turns out we'd already had a comment that it was incorrect, but we
recently re-determined that.

 # These testcases are incorrect, mark them as failing until they're fixed in the testsuite.
 # https://lists.w3.org/Archives/Public/www-style/2016Jan/0275.html
 # https://lists.w3.org/Archives/Public/www-style/2016Jan/0276.html

Change-Id: I4b25be7eccbc173c2a8ab00341e6317a2ca866e7
Reviewed-on: https://chromium-review.googlesource.com/1985300
WPT-Export-Revision: 4c53db8cf83293449f66292305da73b3d0ed373a",3618133
396,2019-12-28T22:43:36Z,2020-01-27T21:38:20Z,,,"active-selection-021.html
active-selection-021-ref.html
active-selection-024.html
active-selection-024-ref.html
active-selection-031.html
active-selection-031-ref.html
active-selection-041.html
active-selection-041-ref.html
active-selection-043.html
active-selection-045.html
support/60x60-red.png
support/60x60-green.png
support/100x100-red.png
reference/ref-filled-green-100px-square.xht
reference/ref-nothing-below.xht

This PR is a followup to 
https://github.com/web-platform-tests/wpt/pull/20028

This PR contains all the corrections and improvements proposed in https://github.com/web-platform-tests/wpt/pull/20028",3618133
397,2019-12-25T01:25:25Z,2020-03-17T09:48:16Z,,,WebKit export from bug: [\[GStreamer\]\[MSE\] Player stalling too soon](https://bugs.webkit.org/show_bug.cgi?id=205117),3618133
398,2019-12-23T15:30:56Z,2020-03-16T12:07:04Z,,,Should fix #19836 and help with https://github.com/servo/servo/issues/23607,3618133
399,2019-12-21T03:28:03Z,2020-01-08T15:20:07Z,,,"This may be incorrect. I'm trying to verify that COEP is initialized according to the new algorithm for workers. I'm second-guessing myself because Chromium 78 fails the interesting cases:

![2019-12-20-coep-shared-worker-chromium-failures](https://user-images.githubusercontent.com/677252/71302298-cf0c6d80-2377-11ea-9588-f71e3ed447da.png)
",3618133
400,2019-12-20T23:01:08Z,2020-01-16T09:23:10Z,,,,3618133
401,2019-12-19T21:35:54Z,2020-01-27T14:09:57Z,,,,3618133
402,2019-12-19T19:18:38Z,2020-01-02T18:01:10Z,,,,3618133
403,2019-12-19T06:39:51Z,2020-01-24T20:03:10Z,,,"Spec change:
  https://github.com/gpuweb/gpuweb/pull/516

Test change:
  https://github.com/gpuweb/cts/pull/100

Bug: 852089
Change-Id: I0ff5da9b131ba588ca7608b6966461ff67f5a0bc

Reviewed-on: https://chromium-review.googlesource.com/1975388
WPT-Export-Revision: 6990ddef2618a2c0a2edb237f83fe516211c98bc",3618133
404,2019-12-18T20:48:23Z,2020-01-03T10:59:36Z,,,,3618133
405,2019-12-18T19:42:10Z,2020-01-24T20:03:09Z,,,"LayoutNG was already setting 'white-space: pre' for outside markers with
'content: normal', but not for inside markers or non-normal 'content'.

The CSSWG resolved in https://github.com/w3c/csswg-drafts/issues/4448
that 'white-space: pre' should always be used by default, but letting
authors override it if they desire another behavior.

This patch implements that. Note this changes the default behavior for
inside markers in LayoutNG, even when the CSSMarkerPseudoElement flag is
disabled. But this should be safe since both Chromium legacy and Firefox
preserve spaces by default.

This change has no effect in legacy, since it ignores 'white-space' in
markers.

BUG=457718

TEST=external/wpt/css/css-pseudo/marker-default-styles.html
TEST=external/wpt/css/css-pseudo/marker-white-space-default.html
TEST=external/wpt/css/css-pseudo/marker-white-space-normal.html

The marker-white-space-default and marker-white-space-normal tests fail
in legacy because 'content' is not supported yet. The latter also fails
because 'white-space' is ignored in legacy markers.

Change-Id: I07cf6c5bd9d55e016fe84f4854bd825bdcc8c66a
Reviewed-on: https://chromium-review.googlesource.com/1974097
WPT-Export-Revision: 713a02e7a7466bf33036d28437363d6e89c90fda",3618133
406,2019-12-18T14:11:45Z,2019-12-18T14:14:35Z,,,The latest CR of WebRTC removes a number of features which this pull request reflects on the relevant test suite. It also fixes a couple of small bugs.,3618133
407,2019-12-18T12:32:49Z,2020-01-14T13:30:13Z,,,,3618133
408,2019-12-17T23:09:29Z,2020-02-13T12:08:59Z,,,As per spec change in: https://github.com/w3c/webdriver/pull/1473,3618133
409,2019-12-17T15:51:14Z,2020-01-24T20:03:08Z,,,"The test fetch a request from the service worker, store it into the
CacheStorage. Then the document retrieve it from the cache.

There was a problem in the test. The service worker was setting the
request.mode (either ""no-cors"" or ""cors""), but the document wasn't
setting the request.mode in cache.match.

This CL fixed this.

Bug: 1031542
Change-Id: If134572a75a000d2a816f612cfa658f95026a285
Reviewed-on: https://chromium-review.googlesource.com/1971810
WPT-Export-Revision: f3737c8171cae82329f59217066bf7444bec22a3",3618133
410,2019-12-17T15:26:36Z,2020-01-24T20:02:52Z,,,"Transfers focus across activation in content shell and add tests. Also
adds a chrome/ browser test (focus transfer already happens in the
chrome/ layer).

Bug: 1030838
Change-Id: I4d3daa99a54ed35c2b8dbec97f3c6f12ee3ced7c
Reviewed-on: https://chromium-review.googlesource.com/1949119
WPT-Export-Revision: dc68a74295b393332c40b4d06fe43ca6f5b45e3d",3618133
411,2019-12-17T12:34:09Z,2020-01-24T20:03:05Z,,,"Bug: 1034846
Change-Id: I66de46a238562a7e031ef6e7c3a3b40a87a8c0fd
Reviewed-on: https://chromium-review.googlesource.com/1970313
WPT-Export-Revision: 8bfac66828c0c43619f6d93ab3f6a959e5131a25",3618133
412,2019-12-16T20:09:29Z,2020-01-24T20:03:04Z,,,"Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=1034647
Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1178765

Bug: 1034538
Change-Id: Iae1b9c52928130ee7a19fa26efcdf6d5dae4c929

Reviewed-on: https://chromium-review.googlesource.com/1970080
WPT-Export-Revision: 78aedbd674f54b8b6725e4e0a9f91a7f08fe015b",3618133
413,2019-12-13T22:52:58Z,2020-01-16T10:49:54Z,,,"In the spec before https://github.com/whatwg/html/pull/5154,

`script element's node document` is re-evaluated after script evaluation,
and thus if a script is moved to another Document during its own evaluation,
`currentScript` of the *new* document could be updated.

After #5154, `currentScript` is always set/reset on the same Document,
which is expected, and tested so here.

Browser implementations already follow the new spec behavior (as expected).",3618133
414,2019-12-12T15:50:50Z,2020-01-24T20:03:00Z,,,"Use cache.add from a page with Cross-Origin-Embedder-Policy:
require-corp.

Bug: 1031542
Change-Id: If6169e61884b2ecabba0e55bcd7b7c0e25392800
Reviewed-on: https://chromium-review.googlesource.com/1964275
WPT-Export-Revision: 13435789097ba1a1d93fa82994db75f717d791c1",3618133
415,2019-12-12T14:56:41Z,2020-01-24T20:02:37Z,,,"This adds basic support for containers which typically layout their
children in a row and control stretching of their vertical stretchy
operator children. Handling of out-of-flow elements is not supported yet.

The following elements are implemented:
https://mathml-refresh.github.io/mathml-core/#the-top-level-math-element
https://mathml-refresh.github.io/mathml-core/#horizontally-group-sub-expressions-mrow
https://mathml-refresh.github.io/mathml-core/#style-change-mstyle
https://mathml-refresh.github.io/mathml-core/#error-message-merror
https://mathml-refresh.github.io/mathml-core/#making-sub-expressions-invisible-mphantom

These legacy MathML3 elements are just implemented as basic \<mrow>:
https://mathml-refresh.github.io/mathml-core/#dfn-maction (as in Core)
https://mathml-refresh.github.io/mathml-core/#dfn-semantics (as in Core)

Bug: 6606
Change-Id: I29fa3883a6f8df7bd93c891da7c1ddea072af169
Reviewed-on: https://chromium-review.googlesource.com/1913250
WPT-Export-Revision: 0ff4eca999a9c60e0cc5e249b4397e7db4938774",3618133
416,2019-12-11T16:13:37Z,2020-01-24T20:05:11Z,,,"See https://github.com/web-platform-tests/wpt/issues/20697

This currently only implements the `--fix` flag and calls a new
`auto_fix_errors` function, that currently only prints a message,
but could read the file into memory, apply changes, and write to file.

---

cc @stephenmcgruer

I'm opening this in its current state because I don't expect to be able to continue working on this right now. Hopefully this is of help if anyone else wants to take a stab at this!",3618133
417,2019-12-09T20:02:48Z,2019-12-10T01:43:05Z,,,,3618133
418,2019-12-09T11:19:46Z,2020-02-07T17:50:32Z,,,"Updates&nbsp;tests to&nbsp;match <https://github.com/whatwg/html/pull/5104>.

This&nbsp;is&nbsp;already&nbsp;implemented in&nbsp;all&nbsp;major&nbsp;browsers (**Firefox**, **Chrome** and&nbsp;**Safari**).

---

See&nbsp;also: <https://github.com/web-platform-tests/wpt/pull/20403>",3618133
419,2019-12-06T11:32:54Z,2020-01-24T20:02:56Z,,,"Bug: 1029742
Change-Id: I6c194b3cb6d0b0a8e120edc3693f71dda8b21f3f
Reviewed-on: https://chromium-review.googlesource.com/1954471
WPT-Export-Revision: 2ab5875c1d68c20f86a43893373a36a0b2a69521",3618133
420,2019-12-05T16:09:29Z,2020-01-24T20:02:55Z,,,"Change-Id: Ieee5e2cd3667e4969cd57d97cb923cb3b21ef937
Reviewed-on: https://chromium-review.googlesource.com/1953213
WPT-Export-Revision: 7f4bcd38a6165a5b59e4f89a03e6e98ebfa7557e",3618133
421,2019-12-05T15:22:53Z,2020-01-24T20:02:54Z,,,"Change-Id: Ia53016b1d2a8ab1cd742cfebcc63b836b012209c

Reviewed-on: https://chromium-review.googlesource.com/1950965
WPT-Export-Revision: 69c2cb5f78edc2c30523351c705d90459ae047a1",3618133
422,2019-12-04T00:42:10Z,2020-01-24T20:02:53Z,,,"Quick draft.

Note:

https://web-platform-tests.org/writing-tests/testdriver-extension-tutorial.html
provides two methods, `testdriver-vendor.js` and `testdriver-extra.js`.
I'm not sure which method to use, but in this CL
I used `testdriver-vendor.js` method, because

- It was easier to implement.
- So far the API is expected only for testing and not needed to be
  exposed for automation.

This CL contradicts with:
https://web-platform-tests.org/writing-tests/testdriver.html
> NB: presently, testdriver.js only works in the top-level
> test browsing context (and not therefore in any frame or
> window opened from it).
because `test_driver` is accessed from inside `\<iframe>`s
in this CL.
Perhaps this is OK in this case, as the `resolve_module_specifier`
implementation works inside \<iframe>s, while other `test_driver`
method might stop working there.

Bug: 1026809, https://github.com/WICG/import-maps/issues/170
Change-Id: I8684ec544382e3036b9885e09f0c3a4d97208da5

Reviewed-on: https://chromium-review.googlesource.com/1949446
WPT-Export-Revision: 5a6d0d7336883a8295304a7fee02dce100647078",3618133
423,2019-12-03T07:58:28Z,2020-01-24T20:02:51Z,,,"BUG=1029417

Change-Id: I53a767317815135c36be3a341035374ccba8715c

Reviewed-on: https://chromium-review.googlesource.com/1947909
WPT-Export-Revision: 37fdffc71172b8108d08aa91a0411500dbde47e9",3618133
424,2019-12-02T23:10:08Z,2020-01-24T20:02:46Z,,,"We are supporting two touch ends happening in two separated ticks. We
should allow this case happens:
touch point 1: pointerdown, pointermove, pointerup
touch point 2: pointerdown, pointerup

Bug:1020674
Change-Id: If60342246523ab89a44967b6c9842fcf9a47acd0

Reviewed-on: https://chromium-review.googlesource.com/1941271
WPT-Export-Revision: d9e908ede82c1680b50ff2ce917a636d4a4cdbf5",3618133
425,2019-12-02T16:04:59Z,2020-01-24T20:02:41Z,,,"In order to dispatch the touch pointer events by the order we receive
them before coalescing them, before sending them to PointerEventManager,
we should sort coalesced_pointer_event by its WebTouchEvent's timestamp.
Because the WebPointerEvent for all the coalesced touch events have the
same timestamp, only the web touch event in the coalesced event lists
have the original timestamp.

Bug: 1020674
Change-Id: Ib3d62c988ff570532e4752bbc895de9eeb28b5cf
Reviewed-on: https://chromium-review.googlesource.com/1930691
WPT-Export-Revision: d010552925b2f428e93dbd7d1c92ffc82df5bb1b",3618133
426,2019-12-02T14:34:06Z,2020-01-24T20:04:51Z,,,,3618133
427,2019-11-30T00:43:10Z,2019-11-30T00:53:06Z,,,"`MultipleRedirectTo` is documented as follows:

> go from HTTPS => HTTP => HTTPS to simulate us downgrading then
> upgrading again during the same redirect chain.

However, the redirect chain constructed actually began with an HTTP URL
and therefore did not demonstrate the expected downgrade.

Change the initial URL in the sequence to use HTTPS.

---

This change does not influence the results reported by Chromium today.

On `master`:

    $./wpt run --headless --log-mach - --channel experimental --binary $(which chromium-browser) chrome $(git grep -l redirectTestHelper)
    [...]
    web-platform-test
    ~~~~~~~~~~~~~~~~~
    Ran 176 checks (169 subtests, 7 tests)
    Expected results: 170
    Unexpected results: 6
      subtest: 6 (6 fail)

With this patch applied:

    $./wpt run --headless --log-mach - --channel experimental --binary $(which chromium-browser) chrome $(git grep -l redirectTestHelper)
    [...]
    web-platform-test
    ~~~~~~~~~~~~~~~~~
    Ran 176 checks (169 subtests, 7 tests)
    Expected results: 170
    Unexpected results: 6
      subtest: 6 (6 fail)

This is expected, but the error should still be corrected in the interest of improving coverage.",3618133
428,2019-11-28T20:47:57Z,2020-01-24T20:02:49Z,,,"Matches spec change in https://github.com/w3c/longtasks/pull/78

Change-Id: I5641d4a6f1424abe87e1fb9ce000ac776e5e84ed
Reviewed-on: https://chromium-review.googlesource.com/1942877
WPT-Export-Revision: b79d47806b418af1f2130b3cdd7d137746922a59",3618133
429,2019-11-28T14:39:10Z,2020-01-24T20:02:43Z,,,"Chromium's current SRI implementation treats digest that is not in
base64 as NULL and returns 'kIntegrityParseNoValidResult'. This allows
the script to run without being checked for integrity.

This fix metatdata parse function to return 'kIntegrityParseValidResult'
even when parsing matadata that contains non-base64 digest.

Bug: 971176, 1032068
TEST: build and run blink_platform_unittests
Change-Id: I420b86003adfdf053a3f2ce9761b9cfa506ba9e0

Reviewed-on: https://chromium-review.googlesource.com/1932140
WPT-Export-Revision: b678962617f6234bff6c87ee6837e79315de1206",3618133
430,2019-11-28T10:30:28Z,2020-01-24T20:02:48Z,,,"Currently, wait_for_state() in test-helpers.sub.js for a service worker only
checks equivalence of the state to the specific state, so it can wait forever if
the worker unexpectedly skip the state or it's unexpectedly evicted. This patch
changes the evaluation order properly by replacing this checking equivalence of
the state after adding the event handler.

Change-Id: I0bc90cc92b1ab2eca92872c9199c5a500e23734c
Bug: 1000544
Reviewed-on: https://chromium-review.googlesource.com/1941729
WPT-Export-Revision: 6e282bfa4716c6392e85ab909aac3976c579654f",3618133
431,2019-11-26T17:59:18Z,2019-12-16T03:11:44Z,,,"Remove reference to global variable from `assert_no_headers` and instead
require the value as a parameter.",3618133
432,2019-11-25T20:35:01Z,2020-01-24T20:02:45Z,,,"Change-Id: I61e270f5d6167da0a1bf654cf31c5c6d768ce0e9
Reviewed-on: https://chromium-review.googlesource.com/1934667
WPT-Export-Revision: f90d11ceee9db5736d2ae98fa69e883d971a74fd",3618133
433,2019-11-25T15:48:29Z,2020-01-24T20:02:44Z,,,"More specifically, the removal of explicit lifetimes and the
Accept-CH-Lifetime header in favor of an implicit ""infinite"" lifetime.

The spec changes can be found in crbug.com/1017166

Bug: 1017166
Change-Id: Ie4489c0c899122c2b799ed915d1cfe6f0703fbba
Reviewed-on: https://chromium-review.googlesource.com/1933728
WPT-Export-Revision: 1f95b7078df0bf82237bd024668a82babc0635e8",3618133
434,2019-11-22T21:38:27Z,2020-03-13T07:16:40Z,,,"This adds tests that ensure that changes to the iframe sandbox
attribute after a navigation starts do not affect the document which
is loaded into the iframe. The value of the attribute should be
snapshotted at the beginning of a navigation, to take effect when
the navigation completes.",3618133
435,2019-11-22T15:45:38Z,2020-02-07T17:50:14Z,,,"See&nbsp;issue&nbsp;https://github.com/whatwg/html/issues/4792

This&nbsp;is&nbsp;already&nbsp;implemented in&nbsp;all&nbsp;major&nbsp;browsers (**Firefox**, **Chrome** and&nbsp;**Safari**).

Note&nbsp;that **Chrome**&nbsp;currently has&nbsp;a&nbsp;bug&nbsp;which is&nbsp;caught by&nbsp;the&nbsp;`nameditem‑fetch‑01.html`&nbsp;test.

---

See&nbsp;also: <https://github.com/web-platform-tests/wpt/pull/20676>",3618133
436,2019-11-21T15:47:13Z,2020-01-24T19:59:42Z,,,Successor to #3195.,3618133
437,2019-11-21T15:35:16Z,2020-01-24T19:59:43Z,,,Successor to #3194.,3618133
438,2019-11-20T05:41:12Z,2019-11-20T15:06:45Z,,,Fixed #17792,3618133
439,2019-11-20T03:10:23Z,2019-12-20T17:02:16Z,,,"Chrome and Safari both fail this test:

browser    | event sequence
-----------|---------------
Chrome 80  | `readystatechange`, `readystatechange`, `load`, `unhandledrejection`
Firefox 70 | `readystatechange`, `unhandledrejection`, `readystatechange`, `load`
Safari 13  | `readystatechange`, `readystatechange`, `load`, `unhandledrejection`",3618133
440,2019-11-19T16:03:51Z,2020-01-24T20:04:07Z,,,Fixes https://github.com/web-platform-tests/wpt/issues/18634.,3618133
441,2019-11-19T15:58:00Z,2020-01-24T20:02:40Z,,,"Add a basic touch scroll snapping to WPT. This is based on the blink internal
test: fast/scroll-snap/animate-fling-to-snap-points.html

Changes from original test:
 - The new tests uses test_driver to produce scroll gestures.
 - Add clean up logic with add_cleanup to ensure they run even if a test fail.
 - I was not able to produce 2d scrolling gestures using existing methods
   so the tests are modified to do 1d scrolling.


This CL does not remove the original test because current CQ wpt runner does
not support testdriver.js fully so the new test fails to run in CQ/trybots.


Bug: 1011066
Change-Id: I203d4a2eb77529f1705f7508ead0cc72c1099b2b
Reviewed-on: https://chromium-review.googlesource.com/1922950
WPT-Export-Revision: 814a6c06a92d7b3b48aa0cc974cd0b471031c08e",3618133
442,2019-11-19T02:54:29Z,2020-01-24T20:02:35Z,,,"This avoids issues where no-op sequences of layout updates and forced
layouts may cause user scrolls to be lost due to clamping. For example,
a forced layout may cause an anchor element to move down and also increase
scroll height; then that layout may be undone and cause the opposite.
If scroll anchor adjustments are not stored outside of ScrollableArea,
then the ""undone"" part will lose information about the true user scroll.

With this technique, a ""no-op"" rendering update that involves two mutations
to layout that are the opposite of each other, and that have impact
on scrollable area sizing, will now have a no-op impact on final scroll
offset.

Bug: 997502,988991,1022615
Change-Id: Ibd567005443dc7b0449ad97a0d886e8446cf876c
Reviewed-on: https://chromium-review.googlesource.com/1907598
WPT-Export-Revision: 4dc96535bdf716b2ad9d1c7506827d3a9895df42",3618133
443,2019-11-15T22:46:50Z,2019-12-19T11:28:08Z,,,"Further reduce the size of the project's README file, and extend the
relevant documentation with the distinct recommendation that would
otherwise be lost.

This is in service of gh-5289",3618133
444,2019-11-15T00:28:46Z,2020-01-24T20:02:32Z,,,"When the user activation state is active, we should only allow one full
screen. There was a simply change to only consume the user activation
on the blink side. We should first consume the user activation on the
browser side, and then consume on the blink side.

Bug: 852645
Change-Id: Iee9919bfb1fd363d2ea3846b7729fd1b2e69b8d1
Reviewed-on: https://chromium-review.googlesource.com/1903675
WPT-Export-Revision: 51addff96d69fa589586558b9ccb75fb47dff818",3618133
445,2019-11-14T22:49:04Z,2020-01-24T20:02:38Z,,,"When doing a hit test to measure occlusion, the code previously
assumed that the hit test logic would always prevent descending into
the subtree of the stop node. That's not the case when parent and
child positioned objects are in the same stacking context and the
parent positioned object is the stop node. In that case the subtree
of the child positioned object will be traversed before the parent
positioned object.

When a hit is identified, we need to explicitly check whether it's a
containing block descendant of the stop node; and if so, reject the
hit.

BUG=1020784

Change-Id: Ied362410bf381e02870ebbad884bd228b0b41fc8
Reviewed-on: https://chromium-review.googlesource.com/1914537
WPT-Export-Revision: ac44f1a3dd8ab99b9aae790b34247fa0e24f083c",3618133
446,2019-11-14T22:03:04Z,2019-11-14T22:27:17Z,,,"Subtests created with `async_test` execute in parallel. Because each
subtest in the modified file use the same `canvas` element, parallel
execution make them susceptible to undesired interactions.

Declare the subtests using `promise_test` so that the harness executes
them in series.

---

@reillyeon requested this change in gh-20234, where they wrote

> Since the generated async tests are reusing the same `<canvas>` element
> should they be converted to promise tests so that they run sequentially
> rather than attempting to apply a bunch of different constraints in parallel?
> That seems to depend on whether or not `captureStream()` is guaranteed to
> return fully independent `MediaStream` instances.

These tests do not pass on my system (neither from `master` nor from this branch), so I can't verify the validity of this change.",3618133
447,2019-11-14T19:37:02Z,2020-01-02T20:09:51Z,,,"This test presumes that ""termination"" occurs during navigation.",3618133
448,2019-11-14T18:10:11Z,2019-11-14T21:32:50Z,,,"The motivation for formalizing this behavior comes from an existing test
for the paint-timing specification [1], though it is expected that still
more tests will benefit from the contract.

[1] https://github.com/web-platform-tests/wpt/pull/14109",3618133
449,2019-11-13T22:07:20Z,2020-01-24T20:02:34Z,,,"This change fixes outcome names to more accurately describe the outcome of a
response.

1. Timeout -> NavigatedAway
   this outcome occurs when a user navigates away, reloads, closes tab, etc.
   and not when the sms receiver actually times out of a call while waiting
   for an SMS.

2. Cancelled -> CancelledByUser & CancelledByBrowser
   To differentiate when a request has been cancelled manually by the user
   and when it is cancelled by the browser because it only allows one request
   per origin on a tab.

Change-Id: I705798830a1987eba0d288ce54413f822ffec925
Bug: 976332
Reviewed-on: https://chromium-review.googlesource.com/1904867
WPT-Export-Revision: b4900c5725612b931c7b82dcfef8082fe8cb3d2f",3618133
450,2019-11-13T19:56:08Z,2019-11-21T20:15:21Z,,,"Although uncaught exceptions are often an indication of errors in test design, the harness status cannot be safely modified following completion, so these exceptions must be ignored.

---

Here are some comparisons between test results collected from `master` and test results collected with this patch applied:

- Chrome: https://wpt.fyi/results/?diff&filter=ADC&run_id=348750003&run_id=345290003
- Firefox: https://wpt.fyi/results/?diff&filter=ADC&run_id=352460003&run_id=348770002

As usual, flaky tests make interpreting these comparisons a little tricky. Firefox's results don't seem to be influenced by this change, but Chrome's results have some differences.

I found 5 tests which report `ERROR` consistently in `master` and `OK` consistently with the patch applied.

- [`content-security-policy/script-src/script-src-strict_dynamic_hashes.html`](https://wpt.fyi/results/content-security-policy/script-src/script-src-strict_dynamic_hashes.html?diff&filter=ADC&run_id=348750003&run_id=345290003) - this test has a bug which [I've reported with this issue](https://github.com/web-platform-tests/wpt/issues/20226)
- [`html/syntax/parsing/html5lib_innerHTML_adoption01.html`](https://wpt.fyi/results/html/syntax/parsing/html5lib_innerHTML_adoption01.html?diff&filter=ADC&run_id=348750003&run_id=345290003) - this test has a bug which [I've tried to fix with this patch](https://github.com/web-platform-tests/wpt/pull/20223)
- [`infrastructure/expected-fail/unhandled-rejection-following-subtest.html`](https://wpt.fyi/results/infrastructure/expected-fail/unhandled-rejection-following-subtest.html?diff&filter=ADC&run_id=348750003&run_id=345290003) - this is a test for the behavior under consideration. I've added a ""fixup!"" commit to this branch to remove it
- [`mediacapture-image/MediaStreamTrack-getConstraints-fast.html`](https://wpt.fyi/results/mediacapture-image/MediaStreamTrack-getConstraints-fast.html?diff&filter=ADC&run_id=348750003&run_id=345290003) - this test has a bug which [I've tried to fix with this patch](https://github.com/web-platform-tests/wpt/pull/20234)
- [`trusted-types/block-string-assignment-to-DOMWindowTimers-setTimeout-setInterval.tentative.html`](https://wpt.fyi/results/trusted-types/block-string-assignment-to-DOMWindowTimers-setTimeout-setInterval.tentative.html?diff&filter=ADC&run_id=348750003&run_id=345290003) - this test intentionally triggers an uncaught exception, so it seems to expect the behavior proposed here. As a ""tentative"" test, it may be that the authors aren't yet scrutinizing the results on wpt.fyi

I found 5 tests which are flaky in `master` and consistent with the patch applied:

- [`content-security-policy/script-src/script-src-strict_dynamic_in_img-src.html`](https://wpt.fyi/results/content-security-policy/script-src/script-src-strict_dynamic_in_img-src.html?diff&filter=ADC&run_id=348750003&run_id=345290003)
- [`html/webappapis/microtask-queuing/queue-microtask-exceptions.any.worker.html`](https://wpt.fyi/results/html/webappapis/microtask-queuing/queue-microtask-exceptions.any.worker.html?diff&filter=ADC&run_id=348750003&run_id=345290003)
- [`offscreen-canvas/*`](https://wpt.fyi/results/offscreen-canvas?diff&filter=ADC&run_id=348750003&run_id=345290003) ([coincidentally, we just recently recognized that these tests are invalid](https://github.com/web-platform-tests/wpt/issues/20180))
- [`workers/baseurl/alpha/sharedworker-in-worker.html`](https://wpt.fyi/results/workers/baseurl/alpha/sharedworker-in-worker.html?diff&filter=ADC&run_id=348750003&run_id=345290003)
- [`workers/interfaces/WorkerGlobalScope/onerror/exception-in-onerror.html`](https://wpt.fyi/results/workers/interfaces/WorkerGlobalScope/onerror/exception-in-onerror.html?diff&filter=ADC&run_id=348750003&run_id=345290003)

If the effect of this change seems agreeable, I'd be happy to discuss alternative implementations. For instance, we could freeze the status object at the moment of completion, or we could call [`structured_clone`](https://github.com/web-platform-tests/wpt/blob/3ee67ef03aeee31247ee1b5aca3e91ddef4fdfd8/resources/testharness.js#L2417-L2429) (which would have a similar effect due to memoization).",3618133
451,2019-11-13T17:30:58Z,2020-01-31T19:51:53Z,,,,3618133
452,2019-11-13T17:28:51Z,2020-01-31T19:53:25Z,,,Make the tasklcuster root url configurable on the command line,3618133
453,2019-11-11T10:09:31Z,2020-01-24T20:02:19Z,,,"This CL was too huge to review. I'm going to split this into smaller patches so
please don't review it. Thank reviewers.

In order to get PerformanceEntry in subresource's requests in fetch event,
this CL adds new APIs:
FetchEvent#addPerformanceEntry and PerformanceResourceTiming#workerTiming.

Mojo pipe connects a pair of endpoints in a FetchEvent and a
PerformanceResourceTiming because PerformanceEntry has to be passed beyond
processes.

To identify 1:1 relationship between Mojo receiver and resource,
request_id_ which is generated in content::ResourceDispatcher is used.
This is is unique in request, so it isn't changed in network fallback in service
worker.

blink::ResourceTimingInfo is changed to have
Mojo pending receiver in order to pass each Mojo pending receiver.
Mojo pending receiver can’t be copied,
so I changed `const& ResourceTimingInfo` to `& ResourceTimingInfo`
(or scoped_refptr\<ResourceTimingInfo>?)
in arguments if necessary because it has to pass this receiver to
blink::PerformanceResourceTiming.

explainer: https://github.com/wanderview/fetchevent-worker-timing/blob/master/explainer.md
desing doc: https://docs.google.com/document/d/1-ebnv7OFiVd3k2-jbtQGO5s3BKHIp7lRx3ujhgNKvB0

Bug: 900700
Change-Id: I6caa828ab43908fb3e6610cdb4695d225ea83855

Reviewed-on: https://chromium-review.googlesource.com/1870161
WPT-Export-Revision: f335ecca874c394be55d6b6d81ca0ecad7ede579",3618133
454,2019-11-08T13:31:01Z,2020-02-19T03:28:15Z,,,,3618133
455,2019-11-08T13:09:51Z,2020-01-27T14:07:04Z,,,"This test does not follow any spec yet.
Instead it expects all `input` types to be scrollable
and fire a `scroll` event in response to `scrollTo()`,
to more clearly demonstrate which elements do this in
browsers currently.

Variants tested:

* overflow: visible / hidden / scroll
* appearance: auto / none

See https://github.com/whatwg/html/pull/4840",3618133
456,2019-11-08T00:44:57Z,2020-01-24T20:02:33Z,,,"Change-Id: I6540c40d519c4ec89cba3a7188892ca0a5df2126
Reviewed-on: https://chromium-review.googlesource.com/1903817
WPT-Export-Revision: 588f7bb57809d3c41cc9071817744c0c50e91796",3618133
457,2019-11-07T21:35:15Z,2020-01-24T20:02:29Z,,,"Change base::Bind to base::BindOnce or base::BindRepeating as
appropriate..

Bug:  1007798
Change-Id: I0bc1f2049624a4c4a1423139fd061ae84d6aa0ff
Reviewed-on: https://chromium-review.googlesource.com/1902269
WPT-Export-Revision: 422be55ca66ca83b2b357f07f7b71a44e2c22d81",3618133
458,2019-11-07T14:57:16Z,2020-01-27T14:06:00Z,,,Follows https://github.com/whatwg/html/pull/4840,3618133
459,2019-11-07T05:46:20Z,2020-01-24T20:02:30Z,,,"Change-Id: I6916b54bb6150227971c78b330387a69c958b318
Reviewed-on: https://chromium-review.googlesource.com/1902482
WPT-Export-Revision: 507c6c5c5c3489a0fd042b00cf57b8ee2e1f1e19",3618133
460,2019-11-07T00:03:25Z,2020-01-24T20:02:31Z,,,"Change-Id: Id5b3e2a176a43f6dd2ed8d4ae7fdb8fd2938c920
Reviewed-on: https://chromium-review.googlesource.com/1902707
WPT-Export-Revision: 68bbce617e7b7c6839025f2e933c380bceaf6212",3618133
461,2019-11-06T11:34:54Z,2020-01-24T20:02:28Z,,,"ListItem would check the layout tree position of marker if the
subtree of li is changed which will set the lifecycle state to
kInLayoutSubtreeChange. Marker might be reattached if necessary
which will cause relayout. While ScheduleRelayoutOfSubtree
requires the state \<= kStyleClean. So there's a DCHECK failure.
To fix this, make sure the position of marker won't be changed
unless li NormalChildNeedsLayout which can stop marker triggering
ScheduleRelayoutOfSubtree. And adding restriction to reattach marker.

Reviewed-on: https://chromium-review.googlesource.com/1901011
WPT-Export-Revision: bd686022b8d427227d281cf6029bce9c148096ac",3618133
462,2019-11-06T10:36:42Z,2020-01-24T20:52:02Z,,,"This CL removes the runtime flag and enables the feature by default.

The intent-to-ship request [1] has been approved, under the condition of
improving the test suite and increasing the testing coverage of the
feature.

This CL provides also additional layout tests for different scenarios,
combining different line-breaking CSS properties and values. They also
consider text lines with different inline boxes and some corner cases
that were recently discussed by the CSS WG and implemented already in
other browsers.

[1] https://groups.google.com/a/chromium.org/d/msg/blink-dev/8qesjfh0a80/xrruWrixBwAJ

Bug: 905315
Change-Id: I1e78599777436989fefcd988c04074f33cbf452d
Reviewed-on: https://chromium-review.googlesource.com/1900002
WPT-Export-Revision: 5ca3f8e9829330eb673f6b8fe5cf61d9c48fb65e",3618133
463,2019-11-06T09:10:33Z,2020-01-24T20:04:04Z,,,,3618133
464,2019-11-05T20:32:10Z,2020-01-24T20:04:09Z,,,,3618133
465,2019-11-04T07:03:13Z,2019-11-04T07:03:22Z,,,"Tests for when there are too many children in MathML elements.

May need to revise if  resolution of issue https://github.com/mathml-refresh/mathml/issues/15 changes. Also, more tests need to be added for `mmultiscripts` once 
https://github.com/mathml-refresh/mathml/issues/166 is resolved.",3618133
466,2019-10-31T18:28:17Z,2020-02-19T01:20:17Z,,,"selection-contenteditable-011.html 
selection-contenteditable-011-ref.html 
selection-input-011.html 
selection-input-011-ref.html 
selection-intercharacter-011.html 
selection-intercharacter-011-ref.html 
selection-intercharacter-012.html 
selection-intercharacter-012-ref.html 
selection-overlay-and-grammar-001.html 
selection-overlay-and-grammar-001-ref.html 
selection-overlay-and-spelling-001.html 
selection-overlay-and-spelling-001-ref.html 
selection-textarea-011.html 
selection-textarea-011-ref.html",3618133
467,2019-10-31T18:14:23Z,2020-02-22T22:40:07Z,,,"cascade-highlight-001.html 
cascade-highlight-001-ref.html 
cascade-highlight-002.html 
cascade-highlight-004.html 
cascade-highlight-004-ref.html 
grammar-error-002-manual.html 
grammar-error-003-manual.html 
highlight-z-index-001.html 
highlight-z-index-001-ref.html 
highlight-z-index-002.html",3618133
468,2019-10-31T16:37:03Z,2020-01-24T20:02:24Z,,,"This is necessary since blink currently has two different keyframe
stacks (for transitions and for other animations) and both should be
tested.

Bug: 816956
Change-Id: I8335db379a02162696884d36ce8ef2f22d83b48d
Reviewed-on: https://chromium-review.googlesource.com/1893576
WPT-Export-Revision: 4da24f5d7d4ea554f6568ba6338a68e62c80a331",3618133
469,2019-10-30T17:26:40Z,2020-01-24T20:02:20Z,,,"This uses the V8 API to register a clean up task that will execute
some time later at idle time.

The JavaScript spec is defined here:
https://tc39.es/proposal-weakrefs/

The HTML integration is defined here:
https://github.com/whatwg/html/pull/4571

(Note that this CL doesn't implement ClearKeptObjects part of the
spec yet, a follow on CL will do that.)

TODO (before sumbitting this CL):
- Add tests

Bug: 1016767
Change-Id: I2db82dc9d037d1e3bc0ec8c192d5b06908161adc
Reviewed-on: https://chromium-review.googlesource.com/1873754
WPT-Export-Revision: 905ae5e21d28f9fe8f184a0f4cc6617669f952f1",3618133
470,2019-10-29T05:15:33Z,2019-10-29T05:17:43Z,,,"Always min-width should win over max-width.
https://bugs.webkit.org/show_bug.cgi?id=198032

Reviewed by Darin Adler.

In the spec, https://www.w3.org/TR/CSS21/visudet.html#min-max-widths,
the following algorithm describes how the two properties influence
the used value of the 'width' property.

1. The tentative used width is calculated (without 'min-width' and 'max-width')
following the rules under ""Calculating widths and margins"" above.
2. If the tentative used width is greater than 'max-width',
the rules above are applied again, but this time using the computed value of 'max-width'
as the computed value for 'width'.
3. If the resulting width is smaller than 'min-width', the rules above are applied again,
but this time using the value of 'min-width' as the computed value for 'width'.

LayoutTests/imported/w3c:

* web-platform-tests/css/css-sizing/min-width-max-width-precedence-expected.txt: Added.
* web-platform-tests/css/css-sizing/min-width-max-width-precedence.html: Added.

Source/WebCore:

* rendering/RenderBlock.cpp:
(WebCore::RenderBlock::computePreferredLogicalWidths):

git-svn-id: http://svn.webkit.org/repository/webkit/trunk@245966 268f45cc-cd09-0410-ab3c-d52691b4dbfc",3618133
471,2019-10-28T07:52:46Z,2019-10-28T14:46:50Z,,,"Hi Fred,
This patch reattached the scrolling node in resetScroll(), make sure it won't be affected by last scrolling.
And add test with a combination of instant and smooth sroll.

PTAL, thanks:)",3618133
472,2019-10-27T22:30:40Z,2020-01-24T20:04:13Z,,,Fixes https://github.com/web-platform-tests/wpt/issues/19936,3618133
473,2019-10-24T03:41:38Z,2020-01-24T20:02:22Z,,,"The HTML standard doesn't have such behavior, and Safari TP with
delegatesFocus suport doesn't have it.

Bug: 1014094
Change-Id: Ic27bbc7be08fe85790c859acddd3ebaa9b7ccce7
Reviewed-on: https://chromium-review.googlesource.com/1877867
WPT-Export-Revision: e64b0eb1f72078a1291296c0b97382fdc9bb50e6",3618133
474,2019-10-22T20:59:18Z,2020-01-24T20:02:21Z,,,"max-width is sometimes honored, sometimes not, when distributing tables'
excess width according to the spec and Firefox. Chrome doesn't honor it
in either of these tests.

I expect that we have some very old tests that assert the opposite of
this new failing test cell-max-width-001; we'll have to figure out which
we want to honor in TablesNG and maybe lobby for a spec change :/

These are tests only, no behavior change.

Bug: 482057
Change-Id: I815fc0c689a2043933983beb9ffcb6c46778adea

Reviewed-on: https://chromium-review.googlesource.com/1873876
WPT-Export-Revision: 6f734591577b64695045d74a0b471847ba14d067",3618133
475,2019-10-22T05:29:43Z,2019-12-18T18:10:41Z,,,Fixes https://github.com/web-platform-tests/wpt/issues/19799,3618133
476,2019-10-21T14:27:14Z,2020-01-24T19:59:52Z,,,See https://github.com/whatwg/html/issues/5020.,3618133
477,2019-10-17T19:16:05Z,2020-01-24T20:02:17Z,,,"This is a reland of 005483fe14c968325e6c8735eb6077049ee997ef

Original change's description:
> [Trusted Types] Remove TrustedURL.
>
> The current Trusted Types spec no longer supports TrustedURL. This CL adapts
> to the spec.
>
> Bug: 1002555
> Change-Id: I35c6d8a257046558f155b9f38289457b14dcb1d2
> Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1834142
> Commit-Queue: Daniel Vogelheim \<vogelheim@chromium.org>
> Reviewed-by: Mike West \<mkwst@chromium.org>
> Cr-Commit-Position: refs/heads/master@{#706886}

TBR=vogelheim@chromium.org,mkwst@chromium.org

Bug: 1002555
Change-Id: I62f18c50a7dc181ec3c57271a36e5d289f7c8358

Reviewed-on: https://chromium-review.googlesource.com/1866557
WPT-Export-Revision: 576f6a0c8d80d6a42833f02b27b0a1d4792b6de6",3618133
478,2019-10-17T17:41:49Z,2020-01-24T20:02:18Z,,,"This is a reland of 005483fe14c968325e6c8735eb6077049ee997ef

Original change's description:
> [Trusted Types] Remove TrustedURL.
> 
> The current Trusted Types spec no longer supports TrustedURL. This CL adapts
> to the spec.
> 
> Bug: 1002555
> Change-Id: I35c6d8a257046558f155b9f38289457b14dcb1d2
> Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1834142
> Commit-Queue: Daniel Vogelheim \<vogelheim@chromium.org>
> Reviewed-by: Mike West \<mkwst@chromium.org>
> Cr-Commit-Position: refs/heads/master@{#706886}

Bug: 1002555
Change-Id: Id8aef7e172d223c7672d618cfc824792506a0e61

Reviewed-on: https://chromium-review.googlesource.com/1867049
WPT-Export-Revision: 0602bbcd13fc85382287cacffa99556a94470af2",3618133
479,2019-10-17T16:38:09Z,2020-01-24T20:02:12Z,,,"If NaN is produced in an AudioParam (usually from a connection that
produces NaN), then the NaN value is replaced with the default value
from the AudioParam.

See spec issue https://github.com/WebAudio/web-audio-api/issues/2077

Bug: 1013345
Test: the-audioparam-interface/nan-default.html
Change-Id: I119bcc3a450523e9b87066c6b76369ce0336e3dc

Reviewed-on: https://chromium-review.googlesource.com/1857479
WPT-Export-Revision: ef264239862d5b4c18f63712c6bb1b2dac0f0972",3618133
480,2019-10-17T10:35:08Z,2020-01-24T20:04:06Z,,,"This is to avoid the subprocess output appearing before the
""Running %s [try %d/%d]"" message.",3618133
481,2019-10-16T22:27:42Z,2020-01-24T20:02:15Z,,,"This change removes an unnecessary update to children of
\<input type=""text""> elements when any attribute is modified on the
element.

A similar patch was made in WebKit here:
https://bugs.webkit.org/show_bug.cgi?id=111990

In the WebKit patch, the update still occurs if the attribute is ""value""
or ""placeholder."" We already handle ""value"" attribute changes in a case
in HTMLInputElement::ParseAttribute, and we already handle ""placeholder""
attribute changes in TextControlElement::ParseAttribute. Since we handle
those cases explicitly, we can remove the entire AttributeChanged
function.

Bug: 1012774
Change-Id: Ib75fde9c5b3e1f9eea4232bf5bfa915d573b9c7e
Reviewed-on: https://chromium-review.googlesource.com/1865658
WPT-Export-Revision: f58759413f0f60c429a5f64b522e07998bc8da71",3618133
482,2019-10-16T17:27:20Z,2019-11-04T07:07:51Z,,,"There are 32 tests in the file.

Currently, the test assumes that the structure is preserved. This is still
up in the air (#15). If that changes, then the elements with id=""ref_xxx""
need to change, but everything else should remain unchanged.

I have removed the old tests which were more limited (fixes #159)",3618133
483,2019-10-16T11:52:03Z,2020-01-24T20:02:14Z,,,"When serializing grid-template-rows/columns of a grid container, we get
the list of used track sizes, and then insert line names at the
corresponding indices.

Before this patch, these indices were simply taken from the computed
value. However, leading implicit tracks appear in the used value but not
in the computed one. Therefore, we have to offset the indices so that
the line names appear at the proper positions.

BUG=790988

TEST=external/wpt/css/css-grid/parsing/grid-template-columns-computed-implicit-track.html
TEST=external/wpt/css/css-grid/parsing/grid-template-rows-computed-implicit-track.html

Change-Id: I778c73034c7ff9fc11a7d8a46a4042cfd1bcd1ae
Reviewed-on: https://chromium-review.googlesource.com/1863092
WPT-Export-Revision: cfa0e002da0b60570db665060f8d7d7c7d000ae8",3618133
484,2019-10-16T10:06:24Z,2020-01-24T20:02:09Z,,,"This prevents resource exhaustion for applications that use many
PeerConnections, but only a few at a time, and don't use enough memory
to trigger garbage collection in the normal course of evens.

Bug: chromium:825576
Change-Id: I6794837f6bc873c0fb6c389784361cd6dea77d07
Reviewed-on: https://chromium-review.googlesource.com/1849674
WPT-Export-Revision: cda694b25272bd89857fcd0962b8a1e9428d0ed3",3618133
485,2019-10-15T23:29:34Z,2019-11-08T22:10:26Z,,,"The `indexeddb_test` helper function uses `async_test` internally, and
subtests defined with `async_test` execute in parallel. If such tests
observe interactions with a globally-defined API (such as the Object
prototype), they may receive unreliable results.

Define the subtest which observes a global API in order to eliminate the
risk of unintended subtest interactions.",3618133
486,2019-10-15T16:33:26Z,2020-03-24T05:23:41Z,,,"Replace all Legacy table layout objects with NG versions.

Modify creator methods to switch between Legacy and NG.

layout algorithm

Modern casting helpers.

LayoutObject::IsLegacyTable

Fix up CreateAnonymous methods on table/section/row

Bug: 958381
Change-Id: I7c9a69fa1b32a3c157d2cd95c2da6789623b486a
Reviewed-on: https://chromium-review.googlesource.com/1730138
WPT-Export-Revision: 43f91f76fd201b8de55a2fe3e4a3e907bd4b42c1",3618133
487,2019-10-15T10:50:10Z,2019-12-02T20:32:10Z,,,"Test for https://github.com/w3c/webdriver/issues/1450. This is based on the currently spec'd behaviour, which nobody implements.",3618133
488,2019-10-15T09:59:46Z,2020-01-24T19:59:49Z,,,For https://github.com/whatwg/html/issues/4965.,3618133
489,2019-10-14T23:39:49Z,2020-01-24T20:02:13Z,,,"Filed a csswg issue. This test covers
the algorithm as I understand it.

Change-Id: I819735ce0aa6c1134138bdf33be14253cb6a0282
Reviewed-on: https://chromium-review.googlesource.com/1860400
WPT-Export-Revision: a513a0295a7a119cb2714c19af242cd4740d4263",3618133
490,2019-10-14T13:35:47Z,2019-10-16T19:49:40Z,,,"This goes along with this PR: https://github.com/w3c/webdriver/pull/1445

Tests are a little tricky since I have to use the spec to set things in order to use them in execute script. I know I don't want to write `pin_script` method 3 times here, but I'm not sure where to put it so that it is correct.

Also, my Python is rusty. :)",3618133
491,2019-10-14T13:20:29Z,2019-10-16T19:49:36Z,,,currently not verifying that scripts can take arguments.,3618133
492,2019-10-11T17:58:50Z,2020-02-18T22:01:51Z,,,"This is a prototype taking into account the feedback from
https://github.com/whatwg/html/pull/4248 .

It basically adds a new interface to hold imagebitmapoptions
while preserving the same old functionality with an imagebitmapoptionsinit.

Bug: 983173
Change-Id: I622e10c892a552accd9c4b80c9f453ac9e10ced8

Reviewed-on: https://chromium-review.googlesource.com/1698123
WPT-Export-Revision: 516da038ed2312c4526d5cdb2c5c76dcbd68602d",3618133
493,2019-10-10T18:48:34Z,2020-02-26T18:39:59Z,,,"This follows the changes in whatwg/html#2673, but also tests the issue at whatwg/html#2137 in favor of the current spec.

Originally at https://github.com/web-platform-tests/wpt/pull/5911.",3618133
494,2019-10-09T20:11:29Z,2020-01-24T20:02:10Z,,,"Change-Id: I8e381cd3410f032cc6fd2938375789158105e4b1
Reviewed-on: https://chromium-review.googlesource.com/1850108
WPT-Export-Revision: 74b2aecc450272fdcbfa249536e7c21d7419ba00",3618133
495,2019-10-08T22:13:59Z,2020-01-24T20:02:07Z,,,"This is the second part of landing an experimental prototype of new
non-preemptive MSE eviction policies. Combined prototype CL is [1].
First part (Chromium portion) is [2].

This CL adds an experimental (MediaSourceExperimental) new MSE API to
modify the eviction policy of a SourceBuffer. Successful setting of the
eviction policy is constrained to only be allowed before the
SourceBuffer has processed its first initialization segment.

The pre-existing, now default, logic uses the ""normal"" policy. Two new
policies are added: ""before-next-demuxed"" and ""before-current-gop"". The
latter currently has no different behavior in the Chromium
implementation: it behaves precisely like the default ""normal"" policy.
Later CLs may refine or remove ""before-current-gop"".

""before-next-demuxed"" enables new ""infinite GOP"" buffering scenarios,
where the keyframe interval might be extreme and prevent successful
buffering of an entire huge GOP if using the ""normal"" policy. As part of
the prepare append algorithm, ""before-next-demuxed"" removes anything
buffered before the next demuxed frame (including any previous buffered
ranges). Note that if the next demuxed position is not within any
buffered range, this policy may preserve buffered ranges earlier than
current media time. This allows for newly buffered GOPs for current
media time to have their keyframes preserved until they are demuxed.
This mode will fall-back to the ""normal"" policy if not enough space has
been freed to accommodate the newly appended data, and may emit quota
exception if even ""normal"" policy fails to free enough space.

Naming of the new eviction policies may change during
discussion/feedback on the incubation proposal/explainer, which also
needs updating to reflect design decisions taken during this prototype's
development so far. Versus the original explainer, this prototype:

* Gives exception on changing the eviction policy after ""first
  initialization segment received flag"" is true. Later spec smithing
  could re-allow this, for instance, to switch back to ""normal"" to
  accomplish a (deterministic) seek, if this limitation is undesired.

* Prevents seeking if using ""before-next-demuxed"" eviction policy in an
  active SourceBuffer. Seeking would introduce complexities such as
  indeterminate behavior especially if asynch append, perhaps on worker
  context, is concurrent with seek, and seek evicts all ""partial GOPS""
  whose keyframes are no longer buffered. Later spec smithing could
  re-allow this if such indeterminacy is non-prohibitive.
 * Mechanism: HTMLME::seekable reports empty range if any
   activeSourceBuffer is using before-next-demuxed.
 * set,clearLiveSeekableRange unchanged, since the ::seekable logic for
   before-next-demuxed returns early with empty range
 * See the Chromium-side CL [2] for further discussion of some internal
   range seeking/selection behavior that is retained even in
   ""before-next-demuxed"".

[1] https://chromium-review.googlesource.com/c/chromium/src/+/1616976
[2] https://chromium-review.googlesource.com/c/chromium/src/+/1848364

Explainer (may still be the original one, that has since been
constrained to prevent seeking, for instance, by this prototype):
https://github.com/wicg/media-source/blob/mse-eviction-policies/mse-eviction-policies-explainer.md

BUG=963717

Change-Id: Ic1b4abc8f6de9b8012fb9b73e8fef8668c2a6c1a
Reviewed-on: https://chromium-review.googlesource.com/1847748
WPT-Export-Revision: d48bf88d1cb6fcb82a76aa1a0490117b15544cb9",3618133
496,2019-10-07T11:21:39Z,2020-03-27T06:39:30Z,,,"This PR was automatically created by a bot.

Before merging, please check that any tests that depend on the updated IDL files still work.

If additional changes are needed, please manually create another PR based on this one.

See the [README](https://github.com/web-platform-tests/wpt/blob/master/interfaces/README.md) for how the IDL files in this directory are used.

<hr>

Note: This file was recently manually updated in commit 238225a1d4.
      This commit may revert some of those changes.

Source: https://github.com/tidoust/reffy-reports/blob/6b70bd8/ed/idl/font-metrics-api.idl
Build: https://travis-ci.org/tidoust/reffy-reports/builds/594541612

",3618133
497,2019-10-07T08:34:13Z,2020-01-24T20:02:04Z,,,"Change-Id: I95809bc7c1c04918c18e11e9c4d1e5087d665228
Reviewed-on: https://chromium-review.googlesource.com/1843931
WPT-Export-Revision: 33a0792729625f9c42ab4f3056ed6971e4242797",3618133
498,2019-10-07T06:01:53Z,2020-01-24T20:02:06Z,,,"add_completion_callback() doesn't wait for settling a promise. This replaces it
with promise_test().

R=yhirano@chromium.org

Bug: none
Change-Id: I58f4dceacbad533390997e55610875376e9f63ae
Reviewed-on: https://chromium-review.googlesource.com/1844006
WPT-Export-Revision: 057a29f90bbee84e28c639feb4b35998b2414ce3",3618133
499,2019-10-07T02:34:32Z,2020-01-24T20:02:05Z,,,"I supported compression level and bufferSize as options for
CompressionStream and DecompressionStream, and added some tests
to check them.

I also added html files to measure the performances in various
situations.

Bug: 999091
Change-Id: I65a64b460ab3965bcc3da04001739c005b9f5ea4
Reviewed-on: https://chromium-review.googlesource.com/1843996
WPT-Export-Revision: 9bba9f1d652be539aecfcda29701606af1a43796",3618133
500,2019-10-06T18:29:15Z,2020-03-17T09:49:22Z,,,,3618133
501,2019-10-04T23:53:30Z,2020-01-24T20:02:03Z,,,"Currently in Chrome, previous to this CL, hitting CTRL-A
inside a TextArea containing text that ends with a newline
would cause the selectionEnd property to be incorrect.
selectionEnd returns a number that's 1 pass the end of text.

This is because TextControl automatically inserts an BRElement
at the end when the last child is a carriage return. And the
inserted node is taken into consideration when calculating the
selection range.

The fix is to ignore this last child if it's a BRElement.

Tested with carriage return inserted into the beginning, middle and end
of text to make sure there's no regression.

Bug:882614
Change-Id: Idc7a1f098556fc74b89f3041e3f5f35e127eed78

Reviewed-on: https://chromium-review.googlesource.com/1838549
WPT-Export-Revision: 71deba183166883ee1e71a4309eade888448b020",3618133
502,2019-10-04T16:14:37Z,2020-01-24T20:01:24Z,,,"To be landed when the spec changes land.
https://github.com/whatwg/storage/pull/69

Bug:904000
Change-Id: I630c3b73b4ad52f901eabddc7902973309a655f9

Reviewed-on: https://chromium-review.googlesource.com/1700564
WPT-Export-Revision: 44825f4b2ad3fd9b712ce113982dac3ad6ee8f8a",3618133
503,2019-10-04T14:34:51Z,2020-01-31T19:45:34Z,,,"This implements supports for uploading a list of artifacts to staging.wpt.fyi for processing the results.
The way to use this is something like:

```
./wpt tc-download --upload --ref ${HASH_GITHUB_COMMIT} \
    --user ${username_at_staging_wpt_fyi} \
    --password ${password_at_staging_wpt_fyi} \
    --filter-artifact ${browser_name}
```

The option `--filter-artifact=""string""` is used to only process the artifacts that contain ""string"". It can be also used for downloading only specific artifacts.

Now is required to specify either `--download` to download the artifacts or `--upload` to upload the list of artifacts to staging.wpt.fyi (it doesn't download the artifact, it just sends a list with URLs)",3618133
504,2019-10-03T01:07:46Z,2020-01-24T20:00:59Z,,,"https://github.com/whatwg/html/issues/4320

- Chromium/Firefox/Safari don't handle \<form referrerpolicy>
  attributes.
- Chromium/Firefox apply Document's referrer policy to
  \<form> requests, while Safari doesn't.

Change-Id: Ib8ba75007f6e59ff19b92e4f917050a2d59a3ba1

Reviewed-on: https://chromium-review.googlesource.com/1562760
WPT-Export-Revision: 636a004f3e1ba385a0c01f74acd32baf995f1c7d",3618133
505,2019-10-02T17:17:27Z,2020-01-24T20:02:02Z,,,"Change-Id: I82f4a8689b3892eac47eeaddaac3e1c5067e152b
Reviewed-on: https://chromium-review.googlesource.com/1836013
WPT-Export-Revision: b031ba8bbca586890ce1d4ef07a2fb6c486841b6",3618133
506,2019-10-02T13:32:52Z,2020-01-24T20:01:59Z,,,"getComputedStyle() was serializing ""z 90deg"" as ""90deg"".

We now distinguish between 2D and 3D rotations in the computed value.

Bug: 1006239
Change-Id: I99f73a0d0d5771851aa8dac3321a75cdc4f34874
Reviewed-on: https://chromium-review.googlesource.com/1833368
WPT-Export-Revision: 588862d5aae750198fea721dd7e0cdb8402bfdad",3618133
507,2019-10-02T04:24:09Z,2020-01-24T20:01:12Z,,,"Naming of the new eviction policies may change during discussion/feedback on the incubation
proposal/explainer, which also needs updating to reflect design decisions taken during
this prototype's development so far. Versus the explainer, this prototype:

* Gives exception on changing the eviction policy after ""first initialization segment
  received flag"" is true. Later spec smithing could re-allow this, for instance, to
  switch back to ""normal"" to accomplish a (deterministic) seek, if this limitation is
  undesired.

* Prevents seeking if using 'before-next-demuxed' eviction policy in an active SourceBuffer.
  Seeking would introduce complexities such as indeterminate behavior especially if asynch
  append, perhaps on worker context, is concurrent with seek, and seek evicts all
  ""partial GOPS"" whose keyframes are no longer buffered. Later spec smithing could re-allow
  this if such indeterminacy is non-prohibitive.
 * Mechanism: HTMLME::seekable reports empty range if any activeSourceBuffer is using
   before-next-demuxed.
 * set,clearLiveSeekableRange unchanged, since the ::seekable logic for before-next-demuxed
   returns early with empty range

* Does not condition behavior relative to background suspend or track enable/disable; if the
  'before-next-demuxed' evicts the keyframe for the current GOP, then resumption following
  suspend or track re-enablement may require rebuffering (especially if there is no keyframe
  that could satisfy the seek).
  App-visible 'waiting' event should occur, as per usual playback stall requiring re-buffering
  (or seeking if the GC mode allows that via non-empty seekable ranges). If app receives
  'waiting' while currentTime is in a buffered range, it could be decoder underflow, or an
  internal disabling/reenabling of the track without a keyframe nearby; difficult for app to
  decipher. To reduce this confusion, multiple options might be considered for development,
  including at least:
  * If background track disable, explicit track disable, or (Android) WMPI suspend occurs,
    rebuffering media beginning with a keyframe at currentTime will likely be required before
    playback can proceed following track enable/WMPI resumption. Some mitigation might be to
    prevent stream disabling related to background video track optimizations for players
    using MSE with any SourceBuffer using the 'before-next-demuxed' eviction policy.
  * Alternatively, use the existing tracks selected/deselected + eventing when any explicit (or
    implicit-due-to suspend/resume or backgrounded-video-optimization) track changes occur. This
    would probably require a bit of work to ship AudioVideoTracks RuntimeEnabled feature beyond
    experimental, and connect the implicit track enable/disable select/deselect behavior into
    the corresponding track(s) in Blink to emit those events.
  * Also, upon internal preroll when track ever becomes re-enabled, if the seek to begin preroll
    cannot find keyframe before the seek time, yet that time is within a buffered range, then
    perhaps consider dropping the partial GOP containing the seek time, such that app can detect
    lack of it being buffered.
  * Also, since the ""before-next-demuxed"" mode chains to ""normal"" mode if not enough is evicted
    to make room, consider automatically evicting partial GOP containing currentTime for disabled
    tracks when in ""before-next-demuxed"" mode and doing the prepare append algorithm's GC. This
    would enable more proactive visibility of real ""buffered"" for disabled tracks, assuming an
    append of any size, even 0, had been done just prior, to the SourceBuffer containing the
    disabled track(s) in ""before-next-demuxed"" mode.

Explainer:
https://github.com/wicg/media-source/blob/mse-eviction-policies/mse-eviction-policies-explainer.md

BUG=963717

Change-Id: I33c7839995a32dd490201c5b672a5e9bf946abc0
Reviewed-on: https://chromium-review.googlesource.com/1616976
WPT-Export-Revision: 671685e0af3822fb6f01d78e803e2609167a674b",3618133
508,2019-10-01T20:08:28Z,2020-01-24T20:02:01Z,,,"Change-Id: Ic057699b4c85cb6d5771563a2470fbf84f3e945c
Reviewed-on: https://chromium-review.googlesource.com/1833744
WPT-Export-Revision: 0069668bb38a1225c7eb1fd4318f41f6ce3d6869",3618133
509,2019-09-27T20:45:18Z,2019-10-20T07:35:53Z,,,,3618133
510,2019-09-25T15:03:33Z,2019-09-26T00:19:03Z,,,"There is an open bug on Bugzilla about this feature: https://bugzilla.mozilla.org/show_bug.cgi?id=1558865

I am not entirely sure it is relevant to test both cases; both tests seem relevant depending on the device, but please let me know if there is a better way to handle this, thanks!",3618133
511,2019-09-25T11:22:09Z,2020-01-24T20:01:57Z,,,"Change-Id: Iab5cfafda9e0a0677f762f848eda44688ae16c3b
Reviewed-on: https://chromium-review.googlesource.com/1822458
WPT-Export-Revision: 17eb18a47ea925cf72febd86a9d898cf12f0774b",3618133
512,2019-09-25T09:02:21Z,2020-03-27T06:39:25Z,,,"This PR was automatically created by a bot.

Before merging, please check that any tests that depend on the updated IDL files still work.

If additional changes are needed, please manually create another PR based on this one.

See the [README](https://github.com/web-platform-tests/wpt/blob/master/interfaces/README.md) for how the IDL files in this directory are used.

<hr>

Source: https://github.com/tidoust/reffy-reports/blob/3812454/ed/idl/css-nav.idl
Build: https://travis-ci.org/tidoust/reffy-reports/builds/653884183

",3618133
513,2019-09-24T00:31:12Z,2020-01-24T20:04:25Z,,,"https://chromium-review.googlesource.com/c/chromium/src/+/1070210/ explicitly removed the commit call. The only place I see in the spec that suggests that commits happen automatically as part of the event loop is a non-normative note in https://html.spec.whatwg.org/multipage/canvas.html#offscreencontext2d-commit-dev, and Chrome [fails this test](https://wpt.fyi/results/offscreen-canvas/the-offscreen-canvas/offscreencanvas.commit.html?label=master&label=experimental&aligned&q=offscreencanvas.commit).",3618133
514,2019-09-24T00:14:56Z,2020-01-24T20:01:56Z,,,"One scrollbar status change can trigger status change in the other
scrollbar.

Existing code assumed that this did not happen.

The fix runs a possible 3rd layout pass when this happens.

Bug: 1007065
Change-Id: I32e51d42b67636e15c94ed077efa159a6c0a848d
Reviewed-on: https://chromium-review.googlesource.com/1820177
WPT-Export-Revision: 9d32bb55d74c1195989b3dc4a8730f020aca78d9",3618133
515,2019-09-20T12:48:21Z,2020-01-31T19:41:21Z,,,"This PR does 2 things:

1) Stop the WebDriver client before stop the WebDriver runner. This is important because allows to the WPT framework to finalize the WebDriver session properly. In other case the WebDriver process end before the WebDriver sessions is ended causing a `connection reset by peer` in `httplib` for the WebDriver client and finally this error breaks down in a  `UNEXPECTED` exception.
2) Terminate the test_runner_proc thread, to ensure no deadlocks situations where the Manager ends but not the subprocess for the test runner process.",3618133
516,2019-09-19T13:37:31Z,2020-01-30T12:41:26Z,,,"Bug: 940875
Change-Id: I9b70af8da9ab76812fbffe0f100eb6749a3fce79
Reviewed-on: https://chromium-review.googlesource.com/1805643
WPT-Export-Revision: ffcc3f547c7df4ff740b6d62e158536d9d09a267",3618133
517,2019-09-19T10:38:02Z,2020-01-24T20:01:54Z,,,"If we have layout containment we don't need to recompute overflow
in the ancestors, as nothing would change regarding overflow
outside of the contained element.

This patch modifies
LayoutObject::MarkContainerChainForOverflowRecalcIfNeeded()
so we stop marking containers for overflow recalc if we reach
an element with ""contain: layout"".

This improves performance on the test cases attached to the bug.
Those tests were only modifying an element that has an ancestor
with layout containment in a very big DOM.
However LayoutBlock::RecalcChildLayoutOverflow() was called
all the elements in the DOM when it was not actually needed.
With this change we prevent that to happen, so it's only called
for the modified element.

BUG=970224
TEST=external/wpt/css/css-contain/contain-strict-overflow-001.html

Change-Id: I7a891e9ecab626c25ae2129cbe435864eed640d5

Reviewed-on: https://chromium-review.googlesource.com/1810520
WPT-Export-Revision: 0e20fee40046360336e71cccdc0d560fc748e9d7",3618133
518,2019-09-18T20:19:49Z,2020-01-24T20:01:55Z,,,"Show/Hide are normally called via the style getting adjusted on a
FrameView via StyleDidChange on LayoutEmbeddedContent. But when
it is a RemoteFrameView it sends the FrameVisibility message up to the
browser, however it doesn't come back down to call Show/Hide for
the other process' FrameView.

BUG=996313

Change-Id: I8a743d2f0b929aec17cff11288ad9cfbae35b5f2
Reviewed-on: https://chromium-review.googlesource.com/1811640
WPT-Export-Revision: 503ef578c61618bba9f6aaf5ac153adef7ee34bb",3618133
519,2019-09-16T23:04:27Z,2019-10-14T20:25:00Z,,,,3618133
520,2019-09-16T19:13:50Z,2020-01-24T20:01:19Z,,,"Bug: 724598
Change-Id: Id55fde10149fe72cc5a7e12c1596fb51a5d36516

Reviewed-on: https://chromium-review.googlesource.com/1685677
WPT-Export-Revision: d6c4597e7fd476a0447cc9250ab65b9e8c214f69",3618133
521,2019-09-12T09:18:34Z,2020-01-24T22:34:12Z,,,"This often fails in Safari:
https://wpt.fyi/results/mediacapture-fromelement/capture.html?run_id=297370005&run_id=319850011&run_id=297350007&run_id=314120009&run_id=291640006&run_id=303100001&run_id=306790008&run_id=305230003&run_id=277400002&run_id=293380001",3618133
522,2019-09-09T10:46:42Z,2020-01-24T20:04:02Z,,,"Because the promise callbacks containing the asserts weren't wrapped
in `t.step_func` a failed assert turned into a harness error:
https://staging.wpt.fyi/results/mediacapture-image/MediaStreamTrack-getConstraints-fast.html?run_id=227500002&run_id=259130004&run_id=253190002&run_id=247230003

This masked that the tests were actually failing.",3618133
523,2019-09-07T00:46:10Z,2019-09-28T04:10:58Z,,,"Tests 'none' and single counter values.
https://drafts.csswg.org/css-lists-3/#counter-reset
https://drafts.csswg.org/css-lists-3/#increment-set

More complex tests are deferred for now:
https://github.com/w3c/csswg-drafts/issues/4216",3618133
524,2019-09-06T21:40:02Z,2020-01-24T20:01:51Z,,,"Proposed implementation and test change for
https://github.com/w3c/csswg-drafts/issues/413

Change-Id: I4207cb9f91fd8743185e16fb87cd44f9b925cebd

Reviewed-on: https://chromium-review.googlesource.com/1789207
WPT-Export-Revision: c68b1976976c8cdac623e51ebf12c03c5547817c",3618133
525,2019-09-06T20:28:06Z,2020-01-24T20:01:52Z,,,"Most of cases users assume that we are sending the events
synchronously. In order to make all Webdriver Action API user cases
work, we added a flag in the action dictionary to indicate if we want
to dispatch events synchronously or asynchronously. The default way is
synchronously.

Bug: 999814, 606367
Change-Id: Iefe1e2f23960b2e0755b37402a78d99f50fbc289

Reviewed-on: https://chromium-review.googlesource.com/1789472
WPT-Export-Revision: ca4a0fc92a42287b006fc643f3923bb59f96025d",3618133
526,2019-09-05T17:31:33Z,2020-01-24T20:01:32Z,,,"Previous to this CL, and after [1], if a form Submit button had an
onclick handler that also called form.submit() and did not call
event.preventDefault(), the form would get submitted twice. The second
request was eventually cancelled, but not before it hit the network.
This behavior is specified in [2], through the ""plan to navigate""
mechanism. In the case of this bug, the ""click"" event occurs first,
and changes the ""planned navigation"". Then, because the click handler
does not preventDefault(), the default submit action is executed,
which changes the ""planned navigation"", replacing the navigation
queued by the onclick handler. Therefore, only the default submit
navigation is performed.

Note that there are other potential interactions which are less
clearly specified, and which are not addressed in this CL.
For example:

  \<iframe id=""test"" name=""test"">\</iframe>
  \<form id=form1 target=""test"" action=""click.html"">\</form>
  \<a target=""test"" onclick=""form1.submit()"" href=""href.html"">Test\</a>

In this case, clicking the \<a> link first submits the form (to
click.html), and then queues a navigation to href.html. Because
the navigation to href.html is specified (in [3]) to ""queue a
navigation"", independently of the planned navigation specified
in [2], it is unclear when/whether the form submission should
take place. The spec ([4]) does have provisions for canceling
existing navigations, but that leaves room for the form to still
get to the network in this case, before getting canceled.

[1] https://chromium.googlesource.com/chromium/src/+/6931ab86f19aa79abbdd0c1062084e16b5c4f0f6
[2] https://www.w3.org/TR/html52/sec-forms.html#form-submission-algorithm
[3] https://html.spec.whatwg.org/#following-hyperlinks
[4] https://html.spec.whatwg.org/#navigating-across-documents

Bug: 977882
Change-Id: Iaef0067fa9136c074ab94b1c7baa95cff5c145ce
Reviewed-on: https://chromium-review.googlesource.com/1763441
WPT-Export-Revision: b33e60278a3c1042a3e3d2bc6d645dc7d30e2519",3618133
527,2019-09-05T10:08:18Z,2020-01-24T20:04:01Z,,,"If ""securitypolicyviolation"" is fired, it results in a harness error:
https://wpt.fyi/results/content-security-policy/script-src/script-src-strict_dynamic_in_img-src.html?run_id=297090015&run_id=295220010&run_id=305100004

Make it another way to fail the (only) test instead.",3618133
528,2019-09-04T19:46:08Z,2020-01-24T20:01:50Z,,,"Change-Id: I0c82a619a9e9c0a45b0c9a498dfd5fb508fe6ed5

Reviewed-on: https://chromium-review.googlesource.com/1784803
WPT-Export-Revision: b0a846e27eb6e4bbb703a7f1b7c76b734233bee2",3618133
529,2019-09-04T11:22:40Z,2020-01-24T20:01:44Z,,,"We want to priortize loading and compositing tasks till FCP which breaks this test.
Upon investigation I discovered there was a latent race between installing the
intersection observer and the initial layout leading to empty IntersectionGeometry.
Waiting for a rAF in cross-origin-subframe.html before installing the observer
fixes this.

Bug: 971191
Change-Id: Ia10122a4bd45fd23311527c2f35cf800e3e2512e
Reviewed-on: https://chromium-review.googlesource.com/1782850
WPT-Export-Revision: 90761b7654605942106df92bed53ca46e0e51799",3618133
530,2019-09-04T10:29:57Z,2020-02-07T08:19:36Z,,,,3618133
531,2019-09-03T20:14:45Z,2020-01-24T20:01:48Z,,,"BUG=994063

Change-Id: Ie69c8416707483fa6ed9f0d68d84140c750fa0c2
Reviewed-on: https://chromium-review.googlesource.com/1783223
WPT-Export-Revision: 37fb84dc50cb7cfb228d44e043bf742cd2b41f78",3618133
532,2019-09-03T19:03:34Z,2020-01-24T20:01:42Z,,,"fix


revert


fix lint


format


[WPT/common/security-features] Support nested source contexts

To enable `spec.src.json` to specify (possibly nested) source contexts,
this CL adds `source_context_list_schema` that represents
source contexts from where subresource requests are sent,
and how policies are delivered (by source contexts or subresource requests).
This CL adds `source_context_list` field to each `test_expansion` entry,
of which value is the key of `source_context_list_schema` to be used.

This CL adds `source_context_schema` and `subresource_schema`
that represent supported delivery types and subresources
for each source context or subresource type. These are used:
- To filter out test files for unsupported combinations of delivery types,
  source contexts and subresources.
  A part of the filtering was removed in
  https://chromium-review.googlesource.com/c/chromium/src/+/1717535
  and this CL re-adds it (in a different form of implementation).
- To determine what delivery types should be used for `anotherPolicy`
  placeholder.

After this CL, the generate.py generates `source_context_list` and
`subresource_policy_deliveries` fields that are passed directly
without coversion.
Specifically,
- The conversion from `classic-data-worker-fetch` to
  `classic-data-worker` + `fetch-request` in mixed-content-test-case.js
  is removed.
- \<iframe srcdoc>-related tests for `img-tag` referrer-policy tests
  are split into separate tests, and related code in
  referrer-policy-test-case.sub.js is removed.
  Instead, to support tests inside \<iframe srcdoc>, this CL adds
  `referrerSource` calculation that can support \<iframe srcdoc>s.

This CL also changes the structure of generated file names.
Now all files are generated under a dedicated directory `gen/`.

This CL creates `test-case.sub.js` instead of modifying
`referrer-policy-test-case.sub.js` etc., because:
  After this CL, I'll commit new generated test HTML files,
  incrementally in order to monitor potential regressions,
  Because thousands of files are modified, split, and renamed.
  During the incremental commits, `test-case.sub.js` is used
  by new generated tests while
  `referrer-policy-test-case.sub.js` etc. are still used by
  old tests.
  After all commits are done, `referrer-policy-test-case.sub.js`
  etc. will be removed.

`test-case.sub.js` reflects renaming of JSON keys and values done
in previous commits.
- opt_in_method -> delivery_type/value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717107
- delivery_method -> delivery_type
   https://chromium-review.googlesource.com/c/chromium/src/+/1716109
- referrer_policy -> delivery_value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717592
- source_protocol -> source_scheme
   https://chromium-review.googlesource.com/c/chromium/src/+/1717115
   https://chromium-review.googlesource.com/c/chromium/src/+/1718991
- target_protocol + origin -> origin
  https://chromium-review.googlesource.com/c/chromium/src/+/1717470
- Use shorter values for origin and redirection
  https://chromium-review.googlesource.com/c/chromium/src/+/1717475
- referrer_url -> expectation
  https://chromium-review.googlesource.com/c/chromium/src/+/1717319

Bug: 906850
Change-Id: Ia6695081e5a93355c29fb1bdb7e89ba6b673261f

Remove fetch-request guard and fix typos

revert sub

Add more validation + rename

more

more

Reorder path

Change-Id: Iaf0c4e71db7875b197ca14b94caa496122c6f397
Reviewed-on: https://chromium-review.googlesource.com/1782134
WPT-Export-Revision: 75cb2c51f9d9b575510743592222ac4782df2681",3618133
533,2019-09-03T19:03:09Z,2020-01-24T20:01:37Z,,,"fix


revert


fix lint


format


[WPT/common/security-features] Support nested source contexts

To enable `spec.src.json` to specify (possibly nested) source contexts,
this CL adds `source_context_list_schema` that represents
source contexts from where subresource requests are sent,
and how policies are delivered (by source contexts or subresource requests).
This CL adds `source_context_list` field to each `test_expansion` entry,
of which value is the key of `source_context_list_schema` to be used.

This CL adds `source_context_schema` and `subresource_schema`
that represent supported delivery types and subresources
for each source context or subresource type. These are used:
- To filter out test files for unsupported combinations of delivery types,
  source contexts and subresources.
  A part of the filtering was removed in
  https://chromium-review.googlesource.com/c/chromium/src/+/1717535
  and this CL re-adds it (in a different form of implementation).
- To determine what delivery types should be used for `anotherPolicy`
  placeholder.

After this CL, the generate.py generates `source_context_list` and
`subresource_policy_deliveries` fields that are passed directly
without coversion.
Specifically,
- The conversion from `classic-data-worker-fetch` to
  `classic-data-worker` + `fetch-request` in mixed-content-test-case.js
  is removed.
- \<iframe srcdoc>-related tests for `img-tag` referrer-policy tests
  are split into separate tests, and related code in
  referrer-policy-test-case.sub.js is removed.
  Instead, to support tests inside \<iframe srcdoc>, this CL adds
  `referrerSource` calculation that can support \<iframe srcdoc>s.

This CL also changes the structure of generated file names.
Now all files are generated under a dedicated directory `gen/`.

This CL creates `test-case.sub.js` instead of modifying
`referrer-policy-test-case.sub.js` etc., because:
  After this CL, I'll commit new generated test HTML files,
  incrementally in order to monitor potential regressions,
  Because thousands of files are modified, split, and renamed.
  During the incremental commits, `test-case.sub.js` is used
  by new generated tests while
  `referrer-policy-test-case.sub.js` etc. are still used by
  old tests.
  After all commits are done, `referrer-policy-test-case.sub.js`
  etc. will be removed.

`test-case.sub.js` reflects renaming of JSON keys and values done
in previous commits.
- opt_in_method -> delivery_type/value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717107
- delivery_method -> delivery_type
   https://chromium-review.googlesource.com/c/chromium/src/+/1716109
- referrer_policy -> delivery_value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717592
- source_protocol -> source_scheme
   https://chromium-review.googlesource.com/c/chromium/src/+/1717115
   https://chromium-review.googlesource.com/c/chromium/src/+/1718991
- target_protocol + origin -> origin
  https://chromium-review.googlesource.com/c/chromium/src/+/1717470
- Use shorter values for origin and redirection
  https://chromium-review.googlesource.com/c/chromium/src/+/1717475
- referrer_url -> expectation
  https://chromium-review.googlesource.com/c/chromium/src/+/1717319

Bug: 906850
Change-Id: Ia6695081e5a93355c29fb1bdb7e89ba6b673261f

Remove fetch-request guard and fix typos

revert sub

Add more validation + rename

more

more

Reorder path

Change-Id: Ia82c10b5449e3a16afd718a84fede58b9d4e66a7
Reviewed-on: https://chromium-review.googlesource.com/1780957
WPT-Export-Revision: 02611a856b62063724df6a030cf46b6c9dc73e00",3618133
534,2019-09-03T19:02:42Z,2020-01-24T20:01:38Z,,,"fix


revert


fix lint


format


[WPT/common/security-features] Support nested source contexts

To enable `spec.src.json` to specify (possibly nested) source contexts,
this CL adds `source_context_list_schema` that represents
source contexts from where subresource requests are sent,
and how policies are delivered (by source contexts or subresource requests).
This CL adds `source_context_list` field to each `test_expansion` entry,
of which value is the key of `source_context_list_schema` to be used.

This CL adds `source_context_schema` and `subresource_schema`
that represent supported delivery types and subresources
for each source context or subresource type. These are used:
- To filter out test files for unsupported combinations of delivery types,
  source contexts and subresources.
  A part of the filtering was removed in
  https://chromium-review.googlesource.com/c/chromium/src/+/1717535
  and this CL re-adds it (in a different form of implementation).
- To determine what delivery types should be used for `anotherPolicy`
  placeholder.

After this CL, the generate.py generates `source_context_list` and
`subresource_policy_deliveries` fields that are passed directly
without coversion.
Specifically,
- The conversion from `classic-data-worker-fetch` to
  `classic-data-worker` + `fetch-request` in mixed-content-test-case.js
  is removed.
- \<iframe srcdoc>-related tests for `img-tag` referrer-policy tests
  are split into separate tests, and related code in
  referrer-policy-test-case.sub.js is removed.
  Instead, to support tests inside \<iframe srcdoc>, this CL adds
  `referrerSource` calculation that can support \<iframe srcdoc>s.

This CL also changes the structure of generated file names.
Now all files are generated under a dedicated directory `gen/`.

This CL creates `test-case.sub.js` instead of modifying
`referrer-policy-test-case.sub.js` etc., because:
  After this CL, I'll commit new generated test HTML files,
  incrementally in order to monitor potential regressions,
  Because thousands of files are modified, split, and renamed.
  During the incremental commits, `test-case.sub.js` is used
  by new generated tests while
  `referrer-policy-test-case.sub.js` etc. are still used by
  old tests.
  After all commits are done, `referrer-policy-test-case.sub.js`
  etc. will be removed.

`test-case.sub.js` reflects renaming of JSON keys and values done
in previous commits.
- opt_in_method -> delivery_type/value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717107
- delivery_method -> delivery_type
   https://chromium-review.googlesource.com/c/chromium/src/+/1716109
- referrer_policy -> delivery_value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717592
- source_protocol -> source_scheme
   https://chromium-review.googlesource.com/c/chromium/src/+/1717115
   https://chromium-review.googlesource.com/c/chromium/src/+/1718991
- target_protocol + origin -> origin
  https://chromium-review.googlesource.com/c/chromium/src/+/1717470
- Use shorter values for origin and redirection
  https://chromium-review.googlesource.com/c/chromium/src/+/1717475
- referrer_url -> expectation
  https://chromium-review.googlesource.com/c/chromium/src/+/1717319

Bug: 906850
Change-Id: Ia6695081e5a93355c29fb1bdb7e89ba6b673261f

Remove fetch-request guard and fix typos

revert sub

Add more validation + rename

more

more

Reorder path

Change-Id: I53fc10d0b840a6f432df9acaebd3c3928dc7859e
Reviewed-on: https://chromium-review.googlesource.com/1780958
WPT-Export-Revision: 4d6b1db3e5cb56cc4e12e47c65d6c0b7dd66990d",3618133
535,2019-09-03T19:02:15Z,2020-01-24T20:01:45Z,,,"fix


revert


fix lint


format


[WPT/common/security-features] Support nested source contexts

To enable `spec.src.json` to specify (possibly nested) source contexts,
this CL adds `source_context_list_schema` that represents
source contexts from where subresource requests are sent,
and how policies are delivered (by source contexts or subresource requests).
This CL adds `source_context_list` field to each `test_expansion` entry,
of which value is the key of `source_context_list_schema` to be used.

This CL adds `source_context_schema` and `subresource_schema`
that represent supported delivery types and subresources
for each source context or subresource type. These are used:
- To filter out test files for unsupported combinations of delivery types,
  source contexts and subresources.
  A part of the filtering was removed in
  https://chromium-review.googlesource.com/c/chromium/src/+/1717535
  and this CL re-adds it (in a different form of implementation).
- To determine what delivery types should be used for `anotherPolicy`
  placeholder.

After this CL, the generate.py generates `source_context_list` and
`subresource_policy_deliveries` fields that are passed directly
without coversion.
Specifically,
- The conversion from `classic-data-worker-fetch` to
  `classic-data-worker` + `fetch-request` in mixed-content-test-case.js
  is removed.
- \<iframe srcdoc>-related tests for `img-tag` referrer-policy tests
  are split into separate tests, and related code in
  referrer-policy-test-case.sub.js is removed.
  Instead, to support tests inside \<iframe srcdoc>, this CL adds
  `referrerSource` calculation that can support \<iframe srcdoc>s.

This CL also changes the structure of generated file names.
Now all files are generated under a dedicated directory `gen/`.

This CL creates `test-case.sub.js` instead of modifying
`referrer-policy-test-case.sub.js` etc., because:
  After this CL, I'll commit new generated test HTML files,
  incrementally in order to monitor potential regressions,
  Because thousands of files are modified, split, and renamed.
  During the incremental commits, `test-case.sub.js` is used
  by new generated tests while
  `referrer-policy-test-case.sub.js` etc. are still used by
  old tests.
  After all commits are done, `referrer-policy-test-case.sub.js`
  etc. will be removed.

`test-case.sub.js` reflects renaming of JSON keys and values done
in previous commits.
- opt_in_method -> delivery_type/value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717107
- delivery_method -> delivery_type
   https://chromium-review.googlesource.com/c/chromium/src/+/1716109
- referrer_policy -> delivery_value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717592
- source_protocol -> source_scheme
   https://chromium-review.googlesource.com/c/chromium/src/+/1717115
   https://chromium-review.googlesource.com/c/chromium/src/+/1718991
- target_protocol + origin -> origin
  https://chromium-review.googlesource.com/c/chromium/src/+/1717470
- Use shorter values for origin and redirection
  https://chromium-review.googlesource.com/c/chromium/src/+/1717475
- referrer_url -> expectation
  https://chromium-review.googlesource.com/c/chromium/src/+/1717319

Bug: 906850
Change-Id: Ia6695081e5a93355c29fb1bdb7e89ba6b673261f

Remove fetch-request guard and fix typos

revert sub

Add more validation + rename

more

more

Reorder path

Change-Id: I52afe585f837a5b910ab26775712759960b487a1
Reviewed-on: https://chromium-review.googlesource.com/1783217
WPT-Export-Revision: 96df636a441ec78b1518d64dfc65830703511375",3618133
536,2019-09-03T19:01:45Z,2020-01-24T20:01:40Z,,,"fix


revert


fix lint


format


[WPT/common/security-features] Support nested source contexts

To enable `spec.src.json` to specify (possibly nested) source contexts,
this CL adds `source_context_list_schema` that represents
source contexts from where subresource requests are sent,
and how policies are delivered (by source contexts or subresource requests).
This CL adds `source_context_list` field to each `test_expansion` entry,
of which value is the key of `source_context_list_schema` to be used.

This CL adds `source_context_schema` and `subresource_schema`
that represent supported delivery types and subresources
for each source context or subresource type. These are used:
- To filter out test files for unsupported combinations of delivery types,
  source contexts and subresources.
  A part of the filtering was removed in
  https://chromium-review.googlesource.com/c/chromium/src/+/1717535
  and this CL re-adds it (in a different form of implementation).
- To determine what delivery types should be used for `anotherPolicy`
  placeholder.

After this CL, the generate.py generates `source_context_list` and
`subresource_policy_deliveries` fields that are passed directly
without coversion.
Specifically,
- The conversion from `classic-data-worker-fetch` to
  `classic-data-worker` + `fetch-request` in mixed-content-test-case.js
  is removed.
- \<iframe srcdoc>-related tests for `img-tag` referrer-policy tests
  are split into separate tests, and related code in
  referrer-policy-test-case.sub.js is removed.
  Instead, to support tests inside \<iframe srcdoc>, this CL adds
  `referrerSource` calculation that can support \<iframe srcdoc>s.

This CL also changes the structure of generated file names.
Now all files are generated under a dedicated directory `gen/`.

This CL creates `test-case.sub.js` instead of modifying
`referrer-policy-test-case.sub.js` etc., because:
  After this CL, I'll commit new generated test HTML files,
  incrementally in order to monitor potential regressions,
  Because thousands of files are modified, split, and renamed.
  During the incremental commits, `test-case.sub.js` is used
  by new generated tests while
  `referrer-policy-test-case.sub.js` etc. are still used by
  old tests.
  After all commits are done, `referrer-policy-test-case.sub.js`
  etc. will be removed.

`test-case.sub.js` reflects renaming of JSON keys and values done
in previous commits.
- opt_in_method -> delivery_type/value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717107
- delivery_method -> delivery_type
   https://chromium-review.googlesource.com/c/chromium/src/+/1716109
- referrer_policy -> delivery_value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717592
- source_protocol -> source_scheme
   https://chromium-review.googlesource.com/c/chromium/src/+/1717115
   https://chromium-review.googlesource.com/c/chromium/src/+/1718991
- target_protocol + origin -> origin
  https://chromium-review.googlesource.com/c/chromium/src/+/1717470
- Use shorter values for origin and redirection
  https://chromium-review.googlesource.com/c/chromium/src/+/1717475
- referrer_url -> expectation
  https://chromium-review.googlesource.com/c/chromium/src/+/1717319

Bug: 906850
Change-Id: Ia6695081e5a93355c29fb1bdb7e89ba6b673261f

Remove fetch-request guard and fix typos

revert sub

Add more validation + rename

more

more

Reorder path

Change-Id: Ic283530e9d8536f64adfe3313b38bba749f85c7f
Reviewed-on: https://chromium-review.googlesource.com/1780959
WPT-Export-Revision: bec5e81d1ae960e5fba82981b065baebe757111f",3618133
537,2019-09-03T19:01:15Z,2020-01-24T20:01:41Z,,,"fix


revert


fix lint


format


[WPT/common/security-features] Support nested source contexts

To enable `spec.src.json` to specify (possibly nested) source contexts,
this CL adds `source_context_list_schema` that represents
source contexts from where subresource requests are sent,
and how policies are delivered (by source contexts or subresource requests).
This CL adds `source_context_list` field to each `test_expansion` entry,
of which value is the key of `source_context_list_schema` to be used.

This CL adds `source_context_schema` and `subresource_schema`
that represent supported delivery types and subresources
for each source context or subresource type. These are used:
- To filter out test files for unsupported combinations of delivery types,
  source contexts and subresources.
  A part of the filtering was removed in
  https://chromium-review.googlesource.com/c/chromium/src/+/1717535
  and this CL re-adds it (in a different form of implementation).
- To determine what delivery types should be used for `anotherPolicy`
  placeholder.

After this CL, the generate.py generates `source_context_list` and
`subresource_policy_deliveries` fields that are passed directly
without coversion.
Specifically,
- The conversion from `classic-data-worker-fetch` to
  `classic-data-worker` + `fetch-request` in mixed-content-test-case.js
  is removed.
- \<iframe srcdoc>-related tests for `img-tag` referrer-policy tests
  are split into separate tests, and related code in
  referrer-policy-test-case.sub.js is removed.
  Instead, to support tests inside \<iframe srcdoc>, this CL adds
  `referrerSource` calculation that can support \<iframe srcdoc>s.

This CL also changes the structure of generated file names.
Now all files are generated under a dedicated directory `gen/`.

This CL creates `test-case.sub.js` instead of modifying
`referrer-policy-test-case.sub.js` etc., because:
  After this CL, I'll commit new generated test HTML files,
  incrementally in order to monitor potential regressions,
  Because thousands of files are modified, split, and renamed.
  During the incremental commits, `test-case.sub.js` is used
  by new generated tests while
  `referrer-policy-test-case.sub.js` etc. are still used by
  old tests.
  After all commits are done, `referrer-policy-test-case.sub.js`
  etc. will be removed.

`test-case.sub.js` reflects renaming of JSON keys and values done
in previous commits.
- opt_in_method -> delivery_type/value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717107
- delivery_method -> delivery_type
   https://chromium-review.googlesource.com/c/chromium/src/+/1716109
- referrer_policy -> delivery_value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717592
- source_protocol -> source_scheme
   https://chromium-review.googlesource.com/c/chromium/src/+/1717115
   https://chromium-review.googlesource.com/c/chromium/src/+/1718991
- target_protocol + origin -> origin
  https://chromium-review.googlesource.com/c/chromium/src/+/1717470
- Use shorter values for origin and redirection
  https://chromium-review.googlesource.com/c/chromium/src/+/1717475
- referrer_url -> expectation
  https://chromium-review.googlesource.com/c/chromium/src/+/1717319

Bug: 906850
Change-Id: Ia6695081e5a93355c29fb1bdb7e89ba6b673261f

Remove fetch-request guard and fix typos

revert sub

Add more validation + rename

more

more

Reorder path

Change-Id: Ifb552ec744f038052739ca7d841841351208cf79
Reviewed-on: https://chromium-review.googlesource.com/1780960
WPT-Export-Revision: d7dd27cde3004ed30e91d8352cae2cbc48fa7957",3618133
538,2019-09-03T19:00:31Z,2020-01-24T20:01:49Z,,,"fix


revert


fix lint


format


[WPT/common/security-features] Support nested source contexts

To enable `spec.src.json` to specify (possibly nested) source contexts,
this CL adds `source_context_list_schema` that represents
source contexts from where subresource requests are sent,
and how policies are delivered (by source contexts or subresource requests).
This CL adds `source_context_list` field to each `test_expansion` entry,
of which value is the key of `source_context_list_schema` to be used.

This CL adds `source_context_schema` and `subresource_schema`
that represent supported delivery types and subresources
for each source context or subresource type. These are used:
- To filter out test files for unsupported combinations of delivery types,
  source contexts and subresources.
  A part of the filtering was removed in
  https://chromium-review.googlesource.com/c/chromium/src/+/1717535
  and this CL re-adds it (in a different form of implementation).
- To determine what delivery types should be used for `anotherPolicy`
  placeholder.

After this CL, the generate.py generates `source_context_list` and
`subresource_policy_deliveries` fields that are passed directly
without coversion.
Specifically,
- The conversion from `classic-data-worker-fetch` to
  `classic-data-worker` + `fetch-request` in mixed-content-test-case.js
  is removed.
- \<iframe srcdoc>-related tests for `img-tag` referrer-policy tests
  are split into separate tests, and related code in
  referrer-policy-test-case.sub.js is removed.
  Instead, to support tests inside \<iframe srcdoc>, this CL adds
  `referrerSource` calculation that can support \<iframe srcdoc>s.

This CL also changes the structure of generated file names.
Now all files are generated under a dedicated directory `gen/`.

This CL creates `test-case.sub.js` instead of modifying
`referrer-policy-test-case.sub.js` etc., because:
  After this CL, I'll commit new generated test HTML files,
  incrementally in order to monitor potential regressions,
  Because thousands of files are modified, split, and renamed.
  During the incremental commits, `test-case.sub.js` is used
  by new generated tests while
  `referrer-policy-test-case.sub.js` etc. are still used by
  old tests.
  After all commits are done, `referrer-policy-test-case.sub.js`
  etc. will be removed.

`test-case.sub.js` reflects renaming of JSON keys and values done
in previous commits.
- opt_in_method -> delivery_type/value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717107
- delivery_method -> delivery_type
   https://chromium-review.googlesource.com/c/chromium/src/+/1716109
- referrer_policy -> delivery_value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717592
- source_protocol -> source_scheme
   https://chromium-review.googlesource.com/c/chromium/src/+/1717115
   https://chromium-review.googlesource.com/c/chromium/src/+/1718991
- target_protocol + origin -> origin
  https://chromium-review.googlesource.com/c/chromium/src/+/1717470
- Use shorter values for origin and redirection
  https://chromium-review.googlesource.com/c/chromium/src/+/1717475
- referrer_url -> expectation
  https://chromium-review.googlesource.com/c/chromium/src/+/1717319

Bug: 906850
Change-Id: Ia6695081e5a93355c29fb1bdb7e89ba6b673261f

Remove fetch-request guard and fix typos

revert sub

Add more validation + rename

more

more

Reorder path

Change-Id: I54db7ac084b96969fb7137959b7308ded7797842
Reviewed-on: https://chromium-review.googlesource.com/1783237
WPT-Export-Revision: 74ebd33bb87c902168e3ebb95769f9ae507ebcde",3618133
539,2019-09-03T19:00:01Z,2020-01-24T20:01:47Z,,,"fix


revert


fix lint


format


[WPT/common/security-features] Support nested source contexts

To enable `spec.src.json` to specify (possibly nested) source contexts,
this CL adds `source_context_list_schema` that represents
source contexts from where subresource requests are sent,
and how policies are delivered (by source contexts or subresource requests).
This CL adds `source_context_list` field to each `test_expansion` entry,
of which value is the key of `source_context_list_schema` to be used.

This CL adds `source_context_schema` and `subresource_schema`
that represent supported delivery types and subresources
for each source context or subresource type. These are used:
- To filter out test files for unsupported combinations of delivery types,
  source contexts and subresources.
  A part of the filtering was removed in
  https://chromium-review.googlesource.com/c/chromium/src/+/1717535
  and this CL re-adds it (in a different form of implementation).
- To determine what delivery types should be used for `anotherPolicy`
  placeholder.

After this CL, the generate.py generates `source_context_list` and
`subresource_policy_deliveries` fields that are passed directly
without coversion.
Specifically,
- The conversion from `classic-data-worker-fetch` to
  `classic-data-worker` + `fetch-request` in mixed-content-test-case.js
  is removed.
- \<iframe srcdoc>-related tests for `img-tag` referrer-policy tests
  are split into separate tests, and related code in
  referrer-policy-test-case.sub.js is removed.
  Instead, to support tests inside \<iframe srcdoc>, this CL adds
  `referrerSource` calculation that can support \<iframe srcdoc>s.

This CL also changes the structure of generated file names.
Now all files are generated under a dedicated directory `gen/`.

This CL creates `test-case.sub.js` instead of modifying
`referrer-policy-test-case.sub.js` etc., because:
  After this CL, I'll commit new generated test HTML files,
  incrementally in order to monitor potential regressions,
  Because thousands of files are modified, split, and renamed.
  During the incremental commits, `test-case.sub.js` is used
  by new generated tests while
  `referrer-policy-test-case.sub.js` etc. are still used by
  old tests.
  After all commits are done, `referrer-policy-test-case.sub.js`
  etc. will be removed.

`test-case.sub.js` reflects renaming of JSON keys and values done
in previous commits.
- opt_in_method -> delivery_type/value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717107
- delivery_method -> delivery_type
   https://chromium-review.googlesource.com/c/chromium/src/+/1716109
- referrer_policy -> delivery_value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717592
- source_protocol -> source_scheme
   https://chromium-review.googlesource.com/c/chromium/src/+/1717115
   https://chromium-review.googlesource.com/c/chromium/src/+/1718991
- target_protocol + origin -> origin
  https://chromium-review.googlesource.com/c/chromium/src/+/1717470
- Use shorter values for origin and redirection
  https://chromium-review.googlesource.com/c/chromium/src/+/1717475
- referrer_url -> expectation
  https://chromium-review.googlesource.com/c/chromium/src/+/1717319

Bug: 906850
Change-Id: Ia6695081e5a93355c29fb1bdb7e89ba6b673261f

Remove fetch-request guard and fix typos

revert sub

Add more validation + rename

more

more

Reorder path

Change-Id: I93e181d1060ec0d83ae716ad7e5f7c2c838f8280
Reviewed-on: https://chromium-review.googlesource.com/1783218
WPT-Export-Revision: 9bd374228a9509110814a36c8589863f47935f96",3618133
540,2019-09-03T07:12:52Z,2020-01-24T20:01:20Z,,,"The CSS Text 3 specification states on its 'Phase II: Trimming and
Positioning' section:

https://www.w3.org/TR/css-text-3/#white-space-phase-2

3- A sequence at the end of a line (ignoring any intervening inline box
boundaries) of collapsible spaces (U+0020) and/or ideographic spaces
(U+3000) whose white-space value collapses spaces is removed.

4- If there remains any sequence of white space and/or ideographic spaces
(U+3000) at the end of a line: If white-space is set to pre-wrap, the UA
must hang this sequence. It may also visually collapse the character
advance widths of any that would otherwise overflow.

This CL tries to implement such behavior, since we were not considering
this kind of spaces in the hanging/collapsing logic.

Bug: 972952
Change-Id: Idb0aff05f7f423f5b62f5169177c0240917435a7
Reviewed-on: https://chromium-review.googlesource.com/1687411
WPT-Export-Revision: 5f42084a312f47ddb635999afe0340a0c467ebbb",3618133
541,2019-08-28T20:51:22Z,2020-01-24T20:01:35Z,,,"This change introduces the support to use Abort Controller
with the SMS Receiver API.

Change-Id: I784fd7e1383526a4ab3ae4be00cd1c411cfe3c75
Reviewed-on: https://chromium-review.googlesource.com/1772393
WPT-Export-Revision: 7c569a2086cdd271af33d8447b239b5dbcc2a15b",3618133
542,2019-08-27T10:23:50Z,2020-01-24T20:01:34Z,,,"For convenience, we initially treated every attribute starting with ""on"" as
an event handler. This is clearly incorrect, and this CL fixes it.

Bug: 739170, 993268
Change-Id: Ic37d89f372b829ac95ca477c476b675865c9f09b
Reviewed-on: https://chromium-review.googlesource.com/1771808
WPT-Export-Revision: 31bc49424a325e24e32b4249b6306f9c78192f83",3618133
543,2019-08-22T00:15:33Z,2019-11-15T11:09:38Z,,,"This allows to run epiphany from inside a flatpak like the Epiphany Technology Preview

To run this first install the [Epiphany Technology Preview flatpak](https://webkitgtk.org/epiphany-tech-preview.flatpakref) and then run WPT like follows:
`
./wpt run --flatpak=""org.gnome.Epiphany.Devel"" epiphany
`

This should work also for running tests with the generic webkit browser (MiniBrowser) inside flatpak, but the Epiphany TP preview flatpak doesn't include the MiniBrowser.

If you need to pass extra arguments to ""flatpak run"" like `--socket=x11` or `--socket=wayland` then use `--flatpak-args=""...""`

The way this works is by starting the WebKitWebDriver inside the flatpak environment, but the test machinery (WPT tools) run outside of flatpak.
",3618133
544,2019-08-21T12:59:18Z,2020-01-24T20:04:49Z,,,,3618133
545,2019-08-19T10:15:47Z,2019-08-19T10:30:05Z,,,These are tests for https://w3c.github.io/webrtc-ice/ not http://w3c.github.io/webrtc-pc/,3618133
546,2019-08-16T15:05:30Z,2020-01-24T20:01:21Z,,,"There have been some concerns regarding the precision of readouts from the
Ambient Light Sensor. To decrease the entropy, we are rounding off the
illuminance value to the nearest 50 Lux to mitigate the known attack
vectors as summarized in [1].

Blink-specific sensor tests now use a ring buffer for readings needed for
sensor/ambient-light-sensor.html
Details: https://chromium-review.googlesource.com/c/chromium/src/+/1760954

[1] https://github.com/w3c/ambient-light/issues/13#issuecomment-302393458

Bug: 642731, 606766
Change-Id: Icc4cfa6b87bd5a87c2cac6ebe322201d7dda6c33
Reviewed-on: https://chromium-review.googlesource.com/1695412
WPT-Export-Revision: 884ffb94a50c596f5096886add184b33cad20d2d",3618133
547,2019-08-14T18:53:04Z,2020-01-24T20:01:31Z,,,"Change-Id: Id517ed077c52f88f3404d9bacc1e9bc22559598a
Reviewed-on: https://chromium-review.googlesource.com/1754525
WPT-Export-Revision: b943eb1546c20e303b0683b6a981cb4af2cb46ab",3618133
548,2019-08-09T10:09:52Z,2020-02-26T22:15:14Z,,,"vector-effect has initial value none and does not inherit. It accepts
none | non-scaling-stroke | non-scaling-size | non-rotation | fixed-position
https://svgwg.org/svg2-draft/coords.html#VectorEffectProperty

Values other than none and non-scaling-stroke are at risk.
https://github.com/w3c/svgwg/issues/306",3618133
549,2019-08-06T12:08:56Z,2020-01-24T20:04:50Z,,,,3618133
550,2019-08-05T21:21:29Z,2019-08-14T00:38:40Z,,,"This creates the webgpu/ test directory for the WebGPU conformance test suite.

The readme explains how this directory works. There are no built contents in this directory yet; those will be uploaded after this lands.",3618133
551,2019-08-05T21:19:38Z,2020-01-24T20:01:27Z,,,"WIP


WIP


WIP


WIP


WIP


WIP

Change-Id: I1b2bc82dc25fdfbf8f39323b64af73e4b2eb6d61
Reviewed-on: https://chromium-review.googlesource.com/1717437
WPT-Export-Revision: 0cdbe9a67543913a774492b295bde71a3755fad6",3618133
552,2019-08-02T19:31:23Z,2019-08-08T13:01:21Z,,,"Preferences for test types differ among test maintainers, so the
documentation should not make specific recommendations about this
decision.

Present the test types with more neutral language. This phrasing more
closely aligns with following paragraph which describes preferences
between test types.

This should resolve gh-16602.",3618133
553,2019-07-31T19:00:35Z,2020-01-27T18:42:33Z,,,Added 8 inactive-selection-* tests and 4 support files [css-pseudo],3618133
554,2019-07-31T16:33:08Z,2020-01-24T20:01:29Z,,,"This CL removes most of the references to PlzNavigate in the comments of
third_party/blink/. Some problematic cases where further expertise is
needed are left out, but this covers more than 90% of the references.

Change-Id: I9c8151fa6c60957ffc47ba84989a3628b16aab0f
Reviewed-on: https://chromium-review.googlesource.com/1729162
WPT-Export-Revision: 2be3e4efd2538ee647d672bade109b6ad35bdacf",3618133
555,2019-07-30T21:51:07Z,2020-01-24T20:01:28Z,,,"apply on the first innermost in-flow block even
if there are out-of-flow-blocks. Now the code
looks for the first in-flow block when applying
the psuedo style

Bug: 979253
Change-Id: I9f73bf9db4d4b252187475d761cb351166847380
Reviewed-on: https://chromium-review.googlesource.com/1726990
WPT-Export-Revision: cb83aab942e955dc42db587a058e9dd8a45658b3",3618133
556,2019-07-29T14:36:51Z,2019-12-21T18:47:06Z,,,"wm-propagation-body-computed-direction-001.html
wm-propagation-body-computed-direction-002.html

These 2 tests *only* check the computed value of 'direction' of the root element when 'writing-mode' of body element propagates to viewport.",3618133
557,2019-07-24T16:52:26Z,2020-01-10T16:12:51Z,,,WebKit export from bug: [\[GStreamer\] Don't crash with empty video src](https://bugs.webkit.org/show_bug.cgi?id=200081),3618133
558,2019-07-23T17:08:01Z,2020-01-24T20:01:05Z,,,"To enable `spec.src.json` to specify (possibly nested) source contexts,
this CL adds `source_context_list_schema` that represents
source contexts from where subresource requests are sent,
and how policies are delivered (by source contexts or subresource requests).
This CL adds `source_context_list` field to each `test_expansion` entry,
of which value is the key of `source_context_list_schema` to be used.

This CL adds `source_context_schema` and `subresource_schema`
that represent supported delivery types and subresources
for each source context or subresource type. These are used:
- To filter out test files for unsupported combinations of delivery types,
  source contexts and subresources.
  A part of the filtering was removed in
  https://chromium-review.googlesource.com/c/chromium/src/+/1717535
  and this CL re-adds it (in a different form of implementation).
- To determine what delivery types should be used for `anotherPolicy`
  placeholder.

After this CL, the generate.py generates `source_context_list` and
`subresource_policy_deliveries` fields that are passed directly
without coversion.
Specifically,
- The conversion from `classic-data-worker-fetch` to
  `classic-data-worker` + `fetch-request` in mixed-content-test-case.js
  is removed.
- \<iframe srcdoc>-related tests for `img-tag` referrer-policy tests
  are split into separate tests, and related code in
  referrer-policy-test-case.sub.js is removed.
  Instead, to support tests inside \<iframe srcdoc>, this CL adds
  `referrerSource` calculation that can support \<iframe srcdoc>s.

This CL also changes the structure of generated file names.
Now all files are generated under a dedicated directory `gen/`.

This CL creates `test-case.sub.js` instead of modifying
`referrer-policy-test-case.sub.js` etc., because:
  After this CL, I'll commit new generated test HTML files,
  incrementally in order to monitor potential regressions,
  Because thousands of files are modified, split, and renamed.
  During the incremental commits, `test-case.sub.js` is used
  by new generated tests while
  `referrer-policy-test-case.sub.js` etc. are still used by
  old tests.
  After all commits are done, `referrer-policy-test-case.sub.js`
  etc. will be removed.

This CL renames subresource names, to make the names of subresources,
source contexts and source context lists consistent.

`test-case.sub.js` reflects renaming of JSON keys and values done
in previous commits.
- opt_in_method -> delivery_type/value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717107
- delivery_method -> delivery_type
   https://chromium-review.googlesource.com/c/chromium/src/+/1716109
- referrer_policy -> delivery_value
  https://chromium-review.googlesource.com/c/chromium/src/+/1717592
- source_protocol -> source_scheme
   https://chromium-review.googlesource.com/c/chromium/src/+/1717115
   https://chromium-review.googlesource.com/c/chromium/src/+/1718991
- target_protocol + origin -> origin
  https://chromium-review.googlesource.com/c/chromium/src/+/1717470
- Use shorter values for origin and redirection
  https://chromium-review.googlesource.com/c/chromium/src/+/1717475
- referrer_url -> expectation
  https://chromium-review.googlesource.com/c/chromium/src/+/1717319
- source context names
  https://chromium-review.googlesource.com/c/chromium/src/+/1777110

Bug: 906850
Change-Id: Ia6695081e5a93355c29fb1bdb7e89ba6b673261f
Reviewed-on: https://chromium-review.googlesource.com/1586548
WPT-Export-Revision: 2fb90c6abdbd668ea975544837fc14538b357070",3618133
559,2019-07-22T19:29:00Z,2020-01-24T20:01:25Z,,,"Change-Id: I64e01543b1dd08773ac9f00430ea8cdcd2b6cc95
Reviewed-on: https://chromium-review.googlesource.com/1700621
WPT-Export-Revision: eb2a051c15014b1d2319fca453427e607291d241",3618133
560,2019-07-19T00:49:54Z,2020-01-24T20:01:26Z,,,"When a deferred frame gets loaded-in and eventually unloaded, it should
call the latest onbeforeunload handlers, and not the initial handlers.

Bug: 985172
Change-Id: Ib9e32887536917fe6041ffa0f550a8cc2f5a506c
Reviewed-on: https://chromium-review.googlesource.com/1709772
WPT-Export-Revision: 848290b1a875401f351431bd6549070955ed5270",3618133
561,2019-07-16T17:35:16Z,2019-08-27T15:18:43Z,,,"test_spin_event_loop is designed to test step 9 of [element click](https://w3c.github.io/webdriver/#element-click)
> Wait until the user agent event loop has spun enough times to process the DOM events generated by the previous step.

This step can (and in my opinion should) be interpreted as the handling of all current events, meaning that the algorithm should proceed without waiting for the finishing of (in this case non-blocking) actions scheduled to occur in the future. 

Interestingly enough, Firefox also fails this test on my local machine if the setTimeout delay is increased to 250+, indicating that they are passing this test without being truly spec compliant (if the definition of step 9 in the spec is interpreted as the completion of all future actions triggered by this event as well). 

Therefore, since no webdriver is truly spec-compliant in the way this test is attempting to validate, and that this test arguably tests for adherence to unnecessary behavior (waiting for future events) I propose its deletion. In lieu of its deletion, it appears obvious to me at the very least that the test's setTimeout delay must be increased significantly to truly test for spec compliance if we decide to interpret step 9 to include future events.

Thoughts and discussion on interpreting step 9 of element click (or other ways to modify the test) are welcome and appreciated.",3618133
562,2019-07-15T23:28:46Z,2020-01-24T20:04:37Z,,,,3618133
563,2019-07-14T01:32:17Z,2019-10-25T16:42:32Z,,,"This test is included in the WebKit commit below.

    Always min-width should win over max-width.
    https://bugs.webkit.org/show_bug.cgi?id=198032
    
    Reviewed by Darin Adler.
    
    In the spec, https://www.w3.org/TR/CSS21/visudet.html#min-max-widths,
    the following algorithm describes how the two properties influence
    the used value of the 'width' property.
    
    1. The tentative used width is calculated (without 'min-width' and 'max-width')
    following the rules under ""Calculating widths and margins"" above.
    2. If the tentative used width is greater than 'max-width',
    the rules above are applied again, but this time using the computed value of 'max-width'
    as the computed value for 'width'.
    3. If the resulting width is smaller than 'min-width', the rules above are applied again,
    but this time using the value of 'min-width' as the computed value for 'width'.",3618133
564,2019-07-12T10:45:18Z,2020-01-10T16:12:51Z,,,WebKit export from bug: [\[MSE\]\[GStreamer\] WebKitMediaSrc rework](https://bugs.webkit.org/show_bug.cgi?id=199719),3618133
565,2019-07-10T18:18:59Z,2019-10-25T11:03:29Z,,,"ChromeDriver was failing this test despite being W3C compliant in this regard. The reason Chrome's webdriver failed was due to Chrome's HTMLDocument not being focusable. In contrast, Firefox's webdriver passes this test because Firefox's HTMLDocument is focusable. According to the W3 spec (linked below), HTMLDocument need not be focusable (can be seen through the absence of the focus method). Therefore this test should be removed since it does not test spec-compliance.

W3 spec:
https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-1006298752",3618133
566,2019-07-05T18:04:42Z,2020-01-24T20:04:26Z,,,,3618133
567,2019-06-28T12:32:14Z,2020-01-24T20:00:00Z,,,For https://github.com/whatwg/html/issues/4718.,3618133
568,2019-06-28T10:08:03Z,2020-01-24T19:59:59Z,,,See https://github.com/whatwg/html/issues/4716.,3618133
569,2019-06-26T21:09:25Z,2020-01-24T20:01:18Z,,,"This is the third of a multi-part series of changes to enable
experimental MSE API usage from dedicated and shared worker contexts, in
addition to existing (stable) usage from the main thread.

Full combined (somewhat outdated) prototype CL:
https://chromium-review.googlesource.com/c/chromium/src/+/1405697

Part 1: https://chromium-review.googlesource.com/c/chromium/src/+/1674413
Part 2: https://chromium-review.googlesource.com/c/chromium/src/+/1679225

This third part contains the bulk of the Blink and Chromium experimental implementation.

Like the prototype CL, the implementation is for a simplified version of the original proposal
(https://github.com/wicg/media-source/blob/mse-in-workers-using-handle/mse-in-workers-using-handle-explainer.md):
1. It uses a MediaSource objectUrl, serialized into a string, to attach a
   worker-owned MediaSource instance to an HTMLMediaElment owned by the Window
   (main-thread).  In particular, the original proposal described attachment
   using a new MediaSourceHandle MSE API object. This simplified implementation
   does not include MediaSourceHandle.

2. While the original MediaSourceHandle proposal enabled HTMLMediaElement
   attachments using it to implicitly open ""early"", this simplified
   implementation using objectUrl attachment does not include early open
   functionality.  Currently, the expected route forward for ""early"" open based
   on this simplified implementation would be to follow @jernoble's suggestion
   to add an ""open()"" method to MediaSource. Such work is left to later
   incubation efforts beyond this change; significant further work (such as a
   new way of constructing a WebMediaSourceImpl and underlying ChunkDemuxer,
   and later pass those to WMPI/HTMLME during attachment) would be necessary to
   implement ""early"" open.

What *is* included in this simplified version is the enabling the usage of the
the MSE API from dedicated and shared worker contexts. Among expected benefits
are a potential for significantly reduced buffering contention versus other
work on the main (Window) thread, perhaps enough to reduce playback jank for
apps whose main thread contention is extreme and otherwise would prevent
keeping enough media buffered.

BIG TODO: Continue refining the description and addressing existing/old BIG TODOs
in the implementation (initial patch sets are simply a rebase of the prototype
over the part 1 CL mentioned, above):

3. Lifetime management is regressed due to lack of Oilpan having a CrossThreadMember\<> ability.
   CrossThreadPersistent is now used, but due to lack of TraceWrapperMember\<> working with
   CrossThreadPersistent, mediasource-htmlmediaelement-lifetime.html (and other web_tests) are
   regressed.
   BIG TODO: Ping oilpan folks again.
   BIG TODO: Un-regress the main-thread-only HTMLME+MSE collection by having all of them
   understand if they're using cross-thread or not, and if not, use the TraceWrapperMember\<>.
   Note, until resolution provided by Oilpan folks, this will still regress at least
   MSE-in-worker cases lacking CrossThreadPersistentTraceWrapperMember functionality (for
   example, if the worker contains the only reference to an HTMLME+MSE object
   collection, and event handlers on the HTMLME side have an event queued for dispatch on them
   such as an error event, that event may not dispatch if there is intervening gc()).
4. Need to resolve spec problem: HTMLMediaElement's audio/video track lists containing MSE
   tracks have a supplemental field that points back to the SourceBuffer. In MSE-in-Workers,
   such exposure cross-thread of MSE must be disallowed.
5. MediaSource contains a mutex that is used by it and its SourceBuffers to ensure main thread
   MSE work doesn't collide with worker-thread MSE work.
6. Need to resolve spec/impl problem: This prototype disables
   HTMLMediaElement::MediaTracksEnabledInternally() due to needing to resolve
   SourceBuffer.{audio,video}Tracks on worker thread. Possible approaches might retain access
   to the lists on both main and worker threads, with internal message posting to effect changes
   (or a combination of mutexes and message posting to effect changes). Other approaches (such as
   not exposing these lists at all to the MSE worker JS context) might also be considered.
7. See other ""BIG TODOs"" remaining in the most current patch set...

Feedback is most certainly welcome. Either on this CL. on https://crbug.com/878133, or on the
MSE spec issue itself: https://github.com/w3c/media-source/issues/175

BUG=878133

Change-Id: Iee15f92feb06a9766878e0181f2d3b32fc3ebd7d
Reviewed-on: https://chromium-review.googlesource.com/1678555
WPT-Export-Revision: 4b5e72f4033b2a90caf146e9d89145fee9798e7a",3618133
570,2019-06-26T00:03:19Z,2020-01-24T20:00:43Z,,,"This is an older proof of concept. Refined parts of it are landing:
* The first part (https://chromium-review.googlesource.com/c/chromium/src/+/1674413) added IDL,
experimental blink feature and metrics.

---
Simplified versus original proposal
(https://github.com/wicg/media-source/blob/mse-in-workers-using-handle/mse-in-workers-using-handle-explainer.md):
1. doesn't use MediaSourceHandle
2. per suggestion by @jernoble, adds an ""open()"" method to MediaSource--
   HOWEVER, such open() method currently does nothing. Significant further work (such as
   a new way of constructing a webmediasource_impl (and underlying ChunkDemuxer), and later
   pass those to WMPI/HTMLME during HTMLME attachement) would be necessary to make this work.

--> Even without of early sourceopen implementation in this prototype (as of at least
    patch set 41), feedback is desired about performance gains allowed by the rest of this CL:
    if app creates MediaSource in worker context instead of main context, does this effectively
    reduce jank/etc due to buffering delays that would otherwise be more severe if using the
    MediaSource API on the main thread?

Other design points and caveats:
1. Flexible MediaSource ctor exposure (Window vs Workers) based on feature using existing
   bindings generator and Blink's custom Exposure(context1 feature1, context2 feature2...)
   requires features for all listed contexts. Exposure() appears to
   overwrite any previous Exposure=, so I introduced another feature
   ""MediaSourceStable"" to use Exposure() across existing (stable) and
   experimental (workers) contexts.
2. Using objectUrl instead of MediaSourceHandle isn't simple. Registration alone is
   fraught with complexity (cross-thread + OilPan). Registry is now pinned to main thread,
   and cross-thread-post-tasking (if necessary) is done to register/unregister MediaSource
   objectUrls in the MediaSourceRegistry.
3. Lifetime management is regressed due to lack of Oilpan having a CrossThreadMember\<> ability.
   CrossThreadPersistent is now used, but due to lack of TraceWrapperMember\<> working with
   CrossThreadPersistent, mediasource-htmlmediaelement-lifetime.html (and other web_tests) are
   regressed.
   BIG TODO: Ping oilpan folks again.
   BIG TODO: Un-regress the main-thread-only HTMLME+MSE collection by having all of them
   understand if they're using cross-thread or not, and if not, use the TraceWrapperMember\<>.
   Note, until resolution provided by Oilpan folks, this will still regress at least
   MSE-in-worker cases lacking CrossThreadPersistentTraceWrapperMember functionality (for
   example, if the worker contains the only reference to an HTMLME+MSE object
   collection, and event handlers on the HTMLME side have an event queued for dispatch on them
   such as an error event, that event may not dispatch if there is intervening gc()).
4. Need to resolve spec problem: HTMLMediaElement's audio/video track lists containing MSE
   tracks have a supplemental field that points back to the SourceBuffer. In MSE-in-Workers,
   such exposure cross-thread of MSE must be disallowed.
5. MediaSource contains a mutex that is used by it and its SourceBuffers to ensure main thread
   MSE work doesn't collide with worker-thread MSE work.
6. Need to resolve spec/impl problem: This prototype disables
   HTMLMediaElement::MediaTracksEnabledInternally() due to needing to resolve
   SourceBuffer.{audio,video}Tracks on worker thread. Possible approaches might retain access
   to the lists on both main and worker threads, with internal message posting to effect changes
   (or a combination of mutexes and message posting to effect changes). Other approaches (such as
   not exposing these lists at all to the MSE worker JS context) might also be considered.

7a Some parts (especially like MediaSource::Seekable) use locking for access to cross-thread
   current info. This could block main thread media element determining seekability while a
   relatively long-running media appendBuffer async part (128K) is running.
7b Other parts (especially HTMLMediaElement's updating MediaSource's understanding of recent
   media time and recent media error are done at HTMLMediaElement's convenience with narrower
   lock scope.
7c And yet other parts (worker's MediaSource objectUrl registration & de-registration, and worker
   MediaSource open and close use cross-thread task posting.

   7a was done to ease prototyping. I'm uncertain if this would be a problem in practice though.
   7b was done to reduce task queuing in favor of getting info to the worker faster. I'm uncertain
     if this information race versus app postMessaging would be a problem in practice though.
   7c was done to avoid information races for these critical operations

8. See other ""BIG TODOs"" remaining in the most current patch set...

How to use?
1. Apply most recent patch set to trunk. Resolve merge conflicts (probably in at least:
   web_feature.mojom and enums.xml). Build Chrom{e,ium} and run with
   --enable-experimental-web-platform-features to try it out.

Feedback is most certainly welcome. Either on this CL. on https://crbug.com/878133, or on the
MSE spec issue itself: https://github.com/w3c/media-source/issues/175

BUG=878133

Change-Id: Ic6ea18659b9127e5553f5392377f50d559e8e30a

Reviewed-on: https://chromium-review.googlesource.com/1405697
WPT-Export-Revision: 14a3e843dff8549e802b07bbb7c3c8776160fdb7",3618133
571,2019-06-25T14:14:37Z,2020-01-24T20:30:24Z,,,"Update the list-style shorthand
https://drafts.csswg.org/css-lists-3/#list-style-property
to match spec change
https://github.com/w3c/csswg-drafts/issues/2624
https://github.com/w3c/csswg-drafts/commit/8ac1376b1f001a78897efdaf95293a63f65dd57a

Bug: 978433

Reviewed-on: https://chromium-review.googlesource.com/1664093
WPT-Export-Revision: 498cd0a7d71ac1d26d97d806d62da36e8b463792",3618133
572,2019-06-19T19:54:24Z,2019-06-24T23:45:05Z,,,"This makes the current lines.html test page only test for compliance of
negative values and values in the int range. This is because all
implementations do not currently implement this field as an unsigned
long.
The second file, lines-long.html check for whether this field supports
unsigned long values.",3618133
573,2019-06-19T18:23:48Z,2020-01-24T20:01:03Z,,,"Implement https://github.com/w3c/deviceorientation/pull/68, which has added
a static requestPermission() method to both DeviceOrientationEvent as well
as DeviceMotionEvent.

Permission granted via requestPermission() is checked for after other
existing checks (if the requires feature policy checks fail, for example, we
still do not register the event handler at all).

The spec is somewhat vague in how permission handling should be implemented.
For Chromium, we have settled on the following behavior:
* If sensor access is set to ""Allow"", event listeners can be registered at
  any time, and calling requestPermission() returns a promise that resolves
  to ""granted"".
* If sensor access is set to ""Block"", event listeners will only receive a
  single null event, and calling requestPermission() returns a promise that
  resolves to ""blocked"".
* If sensor access is set to ""Ask"", event listeners will only receive a
  single null event until requestPermission() is called and access is
  granted (i.e. the user explicitly clicked ""Allow"" in the permission
  bubble, any other behavior including dismissing the bubble results in
  denial). If requestPermission() is NOT called through a user gesture, it
  will return a promise that rejecs with a NotAllowedError DOMException. If
  access is granted, requestPermission() returns a promise that resolves to
  ""granted""; if access is denied, requestPermission() returns a promise that
  resolves to ""blocked"".

Bug: 947112
Change-Id: Ibb6ad43b78ca54189cf8f7ef802a4f812c5030df
Reviewed-on: https://chromium-review.googlesource.com/1583809
WPT-Export-Revision: 31ad6db314529fde6707b8fdb7c60d2d177dea5d",3618133
574,2019-06-17T22:57:14Z,2019-08-22T17:36:16Z,,,"There is no formal queue for submissions to WPT, and there is no
guarantee that any submission will be reviewed. Update the documentation
to set contributors' expectations more realistically, and recommend a
possible recourse in the event that no reviewer is available.

I made up the duration of ""three business days."" We can change it, but I think
it's very important to give contributors some concrete expectation about
support.

This is in service of gh-5301",3618133
575,2019-06-14T08:45:03Z,2020-01-24T20:04:39Z,,,,3618133
576,2019-06-11T02:41:31Z,2020-01-24T20:01:15Z,,,"Now we check DisplayItemClient::PaintedOutputHasNoEffect() before
computing the visual rect. If it's true, just use empty visual rect
because the DisplayItemClient will paint nothing.

Because PaintedOutputHasNoEffect() may depend on style and/or layout
result, it's cached and updated after SetStyle() and layout. When it
changes, we call SetShouldCheckForPaintInvalidation() to ensure we
update visual rect.

This reduces unnecessary paint invalidations, repaint of PaintLayers,
and raster invalidations when a DisplayItemClient paints nothing
before and after a change (which won't affect the visual effect of the
DisplayItemClient).

This doesn't change LayoutObject::LocalVisualRect() which is used to
get the visual bounding box of the LayoutObject, because some callers
may expect the rect to cover contents.

Change-Id: Ib56fe48dc6e7d60fd717a1dfb2336cfad2521d7f
Reviewed-on: https://chromium-review.googlesource.com/1649602
WPT-Export-Revision: acb43a0d8291e186c62741e9711c8a8abbcaf70a",3618133
577,2019-05-29T20:53:47Z,2019-09-05T18:16:18Z,,,,3618133
578,2019-05-27T22:35:49Z,2020-01-24T20:01:14Z,,,"Bug: 964481
Change-Id: I92653e26f8a19da220814c683ce3503653a371e6
Reviewed-on: https://chromium-review.googlesource.com/1631750
WPT-Export-Revision: 4abafe5dd443bf7d405447b4c2b44061e359811d",3618133
579,2019-05-27T08:46:50Z,2020-01-31T19:41:01Z,,,"This PR ports https://w3c.github.io/i18n-tests/results/first-letter-pseudo to WPT. It includes tests for Latin grapheme clusters, Dutch tailoring, and Devanagari grapheme clusters.

I didn't include the basic functionality test[1] and the exploratory tests.

/cc @r12a

Footnotes:

[1] I believe it's already tested by https://github.com/web-platform-tests/wpt/blob/master/css/css-pseudo/first-letter-001.html",3618133
580,2019-05-25T00:31:07Z,2020-01-24T20:05:17Z,,,Follows https://github.com/w3c/csswg-drafts/pull/3968,3618133
581,2019-05-21T19:47:25Z,2019-10-21T13:06:24Z,,,WebKit export from bug: [Implement Feature policy self/none/* parsing](https://bugs.webkit.org/show_bug.cgi?id=198078),3618133
582,2019-05-17T15:08:24Z,2020-01-24T20:01:11Z,,,"This fixes the problem of intrinsicsize not working properly with
high density device. As well, intrinsicsize not working properly
with zoom in and zoom out.

In addition, as debugging I realized the test was initially written
wrong, so I fixed the test.
I verified the test bahavior by testing it on an image without
intrinsicsize attr. In this case the image's intrinsic width / height
will be used as its intrinsic dimension. Now the intrinsic dimension
overridden by intrinsicsize attribute matches the behavior.

Bug: 957192
Change-Id: I164809544bfad9a2d36af96b536cec735295087a

Reviewed-on: https://chromium-review.googlesource.com/1613930
WPT-Export-Revision: 3633546683753388295ef30d4855e49ea8a1f228",3618133
583,2019-05-17T13:26:37Z,2020-01-24T20:01:13Z,,,"This CL removes the Skip Ad button in the Picture-in-Picture window and
the ""skipad"" action from the Media Session API. It was previously added
as part of an experiment.

Change-Id: I8a3e491a0c42809103fb1a13504488e2ee5d11ed

Reviewed-on: https://chromium-review.googlesource.com/1617484
WPT-Export-Revision: efb131b95de8414e955e42082eff4f0344a1a9c6",3618133
584,2019-05-10T22:05:52Z,2020-01-24T20:01:10Z,,,"In the current LayoutGrid class design we are overriding the
ComputeIntrinsicLogicalWidths method, which is usually called by the
ComputePreferredLogicalWidths logic. This method uses a flag to detect
whether the preferred sizes have been already computed, so we can avoid
repeating the operation, which may have an important impact on
performance.

However, for certain cases, the ComputeIntrinsicLogicalWidths is called
directly; this is the case of UpdateLogicalWidth function. The
consequence of this design is that we are not using the flag hence we
are repeating several times the intrinsic width computation. For the
case of Grid, this is operation is very complex and with a high cost
in terms of performance.

This patch tries to avoid this bad design and override the
ComputePreferredLogicalWidths, whcih will implement the logic that
was defined before in the ComputeIntrinsicLogicalWidths method.

Change-Id: Ic7257999da338912f2d741266b00a2e6b755b095
Reviewed-on: https://chromium-review.googlesource.com/1604262
WPT-Export-Revision: 52bbbde606b4e6126585eaa948818c0e13ca9e2d",3618133
585,2019-05-10T20:02:44Z,2020-01-24T20:00:14Z,,,"Supercedes https://github.com/web-platform-tests/wpt/pull/9440.

@annevk, I am hoping you and @tkent-google can be my review-buddies for these things.

This test fails in Firefox and Safari:

- Firefox does not move focus from the div. That seems bad.
- Safari puts focus on the body. I have no idea why it would do that.

I think of the three behaviors, the spec/Chrome behavior is the most reasonable, so I'd like to merge this and file bugs. Let me know if folks disagree. /cc @smaug---- @cdumez.",3618133
586,2019-05-09T15:01:07Z,2019-05-09T15:01:37Z,,,"Update freeze testdriver command to 1) identify the handle of the window to be frozen, 2) re-activate the test window and 3) pass the handle from [1] over to chromedriver in the goog/page/freeze command.",3618133
587,2019-05-07T20:27:06Z,2020-01-24T20:01:07Z,,,"
Reviewed-on: https://chromium-review.googlesource.com/1598517
WPT-Export-Revision: 6c46c167947a3f5553a427a0bedcb97e1a45b302",3618133
588,2019-05-07T12:25:07Z,2020-01-24T20:28:09Z,,,"The CSS WG resolved [1] that we should determine the existence of cyclic
sizing dependencies at the begining of layout, and this condition must
be kept during the next phases of the grid layout algorithm.

This has some interesting implications for Baseline Alignment, since we
must exclude from participating in Baseline Alignment those items that
have a cyclic sizing dependency with the grid area they are located
into.

We were using the AvailableSpace() function to determine when a grid
area may be defined under indefinite sizing constraints, which would
make tracks with a flex max-sizing function to behave like an
intrinsically sized track. However, the result of this function may
be different during the different steps of the grid layout algorithm.

The consequences of this undetermined results may cause that items
excluded from participating in Baseline Alignment during the grid's
intrinsic size computation, or even in the first steps of the layout
(orthogonal items may force an extra cycle of the layout algorithm),
could be selected to participate later in the next steps.

The CSS WG clarified that once we detect a cyclic sizing dependency
the affected items must be definitively excluded from participating
in Baseline Alignment. In order to implement this new behavior, this
patch provides a deterministic way to know whether the grid container
is sized under indefinite constraints.

[1] https://github.com/w3c/csswg-drafts/issues/3046


Bug: 941987
Change-Id: I9b2ae86af9c675bf59dff639dfcbb362c2f302ba
Reviewed-on: https://chromium-review.googlesource.com/1598815
WPT-Export-Revision: 627fe86762f1529329a9fdeb0537f719791bb23f",3618133
589,2019-05-07T09:00:02Z,2019-10-28T07:18:27Z,,,,3618133
590,2019-05-03T19:37:48Z,2020-01-24T20:01:06Z,,,"According to the html step, when scripting is disabled the resource request for
the \<script> should not be downloaded (step 11):
https://html.spec.whatwg.org/multipage/scripting.html#prepare-a-script

This CL makes that enforcement in the preload scanner.

Bug: 953889
Change-Id: I1fa7e5dfd7b30bab853792101a15879a0f76e5e7
Reviewed-on: https://chromium-review.googlesource.com/1594479
WPT-Export-Revision: 9e4c17602bd7f428c41c0344ea56fdbcbd44f176",3618133
591,2019-05-02T17:51:41Z,2019-05-08T18:05:12Z,,,"… testing

These tests rely on an iframe with a javascript URL returning a string. The javascript
URL is executed asynchronously, after the test has called postMessage() on the iframe's
Window but likely before the message has been delivered to iframe's Window. As per
specification, since the Javascript URL returns a string, executing it will replace the
iframe's document / window. As a result, this can cause the message to not get delivered
because the window we've initialized called postMessage() on loses its browsing context
before the message is delivered. I found this issue using a development version of WebKit.

The test was passing in Blink because it loads ""javascript:''"" synchronously. However,
the test fails if you use the ""javascript:'1'"" URL, which Blink loads asynchronously.

The test was also passing in Gecko but it appears executing the javascript URL does not
replace the document. I am not sure why.",3618133
592,2019-04-29T19:38:04Z,2019-12-21T18:52:29Z,,,"Added 3 complex getComputedStyle with calc() with percentages, with 2 involving background-position and background-size which can not be resolved at computed-value time, therefore the calc() wrapper with percentage must remain.",3618133
593,2019-04-26T21:48:55Z,2019-10-01T22:55:40Z,,,"Update python test infrastructure to not hardcode www1.
Instead make javascript code craft the necessary information in the request URLs.
Move from referrer-policy-test-case.js?pipe=sub to referrer-policy-test-case.sub.js.",3618133
594,2019-04-26T08:16:43Z,2019-04-29T05:43:20Z,,,"- Fix a couple of tests with function t.add_cleanup() as it supports promise, see detail in #8748.
- The usage of unregister() method in some tests is not rigorous.  As [spec]\(https://w3c.github.io/ServiceWorker/#dom-serviceworkerregistration-unregister):
>>   [NewObject] Promise<boolean> unregister();
  unregister() method must run these steps:
>> 1. Let promise be a promise.
...
>> 4. Return promise.",3618133
595,2019-04-26T07:59:38Z,2019-05-22T11:22:46Z,,,"Covered elements:
- HTMLFormElement
- HTMLHyperlinkElementUtils
- HTMLIFrameElement
- HTMLInputElement
- HTMLLinkElement
- HTMLObjectElement
- HTMLScriptElement
- HTMLTextAreaElement
- HTMLTrackElement
- HTMLVideoElement

part of issue #5727",3618133
596,2019-04-26T07:34:59Z,2020-01-24T20:01:04Z,,,"Change-Id: I6c1ea23fb96597841287001efd84cfd31d9af85e
Reviewed-on: https://chromium-review.googlesource.com/1585138
WPT-Export-Revision: 343b376b727b5068a6316e923494408bd2842336",3618133
597,2019-04-22T07:18:06Z,2019-04-22T07:18:15Z,,,"This PR ports https://w3c.github.io/i18n-tests/results/emphasis-marks#text_emphasis_posn to WPT. Currently, the tests are manual tests, since we're unable to come up with a way to automate them.

Tests from `005` to `008` are in horizontal writing mode, and tests from `009` to `012` are in `vertical-rl`.

I didn't include the exploratory tests.

/cc @r12a
",3618133
598,2019-04-22T03:19:26Z,2019-04-22T03:26:11Z,,,"The tests as written check that the behavior required by css-text + unicode, but there are doubts as to whether unicode is actually right on that topic. Do not merge until https://github.com/w3c/csswg-drafts/issues/3861 is figured out.",3618133
599,2019-04-20T02:38:47Z,2020-01-24T20:00:18Z,,,"Safari reports inconsistent results for this test, [as demonstrated on wpt.fyi](https://wpt.fyi/results/fetch/api/credentials/cookies.any.html?label=master&product=chrome%5Bexperimental%5D&product=edge&product=firefox%5Bexperimental%5D&product=safari%5Bexperimental%5D&aligned):

![2019-04-19-safari-history](https://user-images.githubusercontent.com/677252/56450370-a701d180-62f3-11e9-856f-7d9823168056.png)

This is partially due to the browser's more aggressive caching strategy, as can be seen in the ""Network"" tab of the developer's console:

![2019-04-19-safari-cache](https://user-images.githubusercontent.com/677252/56450371-aa955880-62f3-11e9-9664-1381e141d8ad.png)

The caching can be disabled by using a combination of HTTP headers (both `Cache-Control` and `Vary` appear to be necessary). Unfortunately, it looks like there's further instability that remains even after caching has been disabled. I've included a new test (not really fit for `master`) which demonstrates the instability. Here's a screenshot of the kind of results I have in mind:

![2019-04-19-safari-unstable](https://user-images.githubusercontent.com/677252/56450373-aec17600-62f3-11e9-8d4c-1acb2ce2d3b2.png)

The initial sub-test failure isn't too concerning--some cookies could be lingering from a previous test. I can't explain the second sub-test failure, though. While the absence of the cookie named `a` is expected (it is removed by the cleanup logic of the first sub-test), the absence of the cookie named `k` surprises me.

@burg or @eric-carlson can you verify this?",3618133
600,2019-04-19T06:58:43Z,2019-04-19T06:58:51Z,,,"This PR ports https://w3c.github.io/i18n-tests/results/emphasis-marks#text_emphasis_style to WPT. Currently, the tests are manual tests, since we're unable to come up with a way to automate them.

These are simple tests designed to check basic functionality.

**Note:** There are some [existing](https://github.com/web-platform-tests/wpt/tree/master/css/css-text-decor) tests for `text-emphasis-style`. These tests were originally from [Test the Web Forward Tokyo](https://github.com/w3c/csswg-test/tree/1c79416ac54464acdc6518ca285799730068dbda/contributors/ttwf_tokyo). Similar to the tests in this PR, these tests aim to check basic functionality of `text-emphasis-style`.

However, some of the pre-exsisting tests are dubious, such as using ruby markup for reference (e.g., see [text-emphasis-style-002.html](http://w3c-test.org/css/css-text-decor/text-emphasis-style-002.html) and the [reference file](http://w3c-test.org/css/css-text-decor/reference/text-emphasis-style-002-ref.html)).

/cc @r12a
",3618133
601,2019-04-18T03:34:27Z,2020-01-24T20:01:02Z,,,"Floats are amazing. For the child HasClearancePastAdjoiningFloats check
within HandleInflow we need to ignore zero-block-size floats.

They aren't adjoining for the purposes of that check. However we do
need to keep track of if there are adjoining floats which need to
have layout performed.

This introduces a third(!) type of NGFLoatTypes which is used to keep
track of this.

When calculating the AdjoiningFloatType we compute the margin-box
block-size of the unpositioned float.

Bug: 944083
Change-Id: Ic2d6e00e680853568caef30e002535db0cf050d3
Reviewed-on: https://chromium-review.googlesource.com/1572274
WPT-Export-Revision: c3e657a999135b301be50d4ca9c7ec5e5d336753",3618133
602,2019-04-18T02:22:03Z,2020-01-24T20:01:00Z,,,"Introducing the new loading policy on top of the ""loading"" attribute which will
replace the current deprecated ""lazyload"" policy for images. This policy is the
counterpart to 'loading-frames-default-eager' which only affects images.

The new policy helps overriding the default behavior of loading to ""lazy"" for
\<img>s where the loading attribute is either ""auto"" or unset.

Explainer PR:
https://github.com/w3c/webappsec-feature-policy/pull/295

Bug: 949683
Change-Id: Ieae1a7688d6a434b3b5c5555dedd56fe743aefc4
Reviewed-on: https://chromium-review.googlesource.com/1567899
WPT-Export-Revision: d18765fff3fb08a71da37d217ddacf2440b71c88",3618133
603,2019-04-17T20:00:09Z,2019-04-17T20:01:59Z,,,"This adds page freeze support for the WebDriver executor to get the
existing lifecycle freeze test to work. This also adds a testdriver
infrastructure test for the freeze.

Addionally, this changes freeze tests to freeze the child from
the parent. Previously, the child window interacted with test_driver
directly which broke some functionality, i.e. the promise returned by
test_driver.freeze(). All interactions with the test harness and driver
now take place in the parent window, with the child window passed to
functions as necessary.",3618133
604,2019-04-12T08:22:14Z,2019-04-15T08:43:05Z,,,"This PR ports https://w3c.github.io/i18n-tests/results/emphasis-marks#text_emph and https://w3c.github.io/i18n-tests/results/emphasis-marks#text_emph_v to WPT. Currently, the tests are manual tests, since we're unable to come up with a way to automate them.

These are simple tests designed to check basic functionality.

/cc @r12a
",3618133
605,2019-04-12T06:47:36Z,2019-05-27T08:23:12Z,,,,3618133
606,2019-04-12T05:58:29Z,2019-07-03T08:39:45Z,,,"- Fix a couple of tests with function t.add_cleanup() as it supports promise, see detail in #8748.
- The usage of unregister() method in some tests is not rigorous.  As [spec]\(https://w3c.github.io/ServiceWorker/#dom-serviceworkerregistration-unregister):
>>   [NewObject] Promise<boolean> unregister();
  unregister() method must run these steps:
>> 1. Let promise be a promise.
...
>> 4. Return promise.
- Following mattto's recommendation format these tests using prettier.io",3618133
607,2019-04-11T20:36:04Z,2020-01-24T20:00:58Z,,,"These tests are autogenerated from the upstream source `wast` files
found here https://github.com/WebAssembly/spec/tree/master/test/core.

Change-Id: I47052d0f7bd5b92e9eba3d35c384b6df1dedf69e
Reviewed-on: https://chromium-review.googlesource.com/1562721
WPT-Export-Revision: 254cc17c5317da3fc428ee7223fd8312288c89ca",3618133
608,2019-04-10T09:46:09Z,2020-01-24T20:04:41Z,,,"There isn't any difference between setTimeout(foo, 0) and step_timeout(foo, 0),
so it doesn't make sense to fail the lint in either case. Unfortunately getting
this perfectly correct is a bit tricky since there can be arbitary js in the
first argument to setTimeout. So doing it correctly requires a full js parser,
but we can do something with an approach that simply counts parens, skipping
strings, to find the end of the arguments.

This won't handle all cases, particularly involving template literals, but
may be better than nothing. In particular expressions like

setTimeout(() => `${""`""}`, 0}

will break since we won't skip the embedded expression in the template
literal.",3618133
609,2019-04-10T01:05:46Z,2020-01-24T20:00:57Z,,,"Change-Id: Ia0d5a06b0b754d2f3ec3b99edabfcb53251e19ab

Reviewed-on: https://chromium-review.googlesource.com/1560610
WPT-Export-Revision: 2209e3a5c1c9f1acf026cb823523229843d96247",3618133
610,2019-04-08T07:37:14Z,2019-04-08T07:37:22Z,,,"This PR ports https://w3c.github.io/i18n-tests/results/line-decoration#text_dec_style to WPT. Currently, the tests are manual tests, since we're unable to come up with a way to automate them.

The `-009-` and `-01X-` tests are in horizontal writing mode, and the `-06X-` tests are in `vertical-rl`.

I didn't include the exploratory tests.

/cc @r12a
",3618133
611,2019-04-03T22:01:41Z,2019-04-05T21:54:06Z,,,"Chromedriver rejects ""Execute Script"" payloads containing unpaired surrogates.
I was getting ready to file a bug report against that project, but I think it
may be a reasonable behavior (since WebDriver is UTF-8, and UTF-8 says those
are off-limits). That's why I'm proposing that testharness.js reports a harness
error.

That's not technically necessary, though. We could silently sanitize the titles
and report an ""OK"" status. I don't really like changing what the authors wrote,
though.

",3618133
612,2019-04-03T16:03:07Z,2020-01-24T20:00:56Z,,,"Note: this CL does not include the parser implementation

This allows us to specify value as following:

feature_name *(enum1) 'self'(enum2);

To specify a enum, you need to provide max value and min value,
otherwise 0 and numeric_limit\<unsigned>::max() is used.

To check if a feature is enabled, instead of using the threshold
value, call feature_policy->GetFeatureValueForOrigin(feature, origin)
and interpret the enum to get the feature state.

Bug: 924568
Change-Id: I2e5ca7e82cfbd3b9258dd84fc6735e9b548099f4
Reviewed-on: https://chromium-review.googlesource.com/1548029
WPT-Export-Revision: 1c6c064a0cf33da3f6b3c62d8d668c2239816e78",3618133
613,2019-04-03T15:14:09Z,2019-04-05T11:30:31Z,,,https://github.com/whatwg/html/issues/4500,3618133
614,2019-04-02T19:43:44Z,2019-08-27T15:10:48Z,,,"@andreastt This test fails in the latest release of Chromedriver. I'd rather test all of the special code points (likely reusing [`tests.perform_actions.support.keys`](https://github.com/web-platform-tests/wpt/blob/24dd35d24272746f1d2ccb46b20d886235f0514b/webdriver/tests/perform_actions/support/keys.py)), but testing each key in isolation takes a while--long enough to consistently trigger a timeout if done from the modified file. The only idea I have is to subdivide the set of keys across a few files. Would you prefer that to testing this one known failure?",3618133
615,2019-04-02T17:54:58Z,2020-01-31T19:27:47Z,,,"The `keyCode` attribute of KeyboardEvent objects is not suitable for
conformance tests. Replace most existing references with the standard
`key` attribute. Persist those references whose intent is expressly to
test the legacy API. Introduce a new linting rule to disallow further
references.

> These features were never formally specified and the current browser
> implementations vary in significant ways. The large amount of legacy
> content, including script libraries, that relies upon detecting the
> user agent and acting accordingly means that any attempt to formalize
> these legacy attributes and events would risk breaking as much content
> as it would fix or enable. Additionally, these attributes are not
> suitable for international usage, nor do they address accessibility
> concerns.
>
> Therefore, this specification does not normatively define the events
> and attributes commonly employed for handling keyboard input, though
> they MAY be present in user agents for compatibility with legacy
> content. Authors SHOULD use the key attribute instead of the
> `charCode` and `keyCode` attributes.

https://www.w3.org/TR/uievents/#legacy-key-attributes",3618133
616,2019-04-01T16:01:09Z,2019-04-18T16:05:50Z,,,"@gsnedders Marionette rejects the ""touch"" input type, and Chrome doesn't fire pointer events for it. Do you have any thoughts on making this test easier to consume?",3618133
617,2019-04-01T00:20:48Z,2019-04-02T16:48:00Z,,,"The modifications and improvements are related to discussion we have (and are still having) in issue 3741
https://github.com/w3c/csswg-drafts/issues/3741",3618133
618,2019-03-26T13:12:11Z,2020-01-24T20:00:55Z,,,"When setting up 'self' for CPS, we should never use an opaque origin.
Therefore fallback on the delegate url to set 'self' in this case.

Bug: 942865
Change-Id: I340c0e2ccac10ce91fdd8187d3a5e53a4600a4cc
Reviewed-on: https://chromium-review.googlesource.com/1538420
WPT-Export-Revision: 26a1c767f72c5ad9630ef574c33748a7e5c14db2",3618133
619,2019-03-25T09:52:03Z,2019-10-19T21:57:29Z,,,"Unitless nonzero values were deprecated:
https://github.com/mathml-refresh/mathml-core/commit/6e821b2c9c83de22a3f734465aaf639b5d743b76",3618133
620,2019-03-24T13:42:13Z,2019-11-22T12:21:20Z,,,,3618133
621,2019-03-24T12:52:10Z,2019-12-18T17:15:41Z,,,,3618133
622,2019-03-24T10:19:59Z,2019-03-24T12:32:45Z,,,"Verify order and equality checks for setConfiguration with certificates.
Check the case of undefined/unset certificates.
This should cover https://github.com/web-platform-tests/wpt/issues/15840",3618133
623,2019-03-22T15:10:05Z,2019-03-24T23:36:16Z,,,"This adds a DOM parsing test for the case where the default namespace is reset on a prefixed element. If implemented according to the spec, serialization with the `require-well-formed` flag set should throw. The error message seems to suggest that this check was intended only for prefix declarations, and indeed something like xmlns:pre="""" would have been invalid. However, setting the default namespace back to null should be allowed, and from initial testing at least Firefox and Chrome seem to agree and do not throw.",3618133
624,2019-03-22T10:51:25Z,2019-03-22T11:09:06Z,,,,3618133
625,2019-03-19T17:55:10Z,2020-01-31T19:24:10Z,,,"These are a couple simplifications I found while experimenting with an ""ExecutorCDP"" (a wptrunner Executor build on Chrome DevTools Protocol).

@jdm I've removed a method from the ExecutorServoDriver class, but I'm still having trouble running wpt with Servo--even on `master`. Does this look okay to you?",3618133
626,2019-03-18T22:39:24Z,2020-01-24T20:00:53Z,,,"During the grid track sizing, if a grid item has a relative block-axis
size, we shouldn't override the size of its containing block, which we
don't know yet.

This already happened when calculating the min-content or max-content
contributions of the item, but not for the minimum contribution.

This caused problems especially when dynamically changing the minimum
size, then percentages were resolved with respect to the old size of the
grid area.

BUG=942811
TEST=external/wpt/css/css-grid/grid-items/grid-item-dynamic-min-contribution.html
TEST=external/wpt/css/css-grid/grid-items/grid-item-percentage-sizes-003.html

Change-Id: Ic39faad51fef17ef4d2994b60387ea67bc46bef7

Reviewed-on: https://chromium-review.googlesource.com/1529055
WPT-Export-Revision: 7f4784587dcd844d2d287af7e874f253603583dc",3618133
627,2019-03-16T10:23:37Z,2020-01-24T19:59:55Z,,,"@nox as far as I can tell browsers are all over the map so we basically get to chose what to do here.

Related to #15871.",3618133
628,2019-03-14T11:39:02Z,2019-03-14T11:40:43Z,,,,3618133
629,2019-03-14T08:25:19Z,2020-01-24T20:00:53Z,,,"The spec https://drafts.csswg.org/cssom/#resolved-values says that
line-height's resolved value should be the used value.

Bug: 899489
Change-Id: I2e37fc394cc58c4bd5246d8611e46d4db933c2f2

Reviewed-on: https://chromium-review.googlesource.com/1522053
WPT-Export-Revision: b9caf4cc505a8b470c197c943d03f1699df2995c",3618133
630,2019-03-13T23:26:53Z,2020-01-31T19:22:38Z,,,,3618133
631,2019-03-13T17:51:25Z,2019-08-31T18:53:12Z,,,"At least one mocking implementation has a bug that this code tickles -
see dumbmatter/fakeIndexedDB#26. Since I'd already reduced it down to
a few lines of code, it might as well become a WPT.",3618133
632,2019-03-13T15:37:33Z,2020-01-24T20:00:08Z,,,For https://github.com/whatwg/html/issues/4429.,3618133
633,2019-03-13T12:31:25Z,2020-01-24T19:59:47Z,,,"This fails in Chrome and Safari, against the HTML Standard.

See also https://github.com/whatwg/html/issues/3267. This bit me today.",3618133
634,2019-03-11T02:32:12Z,2019-06-18T19:20:34Z,,,"When no log formatter is set, `./wpt run --verify` is not useful as
no output is printed. This patch tries to set the default log formatter
to `log_mach` with the value of sys.stdout.
Fixed: #15013",3618133
635,2019-03-09T03:44:34Z,2020-01-24T20:00:52Z,,,"Bug: 845235
Change-Id: I07240ec7d2c4e35d63d9cbccf2be8f783b718565
Reviewed-on: https://chromium-review.googlesource.com/1513198
WPT-Export-Revision: 82b5272a87ca63753bcef3f886e2f85cd22c220a",3618133
636,2019-03-08T09:25:28Z,2019-03-26T21:13:03Z,,,Also add some edge cases (zero/one/more than two mfrac children).,3618133
637,2019-03-01T16:11:54Z,2020-01-24T20:00:51Z,,,"Not ready for review.

Bug: v8:8633
Change-Id: Ie1204956b166d247fe74ab19b37b22618fb89e72

Reviewed-on: https://chromium-review.googlesource.com/1496889
WPT-Export-Revision: 5be9a824d6a64237d0cbad52e80e9dd2b308e676",3618133
638,2019-03-01T11:40:18Z,2019-10-27T06:31:06Z,,,,3618133
639,2019-02-28T20:56:22Z,2020-01-24T20:00:47Z,,,"Per https://github.com/w3c/csswg-drafts/issues/2988 the overflow
shorthand should be parsed in logical order (block then inline) instead
of physical order (x then y).

Updated web platform tests.

Bug: 872356
Change-Id: I674f8a42b2712e7d8fdfa4ba4a7575ed2fb7bc85

Reviewed-on: https://chromium-review.googlesource.com/1490217
WPT-Export-Revision: 86f9bfb785df2f3db129eae92cfa73b81ccd79bd",3618133
640,2019-02-28T17:01:20Z,2020-01-24T20:00:50Z,,,"Add 'align' handling code to HTMLFooElement
which need to handle the attribute
as a custom handling code because css is more recommended
than 'align' attribute for a presentational purpose.

Only HTMLFooElements listed below has its own
custom 'align' handling code now.

Below, each spec covers the corresponding elements
for 'align' attribute.

1) https://html.spec.whatwg.org/#tables-2
thead, tbody, tfoot, tr, td, and th elements,
p, h1, h2, h3, h4, h5, h6

2) https://html.spec.whatwg.org/multipage/rendering.html#the-fieldset-and-legend-elements
legend element

3) https://html.spec.whatwg.org/#attributes-for-embedded-content-and-images
embed, iframe, img, or object element,
or an input element whose type attribute is in the Image Button state

Bug: 931743
Change-Id: I14a3596da88121201f735acd95a141a5f2f48b60

Reviewed-on: https://chromium-review.googlesource.com/1495157
WPT-Export-Revision: 2c248760b4392bc4fd21094760b2378b37a40fd6",3618133
641,2019-02-28T13:27:22Z,2019-03-15T05:24:32Z,,,"A first attempt at testing the following part of the `Applying an orientation lock algorithm:
`
> 2. The following sub-steps MAY be run asynchronously for performance reasons, for example, if the user agent has browsing contexts living in different processes:
>     1. Let browsing contexts be the list of the descendant browsing contexts of the top-level browsing  context's document.
>     2. If one of the browsing contexts's document's [[orientationPendingPromise]] is not null:
>        1. Let doc be the document which has a not null [[orientationPendingPromise]].
>        2. Reject doc's [[orientationPendingPromise]] with DOMException whose name is AbortError.
>        3. Set doc's [[orientationPendingPromise]] to null .

In browsing-contexts.html - I am just attempting to lock the screen on load.  In iframe-lock, I am trying to also lock and hopefully that promise will be rejected.  I have put the iframe code in resources, but that is actually where the test is so not sure if that is right?  
",3618133
642,2019-02-27T21:53:08Z,2020-01-24T20:00:48Z,,,"
Reviewed-on: https://chromium-review.googlesource.com/1492753
WPT-Export-Revision: 4c6ff46e90f394cada1a808b9fbec670a91251b1",3618133
643,2019-02-26T05:50:04Z,2020-01-24T20:03:56Z,,,"Web Compatibility bugs bonanza... weird failures across all UAs. 

I'm thinking I might split this into multiple test based on each interface type. 
",3618133
644,2019-02-25T01:42:59Z,2019-05-13T02:11:53Z,,,"Remove the `--ignore-rules` option so we will not store
affected tests ignore list in command line.
This patch tries to store the ignore rules in a file
named .ignorerulesin the root working directory.
Meanwhile, a new option `--ignore-rules-file` is added to specify
the custom ignore rules file for flexibility.

Related: #14560, #15436",3618133
645,2019-02-22T10:22:39Z,2019-08-27T15:14:40Z,,,"Ref: https://github.com/w3c/webdriver/issues/1400

Added test to ensure that script is aborted when location or context is being changed.

Note: This is work in progress until consensus is found for this case.",3618133
646,2019-02-22T07:01:18Z,2019-03-15T16:35:49Z,,,"This PR ports https://www.w3.org/International/tests/repo/results/css-input-byte-stream to WPT.

It contains tests for basic functionalities, unknown `@charset` value, `@charset` typos, and the precedence of HTML/HTTP/BOM/`@charset`.

/cc @r12a
",3618133
647,2019-02-21T14:25:16Z,2020-01-24T20:04:38Z,,,"Tests for https://github.com/w3c/payment-request/pull/836

Bring back PaymentAddress.regionCode for Payment Request API 1.1.

This reverts commit 4b7ad2a0c3b6b8c9cda425f7b2567bcd832c115d.",3618133
648,2019-02-20T21:05:50Z,2019-03-06T21:38:57Z,,,"in constructor and connectedCallback

as there is an interoperability issue between Chromium and Firefox ",3618133
649,2019-02-17T17:03:55Z,2020-01-10T16:12:52Z,,,WebKit export from bug: [New WPT test: imported/w3c/web-platform-tests/html/semantics/embedded-content/media-elements/replay.html](https://bugs.webkit.org/show_bug.cgi?id=194760),3618133
650,2019-02-17T16:35:50Z,2020-01-24T18:39:10Z,,,WebKit export from bug: [New WPT test: imported/w3c/web-platform-tests/media-source/mediasource-replay.html](https://bugs.webkit.org/show_bug.cgi?id=194759),3618133
651,2019-02-06T12:28:00Z,2019-12-14T19:39:38Z,,,"Those tests expose differences between Safari and the spec on one side, and the rest of the world on the other side.

\[These are for https://github.com/whatwg/dom/pull/732 and https://github.com/whatwg/html/pull/4354. - Anne]",3618133
652,2019-02-05T23:41:54Z,2019-02-05T23:46:12Z,,,"To avoid the content is zoomed out and to avoid expanding the layout viewport
to the minimum-scale size.

On mobile without specifying the viewport meta tag, the target element,
positioned at the center of the contents, is initially visible because the
content is zoomed out to some extent.  But the test supposes that the target
element is scrolled out of view in the first place and is moved into the
root margin after setting scrollLeft to 100 in step0().  Thus all subsequent
test cases don't work as expected.",3618133
653,2019-02-01T22:23:58Z,2020-01-24T20:00:46Z,,,"When a grid track has an auto min track sizing function and the
grid container is being sized under a min/max-content constraint,
the track’s base size should be set to the limited min/max-content
contribution.

This patch does not exactly follow the spec because Blink does not
perform two independent layout passes for min-content and max-content.
It lays out only once, and assigns the base size as the min-content
and the growth limit as the max-content. Therefore, this patch sets
the base size to the limited min-content contribution, even when
the grid container is being sized under a max-content constraint.
The result appears to be the same, as checked by the test.

Spec: https://drafts.csswg.org/css-grid/#algo-single-span-items

BUG=599042

TEST=external/wpt/css/css-grid/layout-algorithm/grid-sizing-under-min-max-content-constraints.html

Change-Id: I158bcdede2e878ab171964cdb9ddd25542ebd887
Reviewed-on: https://chromium-review.googlesource.com/1450672
WPT-Export-Revision: 25874728e1577419e86ba94f7e307adce7fc68a7",3618133
654,2019-01-25T09:01:56Z,2019-06-05T16:52:58Z,,,"* Check the test verification results: if it's empty then the step
results should be set to ""FAIL"".
* Set the summary results based on the step results list.

Fix: #15020",3618133
655,2019-01-25T03:39:14Z,2019-04-07T16:15:24Z,,,Tests for issue https://github.com/w3c/mediacapture-record/issues/151,3618133
656,2019-01-23T12:19:03Z,2020-01-24T20:04:12Z,,,Fixes https://github.com/web-platform-tests/wpt/issues/15015.,3618133
657,2019-01-22T13:55:19Z,2020-02-26T22:16:11Z,,,Follows https://github.com/w3c/csswg-drafts/pull/3543,3618133
658,2019-01-21T03:50:43Z,2020-01-24T20:00:45Z,,,"https://drafts.csswg.org/selectors-4/#adjacent-sibling-combinators
https://drafts.csswg.org/selectors-4/#general-sibling-combinators

Reviewed-on: https://chromium-review.googlesource.com/1420555
WPT-Export-Revision: 5a9d013a789270d50a39f6a3c0fb6755a821f400",3618133
659,2019-01-15T23:54:22Z,2020-01-31T19:20:27Z,,,"Note: for now, it depends on https://github.com/web-platform-tests/wpt/pull/14852 being merged first (or there will be the duplicate Epiphany commit); of course that can be changed if desired",3618133
660,2019-01-15T03:36:59Z,2020-01-27T14:29:04Z,,,"@zcorpan, if you recall, we discussed moving these tests during TPAC. IIRC, we had concluded that the test were not 100% right, because of some under-defined things in HTML. 

Step 1 might just be to merge these, then we can look at fixing them up.  ",3618133
661,2019-01-14T02:25:15Z,2020-01-31T19:19:50Z,,,"When `--log-*-level` option is used in `./wpt run` command line to set
the log level, it should be applied to the wpt server as well.
Fixed: #10512",3618133
662,2019-01-12T00:31:38Z,2020-01-24T20:00:44Z,,,"Follows https://github.com/WICG/kv-storage/commit/7057d3dc66101fa237bbc6cd01ad4633b520f65b.

This also removes .tentative from the web platform test filenames, as there exists a spec these days.

Binary-Size: needed to implement the feature. Enabling gzip is tracked in crbug.com/920264.

Reviewed-on: https://chromium-review.googlesource.com/1407433
WPT-Export-Revision: 248bee6a4264ee34e109bc028cf6f47a1ce6a349",3618133
663,2019-01-09T10:13:42Z,2019-03-04T12:03:13Z,,,From https://github.com/WebAssembly/spec/blob/b42efa9b07c5544079c31f6088a66bead617559c/test/js-api/limits.any.js,3618133
664,2018-12-21T08:45:06Z,2019-11-22T12:19:01Z,,,Part of removing the support of test-level properties from testharness.js,3618133
665,2018-12-20T12:27:45Z,2020-01-31T19:19:24Z,,,"Add a new option `--verbose` to `./wpt run` command line as an alias
of `--log-mach-level debug`.
Fix: #7846",3618133
666,2018-12-20T05:25:35Z,2019-11-22T12:05:44Z,,,"Because all scrolling happens asynchronously in iOS, we can't rely on 0 second timer to detect whether the fragment navigation had happened or not.

Instead, test whether the fragment navigation had moved the focus or not, which always happens asynchronously even in iOS.",3618133
667,2018-12-19T15:38:22Z,2020-01-24T20:00:39Z,,,"As the spec mentions, if the content or layout of the document changes (e.g.
content is added, moved, deleted, resized) such that the content of a snapport
changes, the UA must re-evaluate the resulting scroll position, and re-snap if
required. If the scroll container was snapped before the content change and that
same snap position still exists (e.g. its associated element was not deleted),
the scroll container must be re-snapped to that same snap position after the
content change.

This patch adds SnapForAllContainers() right after UpdateAllSnapContainerData()
during PerformPostLayoutTasks() and adds tests for that.

Some scroll snap tests assume that a scroller's initial scroll position is (0,0)
even with one and only non-zero snap position. This assumption won't hold true
after this change since the scroller would snap at the snap position at the
beginning. So we add an anchor snap element at (0,0) to ensure the scroller
always starts at (0,0) for the tests.

This patch also fixes a bug in VisualViewport::MaximumScrollOffset().
Bug: 866127
Change-Id: Ib050ef91b04d4391a846eda3dbf667e4d412cb08

Reviewed-on: https://chromium-review.googlesource.com/1340567
WPT-Export-Revision: 856f64763fced8e3fe6f3c38fc677ff4d5b34ee1",3618133
668,2018-12-19T06:10:06Z,2018-12-21T18:20:08Z,,,"This PR records all executed assertions for single test files.
These assertions are passed to the completion callback so that results can be displayed in various ways.

This PR adds a method to enable continue executing the test even if an assertion is failing.
A test opts in by calling a specific method.

A test using this new mode is added to validate the mechanism.
This test is a testharness-based version of https://github.com/WebKit/webkit/blob/master/LayoutTests/fast/frames/detached-frame-property.html",3618133
669,2018-12-18T23:59:32Z,2020-01-24T20:00:42Z,,,"Previously video with object-fit:none or object-fit:cover was
not clipped when the contents overflowed the replaced content
box.

1. Combine overflow handling of LayoutReplaced subclasses and
LayoutBox by overriding ComputeShouldClipOverflow() method.
Previously the similar logic was in
NeedsOverflowClipForReplacedContents() in
paint_property_tree_builder.cc.

2. Remove the dependency of image overflow clip on compositing
state.

3. ReplacedPainter will emit paint chunk with overflow clip
depending on paint property only. No longer depends on other
conditions. This applies to all replaced elements.

Bug: 912357
Change-Id: Ie173551aab723d9bb28a2057af78a579c93b1e51

Reviewed-on: https://chromium-review.googlesource.com/1363848
WPT-Export-Revision: 698706af25d433b4d6889282c0ce69d78cc1f558",3618133
670,2018-12-18T06:02:33Z,2018-12-20T11:32:22Z,,,"This PR ports https://w3c.github.io/i18n-tests/results/css-ruby#ruby_merge to WPT. Currently, the tests are manual tests, since we're unable to come up with a way to automate them.

The `-00X.html` tests are in horizontal writing mode, and `-10X.html` tests are in vertical writing mode.

Please note that if `ruby-merge-{collapse,auto}-001` fails in a browser (or non-browser impl), the corresponding line break tests (i.e., `ruby-merge-{collapse,auto}-{0,1}02`) will not give a reliable result.

I didn't include `ruby-merge-auto-{0,1}01.html` because it's an exploratory test and the behavior is not in the normative text of the spec currently.

/cc @r12a @himorin
",3618133
671,2018-12-14T07:01:51Z,2019-11-20T12:05:52Z,,,"Remove useless test-level properties, including:
* Incorrect type of the properties parameter for `promise_test()`
* `flags` property passed to `test()`, which is unused in testharness.js
* Incorrect type of the properties `generate_tests`: moved to comments
* `help` property: moved the head of the test files
* Default empty properties dictionary
Related: #14394",3618133
672,2018-12-13T09:31:49Z,2018-12-23T03:42:18Z,,,"This PR ports https://w3c.github.io/i18n-tests/results/css-ruby#ruby_align to WPT. Currently, the tests are manual tests, since we're unable to come up with a way to automate them.

The `-00X.html` tests are in horizontal writing mode, and `-10X.html` tests are in vertical writing mode. Each test has two variants, **long base** and **long annotation**. For `space-between` and `space-around` tests, there're variants for one Latin word and multiple Latin word as ruby bases/annotations.

/cc @r12a @himorin",3618133
673,2018-12-13T09:12:43Z,2018-12-20T12:05:46Z,,,"This PR ports https://w3c.github.io/i18n-tests/results/css-ruby#ruby_position to WPT. Currently, the tests are manual tests, since we're unable to come up with a way to automate them.

The `-00X.html` tests are in horizontal writing mode, and `-10X.html` tests are in vertical writing mode. The `inter-character` tests are for Bopomofo annotations with different sorts of tonal marks.

/cc @r12a @himorin
",3618133
674,2018-12-11T21:09:23Z,2020-01-24T20:00:33Z,,,"The change to Lato-Medium is to add a mapping from U+fb06 to the 'st'
ligature glyph, which was previously only accessible through the 'dlig'
feature.

This tests https://github.com/w3c/csswg-drafts/pull/3430

Change-Id: Iaf0ff1f99f3ec282bacb0e3cb44ede27d47fac5a

Reviewed-on: https://chromium-review.googlesource.com/1294874
WPT-Export-Revision: a90d5c7efc7b887996cb9600a278e80d968c3d60",3618133
675,2018-12-10T23:02:22Z,2019-02-15T22:35:47Z,,,"If a selector is invalid, the entire selector list is invalid.
https://drafts.csswg.org/selectors-4/#grouping",3618133
676,2018-12-07T16:25:40Z,2020-01-24T20:00:17Z,,,"Per the UI Events specification
(https://w3c.github.io/uievents-code/#key-legacy), keys such as
\u00e0 (i.e., à) should have a code of ""Unidentified"".  Some tests
in key.py expect an empty value, which seems to be an oversight.

This PR supersedes https://github.com/web-platform-tests/wpt/pull/12013.",3618133
677,2018-12-06T19:35:08Z,2020-01-24T20:00:36Z,,,"This change list adds the proper layout test to examine if the
out of range (HDR) sRGB values are preserved in color managed
canvas code.

Bug:732904
Change-Id: Id0b01050b8dd53ef0e5958e05b0a5e30ffd093ca
Reviewed-on: https://chromium-review.googlesource.com/1306337
WPT-Export-Revision: f9bec38ed5537d9c653424df91a7fcc512de4947",3618133
678,2018-12-06T15:44:05Z,2019-01-10T15:07:26Z,,,"Tests that set up trusted-types-enforcing CSP now execute in a separate iframe, not to clash with the harness using the DOM directly.",3618133
679,2018-12-05T14:01:47Z,2020-01-24T20:00:40Z,,,"This patch adjusts `ScriptURLString` to be a union including `USVString`,
not `DOMString`. The advice in [WebIDL][1] isn't exactly clear, but it
boils down to @domenic's notes in [heycam/webidl#84][2] and
[w3ctag/design-principles#93][3].

Long story short, URLs are `USVString`. This patch adjusts our
implementation to match.

[1]: https://heycam.github.io/webidl/#idl-USVString
[2]: https://github.com/heycam/webidl/issues/84#issuecomment-300857185
[3]: https://github.com/w3ctag/design-principles/issues/93#issuecomment-379816152

Change-Id: I9bf1240b421287d7d9c291b13d887ca981a66231
Reviewed-on: https://chromium-review.googlesource.com/1363178
WPT-Export-Revision: 98c00dc650d15c101d6fa9619f864f4e04b0ddbd",3618133
680,2018-12-03T14:26:01Z,2018-12-20T12:15:39Z,,,Add missing test for `Node.isConnected` in shadow tree.,3618133
681,2018-11-30T23:44:45Z,2020-01-24T20:00:38Z,,,"For RGBX, the typical path is
WEBPImageDecoder::DecodeSingleFrame
WEBPImageDecoder::Decode
ImageDecoder::DecodeFrameBufferAtIndex
ImageDecoderWrapper::Decode
ImageFrameGenerator::DecodeandScale
DecodingImageGenerator::GetPixels
PainImage::DecodeFromGenerator
PaintImage::Decode
GpuImageDecodeCache::DrawAndScaleImage
GpuImageDecodeCache::DecodeImageIfNecessary
GpuImageDecodeCache::DecodeImageInTask

Now for YUV, the typical path will become
WEBPImageDecoder::DecodeSingleFrameToYUV()
WEBPImageDecoder::DecodeSingleFrame()
WEBPImageDecoder::Decode()
WEBPImageDecoder::DecodeToYUV()
WEBPImageDecoder::DecodeToYUV()
ImageFrameGenerator::DecodeToYUV()
DecodingImageGenerator::GetYUVA8Planes()
PaintImage::DecodeFromGenerator()
PaintImage::Decode()
GpuImageDecodeCache::DrawAndScaleImage()
GpuImageDecodeCache::DecodeImageIfNecessary()
GpuImageDecodeCache::DecodeImageInTask()

Change-Id: I3bc7b5470b240e11eebd90d7b4a2ede04d5b3d93
Reviewed-on: https://chromium-review.googlesource.com/1338461
WPT-Export-Revision: 8698d66c6328f89fc3d9e081273354e6a55d5f59",3618133
682,2018-11-28T11:15:37Z,2020-01-24T20:00:35Z,,,"Element \<area>'s default visiblity is hidden[display: none] per spec,
but [display: inline] currently.

SPEC:
https://html.spec.whatwg.org/multipage/rendering.html#hidden-elements

Bug: 689361
Change-Id: I3d4c38713e0a9f3e879815dadbc1cf8a212c0d7a
Reviewed-on: https://chromium-review.googlesource.com/1295618
WPT-Export-Revision: 6b3985528a5265ae4fdc5cabe7ff5aef30ebe912",3618133
683,2018-11-21T17:54:20Z,2020-01-24T20:00:30Z,,,"Blocker: testdriver doens't let click inside iframes!
https://cs.chromium.org/chromium/src/third_party/WebKit/LayoutTests/external/wpt/resources/testdriver.js?rcl=5d1bd990e4c21787e6371ab8db5b4fd711eaa7c3&l=102

Bug: 860713
Change-Id: I83b80908b7adc2a65446e5b27000dc67e37d4b9a

Reviewed-on: https://chromium-review.googlesource.com/1249391
WPT-Export-Revision: 704281bcbbd2c75b7dc6a50cb17be1cef141d6e1",3618133
684,2018-11-17T01:21:23Z,2019-11-18T20:59:52Z,,,,3618133
685,2018-11-07T22:17:42Z,2018-11-07T22:41:50Z,,,WebKit export from bug: [\[Cocoa\] Fix failing imported/w3c/web-platform-tests/media-source/mediasource-changetype-play.html test](https://bugs.webkit.org/show_bug.cgi?id=191396),3618133
686,2018-11-07T11:40:58Z,2020-01-24T20:00:37Z,,,"A @keyframes block has a name given by the \<custom-ident> or \<string>
in its prelude. The two syntaxes are equivalent in functionality;
the name is the value of the ident or string[1].
[1]: https://drafts.csswg.org/css-animations/#typedef-keyframes-name

Bug: 882286
Change-Id: I2e9531beb17e38699dd0c535ae03f0bb16638227

Reviewed-on: https://chromium-review.googlesource.com/1322260
WPT-Export-Revision: 52dec894946c86660798a223140329481d5513db",3618133
687,2018-11-04T09:20:44Z,2019-08-26T09:17:38Z,,,"Fixes #12028.

Note that not all usage of `exchangeIceCandidates()` is replaced. The remaining should be fixed in another PR.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
688,2018-11-02T21:25:05Z,2019-08-27T15:08:40Z,,,,3618133
689,2018-10-31T05:18:27Z,2018-10-31T14:42:46Z,,,Fixes #1354 ,3618133
690,2018-10-26T15:14:37Z,2019-02-22T16:26:58Z,,,Inspired by https://github.com/whatwg/html/issues/3372. This tests the current spec.,3618133
691,2018-10-25T05:20:19Z,2020-01-24T20:00:32Z,,,"Since reflection-forms.html does not folow the spec of METER element,
we should update the reflection-forms.html for METER element.

Also, IDL attributes of METER are not reflect attribute, I decide to
move tests of unset attribute into the-meter-element/meter.html.

Bug: 894661
Change-Id: Ic002406f4da84d246cf854d0550ee4f7a1d7cf20
Reviewed-on: https://chromium-review.googlesource.com/1293256
WPT-Export-Revision: fd1f69053ff04b9c1a601fd476194ceab1326ae0",3618133
692,2018-10-22T16:31:21Z,2020-01-24T20:00:31Z,,,"Navigator's xr attribute in third_party/blink/renderer/modules/vr/navigator_vr.idl
doesn't contain SameObject attribute unlike WebXR Device API spec.

I added SameObject wpt on Navigator and its test is passed.

Bug: 897486
Change-Id: I38d3826f200f224107391625499ee270889c2ec2

Reviewed-on: https://chromium-review.googlesource.com/1293050
WPT-Export-Revision: 895f68b40311306649301d41bf7da14c97cc866e",3618133
693,2018-10-19T20:39:25Z,2018-10-29T18:12:34Z,,,"Because multiple server processes are started in parallel, requests logs
for each are interleaved in the parent process. Previously, they shared
the same configuration, so it was not possible to differentiate entries
added by each server process.

Use ""child"" loggers with names derived from the server scheme so that
each logging entry describes the server from which it originated.

---

Example output (starting the server, requesting http://web-platform.test:8000, then requesting https://web-platform.test:8443):

    [...]

    INFO:web-platform-tests.https:Starting server on web-platform.test:8443
    DEBUG:web-platform-tests.http:GET /
    DEBUG:web-platform-tests.http:Found handler FileHandler
    DEBUG:web-platform-tests.http:200 GET / (None) 0
    DEBUG:web-platform-tests.https:GET /
    DEBUG:web-platform-tests.https:Found handler FileHandler
    DEBUG:web-platform-tests.https:200 GET / (None) 0

[In `master` today, the use of a single logger is clearly intentional](https://github.com/web-platform-tests/wpt/blob/64fed9375cb182a7109797f034a741977af95485/tools/wptserve/wptserve/logger.py). I don't understand the motivation, so I can't tell if introducing so-called ""child"" loggers is somehow undesirable.

The structure of the code suggests that some consumers might be supplying custom implementations of the `RequestRewriter` and `Router` classes. My preference is to avoid optional parameters when possible, but I've used them here in the interest of maintaining compatibility with those users.",3618133
694,2018-10-16T02:53:24Z,2018-10-19T09:54:00Z,,,"We need check if the response content is iterable before we iterable
over it. Otherwise, it might cause the server hanging. See #8368",3618133
695,2018-10-15T19:32:04Z,2019-03-26T16:57:45Z,,,"This may be a little too aggressive. [We know that test contributors dislike the `step`-based API of `async_test`](http://lists.w3.org/Archives/Public/public-test-infra/2018JulSep/0011.html), but [using `promise_test` for a callback-driven API carries it's own overhead](http://lists.w3.org/Archives/Public/public-test-infra/2018OctDec/0000.html). The web platform may not be sufficiently Promise-based to make `promise_test` an ergonomic default. There may also be other reasons to keep `async_test` around (e.g. cases where parallel testing is a hard requirement). A pull request seemed like the best way to prompt the discussion.",3618133
696,2018-10-15T14:50:21Z,2020-01-24T19:59:44Z,,,See https://github.com/httpwg/http-core/issues/31 for context.,3618133
697,2018-10-13T11:31:04Z,2018-12-24T07:48:00Z,,,"### Description

This PR updates all data channel related tests to reflect the current spec (at the time of writing, that was [revision 1cc5bfc3ff18741033d804c4a71f7891242fb5b3](https://rawgit.com/w3c/webrtc-pc/1cc5bfc3ff18741033d804c4a71f7891242fb5b3/webrtc.html)).

### Updated/Fixed Tests

* RTCDataChannel-id
  - *DTLS client uses odd data channel IDs*
  - *DTLS server uses even data channel IDs*
* RTCDataChannel-send-receive (renamed from RTCDataChannel-send)
  - (\<type> is of *In-band negotiated channel*, *Negotiated channel* or *Asymmetric negotiated channel*)
  - *\<type>: Calling send() when not open should throw InvalidStateError* (renamed from *Calling send() when data channel is in connecting state should throw InvalidStateError*)
  - *\<type>: Calling send() with null should throw TypeError*
  - *\<type>: Calling send() with undefined should throw TypeError*
  - *\<type>: Should be able to send (local) simple string and receive (remote) as string* (based on *Data channel should be able to send simple string and receive as string*)
  - *\<type>: Should be able to send (remote) simple string and receive (local) as string* (based on *Data channel should be able to send simple string and receive as string*)
  - *\<type>: Should be able to send unicode string and receive as unicode string* (renamed from *Data channel should be able to send unicode string and receive as unicode string*)
  - *\<type>: Should ignore binaryType and always receive string message as string* (renamed from *Data channel should ignore binaryType and always receive string message as string*)
  - *\<type>: Should be able to send Uint8Array message and receive as ArrayBuffer* (renamed from *Data channel should be able to send Uint8Array message and receive as ArrayBuffer*)
  - *\<type>: Should be able to send ArrayBuffer message and receive as ArrayBuffer* (renamed from *Data channel should be able to send ArrayBuffer message and receive as ArrayBuffer*)
  - *\<type>: Should be able to send Blob message and receive as ArrayBuffer* (renamed from *Data channel should be able to send Blob message and receive as ArrayBuffer*)
  - *\<type>: Should be able to send ArrayBuffer message and receive as Blob* (renamed from *Data channel should be able to send ArrayBuffer message and receive as Blob*)
  - *\<type>: Should be able to transmit an empty string* (moved from and based on datachannel-emptystring *Can send empty strings across a WebRTC data channel.*)
  - *\<type>: Should receive messages as Blob by default* (renamed from *Data channel binaryType should receive message as Blob by default*)
  - *\<type>: Sending multiple messages with different types should succeed* (based on *Sending multiple messages with different types should succeed and be received*)
  - *\<type>: Receiving multiple messages with different types should succeed* (based on *Sending multiple messages with different types should succeed and be received*)
* RTCPeerConnection-createDataChannel
  - *createDataChannel attribute default values*
  - *createDataChannel with provided parameters should initialize attributes to provided values*
  - *createDataChannel with both maxPacketLifeTime and maxRetransmits should throw TypeError* (renamed from *createDataChannel with both maxPacketLifeTime and maxRetransmits should throw SyntaxError*)
  - *createDataChannel with too long label should throw TypeError* (renamed from *createDataChannel with negotiated false and long label should throw TypeError*)
  - *createDataChannel with too long protocol should throw TypeError* (renamed from *createDataChannel with negotiated false and long protocol should throw TypeError*)
  - *Channels created (after setRemoteDescription) should have id assigned* (renamed from *Channels created after SCTP transport is established should have id assigned*)
* RTCPeerConnection-ondatachannel
  - *Data channel event should fire when new data channel is announced to the remote peer* (renamed from *datachannel event should fire when new data channel is announced to the remote peer*)
  - *In-band negotiated channel created on remote peer should match the same configuration as local peer* (renamed from *Data channel created on remote peer should match the same configuration as local peer*)
* RTCSctpTransport-constructor
  - *setRemoteDescription() with answer containing data media should initialize pc.sctp*
  - *setLocalDescription() with answer containing data media should initialize pc.sctp*
* RTCSctpTransport-maxMessageSize
  - *Remote offer SDP missing max-message-size attribute*
  - *max-message-size with a (non-zero) value provided by the remote peer*
  - *Renegotiate max-message-size with various values provided by the remote peer* (based on *Renegotiate max-message-size with a (non-zero) value provided by the remote peer*)
  - *max-message-size with a (non-zero) value larger than canSendSize provided by the remote peer*

### New Tests

* RTCDataChannel-binaryType
  - *Setting binaryType to 'blob' should succeed*
  - *Setting binaryType to 'arraybuffer' should succeed*
  - *Setting invalid binaryType 'jellyfish' should throw SyntaxError*
  - *Setting invalid binaryType 'arraybuffer ' should throw SyntaxError*
* RTCDataChannel-bufferedAmount
  - *bufferedAmount initial value should be 0 for both peers*
  - *bufferedAmount should not decrease immediately after initiating closure*
  - *bufferedAmount should not decrease after closing the peer connection*
* RTCDataChannel-bufferedAmountLowThreshold
  - (\<type> is of `DOMString` or `Uint8Array`)
  - *\<type> of 4 bytes: bufferedamountlow event should fire once bufferedAmount <= 0 (default)*
  - *\<type> of 4 bytes: bufferedamountlow event should fire once bufferedAmount <= 2 (custom)*
  - *\<type> of 4 bytes: bufferedamountlow event should fire once bufferedAmount <= 4 (custom)*
  - *\<type> of 4 bytes: bufferedamountlow event should fire once bufferedAmount <= 8 (custom)*
  - *\<type> of 4 bytes x 10: bufferedamountlow event should fire once bufferedAmount <= 2 (custom)*
  - *\<type> of 4 bytes x 10: bufferedamountlow event should fire once bufferedAmount <= 4 (custom)*
  - *\<type> of 4 bytes x 10: bufferedamountlow event should fire once bufferedAmount <= 8 (custom)*
  - *\<type> of 4 bytes: bufferedamountlow event should not fire on other channels*
* RTCDataChannel-close
  - *In-band data channel closing before connection establishment*
  - *In-band data channel closing after connection establishment*
  - *In-band data channels x10 closing on local side should be synchronized across peers*
  - *In-band data channels x10 closing on remote side should be synchronized across peers*
  - *Negotiated data channels x10 closing should be synchronized across peers*
  - *Closing peer connection locally should close all 10 channels for the remote peer*
* RTCDataChannel-dcep
  - (\<value> is of `undefined`, `null`, `0`, `65535` or `4294967295`)
  - *Ordered and reliable channel should be created via DCEP*
  - *Unordered and reliable channel should be created via DCEP*
  - *Ordered and unreliable (maxRetransmits=\<value>) channel should be created via DCEP*
  - *Unordered and unreliable (maxRetransmits=\<value>) channel should be created via DCEP*
  - *Ordered and unreliable (maxPacketLifeTime=\<value>) channel should be created via DCEP*
  - *Unordered and unreliable (maxPacketLifeTime=\<value>) channel should be created via DCEP*
  - *Channel with priority set to high should be created via DCEP*
  - *Channel IDs should be synchronized when created via DCEP*
  - *Zero length label and protocol option should be transmitted via DCEP*
  - *Maximum length label and protocol option should be transmitted via DCEP*
  - *Maximum length label and protocol option (3 byte unicode) should be transmitted via DCEP*
* RTCDataChannel-id
  - *In-band negotiation with a specific ID should not be allowed*
  - *Odd/even role should not be violated when mixing with negotiated channels*
  - *Creating a channel after exhausting the maximum number of channels should throw OperationError (after connection establishment)*
  - *ID reuse should not be possible before the former channel with the same ID closed*
  - *ID reuse should be possible once the former channel with the same ID closed*
  - *Channel IDs should be reassigned after exhaustion in case a channel has been closed*
  - *Exhausting channels with one peer should not violate the odd/even rule*
  - *Channel ID exhaustion handling (before and after connection establishment)*
* RTCDataChannel-onopen
  - *In-band channel: Open event should be fired (local) when the data channel opens*
  - *In-band channel: Open event should be fired (remote) when the data channel opens*
  - *Negotiated channel: Open event should be fired when the channels open*
* RTCDataChannel-send-receive
  - (\<type> is of *In-band negotiated channel*, *Negotiated channel* or *Asymmetric negotiated channel*)
  - (\<size> is of `1024`, `16384`, `65536`, `131072`, `262144`, `524288`, `1048576`, `16777216` or `33554432`)
  - *\<type>: Calling send() with 42 should throw TypeError*
  - *\<type>: Should be able to send Int8Array message and receive as ArrayBuffer*
  - *\<type>: Should be able to send Uint8ClampedArray message and receive as ArrayBuffer*
  - *\<type>: Should be able to send Int16Array message and receive as ArrayBuffer*
  - *\<type>: Should be able to send Uint16Array message and receive as ArrayBuffer*
  - *\<type>: Should be able to send Int32Array message and receive as ArrayBuffer*
  - *\<type>: Should be able to send Uint32Array message and receive as ArrayBuffer*
  - *\<type>: Should be able to send Float32Array message and receive as ArrayBuffer*
  - *\<type>: Should be able to send Float64Array message and receive as ArrayBuffer*
  - *\<type>: Should be able to send DataView message and receive as ArrayBuffer*
  - *\<type>: Should be able to send Uint8Array (with offset) message and receive as ArrayBuffer*
  - *\<type>: Should be able to send DataView (with offset) message and receive as ArrayBuffer*
  - *\<type>: Should be able to send Blob (with offset) message and receive as ArrayBuffer*
  - *\<type>: Should be able to transmit an empty Uint8Array*
  - *\<type>: Should be able to transmit an empty Blob*
  - *\<type>: Sending and receiving \<size> bytes should succeed or raise TypeError*
  - *\<type>: Sending and receiving \<size> +1 bytes should raise TypeError*
  - *\<type>: Sending and receiving 16 KiB x64 should succeed*
  - *\<type>: Sending and receiving 16 KiB x256 on both peer simultaneously should succeed*
  - *\<type>: Sending and receiving 2048 messages should succeed and keep order*
  - *\<type>: Closing a channel (local) with pending data should transfer that data before becoming closed*
  - *\<type>: Sending after the channel has been closed (local) should raise InvalidStateError*
  - *\<type>: Sending after the channel has been closed (remote) should raise InvalidStateError*
  - *\<type>: Sending after the peer connection has been closed (local) should raise InvalidStateError*
  - *\<type>: Sending after the peer connection has been closed (remote) should raise InvalidStateError*
* RTCDataChannel-send-receive-stress
  - *Stress-test with multiple channels sending and receiving using various data sources*
* RTCPeerConnection-close
  - *Closing the peer connection should close all channels (before connection establishment)*
  - *Closing the local peer connection should close all channels (after connection establishment)*
  - *Closing the remote peer connection should close all channels (after connection establishment)*
  - *Closing the peer connection should set the SCTP transport to closed*
* RTCPeerConnection-createDataChannel
  - *createDataChannel with both maxPacketLifeTime and maxRetransmits null should succeed*
  - *createDataChannel with too long label (2 byte unicode) should throw TypeError*
  - *createDataChannel with same label used twice should not throw*
  - *createDataChannel with too long protocol (2 byte unicode) should throw TypeError*
  - *createDataChannel with maximum length label and protocol should succeed*
  - *createDataChannel with negotiated false should succeed*
  - *createDataChannel with negotiated false and id 42 should ignore the id*
  - *createDataChannel with negotiated true and id not defined should throw TypeError*
  - *createDataChannel with negotiated true and id null should throw TypeError*
  - *Reusing a data channel id that is in use should throw OperationError*
  - *Reusing a data channel id that is in use (after setRemoteDescription) should throw OperationError*
  - *Reusing a data channel id that is in use (after setRemoteDescription, negotiated via DCEP) should throw OperationError*
  - *New data channel should be in the connecting state after creation (after connection establishment)*
* RTCPeerConnection-ondatachannel
  - *Should be able to send data in a datachannel event handler*
  - *Open event should not be raised when closing the channel in the datachannel event*
  - *Open event should be raised when closing the channel in the datachannel event after enqueuing a task*
  - *Open event should not be raised when sending and immediately closing the channel in the datachannel event*
  - *In-band negotiated channel created on remote peer should match the same (default) configuration as local peer*
* RTCSctpTransport-constructor
  - *setRemoteDescription() with answer not containing data media should not initialize pc.sctp*
  - *setLocalDescription() with answer not containing data media should not initialize pc.sct*
* RTCSctpTransport-onstatechange
  - *RTCSctpTransport.onstatechange should fire when the state changes*
* historical
  - *RTCDataChannel member maxRetransmitTime should not exist*

### Comments

Only few helper functions have been changed but everything is either backwards compatible or the affected tests have been updated. FWIW, I have carefully tested new test cases (if that was possible) on Firefox and Chrome by temporarily commenting out asserts and in some cases even by throwing in adapter (`RTCSctpTransport.maxMessageSize` for example).

Towards WebRTC implementations: A bunch of new issues are revealed by these tests. I'm at a tight time schedule, so I can't file them for you at the moment. This listing here should help you in finding new or updated test cases, so you can track and file new issues in your bug trackers. /cc @nils-ohlmeier @jan-ivar. Please also forward this to whoever is responsible for Google's, Safari's and Edge's (:joy_cat:) data channel implementation.

And I apologise for creating this rather large PR.",3618133
698,2018-10-02T04:21:50Z,2020-01-24T20:03:42Z,,,"Modified resource fetching to allow piping back to the ResourceClient a
struct needed for firing the securityviolationevent. This allows us
to specify the targeted element as well in the event.

CSP violation events have overly vague srcElement and path when being
triggered for an element that requires a fetch because the element is not
being passed down to where the csp check takes place and the report is
fired.

Bug: 737647
Change-Id: I944ea2ea69447c612c01b9e6f723f110fa28a1f5

Reviewed-on: https://chromium-review.googlesource.com/558917
WPT-Export-Revision: 31f217e45648ca2ab02d5c681cde6e48f0134852",3618133
699,2018-10-02T00:34:12Z,2019-11-26T12:44:05Z,,,This is a pull request that solved issues pointed out on https://github.com/web-platform-tests/wpt/pull/12712 ,3618133
700,2018-09-30T20:26:14Z,2018-10-17T21:00:24Z,,,https://github.com/whatwg/html/issues/3682,3618133
701,2018-09-27T10:35:56Z,2020-01-24T20:04:03Z,,,"This discrepency was discovered in a Fullscreen test:
https://github.com/web-platform-tests/wpt/pull/13102

The spec issue for resolving this is:
https://github.com/w3c/csswg-drafts/issues/2529",3618133
702,2018-09-24T14:41:34Z,2020-01-24T20:00:10Z,,,For https://github.com/httpwg/http-core/issues/136.,3618133
703,2018-09-23T17:27:29Z,2018-09-28T01:24:05Z,,,"Fixes #13066 
@TalbotG please review. Thanks!",3618133
704,2018-09-23T06:03:23Z,2018-09-24T09:52:06Z,,,"This change makes sure that preload tests do not fail when ResourceTiming transferSize is not supported, as it is not essential for the tests.",3618133
705,2018-09-20T07:58:07Z,2019-04-11T08:10:41Z,,,"- Fix a couple of tests with function t.add_cleanup() as it supports promise, see detail in #8748.
- The usage of unregister() method in some tests is not rigorous.  As [spec]\(https://w3c.github.io/ServiceWorker/#dom-serviceworkerregistration-unregister):
>>   [NewObject] Promise<boolean> unregister();
  unregister() method must run these steps:
>> 1. Let promise be a promise.
...
>> 4. Return promise.",3618133
706,2018-09-17T11:48:10Z,2018-09-27T06:02:40Z,,,Added test for line breaking behaviour discussed in https://github.com/w3c/csswg-drafts/issues/3085#issuecomment-421714901,3618133
707,2018-09-14T18:36:32Z,2019-05-07T16:12:27Z,,,"Previously, we had three gaspRange entries in the gasp table:

 * rangeMaxPPEM=8, rangeGaspBehavior=GASP_DOGRAY
 * rangeMaxPPEM=16, rangeGaspBehavior=GASP_GRIDFIT
 * rangeMaxPPEM=65535, rangeGaspBehavior=GASP_GRIDFIT|GASP_DOGRAY

We now have a single one:

 * rangeMaxPPEM=65535, rangeGaspBehavior=GASP_GRIDFIT

See also: https://bugzilla.mozilla.org/show_bug.cgi?id=1258916#c118 and https://bugzilla.mozilla.org/show_bug.cgi?id=1490969",3618133
708,2018-09-10T20:34:00Z,2020-01-24T20:05:01Z,,,See https://github.com/whatwg/html/pull/3934,3618133
709,2018-09-10T18:25:30Z,2020-01-24T20:00:29Z,,,"This change aligns document.open() with the current HTML Standard, which
mandates that in addition to setting the document's URL to the last-entered
document's, the document's current history item's URL must also be updated à la
history.replaceState().

To accomplish that, this CL reuses the logic in History::StateObjectAdded(),
including the throttling behavior, for Document::open() as well. The update
steps are run unconditionally, no matter what the document's current URL is, in
order to have consistent behavior for other things in the history entry like
POST form data, which document.open() now erases.

This also means that document.open() now also counts as a navigation, just like
history.replaceState(). Several browsertests are updated as such.

In this CL, we also enables some WPTs that were previously disabled; in
particular, reload.window.html has been enabled to converge to WebKit's
behavior.

Bug: 68833, 866274
Change-Id: Iea6d665fd97bcaee44bcfaa45f8e92c356003d8a

Reviewed-on: https://chromium-review.googlesource.com/1188643
WPT-Export-Revision: e1658d10c1ee06f15e4268a812bebea2ef3dbe70",3618133
710,2018-09-10T03:25:43Z,2019-01-12T03:37:43Z,,,"In particular, exposes implementation bugs around URLs with ""xn--"" prefix but
containing non-ASCII characters (https://crbug.com/804688).

Tested against:
- https://jsdom.github.io (all tests pass)
- Google Chrome 70. These tests fail:
  - `sc://xn--fa-hia.ExAmPlE/` and `sc://xn--abcd.com/` (due to unrelated issue)
  - `https://xn--abcd.com/` (expected to throw)
  - `https://ab--abcdé.com/` (throws, due to https://crbug.com/804688)
- Firefox 62. These tests fail:
  - `sc://xn--fa-hia.ExAmPlE/` and `sc://xn--abcd.com/` (due to unrelated issue)
  - `https://xn--abcd.com/` (expected to throw)
  - `https://xn--abcdé.com/` (expected to throw)

Re the case `https://xn--abcd.com/`: Given that both Chrome and Firefox agree that an invalid IDN-encoded domain should pass through unmodified, it's possible the spec should be updated to allow this. This would probably entail modifying [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii), replacing ""If *result* is a failure value, validation error, return failure."" with ""If *result* is a failure value, validation error, then if *result* is an ASCII string, return *result*, else return failure.""

But for the time being, I think we should land a test matching the specified text.

**Edit**: Updated with Firefox results and paragraph about changing the spec.",3618133
711,2018-09-04T05:08:32Z,2018-10-27T08:29:10Z,,,"Update paths to use the only copy that is kept under ""/css/support/"".",3618133
712,2018-09-03T12:39:07Z,2020-03-27T06:39:24Z,,,"This PR was automatically created by a bot.

Before merging, please check that any tests that depend on the updated IDL files still work.

If additional changes are needed, please manually create another PR based on this one.

See the [README](https://github.com/web-platform-tests/wpt/blob/master/interfaces/README.md) for how the IDL files in this directory are used.

<hr>

Source: https://github.com/tidoust/reffy-reports/blob/398ec92/whatwg/idl/box-tree-api.idl
Build: https://travis-ci.org/tidoust/reffy-reports/builds/423853333

",3618133
713,2018-08-31T12:26:47Z,2020-01-24T20:00:28Z,,,"scrollbars are excluded from viewport size while calculating
container block logical height for positioned items,
but scrollbars should not be excluded in flipped blocks writing mode
as currently scrollbar is on the right

Bug: 833167
Change-Id: Iec1b94d917ca5ca7521d7b030300caaf0bd6e333

Reviewed-on: https://chromium-review.googlesource.com/1188018
WPT-Export-Revision: b4c586284d903a66f89ac28cc89700bbe3f2b97e",3618133
714,2018-08-29T13:45:17Z,2019-11-22T11:17:58Z,,,Some test cases for IFRAME/EMBED/OBJECT are missing since they still need to be split.,3618133
715,2018-08-27T21:46:17Z,2019-11-26T12:44:58Z,,,,3618133
716,2018-08-24T17:56:13Z,2020-01-24T19:59:57Z,,,See https://github.com/whatwg/fetch/pull/696.,3618133
717,2018-08-24T14:47:34Z,2020-01-24T20:05:03Z,,,"See https://github.com/whatwg/html/pull/3934

cc @MatsPalmgren ",3618133
718,2018-08-24T13:30:30Z,2020-01-24T20:00:12Z,,,For https://github.com/whatwg/xhr/pull/200.,3618133
719,2018-08-15T08:15:25Z,2020-01-24T20:00:11Z,,,Fixes #7274.,3618133
720,2018-08-06T12:06:13Z,2020-01-24T20:03:43Z,,,"These tests check that the SpeechRecognition constructors returns an
object with the expected properties on secure origins, and that it fails
on insecure origins.

Bug: 761371
Change-Id: Ied400facf474ad18f632c650b636bbbcf725b116

Reviewed-on: https://chromium-review.googlesource.com/670844
WPT-Export-Revision: 749d81b54abeee0ec31f853b1e26d7e0fbaf9f86",3618133
721,2018-08-02T01:46:40Z,2019-11-14T16:43:29Z,,,"Ensure that uncaught errors within workers cause test failure. This
makes non-conforming browsers fail more quickly and with more
descriptive messages.",3618133
722,2018-07-30T13:43:16Z,2020-01-24T21:34:31Z,,,This ensures that all tests (including variants) and most support files (exclusing ones that don't appear in the manifest) are listed in the directory listings.,3618133
723,2018-07-29T21:09:12Z,2020-01-24T20:00:26Z,,,"An existing web-platform-test was enhanced to make sure
the preventDefault only (or combined) cases work.

Added many layout tests (due to the lack of
web-platform-tests APIs for handling beforeunload alert)
for most of the intricacies of beforeunload.

Bug: 866818
Change-Id: I35c27cee1f71a4e4d10331d3451e0a36b9db684d
Reviewed-on: https://chromium-review.googlesource.com/1154225
WPT-Export-Revision: 2c4d10c3435bc0d493b3dbe0de42d7f41f8da0e8",3618133
724,2018-07-23T10:40:51Z,2020-01-24T20:00:25Z,,,"Bug: 830091
Change-Id: I726f57f582dd8b14d0328b2914940695b2674f21
Reviewed-on: https://chromium-review.googlesource.com/1146644
WPT-Export-Revision: faf36ff9464173410be229dba3286e0c284333dc",3618133
725,2018-07-19T19:10:45Z,2020-01-24T20:00:24Z,,,"Inspired by https://chromium-review.googlesource.com/c/chromium/src/+/1070778

Change-Id: I5aff81d918a2e243dbe4b05c5143417a0763297f
Reviewed-on: https://chromium-review.googlesource.com/1144133
WPT-Export-Revision: 64d5dd90e88c32f823f07ecb8f09b16429cf2574",3618133
726,2018-07-17T12:28:55Z,2018-07-24T13:40:04Z,,,"- Added tests for the [destination member](https://mikewest.github.io/sec-metadata/#destination-member)
- Tests send requests with Sec-Metadata header to the server which records them using [Stash API](https://github.com/web-platform-tests/wpt/blob/master/tools/wptserve/docs/stash.rst)
- The recorded value is then fetched from the server and checked against the expected object
- To run with Google Chrome Unstable use `./wpt run --binary /usr/bin/google-chrome-unstable --binary-arg=--enable-experimental-web-platform-features chrome fetch/sec-metadata`
- Some tests are still expected to fail (embed, object, serviceWorker, xslt) due to incomplete implementation in Chrome",3618133
727,2018-07-11T22:55:42Z,2018-08-30T06:17:31Z,,,"Gecko uses FFTs for convolution, even with short response buffers, and so
precision would be expected to be similar to that with longer buffers in Blink
and Webkit.

In Gecko, the actual calculations performed depend on what instructions are
available on the processor, and different code is used on some platforms.  The
precision in the answers is similar with different processors and code, but
the slightly larger errors may occur in different tests.

This patch picks a single expected precision for similar tests and uses that
for all such tests.",3618133
728,2018-07-09T05:25:22Z,2018-12-21T02:21:49Z,,,"Fix #2551 by adding following tests:
- The radio buttons in different radio button groups don't affect each other
1. The input elements' type attribute are not radio
2. The different form owners and no form owner
3. The radio elements' name attribute are empty
- Constraint validation required
- When any of the following phenomena occur, if the element's checkedness state is true after the occurrence, the checkedness state of all the other elements in the same radio button group must be set to false
1. The element's form owner changes
2. A type change is signalled for the element

@cvrebert, PTAL.",3618133
729,2018-07-06T23:21:19Z,2020-01-24T20:00:23Z,,,"Note this is a test only, the bug persists.

Bug: 860084
Change-Id: I89d0cabda6018beaef2ec33ee8eb96b44a86e1c8
Reviewed-on: https://chromium-review.googlesource.com/1128385
WPT-Export-Revision: d25fd33b866515c172f412dd7d5c62981bb75320",3618133
730,2018-06-29T16:24:16Z,2018-07-31T13:00:43Z,,,"Fixes #10552. Previously landed in #11092, reverted due to #11722.

TODO: The failure that caused #11722 is the same underlying issue as #9171: as an optimisation, we only pass changed files to lint, which doesn't suffice for the things that need to consider more than one file.",3618133
731,2018-06-28T17:21:55Z,2020-01-24T20:00:22Z,,,"This CL just connects the output of the ScriptProcessorNode to the
destination.  Chrome won't run the ScriptProcessorNode process unless
it is connected.  This connection doesn't change the test.

Also, a ScriptProcessorNode with 0 outputs is not well-defined in the
Web Audio specification, so make it have a single output.

It's unlikely Chrome will fix these issues with ScriptProcessorNode
because the node is deprecated.

Bug: 626703
Change-Id: I2995c892c1739700adc2c9868788c78f2dba7c20

Reviewed-on: https://chromium-review.googlesource.com/1118750
WPT-Export-Revision: 846091101fc57164f13b5d78cd5ede81ffbf3eb1",3618133
732,2018-06-26T11:09:47Z,2020-01-24T20:04:53Z,,,"I *think* the spec says all versions of postMessage queue a task and so the triggered by user activation flag should be forwarded to the receiver.

At least with window's postMessage, the popup is allowed in all browsers.

I'm not sure if Firefox considers the user activation flag to block popups. It seems to allow them all when using ./wpt run with testdriver's click or blocking them all when running manually.
(--update: Dima opened https://bugzilla.mozilla.org/show_bug.cgi?id=1469422)

On Chromium, the popup is blocked for MessagePort and BroadcastChannel when you run them manually (as expected per https://bugs.chromium.org/p/chromium/issues/detail?id=851493) but not when using ./wpt run with testdriver's click.

On WebKit, BroadcastChannel is not supported ( https://bugs.webkit.org/show_bug.cgi?id=161472 ) and the popup is blocked for MessagePort ( https://bugs.webkit.org/show_bug.cgi?id=186593 ). I tested manually since I'm not sure about the status of ./wpt run or testdriver.

cc' @Ms2ger ",3618133
733,2018-06-19T07:11:06Z,2018-06-19T14:49:23Z,,,"See https://github.com/w3c/ServiceWorker/issues/1187 and
https://github.com/w3c/ServiceWorker/pull/1327.",3618133
734,2018-06-15T02:05:04Z,2018-06-16T00:15:26Z,,,"This will test that a sandboxed iframe limitations won't be transferred to a new window when token `allow-popups-to-escape-sandbox` is present.

The test work by creating a sandboxed iframe that can run script but not act as same-origin (and fails if that is not true). But a link opened from the iframe (`<a target=_blank>` or `window.open`) will be able to (if same domain, of course).",3618133
735,2018-06-13T21:09:12Z,2018-06-15T05:03:29Z,,,"This PR introduces initial coverage for the [`selectionchange` event](https://w3c.github.io/selection-api/#selectionchange-event).

I started looking into `selectionchange` while trying to understand the compat issue that the Facebook React project is working around in its [SelectEventPlugin](https://github.com/facebook/react/blob/v16.3.2/packages/react-dom/src/events/SelectEventPlugin.js#L183). I'll continue to checkin on this topic area while I chase the React SelectEventPlugin issue.",3618133
736,2018-06-13T18:18:24Z,2018-08-09T06:21:28Z,,,"…ensure consistent results in WebKit

This test is marked as flaky in WebKit's [test expectation file](https://github.com/WebKit/webkit/blob/f415af3483f4f9136e45a93f69e9d7a511d6018c/LayoutTests/TestExpectations#L286) because the order of results are reported inconsistently. Changing `async_test ` to `promise_test` ensures the tests are run (and reported) in a consistent order. Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=179607.",3618133
737,2018-06-11T12:46:01Z,2020-01-24T20:04:54Z,,,"Regenerate the WOFF2 fonts to be sure they are really up-to-date. This makes
the WPT repo in sync with the woff2-tests repo [1] and closes #9300.

[1] https://github.com/w3c/woff2-tests/commit/dc973d0848e738b62d9a8f21e164dc9b6c87d168",3618133
738,2018-06-08T12:12:38Z,2018-06-14T00:56:37Z,,,,3618133
739,2018-06-05T09:28:49Z,2019-10-28T22:02:08Z,,,"Fixes #11285.

This is a bit rough around the edges, but does work.

- [ ] tests for pass_conditions
- [ ] documentation of this",3618133
740,2018-06-05T08:53:23Z,2020-01-28T00:13:04Z,,,"Part of #11269.

---

The `t2` test in 002.html fails in Firefox and Chrome, and still times out in Safari. I'm not sure what the spec-correct behavior is for this test.",3618133
741,2018-06-04T08:42:23Z,2018-08-14T21:14:07Z,,,"This patch is just a refactoring to reuse reference files and
name them better. Not having a reference file associated to
a particular test (e.g. contain-size-001) and referenced in many other.

This patch tries to reuse reference files from css/reference/
when possible.
In other cases it renames the reference files in reference/
when reused by several tests to make them generic.

This was suggested by @mstensho in a Chromium review:
https://chromium-review.googlesource.com/c/chromium/src/+/1080799",3618133
742,2018-05-29T12:56:17Z,2020-01-24T20:05:15Z,,,`encrypt_decrypt/rsa.https.any.js` is marked as [ Slow ] in WebKit.,3618133
743,2018-05-28T14:47:55Z,2020-01-24T19:59:33Z,,,"See https://bugzilla.mozilla.org/show_bug.cgi?id=1463563 for context.

We'll need to update -2 to figure out the correct pass condition. Given Chrome and Safari, I guess we should expect input2 and then we should update the specification to note that if the element is no longer connected you just abort the algorithm, meaning no flags get set.",3618133
744,2018-05-25T01:56:44Z,2018-05-31T15:28:28Z,,,"@annevk @foolip These tests show highly irregular behavior between Chrome, Edge, Firefox, and Safari:

sub-test                                     | Chrome 67 | Edge 17 | Firefox 61 | Safari 11.1
---------------------------------------------|-----------|---------|------------|------------
cancels navigation that is not unloading     | FAIL      | PASS    | PASS       | FAIL
does not cancel navigation that is unloading | PASS      | FAIL    | TIMEOUT    | PASS
aborts active fetches                        | FAIL      | FAIL    | PASS       | PASS
aborts child browsing contexts               | PASS      | FAIL    | PASS       | PASS
aborts parsing                               | PASS      | FAIL    | PASS       | PASS

Because of the amount of tomfoolery (it's tricky to verify that asynchronous operations *don't* occur), I expect there's something wrong with my methodology. I've included specification excerpts that I believe validate each test, but I could really use your input on whether or not they actually hold up.

If they do, I'll be happy to follow up with bug reports for Chrome and Firefox.

This is intended to resolve gh-11090

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
745,2018-05-18T18:27:17Z,2018-07-20T01:43:57Z,,,"Per [spec clarification](https://github.com/whatwg/html/pull/3714).

Locally, this passes in Firefox 59, Safari 11.1. Fails in Chrome 66, 67, and 68.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
746,2018-05-18T13:46:30Z,2018-06-01T10:25:50Z,,,"Continuation of #9218.

This is in connection to whatwg/html#3414.

Do not merge yet. Sill needs a spec decision.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
747,2018-05-17T21:17:30Z,2020-01-27T14:04:09Z,,,"* Split up transitions-animatable-properties-01.html with `variant` and set long timeout.
* Set long timeout for properties-value-*.
* Rename many manual tests to have -manual suffix.

Fixes #11046.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
748,2018-05-14T18:28:14Z,2019-12-18T21:18:25Z,,,"Basic marker on shape tests.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
749,2018-05-14T15:06:15Z,2020-01-24T20:05:14Z,,,"See https://bugs.chromium.org/p/chromium/issues/detail?id=689781#c19

Fixes #10920.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
750,2018-05-14T12:46:44Z,2019-11-26T12:47:34Z,,,"Basic hatch pserver tests.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
751,2018-05-04T11:54:33Z,2020-01-24T19:59:38Z,,,"The main thing not explained by the HTML Standard that's tested here is how close() ends up with ""complete"", but non-Firefox exhibits this behavior.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
752,2018-05-03T20:34:54Z,2018-05-29T14:07:15Z,,,"I'm looking for QA on the markup to make sure I'm hitting all variations that are alluded to in #7956. I've included one sample test of what I think of as the base-case.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
753,2018-05-03T11:46:43Z,2018-05-28T09:48:32Z,,,"#### What does this PR do? 
These tests ensure that flex only alignment modes work as expected in different
writing modes. 
The tests use the writing-mode: vertical-lr with the flex alignment modes 
(justify-content and align-items)

#### How should this be manually tested?
Pull the current branch
Follow the Readme.md to run the tests
*Testharness.js has been used to write the test cases*

#### Screenshots (if appropriate)
<img width=""1280"" alt=""screen shot 2018-05-03 at 12 37 53 pm"" src=""https://user-images.githubusercontent.com/26222856/39574476-4cab6842-4ecf-11e8-8401-0c80e3fa3da1.png"">

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
754,2018-05-03T09:30:20Z,2020-01-24T19:59:39Z,,,"For https://github.com/whatwg/html/pull/3651 or possibly a standalone patch.

It seems that Firefox only supports the reload override flag for about:blank resources. Edge always supports it. Safari overrides the URL and therefore ends up in a loop. Chrome doesn't support it, which seems most desirable as it's a rather hairy feature.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
755,2018-04-27T10:30:29Z,2020-01-24T20:14:30Z,,,"As commented on https://chromium-review.googlesource.com/c/chromium/src/+/1029858,
the `catch()` statements in the destination WPT tests are spurious.
This CL removes them.

Change-Id: Id3e3ab4e4cfb90ace1fa3ffcbfa8d68c3081c9fa

Reviewed-on: https://chromium-review.googlesource.com/1032554
WPT-Export-Revision: fd501b19757271031ee5822bd95f47d19b683ccd

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
756,2018-04-26T01:17:09Z,2018-05-28T09:48:23Z,,,"#7958
I'm not convinced I totally understand the specification on this one.

> In a column flex container, the break-before property on the first item and the break-after property on the last item are propagated to the flex container. Forced breaks on other items are applied to the item itself. 

This fails on Chrome Canary, and I haven't seen it work in Firefox either.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
757,2018-04-23T07:28:37Z,2020-01-24T20:03:42Z,,,"This CL sets Client.url as the creation url (document_url_) of
corresponding ServiceWorkerProviderHost, instead of the
last_committed_url of corresponding render frame host, which may be a
result of history.pushState() and should not be considered as Client.url
according to the spec:
https://w3c.github.io/ServiceWorker/#dom-client-url
https://html.spec.whatwg.org/multipage/webappapis.html#concept-environment-creation-url

Bug: 658997
TEST=blink_tests
external/wpt/service-workers/service-worker/clients-matchall-client-types.https.html

Change-Id: Id7060b7d1292654fc8f23dd72eef629f6a874ef0

Reviewed-on: https://chromium-review.googlesource.com/532595
WPT-Export-Revision: 64d720304dcc0bfb012410a013071572a2ce473c

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
758,2018-04-20T13:24:32Z,2020-01-24T19:59:35Z,,,"

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
759,2018-04-18T17:17:07Z,2018-05-28T09:48:13Z,,,"* Chrome will not import a JWK object if one of the values contains a leading 0 byte. 
* Edge will not import a JWK object if one of the values is less than the correct byte length, i.e. not containing the leading 0 padding. 
* Firefox and Safari import them either way.

This means we have to convert all key values appropriately based on the current browser's behavior before importing the keys.

This PR adds a test to verify that both formats are accepted (the behavior of Safari and Firefox). It's my first PR, so I welcome any help with this description or the actual changes. I also don't know if this is the correct test, or if Edge or Chrome's behavior is correct and Safari and Firefox are wrong.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
760,2018-04-17T20:18:51Z,2019-11-21T15:56:45Z,,,"Closes #10471

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
761,2018-04-12T17:29:28Z,2020-01-24T19:59:51Z,,,"As per https://github.com/whatwg/fetch/pull/633#issuecomment-346610876 except using global state instead of the cache API. (Improvements welcome!)

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
762,2018-04-11T11:41:01Z,2019-12-04T12:31:37Z,,,"

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
763,2018-04-06T23:08:07Z,2018-05-28T09:48:20Z,,,"In validating namespace and qualified names, the char \u0BC6 is in the range of NameStarChar [#x37F-#x1FFF] and \u0BC6 can be at any position in the qualified name string. 

https://dom.spec.whatwg.org/#validate
https://www.w3.org/TR/xml/#NT-Name
https://www.w3.org/TR/xml-names/#NT-QName

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
764,2018-04-06T22:16:35Z,2020-01-24T20:04:29Z,,,"These are meant to help with https://github.com/whatwg/html/pull/3544; do not merge until we have some clarity.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
765,2018-03-29T12:32:55Z,2020-01-24T19:59:37Z,,,"

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
766,2018-03-25T09:22:06Z,2018-05-28T09:48:52Z,,,"Reference to one of the tests mentioned in #10072 
For now the test fails with the error `assert_array_equals: lengths differ, expected 1 got 0` . I think this is somewhat related to the root adjacent thing. @gsnedders could you please look into this and suggest changes? Thanks a lot !

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
767,2018-03-21T16:11:49Z,2020-01-24T21:27:46Z,,,"    Previously it was assumed that the paths in config files were relative
    to the current working directory, which only works if the current
    working directory happens to be the repo root. With this change we
    make them paths relative to some base path. We typically expect this
    to be set to the path of the config file, but for the default case we
    also know that the config files are in the repo root, so we can use that.",3618133
768,2018-03-20T17:12:26Z,2018-05-28T09:47:38Z,,,"

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
769,2018-03-19T14:39:58Z,2018-05-28T09:47:45Z,,,"…tore/no-cache headers.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
770,2018-03-10T17:00:44Z,2019-10-28T22:06:03Z,,,"This adds a lint to the `all_paths_lints`
set in `tools/lint/lint.py` that checks if
there are any paths in which 'os.path.splitext(paths)[0]`
has multiple identical values.

Closes https://github.com/w3c/web-platform-tests/issues/7570",3618133
771,2018-03-09T16:33:28Z,2018-05-28T09:47:58Z,,,"Adds tests to verify proposed behavior of ReportingObserver in the [Reporting spec](https://github.com/WICG/reporting/pull/47).

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
772,2018-03-09T01:07:05Z,2018-07-03T04:30:42Z,,,"Test for ""abort"" event firing on Window during a document load cancellation,
triggered by ESC key, window.stop(), or browser stop button.

https://github.com/whatwg/html/issues/3525

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
773,2018-03-08T17:08:05Z,2019-10-28T22:06:23Z,,,Closes #8675,3618133
774,2018-03-07T15:58:53Z,2018-05-28T09:47:24Z,,,"This test appears to have been doing no useful testing, since it was
passing invalid keysystem names to all browsers, which were all returning
false in requestMediaKeySystemAccess, and the test lets such a result
pass. The reason for that is because the standard does not impose which
of the init data types a browser must support.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
775,2018-02-22T14:47:47Z,2020-01-24T20:03:46Z,,,"This CL adds a basic test for tab-under blocking: ensuring that the
simplest tab-under navigations are blocked.

Note that since the popup blocker and tab-under blocker are implemented
in the //chrome layer, these tests are expected to fail using
content_shell.

Bug: 814357
Change-Id: I70c46c01208aabca68881c7a7ab476464200b6e1
Reviewed-on: https://chromium-review.googlesource.com/930542
WPT-Export-Revision: 3ef92cdad705dbd34f0c10839ecc9b2b9cd1b6cc

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
776,2018-02-19T23:14:08Z,2018-05-28T09:48:28Z,,,"tests for https://github.com/w3c/csswg-drafts/issues/434

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
777,2018-02-15T17:56:29Z,2019-10-31T09:56:52Z,,,Fixes #8613.,3618133
778,2018-02-09T06:43:26Z,2020-01-24T20:03:44Z,,,"CSSTransformComponent should have default value for is2D.

New spec: https://drafts.css-houdini.org/css-typed-om-1/#dictdef-cssmatrixcomponentoptions

Bug: 807875
Change-Id: I4b6aaa0f1dba1dca00d6b6df3d8a1314a238e692

Reviewed-on: https://chromium-review.googlesource.com/899411
WPT-Export-Revision: 987a1ff83a5fca28a5e179e2e6c80fde272612ea

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
779,2018-02-08T23:42:41Z,2019-11-22T16:40:11Z,,,"References https://github.com/heycam/webidl/pull/517.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
780,2018-01-31T20:29:07Z,2018-09-03T14:24:21Z,,,"Verifying behavior as discussed in whatwg/fetch#666. Don't land yet, since these tests currently don't match the spec.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
781,2018-01-30T04:02:04Z,2018-05-28T09:47:11Z,,,"

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
782,2018-01-23T13:01:14Z,2018-05-28T09:46:45Z,,,"Currently many preload tests are slow due to their use of a timer. PerformanceObserver enables us to avoid that in most cases, by giving us a notification when resources were downloaded, independent from their load events.
This PR switches most of the preload tests to use that method. (Failed to switch all, as we don't have a notification when resources *failed* to load, nor guarantees regarding PerfObserver firing with regard to the resource's load event)

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
783,2018-01-17T19:49:08Z,2018-05-28T09:47:43Z,,,"

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
784,2018-01-16T11:15:23Z,2018-09-05T09:58:12Z,,,"https://github.com/w3c/html/issues/278

Also fixes a bug in where undefined event variable was used in
the stopPropagation function

New test passes in Firefox and Chrome

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
785,2018-01-13T06:48:34Z,2018-05-28T09:46:30Z,,,"As per the decision in https://github.com/w3c/ServiceWorker/issues/1216.

Related spec PR: https://github.com/w3c/ServiceWorker/pull/1259.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
786,2018-01-09T10:32:35Z,2019-10-21T12:58:00Z,,,"Make imported/w3c/web-platform-tests/service-workers/service-worker/fetch-canvas-tainting-cache.https.html robust to quota error

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
787,2018-01-05T22:46:20Z,2018-05-28T09:46:35Z,,,"Fixed the async waitUntil microtask tests to reflect the spec. Please refer to https://github.com/w3c/ServiceWorker/issues/1213#issuecomment-342640579.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
788,2018-01-02T21:41:28Z,2019-01-08T17:25:17Z,,,"The reference for CSS2/css1/c414-flt-fit-000.xht did not match the test, as it added the border size into the expected width, and did not have navy everywhere the test had it. This change fixes these issues by removing the border size from the expected width, and removing navy from both the test and reference.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
789,2018-01-02T20:44:18Z,2018-06-15T02:11:40Z,,,"This is a follow-up work of https://chromium-review.googlesource.com/c/chromium/src/+/834394. When canvas has invalid image size (width/height is zero), calling canvas.toBlob() returns a null blob. In OffscreenCanvas, it throws exception; this is wrong and we should make it consistent with canvas.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
790,2017-12-22T20:10:35Z,2018-05-28T09:48:24Z,,,"This change:
- Reformats and renames border-image-* tests from 001 to 016
- Adds in references for all border-image-* tests except for 015 and 016
- Corrects border-image-005 and border-image-006's references

This is in two commits for easier reviewing.

<!-- Reviewable:start -->

<!-- Reviewable:end -->

  
  ",3618133
791,2017-12-21T04:44:18Z,2018-05-28T09:46:13Z,,,"Helps with https://github.com/w3c/webcrypto/issues/191

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
792,2017-12-19T21:32:36Z,2018-05-28T09:46:13Z,,,"…ed clients.

The test uses `Clients.matchAll({ includeUncontrolled: true })` and
`Client.navigate()` does not care if the window is controlled.  The
navigate algorithm only checks if the final window is cross-origin.

Its unclear to me why chrome expects these navigations to fail to return a Client, but I don't see anything in the spec matching that behavior.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
793,2017-12-19T00:06:20Z,2019-10-26T08:27:10Z,,,"As a result, the promise gets rejected even if the browser does not use ""error"" redirect mode
for fetching the script.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
794,2017-12-18T18:32:10Z,2019-10-26T08:26:21Z,,,"…tering a non-HTTP/HTTPS URL

The test expected a SecurityError, which does not match the latest specification:
- https://w3c.github.io/ServiceWorker/#start-register (Step 2)

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
795,2017-12-18T03:11:50Z,2020-03-16T21:51:57Z,,,"These should be the last tests missing references in css-color.

The tests `t32-opacity-basic-0.6-a.xht`, `t422-rgba-a0.6-a.xht`, and `t425-hsla-basic-a.xht` are failing on all platforms with Travis, but the references are basically verifying the reference `<p>` in the test itself, so I'm not sure if this is just something that all implementations have done incorrectly or what.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
796,2017-12-06T22:15:26Z,2018-05-28T09:46:32Z,,,"

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
797,2017-12-06T09:48:24Z,2018-10-31T16:54:07Z,,,"https://github.com/w3c/csswg-drafts/issues/1039

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
798,2017-12-05T23:03:33Z,2018-05-28T09:45:55Z,,,"Widevine now requires the server certificate to be set before requesting
any license. If not set specifically, the first request to the server will
be to get it. Several of the tests expect the first message request to do
something (like set the expiration time), so this change calls
MediaKeys.setServerCertificate() first if a certificate has been specified
for the particular key system. Fixes #8410.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
799,2017-12-04T23:44:46Z,2019-10-26T08:26:08Z,,,"The tests were timing out in WebKit because the service worker would get terminated before
it is done running the test. The issue is that the promise_test() in the html file sets a
cleanup handler to call unregister(), which effectively terminates the registration's
workers. However, the promise_test() calls fetch_tests_from_worker(sw_registration.active)
at the end which is asynchronous but does not return a promise. As a result, the test
running in the sw_registration.active runs after the promise_test() has completed and
its cleanup handler has been called to unregister.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
800,2017-12-04T22:31:54Z,2018-05-28T09:46:47Z,,,"Test | Canary | Edge 16 | Firefox Nightly | Safari Tech Preview
---- | ---- | ---- | ---- | ---- | 
form-action-javascript-url-returns-script-element.html | ✔| ✔| ✔| ✘ 
form-action-js-url-direct-call.html| ✘  | ✘  | ✘  | ✘ 
form-action-js-url-doc-write-script-then-navigate-href.html | ✘  | ✘  | ✘  | ✘ 
form-action-js-url-doc-writes-script-element.html | ✘  | ✘  | ✘  | ✘ 
form-action-js-url-doc-writes-script-href-cancels-response-delayed.html | ✘  | ✘  | ✘  | ✘ 
form-action-js-url-evaluated-in-target-nested-browsing-context.html| ✘  | ✔| ✔| ✘ 
form-action-js-url-executes-async.html | ✘  | ✘  | ✘  | ✘ 
form-action-js-url-returns-string-with-script-href-cancels-response-delayed.html | ✘  | ✔| ✔| ✔
href-js-url-evaluated-in-target-nested-browsing-context.html| ✘  | ✔| ✔| ✘ 
return-false-no-navigation.html| ✔| ✔| ✔| ✔
set-iframe-location-then-navigate-to-href-response-delayed.html| ✔| ✔| ✔| ✘ 
set-iframe-location-then-navigate-to-href.html | ✔| ✔| ✔| ✘ 
set-iframe-src-then-navigate-to-href-response-delayed.html | ✘  | ✔| ✔| ✘ 
set-iframe-src-then-navigate-to-href.html| ✘  | ✔| ✔| ✘ 

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
801,2017-11-29T14:47:50Z,2018-05-28T09:45:51Z,,,"Test for w3c/payment-handler#224.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
802,2017-11-29T13:45:29Z,2018-12-14T07:00:53Z,,,"Test for https://github.com/w3c/payment-handler/pull/224.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
803,2017-11-29T10:51:08Z,2018-05-28T09:45:51Z,,,"This change covers basic behavior of get/set methods.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
804,2017-11-28T20:02:24Z,2018-05-28T09:45:56Z,,,"I've had this batch of dom-parser tests sitting in my private repo for a long time now... no need to keep them here when someone else could put them to good use. This is a request to take them into master.

Payload contains:
* A Polyfill library of the algorithm to serialize XML nodes (as outlined in the spec) used for testing the spec's algorithm vs. implementations.
* A collection of tests and variations of various edge-cases for serialization.

Note this PR comes after encouragement from @foolip 

> Cool, if you want to go ahead and merge all of those, I don't think review would be too picky :)
>
>>On Thu, Nov 2, 2017 at 5:00 PM Travis Leithead wrote:
Thanks for asking about the tests today. No wonder you didn’t see them—they were in my fork of WPT. I suppose I had ambitions of finishing them up at some point. 
>> 
>>Regardless, you might find them interesting:
>> 
>>https://github.com/travisleithead/web-platform-tests/commit/cc4e29dc1c19d84bd1404e8e395721d7147c711b
>> 
>>(Note, includes a relatively complete Polyfill of the spec’s algorithm for testing purposes.)

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
805,2017-11-10T20:24:17Z,2018-08-21T11:07:26Z,,,"These don't cover all of the counter styles, but they give us automated tests for most of them.

They are all originally authored by @dbaron and @upsuper.

Fixes #8122.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
806,2017-10-27T00:05:07Z,2019-10-28T22:12:12Z,,,"There are a few files that incorrectly reference their ref/match file in their link tag. The path would normally be correct, but due to the base tags added in the file, the resulting URL is incorrect. This change just modifies the href to adjust for the folder(s) added from the base.

Adding White-List entries to lint file since it seems the linter doesn't take the base tag into consideration",3618133
807,2017-10-23T09:39:26Z,2020-01-24T20:04:47Z,,,"Previously spaces in path would produce ValueError: too many values to
unpack. Explicitly only split on the first space to account for this.",3618133
808,2017-10-23T09:00:01Z,2018-12-21T02:20:39Z,,,"Combine following files to MediaStream-GUM.https.html:
GUM-api.https.html
GUM-empty-option-param.https.html
GUM-impossible-constraint.https.html
GUM-optional-constraint.https.html
GUM-trivial-constraint.https.html
GUM-unknownkey-option-param.https.html

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
809,2017-10-23T08:14:31Z,2018-05-28T09:45:07Z,,,"To update test critieria suggested in 
https://github.com/w3c/ServiceWorker/issues/1213#issuecomment-338304564

Note: Functions names of async_task_waituntil() and async_microtask_waituntil() are revised accordingly for better understanding.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
810,2017-10-20T20:28:46Z,2020-03-13T07:20:49Z,,,"
Test | Chrome Canary | Edge | Firefox Nightly | Safari Technology Preview
-- | -- | -- | -- | --
005.html | ✔ | ✔ | ✔ | ✔
006.html | ✔ | ✔ | ✔ | ✔
007.html | ✔ | ✔ | ✔ | ✔
008.html | ✘ Navigating the anchor's href is expected to abort the form submit action | ✘ Navigating the anchor's href is expected to abort the form submit action  | ✘ Navigating the anchor's href is expected to abort the form submit action | ✘ Navigating the anchor's href is expected to abort the form submit action 
009.html | ✘ Navigating the anchor's href is expected to abort the form submit action | ✘ Navigating the anchor's href is expected to abort the form submit action  | ✘ Navigating the anchor's href is expected to abort the form submit action | ✘ Navigating the anchor's href is expected to abort the form submit action 


Notes: 

All platforms fail for the same reason, which is that they do not execute `javascript:...` url code asynchronously, per [step 12](https://html.spec.whatwg.org/multipage/browsing-the-web.html#navigating-across-documents). This is likely a candidate for changing the specification (which would mean changes to these tests as well).

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
811,2017-10-20T20:16:40Z,2020-03-13T07:21:13Z,,,"The results of manually running these tests:

Test | Chrome Canary | Edge | Firefox Nightly | Safari Technology Preview
-- | -- | -- | -- | --
001.html | ✔ | ✘ 001-1.html's unload handler is not aborted | ✔ | ✔
002.html | ✔ | ✔ | ✔ | ✔
003.html | ✔ | ✘ 003-2.html's unload handler is not aborted | ✘ 003-2.html's unload handler is not aborted | ✔
004.html | ✔ | ✘ 004-2.html's unload handler is not aborted | ✔ | ✔



Notes: 

- Edge is consistently misbehaving, issue filed here: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14320545/
- Firefox only misbehaves for only a single case, issue filed here: https://bugzilla.mozilla.org/show_bug.cgi?id=1410515

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
812,2017-10-20T17:12:10Z,2018-11-29T14:13:15Z,,,"On Safari, segments that do not start on a keyframe cause a decoder
error. This test exposes that bug.
See https://bugs.webkit.org/show_bug.cgi?id=160460

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
813,2017-10-20T16:29:14Z,2019-11-21T15:54:15Z,,,"This corrects the semantics and exposes the readonly states

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
814,2017-10-20T15:34:07Z,2018-05-28T09:45:03Z,,,"These tests were looking at the wrong event.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
815,2017-10-20T15:26:04Z,2018-05-28T09:45:06Z,,,"Currently it's only possible to run all the tests for a given test file.
This patch makes it possible to pass an expression to filter which test
to run for a given file, using the pattern test-file.py::expression.
It uses the -k <expression> pytest option, passing the provided
expression to pytest.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/w3c/web-platform-tests/7923)
<!-- Reviewable:end -->
",3618133
816,2017-10-19T15:13:42Z,2018-10-01T17:35:34Z,,,"These fix typos in some IAccessible2 Testable Statements.

Also adds coreaam as a supported ""spec"" in the make_tests.pl tool

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
817,2017-10-17T13:14:57Z,2019-01-21T15:35:39Z,,,"

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
818,2017-10-13T20:36:51Z,2020-01-24T20:03:49Z,,,"Follows https://github.com/whatwg/dom/pull/506.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
819,2017-10-11T13:19:08Z,2018-05-28T09:46:12Z,,,"Tests for https://github.com/w3c/ServiceWorker/pull/1178.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
820,2017-09-28T12:13:02Z,2020-01-24T20:03:49Z,,,,3618133
821,2017-09-25T02:32:24Z,2018-12-21T02:20:30Z,,," Reuse tests from https://github.com/w3c/web-platform-tests/blob/master/mediacapture-streams/
 to test Depth Stream with some optimizations:
  - Move proper tests into one file to reduce testing effort
  - Rewrite most tests with `promise_test`

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
822,2017-09-06T14:03:05Z,2020-01-24T20:00:15Z,,,"Incorperates https://github.com/whatwg/html/issues/2930 and https://github.com/whatwg/html/pull/3013.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
823,2017-09-05T14:29:13Z,2020-01-24T19:59:41Z,,,"Test for https://github.com/whatwg/fetch/issues/505.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
824,2017-08-30T02:05:49Z,2020-01-24T20:03:47Z,,,"[PerformanceObserver] Support the ""buffered"" flag in PerformanceObserver

Support the 'buffered' flag in performance observer per specified in
https://w3c.github.io/performance-timeline/

This is what this CL intends to do:
1. Add a 'buffered' flag in PerformanceObserverInit.idl.
2. Add the buffered entries of observed entryType to
PerformanceObserverEntryList.
3. Correct a bug in po-observe.html and enable the test. (entry.entryType
instead of entry.type)
4. Hide the 'buffered' behavior behind an experimental flag

Bug: 725567
Change-Id: Ib8e35215c5b58721a043087130c9951a56fba3c1
Reviewed-on: https://chromium-review.googlesource.com/641382
Commit-Queue: Liquan Gu <maxlg@chromium.org>
WPT-Export-Revision: 1ec71c5cc175720d6a3d7298ce3ddd855e7642bf

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
825,2017-08-24T13:45:31Z,2019-08-27T15:08:52Z,,,"Far from exhaustive, but covers many of the good points.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
826,2017-08-22T18:45:02Z,2018-05-28T09:44:03Z,,,"Incorporates whatwg/html#2957 (assuming we take Edge's behavior).

I currently am unemployed, so I will not be able to work any further on this unless I succeed in finding someone who's willing to pay me to continue to work on web standards.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
827,2017-08-12T01:11:53Z,2018-05-28T09:44:44Z,,,"This change expands `cors-preflight-star` to cover cases where the credentials mode is `include` and:

- The request method is a [CORS-safelisted request method](https://fetch.spec.whatwg.org/#cors-safelisted-method)
- The request headers contain only [CORS-safelisted request headers](https://fetch.spec.whatwg.org/#cors-safelisted-request-header)

These tests pass in Chrome, Firefox, and Edge (using EdgeHtml 16+).

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
828,2017-08-04T14:52:09Z,2018-05-28T09:44:44Z,,,"cc/ @NavidZ who wrote at least some of this

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
829,2017-08-04T14:37:47Z,2019-10-28T22:14:27Z,,,This allows idlharness to link to relevant sections of WebIDL.,3618133
830,2017-08-03T19:08:23Z,2019-12-19T11:30:14Z,,,"The `Element Get Text` command says that implementations
must exactly match Selenium's existing text handling. To
ensure this, the tests from Selenium's atoms and webdriver
implementations are being ported to the WPT suite.

This PR is equivalent to the tests in
//java/client/test/org/openqa/selenium:TextHandlingTest

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/w3c/web-platform-tests/6746)
<!-- Reviewable:end -->
",3618133
831,2017-08-03T12:13:36Z,2019-11-21T15:46:03Z,,,"The `Element Get Text` command says that implementations
must exactly match Selenium's existing text handling. To
ensure this, the tests from Selenium's atoms and webdriver
implementations are being ported to the WPT suite.

This PR is equivalent to the tests in //javascript/atoms/test

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
832,2017-07-28T05:44:28Z,2018-09-30T19:37:54Z,,,"According to [spec][spec-link],
> If the same identifier is defined mulitple times for a given feature type and font family, the last defined value is used.

But currently we have two tests that checks otherwise. Tests should match with spec here.
cc @upsuper 

[spec-link]: https://drafts.csswg.org/css-fonts-3/#basic-syntax

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
833,2017-07-21T01:52:57Z,2018-05-28T09:47:04Z,,,"This change migrates the notifications tests to use HTTPS. It also adds
new tests to ensure that permission cannot be requested from insecure or
non-top-level contexts.

This is in line with Google Chrome's move to block notifications permission from being requested in [insecure](https://www.chromestatus.com/feature/5759967025954816) and [non-top-level contexts](https://www.chromestatus.com/feature/6451284559265792) as of version 61. A change to the Notifications API spec will also be filed once these tests are accepted.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
834,2017-07-20T20:29:36Z,2018-05-28T09:43:46Z,,,"These are some failing tests for `video.removeTextTrack` based on feedback from https://github.com/whatwg/html/issues/1921.
Worked with @egreaves during textAV.tech to finally get it out the door.

As I mentioned in https://github.com/whatwg/html/issues/1921, I think that just removing the in-band track from the TextTrackList rather than throwing would be a better approach as it matches more closely what happens with the track elements. It'll also be a signal to the browser that we don't care about parsing the rest of this track until the source gets reset. However, I'm not sure that's the best approach nor do I know how I would go about writing tests for or against such a track.

In addition, once this method is available, authors that create text tracks and are actively adding cues to tracks would need to do null-checking or what not for removed text track.

Ultimately, I think `removeTextTrack` and `addTextTrack` should mirror removing and adding track elements to the video element as closely as possible.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
835,2017-07-13T16:36:20Z,2020-01-31T03:00:02Z,,,"

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
836,2017-07-08T05:59:07Z,2018-10-01T12:22:22Z,,,"This PR depends on #6336, I will rebase once thats merged.

Improved the categorization tool for webvtt.
Added/improved subcategories and categorization throughout tests.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
837,2017-06-29T13:58:34Z,2019-11-26T13:47:22Z,,,"The current css/css3-selectors/i18n tests each check the width of a `div` that has a transparent background and that contains only `&#xA0;`.

This PR gives each `div` being tested a blue background and a fixed height.  It also adds a reference `p` with the correct height, width, and background color to each test.

In some tests, the existing `width` values are transposed so that the desired width is 100px for all of these tests.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
838,2017-06-28T01:55:22Z,2020-01-31T03:00:02Z,,,"In hopes to get flex to rec, we reviewed the files that had 5 or less links to url fragments in the TR flex spec. Here is a rundown of why the below changes were done:

- **flex-align-item-center.html:** Covered by flexbox_align-items-center.html
- **flex-items-flexibility.html:** This is covered by the flex-grow tests
- **flexbox_margin-left-ex.html:** Update link to a more accurate location
- **negative-margins-001.html:** Update this & ref to reflect reality of implementations.
- **flexbox_generated*.html:** Update spec link to flex-containers like other tests
- **flexbox_margin-auto-overflow-2.html:** It's testing the same thing as flexbox_margin-auto-overflow.html
- **flexbox_margin-collapse.html:** Covered by flex-margin-no-collapse.html
- **visibility-collapse-*.html:** Doesn't link to a reftest and is covered by flexbox_visibility*.

I attached the file that we did our review on for tracking these change - [flex-test-rec.xlsx](https://github.com/w3c/web-platform-tests/files/1107349/flex-test-rec.xlsx)

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
839,2017-06-26T17:40:33Z,2018-05-28T09:43:29Z,,,"**Do not merge.**

Work in progress.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
840,2017-06-23T22:25:16Z,2020-01-31T18:18:34Z,,,"These expectations were discussed by project maintainers at:

https://github.com/w3c/web-platform-tests/issues/6266

This is intended to resolve gh-6266.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
841,2017-06-23T21:43:34Z,2020-01-24T20:03:56Z,,,"Follows https://github.com/whatwg/dom/pull/469.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
842,2017-06-16T22:13:29Z,2020-01-24T20:04:24Z,,,"Follows https://github.com/whatwg/html/pull/2770.

/cc @bzbarsky. Not sure if this would have caught https://bugzilla.mozilla.org/show_bug.cgi?id=1337392; advice appreciated on more cases to add.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
843,2017-06-14T18:48:50Z,2020-01-24T20:04:32Z,,,"To discuss the navigation bits of https://github.com/whatwg/html/issues/2757

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
844,2017-06-08T02:09:48Z,2018-05-28T09:48:33Z,,,"

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
845,2017-05-31T02:55:49Z,2018-05-28T09:44:46Z,,,"As per the spec, registration.update() should throw when called on a
service worker before the install completes. This is to prevent a
failing installing worker from continuously trying update jobs. This
patch adds a string that checks if the update() called during the script
evaluation throws an InvalidStateError.

Fixes https://github.com/w3c/ServiceWorker/issues/1155.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
846,2017-05-30T22:09:33Z,2018-05-28T09:43:17Z,,,"…g length > 255

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
847,2017-05-30T22:06:25Z,2018-05-28T09:43:33Z,,,"…DF derive_bits_keys tests

For ECDH tests, add rejection handlers for ECDH key generations such that tests can continue.

For HKDF, infos are missing for bad hash tests, and therefore TypeErrors will return instead of OperationErrors for those tests. Added infos. Also, for null length, HKDF should return OperationError instead of TypeError.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
848,2017-05-29T07:00:44Z,2018-05-28T09:44:41Z,,,"- Add a `cache` datatype to `clear-site-data` datatypes
- `add()` is implemented as fetching a resource from a support server.
- `isEmpty()` is implemented as fetching the same resource with `Cache-Control: only-if-cached` plus special handling for user agents that do not support this header.
- Since this is the first datatype where the above two methods are asynchronous, it revealed a bug in `navigation.html` where the `add()` and `isEmpty()` Promises were executed in parallel rather than in sequence; this has been fixed

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
849,2017-05-16T08:15:20Z,2018-05-28T09:43:19Z,,,"Tests for whatwg/html#2622

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
850,2017-05-15T16:04:16Z,2018-05-28T09:48:25Z,,,"This PR makes it match the [reftest](https://github.com/w3c/web-platform-tests/blob/master/css/css-transforms-2/transform3d-sorting-006-ref.html) on Chromium-57, which I think is correct here.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
851,2017-05-15T15:38:22Z,2018-10-02T11:27:14Z,,,"

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
852,2017-05-12T21:09:02Z,2020-01-24T20:04:40Z,,,"This follows the changes in https://github.com/whatwg/html/pull/2673, but also tests the issue at https://github.com/whatwg/html/issues/2137 in favor of the current spec.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
853,2017-05-12T14:57:02Z,2018-05-28T09:46:49Z,,,"

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
854,2017-05-11T11:32:28Z,2020-01-24T20:04:15Z,,,"Partial test for https://github.com/whatwg/fullscreen/pull/65.

Other ""fully exit"" cases are tracked by https://github.com/w3c/web-platform-tests/issues/5883.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
855,2017-05-08T13:59:22Z,2020-01-24T20:00:07Z,,,"Tests for https://github.com/whatwg/html/issues/313.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
856,2017-05-04T21:13:11Z,2018-05-28T09:45:15Z,,,"Taking over https://github.com/w3c/web-platform-tests/pull/5281 and fixing the issue pointed out by dholbert

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
857,2017-04-28T23:03:04Z,2018-05-28T09:43:06Z,,,"Add a test to verify that browsing contexts of similar origin share the
same event loop. Today, this test passes in the Chromium browser but
fails in the Firefox browser.

<!-- Reviewable:start -->

<!-- Reviewable:end -->


",3618133
858,2017-04-23T17:30:10Z,2019-10-28T22:18:00Z,,,For whatwg/html#2575.,3618133
859,2017-04-13T14:12:13Z,2020-01-24T20:05:18Z,,,"Followup to https://github.com/w3c/web-platform-tests/pull/5390

https://github.com/w3c/web-platform-tests/pull/5390#pullrequestreview-31227081

> Would also be good to test interaction of width and innerwidth
> features (which one is used if both are present, if they are
> repeated...)

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
860,2017-04-11T19:52:14Z,2018-05-28T09:43:41Z,,,"An initial pass of WebVR V1.1 conformance tests. More tests to come.

These tests require an additional file - VRSimulator.js - that includes browser specific implementations of simulated VR actions. (Examples include: AttachWebVRDisplay and DetachWebVRDisplay. See the Readme.md for the full list.)

Note that these WebVR tests will fail during bot runs because VRSimulator.js is not present.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
861,2017-04-10T14:53:16Z,2018-06-12T18:03:04Z,,,"tests for https://github.com/w3c/csswg-drafts/issues/1088

these should be moved somewhere better once we know what directory to put them in

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
862,2017-04-06T12:44:44Z,2020-01-24T19:59:45Z,,,"

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
863,2017-03-31T19:33:42Z,2019-10-28T22:26:15Z,,,"According to the spec, content from loopback addresses should no longer
be treated as mixed content even in secure origins. See:
- w3c/webappsec-mixed-content@349501c
- https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy

The added tests pass in Chrome 53 and later, see:
- https://chromium.googlesource.com/chromium/src.git/+/130ee686fa00b617bfc001ceb3bb49782da2cb4e

They will also soon pass in Firefox, see:
- https://bugzilla.mozilla.org/show_bug.cgi?id=903966

It is unclear if HTTPS origins should be able to use workers and WebSocket
connections through a loopback HTTP address. They are not supported in Chrome
(whether this is intentional or not is uncertain) so I chose not to include
`websocket-request` and `worker-request` checks for the `loopback-allowed`
case.

Also note that `localhost` is now also allowed by the spec (as long as the UA
guarantees that it resolves to a loopback address), but Chrome does not
support it so I chose not to test it either.

We should ideally also test the IPv6 loopback address (`::1`), but our testing
infrastructure does not seem to like IPv6 addresses. I'll investigate and
submit a follow-up PR for that.",3618133
864,2017-03-31T12:35:54Z,2018-09-30T19:39:17Z,,,"

---

Originally posted as https://github.com/w3c/csswg-test/pull/567 by @rhauck on 26 Jul 2014, 00:06 UTC:

> <!-- Reviewable:start -->

<!-- Reviewable:end -->

",3618133
865,2017-03-31T12:33:46Z,2019-11-21T15:29:28Z,,,"…ional Rules Module L3.

---

Originally posted as https://github.com/w3c/csswg-test/pull/561 by @betravis on 11 Jul 2014, 22:35 UTC:

> These tests cover the basics of the CSS.supports functionality piece of the Conditional Rules L3 Specification.",3618133
866,2017-03-22T21:54:25Z,2018-05-28T09:43:19Z,,,"The Service Worker specification allows user agents to terminate workers
at any time. This makes global state highly volatile. Tests which rely
on persistence between invocations of service worker handlers are
therefore subject to sporadic failure according to the browser's
internal worker termination heuristic.

Update tests that previously relied on global service worker state to
instead store state in a persistent IndexedDB object store. Introduce a
set of utility functions to simplify interaction with this object store.

@ehsan @mkruisselbrink @mattto See
https://github.com/w3c/ServiceWorker/issues/1087 for an ongoing discussion
regarding worker termination and reliance on global state (and please feel free
to weigh in with your own perspective).

An alternative to using IndexedDB would be to send event data from the worker
to the client via [the `clients`
interface](https://w3c.github.io/ServiceWorker/#service-worker-global-scope-clients).
This might be simpler in some ways, but I'm reluctant to use the Service Worker
API to test the Service Worker API.

Finally, there are still more tests that rely on global state. I am submitting
this patch in order to solicit feedback on a viable workaround prior to fully
addressing the problem.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
867,2017-03-09T10:59:43Z,2020-01-24T19:59:46Z,,,"Closes #5064.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
868,2017-03-07T08:59:57Z,2018-05-28T09:43:06Z,,,"This PR is to fix #4648. And I found 2d.pattern.image.* is in similar situation, so I also provide a patch for them here.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
869,2017-02-22T17:16:13Z,2019-10-28T22:27:42Z,,,"This is expected to help test stability on slow configurations, as the
timeouts will be multiplied by the timeout multiplier.

Split out from #1816.",3618133
870,2017-02-22T17:14:57Z,2018-05-28T09:43:06Z,,,"This is expected to help test stability on slow configurations, as the
timeouts will be multiplied by the timeout multiplier.

Split out from #1816.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
871,2017-02-09T07:30:20Z,2018-05-28T09:43:06Z,,,"To reflect the spec change (https://github.com/w3c/ServiceWorker/commit/9e68720e4bd55486a422d7e46ecf68165305080a), remove code related to FetchEvent.isReload attribute.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
872,2017-01-27T16:32:32Z,2019-10-28T22:28:08Z,,,"w3c-test:mirror
Chrome needs to be run with a command line flag ""--enable-gpu-benchmarking"" to expose the automation APIs to the page.",3618133
873,2017-01-24T08:30:57Z,2018-10-23T09:31:03Z,,,"Loading an iframe without involving a navigate fetch inherits its
parent's active service worker, if it has one. By this rule:
 - Initial about:blank Document on iframe inherits its parent's SW
 - iframe srcdoc Document inherits its parent's SW

However, the navigate fetch through http fetch still wins. So, if a
client obtains a matched SW during the navigation, the matched SW
replaces the inherited SW.

An exception:
 - Navigating an iframe to a non-initial about:blank Document inherits
   the parent's SW

Related work: https://github.com/whatwg/html/pull/2080.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
874,2017-01-23T20:13:46Z,2019-10-28T22:28:21Z,,,"@junov: Please review. Thanks!

This pull request mainly modifies the OffscreenCanvas.commit() tests to handle the latest change in [specification about a promise-based commit() in OffscreenCanvas](https://wiki.whatwg.org/wiki/OffscreenCanvas.requestAnimationFrame). The changes include:
1. Modify the two existing tests in offscreencanvas.commit.html and offscreencanvas.commit.w.html to promise_tests. In particular, we test the assert pixels after the promise returned by commit() is resolved.
2. Add one more test that assert the pixels in OffscreenCanvas to be non-zero after commit(). This is an adaptation of [an existing layout test in Chromium](https://cs.chromium.org/chromium/src/third_party/WebKit/LayoutTests/fast/canvas/OffscreenCanvas-commit-retains-backing.html).",3618133
875,2017-01-17T23:28:58Z,2018-05-28T09:43:06Z,,,"The [spec mentions](https://www.w3.org/TR/encrypted-media/#media-element-restictions):

> Media data processed by a CDM MAY be unavailable through JavaScript APIs in the usual way (for example using the CanvasRenderingContext2D drawImage() method and the AudioContext MediaElementAudioSourceNode). This specification does not define conditions for such non-availability of media data, however, if media data is not available to JavaScript APIs then these APIs MAY behave as if no media data was present at all.


I figured this test would be useful to know which browsers allow this (chrome) and which ones don't (firefox)! Hopefully others do too, but I understand if it's not in the scope of this project.

I basically copy/pasted an existing test, so any recommendations for naming or robustness are most welcome!

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
876,2017-01-04T13:41:25Z,2020-01-24T20:00:06Z,,,"See https://github.com/whatwg/url/issues/159 for context.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
877,2016-12-29T18:16:24Z,2020-01-24T20:04:14Z,,,"Refs https://github.com/w3c/uievents/issues/84
The testcase passes in Safari, Chrome, and Edge.
Firefox doesn't currently support these properties, so it fails there.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
878,2016-12-16T14:16:53Z,2020-01-29T15:49:07Z,,,"Test for https://github.com/whatwg/html/pull/2187

Edit: this ought to follow https://github.com/whatwg/html/pull/3287 but I don't know right now (2020-01-27) whether it does.",3618133
879,2016-12-16T11:41:38Z,2018-08-16T12:49:23Z,,,"Checks for nonces. Logic is up to this point is identical to hashes.
@mikewest

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
880,2016-12-15T17:00:50Z,2018-08-16T12:49:32Z,,,"Tests for wildcard lists (`*`)
@mikewest

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
881,2016-11-29T16:00:16Z,2020-01-24T20:00:02Z,,,"A test to make sure we end up fixing
https://github.com/whatwg/html/issues/2109 correctly.",3618133
882,2016-11-11T14:53:22Z,2019-10-28T22:30:36Z,,,"A tester commented that they need to pass additional parameters to their protocol engine.  Also that their engine limits the scope of targets.  These changes allow for optional specification of those, where the default behavior is as it was earlier.

@BigBlueHat can you verify that this looks okay?  Rob and Hugo have already tested using it.",3618133
883,2016-11-08T02:53:45Z,2019-10-28T22:30:52Z,,,"…are the same array.

This is from the Cgdjmr pull request #1606

@engelke  Please review",3618133
884,2016-11-04T20:36:36Z,2020-01-24T20:03:51Z,,,Introduced in https://github.com/whatwg/html/pull/1936.,3618133
885,2016-10-28T10:15:40Z,2018-08-29T21:47:46Z,,,"Splitting redirect.py in two so that the scripts are easier to understand

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
886,2016-10-26T20:56:37Z,2020-01-24T20:03:54Z,,,"See https://github.com/whatwg/html/issues/1956. Not ready to merge until we figure that one out.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
887,2016-10-15T00:00:45Z,2020-01-27T14:44:25Z,,,"See https://github.com/whatwg/html/issues/1896.

@bzbarsky to review. Spec patch incoming.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
888,2016-09-07T20:45:03Z,2019-10-28T22:31:36Z,,,Tests getting/setting color attributes on documents with a frameset element.,3618133
889,2016-06-14T17:56:23Z,2019-10-28T22:31:46Z,,,"- Adding detailed case for `<time>` element testing all spec examples
- Updated `<output>` case to include additional testing
- Added all new case for `<data>` element",3618133
890,2016-05-20T08:59:39Z,2020-02-20T15:37:26Z,,,"

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
891,2016-05-06T17:52:45Z,2019-10-28T22:31:56Z,,,Some several test cases (but still not cover all scenarios).,3618133
892,2016-05-05T22:47:06Z,2019-10-28T22:32:14Z,,,I put several test cases where browsers are incompatible (but still not cover all scenarios).,3618133
893,2016-05-03T13:50:48Z,2019-10-28T22:32:27Z,,,"Doesn't check elements in other namespaces and similar cases because it's done in DOMTokenList-coverege-for-attributes.html, just only inform if DOMTokenList and supports() is implemented for testing element and attribute.",3618133
894,2016-04-05T14:33:50Z,2019-08-27T15:09:29Z,,,"

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
895,2016-03-26T20:30:57Z,2019-10-28T22:32:37Z,,,"This reflects some issues that I had when trying to get the test runner
up.",3618133
896,2016-02-18T02:17:23Z,2019-10-28T22:32:46Z,,,"This test ensures the event ordering between mutation observer micro-tasks with respect to timeouts. The test does a basic observer callback both before a timeout and during to ensure that exiting timeout scripts executes the micro-tasks. 

This demonstrates a known bug in IE and EdgeHTML where micro-tasks are not processed between timeout callbacks if more than one callback is ready to fire.",3618133
897,2015-08-17T10:03:57Z,2020-01-24T20:04:42Z,,,Part of https://github.com/w3c/web-platform-tests/issues/2033,3618133
898,2015-07-21T00:39:34Z,2018-05-28T09:43:05Z,,,"Fixes: #2027

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
899,2015-06-06T07:32:57Z,2019-05-01T00:40:16Z,,,"Please let me know if this is the best way to handle scripted SVG tests.  It seemed easier to do everything from an HTML document.

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
900,2015-05-12T18:11:52Z,2019-10-28T22:33:25Z,,,@KyleFung and I from Mozilla have been working on adding coverage for blend operations to Philip Taylor's compositing tests. Please let us know if there are any changes to be made!,3618133
901,2015-02-20T11:25:44Z,2019-10-28T22:33:37Z,,,,3618133
902,2015-02-20T07:29:50Z,2018-05-28T09:43:06Z,,,"Referred [Web MIDI API Editor's Draft](http://webaudio.github.io/web-midi-api/).
Web MIDI API is only implemented in Chrome (as is 2015/02/20).

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
903,2014-11-21T16:37:52Z,2019-10-28T22:34:06Z,,,Pull request corresponding to issue #1386.,3618133
904,2014-09-22T13:50:26Z,2019-10-28T22:34:33Z,,,"Not ready to be merged just yet.  Here for review by Canvas TF.  These are manual tests now.  Some can be converted to automated tests once its decided they are robust enough.
https://www.w3.org/wiki/HTML/Canvas_Task_Force/CR-Test",3618133
905,2014-09-13T09:12:51Z,2020-01-24T20:04:19Z,,,"These tests are generated from script elements inside spec source code using the Python script here:
http://dev.w3.org/2006/webapi/clipops/TC-generator/

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
906,2014-05-21T13:16:43Z,2020-01-24T20:04:21Z,,,,3618133
907,2014-05-19T13:53:42Z,2019-10-28T22:35:02Z,,,"Spec not fixed yet, but what the tests expect is what I plan on requiring.
https://www.w3.org/Bugs/Public/show_bug.cgi?id=24711
https://www.w3.org/Bugs/Public/show_bug.cgi?id=24958",3618133
908,2014-04-30T19:18:47Z,2020-03-17T22:03:51Z,,,"I added unit tests for SourceBuffer#appensStream function.
Please review the codes.

Hitoshi Uchida uchida@w3.org",3618133
909,2014-03-19T08:15:22Z,2019-11-01T13:51:45Z,,,"http://whatwg.org/html#playing-the-media-resource

https://www.w3.org/Bugs/Public/show_bug.cgi?id=24955

<!-- Reviewable:start -->

<!-- Reviewable:end -->
",3618133
910,2014-01-21T03:25:33Z,2019-10-28T22:35:21Z,,,,3618133
911,2013-11-26T00:40:58Z,2019-10-28T22:35:33Z,,,"Tests focus on element and doctype serialization, with a little bit of
DOMParser behaviors thrown in. These tests are primarily for new spec prose recently added to the W3C editor's draft spec.",3618133
912,2013-08-11T22:15:16Z,2019-10-28T22:36:18Z,,,Here are the rest of the tests I have for Web IDL v1.,3618133
