,Draft,Prerelease,Created_at,Published_at,Details,Id
0,False,True,2019-10-31T08:27:50Z,2019-10-31T13:43:11Z,"Dear Users,

3.13.0-rc2 (release candidate) is officially out!

2 major bugs fixed:
- Issue #662 
- Issue #780 

Minor fixes and features:
- Changing configuration paths from `/etc/mfs/` to `/etc/lizardfs/` (#456)
- Fixing autofs mounts (#731)
- Fix for not honored ACL (#816)
- Fixed build for 32-build mfsmount3
- Replacing fixed version of Google Test and spdlog with newest available version (#774)
- Making DebHelper able to use multiple parallel jobs
- Fix incorrect number of files/directories with specified goal (#723)
- Fixing compilation of the Wireshark plugin
- Fixed `lizardfs-uraft` deb package (#719)
- Added missing header to make LizardFS compilable again (#655)
- Clearing up compilation compilation warnings
- Fixing debug info
- Adding code documentation

Cheers,
LizardFS Team",9800119
1,False,True,2018-06-28T11:11:11Z,2018-07-17T12:45:20Z,"Dear Users,

3.13.0-rc1 (release candidate) is officially out!

Featuring:

 - uRaft HA
 - fixes to EC handling
 - nfs-ganesha plugin changed to use only C code
 - reduced number of secondary groups retrievals
 - add fuse3 client
 - many fixes


Detailed info:

* uRaft HA *

uRaft is HA solution designed for use with LizardFS. It allows for seamless switching
of master server in case of hardware failure. More information about uRaft is available
in LizardfFS Handbook (https://docs.lizardfs.com/index.html)

* fixes to EC handling *

For chunk types with number of parity greater than 4 there could occur situation when
it wasn't possible to recover missing data. This was low probability event but nonetheless
it could happen. To solve this problem we have to recompute parity parts for those types of chunks.
Unfortunately until all parity parts are recomputed affected chunks are in endangered state.

* nfs-ganesha plugin changed to use only C code *

In preparation for moving LizardFS nfs-ganesha plugin to official nfs-ganesha repository,
we had to remove all occurrences of C++ code and replace it with plain C.

* reduced number of secondary groups retrievals *

In LizardFS we introduced handling of secondary groups. Unfortunately the function to retrieve
secondary groups in FUSE library turned out to be using a lot of CPU resources. Thanks to removing
unnecessary calls to this function, mount performance increased significantly.

* add fuse3 client *

LizardFS now include mount3 client which uses FUSE3 library. Thanks to new features in FUSE3,
now mount performs much better in many scenarios. Here are the most important changes visible
to LizardFS users:
 - big_writes option is now enabled by default (also it isn't recognized as a parameter anymore).
 - Added writeback_cache option. With kernel 3.14 and newer this
   enables write-back caching which can significantly improve performance.
 - increased read/write performance (specially for small operations)

Because most of the Linux distributions don't include FUSE3 library, we have build FUSE3 packages
and made them available on LizardFS page (https://lizardfs.com/)

Cheers,
Adam Ochmański
LizardFS Team",9800119
2,False,False,2017-12-20T09:59:37Z,2017-12-21T10:09:38Z,"Dear Users,

3.12.0 is officially out!

Featuring:

C API
nfs-ganesha plugin
RichACL - a new POSIX + NFSv4 compatible ACL standard
OSX ACL support through osxfuse
ACL in-memory deduplication
client readahead enabled by default
file lock fixes
AVX2 support for erasure code goals
MinGW compilation fixes
more flexible chunkserver options
many fixes
Detailed info:

C API *
LizardFS 3.12 comes with liblizardfs-client library and C language API header.
It's now possible to build programs/plugins with direct support for LizardFS operations,
no FUSE needed. For reference, see:
src/mount/client/lizardfs_c_api.h
src/data/liblizardfs-client-example.c

For those building LizardFS from source, pass a -DENABLE_CLIENT_LIB=YES flag to cmake
in order to make sure you're building client library as well.

nfs-ganesha plugin *
Our official plugin for Ganesha NFS server is included as well. This plugin enables
a LizardFS FSAL (File System Abstraction Layer) to Ganesha, which is then used
to access LizardFS clusters directly. Our new plugin is pNFS and NFSv4.1 friendly.

For those building LizardFS from source, pass a -DENABLE_NFS_GANESHA=YES flag to cmake in order to make sure you're building client library as well.

RichACL *
In order to extend POSIX access control list implementation we introduced RichACL support.
Backward compatibility with POSIX ACLs is guaranteed. Additionally, it's possible to use NFSv4-style ACL tools (nfs4_getfacl/nfs4_setfacl) and RichACL tools (getrichacl/setrichacl) to manage more complicated access control rules.

OSX ACL *
Setting/getting ACLs is also possible on OSX via both command line chmod/ls -e interface and desktop.

File lock fixes *
Global file locking mechanism is now fully fixed and passes all NFS lock tests from connectathon suite.

AVX2 *
Erasure code goal computing routines now take full advantage of AVX2 processor extensions.

MinGW *
LizardFS is now bug-free again for MinGW cross-compiling.

Chunkserver options *
Replication limits are now fully configurable in chunkserver config.
Also, chunk test (a.k.a. scrubbing) has 1 millisecond precision now instead of previous 1 second, which allows users to turn on more aggressive scrubbing with simple chunkserver reload.

Best regards,
LizardFS Team",9800119
3,False,True,2017-11-28T13:06:01Z,2017-11-28T21:54:56Z,"Dear Users,

3.12.0-rc (release candidate) is officially out!

Featuring:

- C API
- nfs-ganesha plugin
- RichACL - a new POSIX + NFSv4 compatible ACL standard
- OSX ACL support through osxfuse
- ACL in-memory deduplication
- client readahead enabled by default
- file lock fixes
- AVX2 support for erasure code goals
- MinGW compilation fixes
- more flexible chunkserver options
- many fixes


Detailed info:

* C API *

LizardFS 3.12 comes with liblizardfs-client library and C language API header.
It's now possible to build programs/plugins with direct support for LizardFS operations,
no FUSE needed. For reference, see:
src/mount/client/lizardfs_c_api.h
src/data/liblizardfs-client-example.c

For those building LizardFS from source, pass a -DENABLE_CLIENT_LIB=YES flag to cmake
in order to make sure you're building client library as well.


* nfs-ganesha plugin *

Our official plugin for Ganesha NFS server is included as well. This plugin enables
a LizardFS FSAL (File System Abstraction Layer) to Ganesha, which is then used
to access LizardFS clusters directly. Our new plugin is pNFS and NFSv4.1 friendly.

For those building LizardFS from source, pass a -DENABLE_NFS_GANESHA=YES flag to cmake in order to make sure you're building client library as well.


* RichACL *
In order to extend POSIX access control list implementation we introduced RichACL support.
Backward compatibility with POSIX ACLs is guaranteed. Additionally, it's possible to use NFSv4-style ACL tools (nfs4_getfacl/nfs4_setfacl) and RichACL tools (getrichacl/setrichacl) to manage more complicated access control rules.


* OSX ACL *
Setting/getting ACLs is also possible on OSX via both command line chmod/ls -e interface and desktop.


* File lock fixes *
Global file locking mechanism is now fully fixed and passes all NFS lock tests from connectathon suite.


* AVX2 *
Erasure code goal computing routines now take full advantage of AVX2 processor extensions.


* MinGW *
LizardFS is now bug-free again for MinGW cross-compiling.


* Chunkserver options *
Replication limits are now fully configurable in chunkserver config.
Also, chunk test (a.k.a. scrubbing) has 1 millisecond precision now instead of previous 1 second, which allows users to turn on more aggressive scrubbing with simple chunkserver reload.

Cheers,
LizardFS Team",9800119
4,False,False,2017-07-13T08:49:38Z,2017-07-13T14:10:12Z,"Dear Users,
LizardFS 3.11.3 is ready.

Yet another bugfix release, here's what we fixed:
 
* master: fix issues with reporting defective files
* mount: fix request size in read cache for empty results
 
Best,
LizardFS Team",9800119
5,False,False,2017-06-07T09:00:27Z,2017-06-07T14:12:55Z,"Dear Users,

LizardFS 3.11.2 is already here!

This is a _very_ minor release and its only purpose is to fix wrong version code in 3.11.1.

Enjoy!

Best,
LizardFS Team",9800119
6,False,False,2017-06-06T13:13:52Z,2017-06-06T13:56:41Z,"Dear Users,

LizardFS 3.11.1 is out!

This is a minor bugfix release, so it contains bugfixes only:

* master: fix high cpu usage in fs_periodic_file_test
* master: fix dangling nodes in defective files list
* mount:  fix direntry cache bug for repeated paths

Enjoy!

Best,
LizardFS Team",9800119
7,False,False,2017-05-09T13:42:14Z,2017-05-11T12:35:11Z,"Dear Users,

here comes LizardFS 3.11.0!
Featuring:

master: improve ACL implementation
master: add option to avoid same-ip chunkserver replication
master: add minimal goal configuration option
master: reimplement directory entry cache for faster lookups
master: add whole-path lookups
master: chunkserver add chunkserver load awareness
mount: add readahead to improve sequential read perfromance
mount: add secondary groups support
tools: add correct-only flag to filerepair
tools: add -s and -i options to snapshot command
tools: add recursive remove operations (for removing large directories 
and snapshots)
tools: add tool for stopping execution of tasks (snapshot, recursive 
remove, etc.)
all: change to semantic versioning system
all: many fixes

Detailed information:

Readahead
Clients can now benefit from integrated readahead mechanism.
In order to enable readahead, please mount with the following options:
  -o cacheexpirationtime={MSEC}
  -o readaheadmaxwindowsize={KB}
Example:
  mfsmount -o cacheexpirationtime=1000 -o readaheadmaxwindowsize=8192

Recursive remove
A tool for removing large directories/snapshots is finally implemented.
Example:
  lizardfs rremove big_directory/
  lizardfs rremove -h

Tools for managing tasks
Two administration tools are available for managing long tasks:
  lizardfs-admin list-tasks
  lizardfs-admin stop-task
Run above commands for detailed usage information.

Secondary groups support
LizardFS is now able to fully recognize secondary groups of users
and take them into account while evaluating permissions.


Best,
LizardFS Team",9800119
8,False,False,2016-12-28T11:43:20Z,2017-01-17T14:27:04Z,"Hi all,

LizardFS 3.10.6 is here!

This release provides fixes only:
- (master) judy library fixes
- (master) ARM compilation fixes

Best,
LizardFS Team
",9800119
9,False,False,2016-10-18T07:57:43Z,2016-10-19T13:48:35Z,"Hi all,

LizardFS 3.10.4 is here!

Featuring:
- task manager performance improvements (speeding up massive metadata 
  operations: snapshots, setting trash time, setting goal, etc.)
- fixing an error in trash files that caused #487 and #489 github issues
- other minor fixes and improvements

Huge thanks to everyone that reported problems with 3.10.2.

Best,
LizardFS Team
",9800119
10,False,False,2016-09-12T13:42:09Z,2016-09-14T12:45:40Z,"Dear Users,

LizardFS 3.10.2 is out!
Featuring:

Master: 
- redesign in-memory representation of file system objects - at least 30% reduction in RAM usage
- name storage: a possibility to keep all file names in BerkeleyDB, thus saving even more RAM
- redesign of trash - increased performance, reduced RAM usage and CPU pressure
- huge boost of responsiveness - lengthy operations split into asynchronous bits
- OPERATIONS_DELAY\* config entries, which allow postponing metadata operations on restart/disconnect
- mount: make big snapshot, setgoal and settrashtime operations asynchronous to improve responsiveness
- fix improper handling of endangered chunks

Chunkserver: 
- memory optimizations - at least 60% reduction in RAM usage
- introduce smart descriptor management

Tools: 
- brand new `lizardfs` command, a unified replacement for mfs\* tools with prompt and bash completion

Other: 
- various fixes and community requests

Details:

Master’s memory and CPU
With 3.10.2, the master is much more memory-efficient and responsive. RAM usage reduction was accomplished through redesigning the way it keeps metadata in memory, adding a possibility to keep some metadata in on-disk database (see USE_BDB_FOR_NAME_STORAGE in mfsmaster.cfg file for reference). Responsiveness was dramatically increased by recognizing all potentially lengthy operations and splitting their execution in smaller time bits. It applied to both in-master maintenance procedures and client’s requests like snapshotting/changing goal of very big directories.

`lizardfs` tool:
3.10.2 comes with new client tool: `lizardfs` utility. See `man lizardfs`, `lizardfs -h` for details. Aside from known functionalities like setting/getting goals, making snapshots, etc. it comes with bash-like prompt and bash completion.

Examples:
lizardfs setgoal -r ec32 a/

lizardfs makesnapshot dira/ dirb/

lizardfs fileinfo a/*

lizardfs <<EOF
fileinfo a/*
setgoal -r 3 a
getgoal a/2
EOF

What’s next:
In next release, paths and build system is to be unified with the one from official Debian repository (e.g. configuration directory will officially become /etc/lizardfs). Also, more asynchronous client commands are coming including recursive-remove operation. A so called “minimal goal setting”, which will probably be named MIN_REDUNDANCY_LEVEL is being implemented as well. Finally, more news on native HA (μRaft) will appear.

Best regards,
LizardFS Team
",9800119
11,False,False,2016-06-23T08:56:53Z,2016-08-04T11:49:28Z,"Dear users,

LizardFS 3.10.0 is now stable.

This release consists of:

erasure code goals (aka K+M goals)
per directory quotas
improved interaction with legacy chunkservers and mounts
ports for OSX and FreeBSD
updated mfsfileinfo output with xor/ec goals
many fixes
Details:

Erasure code goals

For each file using ec(K+M) goal, the system will split the file into K parts and generate M parity parts. Any K parts are required to be able to reproduce file contents.

If labels are specified, parts will be kept on chunkservers with these labels. Otherwise, default wildcard labels will be used.

This kind of goal allows M of K+M copies to be lost and the file would still remain accessible. Erasure code goal occupies M/K extra space.

Please note that minimal K value is 2 and minimal M value is 1.

Examples of new goal configuration:
5 ec32 : $ec(3,2){ A B _ _ _ }
6 ec43 : $ec(4,3)

Per directory quotas

It is now possible to set inode/size limits per directory.
In case of multiple quota rules, the most restrictive one is always effective.
Example:

mfssetquota -d 10M 100M 50M 1G /mnt/lizardfs/a/directory

Improved interaction with legacy chunkservers and mounts

Pre-2.6.0 mounts and chunkservers used to be not fully compatible with 3.9.x servers, which complicated the upgrade process. Those issues are now solved - new mounts are perfectly capable of communicating with legacy chunkservers and vice versa.
This rule has one exception: for consistency reasons, replication from new chunkservers to old ones is disabled.

Ports for OSX and FreeBSD

LizardFS is now buildable for those systems.

Fixes

denying replication during scan
atomicity of replication process
sending proper error codes to master
proper handling of replication limits during rebalancing
removal of splice call
removing possible livelock in master networking
adding missing update in inodes id pool

Next release (unstable now) will contain a massive set of patches which make the cluster more responsive.
Also, a great reduction of master's and chunkserver's RAM usage is to be expected (at least 30% less resources needed).
An improved client tool for managing goals/quotas/files etc. is coming as well.

Best regards,
Piotr Sarna
LizardFS Team
",9800119
12,False,True,2016-03-14T16:07:34Z,2016-03-14T16:17:25Z,"Dear users,

please welcome LizardFS 3.10.0-rc!

The package consists of:
- erasure code goals (aka K+M goals)
- per directory quotas
- improved interaction with legacy chunkservers and mounts
- ports for OSX and FreeBSD
- many fixes

Details:

Erasure code goals

For each file using ec(K+M) goal, the system will split the file into K parts and generate M parity parts. Any K parts are required to be able to reproduce file contents.

If labels are specified, parts will be kept on chunkservers with these labels. Otherwise, default wildcard labels will be used.

This kind of goal allows M of K+M copies to be lost and the file would still remain accessible. Erasure code goal occupies M/K extra space.

Erasure code goals are in rc version right now and they are here for peer review - please share your opinions and test results with us.

Please note that minimal K value is 2 and minimal M value is 1.

Examples of new goal configuration:
5 ec32 : $ec(3,2){ A B _ _ _ }
6 ec43 : $ec(4,3)

Per directory quotas

It is now possible to set inode/size limits per directory.
In case of multiple quota rules, the most restrictive one is always effective.
Example:

mfssetquota -d 10M 100M 50M 1G /mnt/lizardfs/a/directory

Improved interaction with legacy chunkservers and mounts

Pre-2.6.0 mounts and chunkservers used to be not fully compatible with 3.9.x servers, which complicated the upgrade process. Those issues are now solved - new mounts are perfectly capable of communicating with legacy chunkservers and vice versa.
This rule has one exception: for consistency reasons, replication from new chunkservers to old ones is disabled.

Ports for OSX and FreeBSD

LizardFS is now buildable for those systems.

Fixes
- denying replication during scan
- atomicity of replication process
- sending proper error codes to master
- proper handling of replication limits during rebalancing
- removal of splice call

Presented version is tagged with -rc (release candidate), which roughly means that we would be very grateful for insights, test results, and hopefully not frequent bug reports provided by community.

Best,
Piotr Sarna
LizardFS Team
",9800119
13,False,False,2015-12-09T09:32:07Z,2015-12-09T13:33:27Z,"Dear users,

here comes LizardFS 3.9.4!

This release is a set of necessary amendments for LizardFS 3.9.2.

Things we have done:
- Removed master server overload on restarting chunkservers
  – Fixed leaking descriptors problem
- Improved mechanism of moving chunks to new directory layout
- Fixed issues related to scanning directories with new chunk format present
- Removed hang in mount when chunkserver reported no valid copies of a file
- Changed handling of legacy (pre-3.9.2) chunkservers in new installations
- Removed default linking to tcmalloc library due to performance drop
- Added XOR replication to statistics
- Improved global file locks engine

Special thanks to Dmitry Smirnov for invaluable help with spotting weaknesses of LizardFS 3.9.2.
",9800119
14,False,False,2015-10-28T12:44:35Z,2015-10-28T13:49:57Z,"Dear users,

we are pleased to announce the release of LizardFS 3.9.2!

This release brings to you:
– new goal type: XOR
– file locks
– PAM compatibility
– redesigned snapshots
– redesigned chunk loop and its configuration
– multiple network threads for chunkservers
– configurable network bandwith limit for replication
– many fixes and improvements

Detailed information about selected features:

XOR goal type

Traditional goals work like this:
For each file using this goal and for each label, the system will try to maintain a copy of the file on some chunkserver with this label.

XOR goals work like this:
For each file using this goal, the system will split the file into N+1 parts (N ordinary + 1 parity). For reading, any N parts are necessary.
If labels are specified, parts will be kept on chunkservers with these labels. Otherwise, default wildcard labels will be used.
This kind of goal allows 1 of N+1 copies to be lost, and the file would still be accessible. Moreover, it only occupies 1/N extra space.

File locks

Global file locking is introduced for both flock and POSIX standards.
For reference see `man flock` and `man fcntl`.
Additionally, administration tools for file locks are available, see `lizardfs-admin manage-locks`.

PAM compatibility

LizardFS is now aware of its limits set in /etc/security/limits.d/10-lizardfs.conf file.
Open files limit is now configured with entries:
mfs soft nofile 10000
mfs hard nofile 10000
instead of being hard coded into the system.

Redesigned snapshots and chunk loop configuration

Snapshots are now created asynchronously, which means that huge directories would not hang the snapshotting process anymore.
Chunk loop was also heavily redesigned. Its performance is improved and there are new configuration options available (e.g. CHUNKS_LOOP_MAX_CPU)

Configurable network bandwith limit for replication

Bandwidth limit can be set in chunkserver configuration file: REPLICATION_BANDWIDTH_LIMIT_KBPS

What is more, several issues reported by the community were resolved, bugs were fixed and code was improved. Enjoy our brand new release of LizardFS!
",9800119
15,False,False,2015-04-30T11:22:24Z,2015-05-21T12:04:03Z,,9800119
16,False,True,2019-10-10T12:22:58Z,2019-10-10T12:49:00Z,"# Change Log
- Refactored the whole PPOS and CBFT's framework.
- Temporarily remove the MPC and VC features.
- Fixed some bugs in version0.6.0.
",161629033
17,False,True,2019-04-15T08:31:59Z,2019-04-25T06:21:49Z,"# md5sum

| File    | md5sum | 
|:----------|:-------------|
| platon-ubuntu-amd64-0.6.0.tar.gz | 18f816bbb11f2617d3f4f5c12cca82ce |
| platon-ubuntu-amd64-0.6.0-with-mv.tar.gz  | 2ff9594dd5b86628188ca80bba5c9c5e |
| platon-windows-x86_64-0.6.0.zip | 265e9f3983c3a21fa915d10e5903fec4 |
| platon-windows-x86_64-0.6.0-with-mv.zip  | 9cad41ea16c614873e0936909f8ea843 |

# Change Log
- Fast mode is supported for block synchronization。
- Streamlined the data storage of MPT.
- Support parameter ""--betanet"" to connect to Beta network when startup.
- Fixed the panic problem of consensus.
- Fixed the bug [Change the cfg file cbft.json and observe the block time](https://github.com/PlatONnetwork/PlatON-Go/issues/48)
- Fixed the 'CandidateWithdraw' failed bug [#49](https://github.com/PlatONnetwork/PlatON-Go/issues/49)
- Fixed the bug of 'Contract's balance is not enough' [#50](https://github.com/PlatONnetwork/PlatON-Go/issues/50)
",161629033
18,False,True,2019-02-28T03:27:12Z,2019-02-28T07:52:04Z,"# md5sum

| File    | md5sum | 
|:----------|:-------------|
| platon-ubuntu-amd64-0.5.0-with-mv.tar.gz | 05d933f44e83215049af6b33d2a00819 |
| platon-windows-x86_64-0.5.0-with-mv.zip  | e0926bb0c21227b70a5f448a62856f2a |
| platon-ubuntu-amd64-0.5.0.tar.gz | 869fddec566ad4a881d7a56c71719c44 |
| platon-windows-x86_64-0.5.0.zip  | 2988b96adcd7ef8144499a14f8b6cc87 |


# Change Log
- Support voting related transactions. [#31](https://github.com/PlatONnetwork/PlatON-Go/issues/31)
- Support for nodes auto-discovery. [#32](https://github.com/PlatONnetwork/PlatON-Go/issues/32)
- Support for privacy contract on windows. [#33](https://github.com/PlatONnetwork/PlatON-Go/issues/33)
- Added some candidator pool logic which is necessary in PPOS. [#34](https://github.com/PlatONnetwork/PlatON-Go/issues/34)
- Fixed the bug of returning a timeout when deploying VC contracts.
- Fixed the 'bad block' bug which was caused by voting transactions.",161629033
19,False,True,2019-01-28T02:25:06Z,2019-01-28T02:46:06Z,"# sha3sum

| File    | sha3sum |
|:----------|:-------------|
| platon-ubuntu-amd64-0.4.0.tar.gz | 18cf606e8a46c54ac6ad9b9c573e0069193041e8d737910a0cc84328 |
| platon-windows-x86_64-0.4.0.zip | 40c3a7a22575c25838248302f934716c0847c0652e27baf3c3647fd8|

# Change Log
- Supported verifiable contracts.[#23](https://github.com/PlatONnetwork/PlatON-Go/issues/23)
- VC enable nodes can perform VC computing off the chain.[#24](https://github.com/PlatONnetwork/PlatON-Go/issues/24)
- VC enable nodes automatically publishes the VC computing result to the chain.[#25](https://github.com/PlatONnetwork/PlatON-Go/issues/25)
- All nodes verify the VC certificate and then register the results on the chain.[#26](https://github.com/PlatONnetwork/PlatON-Go/issues/26)
- Supported Docker image installation for PlatON.
- Fixed that the transaction pool was locked and the transaction couldn't be sent out during the single node stress test.
- Fixed that the get result taskid returned an empty string when querying the result on the chain.",161629033
20,False,False,2019-01-18T01:57:24Z,2019-01-18T02:28:39Z,"# sha3sum

| File    | sha3sum|
|:----------|:-------------|
| platon-ubuntu-amd64-0.3.0.tar.gz | 286ecd0d4fa8d8bf54ef79b30d21cff7e390b518c2106f0778727e00 |
| platon-windows-x86_64-0.3.0.zip | dac09503c053a7dc145ef269ec11e109bd06fec6a826000f63bfd1f2 |

# Change Log
- Support PPOS Phase one function (became validator via pledge). [#17](https://github.com/PlatONnetwork/PlatON-Go/issues/17)
- Added compile options, choose whether to support/include MPC function.  [#20](https://github.com/PlatONnetwork/PlatON-Go/issues/20)
- Adjust block producing time window of CBFT consensus to reduce the fork probability. [#21](https://github.com/PlatONnetwork/PlatON-Go/issues/21)
- Fixed the WASM contract return value parsing problem caused by a WASM virtual machine bug during 32-byte signed data alignment processing.[#18](https://github.com/PlatONnetwork/PlatON-Go/issues/18)
- Fixed MPC contract storage exceptions.
- Fixed bugs which is blocking CBFT consensus.
- Fixed node panic bugs.
",161629033
21,False,True,2018-12-24T11:42:02Z,2018-12-28T02:02:03Z,"# md5sum

| File    | md5sum |
|:----------|:-------------|
| ctool-linux-amd64 | d4e11eab0e8c97d1efdc459adacf8899 |
| ctool-windows-amd64.exe | e7fb9e9175203a5bfc52fe734a08519a |
| ethkey-linux-amd64 | dbd1b4ec3c1924cde2dbce9f81fbb696 |
| ethkey-windows-amd64.exe | f8c9d9d743d242d1750117c7bec2f81e |
| platon-linux-amd64 | 3a8c5b96025d1ba7de3a8c7e7eedc39d |
| platon-windows-amd64.exe | 24de7c4e8b7fa6ea0f62b04aa34e2966 |
| PlatON-Contract.tar.gz | a1d1c2681264cfabbc01bca5779d8123 |
| mpclib.tar.gz | 4865f8587c830f833d7e1d9eb4984428 |
| platon.json | e8895fbcae39548690200a82f5bae5d8 |
| platon-linux-amd64-full.deb | 235229f40dc9bfb93d7e0ccd4b3a4b84 |
| platon-linux-amd64-full.tar.gz | 88566b33c3b9546c72a7172c3bd9712c |
| platon-linux-mpc-vm-amd64.deb | ebc0b9fe01054e1fb6c98df110928691 |
| platon-windows-amd64-full.zip | 9de1c83c3acc5007a47b658b53594c11 |

# Change Log
- Support secure two-party computing on PlatON. [#14](https://github.com/PlatONnetwork/PlatON-Go/issues/14)
- Support the 'MPC' type transactions. [#15](https://github.com/PlatONnetwork/PlatON-Go/issues/15)
- Support for smart contracts running on WASM.[#10](https://github.com/PlatONnetwork/PlatON-Go/issues/10)
- Replace the default smart contracts' virtual machine with WASM.[#11](https://github.com/PlatONnetwork/PlatON-Go/issues/11)
- Support smart contracts written in C++.[#12](https://github.com/PlatONnetwork/PlatON-Go/issues/12)
- Add a new storage model, which is suitable for the storage of WASM contracts.[#13](https://github.com/PlatONnetwork/PlatON-Go/issues/13)
- Fixed an ""unknown ancestor"" bug, which is caused by delayed P2P connection and lose some blocks.
- Fixed a ""concurrent map writes"" bug, added a mutex lock on map access.
- Fixed out of sequence block confirmation bug that caused chain fork. 
- Optimized txpool performance, added a channel to get consumers obtain txpool lock smoothly. 
- Fixed gas estimation bug which may cause process panic. 
- Raised priority of consensus-related messages in p2p broadcasting. ",161629033
22,False,True,2018-12-17T10:40:56Z,2018-12-18T04:24:46Z,"# md5sum

| File    | md5sum |
|:----------|:-------------|
| ethkey-linux-amd64 | 512a64d2e2475811b9b17174f1d2f30d |
| platon-linux-amd64 | cb548eedb2ae88864a2e08b12f9303c9 |
| ethkey-windows-amd64.exe | 5f94ba9644df0c80434c6f6b72d95aab |
| platon-windows-amd64.exe | da766c14d1250019485ada459d9e1593 |
| platon.json | 170e71ac854658ada51276520a9ac07b |

# Change Log
- Implement Concurrent Byzantine Fault Tolerance algorithm. [#4](https://github.com/PlatONnetwork/PlatON-Go/issues/4)
- Implement WASM virtual machine. [#5](https://github.com/PlatONnetwork/PlatON-Go/issues/5)
- Streamlined foundamental blockchain platform based on Ethereum.
- Optimized txpool lock competition mechanism for transaction performance.
- Modified the Gaslimit dynamic adjustment strategy.
- Removed uncle block and modified difficulty adjustment strategy.
- Modified the genesis block generation logic of puppeth, and added the configure for CBFT.
- Removed transactions verification incentives and new block generating incentives temporarily.
- Finished basic PlatON introduction, installation instructions and step-by-step guide for private network building. ",161629033
23,False,False,2020-03-18T14:06:23Z,2020-03-18T14:22:32Z,,8759937
24,False,False,2020-03-12T18:09:55Z,2020-03-12T18:20:12Z,,8759937
25,False,False,2020-03-12T17:41:02Z,2020-03-12T17:54:14Z,,8759937
26,False,False,2020-01-29T16:08:12Z,2020-01-29T16:11:35Z,,8759937
27,False,False,2019-11-04T16:58:33Z,2019-11-04T17:05:08Z,,8759937
28,False,False,2019-10-29T13:09:56Z,2019-11-04T15:31:20Z,,8759937
29,False,False,2019-11-04T13:44:30Z,2019-11-04T15:16:28Z,,8759937
30,False,False,2019-10-27T12:27:01Z,2019-10-27T12:32:31Z,,8759937
31,False,False,2019-10-18T12:26:49Z,2019-10-18T12:45:38Z,,8759937
32,False,False,2019-10-17T22:52:26Z,2019-10-17T23:05:59Z,,8759937
33,False,False,2019-09-24T15:49:45Z,2019-09-24T16:18:36Z,,8759937
34,False,False,2019-09-17T15:46:12Z,2019-09-17T15:57:01Z,,8759937
35,False,False,2019-07-19T13:20:26Z,2019-07-19T13:41:10Z,,8759937
36,False,False,2019-07-02T13:55:59Z,2019-07-02T14:05:13Z,,8759937
37,False,False,2019-06-03T16:45:36Z,2019-06-03T17:24:08Z,,8759937
38,False,False,2019-05-14T13:37:39Z,2019-05-14T15:45:18Z,,8759937
39,False,False,2019-04-30T14:47:28Z,2019-04-30T15:07:36Z,,8759937
40,False,False,2019-03-15T12:14:41Z,2019-03-15T12:28:36Z,,8759937
41,False,False,2019-03-14T18:02:12Z,2019-03-14T18:06:42Z,,8759937
42,False,False,2019-02-26T16:11:48Z,2019-03-05T17:16:51Z,,8759937
43,False,False,2018-11-14T13:12:17Z,2018-11-13T17:04:56Z,,8759937
44,False,False,2018-10-17T16:12:27Z,2018-10-17T18:00:43Z,,8759937
45,False,False,2019-07-30T09:24:55Z,2019-07-30T09:28:26Z,"### New Features

* Curate dependencies - [Issue #152](https://github.com/HDI-Project/ATM/issues/152) by @csala
* POST request blocked by CORS policy - [Issue #151](https://github.com/HDI-Project/ATM/issues/151) by @pvk-developer
",70934951
46,False,False,2019-06-24T13:31:16Z,2019-07-26T16:30:03Z,"### New Features

* Rest API Cross-origin resource sharing (CORS) - [Issue #146](https://github.com/HDI-Project/ATM/issues/146) by @pvk-developer",70934951
47,False,False,2019-05-29T15:27:15Z,2019-05-29T15:29:03Z,"New Python API

### New Features

* New API for ATM usage within Python - [Issue #142](https://github.com/HDI-Project/ATM/issues/142) by @pvk-developer and @csala
* Improved Documentation - [Issue #142](https://github.com/HDI-Project/ATM/issues/142) by @pvk-developer and @csala
* Code cleanup - [Issue #102](https://github.com/HDI-Project/ATM/issues/102) by @csala
* Ensure datasets can be downloaded from S3 - [Issue #137](https://github.com/HDI-Project/ATM/issues/137) by @pvk-developer
* Change to PyMySQL to remove libmysqlclient-dev system dependency - [Issue #136](https://github.com/HDI-Project/ATM/issues/136) by @pvk-developer and @csala",70934951
48,False,False,2019-05-07T18:37:14Z,2019-05-07T18:38:53Z,"REST API and Cluster Management.

### New Features

* REST API Server - Issues [#82](https://github.com/HDI-Project/ATM/issues/82) and  [#132](https://github.com/HDI-Project/ATM/issues/132) by @RogerTangos, @pvk-developer and @csala
* Add Cluster Management commands to start and stop the server and multiple workers as background processes - Issue [#130](https://github.com/HDI-Project/ATM/issues/130) by @pvk-developer and @csala
* Add TravisCI and migrate docs to GitHub Pages - Issue [#129](https://github.com/HDI-Project/ATM/issues/129) by @pvk-developer",70934951
49,False,False,2019-04-02T11:30:52Z,2019-04-02T11:31:42Z,"First Release on PyPi.

### New Features

* Upgrade to latest BTB.
* New Command Line Interface.",70934951
50,False,False,2019-02-22T22:00:58Z,2019-02-22T22:15:03Z,First stable release.,70934951
51,False,True,2015-08-01T09:02:56Z,2015-08-03T01:12:11Z,"Update for Apache Ranger
- Remove `addjar` while init. Users have to distribute `rhive_udf.jar` at proper location(hive aux lib, etc).
- java up to 1.7
- set `HADOOP_HDFS_HOME` and `HADOOP_MAPREDUCE_HOME` to build. Normaly these are same as `HADOOP_HOME`.
",2655863
52,False,False,2014-12-15T01:39:36Z,2014-12-15T01:41:54Z,"Add Environment Variable ""FS_TMP""
",2655863
53,False,False,2014-12-11T01:47:22Z,2014-12-11T01:52:43Z,"[BUG FIX]
 Issuse : UDF is trying to load its RData file from wrong directory #79
 Issuse : rhive.size.table() permission error #80
",2655863
54,False,False,2014-12-08T04:38:42Z,2014-12-08T05:11:17Z,"[BUG FIX] rhive.load.table2 
",2655863
55,False,True,2014-11-24T09:27:09Z,2014-11-24T09:28:45Z,"Change how to load hadoop jars.
",2655863
56,False,False,2014-11-20T09:08:38Z,2014-11-20T09:11:15Z,"1. Kerberos Authentication Support
2. Add and update test case
3. Kryo Support for CDH
",2655863
57,False,False,2014-11-10T01:39:34Z,2014-11-20T04:30:59Z,"nexr-rhive-2.0.4
- rhive.desc.table() support the following:
    1) table has line delimiter '\n'
    2) hive 0.13.1. ""DESC"" query in this version don't provided comment column. 
- rhive.desc.table(x, details = True) return String including table detail information.
",2655863
58,False,False,2014-11-06T07:26:41Z,2014-11-06T07:28:28Z,"bug fixed : create user temp directory in HDFS
",2655863
59,False,False,2014-10-24T09:51:50Z,2014-10-27T05:53:53Z,"bug fixed : load hadoop configuration
",2655863
60,False,False,2014-08-22T05:32:48Z,2014-08-22T05:36:34Z,,2655863
61,False,False,2014-03-14T02:48:11Z,2014-03-14T03:16:31Z,,2655863
62,False,False,2013-09-10T18:22:30Z,2013-09-10T18:42:49Z,,2655863
63,False,False,2020-02-27T00:30:11Z,2020-02-27T00:30:15Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* Alter printPrepTree to printTree. #1586
* Python3 bugfix. #1585

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Bugfix for GaudiExec to take options from the sharedir when the application has been prepared. Previously a prepared application took the options from the original location. #1589
",43645564
64,False,False,2020-02-19T22:53:36Z,2020-02-19T22:53:41Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* New GPI function 'runfile' to execute python scripts in the Ganga namespace. Replacement for the defunct python 2 execfile. #1564
* Bugfix for RootMerger #1581
* GangaCMS, GangaCamtology and GangaPlotter removed. #1572

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Bugfix for LHCbCompressedDataset when submitting to the Local backend. #1562
",43645564
65,False,False,2020-01-22T10:21:03Z,2020-01-22T10:21:08Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/Ganga
--------------------------------------------------------------------------------------------------------------
* Add platform attribute to Executable. This requests a specific platform when submitting jobs to Dirac. #1528, #1555, #1556
* Made thread timeout configurable 'Queues' - ['ShutDownTimeout'] to reduce CPU usage. #1558

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Fix to clear up temporary sandbox folder. #1561

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Update Executable Dirac RT handler to use LHCbDiracJob and request a specific platform. #1528, #1555, #1556
* Created LHCbCompressedDataset for use with BKQuery. The full dataset can be requested with BKQuery().getDataset(False) #1557, #1559
",43645564
66,False,False,2019-12-05T22:36:04Z,2019-12-05T22:36:09Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* Set unused subprocess stdin to DEVNULL to limit file handler usage. #1544
* Implementation of virtualization for running jobs with Dirac and batch backends. #1539

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Bugfix for GaudiExec readInputData. #1546
",43645564
67,False,False,2019-12-03T08:55:24Z,2019-12-03T08:55:29Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* Bugfix for subjob creation. #1542
* Bugifx for assigning job times. #1538

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Implemented compatability with LbEnv. #1462, #1540
",43645564
68,False,False,2019-11-25T09:51:22Z,2019-11-25T09:51:27Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* Fix StartupGPI configurable #1533
* Fix for files helper functions not to import Ganga #1531

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Fix for readInputData with GaudiExec #1529
* Added check for data.py in options and input files #1534
* Fix of XML summary processing #1530

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Fix for OfflineGangaDiracSplitter with banned sites #1535
",43645564
69,False,False,2019-11-07T08:56:46Z,2019-11-07T08:56:50Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* Remove gangarc version check. #1519
* Fix for sandbox with python 3. #1519

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Fix for prepareGaudiExec with python 3. #1519

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Check all subjobs are killed properly. #1520
* Fix to include X509_USER_PROXY in Dirac environment. #1519
",43645564
70,False,False,2019-11-01T13:11:47Z,2019-11-01T13:11:51Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* Ganga updated to python 3

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Updated deprecated API function submitJob. #1486

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Start GaudiExec job script with application name. #1499
",43645564
71,False,False,2019-11-01T11:05:29Z,2019-11-01T11:05:33Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* From version 8.0.0 Ganga is based on python 3. Therefore old versions (7.1.15 and below) are no longer supported. Please upgrade to a newer Ganga version.

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Updated deprecated API function submitJob. #1486

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Start GaudiExec job script with application name. #1499
",43645564
72,False,False,2019-05-24T08:28:54Z,2019-05-24T08:28:58Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* Prompt flushing moved to pre-prompt hook. Prevents the flushing whilst code is input but now the cell needs to execute to flush. #1457
* Fix for getting job hostname. #1456
* Mass storage file expands environment variables in the config. #1451
* Bugfix for automatically removing job output (including remote files) when removing a job. #1445

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* New command to list files (LFNs) in a folder. `listFiles('/base/dir', minAge)`. #1465
* Get LFNs for splitters now in new Dirac process to avoid timeout issues and revert to multithread. #1458

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Added optional branch specification for checked out packages in prepareGaudiExec. #1459

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaND280
--------------------------------------------------------------------------------------------------------------
* Many improvements. #1456 
",43645564
73,False,False,2019-04-10T14:50:08Z,2019-04-10T14:50:13Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Revert fix for finding job parameters in line with latest DIRAC release. #1448
* Fix for not downloading the sandbox. #1444
",43645564
74,False,False,2019-04-03T13:06:20Z,2019-04-03T13:06:24Z,"ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* Location of list of used versions now configurable: 'used_version_path' in 'Configurations'. #1434
* Change to Executable. If the 'exe' attribute is a string then it is not copied to the WN. #1421
* Some improvements for SLURM. #1421

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Download oversized output sandboxes automatically. #1439
* Updated deprecated Dirac command: peek. #1436

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Fix for GaudiExec jobs without inputdata. #1437",43645564
75,False,False,2019-03-18T10:55:07Z,2019-03-18T10:57:25Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* Bugfix for the shareref when removing a job with subjobs. #1427
* Fixes for testing. #1424

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Update command delete to deleteJob. #1428
* Fix for finding out job parameters with latest Dirac version. #1432

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Fix for loading the LHCbDirac environment with latest version v9r3. #1429
* Fix for GaudiExec run-time script environment setup with latest LHCbDirac version. #1430

**************************************************************************************************************",43645564
76,False,False,2019-03-07T16:27:47Z,2019-03-07T16:30:00Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/Ganga
--------------------------------------------------------------------------------------------------------------
* Bugfix for setting environment when running Executable locally. #1411
* Updates for the SLURM backend. #1409
* Update CVMFS installation script to only use python 2.7. #1405

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Major improvement to how ganga interacts with DIRAC for small operations. A subprocess is started for the first interaction and left running so subsequent requests are much faster. #1394, #1397, #1398, #1407

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Bugfix to properly catch failures in GaudiExec file uploads and try another SE. #1415
* Bugfix to prepare_cmake_app to expand full path. #1413
* Correct typo in list of available DIRAC SEs. #1416
* Bugfix for autoDBtags for files where the last production step is a merge. #1414

**************************************************************************************************************",43645564
77,False,False,2019-01-09T17:15:10Z,2019-01-09T17:15:18Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Update deprecated DIRAC API functions. #1395

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Make GaudiExec prepare thread safe. #1393
* Speed up SplitByFiles job creation. #1392
* Improve splitter site to SE mapping. #1391
* Cache LHCbDirac env for every startup. #1390
",43645564
78,False,False,2018-12-10T11:58:21Z,2018-12-10T11:58:25Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Set environment variable 'ganga_jobid' when running GaudiExec. #1384
* Some changes to determining the LHCbDirac version. #1385
",43645564
79,False,False,2018-11-23T16:21:57Z,2018-11-23T16:22:01Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Bugfix to prevent jobs failing if the output sandbox is chosen not to download #1378
* Bugfix to spoof name when running Dirac commands.


--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaND280
--------------------------------------------------------------------------------------------------------------
* Combine standard output and standard error for all ND280 validation jobs #1376
",43645564
80,False,False,2018-11-13T09:45:55Z,2018-11-13T09:45:59Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* Replace identity operator to conform with PEP8. #1367
* Bugfix to Condor monitoring to negate failed handshakes. #1374
* Set logging of subjob finalisation and status updates to DEBUG. Only master jobs log INFO. Reduces verbosity. #1369
* Update subjobs status column: running/failed/completing/completed. #1369
--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Bugfix for OfflineGangaDiracSplitter to prevent getting stuck when SE mapping fails. #1370
* KRB5CCNAME now updated in Dirac env when commands are carried out. #1372
* Added option whether to download Dirac outputsandbox when finalising jobs, 'downloadSandbox'. Defaults to True. The default can be configured, 'default_downloadOutputSandbox' under 'DIRAC'. #1145, #1369
* Added option to finalise jobs only when all the subjobs are finished, 'finaliseOnMaster'. Defaults to False. The subsequent finalisation is done in parallel. If a subjob registers as failed it finalises immediately. Subjobs are in the 'completing' state until finalised The default can be configured, 'default_finaliseOnMaster' under 'DIRAC'. #1145, #1369
* Added function to finalise subjobs in the 'completing' state, 'j.backend.finaliseCompletingJobs(getSandbox=True)'. #1145, #1369.
* Added function to GPI to finalise a slice of jobs, 'finalise_jobs(jobSlice, getSandbox=True)'. #1145, #1369.
--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* GaudiExec Dirac RT handler checks for exisiting tarball replicas to prevent needless replication. #1371
* GaudiExec Dirac tarball filenames include job id to make thread safe. #1373
",43645564
81,False,False,2018-10-24T18:04:58Z,2018-10-24T18:05:03Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* Fix Condor time checking #1356
* Fix ARC data downloading #1360
* Update Notifier to send job name and user #1359

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Bugfix for sandbox downloading #1364
",43645564
82,False,False,2018-09-26T17:33:25Z,2018-09-26T17:33:29Z,"ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* Fix for ROOT application with Local and Interactive backends. #1340
* Bugfix for inputfiles with Condor backend. #1345
* Added autoKill for job monitoring. If more than 20 subjobs fail with no successes Ganga will kill the entire job. #1347
* Added configurable option for ARC and CREAM file copy commands in the sandbox. 'ArcCopyCommand' and 'CreamCopyCommand' in the LCG section. #1341
* Added subjobs progress column. #1343

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Bugfix to autoDBtags #1332
* New merger for GaudiExec applications. This uses the run script of the application for hadd. #1334

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Added master_kill method to Dirac for more efficient job killing. #1347
",43645564
83,False,False,2018-08-20T13:44:23Z,2018-08-20T13:44:27Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Bugfix for prepareGaudiExec . Guess a suitable platform the initial checkout so compilation is successful. #1329
",43645564
84,False,False,2018-08-17T09:39:13Z,2018-08-17T09:39:18Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* Minor bugfix to monitoring #1313 #1315
* Improvements to Condor submission. Also use -spool option by default, required for EOS mass storage #1319
* Fix to stripProxy method for namedtuples. #1326
* Remove stomp dependency. #1321

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Add 'autoDBtags' to GaudiExec. This will get the recommended tags for your inputdata if it is MC. Set to False by default #1317

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Improvement to 'removeOutputData' for removing a Dirac job's output. Much quicker. #1323
",43645564
85,False,False,2018-08-10T08:12:10Z,2018-08-10T08:12:14Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* Added setting of the IPython shell colourscheme. The config option 'colourscheme' in [TextShell_IPython] can be set to
'LightBG', 'Linux', 'Neutral', or 'NoColor' .#1302
* Minor bugfix to monitoring #1313 #1315

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Fix putting LFNs in inputsandbox. #1305
",43645564
86,False,False,2018-07-06T12:49:20Z,2018-07-06T12:49:24Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* Implemented timestamps for Condor backend. #1293
* Updated Ganga prompts and magics for use with IPython 5. #1229
* Check python version is 2.7 and manipulate path when running from CVMFS. #1294

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Add check to ensure no duplicate DiracFiles in GaudiExec input sandbox. #1292
",43645564
87,False,False,2018-06-28T13:22:00Z,2018-06-28T13:22:05Z,"ganga/ganga/GangaCore
-------------------------------------------------------------------------------------------------------------
* localDir of LocalFile set when jobs completed. #1277
* Python environment specified in by default in qsub command for SGE backend. #1276
* Bugfix to release note printing. #1274

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Bugfix to correct treatment of inputfiles that are DiracFiles. #1283

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Return full stdout on GaudiExec build failure for more helpful errors. #1285
* Bugfix for DiracFiles in inputfiles for GaudiExec. #1290
",43645564
88,False,False,2018-05-25T14:40:57Z,2018-05-25T14:41:05Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* Bugfix for shutdown manager.#1264
* Added 'queue' to ARC backend to specify queue to submit to. Also added 'xRSLextras', a dict of other options
and arguments to be added to the xRSL when submitting a job. #1267
* Bugfix for notebook submission.#1261
* Bugfix to display dicts correctly. #1272

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Bugfix for DiracFile as inputfile in GaudiExec jobs.#1266
",43645564
89,False,False,2018-04-20T14:52:00Z,2018-04-20T14:52:05Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaCore
--------------------------------------------------------------------------------------------------------------
* Bugfix for Condor submission when copying files to WN. #1241
* Logging error handler removed to prevent duplicate error logs. #1247
* should_init on GangaObjects True by default. #1216
* Warning messages cached. #1230
* Logging of execute function improved. #1224
* Improved handling of ctrl-c input from users. #1194
* New possible check of the repository when ganga is started. The status of the last 5 jobs are checked for being in a
bad state (submitting) and forces them to failed. To enable set DisableLoadCheck=False in .gangarc #1193, #1237, #1240

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Error messages in Dirac scripts from failed submission now returned to user. #1243
* Bugfix for DiracFile setting remoteDir. #1241
* Added kwarg validTime to DiracProxy. This sets the requested time of validity of the credential on
creation. Time must be of format HH:MM . Defaults to 24h. #1236
* Bugfix to auto resubmission. #1234
* Bugfix to splitting for files that have no valid replicas. #1225

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Initial cmake for projects created with prepareGaudiExec() now executed in application environment. #1246
* Default GaudiExec() platform updated to x86_64-slc6-gcc62-opt. #1246

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaND280
--------------------------------------------------------------------------------------------------------------
* Location of grtf macros altered. #1249 #1253
* Applications use IPrepareApp. New modules added. #1226

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaAtlas
--------------------------------------------------------------------------------------------------------------
* Fix for useAthenaPackages. #1227
* Atlas.ini updated. #1228
",43645564
90,False,False,2018-02-18T15:12:46Z,2018-02-18T15:12:50Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/Ganga
--------------------------------------------------------------------------------------------------------------
* Major re-ordering of code. The module Ganga has been renamed to GangaCore to resolve problems with case
insensitive operating systems (MacOS) #1183. The python folder has been renamed to ganga and the release notes
and templates moved into it (GangaRelease and GangaTemplates). When installing with pip Ganga now appears as a
single module (ganga) and the release notes are now included. When importing ganga in python import.ganga has
become import ganga.ganga . Subsequently the ganga namespace is available as usual (i.e. print ganga.jobs). #1198
* Bugfix for logging. INFO message should be cached until a new prompt. #1197
* Bugfix for showing configs. #1187
* Bugfix for ganga shutdown. #1195
* Parallel submit disabled by default for local jobs. Can be used with j.backend.force_parallel=True . #1208
* Slurm backend now available. #1192

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Now use getReplicasForJobs when splitting with OfflineGangaDiracSplitter. #1203

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Bugfix for BenderBox. #1184
* Bugfix to uploading replica of job script and cmake tarballs for GaudiExec. Instead of raising an exception
on failure ganga will give a warning and try another SE. In case of no successful SE an exception is raised. #1190 and #1182
 
",43645564
91,False,False,2018-02-16T18:05:39Z,2018-02-16T18:05:43Z,"--------------------------------------------------------------------------------------------------------------
ganga/ganga/Ganga
--------------------------------------------------------------------------------------------------------------
* Major re-ordering of code. The module Ganga has been renamed to GangaCore to resolve problems with case
insensitive operating systems (MacOS) #1183. The python folder has been renamed to ganga and the release notes
and templates moved into it (GangaRelease and GangaTemplates). When installing with pip Ganga now appears as a
single module (ganga) and the release notes are now included. When importing ganga in python import.ganga has
become import ganga.ganga . Subsequently the ganga namespace is available as usual (i.e. print ganga.jobs). #1198
* Bugfix for logging. INFO message should be cached until a new prompt. #1197
* Bugfix for showing configs. #1187
* Bugfix for ganga shutdown. #1195
* Parallel submit disabled by default for local jobs. Can be used with j.backend.force_parallel=True . #1208
* Slurm backend now available. #1192

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Now use getReplicasForJobs when splitting with OfflineGangaDiracSplitter. #1203

--------------------------------------------------------------------------------------------------------------
ganga/ganga/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Bugfix for BenderBox. #1184
* Bugfix to uploading replica of job script and cmake tarballs for GaudiExec. Instead of raising an exception
on failure ganga will give a warning and try another SE. In case of no successful SE an exception is raised. #1190 and #1182
",43645564
92,False,False,2017-12-13T15:35:55Z,2017-12-13T15:36:15Z,"ganga/python/Ganga
--------------------------------------------------------------------------------------------------------------
* parallel_submit is set to default true for jobs, except interactive backend. Some bugfixes to job submission logic. #1128
* Bugfix to job removal for jobs loaded from disk. #1181

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Fix for race condition in job monitoring. #1178
* Set default CPUTime request to two weeks. #1171
* Bugfix for vanilla Dirac - move scripts from GangaGaudi to GangaDirac. #1155

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Request replica of uploaded GaudiExec cmake and job script tarballs when job submitted. Replicas removed
 on master job finalisation. #1173
 
--------------------------------------------------------------------------------------------------------------
ganga/python/GangaAtlas
--------------------------------------------------------------------------------------------------------------
",43645564
93,False,False,2017-12-01T14:05:46Z,2017-12-01T14:06:01Z,"
--------------------------------------------------------------------------------------------------------------
ganga/python/Ganga
--------------------------------------------------------------------------------------------------------------
* Bugfix for ARC backend arcsync #1152
* Bugfix to credential store to update cache when certificates renewed #1142
* Version numbering hardwired, prevents starting Ganga on installation #1161

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Bugfixes for resubmitting jobs submitted with bulkSubmit or old versions of ganga #1138, #1150
* Bugfix to blockSubmit to use subjob sandboxes. Also sequential submission fixed. #1157
* Exception raised if call to DIRAC does not return a dictionary #1160
* Bugfix for auto_resubmit.#1167

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaAtlas
--------------------------------------------------------------------------------------------------------------
* panda-client version to 0.5.94 #1148
",43645564
94,False,False,2017-10-19T10:07:40Z,2017-10-19T10:07:57Z,"ganga/python/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Improve Dirac submission speed. Several subjobs are submitted in one process. The attribute to set this is in
the Dirac backend is 'bulkSubmit' which is set to true by default. The number per process is set by
the option 'maxSubjobsPerProcess' in the DIRAC configuration. #1131 and #1138

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* The LHCbDirac environment has been hard-coded to x86_64-slc6-gcc49-opt so jobs can be submitted from any platform. #1134
* Minor bugfix to exception in GaudiExec RTHandler. #1140
",43645564
95,False,False,2017-09-18T09:36:33Z,2017-09-18T09:36:49Z,"--------------------------------------------------------------------------------------------------------------
ganga/python/GangaAtlas
--------------------------------------------------------------------------------------------------------------
* Updated pandatools to 0.5.91 and now check if it is already setup. #1125

From 6.7.0:

* Added support for BYTESTREAM jobs #1121
* Enabled splitting of jobs by number of events #1116
* Proxy disabled for ATLAS #1122

--------------------------------------------------------------------------------------------------------------
ganga/python/Ganga
--------------------------------------------------------------------------------------------------------------
* Store the associated files of the ShareDir in the shared directory. #1117

From 6.7.0:

* Added associated_files to ShareDir, a list of IGangaFiles that are used by an application. #1106
* Change to signature of decrementShareCounter and incrementShareCounter in IPrepareApp. Both take ShareDir objects now. #1106
* Change to signature of decrease and increase methods in the PrepRegistry. Both take ShareDir objects now. #1106
* Added counterVal method to get shareref counter of a ShareDir. #1106
* maxFiles attribute added to GangaDatasetSplitter. Default is -1, use all files. #1105
* Bugfix for proxy returning objects properly. #1103
* Bugfix to transform unit creation and checking #1120
* Argsplitter can use GaudiExec extraArgs attribute. args take precedence if in the application schema. #1119
* Ganga optimised bigly. #917
   -> Bugfix: CPU bottleneck in constructing objects inheriting from GangaObject
   -> Bugfix: Race condition in credential managment
   -> Feature: Improved parallel monitoring on backends which support standard interface
   -> Cleanup: using __slots__ and _additional_slots for managing attributes
   -> Cleanup: simplified thread locking

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaDirac
--------------------------------------------------------------------------------------------------------------
From 6.7.0:
* Bugfix to script templates for uploading files from the WN. #1114

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaLHCb
--------------------------------------------------------------------------------------------------------------
From 6.7.0:
* Uploaded DiracFiles for GaudiExec added to ShareDir associated_files and removed with the job. #1106
* Bugfix to GaudiExec - script files are deleted from temp after job submission. #1104
* Bugfix to GaudiExec - make postprocessor for XML summary follow getMetadata flag. #1110
* GaudiExec can be submitted with only extra opts. #994
",43645564
96,False,False,2017-09-13T12:31:15Z,2017-09-13T12:31:31Z,"--------------------------------------------------------------------------------------------------------------
ganga/python/Ganga
--------------------------------------------------------------------------------------------------------------
* Added associated_files to ShareDir, a list of IGangaFiles that are used by an application. #1106
* Change to signature of decrementShareCounter and incrementShareCounter in IPrepareApp. Both take ShareDir objects now. #1106
* Change to signature of decrease and increase methods in the PrepRegistry. Both take ShareDir objects now. #1106
* Added counterVal method to get shareref counter of a ShareDir. #1106
* maxFiles attribute added to GangaDatasetSplitter. Default is -1, use all files. #1105
* Bugfix for proxy returning objects properly. #1103
* Bugfix to transform unit creation and checking #1120
* Argsplitter can use GaudiExec extraArgs attribute. args take precedence if in the application schema. #1119
* Ganga optimised bigly. #917
   Bugfix: CPU bottleneck in constructing objects inheriting from GangaObject
   Bugfix: Race condition in credential managment
   Feature: Improved parallel monitoring on backends which support standard interface
   Cleanup: using __slots__ and _additional_slots for managing attributes
   Cleanup: simplified thread locking

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Bugfix to script templates for uploading files from the WN. #1114

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Uploaded DiracFiles for GaudiExec added to ShareDir associated_files and removed with the job. #1106
* Bugfix to GaudiExec - script files are deleted from temp after job submission. #1104
* Bugfix to GaudiExec - make postprocessor for XML summary follow getMetadata flag. #1110
* GaudiExec can be submitted with only extra opts. #994

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaAtlas
--------------------------------------------------------------------------------------------------------------
* Added support for BYTESTREAM jobs #1121
* Enabled splitting of jobs by number of events #1116
",43645564
97,False,False,2017-08-03T10:42:25Z,2017-08-03T10:42:40Z,"ganga/python/Ganga
--------------------------------------------------------------------------------------------------------------
* Bugfix such that GangaDatasetSplitter returns dataset of same type as input #1058
* Change to default config of MassStorageFile. Looks for EOS by default. #1070
* Improvements to exception raising. #1071
* Update default config for treatment of output files. Particularly for batch backends. #1088

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Turn on metadata by default for BenderBox applications #1050
* Bugfix to GaudiExec RT handler #1086

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Make Dirac proxy configurable - LHCb calls lhcb-proxy-init by default now #1047
* Fix for DiracFile remoteDir. Setting remoteDir set the path location for the output of Dirac jobs. See help(DiracFile) for examples. #1072

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaAtlas
--------------------------------------------------------------------------------------------------------------
* Update GLITE_SETUP path #1084
* Fix to allow LSF jobs to work after setting up with Athena #1084
* Remove tagdataset #1065
* Fix for Atlas nightlies #1064
",43645564
98,False,False,2017-07-11T11:47:31Z,2017-07-11T11:47:46Z,"--------------------------------------------------------------------------------------------------------------
ganga/python/GangaAtlas
--------------------------------------------------------------------------------------------------------------
* Adds EXE/ROOT/PYARA support into CMake releases #1061
* Compiles on request
",43645564
99,False,False,2017-07-05T14:11:17Z,2017-07-05T14:11:32Z,"ganga/python/Ganga
--------------------------------------------------------------------------------------------------------------
* Silence harmless warning in auto resubmit #1041
* Update .gangarc on minor version increment rather than bugfix #1048
* Moved log of used versions to ~/.cache/Ganga

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaAtlas
--------------------------------------------------------------------------------------------------------------
* Removed ATLASDataset #1039
* Removed AtlasCastorDataset #1035
* Removed StagerDataset #1036
* Allow AthAnalysis to be submitted without setting atlas_release option #1038
* Bugfix for SL7 - update rucio version and path #1044

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Bugfixes to metadata for GaudiExec and BenderBox applications #1046
",43645564
100,False,False,2017-06-26T13:29:59Z,2017-06-26T13:30:17Z,"--------------------------------------------------------------------------------------------------------------
ganga/python/Ganga
--------------------------------------------------------------------------------------------------------------
* Change of default to yes when querying changes to .gangarc #1021

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Added PBS and SGE to list of RTHandlers for GaudiExec #1022
* Fixed order of root/xroot protocols when requesting accessURL #1026

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaAtlas
--------------------------------------------------------------------------------------------------------------
* Fix for starting ATLAS without grid proxy #1031
* Removed AthenaMC application #1030
* Remove DQ2SandboxCache #1032
* Remove AMIDataset #1033
",43645564
101,False,False,2017-06-02T10:24:08Z,2017-06-02T10:24:23Z,"--------------------------------------------------------------------------------------------------------------
ganga/python/Ganga
--------------------------------------------------------------------------------------------------------------
* Bug fix to automatic job resubmission #1014
* SplittingError inherits from GangaException #1016
* Bugfix to MassStorageFile - missing import added #1017

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Add optional job ID to GangaDiracError

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Bugfix to LHCbDataset when providing it strings #1017

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaAtlas
--------------------------------------------------------------------------------------------------------------
* Add support for CMake #1019
",43645564
102,False,False,2017-05-09T08:09:13Z,2017-05-09T08:09:27Z,"--------------------------------------------------------------------------------------------------------------
ganga/python/Ganga
--------------------------------------------------------------------------------------------------------------
* Bugfix to job auto resubmission #996
* Bugfix to the configuration when reading and upating the gangarc #1002
* Ask the user to confirm copying of non-default options to the new gangarc #1007

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Remove SEs from banned sites from list of possible SEs when splitting #990
* Added check for replicas in DiracFile getMetadata #1000

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Set root/xroot as the default protocol requested for accessURLs #989
* Bugfix for the 'extraArgs' in GaudiExec #991
* Allow GaudiExec jobs to be submitted with only extraOpts #992
* Bugfix to set prepared status of GaudiExec job after succesfully building the target instead of before #1006

--------------------------------------------------------------------------------------------------------------
!Input required!
--------------------------------------------------------------------------------------------------------------
* A bug may have caused some configurations to have been erroneously written to your gangarc. When starting
this version of ganga for the first time the gangarc will be updated and you will be asked to confirm that you
wish to keep any non-standard configurations. If you do not recognise the option then revert it to default
and you will be fine.
",43645564
103,False,False,2017-03-14T12:58:13Z,2017-03-14T12:58:27Z,"ganga/python/Ganga
--------------------------------------------------------------------------------------------------------------
* Added config option to not need an AFS token when running on AFS: 'NoAfsToken'. #977
* Bugfix to shared area persistency. #981
* From 6.4.0: New application for Jupyter notebooks: 'Notebook'

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Change default LHCbDirac version to the production release. #971
* Bugfix for running old DaVinci applications locally - update to default options path in the RT handler
script. #974
* Bugfixes to the BenderBox applications. #975
* Bugfix to allow DiracFile to be used locally with a splitter. #948
* Bugfix in the submission check for LHCbTransform. #953
* Update prepareGaudiExec to use 'git lb-use' and 'git lb-checkout' for checking out a package. #979
",43645564
104,False,False,2017-03-06T18:16:43Z,2017-03-06T18:16:57Z,"--------------------------------------------------------------------------------------------------------------
ganga/python/Ganga
--------------------------------------------------------------------------------------------------------------
* Exceptions improved - known exceptions will now not produce a long unhelpful trace. #943
* Bugfix to job killing to keep master job status as running when a subjob is killed. #950
* Change session locks to be opened as read/write #960

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaDirac
--------------------------------------------------------------------------------------------------------------
* Protect reading of file with Dirac commands from race conditions. #941
* Bugfix in the WN script for the Executable application on Dirac - errors now raised properly. #947
* Bugfix for getOutputDataAccessURLs. #956

--------------------------------------------------------------------------------------------------------------
ganga/python/GangaLHCb
--------------------------------------------------------------------------------------------------------------
* Bugfix to the prepareGaudiExec function when using a directory that doesn't exist yet. #952
* New application, BenderBox, for Bender with cmake. #969
",43645564
105,False,False,2017-02-03T17:09:17Z,2017-02-03T17:09:33Z,"## ganga/python/Ganga
- Defaults added to the job class attributes #927
- New application for Jupyter notebooks: Notebook() #919
- Upload files directly from shared area for local and batch backends #918

---

## ganga/python/GangaLHCb
- Bugfix to correctly import LHCbDirac in the LHCb plugin
- Grid jobs with no inputdata can run on tier 1s
- Update LHCbDirac to v8r5p4

---

## ganga/python/GangaDirac
- Change to construction of user LFNs - takes the nickname of the Dirac proxy #934
",43645564
106,False,False,2016-12-20T19:06:58Z,2016-12-20T19:07:16Z,"## ganga/python/Ganga
- Fix for the configurations. Options in the gangarc and specified in the command line are now set as 
  userValues instead of sessionValues so they take precedence. #896
- Use userValues for the testing configs. #913
- Fixed bug when loading Dirac jobs created with old ganga versions in 6.3.0 #901
- Alterations to the startup code and a new test for the startup. #849

---

## ganga/python/GangaDirac
- Added option to accessURL function to request a specific protocol for the accessURL. #754
- Fix for very old DiracFile objects not loading correctly #907
- Fix for getOutputData with Dirac backend. #912

---

## ganga/python/GangaLHCb
- Fix to LHCbDataset to be able to pass the full path of LocalFiles for inputdata. #881
- Change to GaudiExecPrepare. If the folder for the default project already exists now an exception is raised
  instead of continuing. #888
- Fix for old style applications with the newest LbScripts v9r0. #891
",43645564
107,False,False,2016-12-02T12:28:16Z,2016-12-02T12:28:29Z,"---

## ganga/python/Ganga
-  Profiled and improved performance in GangaObject bigly.
-  Some code cleanups.
-  Added SharedFile file type for using large locally accessible files which doesn't copy a file as much as LocalFile.
-  Added many integration tests for MassStorageFile, SharedFile and LocalFile.
-  Added new exception types inheriting from GangaException to make reasons for the exceptions clearer.
-  Bugfix for GangaDataset and batch jobs #871

## \*  Improvements to the XML loading #839

## ganga/python/GangaDirac
-  Added a universal check for all objects returned from calls to Dirac.
-  Added GangaDiracError exception type which is thrown when a command timesout/fails.

---

## ganga/python/GangaLHCb
-  Cleaned up code for SplitByFiles, added more documentation.
-  Added new gridProxy object for backwards compatibility. This a wrapper around the new `credential_store`.
-  Default DiracProxy is constructed to be for `lhcb_user`.
-  Added function getAccessURLs to GPI to return a list of accessURLs for a provided list of DiracFiles or LFNs (strings).
  Can access from the Dirac backend job.backend.getOutputDataAccessURLs(). #801
- Bugfix for GaudiExec. Now it checks that the SE is writable before attempting to upload the tarballs #852
- Update default LHCbDirac to v8r4p4

---

## ganga/python/Ganga/GPIDev/Credentials
-  Integrated new credentials managment framework into Core.
-  Added AfsToken and VomsProxy for AFS and LCG credential managment.
-  **_All forwarded kerberos tokens are expected to be renewable. If ganga hangs after `kinit -R` check your config!**_

---

## ganga/python/GangaDirac/Lib/Credentials
-  Added DiracProxy to allow for managing multiple proxies.
-  New grid proxies can be constructed via `credential_store.create(DiracProxy())`.
-  New grid proxies can be destoryed via `credential_store.destroy(DiracProxy())`.
-  Default DIRAC proxy group is now managed via `[defaults_DiracProxy] group = myvo_user` in your .gangarc.
",43645564
108,False,False,2016-11-17T11:18:36Z,2016-11-17T11:18:49Z,"---

## ganga/python/GangaLHCb
- Bugfix for readInputData for the GaudiExec application. #843
- Bugfix for the difference, symmetricDifference and union functions in LHCbDataset #856
- Update default LHCbDirac version to v8r3p10.
- Fix for the unprepare in the old style apps. #861
- Fix for the GaussSplitter with GaudiExec #864
",43645564
109,False,False,2016-10-10T22:44:56Z,2016-10-10T22:45:14Z,"---

## ganga/python/Ganga
- Minor fix to the monitoring code.
- Remove some unneeded stack traces #713
- Fix to the host machine identification #759
- Fix to the splitter. It now fails if no splitting is done, rather than continuing regardless. #780
- Fix to the ARC backend submission #789
- Bugfix to raise an exception if a plugin fails to load at startup #794
- Implementation of some forward compatibility for Ganga 6.3 #807

---

## ganga/python/GangaLHCb
- Added the option to set the version of LHCbDirac and removed the old guess version code.
- Changed the default LHCbDirac version to v8r3p7
- Fix to the old RT handlers to correctly parse the xml summary #816
- Fix some minor bugs in GaudiExec with inputfiles and preparing a raw release with 'prepareGaudiExec' #822
- Bugfix for the GaudiExec prepare thread lock #831

---

## ganga/python/Ganga/test
- Change to the setting of configuration options for tests #742
- Fix to the LCG test #761
- Fix to the Dirac test to try each SE in order until one works #773
- Removal of outdated LHCb tests #782
- Ensure a fresh .gangarc is being used for tests #800
",43645564
110,False,False,2016-10-08T11:54:24Z,2016-10-08T11:54:38Z,"---

## ganga/python/Ganga
- Minor fix to the monitoring code.
- Remove some unneeded stack traces #713
- Fix to the host machine identification #759
- Fix to the splitter. It now fails if no splitting is done, rather than continuing regardless. #780
- Fix to the ARC backend submission #789
- Bugfix to raise an exception if a plugin fails to load at startup #794
- Implementation of some forward compatibility for Ganga 6.3 #807

---

## ganga/python/GangaLHCb
- Added the option to set the version of LHCbDirac and removed the old guess version code.
- Changed the default LHCbDirac version to v8r3p7
- Fix to the old RT handlers to correctly parse the xml summary #816
- Fix some minor bugs in GaudiExec with inputfiles and preparing a raw release with 'prepareGaudiExec' #822

---

## ganga/python/Ganga/test
- Change to the setting of configuration options for tests #742
- Fix to the LCG test #761
- Fix to the Dirac test to try each SE in order until one works #773
- Removal of outdated LHCb tests #782
- Ensure a fresh .gangarc is being used for tests #800
",43645564
111,False,False,2016-09-02T10:12:14Z,2016-09-02T10:12:26Z,"---

## ganga/python/GangaPanda
- Make sure the --trf option is set correctly for TRF jobs. #760

---

## ganga/python/Ganga
- Fix to getting the hostname. #759
",43645564
112,False,False,2016-08-24T15:08:54Z,2016-08-24T15:09:09Z,"## ganga/python/Ganga
- Fix to Condor backend. It now waits for the stdout to be populated. #741

---

## ganga/python/GPIDev
- Fix to MassStorageFile. The local area is now successfully cleaned up after files have been copied
  to the mass storage area. Much improvement to the code.#733
- Fix bug to stop duplication of files when using multiple wildcards.
- Improved whitespace, special character support for filenames and paths.
- Fix to bring back job templates #731

---

## ganga/python/GangaLHCb
- Removing LHCbApp references in the Gauss splitter. This stops the pickled options being overridden. #736

---

## ganga/python/GangaATLAS
- Added command_line option to Athena to pass command line options to the job #746
- Remove 64-bit config warning
- Fix for submission to Lxbatch 
- Add --NthFieldAsOutDir option to Athena command line #720
",43645564
113,False,False,2016-08-12T10:23:03Z,2016-08-12T10:23:17Z,"---

## ganga/python/GangaDirac
- Fix to the Executable app so arguments are now passed to the executable.

---

## ganga/python/GangaPanda
- Add '--useCMake' flag.
- runAthena version set to 00-00-12.
- Use latest version of panda-client: 0.5.69.
- Some tidying of unused code.
",43645564
114,False,False,2016-08-10T13:03:52Z,2016-08-10T13:04:08Z,"---

## ganga/python/Ganga
- Fixed bugs when requesting negative list indexes in `jobs`, `tasks` etc.
- Fixed bug that created excess shared dir folders.
  *\* Most users are effected by this. Please use 'cleanUpShareDirs()' to remove old empty shared folders from 6.1.23.
- '--no-mon' now stops task monitoring as well as job monitoring.
- Improvement to WN scripts to allow the backend to copy non-tarred files to the WN from the shared dir.
- Cleanup to the code for shutdown.
- Fixed bug for submission to ARC backend.
- New test for CREAM backend.
- Mock tests for LCG and Grid submission.
- Improvement to locking of objects in registry.
- Improvement to tracking objects' loaded state.

---

## ganga/python/GangaDirac
- Fixed accessURL for a DiracFile. Returns a list of URLs.

---

## ganga/python/GangaAtlas
- Change defualt for ATLAS_SOFTWARE to CVMFS.

---

## ganga/python/GangaPanda
- Tidy up some code.

---

## ganga/python/GangaLHCb
- Migrated CMake support from GaudiRun app to new GaudiExec app.
  *\* Schema has drastically changed since GaudiRun
  *\* Schema is now stable and is intended to be forwards compatible for all future versions.
  *\* Old CMake test jobs will not load with this version of Ganga.
  *\* Code now found with the other LHCb apps.
  *\* Job splitting fixed.
  *\* Problems with duplication of large files during submit resolved.
  *\* Should support most LHCb workflows.
- Change to Jenkins tests to source Lblogin.sh from CVMFS rather than setting up the environment by hand.
",43645564
115,False,False,2016-07-06T08:06:56Z,2016-07-06T08:07:09Z,"---

## ganga/python/Ganga
- ...
",43645564
116,False,False,2016-07-01T14:05:25Z,2016-07-01T14:05:35Z,"---

## ganga/python/Ganga
- Performance improvements when handling large lists of GangaObjects
- Removed Ganga re-exec during launch
- `runMonitoring` now has default timeout of 5min (300s) to allow long jobs to correctly monitor and update subjobs on backends
- Fixed bug in IPython buffer flushing whilst typing multi-line functions
- Fixed problem with Registry file locking
- Improved shutdown code
- New interactive sessions will stop the monitoring loop if existing sessions are discovered via lockfiles on disk
  *\* type `enableMonitoring()` to re-enable monitoring in these sessions if required (may be unsafe)
- Various code cleanups

---

## ganga/python/GangaDirac
- Added `monitorJobs` and `getBulkStateTime` to Ganga<->(LHCb)Dirac interface
- Significantly reduced number of calls to DIRAC backend for job monitoring/completion
- Slightly better handling of missing/invalid DIRAC proxy whilst running
- Bugfixes around Offline file Splitter and optimisations around extremely large numbers of LFN (list->set)
- General performance improvements

---

## ganga/python/GangaLHCb
- Fixing some bugs in the construction of large Datasets from BKQuery
  *\* (most time taken in executing a new large request against DIRAC)
- Added intial (WORK IN PROGRESS) support for CMake projects via new `GaudiRun` Application
  *\* Still doesn't fully support Gauss+GaussSplitter
  *\* Initial functionality of old-style Gaudi and GaudiPython applications complete
  *\* No support (yet) for MassStorageFile in the inputdata
  *\* No support (yes) for unique inputfiles per subjob via a splitter
- Improved handling of LHCbDirac environment caching
",43645564
117,False,False,2016-05-18T08:58:18Z,2016-05-18T08:58:31Z,"---

## ganga/python/Ganga
- Adding individual postprocessors to jobs has been fixed #402
- Condor jobs can split by dataset #390
- Minor monitoring fix when there are strange errors from the Condor backend
- Fixed some minor bugs in preparing some jobs
- GangaDataset made more user friendly

---

## ganga/python/GangaDirac
- Dirac has gained the option to set the default output SE for files (optional)
- Some performance improvements with communicating with the DIRAC server (reduced Dirac calls/reduced code fluff in Ganga)
- Some older configuration settings have been deprecated, some new configuration options have been added.
  Removed: DiracOutputDataSE, load_default_Dirac_backend, DiracDefaultSE
  Added: RequireDefaultSE, statusmapping (for devs), queueable_dirac_statuses (for devs), userVO
- Can now use the bashrc directly from dirac-ui and elsewhere so don't need a Ganga specific env conig file
- DIRAC 'Completed' jobs are now considered to be 'running' due to the transfer of output data
- Fixed bugs where files vanished during jobs completing and jobs reverting status within DIRAC fixed

---

## ganga/python/GangaLHCb
- All new DIRAC settings have been made configurable within LHCb config
- LHCb config now managed LHCb specific settings (RequireDefaultSE, DiracCommandFiles, userVO, allDiracSE)
- LHCb now inherits more closely from vanilla DIRAC in Ganga even though all code is executed against an LHCbDIRAC instance
- Added initial support for LHCb specific integration tests

---

## ganga/python/GangaAtlas
- Ignore comments in files input for --inPfnListFile
- Added the output_loc_to_input option to AthenaSplitterJob to map input files to output dirs
- --inPfnListFile now takes a comma separated list and uses output_loc_to_input to 
  direct the different outputs to appropriate dirs
- Patches from HammerCloud to set homepackage correctly and use AGIS JSON file for queue/DDM mapping
- Some Atlas code cleanup

---

## ganga/python/GangaLSST
- New plugin for the LSST experiment. DIRAC RTHandler finsihed so grid jobs work and have been tested.
",43645564
118,False,False,2016-05-04T08:43:36Z,2016-05-04T08:43:49Z,"---

## ganga/python/Ganga
- This release has improved the resilience of Ganga to corruption in the on-disk data repository.
- The tasks system has been fixed and should now be fully functional.
",43645564
119,False,False,2016-03-17T11:01:12Z,2016-03-17T11:01:25Z,"---

## ganga/python/Ganga
- This release has once more focused on stability and reducing thread-based deadlocks
- Some spurious warning messages on startup have been removed. PR #227
",43645564
120,False,False,2016-03-11T11:23:29Z,2016-03-11T11:23:40Z,"---

## ganga/python/Ganga
- This release focused on making sure that jobs are flushed to disk in a timely fashion. They should all be flushed every 30 seconds as well as at the beginning and end of submit()
- job.subjobs.select(...) now works as expected. PR #253
- The messages printed by the monitoring loop's heartbeat checker have been temporarily disabled. PR #269

---

## ganga/python/GangaLHCb
- A fix for the Gaudi bug where DataObjectDescriptorCollection() was not found. PR #280
",43645564
121,False,False,2016-02-26T16:38:39Z,2016-02-26T16:38:49Z,"---

## ganga/python/Ganga

This release has focussed on the overall stability of Ganga in order to avoid data loss and lockups in the background threads.
Also situations where the status of jobs is accidentally reverted have been eliminated.
- Fix parent of jobs being set to a Descriptor incorrectly
- Fix some jobs not being picked up my the monitoring loop. Issue #85
- Cleanup of GangaObject and proxy internals to make things more streamlined and consistent. PR #163
- Fixes for stomp sometimes stalling. PR #171
- Fix for cases where two threads attempt to write the same repository file at the same time, corrupting `data`. PR #186
- GangaObject is now thread-safe for reads and writes to schema attributes. PR #191
- Added a heartbeat monitor for the monitoring threads to catch stalled tasks. PR #200
- Fixed most common cases of the monitoring locking up against the registry. PR #09
- Fix Job.copy() not copying all its attributes. PR #217
",43645564
122,False,False,2016-02-04T10:28:58Z,2016-02-04T10:29:08Z,"---

## ganga/python/Ganga
- Fixed lots of problems with repository syncing
- More consistent setting of objects parents across the codebase to avoid objects being lost
- Sped up loading of large jobs from XML, PR #121 and others
- The code to load the configuration was moved centrally in PR #90
- Added a setup.py file to allow installing with pip etc.
- Fixed JobTree wiping its contents under certain conditions (issue #96) in PR #102
- Fixed help() function, issue #106
- Fixed exporting of multi-line strings in VPrinter, PR #107
- Added Sphinx-generated documentation
",43645564
123,False,False,2020-03-25T19:24:39Z,2020-03-25T19:54:45Z,,106382269
124,False,False,2020-03-24T17:38:46Z,2020-03-24T18:10:53Z,,106382269
125,False,False,2020-03-23T12:32:51Z,2020-03-23T13:49:46Z,,106382269
126,False,False,2020-03-16T21:59:46Z,2020-03-16T22:32:27Z,,106382269
127,False,True,2020-02-25T20:20:16Z,2020-02-25T20:29:33Z,,106382269
128,False,False,2020-02-20T15:59:05Z,2020-02-20T16:36:14Z,,106382269
129,False,False,2020-02-13T14:20:13Z,2020-02-13T14:23:19Z,"## Fixes
set multiobjectdelete=false in spark-defaults",106382269
130,False,False,2020-01-28T11:18:22Z,2020-01-28T11:33:44Z,"## Improvements
Upgrade Hadoop to 2.9
Upgrade AWS SDK to 1.11
## Fixes
Fix tester logic when comparing dates",106382269
131,False,False,2020-01-15T10:42:53Z,2020-01-15T11:05:35Z,,106382269
132,False,False,2019-12-26T08:46:47Z,2019-12-26T09:10:21Z,"## Improvements:
* Upgrade to spark 2.4.4
* Removed our AVRO deserialisation code and moved to Abris (https://github.com/AbsaOSS/ABRiS), performance is much better with their code.
* Major performance improvement for Hudi writer when using ```alignToPreviousSchema``` configuration

## Fixes
* Some fixes to the new tester code
* Fix for oracle DB writing (thanks @wangqinghuan)",106382269
133,False,False,2019-12-23T12:54:56Z,2019-12-23T13:19:36Z,,106382269
134,False,False,2019-12-02T09:39:31Z,2019-12-02T10:08:38Z,,106382269
135,False,False,2019-11-19T13:02:58Z,2019-11-19T13:29:36Z,"## Improvements:
* Completely refactored the tester- Added support for defining table keys, better error messages and improved the overall experience of the tester (thanks @taliayavo!)",106382269
136,False,False,2019-11-17T12:05:59Z,2019-11-17T12:33:57Z,"## New:
* Added initial support to [Apache Atlas](https://atlas.apache.org) in Hive and Spark Dockers

## Improvements:
* Added user name and password to elasticsearch output (thanks @wangqinghuan)
* Add ability to disable cache+count on each output (removes counter instrumentations)
* Add ability for hudi to disable writing of null columns, thus creating schema inconsistencies
* Add preactions attribute to redshift writer",106382269
137,False,False,2019-09-05T07:04:48Z,2019-09-05T07:33:32Z,,106382269
138,False,False,2019-08-29T17:15:34Z,2019-08-29T17:40:51Z,,106382269
139,False,False,2019-08-07T12:29:06Z,2019-08-07T12:57:07Z,,106382269
140,False,False,2019-08-01T20:33:13Z,2019-08-01T21:02:49Z,,106382269
141,False,False,2019-07-21T11:03:33Z,2019-07-21T11:33:48Z,"## New:
* Added support for streaming file input

## Improvements:
* Add extraOptions support for redshift writer
* Update schema in hive after saving the table
",106382269
142,False,False,2019-07-02T20:37:51Z,2019-07-02T22:01:42Z,,106382269
143,False,False,2019-06-11T17:45:06Z,2019-06-11T18:13:24Z,,106382269
144,False,False,2019-06-06T09:54:18Z,2019-06-06T21:16:51Z,"## Improvements:
* Update to spark 2.4.3

## Fixes
* Fixed bug with schema registry kafka not supporting new columns added
* Fixed hive save to never overwrite an S3 path if not specifically requested, also always update partitions and schema in hive after save.",106382269
145,False,False,2019-06-03T04:17:04Z,2019-06-03T04:44:39Z,"## Improvements:
* Add new job schema file (will add metric and test schema soon) thanks @ramizshahock 
* Support inline job configuration, you can now send a job JSON as a CLI parameter to metorikku (we are using this for airflow for example where we generate the JSON in airflow).

## Fixes
* Releases to Maven (apparently we weren't releasing to central maven for a long while now...)",106382269
146,False,False,2019-05-02T11:29:23Z,2019-05-02T11:53:13Z,"## New:
* Added support for [Apache Hudi](https://github.com/apache/incubator-hudi) writing.
* Added support for [schema registry](https://docs.confluent.io/current/schema-registry/index.html) deserialisation from kafka input
* Added Hive Docker
* Added E2E example for [```MySQL -> Debezium -> kafka -> Hudi + Hive```](e2e/cdc/)

## Improvements:
* Support kafka topic pattern
* Support writing full dataframes to influxDB with all columns as tags
* Add support for watermark in streaming metrics
* Support streaming for all writers using batchMode

## Fixes
* Fixed hive implementation
* Use Hive metastore in E2E instead of MySQL DB
* Support tests without mocks
* Multiple bug fixes",106382269
147,False,False,2019-04-28T17:19:31Z,2019-04-28T17:43:10Z,,106382269
148,False,False,2019-03-07T14:36:27Z,2019-03-07T14:53:58Z,"## New:
* Added elasticsearch writer",106382269
149,False,False,2019-03-04T10:45:04Z,2019-03-04T10:57:58Z,"## New:
* Added ability to define a schema for a file input, supply ```schemaPath``` for the input with a path to a JSON Schema file and it will be used as the schema.
* Added new flags for job: cacheOnPreview (caches the dataframe on each preview), showQuery (will print the query before each step)

## Improvements:
* Added support for named outputs (supporting multiple outputs with the same type)
* Added repartition and coalesce flags as part of all the outputs (performed before the writer on the output dataframe
* Added new ```File``` writer (basically CSV/JSON/Parquet writer all together)
* File input/output is now generic and supports all formats by using a new ```format``` parameter
* File input now supports multiple files with the ```,``` separator
* Added full documentation for the metric config file

## Fixes
* Fixed readme",106382269
150,False,False,2019-02-20T13:34:01Z,2019-02-20T13:50:32Z,"## New:
* Add support for Apache Hive metasore read/write

## Improvements:
* Update Metorikku to spark 2.4.0

## Fixes
* Merged all file writers (JSON, Parquet, CSV) to a single writer",106382269
151,False,False,2019-02-12T16:46:36Z,2019-02-12T16:58:21Z,"## Improvements:
* Add new custom code step called DropColumns to support dropping columns from a table (currently not supported directly from spark SQL)
",106382269
152,False,False,2019-02-12T15:25:51Z,2019-02-12T15:43:10Z,"## New:
* Added support to write instrumentation directly to influxDB
* Added ability to add and use custom scala code (UDF) in a metric

## Improvements:
* Add support for testing streaming inputs in metorikku tester
* Allow ignoring a failed step in a metric
* Add new custom code step called AlignTable to align a table to another (make sure all columns are available and in the same order as the other table, useful for unions between different tables)

## Fixes
* Complete refactor to all the code, making it more readable and consistent.",106382269
153,False,False,2019-01-09T11:38:42Z,2019-01-09T11:47:52Z,"## New:
* Added cassandra input support

## Improvements:
* Added first E2E test around kafka using the new dockerized version of metorikku (check out the docker section in the readme)

## Fixes
* Fixed a bug in kafka lag write making it fail on offsets larger than an integer",106382269
154,False,False,2018-11-29T14:08:03Z,2018-11-29T14:28:58Z,"## Improvements:
* Add support for string interpolation for all configuration files
* Docker - support minimum number of workers
* Docker - expose logs from executors to stdout
",106382269
155,False,False,2018-11-01T08:43:58Z,2018-11-01T09:03:28Z,"## New:
* Added new structured streaming lag monitor to kafka reader

## Improvements:
* Changed how metorikku docker is built, check out the new docker-compose to better understand how it works.

## Fixes
* Fixed a bug with instrumentation writer using key columns",106382269
156,False,False,2018-10-17T07:57:13Z,2018-10-17T08:23:17Z,,106382269
157,False,False,2018-10-11T08:58:53Z,2018-10-11T09:17:35Z,"## New:
* Added ability to use processing time trigger in streaming jobs.
* Started publishing metorikku as a docker (check out [docker-compose-yaml](https://github.com/YotpoLtd/metorikku/blob/master/docker/docker-compose.yml) example) - https://hub.docker.com/u/metorikku/
* Update metorikku-standalone to spark 2.3.2 (when running metorikku in a cluster the minimum requirement remains 2.2.0)",106382269
158,False,False,2018-09-30T06:50:44Z,2018-09-30T07:05:19Z,"## New:
* Added ability to repartition the output in parquet writer
* Added more details about discrepencies when tests fail
* Support kafka input with structured streaming (only parquet/kafka output currently supported)

## Fixes:
* JDBCWriter: fixed min/max partitions properties
",106382269
159,False,False,2018-08-08T18:21:37Z,2018-08-08T18:40:30Z,,106382269
160,False,False,2018-06-05T18:14:31Z,2018-06-05T19:10:37Z,,106382269
161,False,False,2018-05-21T11:51:27Z,2018-05-21T12:02:20Z,,106382269
162,False,False,2018-05-02T14:06:49Z,2018-05-02T14:13:22Z,,106382269
163,False,False,2018-02-04T16:17:39Z,2018-02-04T16:18:42Z,,106382269
164,False,False,2018-02-01T16:43:22Z,2018-02-01T16:55:49Z,,106382269
165,False,False,2018-02-01T16:49:36Z,2018-02-01T16:50:53Z,,106382269
166,False,False,2018-01-29T12:56:11Z,2018-01-29T13:11:17Z,,106382269
167,False,False,2018-01-29T07:27:23Z,2018-01-29T07:44:02Z,,106382269
168,False,False,2018-01-14T15:09:00Z,2018-01-14T15:21:19Z,,106382269
169,False,False,2018-01-10T14:29:42Z,2018-01-10T14:44:09Z,,106382269
170,False,False,2018-01-03T14:27:01Z,2018-01-03T14:36:11Z,,106382269
171,False,False,2017-12-05T13:38:37Z,2017-12-05T13:51:39Z,,106382269
172,False,False,2017-12-05T13:36:17Z,2017-12-05T13:50:57Z,,106382269
173,False,False,2017-12-05T07:10:30Z,2017-12-05T07:21:09Z,,106382269
174,False,False,2017-12-04T13:04:46Z,2017-12-04T13:44:20Z,,106382269
175,False,False,2017-11-19T17:42:00Z,2017-11-19T17:52:41Z,,106382269
176,False,False,2020-03-06T09:00:19Z,2020-03-06T09:36:57Z,"# Release Notes
## Introduction
The BOINC development community is pleased to announce a new server release.
These release notes provide an overview of the new features, bugs fixed and any known issues.
The new features included in this release are: 
 * None
## Bugs Fixed
* [#3419](https://github.com/BOINC/boinc/issues/3419): Anonymous platform crash the scheduler

Please see the git [comparison with v1.2.0](https://github.com/BOINC/boinc/compare/server_release/1.2/1.2.0...server_release/1.2/1.2.1) for the details.
## Known issues
* None
## Download
The server release can be obtained with the following commands. 
```
git clone https://github.com/BOINC/boinc.git
cd boinc
git checkout tags/server_release/1.2/1.2.1 -b server_release/1.2.1
```
The code can then be built as described in the [documentation](https://boinc.berkeley.edu/trac/wiki/BuildSystem). 
```
./_autosetup
./configure --disable-client --disable-manager
make
```
## Install
To setup a new BOINC server, please follow the [guide](https://boinc.berkeley.edu/trac/wiki/ServerIntro). If you are new to BOINC please ensure to review the [Technical Documentation](https://boinc.berkeley.edu/trac/wiki/ProjectMain) first. 
## Upgrade
An existing BOINC server can be upgraded with the [upgrade tool](https://boinc.berkeley.edu/trac/wiki/ToolUpgrade).   
## Change Log

###  Scheduler & Validator
 * PR [#3449](https://github.com/BOINC/boinc/pull/3449): scheduler: fix crashing bug in anonymous platform case.
",30260406
177,False,False,2019-09-09T15:06:14Z,2019-09-11T07:39:56Z,"# Release Notes
## Introduction
The BOINC development community is pleased to announce a new server release.
These release notes provide an overview of the new features, bugs fixed and any known issues.
The new features included in this release are: 
 * [#2118](https://github.com/BOINC/boinc/issues/2118): Proof of UserID ownership using public key cryptography
 * [#3009](https://github.com/BOINC/boinc/issues/3009): Project Specific Test Probes
## Bugs Fixed
* [#2063](https://github.com/BOINC/boinc/issues/2063): Change ""Use ATI GPU"" on project preferences to ""Use AMD GPU""
 * [#2858](https://github.com/BOINC/boinc/issues/2858): Duplication of versioning
 * [#2857](https://github.com/BOINC/boinc/issues/2857): GDPR not showing in alternate view
 * [#2958](https://github.com/BOINC/boinc/issues/2958): db_dump seg faults if STATSEXPORT is not enabled
 * [#2975](https://github.com/BOINC/boinc/issues/2975): Cross-project certificate page is broken
 * [#2960](https://github.com/BOINC/boinc/issues/2960): Wrong use of error_page() function throughout the code
 * [#3089](https://github.com/BOINC/boinc/issues/3089): The daily quota is not fullly respected if close to limit
 * [#3145](https://github.com/BOINC/boinc/issues/3145): db_purge bugs in zlib support
 *  [#3005](https://github.com/BOINC/boinc/issues/3005): db_purge should also purge the batch table
 * [#3188](https://github.com/BOINC/boinc/issues/3188): Agreeing to Terms of Use when Logging In without checking ""Stay Logged In"" Generates Error
 * [#3206](https://github.com/BOINC/boinc/issues/3206): generate_account_ownership_keys.php breaks make_project 

Please see the git [comparison with v1.0.4](https://github.com/BOINC/boinc/compare/server_release/1.0/1.0.4...server_release/1.2/1.2.0) for the details.
## Known issues
* None
## Download
The server release can be obtained with the following commands. 
```
git clone https://github.com/BOINC/boinc.git
cd boinc
git checkout tags/server_release/1.2/1.2.0 -b server_release/1.2.0
```
The code can then be built as described in the [documentation](https://boinc.berkeley.edu/trac/wiki/BuildSystem). 
```
./_autosetup
./configure --disable-client --disable-manager
make
```
## Install
To setup a new BOINC server, please follow the [guide](https://boinc.berkeley.edu/trac/wiki/ServerIntro). If you are new to BOINC please ensure to review the [Technical Documentation](https://boinc.berkeley.edu/trac/wiki/ProjectMain) first. 
## Upgrade
An existing BOINC server can be upgraded with the [upgrade tool](https://boinc.berkeley.edu/trac/wiki/ToolUpgrade).   
## Change Log
### General
 * PR [#2861](https://github.com/BOINC/boinc/pull/2861): Alternative approach for server versioning, addresses issue [#2858](https://github.com/BOINC/boinc/issues/2858)
 * PR [#2906](https://github.com/BOINC/boinc/pull/2906): Add options for not collecting or showing URL and country
 * PR [#2963](https://github.com/BOINC/boinc/pull/2963): Remove unused BOINC_RCSID constants
 * PR [#2965](https://github.com/BOINC/boinc/pull/2965): Public-key cryptographic proof of account ownership, addresses issue [#2118](https://github.com/BOINC/boinc/issues/2118) 
 * PR [#2967](https://github.com/BOINC/boinc/pull/2967): Keep server version # in a file (html/inc/server_version.inc)
 * PR [#3049](https://github.com/BOINC/boinc/pull/3049): Add conditional terms of use consent requirement to create_account RPC
 * PR [#3168](https://github.com/BOINC/boinc/pull/3168): Quality: fix small issues
###  Scheduler & Validator
 * PR [#2138](https://github.com/BOINC/boinc/pull/2138): Raise the quorum for 'suspicious' results to ensure validation
 * PR [#2630](https://github.com/BOINC/boinc/pull/2630): Add the ability to have > 1 stages of trickle handling
 * PR [#3024](https://github.com/BOINC/boinc/pull/3024): Add ""punitive validation"" mechanism, addresses issue [#3009](https://github.com/BOINC/boinc/issues/3009)
 * PR [#3089](https://github.com/BOINC/boinc/pull/3089): Check daily job limit on each job, not just when choosing AV, addresses issue [#3089](https://github.com/BOINC/boinc/issues/3089)
 * PR [#3090](https://github.com/BOINC/boinc/pull/3090): Fixes uninitialized values of min/max_wu_id and min/max_batch
 * PR [#3102](https://github.com/BOINC/boinc/pull/3102): Fix bugs in #3024
 * PR [#3198](https://github.com/BOINC/boinc/pull/3198): If plan class name contains ""amd"", assume it's AMD GPU 
 * PR [#3233](https://github.com/BOINC/boinc/pull/3233): Fix incorrect variable printed to sched debug
### Web & PHP
 * PR [#2743](https://github.com/BOINC/boinc/pull/2743): Fix layout problem with forum tables
 * PR [#2786](https://github.com/BOINC/boinc/pull/2786): Image File Compression
 * PR [#2814](https://github.com/BOINC/boinc/pull/2814): Fix bug in team import, wrong include path fixed
 * PR [#2829](https://github.com/BOINC/boinc/pull/2829): Removed surplus bracket
 * PR [#2844](https://github.com/BOINC/boinc/pull/2844): Change ""ATI"" to ""AMD"" in a few places, addresses issue [#2063](https://github.com/BOINC/boinc/issues/2063)
 * PR [#2872](https://github.com/BOINC/boinc/pull/2872): Add ability to put extra stuff in <head> element of all pages
 * PR [#2890](https://github.com/BOINC/boinc/pull/2890): Added token authentication to agreetotermsofuse form
 * PR [#2916](https://github.com/BOINC/boinc/pull/2916): Add consent preferences to column view of project preferences page, addresses issue [#2857](https://github.com/BOINC/boinc/issues/2857)
 * PR [#2920](https://github.com/BOINC/boinc/pull/2920): Script to fix project preferences
 * PR [#2925](https://github.com/BOINC/boinc/pull/2925): RSS feed: add <description> element to make it validate
 * PR [#2951](https://github.com/BOINC/boinc/pull/2951): Fix undefined var on host page when <show_results> is false
 * PR [#2971](https://github.com/BOINC/boinc/pull/2971): Fix deprecated php stuff
 * PR [#2976](https://github.com/BOINC/boinc/pull/2976): Fixed get_other_projects function addresses issue [#2975](https://github.com/BOINC/boinc/issues/2975)
 * PR [#2979](https://github.com/BOINC/boinc/pull/2979): Do not allow page_head() to be called twice, addresses issue [#2960](https://github.com/BOINC/boinc/issues/2960)
 * PR [#2980](https://github.com/BOINC/boinc/pull/2980): Strip HTML tags for the page title
 * PR [#2990](https://github.com/BOINC/boinc/pull/2990): Change certificate title font so that it works with Firefox
 * PR [#3000](https://github.com/BOINC/boinc/pull/3000): Fix php syntax error
 * PR [#3016](https://github.com/BOINC/boinc/pull/3016): Change ""ATI GPU"" to ""AMD GPU"" in host app details, addresses issue [#2063](https://github.com/BOINC/boinc/issues/2063)
 * PR [#3042](https://github.com/BOINC/boinc/pull/3042): Fix typos in user visible strings
 * PR [#3058](https://github.com/BOINC/boinc/pull/3058): Make it possible to send HTML email
 * PR [#3078](https://github.com/BOINC/boinc/pull/3078): Fix errors in keywords.inc
 * PR [#3080](https://github.com/BOINC/boinc/pull/3080): Fix auto-attach process for VBox projects
 * PR [#3131](https://github.com/BOINC/boinc/pull/3131): If view empty thread, mark it as read
 * PR [#3139](https://github.com/BOINC/boinc/pull/3139): Minor text output cleanup for the new account ownership pages
 * PR [#3171](https://github.com/BOINC/boinc/pull/3171): fix small typo in translatable text 
 * PR [#3189](https://github.com/BOINC/boinc/pull/3189): Fix invalid error message on accept terms of use page, addresses issue [#3188](https://github.com/BOINC/boinc/issues/3188)
 * PR [#3195](https://github.com/BOINC/boinc/pull/3195): Add ability to view mem/disk usage stats for a batch. 
 * PR [#3207](https://github.com/BOINC/boinc/pull/3207): Cleanup generate_account_ownership_keys, addresses issue [#3206](https://github.com/BOINC/boinc/issues/3206)
### Tools & Scripts
 * PR [#2818](https://github.com/BOINC/boinc/pull/2818): Added default project value disable_account_creation_rpc
 * PR [#2827](https://github.com/BOINC/boinc/pull/2827): Linking db_dump requires -lz
 * PR [#2974](https://github.com/BOINC/boinc/pull/2974): Fix db_dump segfault, addresses issue [#2958](https://github.com/BOINC/boinc/issues/2958) 
 * PR [#3084](https://github.com/BOINC/boinc/pull/3084): Removed extra .gz from badge_user and badge_team 
 * PR [#3146](https://github.com/BOINC/boinc/pull/3146): Fix bugs in zlib support in db_purge, addresses issue [#3145](https://github.com/BOINC/boinc/issues/3145) 
 * PR [#3148](https://github.com/BOINC/boinc/pull/3148): Purge retired batches from the batch table, addresses issue [#3005](https://github.com/BOINC/boinc/issues/3005)
### Remote Job Submission
 * PR [#2968](https://github.com/BOINC/boinc/pull/2968): Add API for getting job counts 
 * PR [#3007](https://github.com/BOINC/boinc/pull/3007): Reverting PR [#2794](https://github.com/BOINC/boinc/pull/2794)
 * PR [#3011](https://github.com/BOINC/boinc/pull/3011): Add logging
 * PR [#3075](https://github.com/BOINC/boinc/pull/3075): Fix race condition  
### Drupal
 * PR [#2847](https://github.com/BOINC/boinc/pull/2847): Changed a few ""ATI"" string to ""AMD"", addresses issue [#2063](https://github.com/BOINC/boinc/issues/2063)
 * PR [#2877](https://github.com/BOINC/boinc/pull/2877) & [#2881](https://github.com/BOINC/boinc/pull/2881): Update bbcode-filter for PHP7
 * PR [#2950](https://github.com/BOINC/boinc/pull/2950): Modified email messages to remove language code
 * PR [#2966](https://github.com/BOINC/boinc/pull/2966): Add and fix ctools module
 * PR [#2982](https://github.com/BOINC/boinc/pull/2982): PHP7 fixes for boinc modules
 * PR [#2983](https://github.com/BOINC/boinc/pull/2983): PHP 7 fixes for various contrib modules
 * PR [#2984](https://github.com/BOINC/boinc/pull/2984): Removed old INI settings
 * PR [#2985](https://github.com/BOINC/boinc/pull/2985): PHP7 fixes for views modules
 * PR [#2986](https://github.com/BOINC/boinc/pull/2986): Panels module - Fixed old style PHP4 constructors
 * PR [#2987](https://github.com/BOINC/boinc/pull/2987): PHP7 fixes for ctools module
 * PR [#2994](https://github.com/BOINC/boinc/pull/2994): Move tableofcontents module
 * PR [#2995](https://github.com/BOINC/boinc/pull/2995): Move facetapi module
 * PR [#2997](https://github.com/BOINC/boinc/pull/2997): Boincimport - fix errant character problem
 * PR [#2999](https://github.com/BOINC/boinc/pull/2999): Removed PHP ini setting 'arg_separator.output'
 * PR [#3018](https://github.com/BOINC/boinc/pull/3018): Add form to send email to all team-members
 * PR [#3021](https://github.com/BOINC/boinc/pull/3021): Fixed wording on email team page
 * PR [#3022](https://github.com/BOINC/boinc/pull/3022): Removed extra slash
 * PR [#3033](https://github.com/BOINC/boinc/pull/3033): Add JS to terms-of-use form
 * PR [#3039](https://github.com/BOINC/boinc/pull/3039): Move context module to codebase
 * PR [#3040](https://github.com/BOINC/boinc/pull/3040): Modified bbcode module to rewrite email addresses
 * PR [#3041](https://github.com/BOINC/boinc/pull/3041): Modified CSS BOINC theme
 * PR [#3051](https://github.com/BOINC/boinc/pull/3051): Add boinccore_mail_alter to change encoding
 * PR [#3056](https://github.com/BOINC/boinc/pull/3056): Notify admins using rules functionality
 * PR [#3057](https://github.com/BOINC/boinc/pull/3057): Fixed misc PHP problems
 * PR [#3063](https://github.com/BOINC/boinc/pull/3063): Fixed registration form terms-of-use checkbox
 * PR [#3072](https://github.com/BOINC/boinc/pull/3072): Add additional admin notification rules
 * PR [#3082](https://github.com/BOINC/boinc/pull/3082): Fixed bug where rules_invoke_event is called
 * PR [#3085](https://github.com/BOINC/boinc/pull/3085): Add subject line text to help email filtering
 * PR [#3087](https://github.com/BOINC/boinc/pull/3087): Changed text of subject line for admin notifications
 * PR [#3092](https://github.com/BOINC/boinc/pull/3092): Changed how the host_and_work_stats times are displayed
 * PR [#3096](https://github.com/BOINC/boinc/pull/3096): Drupal feature to add tag to subject line of admin notifications",30260406
178,False,False,2019-03-06T16:17:09Z,2019-03-14T15:36:37Z,"# Release Notes
## Introduction
The BOINC development community is pleased to announce a new server release.
These release notes provide an overview of the new features, bugs fixed and any known issues.
The new features included in this release are: 
* None
## Bugs Fixed
* [Incorrect peak FLOPS for AMD GPU](https://github.com/BOINC/boinc/issues/2988)

Please see the git [comparison with v1.0.3](https://github.com/BOINC/boinc/compare/server_release/1.0/1.0.3...server_release/1.0/1.0.4) for the details.
## Known issues
* None
## Download
The server release can be obtained with the following commands. 
```
git clone https://github.com/BOINC/boinc.git
cd boinc
git checkout tags/server_release/1.0/1.0.4 -b server_release/1.0.4
```
The code can then be built as described in the [documentation](https://boinc.berkeley.edu/trac/wiki/BuildSystem). 
```
./_autosetup
./configure --disable-client --disable-manager
make
```
## Install
To setup a new BOINC server, please follow the [guide](https://boinc.berkeley.edu/trac/wiki/ServerIntro). If you are new to BOINC please ensure to review the [Technical Documentation](https://boinc.berkeley.edu/trac/wiki/ProjectMain) first. 
## Upgrade
An existing BOINC server can be upgraded with the [upgrade tool](https://boinc.berkeley.edu/trac/wiki/ToolUpgrade).   ",30260406
179,False,False,2018-12-07T19:03:11Z,2018-12-10T09:52:49Z,"# Release Notes
## Introduction
The BOINC development community is pleased to announce a new server release.
These release notes provide an overview of the new features, bugs fixed and any known issues.
The new features included in this release are: 
* GDPR support 
* Simple Attach mechanism.
GDPR is now supported by:
* Consent policies - Project administrators can configure consent policies to which users may agree. Consent can be given and withdrawn by users. By default, projects are configured with Enrollment and Statistics Export consent types; which may be enabled in the project ops page.
* Terms of use - The project Web site displays terms-of-use for users to agree to. The BOINC manager should also display the same terms-of-use. 
* Delete user - Users may delete their accounts. Projects may choose between delete types: soft-delete, hard-delete, or a project-defined delete.
* While not directly GDPR related, projects can now notify users more securely when they change email addresses. A notification will be sent to both the old and new emails. Users may revert the email change if they suspect malicious behavior. Additionally, users may not delete their accounts until 7 days after an email change.
For more details, please see the [GDPR compliance](https://boinc.berkeley.edu/trac/wiki/GdprCompliance) page.
The simple attach mechanism simplifies the join-up process for Windows users. In summary, the new-user process is:
* Visit the project or account manager Web site and click on *Join*.
* Enter email/password, click *OK*
* Click *Download*
* Click on the installer, choose defaults 
The improvements are that the user doesn't leave the project Web site (i.e. doesn't land on BOINC Web site) and also the user doesn't have to select the project from a a list of all projects. Further details, including how to configure this for a project,  can be found in the [Simple Attach](https://boinc.berkeley.edu/trac/wiki/SimpleAttach) documentation.
## Bugs Fixed
* [Error in db/schema.sql](https://github.com/BOINC/boinc/issues/2479)
* [Move to stronger password hash](https://github.com/BOINC/boinc/issues/2353)
* [Email Change Notification](https://github.com/BOINC/boinc/issues/2451)
* [Improve password security](https://github.com/BOINC/boinc/issues/1644)
* [EU-GDPR - Right to Erasure](https://github.com/BOINC/boinc/issues/2447)
* [script_validator segfault](https://github.com/BOINC/boinc/issues/2615)
* [Upgrading from PHP 5 to PHP 7](https://github.com/BOINC/boinc/issues/2102)
* [db_dump is inefficient](https://github.com/BOINC/boinc/issues/694)
* [Batches Failing To Be Retired](https://github.com/BOINC/boinc/issues/2793)
* [Scalability of query batches RPC](https://github.com/BOINC/boinc/issues/2792)
* [Streamline register/install process](https://github.com/BOINC/boinc/issues/2163)
* [Team import partially broken](https://github.com/BOINC/boinc/issues/2850)
Please see the git [comparison with v0.9](https://github.com/BOINC/boinc/compare/server_release/0.9...server_release/1/1.0) for the details.
## Known issues
None at this time.
## Download
The server release can be obtained with the following commands. 
```
git clone https://github.com/BOINC/boinc.git
cd boinc
git checkout tags/server_release/1.0/1.0.3 -b server_release/1.0
```
The code can then be built as described in the [documentation](https://boinc.berkeley.edu/trac/wiki/BuildSystem). 
```
./_autosetup
./configure --disable-client --disable-manager
make
```
## Install
To setup a new BOINC server, please follow the [guide](https://boinc.berkeley.edu/trac/wiki/ServerIntro). If you are new to BOINC please ensure to review the [Technical Documentation](https://boinc.berkeley.edu/trac/wiki/ProjectMain) first. 
## Upgrade
An existing BOINC server can be upgraded with the [upgrade tool](https://boinc.berkeley.edu/trac/wiki/ToolUpgrade).   ",30260406
180,False,False,2018-04-10T14:29:28Z,2018-04-11T18:38:07Z,Reference BOINC Server Release prior to GDPR modifications.,30260406
181,False,False,2017-02-02T21:46:37Z,2017-02-03T07:55:49Z,"Includes the new copy_cmdline_to_shared features, and some bug fixes.
",30260406
182,False,False,2016-06-10T15:08:38Z,2016-06-10T15:18:31Z,"This release contains these fixes:
- 36044d5: VBOX: Code cleanup - streamline the hypervisor initialization code a bit.
- 732f2e0: VBOX: Dump Vbox logs when the heartbeat fails.
",30260406
183,False,False,2016-06-04T06:16:59Z,2016-06-04T06:37:11Z,"This release contains these fixes:
- 0fe2140: VBOX: Adjust the startup logic to support Vbox 5.1 (MSCOM)
- 1784d67: VBOX: Disable explicitly disabling LPT ports on Macs.
- 0f3b0cc: VBOX: Add support for VirtualBox 5.1 (MSCOM)
- 1184f27: VBOX: Cap the maximum number of CPUs to 32.
",30260406
184,False,False,2016-02-10T20:06:54Z,2016-02-10T20:13:50Z,"This release contains these fixes:
- 0150327: Look for the heartbeat file in the shared directory. 
- c61e309: Add some text about detecting the heartbeat configuration parameters
",30260406
185,False,False,2016-02-07T22:20:00Z,2016-02-07T22:33:21Z,"This release contains the following fixes:
- 46cac65: Introduce the notion of a heartbeat file. 
",30260406
186,False,False,2016-02-04T02:58:34Z,2016-02-04T03:23:41Z,"This release contains the following fixes:
- 8f7df2a7: fixed error code not being reported when completion trigger file is used.
",30260406
187,False,False,2016-01-30T19:05:43Z,2016-01-30T19:13:32Z,"This release contains the following fixes:
- 070db37: Fix log dump on certain known error types
",30260406
188,False,False,2015-12-17T14:37:34Z,2016-01-01T17:12:33Z,"This release contains these fixes:
- Updated localizations
- Updated libcurl, openssl, and VirtualBox (for packages that include VirtualBox)
- Fixed VirtualBox detection for Mac and Linux
- Fixed numerous issues detected via coverity source code scans.
- Fixed how elapsed time is displayed in the manager
- Fixed localized number formatting issues
- Fixed crash analysis code in the manager (Windows Only)
- Fixed GPU detection issues
- Fixed minimum password text in attach wizard
- Fixed clipping of the project icons in the simple GUI (Windows Only)
",30260406
189,False,False,2015-10-16T20:35:54Z,2015-10-16T21:07:13Z,"Changes included in this release:
2f1bce3: VBOX: Make sure we are processing the vm log file, even if it is not online.
d0fb1e6: VBOX: Fix search path detection code introduced in caf5255.
0d7ecc6: VBOX: Move detection of errors reported by VirtualBox to a little later in the start up process.  It may take the VM process a few moments to figure out if it will be able to run.
",30260406
190,False,False,2015-10-13T18:42:35Z,2015-10-13T19:02:49Z,"This release includes these changes:
caf5255: VBOX: Add code to handle search path modification for Linux and Mac.
f0998b6: VBOX: On a hypervisor detection failure dump all the logs to stderr, it would have quickly exposed a search path change on Mac OS X.
",30260406
191,False,False,2015-10-11T20:24:24Z,2015-10-12T01:42:51Z,"Changes included in this release:
- Reduce the amount of disk I/O when parsing the VM log file
- Fix a regression introduced in 26172 with starting up a VM
",30260406
192,False,False,2015-10-09T17:53:42Z,2015-10-09T18:13:30Z,"This release includes these fixes:
- Proper detection of VMX and SVM error codes in VirtualBox 5.x
",30260406
193,False,False,2015-09-29T09:17:04Z,2015-10-08T22:10:09Z,"This release includes these fixes:
- Mac: Fix VirtualBox detection 
- Mac: Fix for screensaver reliability
",30260406
194,False,False,2015-10-08T20:35:20Z,2015-10-08T21:37:01Z,"This release includes these changes:
- Win: Fix for wrapper crash during VM startup when the VM process itself crashes.
- Linux: Fix build error that lead to a crash on startup.
",30260406
195,False,False,2015-09-28T16:23:07Z,2015-10-01T19:00:27Z,"This release includes:
- A few bug fixes
",30260406
196,False,False,2015-09-28T16:23:07Z,2015-10-01T18:58:40Z,"This release includes:
- A few bug fixes
",30260406
197,False,False,2015-08-27T19:10:19Z,2015-10-01T18:49:46Z,"This release includes:
- Updated localizations
- Synchronized preference text between client and web preferences
",30260406
198,False,False,2020-03-14T14:50:19Z,2020-03-14T20:49:33Z,"### tl;dr
We finally organise Experiment-Runner-State-Callback as it should be.
We also have great [documentation](https://catalyst-team.github.io/catalyst/) update!


## Core

1. [Experiment](https://github.com/catalyst-team/catalyst/blob/master/catalyst/core/experiment.py) - an abstraction that contains information about the experiment – a model, a criterion, an optimizer, a scheduler, and their hyperparameters. It also contains information about the data and transformations used. In general, the Experiment knows what you would like to run.

2. [Runner](https://github.com/catalyst-team/catalyst/blob/master/catalyst/core/runner.py) - a class that knows how to run an experiment. It contains all the logic of how to run the experiment, stages, epoch and batches.

3. [State](https://github.com/catalyst-team/catalyst/blob/master/catalyst/core/state.py) - some intermediate storage between Experiment and Runner that saves the current state of the Experiments – model, criterion, optimizer, schedulers, metrics, loaders, callbacks, etc

4. [Callback](https://github.com/catalyst-team/catalyst/blob/master/catalyst/core/callback.py) - a powerful abstraction that lets you customize your experiment run logic. To give users maximum flexibility and extensibility we allow callback execution anywhere in the training loop
	```
	on_stage_start
	    on_epoch_start
	       on_loader_start
	           on_batch_start
	           # ... 
	       on_batch_end
	    on_epoch_end
	on_stage_end

	on_exception
	```

## How to combine them together?

First of all - just read the docs for State, Experiment, Runner and Callback abstractions.
Long story short, State just saves everything during experiment and passes to every Callback in Experiment through Runner.run_event.
For example, usual case, for some custom metric implementation, all you need to do is
```
from catalyst.dl import Callback, State

class MyPureMetric(Callback):
  def on_batch_end(self, state: State):
    """"""To store batch-based metrics""""""
    state.batch_metrics[{metric_name}] = metric_value

  def on_loader_end(self, state: State):
  	""""""To store loader-based metrics""""""
    state.loader_metrics[{metric_name}] = metric_value

  def on_epoch_end(self, state: State):
    """"""To store epoch-based metrics""""""
    state.epoch_metrics[{metric_name}] = metric_value

```

There are coming many more Catalyst concepts, tutorials and docs in near future.

## Callback updates

- CheckRunCallback - allows you to check the pipeline correctness during long-run training
- TimerCallback - enables / disables the calculation of the work speed of your training, like `data time per batch`, `model time per batch`, `samples per second`
- MetricManagerCallback - transfers torch tensors to numpy and calculates statistics
- ValidationManagerCallback - collects validation metrics and checks if it's the best epoch

## Catalyst best practices

Working with Catalyst.DL it's better to import everything in straightforward way like
```
from catalyst.dl import SomethingGreat
from catalyst.dl import utils

utils.do_something_cool()
```

## Breaking changes
1. `CriterionAggregatorCallback` moved to catalyst.contrib and will be deprecated in `20.04` release.
2. For `SchedulerCallback` `reduce_metric` was renamed to `reduced_metric` :)
3. We have update metric recording mechanism for State-Callback, 

## Future work

During 20.03 -> 20.04 releases, we are going to deprecate all `SomeContribRunner` and transfer them to `SomeContribLogger` as more general purpose solution.",145385156
199,False,False,2020-02-15T13:18:31Z,2020-02-15T13:50:08Z,"# Catalyst 20.02.2

### Overall
- scripts update 
- formatting update
- project manifesto https://github.com/catalyst-team/catalyst/pull/532
- Alchemy intro https://github.com/catalyst-team/catalyst/pull/563 https://github.com/catalyst-team/catalyst/pull/564
- Travis -> TeamCity CI https://github.com/catalyst-team/catalyst/pull/597 https://github.com/catalyst-team/catalyst/pull/616 https://github.com/catalyst-team/catalyst/pull/634
- Core init https://github.com/catalyst-team/catalyst/pull/578
- tests global update https://github.com/catalyst-team/catalyst/pull/661

### DL
- config wizard https://github.com/catalyst-team/catalyst/pull/499
- Triplet loss contribution https://github.com/catalyst-team/catalyst/pull/504
- TelegramLogger support https://github.com/catalyst-team/catalyst/pull/471
- Trace support for fp16 and Nvidia Apex https://github.com/catalyst-team/catalyst/pull/497
- runner params fix https://github.com/catalyst-team/catalyst/pull/545 https://github.com/catalyst-team/catalyst/pull/633
- weighted sum support for loss calculation https://github.com/catalyst-team/catalyst/pull/535
- classwise IOU support https://github.com/catalyst-team/catalyst/pull/533
- BERT text classification example https://github.com/catalyst-team/catalyst/pull/540
- Ralamb contribution https://github.com/catalyst-team/catalyst/pull/551
- samplers params support https://github.com/catalyst-team/catalyst/pull/550
- KNNMetricCallback contribution https://github.com/catalyst-team/catalyst/pull/560
- MetricAggregationCallback contribution https://github.com/catalyst-team/catalyst/pull/591
- text to embeddings script https://github.com/catalyst-team/catalyst/pull/596 https://github.com/catalyst-team/catalyst/pull/601
- Several metric learning features https://github.com/catalyst-team/catalyst/pull/589 https://github.com/catalyst-team/catalyst/pull/598 https://github.com/catalyst-team/catalyst/pull/599
- Neptune integration https://github.com/catalyst-team/catalyst/pull/571
- transforms params support https://github.com/catalyst-team/catalyst/pull/595 https://github.com/catalyst-team/catalyst/pull/604
- SMP integration https://github.com/catalyst-team/catalyst/pull/600 
- GAN 2.0 https://github.com/catalyst-team/catalyst/pull/607 https://github.com/catalyst-team/catalyst/pull/585
- Cutmix callback contribution https://github.com/catalyst-team/catalyst/pull/635
- RMS Normalization contribution https://github.com/catalyst-team/catalyst/pull/649
- EarlyStoppingCallback fix https://github.com/catalyst-team/catalyst/pull/664
- better distributed & slurm support https://github.com/catalyst-team/catalyst/pull/639 https://github.com/catalyst-team/catalyst/pull/629 https://github.com/catalyst-team/catalyst/pull/662 https://github.com/catalyst-team/catalyst/pull/628
",145385156
200,False,False,2019-11-02T11:08:16Z,2019-11-02T16:49:35Z,"# Catalyst 19.10 -> 19.11

## Achievements
[NeurIPS 2019: Learn to Move - Walk Around, 2nd place](https://github.com/Scitator/run-skeleton-run-in-3d)

### Overall
- per_gpu_scale feature for multi-gpu experiment runs https://github.com/catalyst-team/catalyst/pull/406
- contribution guide update https://github.com/catalyst-team/catalyst/pull/422
- image extension check https://github.com/catalyst-team/catalyst/pull/432
- pytorch.tensorboard support https://github.com/catalyst-team/catalyst/pull/439
- docker update https://github.com/catalyst-team/catalyst/pull/463 https://github.com/catalyst-team/catalyst/pull/476 
- documentation update https://github.com/catalyst-team/catalyst/pull/475
- codestyle formatting update https://github.com/catalyst-team/catalyst/pull/477

### DL
- GAN example https://github.com/catalyst-team/catalyst/pull/407
- wandb fix https://github.com/catalyst-team/catalyst/pull/410
- data mixins https://github.com/catalyst-team/catalyst/pull/412
- jupyter notebooks dump feature https://github.com/catalyst-team/catalyst/pull/413
- segmentation tutorial https://github.com/catalyst-team/catalyst/pull/415 https://github.com/catalyst-team/catalyst/pull/441 https://github.com/catalyst-team/catalyst/pull/451
- exponential format support for Config API https://github.com/catalyst-team/catalyst/pull/418
- pytorch 1.3 naming issue fix https://github.com/catalyst-team/catalyst/pull/447
- MaskReader https://github.com/catalyst-team/catalyst/pull/446
- Epoch num: 0 to 1 https://github.com/catalyst-team/catalyst/pull/411
- wandb logging fix https://github.com/catalyst-team/catalyst/pull/458
- all metrics logging to checkpoint https://github.com/catalyst-team/catalyst/pull/455
- imread fix https://github.com/catalyst-team/catalyst/pull/473
- Global Precision/Recall/F1 Callback https://github.com/catalyst-team/catalyst/pull/433
- Loggers logic update https://github.com/catalyst-team/catalyst/pull/443
- runner device fix https://github.com/catalyst-team/catalyst/pull/482
- checkpoint callback path correctness fix https://github.com/catalyst-team/catalyst/pull/484

### RL
- observation inconsistency exception feature https://github.com/catalyst-team/catalyst/pull/461
- RL-2019 comments & updates https://github.com/catalyst-team/catalyst/pull/483

",145385156
201,False,False,2019-10-03T08:50:11Z,2019-10-03T09:29:01Z,"# Catalyst 19.09 -> 19.10

## Achievements
[NeurIPS 2019: Recursion Cellular Image Classification](https://github.com/ngxbac/Kaggle-Recursion-Cellular)
- 4th place solution [writeup](https://www.kaggle.com/c/recursion-cellular-image-classification/discussion/110337#latest-634988)
- 8th place solution

[Kaggle integration](https://github.com/Kaggle/docker-python/pull/616)

[Weights & Biases integration](https://github.com/wandb/docs/pull/22)

### Overall
- LAMA refactoring https://github.com/catalyst-team/catalyst/pull/353
- TemporalConcatPooling https://github.com/catalyst-team/catalyst/pull/355
- Extensions on/off support https://github.com/catalyst-team/catalyst/pull/368
- Hall of Glory update https://github.com/catalyst-team/catalyst/pull/385
- binary_mask_to_overlay_image refactoring https://github.com/catalyst-team/catalyst/pull/387
- get_utcnow_time feature https://github.com/catalyst-team/catalyst/pull/389
- image preprocessing refactoring https://github.com/catalyst-team/catalyst/pull/398
- TF seed fix https://github.com/catalyst-team/catalyst/pull/399
- shorthand for bool flag https://github.com/catalyst-team/catalyst/pull/405

### DL
- Table data tutorial https://github.com/catalyst-team/catalyst/pull/351
- Wandb integration tutorial https://github.com/catalyst-team/catalyst/commit/365ed7d6fdb9e5aa515ef52612e403fdd3270ac8
- lovasz loss fix https://github.com/catalyst-team/catalyst/pull/359
- SupervisedRunner, one loader handling https://github.com/catalyst-team/catalyst/pull/362
- SupervisedRunner.predict_loader, model support https://github.com/catalyst-team/catalyst/pull/367
- resume from previous stage fix https://github.com/catalyst-team/catalyst/pull/328
- CriterionAggregator https://github.com/catalyst-team/catalyst/pull/361
- Weight decay decoupling https://github.com/catalyst-team/catalyst/pull/370
- Binary class support for AccuracyCallback https://github.com/catalyst-team/catalyst/pull/374
- SupervisedRunner.train, resume feature https://github.com/catalyst-team/catalyst/pull/377
- Apex distributed synchronised batchnorm support https://github.com/catalyst-team/catalyst/pull/379
- Catalyst Init feature https://github.com/catalyst-team/catalyst/pull/372
- Dict transform support for MergeDataset https://github.com/catalyst-team/catalyst/pull/388
- BCEDiceLoss weights support https://github.com/catalyst-team/catalyst/pull/394
- Multi-label accuracy support https://github.com/catalyst-team/catalyst/pull/381
- PyTorch loaders additional params support https://github.com/catalyst-team/catalyst/pull/397

### RL
- RL networks refactoring – MLP and CNN policies support https://github.com/catalyst-team/catalyst/pull/352
- Mongo reconnection support https://github.com/catalyst-team/catalyst/pull/354
- RL tests refactoring https://github.com/catalyst-team/catalyst/pull/357 https://github.com/catalyst-team/catalyst/pull/369
- EnvWrapper feature https://github.com/catalyst-team/catalyst/pull/358
- Raw reward fix https://github.com/catalyst-team/catalyst/pull/373
- deterministic RL https://github.com/catalyst-team/catalyst/pull/393
- Large files support for MongoDB https://github.com/catalyst-team/catalyst/pull/396

",145385156
202,False,False,2019-09-02T17:02:19Z,2019-09-02T18:47:06Z,"# Catalyst 19.08 -> 19.09

## Ecosystem
We are happy to announce [MLComp](https://github.com/catalyst-team/mlcomp) release – a distributed DAG (Directed acyclic graph) framework for machine learning with UI. Powered by Catalyst.Team.

We also release a detailed [classification tutorial](./examples/notebooks/classification-tutorial.ipynb) [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/catalyst-team/catalyst/blob/master/examples/notebooks/classification-tutorial.ipynb) and comprehensive [classification pipeline](https://github.com/catalyst-team/classification).

Slowly-slowly, more and more challenges are powered by catalyst https://github.com/catalyst-team/catalyst/pull/302.

We also update the licence to Apache 2.0, start the [Patreon](https://www.patreon.com/catalyst_team) and even run [catalyst-info repo](https://github.com/catalyst-team/catalyst-info)!

And finally, we have integrate [wandb](https://wandb.ai) to the catalyst, both DL & RL! 

### Overall
- config dump to tensorboard https://github.com/catalyst-team/catalyst/pull/284 – even more reproducibility for both DL and RL 
- bash scripts for `parallel-gpu-run` and `catalyst-rl-run` https://github.com/catalyst-team/catalyst/pull/288
- improver CUDNN deterministic and CUDNN benchmark support https://github.com/catalyst-team/catalyst/pull/299 https://github.com/catalyst-team/catalyst/pull/309
- available gpus check feature https://github.com/catalyst-team/catalyst/pull/300
- SequentialNet update with ""soft"" residual mode https://github.com/catalyst-team/catalyst/pull/301
- docs update https://github.com/catalyst-team/catalyst/pull/303 https://github.com/catalyst-team/catalyst/pull/336
- layer-wise learning rate support https://github.com/catalyst-team/catalyst/pull/283
- torchnet dependency removal https://github.com/catalyst-team/catalyst/pull/304
- environment variables and packages versions dump to tensorboard https://github.com/catalyst-team/catalyst/pull/313 https://github.com/catalyst-team/catalyst/pull/317
- tracing script update https://github.com/catalyst-team/catalyst/pull/319
- additional general case CV scripts https://github.com/catalyst-team/catalyst/pull/321
- RAdam, LookAhead, Ranger optimizers support https://github.com/catalyst-team/catalyst/pull/332
- wandb integration https://github.com/catalyst-team/catalyst/pull/337 https://github.com/catalyst-team/catalyst/pull/339 https://github.com/catalyst-team/catalyst/pull/341

### DL
- Exception handling support for callbacks https://github.com/catalyst-team/catalyst/pull/281 https://github.com/catalyst-team/catalyst/pull/307
- tests update https://github.com/catalyst-team/catalyst/pull/286
- traced models support for dataset prediction https://github.com/catalyst-team/catalyst/pull/287
- tensorboard logger fix https://github.com/catalyst-team/catalyst/pull/294
- `state_dict` param support for all contrib encoders https://github.com/catalyst-team/catalyst/pull/292
- bias weight decay autoremove https://github.com/catalyst-team/catalyst/pull/293
- checkpoint save on exception https://github.com/catalyst-team/catalyst/pull/295
- classification tutorial https://github.com/catalyst-team/catalyst/pull/296 https://github.com/catalyst-team/catalyst/pull/297 https://github.com/catalyst-team/catalyst/pull/326
- better console logging https://github.com/catalyst-team/catalyst/pull/298
- segmentation models support for dl registry https://github.com/catalyst-team/catalyst/pull/329
- one-hot feature https://github.com/catalyst-team/catalyst/pull/331
- accuracy metric fix https://github.com/catalyst-team/catalyst/pull/340
- path dataset support https://github.com/catalyst-team/catalyst/pull/335
- callback ordering support https://github.com/catalyst-team/catalyst/pull/343
- encoders `requires_grad` logic update https://github.com/catalyst-team/catalyst/pull/346

### RL
- DB dump/load refactoring https://github.com/catalyst-team/catalyst/pull/318
- mongo fix https://github.com/catalyst-team/catalyst/pull/345
",145385156
203,False,False,2019-08-01T11:05:05Z,2019-08-01T18:34:51Z,"# Catalyst 19.07 -> 19.08


### Overall
- module import fix https://github.com/catalyst-team/catalyst/pull/240
- TF projector fix https://github.com/catalyst-team/catalyst/pull/272
- docs update https://github.com/catalyst-team/catalyst/pull/279


### DL
- updated InferMaskCallback https://github.com/catalyst-team/catalyst/pull/252
- scientific notation https://github.com/catalyst-team/catalyst/pull/248
- tracing tests https://github.com/catalyst-team/catalyst/pull/255
- BaseExperiment update https://github.com/catalyst-team/catalyst/pull/269
- BatchSamler support https://github.com/catalyst-team/catalyst/pull/271
- metrics.json feature https://github.com/catalyst-team/catalyst/pull/266
- auto accuracy args https://github.com/catalyst-team/catalyst/pull/274
- lr linear scaling https://github.com/catalyst-team/catalyst/pull/273
- BaseCheckpointCallback https://github.com/catalyst-team/catalyst/pull/276
- SupervisedRunner update, new examples https://github.com/catalyst-team/catalyst/pull/278


### RL
- critic refactoring https://github.com/catalyst-team/catalyst/pull/253
- host support for dbWrappers https://github.com/catalyst-team/catalyst/pull/254
- RawObservationWrapper https://github.com/catalyst-team/catalyst/pull/247 and https://github.com/catalyst-team/catalyst/pull/261
- distributional PPO PoC https://github.com/catalyst-team/catalyst/pull/257
- PPO fix https://github.com/catalyst-team/catalyst/pull/258
- RL tests: https://github.com/catalyst-team/catalyst/pull/259, https://github.com/catalyst-team/catalyst/pull/260, https://github.com/catalyst-team/catalyst/pull/262
- RL epoch limit feature https://github.com/catalyst-team/catalyst/pull/263
- additional policy heads support https://github.com/catalyst-team/catalyst/pull/264
- Advantage & entropy regularization DQN support https://github.com/catalyst-team/catalyst/pull/265
- mongo wrapper update https://github.com/catalyst-team/catalyst/pull/267, https://github.com/catalyst-team/catalyst/pull/268
- atari example update https://github.com/catalyst-team/catalyst/pull/270
- code saving https://github.com/catalyst-team/catalyst/pull/277
",145385156
204,False,False,2019-07-02T07:47:16Z,2019-07-02T08:53:08Z,"# Catalyst 19.06.3 -> 19.07


### Overall
- module import fix https://github.com/catalyst-team/catalyst/pull/240
- config fix https://github.com/catalyst-team/catalyst/pull/241
- hash update https://github.com/catalyst-team/catalyst/pull/243
- codestyle update https://github.com/catalyst-team/catalyst/pull/244
- python dependencies fix https://github.com/catalyst-team/catalyst/pull/245

### DL
- updated MiniEpochSampler https://github.com/catalyst-team/catalyst/pull/229
- updated events sequence https://github.com/catalyst-team/catalyst/pull/230
- MixupCallback https://github.com/catalyst-team/catalyst/pull/238
- image read with turbojpeg support https://github.com/catalyst-team/catalyst/pull/239

### RL
- multi-input support https://github.com/catalyst-team/catalyst/pull/231
- max updates per sample feature https://github.com/catalyst-team/catalyst/pull/246
- rl validation https://github.com/catalyst-team/catalyst/pull/250
",145385156
205,False,False,2019-06-17T09:15:34Z,2019-06-17T09:55:16Z,"# Catalyst 19.06 -> 19.06.3


### Overall
- docker fix https://github.com/catalyst-team/catalyst/pull/216
- global lib refactoring https://github.com/catalyst-team/catalyst/pull/223

### DL
- DataParallel for fp16 apex https://github.com/catalyst-team/catalyst/pull/213
- cpu tracing support https://github.com/catalyst-team/catalyst/pull/217
- config dump fix https://github.com/catalyst-team/catalyst/pull/221
- batch2device fix https://github.com/catalyst-team/catalyst/pull/214
- IterationCheckpointCallback & batch-size fix https://github.com/catalyst-team/catalyst/pull/228
- fp16 flag fix https://github.com/catalyst-team/catalyst/pull/227

### RL
- Max length removal https://github.com/catalyst-team/catalyst/pull/211
- RL refactoring https://github.com/catalyst-team/catalyst/pull/212
- training seeds update https://github.com/catalyst-team/catalyst/pull/220
- Multi-headed Value functions support https://github.com/catalyst-team/catalyst/pull/198

----
## Breaking changes

- UtilsFactory replaced with `from catalyst.dl import utils`
- `LossCallback` replaced with `CriterionCallback`",145385156
206,False,False,2019-06-01T05:40:53Z,2019-06-01T08:15:44Z,"# Catalyst 19.05 -> 19.06

### Overall
- docs, docker and travis update (https://github.com/catalyst-team/catalyst/pull/205, https://github.com/catalyst-team/catalyst/pull/201, https://github.com/catalyst-team/catalyst/pull/203)
- Removed dependency on TensorFlow, new tensorboard logs parsing mechanism (https://github.com/catalyst-team/catalyst/pull/182)

### DL
- FP16 & distributed training support, nvidia-apex support (https://github.com/catalyst-team/catalyst/pull/183, https://github.com/catalyst-team/catalyst/pull/207)
- PyTorch auto-tracing support (https://github.com/catalyst-team/catalyst/pull/189)
- logdir autonaming based on `baselogdir`, timestamp and config hash (https://github.com/catalyst-team/catalyst/pull/204/commits/a141e4c95dde81aa15d0eb0c6daaaf8648df8e20)
- 1Cycle PyTorch scheduler (https://github.com/catalyst-team/catalyst/pull/162)

### RL
- on-policy model-free algorithms support, PPO & REINFORCE implementations (https://github.com/catalyst-team/catalyst/pull/174)
- mongo DB support fix (https://github.com/catalyst-team/catalyst/pull/190)
- updated samplers, no trajectory length limit now (https://github.com/catalyst-team/catalyst/pull/196)

### Contrib
- segmentation contrib (https://github.com/catalyst-team/catalyst/pull/204)
- losses and metrics refactoring (https://github.com/catalyst-team/catalyst/pull/191)

### Improvements and fixes
- optimizer transferring from previous stage support (https://github.com/catalyst-team/catalyst/pull/181)
- additional checkpoint data support (https://github.com/catalyst-team/catalyst/pull/184)
- `--version` feature (https://github.com/catalyst-team/catalyst/pull/188)

----
## Breaking changes
- all methods with `prepare_*`, that have returned something, renamed to `get_*`; 
- `Experiment._prepare_logdir` renamed to `Experiment._get_logdir`
- `UtilsFactory.prepare_models` renamed to `UtilsFactory.process_components` and supports PyTorch model, criterion, optimizer and scheduler now
- Previous segmentation models were moved to `catalyst.contrib.models.segmentation.models`: `ResNetUnet` and `ResNetLinknet`
- `per_gpu_batch_size` renamed to `per_gpu_scaling` and affects on batch_size and num_workers now

----
## Features examples

### Segmentation
```
from catalyst.contrib.models.segmentation import \
    Unet, Linknet, FPNUnet, PSPnet, \
    ResnetUnet, ResnetLinknet, ResnetFPNUnet, ResnetPSPnet
```

### Apex
```
runner = SupervisedRunner()
runner.train(
    model=model,
    criterion=criterion,
    optimizer=optimizer,
    scheduler=scheduler,
    fp16=True
    ...)
```
or
```
runner = SupervisedRunner()
runner.train(
    model=model,
    criterion=criterion,
    optimizer=optimizer,
    scheduler=scheduler,
    fp16={""opt_level"": ""O1""} # and other apex.initalize kwargs
    ...)
```

### Distributed training bash example
```
#!/usr/bin/env bash

export MASTER_ADDR=""127.0.0.1""
export MASTER_PORT=29500
export WORLD_SIZE=2  # number of gpus

RANK=0 LOCAL_RANK=0 catalyst-dl run --config=config.yml --distributed_params/rank=0:int &  # gpu 0
sleep 5
RANK=1 LOCAL_RANK=1 catalyst-dl run --config=config.yml --distributed_params/rank=1:int &  # gpu 1
```
",145385156
207,False,False,2020-03-09T04:26:04Z,2020-03-10T03:52:04Z,"1. optimize for #127 
2. add support for Microsoft.Data.SqlClient
``` xml
    <!-- MsSqlServer: Microsoft.Data.SqlClient , SqlServer: System.Data.SqlClinet -->
    <DbProvider Name=""${DbProvider}""/>
```
3. add SmartSql.Bulk.MsSqlServer.csproj by Microsoft.Data.SqlClient",86915105
208,False,False,2019-12-18T08:16:09Z,2019-12-18T08:27:46Z,"1. add code-of-conduct
2. fix Concurrent Register EnumTypeHandler bug
3. add support TypeHandler for CommandType.StoredProcedure",86915105
209,False,False,2019-11-18T14:46:45Z,2019-11-19T04:00:47Z,"1. fix #94 
2. fix #113 
3. fix CUD use ColumnAttribute.Name bug
4. fix #114 
5. add Support for simultaneous use of SqlMap and StatementAttribute
6. fix #119 
7. Fix ResultMap missing BUG",86915105
210,False,False,2019-10-28T09:21:27Z,2019-10-28T09:28:33Z,"1. optimize TypeUtils error msg
2. add Ordered for Middlewares 
3. fix CUD bug
4. optimize ConfigBuilder
5. add support automatically assign [Id] to [Entity] using the IdGenerator",86915105
211,False,False,2019-09-26T07:01:17Z,2019-09-26T07:23:48Z,"## 1. add support Auto Converter
#### configure for SmartSqlConfig.xml
``` xml
  <AutoConverters>
    <AutoConverter Name=""NoneConverter"">
      <Tokenizer Name=""None""/>
      <Converter Name=""None""/>
    </AutoConverter>
    <AutoConverter Name=""Default"" Default=""true"">
      <Tokenizer Name=""Default""/>
      <Converter Name=""Pascal""/>      
    </AutoConverter>
    <AutoConverter Name=""PascalConverter"">
      <Tokenizer Name=""Default"">
        <Properties>
          <Property Name=""IgnorePrefix"" Value="""" />
          <Property Name=""Delimiter"" Value=""_"" />
          <Property Name=""UppercaseSplit"" Value=""false"" />
        </Properties>
      </Tokenizer>
      <Converter Name=""Pascal""/>
    </AutoConverter>
    <AutoConverter Name=""DelimiterConverter"">
      <Tokenizer Name=""Default"">
        <Properties>
          <Property Name=""IgnorePrefix"" Value=""col_"" />
          <Property Name=""Delimiter"" Value=""_"" />
          <Property Name=""UppercaseSplit"" Value=""true"" />
        </Properties>
      </Tokenizer>
      <Converter Name=""Delimiter"">
        <Properties>
          <Property Name=""Prefix"" Value=""Col_"" />
          <Property Name=""Delimiter"" Value=""_""/>
          <Property Name=""Mode"" Value=""FirstUpper""/>
        </Properties>
      </Converter>
    </AutoConverter>
  </AutoConverters>
```
#### configure for SqlMaps
``` xml
    <!-- to current sql map -->
    <UseAutoConverter Name=""DelimiterConverter""/>

    <!-- disabled auto converter to current sql map -->
    <UseAutoConverter Disabled=""true""/>

    <!-- assign auto converter at statement -->
    <Statement Id=""AssignAutoConverterQuery"" AutoConverter=""PascalConverter"" >
        Select * From T_AutoConverter_1
    </Statement>
```

#### assign auto converter at RequestContext
``` csharp
            var list = SqlMapper.Query<AutoConverter_2>(new RequestContext
            {
                Scope = ""DefaultAutoConverter"",
                SqlId = ""AssignAutoFromRequestConverterQuery"",
                AutoConverterName = ""DelimiterConverter""
            });
```
",86915105
212,False,False,2019-08-30T09:50:19Z,2019-08-30T15:18:07Z,"1. fix StatementType parse bug for SmartSql.DataConnector
2. optimize FlushOnExecuted log
3. fix ISqlMapperExtensions SessionStore.Dispose bug
4. optimize PropertyTokenizer
5. fix #99 
6. fix #100 -> thx #101 
7. optimize #102 
8. add QueryDynamic/QueryDictionary extension for DbSession/SqlMapper
9. add support same [Scope] for mutil-sqlmap -> thx #104 ",86915105
213,False,False,2019-08-13T03:47:20Z,2019-08-13T04:00:31Z,"1. add AES/DES TypeHandler impl
2. init SmartSql.DataConnector
3. task builder register smartsql use alias for SmartSql.DataConnector
4. optimize Error log
5. optimize sourceParameterPrefix when null
6. SmartSql.DataConnector pack as tool
7. add support Mutil-Publisher-Subscriber for SmartSql.InvokeSync.RabbitMQ
8. add support Mutil-Publisher-Subscriber for SmartSql.InvokeSync.Kafka
9. add support DbCommandCreated event for CommandExecuter
10. fix #89 
``` powershell
Install-Package SmartSql.Oracle
```
``` csharp
 new SmartSqlBuilder().
    UseOracleCommandExecuter()
    ...
``` ",86915105
214,False,False,2019-07-30T05:33:47Z,2019-07-30T05:37:40Z,"1. add support Now-Tag
``` xml
    <Statement Id=""GetNow"">
      <Now Property=""CreateTime""/>
      Select @CreateTime;
    </Statement>
    <Statement Id=""UpdateDateTime"">
      <Now Property=""CreateTime""/>
      UPDATE T_AllPrimitive
      <Set>
        DateTime =@CreateTime
      </Set>
      Where Id=@Id
    </Statement>
```
``` log
Select @CreateTime;
Parameters:[CreateTime=2019/7/30 3:46:18]
Sql with parameter value: 
Select '2019/7/30 3:46:18'; (99204db3)
```
``` log
UPDATE T_AllPrimitive
       Set DateTime =@DateTime
      Where Id=@Id
Parameters:[DateTime=2019/7/30 11:38:13,Id=86088]
Sql with parameter value: 
UPDATE T_AllPrimitive
       Set DateTime ='2019/7/30 11:38:13'
      Where Id=86088 
```
2. add support Properties nest propExp
3. add UsePropertiesFromEnv api for SmartSqlBuilder
4. add CryptoTypeHandler api - pre
5. add IFunction api - pre",86915105
215,False,False,2019-07-29T12:48:18Z,2019-07-29T14:14:07Z,"1. add support IgnoreDbNull ofr SmartSqlConfig
2. add support AddTypeHandler for SmartSqlBuilder 
3. add GetSetParameterValue api for TypeHandler
4. add TypeScan
5. add RegisterEntity for SmartSqlBuilder
6. add support TypeHandler for Bulk api
7. add support Cache-Annotation with Cache-XML Mixed use
8. optimize PrepareStatement 
9. add support EnablePropertyChangedTrack/ReadDb/CommandTimeout for StatementAttribute",86915105
216,False,False,2019-07-27T02:20:35Z,2019-07-27T03:42:33Z,"1. add support CacheKeyTemplate for RequestContext
2. add Rest api for ICacheManager
3. add support for dynamic generation of SqlMap with Repository interface
``` csharp
    [Cache(""DateCache"", ""Lru"", FlushInterval = 6000)]
    [Cache(""LruCache"", ""Lru"", FlushInterval = 6000)]
    [Cache(""UserCache"", ""Fifo"", FlushOnExecutes = new[] {""UpdateUserName""})]
    public interface IUsedCacheRepository
    {
        [ResultCache(""DateCache"", Key = ""GetNow"")]
        [Statement(Sql = ""Select GetDate();"")]
        DateTime GetNow();

        [ResultCache(""LruCache"", Key = ""GetId:$id"")]
        [Statement(Sql = ""Select @id;"")]
        int GetId(long id);

        [ResultCache(""UserCache"", Key = ""GetUserById:$id"")]
        [Statement(Sql = ""select * from T_User where id=@id;"")]
        User GetUserById(long id);

        [Statement(Sql = ""update T_User set UserName=@userName where id=@id;"")]
        int UpdateUserName(long id, string userName);
    }
```",86915105
217,False,False,2019-07-26T05:27:46Z,2019-07-26T05:41:50Z,"1. Change Sample DB To SQLite And Fix SQLite ParameterPrefix 
2. add support [For-tag] nest-value-access 
3. optimize Check null-Tag.Property from XML-tag
4. optimize Check null-Tag.Property ExceptionMessage
5. add support Cache-Annotations for Repository-interface - Demo
``` csharp
    [Cache(""DateCache"", ""Lru"", FlushInterval = 6000)]
    [Cache(""LruCache"", ""Lru"", FlushInterval = 6000)]
    [Cache(""UserCache"", ""Fifo"", FlushOnExecutes = new[] {""UpdateUserName""})]
    public interface IUsedCacheRepository
    {
        [ResultCache(""DateCache"", Key = ""GetNow"")]
        [Statement(Sql = ""Select Now();"")]
        DateTime GetNow();

        [ResultCache(""LruCache"", Key = ""GetId:$id"")]
        [Statement(Sql = ""Select @id;"")]
        int GetId(long id);

        [ResultCache(""UserCache"", Key = ""GetUserById:$id"")]
        [Statement(Sql = ""select * from T_User where id=@id;"")]
        User GetUserById(long id);

        [Statement(Sql = ""update T_User set UserName=@userName where id=@id;"")]
        int UpdateUserName(long id, string userName);
    }
```
6. add support ColumnAttribute for EntityDeserializer
7. add support ColumnAttribute for RequestConvert
8. add support ParamAttribute for TypeHandler
9. add ResultType From ArrayType to Object for ExecuteScalar.
``` csharp
    [Annotations.Table(""t_annotation_entity"")]
    public class ColumnAnnotationEntity
    {
        [Annotations.Column(""id"", IsAutoIncrement = true)]
        public long Id { get; set; }

        [Annotations.Column(""name"")] public String Name { get; set; }

        [Annotations.Column(""extend_data"", TypeHandler = ""Json"")]
        public ExtendData Data { get; set; }

        public class ExtendData
        {
            public String Info { get; set; }
        }
    }
```
---
``` csharp
    public interface IColumnAnnotationRepository
    {
        ISqlMapper SqlMapper { get; }

        [Statement(Sql = ""Select Top 1 T.* From t_column_annotation_entity T where T.id=@id"")]
        ColumnAnnotationEntity GetEntity(long id);

        [Statement(Sql =
            ""INSERT INTO t_column_annotation_entity(name,extend_data)VALUES(@Name,@Data);Select Scope_Identity();"")]
        int Insert(ColumnAnnotationEntity entity);

        [Statement(Sql =
            ""INSERT INTO t_column_annotation_entity(name,extend_data)VALUES(@Name,@Data);Select Scope_Identity();"")]
        int Insert([Param(""Name"")] string name,
            [Param(""Data"", TypeHandler = ""Json"")] ColumnAnnotationEntity.ExtendData data);
    }
```",86915105
218,False,False,2019-07-24T15:00:36Z,2019-07-24T15:25:12Z,,86915105
219,False,False,2019-07-24T05:40:42Z,2019-07-24T05:46:35Z,"1. add support PropertyChanged for IsProperty-Tag
2. update SmartSqlMapConfig.EnablePropertyChangedTrack default=false
3. fix ResolveConfigPath with Env bug
4. add support OrderBy Tag -> ref #56
5. optimize deps-version
6. add PropertyTokenizer
7. add support nest object access by IGetAccessorFactory
8. add support nest object access -> ref #51 
``` csharp
[Fact]
        public void QueryNestObject1()
        {
            var result = SqlMapper.ExecuteScalar<int>(new RequestContext
            {
                RealSql = ""SELECT @User.Id"",
                Request = new {User = new {Id = 1}}
            });

            Assert.Equal(1, result);
        }

        [Fact]
        public void QueryNestObject2()
        {
            var result = SqlMapper.ExecuteScalar<int>(new RequestContext
            {
                RealSql = ""SELECT @User.Info.Id"",
                Request = new
                {
                    User = new
                    {
                        Info = new
                        {
                            Id = 1
                        }
                    }
                }
            });

            Assert.Equal(1, result);
        }

        [Fact]
        public void QueryNestArray()
        {
            var result = SqlMapper.ExecuteScalar<int>(new RequestContext
            {
                RealSql = ""SELECT @Order.Items[0]"",
                Request = new
                {
                    Order = new
                    {
                        Items = new int[] {1}
                    }
                }
            });

            Assert.Equal(1, result);
        }

        [Fact]
        public void QueryNestList()
        {
            var result = SqlMapper.ExecuteScalar<int>(new RequestContext
            {
                RealSql = ""SELECT @Order.Items[0]"",
                Request = new
                {
                    Order = new
                    {
                        Items = new List<int>
                        {
                            1
                        }
                    }
                }
            });

            Assert.Equal(1, result);
        }
```
``` xml
<?xml version=""1.0"" encoding=""utf-8"" ?>
<SmartSqlMap Scope=""NestTest"" xmlns=""http://SmartSql.net/schemas/SmartSqlMap.xsd"">
  <Statements>
    
    <Statement Id=""QueryNestObject2"">
      SELECT @User.Info.Id
    </Statement>

    <Statement Id=""QueryNestArray"">
      SELECT @Order.Items[0]
    </Statement>

    <Statement Id=""QueryNestDic"">
      SELECT @Order.Items[Id]
    </Statement>

    <Statement Id=""QueryNestArrayObject"">
      SELECT @Order.Items[0].Name
    </Statement>

    <Statement Id=""FilterNestObject1"">
      <IsEqual Property=""User.Id"" CompareValue=""1"">
        SELECT @User.Id
      </IsEqual>
    </Statement>

    <Statement Id=""FilterNestObject2"">
      <IsEqual Property=""User.Info.Id"" CompareValue=""1"">
        SELECT @User.Info.Id
      </IsEqual>
    </Statement>

    <Statement Id=""FilterNestArray"">
      <IsEqual Property=""Order.Items[0]"" CompareValue=""1"">
        SELECT @Order.Items[0]
      </IsEqual>
    </Statement>

    <Statement Id=""FilterNestDic"">
      <IsEqual Property=""Order.Items[Id]"" CompareValue=""1"">
        SELECT @Order.Items[Id]
      </IsEqual>
    </Statement>

    <Statement Id=""FilterNestArrayObject"">
      <IsEqual Property=""Order.Items[0].Name"" CompareValue=""SmartSql"">
        SELECT @Order.Items[0].Name
      </IsEqual>
    </Statement>
    
  </Statements>
</SmartSqlMap>
```",86915105
220,False,False,2019-07-19T07:00:35Z,2019-07-19T08:13:52Z,"1. add support EnablePropertyChangedTrack .ref #49 
``` csharp
            var entity = SqlMapper.GetById<AllPrimitive, long>(id0, true);
            entity.String = ""Updated"";
            SqlMapper.Update(entity);
```
-> only update **Changed** Property
``` log
Update T_AllPrimitive Set [String]=@String Where [Id]=@Id
```
or use IRepository
``` csharp
var entity=Repository.GetById(id);
entity.Name=""Updated"";
Repository.Update(entity)
```",86915105
221,False,False,2019-07-17T09:49:29Z,2019-07-17T14:17:08Z,"1. refactor FormatSql
2. refactor Middleware
3. add support IFilter
``` csharp
SmartSqlBuilder = new SmartSqlBuilder()
                .UseXmlConfig()
                .UseLoggerFactory(LoggerFactory)
                .UseAlias(GLOBAL_SMART_SQL)
                .AddFilter<TestPrepareStatementFilter>()
                .Build();
```
``` csharp
public class TestPrepareStatementFilter : IPrepareStatementFilter, ISetupSmartSql
    {
        private ILogger<TestPrepareStatementFilter> _logger;

        public void OnInvoking(ExecutionContext context)
        {
            _logger.LogDebug(""TestPrepareStatementFilter.OnInvoking"");
        }

        public void OnInvoked(ExecutionContext context)
        {
            _logger.LogDebug(""TestPrepareStatementFilter.OnInvoked"");
        }

        public Task OnInvokingAsync(ExecutionContext context)
        {
            _logger.LogDebug(""TestPrepareStatementFilter.OnInvokingAsync"");
            return Task.CompletedTask;
        }

        public Task OnInvokedAsync(ExecutionContext context)
        {
            _logger.LogDebug(""TestPrepareStatementFilter.OnInvokedAsync"");
            return Task.CompletedTask;
        }

        public void SetupSmartSql(SmartSqlBuilder smartSqlBuilder)
        {
            _logger = smartSqlBuilder.LoggerFactory.CreateLogger<TestPrepareStatementFilter>();
        }
    }
```",86915105
222,False,False,2019-07-10T03:52:01Z,2019-07-10T03:59:32Z,1. fix #77 ,86915105
223,False,False,2019-07-03T07:24:33Z,2019-07-05T15:36:42Z,"1. refactor SnowflakeId support ToIdString -> {yyyyMMddHHmmssfff}{machineId}{sequenceId}
2. refactor sync proj
3. add Kafka Sync Imlp
4. refactor Cahce
5. add support #57 ( Using MQ to handle the final consistency of memory-level caches in Service Clusters )",86915105
224,False,False,2019-06-17T03:48:18Z,2019-06-17T04:09:26Z,"1. change BeginTransaction return DbTransaction
2. fix #72 
3. add IRepositoryProxy to DyRepositoryImpl
4. add IsNotProperty Tag",86915105
225,False,False,2019-06-11T09:47:59Z,2019-06-11T09:55:49Z,"1. add SmartSql.InvokeSync proj
2. add SmartSql.InvokeSync.Kafka proj
3. add SmartSql.InvokeSync.RabbitMQ proj
4. add ISyncFilter for InvokeSync
5. add ISubscriber for InvokeSync
6. add ValidateParameterMiddleware
7. add ValidateResultMiddleware
8. fix Statement DataSourceChoice bug 
9. add support ConcatString Property Expr for Properties
10. fix #69 
11. add UseCacheManager for SmartSqlBuilder
12. refactor CacheManager
13. fix #70 
14. fix #71 ",86915105
226,False,False,2019-05-24T08:10:04Z,2019-05-24T15:06:23Z,"1. add CustomSnowflakeId
2. add support MultipleResultMap for ValueTupleDeserializer
3. add support Colon Key for Properties
4. add InvokeSucceedListener (support approximate-real-time synchronization to other storage(e.g. ElasticSearch))
",86915105
227,False,False,2019-04-28T13:04:37Z,2019-04-28T13:10:43Z,"1. add support SmartSql.Bulk.MySqlConnector
2. add support AOPTransaction to DyRepository interface [Not recommended]
3. add some Geometric/Network Address/Arrays Types for PostgreSql TypeHandler
4. add UnknownTypeHandler
5. fix missing exception stack problem.
6. fix Postgresql JsonTypeHandler bug
7. add support CustomDeserializer.
8. add support CommandTimeout 
``` csharp
    <Statement Id=""Query"" CommandTimeout=""3"">
      SELECT
      <IsNotEmpty Prepend=""Top"" Property=""Taken"">
        (@Taken)
      </IsNotEmpty>
      T.* From T_User T
      <Include RefId=""QueryParams"" />
      <Switch Prepend=""Order By"" Property=""OrderBy"">
        <Default>
          T.Id Desc
        </Default>
      </Switch>
    </Statement>
```
or
``` csharp
RequestContext.CommandTimeout=3
```
9. add support return DictionaryStringObject",86915105
228,False,False,2019-04-18T12:58:10Z,2019-04-18T13:02:32Z,"1. Bypass the caching policy after opening a transaction
2. add TransactionMiddleware
3. add SmartSql.DyRepository.Annotations.UseTransactionAttribute
``` csharp
        [UseTransaction]
        long DoByAnnotationTransaction(AllPrimitive entity);
```

``` xml
 <Statement Id=""DoByTransaction"" Transaction=""Unspecified"">
// do-something-0 
// do-something-1
// do-something-2 
// do-something-3 
</Statement>
```

``` csharp
            var id = DbSession.ExecuteScalar<long>(new RequestContext
            {
                Scope = nameof(User),
                SqlId = ""Insert"",
                Transaction = IsolationLevel.Unspecified,
                Request = new User
                {
                   UserName= ""SmartSql"",
                }
            });
```
",86915105
229,False,False,2019-04-18T02:50:33Z,2019-04-18T04:15:10Z,"1. support multiple-IdGenerator
2. add DbSequence
3. add ISetupSmartSql 
---
https://www.smartsql.net/guide/id-generator.html",86915105
230,False,False,2019-04-11T09:26:50Z,2019-04-12T02:59:49Z,"1. add support nest AOP.TransactionAttribute
2. fix Bulk.SqlServer bug
3. add BulkExtensions",86915105
231,False,False,2019-04-04T06:43:09Z,2019-04-07T02:47:40Z,"1. fix Cache.FlushOnExecute bug
2. fix Fifo & Lru CacheKey exists bug",86915105
232,False,False,2019-04-03T14:36:55Z,2019-04-03T14:57:51Z,add ValueTupleDeserializer,86915105
233,False,False,2019-04-02T10:15:46Z,2019-04-03T04:06:47Z,"1. add SmartSql.AOP 
2. add SmartSql.Extensions
3. add XmlTypeHandler
4. add support String convert to DateTime
5. add support CommandExecuter Diagnostics 
6. add DbSession.Invoke & CommandExecuter.Execute Time Taken log
7. fix StoredProcedure bug",86915105
234,False,False,2019-04-01T02:17:20Z,2019-04-01T02:20:21Z,"## SmartSql-V4

- Execute flow refactoring (pipeline-middleware mode)
- Increase unit Test coverage
- IDataReaderDeserializer
  - DynamicDeserializer
  - EntityDeserializer
  - MultipleResultDeserializer
  - ValueTypeDeserializer
- Custom Tags
  - Script Tag
- TypeHandler refactoring
- CUD Auto Implementation (configuration Entity.tablename required)
- Dynamic Proxy Repository Refactoring
- Multi-configuration Source loader support
  - XmlConfigLoader
    - File
    - Embedded
- Minimize the running environment(only DataSource)
- Diagnostics support
- DI Use experience optimization
- SmartSql.Batch -> SmartSql.Bulk
- IdGenerator
- add support Tag.Required
- add support external Properties
- Generic-RequestContext to Improve performance (Incompatibility change)",86915105
235,False,True,2019-03-29T17:17:08Z,2019-03-29T17:23:57Z,"1. add support Range Tag 
2. fix Dynamic Tag bug
3. change typehander interface
4. support name-typehandler-mapping
5. change xmlns
6. remove MultipleResultMap.Result.Index
7. support For.Tag BuildItemSql_NotDirectValue 
8. fix Tag.GetDbProviderPrefix bug
9. fix ExecuteScalar return null value bug
10. optimize CacheManager
11. support TransactionWrap Extensions
12. fix IRepository.ISqlMapper bug
13. support Flexible-TypeHanlder
14. support Char to Boolean 
15. support String to Boolean
16. Generic-RequestContext to Improve performance (Incompatibility change)
17. optimize UseCache 
18. optimize TypeHandlerCache
19. support List to DataTable
20. optimize TypeHandler to Improve performance
21. support FieldType for TypeHandler
22. add support Where.Min
23. set [Set] tag DEFAULT_MIN=1
24. add ParamAttribute.FieldType",86915105
236,False,True,2019-03-21T04:05:04Z,2019-03-21T05:30:58Z,"1. add support external Properties
2. add support XmlConfigBuilder logger
3. add support UseProperties(this SmartSqlBuilder smartSqlBuilder, IConfiguration configuration)
4. add XSD nuget ->  https://www.nuget.org/packages/SmartSql.Schema/4.0.0-rc6",86915105
237,False,True,2019-03-20T06:58:01Z,2019-03-20T07:08:42Z,"1. fix from cache bug
2. fix Async bug
3. add support Tag.Required
4. add support Dynamic & Set & Where & Include Required check.",86915105
238,False,True,2019-03-17T14:06:20Z,2019-03-17T14:08:07Z,"## SmartSql-V4

- Execute flow refactoring (pipeline-middleware mode)
- Increase unit Test coverage
- IDataReaderDeserializer
  - DynamicDeserializer
  - EntityDeserializer
  - MultipleResultDeserializer
  - ValueTypeDeserializer
- Custom Tags
  - Script Tag
- TypeHandler refactoring
- CUD Auto Implementation (configuration Entity.tablename required)
- Dynamic Proxy Repository Refactoring
- Multi-configuration Source loader support
  - XmlConfigLoader
    - File
    - Embedded
- Minimize the running environment(only DataSource)
- Distributed Cache Refactoring
- Diagnostics support
- DI Use experience optimization
- SmartSql.Batch -> SmartSql.Bulk
- IdGenerator

---

- 执行流重构（管道-中间件模式）
- 增加单元测试覆盖率
- IDataReaderDeserializer
  - DynamicDeserializer
  - EntityDeserializer
  - MultipleResultDeserializer
  - ValueTypeDeserializer
- 自定义标签
  - Script Tag
- TypeHandler 重构
- CUD 自动实现 (需配置Entity.TableName)
- 动态代理仓储重构
- 多配置源加载器支持
  - XmlConfigLoader
    - File
    - Embedded
- 最小化可运行环境（only DataSource）
- 分布式缓存重构
- Diagnostics 支持
- DI 使用体验优化
- SmartSql.Batch -> SmartSql.Bulk
- IdGenerator",86915105
239,False,False,2018-12-05T07:25:59Z,2018-12-10T09:21:50Z,"1. optimize Cache
2. optimize Redis.Paramter.DatabaseId
3. add Redis.expiryInterval
4. fix For repeated parameter bug
5. fix Nullable Anonymous type bug
6. fix QuerySingle and ExecuteScalar return Nullable ValueType bug.
7. add Oracle BooleanTypeHandle
8. add SmartSql.TypeHandler.PostgreSql
9. fixed SmartSql.Options.TypeHandler bug",86915105
240,False,False,2018-10-30T05:42:06Z,2018-10-30T05:43:09Z,1. add support SmartSql.Batch,86915105
241,False,False,2018-10-26T07:03:52Z,2018-10-26T09:27:46Z,"1. fix AnonymousType Cache type bug
2. add SqlParamAnalyzer 
3. optimize CacheKey
4. optimize Sql-In syntax
5. optimize SqlText check Sql-In  syntax
6. fix [Scope Or SqlId] repeated conflicts throw explicit error.
",86915105
242,False,False,2018-10-21T13:26:39Z,2018-10-21T13:28:10Z,1. fix #42 ,86915105
243,False,False,2018-10-11T10:48:58Z,2018-10-11T10:53:07Z,"1. fixed Dynamic child first tag is SqlText ignore prepend bug.
2. add IRepository  Build Internal Get
3. add RepositoryExtensions SessionWrap and TransactionWrap",86915105
244,False,False,2018-09-30T19:16:50Z,2018-09-30T19:22:17Z,"1. Enhanced RequestContext For CacheMap/ParameterMap /ResultMap/MultipleResultMap
2. u DbConnectionSession.Dispose LogLevel
3. add SmartSql.AOP
4. fixed Dynamic child nest tag ignore prepend bug.
5. fixed RequestContext.ReadDb Default bug.
6. add SmartSql.Extensions.IgnoreDataSourceChoiceFilter
7. add SmartSql.Extensions.IgnoreDataSourceChoiceFilter_Tests
",86915105
245,False,False,2018-09-26T04:57:31Z,2018-09-26T10:35:16Z,"1. fixed Fot tag Parameter rename bug
2.  support [For] Tag use ParameterMap",86915105
246,False,False,2018-09-25T06:22:58Z,2018-09-25T06:39:08Z,"1. add MapperContainer.Instance.GetSqlMapperByAlias
2. fixed Log out put for In Params
3. fixed ExecuteScalar return null value",86915105
247,False,False,2018-09-18T13:31:41Z,2018-09-18T13:34:33Z,"1. support cross SqlMap reference for #30   …
2. modifying Statement.Ref for delay dependence
3. optimize Analyse Statement.SqlCommandType
4. optimize CheckIncludeCyclicDependency
5. fixed MultipleResultMap.Root result Map
6. fixed PreparedCommand Sql log output for IgnoreParameterCase",86915105
248,False,False,2018-09-09T13:45:36Z,2018-09-09T13:48:44Z,"1. add support Statement for Transaction
2. optimize Log output for issues:35
3. add support [.] PropertyAccessor
4. add support alias for SmartSqlOptions",86915105
249,False,False,2018-09-04T08:21:22Z,2018-09-04T08:32:00Z,"1. fixed ObjectUtils key conflicts
2. add support for SmartSqlMapper multiple instance injection
3. add support for IServiceProvider.GetSmartSqlMapper(string configPath)

``` csharp
      var smartSqlMapper = serviceProvider.GetSmartSqlMapper(""SmartSql"");
      var smartSqlMapper_1 = serviceProvider.GetSmartSqlMapper(""SmartSql-1"");
```

4. optimize Options DI for SmartSqlOptions.UseOptions

``` csharp
            var builder = new ConfigurationBuilder()
                .SetBasePath(Directory.GetCurrentDirectory())
                 .AddJsonFile(""SmartSqlConfig.json"", false, true);

            var configuration = builder.Build();
            var services = new ServiceCollection();

            services.AddOptions();
            var smartSqlConfigJson = configuration.GetSection(""SmartSqlConfig"");
            services.Configure<SmartSqlConfigOptions>(""SmartSql"", smartSqlConfigJson);

            services.AddSmartSql(sp =>
            {
                return new SmartSqlOptions
                {
                     ConfigPath= ""SmartSql""
                }.UseOptions(sp);
            });
```",86915105
250,False,False,2018-08-28T09:30:51Z,2018-08-28T10:07:26Z,"1.  added support Root for MultipleResultMap
2.  added support ReadDb for Statement
3.  optimized PreparedCommand.Prepare log output",86915105
251,False,False,2018-08-23T16:27:41Z,2018-08-23T17:10:33Z,"1. optimized ITransaction Extension
2. default injection SmartSql for AddRepository DI
3. fixed path error for SmartSql.Options
4. fixed SqlCommandAnalyzer
5. add SqlIdNamingConvert",86915105
252,False,True,2018-08-05T13:09:23Z,2018-08-05T14:07:44Z,"1. add MultipleResultMap
2. add GetNested api
2. add GetNestedAsync api
3. add FillMultiple api
4. add FillMultipleAsync api
5. optimized ValueTuple result type for Repository
6. add support Nested result type for Repository

``` xml
    <MultipleResultMap Id=""QueryByPageMReuslt"">
      <Result Property=""Total""/>
      <Result Property=""List""/>
    </MultipleResultMap>
    <Statement Id=""MQueryByPage"" MultipleResultMap=""QueryByPageMReuslt"">
      Select Count(1) From T_Entity;
      Select Top 10 T.* From T_Entity T
    </Statement>
```
``` csharp
    public class QueryByPageResponse
    {
        public int Total { get; set; }
        public IEnumerable<T_Entity> List { get; set; }
    }

QueryByPageResponse MQueryByPage();
```",86915105
253,False,False,2018-08-02T10:35:51Z,2018-08-02T16:17:26Z,"1. enhanced Maps.Statement support for CommandType and SourceChoice
2. fixed Tag.For NotDirectValue bug
3. optimized RequestContext.Request is DbParameterCollection",86915105
254,False,False,2018-08-01T07:45:20Z,2018-08-01T13:44:49Z,"1. fixed Generic nested return value bug
2. optimized DyRepository DI register
3. fixed the same naming problems with different repository interfaces
4. enhanced stored procedure support
5. fixed the cache penetration problem with the cache value of null
6. optimized storage procedure call interface construction",86915105
255,False,False,2018-07-25T16:14:12Z,2018-07-25T16:15:57Z,"1. add support ValueTuple result
``` csharp
(IEnumerable<T_Entity>, int) QueryMultiple_VT();
```",86915105
256,False,False,2018-07-25T13:39:32Z,2018-07-25T13:40:30Z,1. add support SmartSqlMapConfig.SmartSqlMap.Type=DirectoryWithAllSub,86915105
257,False,False,2018-07-25T06:09:50Z,2018-07-25T06:13:53Z,"1.  add support QueryMultiple and QueryMultipleAsync
2.  SmartSql.DyRepository add support QueryMultiple And QueryMultipleAsync result
3.  support change table structure auto Deserializer
4.  SmartSql.Options add UserOptions for DI
5.  add support Env SmartSqlConfigPath
    - 5.1 Production => SmartSqlMapConfig.xml
    - 5.2 Development => SmartSqlMapConfig.Development.xml
    - 5.3 Staging => SmartSqlMapConfig.Staging.xml",86915105
258,False,False,2018-07-21T17:06:22Z,2018-07-21T17:14:09Z,1. add support QueryMultiple and QueryMultipleAsync,86915105
259,False,False,2018-07-21T08:50:39Z,2018-07-21T08:53:58Z,1. fix DyRepository ExecuteBehavior.Auto bug,86915105
260,False,False,2018-07-19T14:15:23Z,2018-07-19T14:23:02Z,"1. optimize DyRepository automatic execute for return int
2. optimize default excute DataSourceChoice 
3. add support StatementAttribute.CommandType and SourceChoice
",86915105
261,False,False,2018-07-19T02:30:41Z,2018-07-19T05:14:09Z,"1. fix sqlmap hot update bug
2. add support multi SmartSqlMapper instance 
3. fix Tag.Placeholder Space bug
4. optimize SQL output
5. Support for returning generic type nesting
6. add support IRepositoryAsync 
7. add support muti custom scope_template
8. fix Cache.FlushInterval attr bug
9. optimize the resource reading directory",86915105
262,False,False,2018-07-01T14:01:33Z,2018-07-02T01:40:28Z,"1. fix GetDataSetAsync to use NextResultAsync
2. fix IsStatementSql.Defalut-Value=true
3. SmartSql.DyRepository support ParamAttribute
4. add SmartSql.Options DI AddSmartSqlOptionLoader & AddSmartSqlOption",86915105
263,False,False,2018-06-26T15:22:17Z,2018-06-26T15:24:07Z,"1. add ISession
2. add ITransaction     
3. add ISession to DI
4. add ITransaction to DI
5. add ISmartSqlMapperAsync to DI",86915105
264,False,False,2018-06-25T14:47:21Z,2018-06-25T14:50:20Z,"- add support ResultMap.Constructor
- add support private ctor entity deser",86915105
265,False,False,2018-06-13T13:50:17Z,2018-06-13T13:53:08Z,"1. SmartSql.DyRepository add support asynchronous function
2. add support DEBUG-log output SQL And DBParameters.",86915105
266,False,False,2018-06-11T09:40:12Z,2018-06-11T09:50:19Z,"1. add support pure SQL parameters For RequestContext.RealSql
2. add support SmartSql.DyRepository Sql Attribute For StatementAttribute.Sql

> SmartSql.DyRepository Demo
``` csharp
        [Statement(Sql = ""Select Top(@Taken) T.* From T_Entity T With(NoLock);"")]
        IEnumerable<T_Entity> QueryBySql(int Taken);
```",86915105
267,False,False,2018-06-09T15:43:18Z,2018-06-09T15:44:44Z,"1. add GetDataTable Method
2. add GetDataSet Method
3. add GetDataTableAsync Method
4. add GetDataSetAsync Method",86915105
268,False,False,2018-06-03T14:03:54Z,2018-06-04T05:41:12Z,"# SmartSql V3 Update

> The lightest ORM in history! **107kb**

## Update content

1. Remove Dapper dependency
2. Support stored procedures
3. Enhanced extensibility
4. Refactoring code
5. Optimal cache trigger strategy
6. Dynamic implementation of Repository interface
7. Support Parameter & Result Map & TypeHandler
8. High performance

## Performance evaluation

``` ini

BenchmarkDotNet=v0.10.14, OS=Windows 10.0.17134
Intel Core i7-6700K CPU 4.00GHz (Skylake), 1 CPU, 8 logical and 4 physical cores
.NET Core SDK=2.1.201
  [Host]     : .NET Core 2.0.7 (CoreCLR 4.6.26328.01, CoreFX 4.6.26403.03), 64bit RyuJIT
  DefaultJob : .NET Core 2.0.7 (CoreCLR 4.6.26328.01, CoreFX 4.6.26403.03), 64bit RyuJIT

```
|            ORM |                     Type |                  Method |        Return |      Mean |     Error |    StdDev | Rank |     Gen 0 |     Gen 1 |     Gen 2 | Allocated |
|--------------- |------------------------- |------------------------ |-------------- |----------:|----------:|----------:|-----:|----------:|----------:|----------:|----------:|
|         Native |         NativeBenchmarks |   Query_GetValue_DbNull | IEnumerable`1 |  78.39 ms | 0.8935 ms | 0.7921 ms |    1 | 3000.0000 | 1125.0000 |  500.0000 |  15.97 MB |
|       SmartSql |       SmartSqlBenchmarks |                   Query | IEnumerable`1 |  78.46 ms | 0.2402 ms | 0.1875 ms |    1 | 2312.5000 | 1000.0000 |  312.5000 |  12.92 MB |
| SmartSqlDapper | SmartSqlDapperBenchmarks |                   Query | IEnumerable`1 |  78.65 ms | 1.2094 ms | 1.1312 ms |    1 | 3687.5000 | 1437.5000 |  687.5000 |  19.03 MB |
|         Native |         NativeBenchmarks | Query_IsDBNull_GetValue | IEnumerable`1 |  78.84 ms | 0.8984 ms | 0.7502 ms |    1 | 2312.5000 | 1000.0000 |  312.5000 |  12.92 MB |
|         Dapper |         DapperBenchmarks |                   Query | IEnumerable`1 |  79.00 ms | 1.0949 ms | 0.9706 ms |    1 | 3312.5000 | 1312.5000 |  625.0000 |  17.19 MB |
|             EF |             EFBenchmarks |                   Query | IEnumerable`1 |  79.44 ms | 1.6880 ms | 1.5789 ms |    1 | 6250.0000 |         - |         - |  26.05 MB |
|       SqlSugar |       SqlSugarBenchmarks |                   Query | IEnumerable`1 |  81.09 ms | 0.8718 ms | 0.7728 ms |    2 | 2187.5000 |  875.0000 |  250.0000 |  12.64 MB |
|          Chloe |          ChloeBenchmarks |                   Query | IEnumerable`1 |  83.86 ms | 1.2714 ms | 1.1893 ms |    3 | 2250.0000 |  937.5000 |  312.5000 |  12.62 MB |
|             EF |             EFBenchmarks |                SqlQuery | IEnumerable`1 |  89.11 ms | 0.7562 ms | 0.6314 ms |    4 | 8187.5000 |  125.0000 |         - |  33.68 MB |
|             EF |             EFBenchmarks |        Query_NoTracking | IEnumerable`1 |  93.13 ms | 0.8458 ms | 0.7912 ms |    5 | 5875.0000 | 2250.0000 | 1062.5000 |  29.71 MB |
|             EF |             EFBenchmarks |     SqlQuery_NoTracking | IEnumerable`1 | 106.89 ms | 1.0998 ms | 1.0288 ms |    6 | 7437.5000 | 2875.0000 | 1312.5000 |  37.34 MB |",86915105
269,False,False,2018-03-25T12:32:08Z,2018-03-25T12:34:47Z,"1. remove In Tag Attribute
2. add TransactionWrap Extend
3. fix cache bug
4. For tag support object instance.",86915105
270,False,False,2018-03-06T08:14:26Z,2018-03-07T03:22:47Z,"- add Placeholder Tag.
- add Set Tag.",86915105
271,False,False,2017-12-27T09:31:57Z,2018-01-03T02:42:34Z,"0. support Dynamic Tag nest Include Tag.
1. fixed [IsGreaterEqual/IsLessEqual/IsLessThan  tag] null reference bug.
2. fixed [IsProperty  tag] IsCondition bug .
3. fixed RequestContext.Request bug.",86915105
272,False,False,2017-11-07T07:02:58Z,2017-11-07T07:07:32Z,"0. add [For Tag] to support iterate. 
1. add support global parameter prefix (defalut=$). 
2. add [Env Tag]  to support different DBProvider. 
3. update Schemas to support above features. 
4. fixed [IsGreaterEqual Tag] has childTag throw error",86915105
273,False,True,2017-11-03T09:50:13Z,2017-11-03T09:51:33Z,"0.  add [For Tag] to support iterate. 
1.  add support global parameter prefix (defalut=$). 
2.  add [Env Tag]  to support different DBProvider. 
3.  update Schemas to support above features.",86915105
274,False,False,2017-10-24T06:23:49Z,2017-10-24T06:26:29Z,"- 1. add IsNotEmpty & IsEmpty Tag array judge
- 2. support DynamicParameters for RequestContext.Request .
- 3. fixed cache invalidation problem after used DynamicParameters for RequestContext.Request .",86915105
275,False,False,2017-10-08T14:48:47Z,2017-10-08T14:50:08Z,,86915105
276,False,False,2017-09-19T06:33:34Z,2017-09-19T06:38:02Z,"1. fixed cache (FIFO & LRU) no FlushInterval parameter throw exception.
2. add support for unlimited nesting of Include tags.
3. fixed the first Child Tag [Dynamic Tag] is [Include Tag] problem.
4. add support for Include tag Prepend properties.
5. fixed partial cache hit invalidation when requested include IEnumerable type parameters
6. fixed a problem with the SmartSql local file hot update in some scenes that could not get the configuration file.
",86915105
277,False,False,2017-09-13T03:13:43Z,2017-09-13T03:18:24Z,,86915105
278,False,False,2017-09-01T10:10:49Z,2017-09-07T02:26:27Z,,86915105
279,False,False,2017-08-16T14:20:21Z,2017-08-16T14:22:21Z,,86915105
280,False,False,2017-08-16T08:23:25Z,2017-08-16T08:27:50Z,,86915105
281,False,False,2017-08-14T06:00:56Z,2017-08-15T01:30:12Z,,86915105
282,False,False,2017-08-10T06:39:26Z,2017-08-10T06:46:08Z,"1.  add support  Where Tag ,Yes, it is time to remove where 1 = 1.",86915105
283,False,False,2017-08-09T03:21:50Z,2017-08-09T03:27:52Z,"1.  add support  SmartSqlMapConfig.SmartSqlMaps.SmartSqlMap.Type:Directory.
2.  add support  partial SmartSqlMap.xml like partial class.",86915105
284,False,False,2017-07-24T07:35:51Z,2017-07-24T07:40:59Z,"- fix switchTag infinite nested problems 
- add caseTag  infinite nested support ",86915105
285,False,False,2017-07-19T08:15:06Z,2017-07-20T06:35:17Z,,86915105
286,False,False,2020-03-24T19:57:15Z,2020-03-24T20:12:23Z,"Dear MooseFS Users,

MooseFS 3.0.112 is now stable!

This release is a bugfix and feature release. It introduces support for disabling individual filesystem commands in Master Server (configurable in `mfsexports.cfg`) and respecting them on the Client side (issue #344). It also adds support for `STRICT` and `LOOSE` mode in `KEEP` and `ARCHIVE` (issue #249). This release fixes various other issues too, including a workaround for Linux kernel bug related to `EBUSY` issue by adding directory entry invalidator (issue #98).

We would like to thank all the contributors who helped us making this release, especially (alphabetically):
@borkd, @Damien9527, @linux-ops, @MonkeyFang, @onlyjob, @pault28, @tnktls.
Thank you for all your valuable input, help and making MooseFS better!

*(If I forgot to mention somebody, I am very sorry and please let me know!)*

Please find a complete list of fixes and new features that this release includes below:

 * (cs) silence stupid compiler warning
 * (client) fixed handling `LOCKED` and `EAGAIN` status in `readdata`
 * (client) added handle info to `.oplog` messages
 * (all) added support for disabling individual filesystem commands in `mfsexports.cfg`
 * (client) added handling `read`/`write`/`readdir` disables on client side (better error messages)
 * (client) added session paramaters to `.params` file
 * (tools) fixed packet reallocation error
 * (master) changed `syslog` message for locked chunks
 * (client) added `dentry` invalidator (needed in Linux with kernel < 4.19 – `EBUSY` issue)
 * (master) fixed memory leaks in `xattr` and `posixacl` modules
 * (cs) when chunk can't be located always send to master info about lost chunk
 * (supervisor, master, cs) fixed buffer overrun in `mastersupervisor` code (HA only, intr. in 3.0.107)
 * (master) changed algorithm of reusing `csid` in chunk module (adding released `csid` to the end of free list)
 * (all) added support for `STRICT` and `LOOSE` mode in `KEEP` and `ARCHIVE`
 * (master) fixed segfault during appending chunks of file with positive length and no chunks
 * (metadump) fixed bugs introduced in version 3.0.106
 * (master) added protection between never-ending desyncing between newer LEADER and older FOLLOWER (HA only)
 * (master) fixed slices with `to` set to 0 in `mfsappendchunks`
 * (master) removed starting protection time from client communication module
 * (man) fixed typo in `mfsappendchunks` man page

Best regards,
Piotr / MooseFS Team",50505775
287,False,False,2020-02-19T18:02:03Z,2020-02-19T18:05:15Z,"Dear MooseFS Users,

MooseFS 3.0.111 is now stable! This release adds protections against segfaults in MooseFS Chunkserver module (issue #342).

We would like to thank @onlyjob and @uu for reporting the issue. Thank you for all your valuable input, help and making MooseFS better!

Please find a complete list of fixes and new features that this release includes below:

* (cs) added protections against segfaults (issue #342)
* (cs) removed unnecessary error messages

Best regards,
Piotr / MooseFS Team",50505775
288,False,False,2020-02-13T16:43:48Z,2020-02-13T16:57:43Z,"Dear MooseFS Users,

MooseFS 3.0.110 is now stable! This release is a bugfix release mainly. It addresses issues related to handling duplicated chunks, placing chunks in subfolders on Chunkservers, internal rebalance, fixes FreeBSD-related issues and adds a few other minor fixes.

This release also introduces several new config options, new logo and favicon in MFS CGI interface and possibility to dump non-printable characters in metadata dumper.

We would like to thank all the contributors who helped us making this release, especially (alphabetically):  @borkd, @jSML4ThWwBID69YC, @onlyjob and @smurfix. Thank you for all your valuable input, help and making MooseFS better!

*(If I forgot to mention somebody, I am very sorry and please let me know!)*

Please find a complete list of fixes and new features that this release includes below:

* (cs) fixed bug that may lead to creating much more chunks in one subfolder (issues #319, #326)
* (cs) added option for controlling subdirectory selection algorithm for newly created chunks (issues #319, #326)
* (cs) prevent potential dumping deleted chunks to `.chunkdb`
* (client) added options for setting behaviour when master returns unavailable chunks or no space status (issue #322)
* (cgi) fixed logo and icon (file type for `favicon.ico`, change to current logotype – issue #328)
* (master) turning off sending NOPs to unregistered clients (`matoml` module)
* (cs) fixed reporting wrong number of hours in duplicates removal message
* (cs) redesigned duplicates removal procedure to do it in groups of 100 files (issue #327)
* (cs) introduce `mypread` and `mypwrite` macro (code cleaning)
* (cs) added check for changed CRC before every chunk file close (just in case)
* (cs) never use open chunk as a chunk duplicate that needs to be deleted
* (cs) never use disk with pending duplicates as destination disk during internal rebalance (issue #327)
* (cs) fixed condition in internal rebalance procedure (issue #327)
* (cs) added option for setting duplicates retention time in hours (issue #333)
* (cs) fixed memory leak in removing disk with duplicates
* (cs) removed unnecessary attribute reading when chunk duplicates are detected (issue #327)
* (cs) changed allocation of duplicated chunks from malloc to mmap, decreased memory usage by duplicates
* (client) reading in `O_WRONLY` no longer causes `EACCES` (might be related to issue #334)
* (metadump) printing dots for non-printable characters made optional (issue #332)

Best regards,
Piotr / MooseFS Team",50505775
289,False,False,2019-11-30T11:17:06Z,2019-11-30T12:00:55Z,"Dear MooseFS Users,

MooseFS 3.0.109 is now stable! This release fixes one minor bug in MooseFS CGI Server introduced in 3.0.108 and adds a possibility to allow starting MooseFS Chunkserver with invalid entries in `mfshdd.cfg`.

We would like to thank all the contributors who helped us making this release. Thank you for all your help!

Please find the list of fixes and new features that this release includes below:

 * (mfscgiserv) fixed handling redirects (bug introduced in 3.0.108)
 * (cs) added allowance for starting with invalid entries in `mfshdd.cfg`

Best regards,
Piotr / MooseFS Team",50505775
290,False,False,2019-11-30T11:16:24Z,2019-11-30T11:54:33Z,"Dear MooseFS Users,
MooseFS 3.0.108 is now stable! This release is a bugfix release.

We would like to thank all the contributors who helped us making this release, especially (alphabetically):  @onlyjob, @Programie, @xandrus. Thank you for all your help!

*(If I forgot to mention somebody, I am very sorry and please let me know!)*

Please find the list of fixes that this release includes below:

 * (cli+cgi) fixed bug related to `masterinfolist`
 * (master) fixed sign in reporting time difference
 * (cgiserv) added `content-type: text/plain` to cgi outputs with errors
 * (master) fixed `rmdir` packet size

Best regards,
Piotr / MooseFS Team",50505775
291,False,False,2019-11-11T08:34:19Z,2019-11-11T08:54:31Z,"Dear MooseFS Users,
Long-awaited MooseFS 3.0.107 is now stable!

This release is mainly a bugfix release (and includes *a lot* of fixes). **We strongly recommend to upgrade to this latest version!** This release also introduces some new features, including **support for `libfuse3`**.

We would like to thank all the contributors who helped us making this release, especially (alphabetically): @eleaner, @hradec, @itongqingbo, @njaard, @onlyjob, @steffenb7333. Thank you for all your help!

*(If I forgot to mention somebody, I am very sorry and please let me know!)*

Please find the list of fixes and new features that this release includes below:

 * (master) added NOP command to changelog
 * (master+supervisor) added time check
 * (cs) fixed behaviour when job queue is full
 * (cli+cgi) added time data to master servers
 * (cs) fixed NOP packets ping-pong
 * (client) fixed NOP flooding in write module
 * (cs) fixed race condition in `bgjobs` module (`jobhash`)
 * (cs+mount) added new status returned to mount when queue is full and support for it in client module
 * (mount) added initial support for `libfuse3` (related to issue #302)
 * (mount) added support for `readdirplus` (related to issue #302)
 * (mount) workaround for bug in `fuse` (wrong `lock_owner` in flush – issue #305)
 * (mount) fixed deadlock in `readdata.c` (closes issue #306)
 * (mount+master) fixed few small issues related to POSIX compliance (checked by pjd fstest)
 * (all) changed preferred C standard from C99 to C11 and added tests for atomics
 * (mount) move read/write structures initialization from open to read/write
 * (mount,mfsio) added new `inode->fleng` map
 * (configure) added option `disable_all`, added summary at the end
 * (freebsd) detecting new `fuse` version in the kernel and adjusting behaviour
 * (tools) better handling of unrecognized options
 * (master) better hard links handling
 * (master) added limit for number of hardlinks allowed for one object
 * (master) added option for automatic removal of unused chunkservers (issue #247)
 * (metadirinfo) fixed segfault when output filename is not specified
 * (chunktool) added file name fixing option (issue #276)
 * (all) changed chunk replication and deletion charts into two-color charts (successful/unsuccessful – issue #273)
 * (all) added new charts with number of chunk creations and internal changes (also successful and unsuccessful)
 * (master) added ignoring chunk with id zero sent from chunkserver
 * (metadump) added option for dumping parts of metadata
 * (master) added more logs to background data write subprocess (related to issue #280)
 * (master) fixed LEADER/FOLLOWER desync on SETCHUNK command (pro only)
 * (cli+cgi) fixed shebang in `python` scripts (preference for `python3` in configure)
 * (master) changed pipe in `bgsaver` to nonblocking mode
 * (master) added check if the background saving process is alive
 * (master) added lockfile for background saving process
 * (master) added protection against time going back in the free inodes list
 * (master) added protection in FOLLOWER against not keeping up with the LEADER (pro only)
 * (master) changed condition for removing chunk from data structures (all chunkservers have to be connected)
 * (master) added `restore` run mode (works similar to `mfsmaster -a` but without running daemon)
 * (master) take write replication counters into account in server ordering for new chunk creations
 * (master) changed calculating replication limits in chunk rebalance procedure (using actual usage difference)

Best regards,
Piotr / MooseFS Team",50505775
292,False,False,2019-05-27T09:57:51Z,2019-05-27T10:07:57Z,"MooseFS 3.0.105 is now stable! This release is mainly a bugfix release, however it also introduces a new feature of specifying subfolder for Block Devices on MooseFS.

We would like to thank all the contributors who helped us making this release, especially (alphabetically): @dragon2611, @eleaner, @jkiebzak, @onlyjob, @xandrus. Thank you for all your help!

*(If I forgot to mention somebody, I am very sorry and please let me know!)*

Please find the list of fixes this release includes below:

* (nbd) fixed segfault when filename not specified
* (client) fixed size of waiting threads counter (very rare deadlock in write module)
* (cli) fixed status returned in case of master name that can't be resolved (issue #238)
* (master) improved readability of some functions (related to issue #241)
* (nbd) added option for specifying subfolder on MFS for block devices (issue #252)
* (netdump) fixed using deprecated function `pcap_lookupdev`
* (cli) fixed 'free space' in plain mode

Best regards,
Piotr / MooseFS Team",50505775
293,False,False,2019-04-01T23:18:13Z,2019-04-01T23:42:32Z,"MooseFS 3.0.104 is now stable! This release includes both bugfixes and new features.

We would like to thank all the contributors who helped us making this release, especially (alphabetically): @borkd, @dragon2611, @nickb937, @njaard, @onlyjob. Thank you for all your help!

*(If I forgot to mention somebody, I am very sorry and please let me know!)*

Please find the list of fixes this release includes below:

 * (master) fixed taking into account labels in classes 1-9
 * (master) fixed recovering `userperm` and `otherperm` in ACL (in practice it doesn't matter – mainly cosmetics)
 * (cli+cgi) fixed `python3` compatibility issue (casting to `int` for `%X` format)
 * (master) increased mmap allocation block size (Linux kernel issue – too many `mmaps` leads to memory not being properly released by the kernel)
 * (client) fixed handling internal packets with size zero (client disconnection during chunkserver registration)
 * (client) fixed symlink cache handling (potential race condition)
 * **(master) added global option for preventing using same ip or same rack for more than one chunk copy**
 * (client) added ignoring `_netdev` option – sometimes needed in case of mounting from fstab
 * **(master) added defining `rackid` as string paths in `mfstopology.cfg` (introduced optional higher distances between servers)**
 * (master) fixed desync on adding damaged chunk
 * **(master) added changelog save mode (background, async and sync)**
 * (all) fixed issues reported by `cppcheck` (fixes #179)
 * (cli+cgi) fixed issues reported by `pylint` (fixes #180)
 * (cs) added 'damaged' flag to chunk (prevents syslog flooding – issue #192)
 * (metatools) fixed conflict with builtin function `humanize_number` (NetBSD)
 * **(master) better handling chunks with pending high-priority jobs**
 * **(master) long loop detection (log info whenever time between polls is longer than 5 seconds)**
 * (master) fixed condition that checks if thare are all chunkservers and all chunks available (and using it for detecting `ENOSPC` condition – issue #201)
 * **(mount) added `.params` pseudofile with mfsmount working parameters (such as cache sizes, timeouts etc.)**
 * **(cs) fixed removing chunks from data structures when marking disk as 'damaged' (issue #207)**
 * **(cs) fixed handling 'damaged' disks with chunks on reload (issue #207)**
 * (cs) unlink duplicates week after detection (instead of removing them instantly – related to issue #207)
 * (tools) added displaying number of blocks in `mfsfileinfo`
 * (master) added error messages for 'fork' errors
 * (cgi) fixed handling encodings (issue #206 and #208)
 * (cgi) added timestamp (issue #197)
 * (cgi) fixed `chart.cgi` url (issue #200)
 * (cs) fixed crc values for non existing blocks
 * (mount) fixed changing processname
 * (supervisor) added reloading config parameters on SIGHUP (aka 'reload' – 'pro' version only)
 * (cs) fixed exiting protocol
 * (cs) added internal rebalance chart

Best regards,
Piotr / MooseFS Team",50505775
294,False,False,2018-11-23T13:07:29Z,2018-11-23T13:38:01Z,"# Dear MooseFS Users,

MooseFS 3.0.103 is now stable! This release includes both bugfixes and new features.

## Block Device

The biggest and most awaited feature introduced in this version is support for **Block Storage** which allows you to skip FUSE layer completely and give a block device instead of a file system layer to the OS on the Client using `mbfsbdev` instead of `mfsmount`.

See more in `man mfsbdev`.

This is kind of ""feature release"" of Block Device - we may improve it or its management in the future. You are **very welcome** to test it and report any issues by raising a [GitHub issue](https://github.com/moosefs/moosefs/issues). Your reports will help to make this feature and MooseFS better! 👍 :)

## MooseFS Meta Dirinfo

The second new big feature is **`mfsmetadirinfo`**. It is so-called ""offline"" implementation of well-known `mfsdirinfo -p` and similarly allows you to count real space usage of a particular directory precisely, **with taking snapshots into consideration**. The tool is faster than `mfsdirinfo -p` and you can use it on your Master Server. The tool operates on a dumped metadata file (e.g. `metadata.mfs.back` or `metadata.mfs`).

See more in `man mfsmetadirinfo`.

## Extremely fast Pseudo-random Generator

This release also includes extremely fast (>1GB/s) pseudo-random generator visible as a virtual file `.random` in root directory (not listed by `ls`). You can use it for testing purposes, similarly as you use e.g. `/dev/urandom`.

## New Chunk testing routine in MB/s

MooseFS constantly checks Chunks' checksums in background in order to prevent silent data corruption. This version gives you ability to define speed in MB/s of this checking. It is especially important for big clusters with huge number of small files where definition in chunks per second could reflect in a very long time of whole cluster checking (like years).

# Complete list of features and fixes in MooseFS 3.0.103

Please find the list of fixes this release includes below:

 * **(bdev) new module for Linux - dedicated block device**
 * **(metatools) added new metatool `mfsmetadirinfo` - offline version of `mfsdirinfo -p`**
 * **(mount) added extremely fast (>1GB/s) pseudo-random generator visible as a virtual file `.random` in root directory (not listed by `ls`)**
 * **(cs) changed chunk testing routine (new definition is in MB/s per disk)**
 * **(tools) changed data structure used by `mfsdirinfo -p` (faster, less memory usage)**
 * **(cs) added optional high speed internal rebalancing**
 * (tools) network code refactoring (less code, reconnection to master on error)
 * (master+client) added space reservation for superuser
 * (daemons) added optional `processname_set` function
 * (daemons) fixed waitpid condition
 * (cs) added data precaching `(posix_fadcvise(WILLNEED))` before reading chunk data
 * (master) remove chunk copy from structures (instead of leaving as INVALID) when replication returned error
 * (master) close listen sockets after fork (metadata save in background)
 * (master) added subprocess for saving downloaded metadata in background (pro only)
 * (master) fixed `mfsrmsnapshot` issue (SNAPSHOT flag not set in directories - intr. in 3.0.101)
 * (mount) added option to load master password from given file
 * (cs) proper disconnection from master during reload (maintenance mode during reload)

Best regards,
Piotr / MooseFS Team",50505775
295,False,False,2018-07-23T21:38:18Z,2018-07-23T21:41:14Z,"Dear MooseFS Users,

MooseFS 3.0.101 is stable now! Please find the list of fixes this release includes below:

 * (master) make under goal replications respect topology (patch made by tclh123)
 * (master) fix inforec undergoal (patch made by tclh123)
 * (cgiserv) fixed handling connection close during data sending (leaving active pipes which caused leaving `mfs.cgi` subprocesses)
 * (mount) decreased memory usage (fixed handling buffers allocated per thread)
 * (all) setting correct errno when read returns 0 (in `sockets.c`)
 * (mount) fixed double free of `plock_data` structure
 * (master) fixed inconsistency in calculating realsize when storage class definition has changed
 * (master+mount) fixed handling read-only filesystems (`ro` flag in exports and lookup-open `lflags`)
 * (all) fixed differences in defaults between source, config and manpages
 * (all) added `nobreak` macro to explicitly inform compiler that intentionally there is no `break` before following `case`
 * (mount) added `mfssuid` and `mfsdev` options to mount (allows mounting with suid/dev options using system mount on Linux)
 * (cs) added using `posix_fadvise(...DONTNEED)` for tested chunks
 * (master) fixed HA bug (uninitialized variable might cause everlasting ELECT - PRO only)
 * (cs) fixed `metaid` handling
 * (master) added clearing SNAPHSOT eattr on file/directory modifications
 * (master) added optional same rack preference for destination server during undergoal replications
 * (mount+tools) increased masterproxy timeout from 1s to 20s

Best regards,
Piotr / MooseFS Team",50505775
296,False,False,2018-01-25T16:52:46Z,2018-01-25T16:56:19Z,"Dear MooseFS Users,

MooseFS 3.0.100 is stable now! Please find the list of fixes this release includes below:

 * (cs) fixed rare segfault during chunk sending to master after disconnection
 * (mount) added thread for cleaning released files with delay
 * (mount) added assertion for lru cache (sustained open files)
 * (master+mount) added chunks data cache invalidation after chunkserver disconnection and reconnection
 * (mount) changed (lowered) number of connection retries (depends on I/O retry counter)

Best regards,
Piotr / MooseFS Team",50505775
297,False,False,2017-12-07T02:08:25Z,2017-12-07T02:10:55Z,"Dear MooseFS Users,

MooseFS 3.0.99 is stable now! Please find the list of fixes this release includes below:

 * (master) disconnect all clients when exports has changed
 * (mount) do not show message about 'negative travel time' when the measured time is zero (happens in virtual machines)
 * (all) fixed get16bit function on big-endian machines

Best regards,
Peter / MooseFS Team",50505775
298,False,False,2017-12-07T02:07:46Z,2017-12-07T02:10:13Z,"Dear MooseFS Users,

MooseFS 3.0.98 is stable now! Please find the list of fixes and new features this release includes below:

 * (mount) changed default cache mode on OS X from 'direct' to 'auto' due to problems with mmap
 * (cgiserv) added seteuid to 'mfs' or 'nobody'
 * (cs+tools) use readdir instead of readdir_r on glibc 2.24+
 * (debian) added support for systemd in debian packages
 * (all) fixed library dependencies (for libpcap,libz and libm)
 * (mount) fixed race between defered 'open' and 'locks'
 * (master) more chunk debugs and better handling chunk status change
 * (cs) fixed handling mark for removal (after reload sometimes cs could send chunks marked for removal as normal chunks)
 * (master) added file with metadata checksums (for future use)
 * (master) fixed way of sending gids to changelog/follower
 * (master) added inode checksum for some changes sent to changelog/follower
 * (metadump) added '0x' prefix for fileds dumped as hex numbers
 * (master) fixed ACL mask synchronization issues (restoring from changelog/leader->follower)

Best regards,
Peter / MooseFS Team",50505775
299,False,False,2017-08-02T17:18:38Z,2017-08-02T17:21:22Z,"Dear MooseFS Users,

MooseFS 3.0.97 is stable now! Please find the list of fixes this release includes below:

 * (tools) fixed trash/sustained size desynchronization after file length changed by chunk creation
 * (mount) fixed handling invalid arguments in posix lock command

Best regards,
Peter / MooseFS Team",50505775
300,False,False,2017-08-02T17:17:52Z,2017-08-02T17:20:50Z,"Dear MooseFS Users,

MooseFS 3.0.96 is stable now! Please find the list of fixes this release includes below:

 * (tools) fixed segfault in mfsscadmin

Best regards,
Peter / MooseFS Team",50505775
301,False,False,2017-08-02T17:16:33Z,2017-08-02T17:20:12Z,"Dear MooseFS Users,

MooseFS 3.0.95 is stable now! Please find the list of fixes this release includes below:

 * (mount+master) added update master version during reconnection to master (after updating master server)
 * (master) fixed winattr field size in setattr command
 * (mount) fixed dirattrcache (freezes or inefficiences during listing directories - introduced in 3.0.93)
 * (cgi) fixed displaying master charts without leader (pro only)
 * (mount) added info about using open dir cache in oplog/ophistory

Best regards,
Peter / MooseFS Team",50505775
302,False,False,2017-06-30T22:26:07Z,2017-06-30T22:27:31Z,"Dear MooseFS Users,

MooseFS 3.0.94 is stable now! Please find the list of fixes this release includes below:
	
 * (mount) fixed support for CREATE/REPLACE flags in setxattr
 * (mount) added headers for flock defines
 * (all) added check for poll.h header file and use it instead of sys/poll.h if possible
 * (master) added test for WRITE access on directory during moving between different parents
 * (master) added clearing suig/sgid during write
 * (master+mount) increased max symlink path size to 4096 (posix compliance)
 * (master) redesigned xattr storage (much faster and uses less memory)
 * (master) improved hash map in xattr and acl (static -> dynamic)
 * (cgi+cli) added possibility to define master group as set of IP adresses divided by comma or semicolon
 * (cs) fixed using fsync on closed descriptors (after change FSYNC_BEFORE_CLOSE option)
 * (master) fixed removing default acl
 * (master+mount) added support for basic Windows attributes (hidden,ro,system,archive)
 * (cgi+cli) fixed working with followers only
 * (all) added api for reading config parameters from master and chunkserver
 * (tools) increased timeout from 10 seconds to 20 seconds (needed for huge snapshots)

Best regards,
Peter / MooseFS Team",50505775
303,False,False,2017-05-01T13:51:59Z,2017-05-01T13:55:12Z,"Dear MooseFS Users,

MooseFS 3.0.92 is stable now! Please find the list of fixes this release includes below:
	
 * (master+tools) added chunk slices to `mfsappendchunks`
 * (tools) added archive mode tools
 * (master+mount) fixed `getfacl` (unnecessary check for read rights for `uid`/`gid`)
 * (master) fixed changing `acl mask` during `setattr`

Best regards,
Peter / MooseFS Team",50505775
304,False,False,2017-04-10T10:24:10Z,2017-04-10T10:26:35Z,"Dear MooseFS Users,

MooseFS 3.0.91 is stable now! Please find the list of fixes this release includes below:

 * (all) silence false warnings generated by static analyzers (`clang` and `cppcheck`)
 * (master) fixed quota testing routine used during `move/rename`
 * (all) added `README.md` to distribution
 * (cs+mount) decreased delay in `conncache`
 * (mount) fixed reading done by many (20+) threads using one descriptor (premature removing requests from queue during cleaning) - resolves some issues with running VMs on MooseFS

Best regards,
Peter / MooseFS Team",50505775
305,False,False,2017-03-28T13:06:14Z,2017-03-28T13:08:44Z,"Dear MooseFS Users,

MooseFS 3.0.90 is stable now! Please find the list of fixes this release includes below:

 * (master) fixed `move/rename` with quota
 * (master) fixed chunk counters shown in cli/cgi
 * (master+tools) added option `preserve hardlinks` to `mfsmakesnapshot`
 * (master) fixed ACL copying during `mfsmakesnapshot`
 * (mount) added fixing file length in all inodes after write
 * (cs) split bitfiled into separate bytes (fixed potential race condition)
 * (master) setting operation to `NONE` before sending status (silence unnecessary messages in some cases)
 * (cs) increased verbosity of crc-error messages
 * (cs) fixed invalidating preserved block in case of truncate down followed by truncate up
 * (mount) increased master-proxy buffer sizes

Best regards,
Peter / MooseFS Team",50505775
306,False,False,2017-02-09T12:05:23Z,2017-02-09T12:16:13Z,"Dear MooseFS Users,

MooseFS 3.0.88 is stable now! Please find the list of fixes this release includes below:
- (mount) added read cache clean on write (same file access using different descriptors)
- (mount) added missing `cond_destroy` in `readdata.c` (fix sent by Jakub Ratajczak)
- (master) fixed initializing packet size for reading 'sustained' directory
- (all) fixed `zassert` for printing correct statuses in case of pthread functions
- (mount) fix `fleng` in `finfo` after truncate (patched by Davies Liu @davies)
- (mount) fix overlapped read (patched by Davies Liu @davies)
- (mount) fixed invalidating chunk cache after truncate
- (mount) fixed `fleng` handling in read worker
- (mount) fixed handling BREAK state in read worker
- (mount) changed handling data invalidation in read module (sometimes could be less efficient, but it is much more safer)
- (tools) fixed number parsing (patched by Paweł Gawroński)
- (cli) fixed printed host/port options
- (mount) moved pipes from requests to workers (read and write - huge decrease of descriptors used by mount)
- (mount) changed signal to broadcast in rwlock (fixed very rare read/write deadlock)
- (mount) fixed 'open descriptors' leak (`lookup(with data for open) -> open(with cached data) -> close`)
- (mount) fixed potential 'race condition' - free `csdata` during access
- (master) split (only internally) sustained folder into 256 subfolders (too many sustained files caused socket timeouts in master)

Best regards,
Peter / MooseFS Team
",50505775
307,False,False,2016-12-01T16:32:16Z,2016-12-01T16:34:03Z,"- (master) fixed leader-follower resynchronization after reconnection (pro only)
- (master) fixed rehashing condition in edge/node/chunk hashmaps (change inspired by yinjiawind)
- (mount) fixed memory leak (also efficiency) on Linux and potential segfaults on FreeBSD (negative condition)
- (mount) fixed race condition for inode value in write module
- (mount) better descriptors handling (lists of free elements, inode hash)
- (mount) better releasing descriptors on FreeBSD
- (cs) fixed time condition (patch send by yinjiawind)
- (mount) fixed logging unnecessary messages on FreeBSD (closes #19)
- (master) added condition that prevents deleting unused chunks from structures too early
",50505775
308,False,False,2016-12-01T16:21:52Z,2016-12-01T16:33:09Z,"- (master) fixed setting acl-default without named users or named groups
- (master) fixed master-follower synchronization after setting storage class
- (cs) changed header size from 5k to 8k (due to 4k-sector hard disks)
- (all) silenced message about using deprecated parameter 'oom_adj'
- (mount) fixed FreeBSD delayed release mechanism
- (mount) added rwlock for chunks
",50505775
309,False,False,2016-09-28T11:09:32Z,2016-09-28T11:11:31Z,"- (mount) fixed using connection cache in readdata module
- (freebsd) changed name in ports file from moosefs to moosefs2
",50505775
310,False,False,2016-09-28T11:08:34Z,2016-09-28T11:10:34Z,"- (cli) fixed displaying quota info in plain mode
- (mount) fixed code to silence some compiler warnings
",50505775
311,False,False,2016-08-02T15:17:15Z,2016-08-02T15:17:52Z,"- (mount) fixed oom killer disabling (setting oom_adj and oom_score_adj)
- (cli) fixed displaying inactive mounts
- (mount) added fsync before removing any locks
- (daemons) added disabling oom killer (Linux only)
- (all) small fixes in manpages
- (mount) fixed handling nonblocking lock commands (unlock and try) in both locking mechanisms
- (daemons+mount) changed default settings for limiting malloc arenas (Linux only)
",50505775
312,False,False,2016-07-15T14:05:15Z,2016-07-15T14:05:57Z,"- (master) fixed chunk loop (in some cases chunks from the last hash position might be left unchecked)
- (master) fixed storage class management (fixed has_***_labels fields)
",50505775
313,False,False,2016-07-08T13:34:02Z,2016-07-08T13:35:59Z,"- (master) fixed 'flock' (change type of lock SH->EX and EX->SH caused access to freed memory and usually SEGV)
",50505775
314,False,False,2016-06-14T11:34:29Z,2016-06-14T11:35:03Z,"- (cs) fixed serious error that may cause data corruption during internal rebalance (intr. in 3.0.75)
",50505775
315,False,False,2016-06-08T10:34:58Z,2016-06-08T10:38:59Z,"This is a first Stable release in MooseFS 3.0 branch.

With MooseFS 3.0 release we introduce great new features:
- Storage Classes for better data distribution and redundancy management,
- Global locks support compatible with POSIX ioctl() and lockf() semantics and BSD compatible flock() semantics, 
- New I/O synchronisation mechanism between different mounts, for better handling concurrent I/O operations from different clients,
- ATMM (Automatic Temporary Maintenance Mode),
- Automatic File ""sparsification"".

... and many more.

Changes in MooseFS 3.0.77 in comparison to 3.0.76:
- (mount) added assertions after packet allocation in master communication module
- (manpages) fixes related to storage classes
- (all) improved error messages used for storage classes
",50505775
316,False,True,2016-06-07T11:54:13Z,2016-06-07T11:58:44Z,"- (master) fixed resolving multi path for root inode
- (master) fixed licence expiration behaviour (pro only)
",50505775
317,False,True,2016-06-07T11:51:43Z,2016-06-07T11:57:29Z,"- (all) fixed cppcheck warnings/errors (mostly false negatives)
- (cs) added file sparsification during chunk write (also chunk replication, chunk duplication etc.)
- (mount) fixed write data inefficiency when I/O was performed by root
- (master) fixed removing too early locked chunks from data structures
- (tools) fixed reusing local ports (connection to master returned EADDRNOTAVAIL)
- (all) changed default action from restart to start
- (all) added exiting when user defined config (option -c) cannot be loaded
- (cs) changed handling chunk filename (dynamic filename generation - cs should use less memory)
- (netdump) changed 'moose ports only' option to 'port range'
- (mount) limited number of files kept as open after close
- (cs) changed subfolder choosing algorithm
- (mount) changed mutex lock to rw-lock for I/O on the same descriptor
- (mount) added link to mfsmount from '/sbin/mount.moosefs' (Linux only)
- (all) introduced ""storage classes"" (new goal/labels management)
- (master+cs) introduced 'temporary maintenance mode' (automatic maintenance mode after graceful stop of cs)
- (master+mount) added fix for bug in FreeBSD kernel (kernel sends truncate before first close - FreeBSD only)
- (cs) fixed setting malloc pools on Linux
",50505775
318,False,False,2016-04-27T18:32:03Z,2016-04-27T18:34:28Z,"- (master+mount) added fix for bug in FreeBSD kernel (kernel sends truncate before first close - FreeBSD only)
- (all) spelling corrections
",50505775
319,False,True,2016-03-08T15:10:35Z,2016-04-19T10:38:11Z,"- (mount) fixed rare race condition in read (not dangerous)
- (mount) better read/write synchronization in read
- (master) new chart (used/total space)
",50505775
320,False,True,2016-03-08T15:10:19Z,2016-04-19T10:37:51Z,"- (mount) fixed rare race condition in read (not dangerous)
- (mount) better read/write synchronization in read
- (cs) added ability to start with metaid read from connected hard drives (from .metaid file)
- (cs) added protection from using disks filled in more than 99.9% when there are other disks
- (master+cs+cli+cgi) added 'rebalance in progress' state to chunkservers (treated as heavy load state)
- (master) added ATIME_MODE option to set atime modification behaviour
",50505775
321,False,True,2016-03-08T15:10:04Z,2016-04-19T10:37:29Z,"- (master) fixed lookup in case of missing chunks (lookup returned ENXIO in such case)
",50505775
322,False,True,2016-03-08T15:09:49Z,2016-04-19T10:37:01Z,"- (systemd) added TimeoutStartSec=1800 to master
- (master) fixed ""parse error"" message for broken network changelogs
",50505775
323,False,True,2016-03-08T15:09:22Z,2016-04-19T10:36:29Z,"- (all) fixed debug symbols
- (master+supervisor) added metaid check (pro version only)
- (master) added rejection of followers with incorrect meta version (pro version only)
- (mount) change type of data stored in kernel from pointers to indexes (more robust)
- (cli) fixed show exports in plain mode
- (master) added sending metaid after switching from ELECT to LEADER (pro version only)
- (master) removed option '-e' from GPL edition (only makes sense in pro version)
- (master+cs) added sending metaid to cs in ELECT state (pro version only)
- (master) improved metaid generation method
- (mount) added mfsoomdisable option (Linux only, turned on by default)
- (mount) added minimum retry counter to log messages in I/O modules
- (mount) reduced memory consumption by reducing thread stack sizes
- (mount) changed default malloc arena count to 2 (Linux only)
",50505775
324,False,True,2016-03-08T15:08:59Z,2016-04-19T10:36:09Z,"- (mount) added condition for requests in read data (request should begin before EOF)
- (systemd) fixed typo in mfscgiserv service file
",50505775
325,False,True,2016-03-08T15:08:39Z,2016-04-19T10:35:46Z,"- (metalogger) added 1 second timeout when connecting to master
- (systemd) fixed typo in mfscgiserv service file
- (macosx) fixed packages to be compatible with OS X 10.11+
",50505775
326,False,True,2016-03-08T15:08:10Z,2016-04-19T10:35:26Z,"- (mount) fixed reading from empty chunks chunk
",50505775
327,False,True,2016-03-08T15:07:49Z,2016-04-19T10:35:03Z,"- (cs,master) added 1 second timeout when connecting to master
",50505775
328,False,True,2016-03-08T15:07:32Z,2016-04-19T10:34:41Z,"- (master) fixed setting version of new chunks registered as 'marked for removal'
- (master) added stronger condition for deleting invalid chunks
- (cs) changed condition for number of blocks to change to mark disk as damaged (allow changes up to 10%)
",50505775
329,False,True,2016-03-08T15:06:52Z,2016-04-19T10:33:58Z,"- (cs) fixed typo (cnunk)
- (mount) create in deleted directory returns EACCES only in OS X (ENOENT in other systems)
",50505775
330,False,True,2016-03-08T15:03:54Z,2016-04-19T10:33:34Z,"- (mount) added new mechanism for sustaining working directories (replaces mechanism added in 3.0.40)
- (cs) force disconnection from master couple seconds after term signal (frozen I/O threads can prevent CS from termination)
- (cs) when RO/RW status or total blocks changes then device is automatically marked as damaged
- (master) added support for root inode end deleted inodes in MASS_RESOLVE_PATHS
- (cli) fixed error displaying disconnected chunkservers
- (rpm) added network-online.target to Wants and After in systemd service files (startup issues after reboot)
",50505775
331,False,True,2016-03-08T15:03:37Z,2016-04-19T10:33:09Z,"- (mount) fixed segfault during umount
- (mount) changed fsync before close to be turned on by default
- (mount) fixed read-write-read scenario on files created as a snapshots
",50505775
332,False,True,2016-03-08T15:03:04Z,2016-04-19T10:32:46Z,"- (master+mount) for files with EATTR_NODATACACHE mounts will always use direct io
- (all) changed suffix of sample configuration files from '.dist' to '.sample'
",50505775
333,False,True,2016-03-08T15:02:14Z,2016-04-19T10:32:12Z,"- (mount) added DIRECT as a cachemode (force using direct io - also disables cache - mainly for FreeBSD)
",50505775
334,False,True,2016-03-08T15:00:23Z,2016-04-19T10:31:30Z,"- (mount) minor changes in mastercomm module (disconnection handle)
",50505775
335,False,True,2016-03-08T14:59:56Z,2016-04-19T10:31:08Z,"- (mount) fixed memory leak in readchunkdata module
",50505775
336,False,True,2016-03-08T14:59:26Z,2016-04-19T10:30:31Z,"- (mount) fixed chunk-data cache bug (repeated network timeouts could lead to reading freeze)
",50505775
337,False,True,2016-03-08T14:58:52Z,2016-04-19T10:30:09Z,"- (mount) fixed cache for extra inode data (usage of non thread-safe allocation functions - leads to hangups on lookup/open etc.)
- (mount) fixed data-cache issue (delete only directories from kernel dentry cache)
- (mount) inserting into xattr cache ""nonexistent"" xattr ""security.capability"" after file creation. (speed up writing small files)
- (master) fixed scenario causing deleting chunks from chunkservers marked for removal
- (cgi+cli) fixed color of reported exports checksum for non-pro masters
",50505775
338,False,True,2016-03-08T14:58:27Z,2016-04-19T10:29:31Z,"- (master+mount) fixed synchronization between mounts (write+close on one and then read this data on another)
- (mount) fixed chunk localization cache (snapshot case - on snapshot chunkid may change)
",50505775
339,False,True,2016-03-08T14:57:48Z,2016-04-19T10:27:12Z,"- (netdump) added support for device 'any' with LINUX_SLL and PKTAP frames
",50505775
340,False,True,2016-03-08T14:56:52Z,2016-04-19T10:26:48Z,"- (mount) added support for negative answers in 'removexattr' from xattr cache
",50505775
341,False,True,2016-03-08T14:53:51Z,2016-04-19T10:26:29Z,"- (master) added creating first chunk after file creation
",50505775
342,False,True,2016-03-08T14:52:57Z,2016-04-19T10:25:54Z,"- (master+mount) added using fuse's forgets in inode number reusage (fixes very rare EBUSY case when inode number is reused after unlink of directory which is still open or used as a current working directory)
- (master+mount) sped up reading of small files
- (mount) increased chunk location cache (sped up reading files)
",50505775
343,False,True,2016-03-08T14:40:51Z,2016-04-19T10:25:31Z,"- (master+cgi+cli) added check for servers with disks marked for removal (if disks can be safely removed)
",50505775
344,False,True,2016-03-08T14:40:35Z,2016-04-19T10:24:42Z,"- (master+cgi+cli) added check for servers with disks marked for removal (if disks can be safely removed)
",50505775
345,False,True,2016-03-08T14:40:10Z,2016-04-19T10:24:10Z,"- (mount) performance fixes in read module
",50505775
346,False,True,2016-03-08T14:39:47Z,2016-04-19T10:23:41Z,"- (mount) fixed bug in read module (intr. in 3.0.35)
",50505775
347,False,True,2016-03-08T14:38:41Z,2016-04-19T10:23:19Z,"- (mount) fixed state automaton in read module (in very rare cases zeros might be read instead of data - intr. in 3.0.23)
",50505775
348,False,True,2016-03-08T14:37:50Z,2016-04-19T10:22:48Z,"- (master) fixed small follower-desync issue (pro version only - intr. in 3.0.33)
- (master) fixed session restore/synchronization issue (bad info length after metadata restore)
- (mount) fixed setting maxfleng on truncate
",50505775
349,False,True,2016-03-08T14:37:00Z,2016-04-19T10:17:45Z,"- (master) added metaid synchronisation between masters (pro version only)
- (cgi+cli) fixed ""Metadata Info"" table (intr. in 3.0.32).
",50505775
350,False,True,2016-03-08T14:36:36Z,2016-04-19T10:17:12Z,"- (master) added exports checksum
- (master) changed sessions parameters refresh policy (refresh all parameters after 'exports' reload)
- (master) fixed truncate bug (close file without writing data may cause file truncate - dangerous !!!, introduced in 3.0.25)
",50505775
351,False,True,2016-03-08T14:35:01Z,2016-04-19T10:16:21Z,"- (master) changed metadata storing policy - when there are no followers, then store metadata every hour (pro version only)
",50505775
352,False,True,2016-03-08T14:34:20Z,2016-04-19T10:15:47Z,"- (master) added 'empty' chunk count to mfscheckfile (fixed mfsfileinfo on sparse files)
- (master) added 'mfsrmsnapshot' (remove whole directory created as a result of mfsmakesnapshot)
- (tools) fixed memory overrun error during mfssetgoal
",50505775
353,False,True,2016-03-08T14:33:29Z,2016-04-19T10:15:19Z,"- (master) fixed truncate bug (freezing mount during truncate in some rare scenarios)
",50505775
354,False,True,2016-03-08T14:32:59Z,2016-04-19T10:15:00Z,"- (master) fixed lock issue on empty (chunkid==0) chunk
",50505775
355,False,True,2016-03-08T14:32:23Z,2016-04-19T10:14:39Z,"- (master) fixed memory allocation size bug in chunk's ""ftab""
",50505775
356,False,True,2016-03-08T14:31:53Z,2016-04-19T10:14:15Z,"- (master+tools) added reportig invalid chunks to mfsfileinfo
- (cs) added protection against using '.chunkdb' when folders were changed by user
- (master) fixed free inodes list issue (can happen only during first 60 seconds after starting master with new metadata)
",50505775
357,False,True,2016-03-08T14:31:05Z,2016-04-19T10:13:50Z,"- (cs) fixed sending disk sizes after chunk deletions
- (tools) added displaying chunk information in ""mfsfileinfo"" for chunks exceeding file size
- (cli+cgi) added ""missing chunk type"" column in ""missing files"" table
- (master) added automatic fixing missing chunks exceeding file size
- (cs) fixed ""got unknown message (type:212)"" issue
- (cs) added ip and port to connection error message
- (master+mount) added length and write/read synchronization between nodes
- (mount) removed waiting for data sync on mfs_release
- (master+mount) added not cacheable ENOENT status
- (master) changed two highest replication priorities (fixes problem with slow replication from ""marked for removal"" disks)
- (cs) added option '!' to paths in mfshdd.cfg - ignore 'metaid'
",50505775
358,False,True,2016-03-08T14:28:14Z,2016-04-19T10:13:26Z,"- (configure) added python as dependency for mfscgiserv
- (mount) readdata module improvements (masterdata cache)
",50505775
359,False,True,2016-03-08T14:22:07Z,2016-04-19T10:12:45Z,"- (mount) fixed dircache invalidation
",50505775
360,False,True,2016-03-08T14:21:19Z,2016-04-19T10:12:27Z,"- (master) fixed bug in flock (bsd) locks
",50505775
361,False,True,2016-03-08T14:20:46Z,2016-04-19T10:12:10Z,"- (cli) fixed ""last save time"" in master general info (-SIG)
- (master) added ""last seen paths"" to TRASH and SUSTAINED files in inode to path resolver
- (mount) fixed ""race conditions"" in new reading module (intr. in 3.0.19)
- (mount) added ""mfsnoxattrs"",""mfsnoposixlocks"" and ""mfsnobsdlocks"" options
- (master) added support for ""DEFAULT"" options in mfsexports.cfg
",50505775
362,False,True,2016-03-08T14:20:09Z,2016-04-19T10:11:48Z,"- (master) removed missing chunks/files from messages
- (cli+cgi) added presenting missing chunks/files in separate table
- (mount) improved reading performance
- (master) added missing chunks/files log
- (master) added fast delete during rebalance
",50505775
363,False,True,2016-03-08T14:19:16Z,2016-04-19T10:11:24Z,"- (master) fixed bug in chunk unlocking mechanism (few writes to the same chunk may cause master freezing)
",50505775
364,False,True,2016-03-08T14:18:21Z,2016-04-19T10:11:00Z,"- (master) fixed 'df' for subnodes with quota set on ancestor nodes
",50505775
365,False,True,2016-03-08T14:17:45Z,2016-04-19T10:10:33Z,"- (all) changed freebsd ports
- (cgiserv) fixed POST handling
- (mount) fixed handling read-ahead upper limit
",50505775
366,False,True,2016-03-08T14:16:53Z,2016-04-19T10:10:07Z,"- (master) added 'admin' flag to default mfsexport.cfg
- (master) fixed setgoal bug (user couldn't change goal without admin privilege)
",50505775
367,False,True,2016-03-08T14:15:32Z,2016-04-19T10:09:46Z,"- (mount) fixed rare getgroup race condition
",50505775
368,False,True,2016-03-08T14:12:33Z,2016-04-19T10:09:10Z,"- (tools,mount) fixed man pages
",50505775
369,False,True,2016-03-08T14:11:53Z,2016-04-19T10:08:26Z,"- (netdump) fixed man page
",50505775
370,False,False,2016-01-27T16:04:25Z,2016-04-19T10:05:27Z,"- (cs,master,metalogger) added 1 second timeout when connecting to master
- (cs) force disconnection from master couple seconds after term signal (frozen I/O threads can prevent CS from termination)
- (systemd) fixed typo in mfscgiserv service file
- (macosx) fixed packages to be compatible with OS X 10.11+
",50505775
371,False,False,2016-01-27T16:04:04Z,2016-04-19T10:04:58Z,"- (mount) removed using fuse notify/forget mechanism in kernel with fuse api 7.23+ (due to unexpected kernel behaviour - getcwd returns ENOENT)
",50505775
372,False,False,2016-01-27T16:03:24Z,2016-04-19T10:04:32Z,"- (mount) fixed rare bug in writing module (unrecoverable write error could lead to infinite loop during write)
",50505775
373,False,False,2016-01-27T16:02:39Z,2016-04-19T10:04:06Z,"- (mount) fixed data-cache issue (delete only directories from kernel dentry cache)
- (mount) inserting into xattr cache ""nonexistent"" xattr ""security.capability"" after file creation. (speed up writing small files)
- (master) fixed scenario causing deleting chunks from chunkservers marked for removal
",50505775
374,False,False,2016-01-27T16:02:14Z,2016-04-19T10:03:38Z,"- (master+mount) added using fuse's forgets in inode number reusage (fixes very rare EBUSY case when inode number is reused after unlink of directory which is still open or used as a current working directory)
",50505775
375,False,False,2016-01-27T16:01:57Z,2016-04-19T10:03:09Z,"- (cgi+cli) fixed incompatibilities with python 3
",50505775
376,False,False,2016-01-27T16:01:35Z,2016-04-19T10:02:50Z,"- (master) fixed free inodes list issue (segfault that can happen only during first 60 seconds after starting master with new metadata)
",50505775
377,False,False,2016-01-27T16:00:48Z,2016-04-19T10:02:24Z,"- (cs) fixed sending disk sizes after chunk deletions
- (tools) added displaying chunk information in ""mfsfileinfo"" for chunks exceeding file size
- (cli+cgi) added ""missing chunk type"" column in ""missing files"" table
- (master) added automatic fixing missing chunks exceeding file size
- (cs) fixed ""got unknown message (type:212)"" issue
- (cs) added ip and port to connection error message
",50505775
378,False,False,2016-01-27T16:00:18Z,2016-04-19T10:02:01Z,"- (configure) added python as dependency for mfscgiserv
",50505775
379,False,False,2016-01-27T15:59:44Z,2016-04-19T10:01:25Z,"- (mount) fixed dircache invalidation
",50505775
380,False,False,2016-01-27T15:59:09Z,2016-04-19T10:01:01Z,"- (cli) fixed ""last save time"" in master general info (-SIG)
- (master) added ""last seen paths"" to TRASH and SUSTAINED files in inode to path resolver
",50505775
381,False,False,2016-01-27T15:58:30Z,2016-04-19T10:00:41Z,"- (master) removed missing chunks/files from messages
- (cli+cgi) added presenting missing chunks/files in separate table
",50505775
382,False,False,2016-01-27T15:57:51Z,2016-04-19T10:00:22Z,"- (master) added missing chunks/files log
",50505775
383,False,False,2016-01-27T15:57:08Z,2016-04-19T10:00:04Z,"- (mount) fixed bug in read module (it's theoretical bug).
",50505775
384,False,False,2016-01-27T15:56:30Z,2016-04-19T09:59:41Z,"- (master) fixed 'df' for subnodes with quota set on ancestor nodes
",50505775
385,False,False,2016-01-27T15:55:59Z,2016-04-19T09:55:42Z,"- (all) changed freebsd ports
- (cgiserv) fixed POST handling
- (mount) fixed handling read-ahead upper limit
",50505775
386,False,False,2016-01-27T15:55:09Z,2016-04-19T09:48:42Z,"- (mount) fixed rare getgroup race condition
",50505775
387,False,False,2016-01-27T15:53:24Z,2016-04-19T09:48:10Z,"This is a first MooseFS release on GitHub
- (all) changed license of standard version to GPLv2
- (all) changed name moosefs-ce to just moosefs
",50505775
388,False,True,2016-03-08T14:11:23Z,2016-04-19T09:47:01Z,"- (all) changed license of standard version to GPLv2
- (all) changed name moosefs-ce to just moosefs
",50505775
389,False,True,2016-03-08T15:10:55Z,2016-04-19T09:46:14Z,"- (master+mount) split trash into 4096 separate sub-trashes
",50505775
390,False,True,2016-03-08T15:11:23Z,2016-04-19T09:45:39Z,"- (master+cs) added minimal version for master supervisors in chunkservers (pro version only)
- (cs) chunkserver can be started with empty mfshdd.cfg and work as a voter (pro version only)
- (master) mfsrmsnapshot will remove files without using trash
- (master+cs) added optional authorization
",50505775
391,False,True,2016-03-08T15:13:45Z,2016-04-19T09:45:19Z,"- (mount) use direct I/O as a default mode on FreeBSD (due to keep_cache bug in kernel/fuse)
",50505775
392,False,True,2016-03-08T15:14:19Z,2016-04-19T09:44:55Z,"- (cgi+cli) added much more info for master in ELECT state (pro version only)
- (master+cgi+cli) added temporarily removing chunkservers in master in ELECT state (pro version only)
- (cgi) fixed bug in ChunkServers list (heavy load/internal rebalance)
",50505775
393,False,True,2016-03-08T15:14:41Z,2016-04-19T09:44:06Z,"- (cgi+cli) fixed UNKNOWN state for ""marked for removal"" readiness
- (mount) added protection from releasing inode memory too early in reading module
- (mount) use direct I/O as a default mode on Mac OS X (due to keep_cache bug in kernel/fuse)
",50505775
394,False,True,2016-03-08T15:14:56Z,2016-04-19T09:43:03Z,"- (mount) fixed rare case when request memory was used after being freed.
",50505775
395,False,True,2016-03-08T15:17:10Z,2016-04-19T09:42:32Z,"- (cgi+cli) fixed displaying info when there are no active masters (intr. in 3.0.67)
- (mount+common) refactoring code to be Windows ready
- (mount) added option 'mfsflattrash' (makes trash look like before version 3.0.64)
- (mount) added fixes for NetBSD (patch contributed by Tom Ivar Helbekkmo)
- (master) fixed emptying trash issue (intr. in 3.0.64)
- (master) fixed possible segfault in chunkservers database (intr. in 3.0.67)
- (master) changed trash part choice from nondeterministic to deterministic
",50505775
396,False,True,2016-03-08T15:18:58Z,2016-04-19T09:39:41Z,"- (master+cgi+cli) added global 'umask' option to exports.cfg
- (all) changed address of FSF in GPL licence text
- (debian) removed obsolete conffiles
- (debian) fixed copyright file
- (mount) fixed parsing mfsmount.cfg (system options like nodev,noexec etc. were ommited)
- (master) changed way how cs internal rebalance state is treated by master (as 'grace' state instead of 'overloaded')
- (mount) fixed bug in read module (setting etab after ranges realloc)
- (tools) removed obsoleted command 'mfssnapshot'
- (master) fixed 'segfault' in rare case (removing flock with non-existent waiting session)
",50505775
397,False,True,2016-03-09T11:49:17Z,2016-03-09T11:51:49Z,"- (master) fixed rebalance replication (check for all chunk copies for destination - not only valid)
- (master+mount) new mechanism for atime+mtime setting during I/O
- (master+mount) new I/O synchronization between different mounts (with cache invalidation)
- (master+mount) new chunk number/version cache (with automatic invalidation from master)
- (master) added mapping chunkserver IP classes (allow to have separate network for I/O and separate for other activity)
- (master) fixed status returned by writechunk after network down/up
- (master) changed trashtime from seconds to hours
- (master) added METADATA_SAVE_FREQ option (allow to save metadata less frequently than every hour)
- (master) added using in emergency (endangered chunks) all available servers for replication (even overloaded and being maintained)
- (master) added using chunkservers in 'internal rebalance' state in case of deleting chunks
- (all) spell check errors fixed (patch contributed by Dmitry Smirnov)
",50505775
398,False,True,2016-03-08T15:19:49Z,2016-03-08T15:23:32Z,"- (master) fixed restoring ARCHCHG from changelog
- (cli+cgi) fixed displaying master list with followers only (pro version only)
- (master) added using size and length quota to fix disk usage values (statfs)
- (master) fixed xattr bug which may lead to data corruption and segfaults (intr. in 2.1.1)
- (master) added 'node_info' packet
- (tools) added '-p' option to 'mfsdirinfo' - 'precise mode'
- (master) fixed edge renumeration
- (master) added detecting of wrong edge numbers and force renumeration in such case
",50505775
399,False,False,2016-03-04T15:40:58Z,2016-03-04T15:45:33Z,"- (master) added METADATA_SAVE_FREQ option (allow to save metadata less frequently than every hour)
",50505775
400,False,False,2016-02-24T02:42:04Z,2016-02-24T02:47:51Z,"- (master) fixed status returned by writechunk after network down/up
",50505775
401,False,False,2016-02-24T02:41:30Z,2016-02-24T02:46:04Z,"- (master) fixed initialization of ATIME_MODE
",50505775
402,False,False,2016-02-24T02:36:08Z,2016-02-24T02:45:05Z,"- (master) added ATIME_MODE option to set atime modification behaviour
- (master) added using size and length quota to fix disk usage values (statfs)
- (all) changed address of FSF in GPL licence text
- (debian) removed obsolete conffiles
- (debian) fixed copyright file
- (mount) fixed parsing mfsmount.cfg (system options like nodev,noexec etc. were ommited)
- (tools) removed obsoleted command 'mfssnapshot'
",50505775
403,False,False,2016-02-01T11:16:09Z,2016-02-01T11:18:40Z,"- (mount) fixed setting file length in write module during truncate (fixes ""git svn"" case)
",50505775
404,False,False,2016-01-27T16:04:45Z,2016-01-27T16:12:32Z,"- (systemd) fixed typo in mfscgiserv service file
",50505775
405,False,False,2016-01-27T16:05:21Z,2016-01-27T16:08:56Z,"- (master+supervisor) added metaid check (pro version only)
- (master) added rejection of followers with incorrect meta version (pro version only)
- (mount) added new mechanism for sustaining working directories (replaces mechanism added in 2.0.74)
- (mount) create in deleted directory returns EACCES only in OS X (ENOENT in other systems)
- (cli) fixed show exports in plain mode
- (master) added sending metaid after switching from ELECT to LEADER (pro version only)
- (master) removed option '-e' from GPL edition (only makes sense in pro version)
- (master+cs) added sending metaid to cs in ELECT state (pro version only)
- (master) improved metaid generation method
",50505775
406,False,False,2016-01-27T16:05:40Z,2016-01-27T16:07:55Z,"- (mount) use direct I/O as a default mode on FreeBSD and Mac OS X (due to keep_cache bug in kernel/fuse)
",50505775
407,False,False,2020-02-18T13:48:18Z,2020-02-18T20:13:09Z,"## Features

- Generic preprocessor integration to allow inclusion of any preprocessor supporting chunking.
- Dark mode added.

## Bugfixes

- Fixed increasing the superhashlist cracked count if there are cracks running one of the hashlists alone.
- Fixed hidden superhashlists on task creation page due to filtering.
- Fixed reporting result of health check which resulted in endless loop depending on the used IDs.
- Fixed reporting outdated speed on tasks page when agent is put inactive directly.
- Fixed recalculation of benchmark when changing chunk time.
- Fixed discord notification to work again.
- Fixed missing index structure on speed measurements table.

## Enhancements

- Agents can be assigned to tasks via user API.
- Server can be configured to provide 'isComplete' flag on the user API when requesting all tasks.
- Certain agent errors can be whitelisted to be completely ignored (for such who don't affect the running).
- Hashlists can be moved to other Access Groups after creation.
- Health checks can now be deleted.
- API keys can get masked if admin is not assigned to them.
- Agent data for temperature and util are split into separate graphs and have more different colors.
- Files can now be selected for either the cracker task or the preprocessor and are filled in the corresponding field.
- Included new Hashcat modes included in newest beta.
- Adjusted to new format of Hashcat printing cracked WPA hashes.
- Adjusted to PMKID handling of Hashcat.",73367610
408,False,False,2019-06-25T13:43:25Z,2019-06-25T13:44:09Z,"## Bugfixes

- Fixed wrong task speed summation for task overview page.
- Fixed error on hashlist hash retrieval.
- Fixed XSS on hashes view page when printing a hashlist.
- Fixed missing check for blacklisted characters when editing task.
- Fixed issue with creating a preconfigured task from the API.
- Fixed wrong rendering of forms when showing supertasks on hashlist pages.
- Fixed wrong reporting of speed on tasks overview due to cached speeds.
- Fixed wrong search value of tasks list on hashlist details page.
- Fixed missing update of cracked count for superhashlists.
- Fixed listing of hashlists and hashes of lists which should not be accessible by user.

## Enhancements

- Temperature and util thresholds for agent status page can be configured.
- User API can provide all cracks for a given task.
- User API provides information if task is complete or not.
- User API can provide all cracks for a given hashlist.
- Support for new Hashcat versions without 32/64-bit naming.",73367610
409,False,False,2018-11-21T15:17:45Z,2018-11-21T15:27:41Z,"## Bugfixes

- Fixed createHashlist API call with wrong brain parameter conversion.
- Fixed createUser API call with wrong amount of parameters.
- Fixed applying supertasks directly from hashlist view.
- Fixed wrong saving of build number if it didn't exist.

## Updating

Please read the notes regarding updating for newer Hashtopolis version on the 0.10.0 release: https://hashtopolis.org/thread-41.html",73367610
410,False,False,2018-11-16T16:24:17Z,2018-11-16T17:00:55Z,"## Features

- Integration of Hashcat Brain feature.
- Speed data is kept and can be shown in graphs for tasks.
- Agents can automatically de-register if allowed on the server.
- Agent updates can now automatically be retrieved, based on selected update track.
- Update scripts in the future can be handled differently. Applying updates is easier as there is a build number.

## Bugfixes

- Fixed wrong percentage in case of big tasks where percentage was close to 0.
- Rule splitting can only happen if at least two subparts get created afterwards.
- Fixed filesize calculation for temporary files after rule splitting.

## Enhancements

- In case of client errors the corresponding chunk now also is saved if available.
- Make more clear naming on rule splitting tasks, rules have an empty line at the end to increase readability.

Additional information about the release can be found in [This Post](https://hashtopolis.org/thread-41.html)",73367610
411,False,False,2018-11-05T14:48:28Z,2018-11-05T15:04:55Z,"## Features

- The server saves the crackpos for hash founds given by hashcat.
- Trimming of chunks can be disabled so a chunk is always run fully again (or splitted if it is too large).
- Supertasks can now can be created by specifying a base command and iterate over a selection of files to be placed in the command.
- Notes can be added to hashlists.
- Added optional trace logging of actions from the client API to get more information in case of failures.
- Slow hashes are marked, so the client can decide if piping could make sense for this hash type.
- Agents can run health checks to determine if all agents are running correctly.

## Bugfixes

- Fixed GPU data graph when having multiple agents.
- Fixed assignment issue with subtasks of supertasks if they were in the same supertask.
- Fixed that cracker types cannot be deleted when there are supertasks using this type.

## Enhancements

- Telegram notifications can now completely be configured via server config and also can be used through proxies.
- Peppers of Encryption.class.php and CSRF.class.php were moved out of the files to make updating easier.
- When importing supertasks it can be selected if they should use the optimized flag and which benchmark type should be used.
- Subtasks are only loaded when being viewed to speed up loading of the tasks page.
- Changed type of the hash column to TEXT to make sure to handle all the long hashes. It should not affect speed as long as there is not a multi-million hashlist.
- Preconfigured task attack commands can be edited after creation.
- If needed it can be set that the server should also distribute tasks with priority 0.

Additional information about the release can be found in [This Post](https://hashtopolis.org/thread-8.html).",73367610
412,False,False,2018-08-31T08:54:26Z,2018-08-30T15:21:39Z,"## Features

- The server can store sent debug output from Hashcat sent by the agent.
- Files now also are associated to an Access Group to control the visibility of files.
- Agent data about device temperature and util is collected and can be viewed on the server.
- Notes can be added to tasks
- Static chunking (if for some reasone a fixed number of chunks or static chunk size should be used for a task)
- The server can provide a list of deleted filenames to the agent when he asks for.
- Tasks can now be copied to preconfigured tasks and preconfigured tasks can also be copied to preconfigured tasks.
- A test framework was added to run automated tests on Travis.
- To make sure rules are applied before rejecting, piping can be enforced.
- Added Notification type for Slack.

## Enhancements

- Task attack commands can be changed after creation, e.g. to fix typos
- Switch between tasks and archived ones is easier
- Archived tasks can be deleted at once
- Task priority can now be set directly in the task creation form.

## Bugfixes

- New task creation page now also shows the other file type.
- New file creation with the user API now takes the right file type.
- Vouchers are tested for uniqueness on creation to avoid duplicated ones.
- Disabling rule splitting when having a prince task.
- Fixed non-working secret checkbox for hashlists.",73367610
413,False,False,2018-08-17T08:24:00Z,2018-08-17T08:29:53Z,"## Bugfixes

- Fixed permission check for file downloads with URLs from the user API
- Fixed issue with creating supertasks from preconfigured task list
- Fixed creation of tasks from preconfigured tasks out of the hashlist view
- Fixed mask import
- Fixed hiding of mask imports in preconfigured task list on hashlist page",73367610
414,False,False,2018-08-08T18:20:02Z,2018-08-08T18:21:20Z,"## Features

- Tasks which are recognized containing large rule files and not giving good benchmarks result in splitting into subtasks
- Most of the tables can now be easily ordered and searched with the datatables plugin
- Agent Errors can be handled better
- New User API allowing access to all functions without the webinterface via simple JSON commands.
- Added new filetype (Other) for all non rules/wordlist files like hashcat charsets etc.
- File types can be edited of existing files.
- Tasks can now be archived instead of being deleted.

## Enhancements

- Width of the container is increased to have more space on large screens.
- Standard buttons have now icons instead of text to use less space.
- Hashcat is configured already as crack to make it easier for users to get started.

## Bugfixes

- Using correct function to get superhashlistId on zapping from webinterface.
- Zapping from the website will now also issue zaps for non-salted hashlists.
- Fixed zapping querying on progress sending from agent to also match for agent null values.
",73367610
415,False,False,2018-07-11T11:36:17Z,2018-07-11T11:37:14Z,"## Features

- Added autofocus for login field
- Added fine grained permission management
- Updated Bootstrap and jQuery to newest versions
- Added Icons instead of images

## Bugfixes

- Export of founds of binary hashlists fixed
- DB Connection check during installation is now tested correctly",73367610
416,False,False,2018-03-27T16:36:33Z,2018-03-27T15:13:25Z,"## Bugfixes

- Fixed missing file assignments when applying preconfigured tasks from hashlists view (issue #354)
- Fixed cracker binary relation error when applying supertasks from hashlist view
- Fixed XSS vulnerability with the login forward variable
- Session cookies have the httpOnly flag set
- Fixed file upload which allowed upload of file:// data and reading it
- Fixed renaming of files which allowed renaming them to other directories and execute them
- Fixed renaming/uploading of files which allowed to override hidden files (e.g. .htaccess file)
",73367610
417,False,False,2018-03-22T10:32:38Z,2018-03-22T10:34:35Z,"## Large Update

- Complete task management backend rewritten
- Improved performance when handling cracked hashes
- Added Groups for more detailed access control
- Including new python client
- Compatibility with generic crackers
- More configuration options added
- Cracker version management changed

## New Features

- Tasks now have a cracks per minute performance based on total spent time

## Bugfixes

- Fixed dependency problem on user deletion
- Fixed issue when agents got deleted which had completed at least one chunk
- Fixed conflicts on $_POST data agent vs. agentId
- Fixed ETA and spent time for tasks
- Error message which was always shown when adding new hash types fixed",73367610
418,False,True,2018-03-02T11:27:47Z,2018-03-02T11:50:51Z,"## Large Update

- Complete task management backend rewritten
- Improved performance when handling cracked hashes
- Added Groups for more detailed access control
- Including new python client
- Compatibility with generic crackers
- More configuration options added
- Cracker version management changed

## Bugfixes

- Error message which was always shown when adding new hash types fixed

## Please note

Due to a current change of Hashcat 4.1.0 in relative paths on windows, Hashcat 4.1.0 on windows can currently NOT be used with Hashtopolis. Lower versions and other operating systems should run without problems.",73367610
419,False,False,2017-10-21T16:38:09Z,2017-10-21T16:39:19Z,"## New Features

- Added telegram bot notification
- Supertasks can now also be applied when viewing hashlist details (similar to preconfigured tasks)

## Bugfixes

- Notification display fixed
- Updated problem where agents were looping when tasks go over 100%

## Technical

- Fixed warnings during found import
- Fixed edge case where it could happen that agents started to loop after a task when no new task was available
- Pre-crack import warns when too long plaintexts are in the import file
- Implemented missing ownAgentError notification execution",73367610
420,False,False,2017-07-31T10:53:45Z,2017-07-31T10:55:52Z,"## New Features

- Supertask imports can now be set to be small tasks for every subtask

## Bugfixes

- Fixed broken agent download

## Technical

- Typos in constants fixed
- Tasks can also be deleted from the detailed view
- Fixed update to 0.4.0 when adding taskType column
- Supertasks are getting default priority from the subtasks
- Fixed DBA issue with handling invalid input
- Fixed additional vulnerabilities reported",73367610
421,False,False,2017-07-27T20:55:28Z,2017-07-27T20:57:41Z,"## Bugfixes

- Various vulnerabilities (CVE-2017-11680, CVE-2017-11681, CVE-2017-11682) fixed, see [issue #241](https://github.com/s3inlc/hashtopussy/issues/241)

## Technical

- Improved code handling, constants can be used in templates.",73367610
422,False,False,2017-07-22T15:29:34Z,2017-07-22T15:37:21Z,"## New Features

- Renewed status page, gives now JSON formatted information which can be parsed however the user wants to.
- added search page to search for hashes and plains
- '-r' is now automatically prepended when selecting rule files on task creation
- added help page with some helpful links
- Left hashlists can be downloaded now
- Added Yubikey OTP login
- Supertasks added
- HCmask style can be imported

## Technical

- DB connection details now are stored in a file which is not in repository (a template is provided instead). This avoids conflicts on updates in `inc/load.php`
- Hash length is increased to 1024 (old 512)
- Added special case when handling pre-crack import of WPA as they are not matched via the hash but the ESSID instead.
- Added new hashtypes from Hashcat
- Server hostname can be overridden in config

## Client

- Client updated to version 0.43.19 
- Fixed debug not showing hashcat parameters on calls
- Improve error handling on keyspace measuring, client will now signal the server to pause agent instead of crash
- Added more information for task assigning, client will now display task and hashlist on task get
- Fixed slow file downloading issue
- Changed the way hashcat version is queried (should work properly on linux/mac)",73367610
423,False,False,2017-04-24T11:22:30Z,2017-04-24T11:24:23Z,"## Client

- Client updated to version 0.43.13

**Client updates:**
- Added support for rejected variable from hashcat 3.5.0 (backwards compatible)
- Adjust TLS and SSL3 flags for better compatibility on strict enforcement
- Added hashcat update checks between chunks (no client restarts needed)
- Prettify the status outputs and display more information between tasks
- Fixed a crash/loop when multiple cracks in WPA
- Adjusted the way hashcat binary is queried for the version
- Increased json processing limit to 2GB streams

## Bugfixes

- fixed not sending notifications when using pre-task creation from hashlist details view
- 'Delete Finished' button now deletes also tasks of hashlists which are completely cracked
- on user deletion depending sessions now also get deleted
- fixed problems on task assignment where priorities were compared wrong
- clear all doesn't fail anymore when task list is empty
- fixed problem that on small tasks multiple agents got assigned and assignments were deleted immediately
- fixed issue that some agents suddenly got a very large chunk

## Features

- Added possibility to change isCpuOnly and isSmall on tasks after creation

## Technical

- removed old installation code which was used to upgrade Hashtopus to Hashtopussy 0.1.0
- reduced size of task progress image",73367610
424,False,False,2017-03-19T12:22:44Z,2017-03-19T12:24:29Z,"Update for version 0.3.0 containing some bugfixes and improvements.

**Client updates (0.43.7):**

* Fixed bug with zapping (incorrect zap path)
* Aligned % to 2 decimal places
* Aligned speed to 2 decimal places
* Display message when no new task and getting chunk
* Added consume for stop signal from server (when HL is fully cracked)
* Workaround to force progress to be 100 when STATUS4 from hashcat (possible race condition in hashcat may not guarantee this via the readout)",73367610
425,False,False,2017-03-15T13:10:58Z,2017-03-15T13:13:50Z,"Included:

* tasks can skip a given keyspace at the beginning
* chunk activity is now paged for large number of chunks
* added notifications
* completed working zap feature
* various bug fixes",73367610
426,False,False,2017-03-08T13:59:17Z,2017-03-08T15:04:47Z,,73367610
427,False,True,2017-03-06T09:49:52Z,2017-03-06T09:51:32Z,"Containing all new features which will be contained in v0.2.0:

* changeable MySQL port
* renaming of files
* WPA and other binary hashes working
* various bugfixes",73367610
428,False,True,2017-03-02T19:43:32Z,2017-03-02T21:19:26Z,,73367610
